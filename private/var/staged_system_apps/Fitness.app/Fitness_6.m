uint64_t sub_100473184()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  swift_release();
  swift_release();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1004731FC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  sub_1000AFA94(&qword_10095D440);
  v5 = (int *)(sub_1000AFA94(&qword_10095D448) - 8);
  uint64_t v6 = *(void *)(*(void *)v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t v24 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100761B10;
  *(unsigned char *)(v8 + v7) = 0;
  unint64_t v9 = v8 + v7;
  LocalizedStringResource.init(stringLiteral:)();
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v11 = v27;
  v10(v3, 1, 1, v27);
  uint64_t v25 = v4 + 56;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v9 + v6) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v11);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v12 = v6;
  v13 = (unsigned char *)(v9 + 2 * v6);
  unint64_t v26 = v9;
  v21 = &v13[v5[14]];
  unsigned char *v13 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v14 = v27;
  v10(v3, 1, 1, v27);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v9 + 3 * v6) = 3;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v14);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v15 = v26;
  v16 = (unsigned char *)(v26 + 4 * v6);
  v21 = &v16[v5[14]];
  unsigned char *v16 = 4;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v14);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v15 + 5 * v6) = 5;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v17 = v27;
  v10(v3, 1, 1, v27);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v15 + 6 * v12) = 6;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v17);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  v22 = v5;
  uint64_t v23 = v12;
  v12 *= 8;
  unint64_t v18 = v26;
  *(unsigned char *)(v26 + 7 * v23) = 7;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v17);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v18 + v12) = 8;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v17);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v18 + v12 + v23) = 9;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v17);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_100523C64(v24);
}

unint64_t sub_1004739E4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1000AFA94(&qword_10095D430);
  uint64_t v6 = (int *)(sub_1000AFA94(&qword_10095D438) - 8);
  uint64_t v7 = *(void *)(*(void *)v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v9 = swift_allocObject();
  uint64_t v15 = v9;
  *(_OWORD *)(v9 + 16) = xmmword_1007526C0;
  unint64_t v10 = v9 + v8;
  *(unsigned char *)(v9 + v8) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v11(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  v13[1] = v10 + v7 + v6[14];
  uint64_t v14 = v7;
  *(unsigned char *)(v10 + v7) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v10 + 2 * v7) = 2;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v10 + 2 * v7 + v14) = 3;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_100523E88(v15);
}

unint64_t sub_100473E14(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B67D8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_100473E60()
{
  unint64_t result = qword_10095D450;
  if (!qword_10095D450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D450);
  }
  return result;
}

double sub_100473EB4(_OWORD *a1)
{
  double result = 0.0;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100473EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095D478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100473F44()
{
  unint64_t result = qword_10095D490;
  if (!qword_10095D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D490);
  }
  return result;
}

uint64_t sub_100473F98()
{
  return EnvironmentValues.openURL.getter();
}

unint64_t sub_100473FC8()
{
  unint64_t result = qword_10095D4D0;
  if (!qword_10095D4D0)
  {
    sub_1000A1370(&qword_10095D4B0);
    sub_1004746AC(&qword_10095D4D8, (void (*)(uint64_t))type metadata accessor for WorkoutStatView);
    sub_1000A132C(&qword_10095D4E0, &qword_10095D4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D4D0);
  }
  return result;
}

uint64_t sub_100474098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100474100(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100474160()
{
  return sub_10046DAC0() & 1;
}

unint64_t sub_100474180()
{
  unint64_t result = qword_10095D4F8;
  if (!qword_10095D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D4F8);
  }
  return result;
}

uint64_t sub_1004741D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10047422C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004742B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1004742DC()
{
  unint64_t result = qword_10095D590;
  if (!qword_10095D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095D590);
  }
  return result;
}

uint64_t sub_100474330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10047435C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1004743B4()
{
  unint64_t result = qword_10095D608;
  if (!qword_10095D608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D608);
  }
  return result;
}

unint64_t sub_100474408()
{
  unint64_t result = qword_10095D610;
  if (!qword_10095D610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D610);
  }
  return result;
}

uint64_t sub_10047445C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1004744B4()
{
  unint64_t result = qword_10095D638;
  if (!qword_10095D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D638);
  }
  return result;
}

unint64_t sub_100474508()
{
  unint64_t result = qword_10095D640;
  if (!qword_10095D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D640);
  }
  return result;
}

unint64_t sub_10047455C()
{
  unint64_t result = qword_10095D648;
  if (!qword_10095D648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D648);
  }
  return result;
}

unint64_t sub_1004745B0()
{
  unint64_t result = qword_10095D650;
  if (!qword_10095D650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D650);
  }
  return result;
}

unint64_t sub_100474604()
{
  unint64_t result = qword_10095D678;
  if (!qword_10095D678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D678);
  }
  return result;
}

unint64_t sub_100474658()
{
  unint64_t result = qword_10095D680;
  if (!qword_10095D680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095D680);
  }
  return result;
}

uint64_t sub_1004746AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004746F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100474720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10047474C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100474778()
{
  unint64_t result = qword_10095D6E0;
  if (!qword_10095D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D6E0);
  }
  return result;
}

uint64_t type metadata accessor for MindfulnessActivityTileDataModel()
{
  return self;
}

id sub_1004748E4()
{
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v0 setFont:v1];

  id v2 = [self secondaryLabelColor];
  [v0 setTextColor:v2];

  [v0 setScrollEnabled:0];
  [v0 setEditable:0];
  [v0 _setInteractiveTextSelectionDisabled:1];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];

  return [v0 setAdjustsFontForContentSizeCategory:1];
}

id sub_1004749F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsFooterTextView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendsFooterTextView()
{
  return self;
}

void sub_100474A4C(uint64_t a1)
{
}

uint64_t sub_100474A60()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.systemFont(ofSize:weight:design:)();
  qword_10095D838 = result;
  return result;
}

id sub_100474AC4()
{
  id result = sub_100474AE4();
  qword_10095D840 = (uint64_t)result;
  return result;
}

id sub_100474AE4()
{
  sub_1000AFA94(&qword_10095CCE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_1000AFA94(&qword_10095CCE8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1007509E0;
  sub_1000AFA94(&qword_10095CCF0);
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  uint64_t v3 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 40) = 38;
  uint64_t v4 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 56) = 1;
  uint64_t v5 = UIFontDescriptorFeatureSettingsAttribute;
  id v6 = v3;
  id v7 = v4;
  *(void *)(v1 + 32) = sub_100522C50(v2);
  *(void *)(inited + 40) = v1;
  unint64_t v8 = sub_100522FF8(inited);
  if (qword_10094AC38 != -1) {
    swift_once();
  }
  id v9 = [qword_10095D838 fontDescriptor:1, 2];
  sub_1003D775C(v8);
  swift_bridgeObjectRelease();
  type metadata accessor for AttributeName(0);
  sub_10008F7C4((unint64_t *)&qword_10094B980, type metadata accessor for AttributeName);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 fontDescriptorByAddingAttributes:isa];

  [(id)qword_10095D838 pointSize];
  id v13 = [self fontWithDescriptor:v11 size:v12];

  return v13;
}

void sub_100474D2C(uint64_t a1)
{
}

void sub_100474D40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 defaultFontForTextStyle:v5];

  *a3 = v6;
}

id sub_100474DC0(uint64_t a1)
{
  return sub_100474E58(a1, &qword_10094AC30, (void **)&qword_10095D830, (void **)&qword_10095D850);
}

id sub_100474DEC()
{
  id result = [self fu_sausageFontOfSize:30.0];
  qword_10095D858 = (uint64_t)result;
  return result;
}

id sub_100474E2C(uint64_t a1)
{
  return sub_100474E58(a1, &qword_10094AC58, (void **)&qword_10095D858, (void **)&qword_10095D860);
}

id sub_100474E58(uint64_t a1, void *a2, void **a3, void **a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  id v6 = *a3;
  *a4 = *a3;

  return v6;
}

id sub_100474EB0()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager) stringWithDuration:3 durationFormat:];
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    Double.write<A>(to:)();
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v4 = self;
  NSString v5 = NSForegroundColorAttributeName;
  id result = [v4 elapsedTimeColors];
  if (result)
  {
    id v7 = result;
    id v8 = [result nonGradientTextColor];

    uint64_t v9 = sub_1000AFA94(&qword_10095D8A0);
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 64) = v9;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v10 = qword_10094AC58;
    id v11 = NSFontAttributeName;
    if (v10 != -1) {
      swift_once();
    }
    double v12 = (void *)qword_10095D858;
    *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
    *(void *)(inited + 80) = v12;
    id v13 = v12;
    sub_1000DFC2C(inited);
    id v14 = objc_allocWithZone((Class)NSAttributedString);
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v14 initWithString:v15 attributes:isa];

    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100475118(double a1)
{
  uint64_t v3 = (void *)swift_slowAlloc();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  id result = [v4 unitManager];
  if (!result)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v6 = result;
  id v7 = [result userDistanceUnitForDistanceType:1];

  void *v3 = v7;
  sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
  id v8 = (void *)static FIUIWorkoutActivityType.indoorRun.getter();
  uint64_t v9 = FIUIDistanceTypeForActivityType();

  id v10 = [v4 localizedNaturalScaleStringWithDistanceInMeters:v9 distanceType:0 unitStyle:v3 usedUnit:2 decimalTrimmingMode:a1];
  if (v10)
  {
    id v11 = v10;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v13 = self;
  id v14 = NSForegroundColorAttributeName;
  id v42 = v13;
  id result = [v13 distanceColors];
  if (!result) {
    goto LABEL_13;
  }
  NSString v15 = result;
  id v16 = [result nonGradientTextColor];

  uint64_t v17 = sub_1000AFA94(&qword_10095D8A0);
  *(void *)(inited + 40) = v16;
  uint64_t v41 = v17;
  *(void *)(inited + 64) = v17;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v18 = qword_10094AC60;
  v19 = NSFontAttributeName;
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_10095D860;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v20;
  id v21 = v20;
  sub_1000DFC2C(inited);
  id v22 = objc_allocWithZone((Class)NSAttributedString);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v22 initWithString:v23 attributes:isa];

  id result = [v4 localizedShortUnitStringForDistanceUnit:*v3];
  if (!result) {
    goto LABEL_14;
  }
  unint64_t v26 = result;
  uint64_t v27 = v25;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = xmmword_10074E640;
  *(void *)(v28 + 32) = v14;
  v29 = v14;
  id result = [v42 distanceColors];
  if (!result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v30 = result;
  id v31 = [result nonGradientTextColor];

  *(void *)(v28 + 40) = v31;
  *(void *)(v28 + 64) = v41;
  *(void *)(v28 + 72) = v19;
  uint64_t v32 = qword_10094AC40;
  v33 = v19;
  if (v32 != -1) {
    swift_once();
  }
  v34 = (void *)qword_10095D840;
  *(void *)(v28 + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(v28 + 80) = v34;
  id v35 = v34;
  sub_1000DFC2C(v28);
  id v36 = objc_allocWithZone((Class)NSAttributedString);
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v38 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v39 = [v36 initWithString:v37 attributes:v38];

  id v40 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v27];
  [v40 appendAttributedString:v39];

  return v40;
}

void sub_100475618()
{
}

id sub_100475634(double a1)
{
  id v3 = [self kilocalorieUnit];
  id v4 = [self quantityWithUnit:v3 doubleValue:a1];

  NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  id v6 = [v5 localizedStringWithActiveEnergy:v4];
  if (v6)
  {
    id v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v9 = self;
  id v10 = NSForegroundColorAttributeName;
  id result = [v9 energyColors];
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v12 = result;
  NSString v37 = v4;
  id v13 = [result nonGradientTextColor];

  uint64_t v14 = sub_1000AFA94(&qword_10095D8A0);
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v15 = qword_10094AC60;
  id v16 = NSFontAttributeName;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_10095D860;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v17;
  id v18 = v17;
  sub_1000DFC2C(inited);
  id v19 = objc_allocWithZone((Class)NSAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = [v19 initWithString:v20 attributes:isa];

  id result = [v5 localizedShortActiveEnergyUnitString];
  if (!result) {
    goto LABEL_12;
  }
  id v22 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_10074E640;
  *(void *)(v23 + 32) = v10;
  uint64_t v24 = v10;
  id result = [v9 energyColors];
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  id v25 = result;
  id v26 = [result nonGradientTextColor];

  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 64) = v14;
  *(void *)(v23 + 72) = v16;
  uint64_t v27 = qword_10094AC40;
  uint64_t v28 = v16;
  if (v27 != -1) {
    swift_once();
  }
  v29 = (void *)qword_10095D840;
  *(void *)(v23 + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(v23 + 80) = v29;
  id v30 = v29;
  sub_1000DFC2C(v23);
  id v31 = objc_allocWithZone((Class)NSAttributedString);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v31 initWithString:v32 attributes:v33];

  id v35 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v36];
  [v35 appendAttributedString:v34];

  return v35;
}

void sub_100475AF0()
{
}

void sub_100475B0C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizationKeyForEnergyBaseKey:v2];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v4 = [self mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_100475C44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackFormattingManager();
  return [super dealloc];
}

id sub_100475CC4()
{
  sub_1003D51AC();
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v1 = [self stringWithNumber:isa decimalPrecision:1 roundingMode:6];
  Class v39 = isa;
  if (v1)
  {
    objc_super v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0xE100000000000000;
    uint64_t v3 = 48;
  }
  id v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  id v13 = [v6 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, &qword_10094B778);
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10074E640;
  *(void *)(v17 + 56) = &type metadata for String;
  unint64_t v18 = sub_1000AA64C();
  *(void *)(v17 + 32) = v3;
  *(void *)(v17 + 40) = v5;
  *(void *)(v17 + 96) = &type metadata for String;
  *(void *)(v17 + 104) = v18;
  *(void *)(v17 + 64) = v18;
  *(void *)(v17 + 72) = v10;
  *(void *)(v17 + 80) = v12;
  swift_bridgeObjectRetain();
  id v19 = NSString.init(format:_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v21 = self;
  id v22 = NSForegroundColorAttributeName;
  id result = [v21 elapsedTimeColors];
  if (result)
  {
    uint64_t v24 = result;
    id v25 = [result nonGradientTextColor];

    uint64_t v26 = sub_1000AFA94(&qword_10095D8A0);
    *(void *)(inited + 40) = v25;
    *(void *)(inited + 64) = v26;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v27 = qword_10094AC38;
    uint64_t v28 = NSFontAttributeName;
    if (v27 != -1) {
      swift_once();
    }
    v29 = (void *)qword_10095D838;
    *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    *(void *)(inited + 80) = v29;
    id v30 = v29;
    sub_1000DFC2C(inited);
    id v31 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v34 = [v31 initWithString:v32 attributes:v33];

    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v19 rangeOfString:v35];
    uint64_t v38 = v37;

    if (qword_10094AC40 != -1) {
      swift_once();
    }
    [v34 addAttribute:v28 value:qword_10095D840 range:v36, v38];

    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004761A4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  unint64_t v4 = self;
  unint64_t v5 = NSForegroundColorAttributeName;
  id v6 = [v4 labelColor];
  uint64_t v7 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v8 = qword_10094AC30;
  id v9 = NSFontAttributeName;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10095D830;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v10;
  id v11 = v10;
  sub_1000DFC2C(inited);
  id v12 = objc_allocWithZone((Class)NSAttributedString);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithString:v13 attributes:isa];

  return v15;
}

id sub_100476408()
{
  id v0 = [self timeDateFormatter];
  type metadata accessor for FitnessPlusStackViewModel();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v2 = [v0 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Class v3 = Date._bridgeToObjectiveC()().super.isa;
  id v4 = [v0 stringFromDate:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._countAndFlagsBits = 9666786;
  v8._object = (void *)0xA300000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v5;
  v9._object = v7;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v11 = self;
  id v12 = NSForegroundColorAttributeName;
  id v13 = [v11 secondaryLabelColor];
  uint64_t v14 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v15 = qword_10094AC50;
  NSString v16 = NSFontAttributeName;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_10095D850;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v17;
  id v18 = v17;
  sub_1000DFC2C(inited);
  id v19 = objc_allocWithZone((Class)NSAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class v21 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [v19 initWithString:v20 attributes:v21];

  return v22;
}

unint64_t sub_1004766DC()
{
  unint64_t result = qword_10095D8A8;
  if (!qword_10095D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8A8);
  }
  return result;
}

unint64_t sub_100476734()
{
  unint64_t result = qword_10095D8B0;
  if (!qword_10095D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8B0);
  }
  return result;
}

unint64_t sub_10047678C()
{
  unint64_t result = qword_10095D8B8;
  if (!qword_10095D8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8B8);
  }
  return result;
}

unint64_t sub_1004767E4()
{
  unint64_t result = qword_10095D8C0;
  if (!qword_10095D8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8C0);
  }
  return result;
}

uint64_t sub_100476838()
{
  return sub_1004774F8(&qword_10095D8C8);
}

uint64_t type metadata accessor for WorkoutSegmentIdentifier()
{
  return self;
}

uint64_t sub_100476890()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094F098);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094F070);
  uint64_t v62 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v60 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = v15;

  uint64_t v58 = *(void *)(v1 + 64);
  AppDependency.wrappedValue.getter();
  uint64_t v17 = v63;
  uint64_t v57 = *(void *)(v1 + 16);
  EntityProperty.wrappedValue.getter();
  Measurement.value.getter();
  double v19 = v18;
  v56 = *(void (**)(char *, uint64_t))(v8 + 8);
  v56(v10, v7);
  id v20 = [v17 stringWithDuration:3 durationFormat:v19];

  uint64_t v59 = v14;
  if (v20)
  {
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v22 = v21;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = v14;
    id v22 = v16;
  }
  uint64_t v23 = v62;
  EntityProperty.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v4, &qword_10094F098);
    return v61;
  }
  else
  {
    v55 = v16;
    id v25 = v60;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v60, v4, v5);
    sub_1000AEEC8(v1 + 48, (uint64_t)v65, &qword_10095DA10);
    sub_1000AEEC8((uint64_t)v65, (uint64_t)&v66, &qword_10095DA10);
    if (v67 == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v5);
      swift_bridgeObjectRelease();
      return v61;
    }
    else
    {
      v53 = v22;
      uint64_t v26 = v66;
      id v27 = [self meterUnit];
      uint64_t v54 = v5;
      uint64_t v28 = v26;
      Measurement.value.getter();
      id v30 = [self quantityWithUnit:v27 doubleValue:v29];

      uint64_t v31 = FIUIPaceFormatForDistanceType();
      AppDependency.wrappedValue.getter();
      NSString v32 = v63;
      id v33 = v30;
      EntityProperty.wrappedValue.getter();
      Measurement.value.getter();
      double v35 = v34;
      v56(v10, v7);
      id v36 = [v32 localizedPaceStringWithDistance:v33 overDuration:v31 paceFormat:v26 distanceType:v35];

      if (v36)
      {
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Class v39 = v38;

        uint64_t v40 = v59;
      }
      else
      {
        Class v39 = v55;
        swift_bridgeObjectRetain();
        uint64_t v40 = v59;
        uint64_t v37 = v59;
      }
      AppDependency.wrappedValue.getter();
      uint64_t v41 = v63;
      uint64_t v42 = v54;
      v43 = v60;
      Measurement.value.getter();
      id v44 = [v41 localizedStringWithDistanceInMeters:v28 distanceType:1 unitStyle:];

      uint64_t v45 = v62;
      if (v44)
      {
        uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v47 = v46;
        swift_bridgeObjectRelease();
      }
      else
      {
        v47 = v55;
      }
      v63 = (void *)v40;
      v64 = v47;
      v48._countAndFlagsBits = 548913696;
      v48._object = (void *)0xA400000000000000;
      String.append(_:)(v48);
      v49._countAndFlagsBits = v61;
      v49._object = v53;
      String.append(_:)(v49);
      swift_bridgeObjectRelease();
      v50._countAndFlagsBits = 548913696;
      v50._object = (void *)0xA400000000000000;
      String.append(_:)(v50);
      v51._countAndFlagsBits = v37;
      v51._object = v39;
      String.append(_:)(v51);

      swift_bridgeObjectRelease();
      uint64_t v24 = v63;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v42);
    }
  }
  return (uint64_t)v24;
}

uint64_t sub_100476E58()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t v1 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094FF10);
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  qword_100998050 = v0;
  *(void *)algn_100998058 = v1;
  qword_100998060 = result;
  return result;
}

uint64_t sub_100476F4C()
{
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v0, qword_100998068);
  sub_1000876DC(v0, (uint64_t)qword_100998068);
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_100476FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  __chkstk_darwin(v9);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  v19._countAndFlagsBits = 0x20746E656D676553;
  v19._object = (void *)0xE800000000000000;
  uint64_t result = EntityProperty.wrappedValue.getter();
  if (__OFADD__(v18, 1))
  {
    __break(1u);
  }
  else
  {
    ++v18;
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v17 = a1;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v19);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
    LocalizedStringResource.init(stringInterpolation:)();
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    v15._countAndFlagsBits = sub_100476890();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
    LocalizedStringResource.init(stringInterpolation:)();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
    return DisplayRepresentation.init(title:subtitle:image:)();
  }
  return result;
}

uint64_t sub_1004772D4@<X0>(void *a1@<X8>)
{
  if (qword_10094AC68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_100998058;
  uint64_t v3 = qword_100998060;
  *a1 = qword_100998050;
  a1[1] = v2;
  a1[2] = v3;
  swift_retain();
  swift_retain();

  return swift_retain();
}

unint64_t sub_100477368()
{
  unint64_t result = qword_10095D8D0;
  if (!qword_10095D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8D0);
  }
  return result;
}

unint64_t sub_1004773C0()
{
  unint64_t result = qword_10095D8D8;
  if (!qword_10095D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8D8);
  }
  return result;
}

unint64_t sub_100477418()
{
  unint64_t result = qword_10095D8E0;
  if (!qword_10095D8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8E0);
  }
  return result;
}

unint64_t sub_100477470()
{
  unint64_t result = qword_10095D8E8;
  if (!qword_10095D8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8E8);
  }
  return result;
}

uint64_t sub_1004774C4()
{
  return sub_1004774F8(&qword_10095D8F0);
}

uint64_t sub_1004774F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WorkoutSegmentIdentifier();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100477538@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AC70 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998068);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1004775E4()
{
  unint64_t result = qword_10095D8F8;
  if (!qword_10095D8F8)
  {
    sub_1000A1370(&qword_10095D900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D8F8);
  }
  return result;
}

uint64_t sub_100477640(uint64_t a1)
{
  unint64_t v2 = sub_10031E610();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100477690()
{
  unint64_t result = qword_10095D908;
  if (!qword_10095D908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D908);
  }
  return result;
}

uint64_t sub_1004776E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100476FB8(a1);
}

uint64_t sub_100477728(uint64_t a1)
{
  unint64_t v2 = sub_100477470();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100477774(char *a1, char *a2)
{
  return sub_10047E8AC(*a1, *a2);
}

Swift::Int sub_100477780()
{
  return Hasher._finalize()();
}

uint64_t sub_100477804()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100477874()
{
  return Hasher._finalize()();
}

uint64_t sub_1004778F4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6880, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100477954(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x4974756F6B726F77;
  if (*v1) {
    uint64_t v2 = 0x7865646E69;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100477994()
{
  if (*v0) {
    return 0x7865646E69;
  }
  else {
    return 0x4974756F6B726F77;
  }
}

uint64_t sub_1004779D0@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6880, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100477A34(uint64_t a1)
{
  unint64_t v2 = sub_100479C34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100477A70(uint64_t a1)
{
  unint64_t v2 = sub_100479C34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100477AAC()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1004774F8(&qword_10095D9E8);
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  static String.Encoding.utf8.getter();
  uint64_t v8 = String.init(data:encoding:)();
  if (v9)
  {
    uint64_t v10 = v8;
    sub_1000939A4(v5, v7);
  }
  else
  {
    sub_100479BE0();
    swift_allocError();
    swift_willThrow();
    sub_1000939A4(v5, v7);
    static os_log_type_t.error.getter();
    uint64_t v1 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_10074E640;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA64C();
    *(void *)(v2 + 32) = 0xD000000000000016;
    *(void *)(v2 + 40) = 0x80000001007BDC60;
    id v3 = v1;
    uint64_t v4 = _convertErrorToNSError(_:)();
    *(void *)(v2 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_100954710);
    *(void *)(v2 + 104) = sub_1002E10E4();
    *(void *)(v2 + 72) = v4;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v10 = 0;
  }
  swift_release();
  return v10;
}

uint64_t sub_100477D20(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000AFA94(&qword_10095DA08);
  uint64_t v13 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_100479C34();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v13;
    char v15 = 0;
    *(void *)(v1 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v1 + 24) = v9;
    char v14 = 1;
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v5);
    *(void *)(v3 + 32) = v10;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_100477F10(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10095D9F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10007E4EC(a1, a1[3]);
  sub_100479C34();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100478070()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v4 = String.data(using:allowLossyConversion:)();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1004774F8(&qword_10095D9E0);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_100182378(v4, v6);
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {
      swift_release();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100478368@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B68D0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

uint64_t sub_1004783BC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1004783F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100477D20(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_10047844C(void *a1)
{
  return sub_100477F10(a1);
}

uint64_t sub_100478470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100477AAC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10047849C()
{
  return sub_100477AAC();
}

uint64_t sub_1004784C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100478070();
  *a1 = result;
  return result;
}

uint64_t sub_1004784E8()
{
  return sub_1004774F8(&qword_10095D910);
}

Swift::Int sub_10047851C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v1 + 32));
  return Hasher._finalize()();
}

void sub_100478590()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v1 + 32));
}

Swift::Int sub_1004785EC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v1 + 32));
  return Hasher._finalize()();
}

BOOL sub_10047865C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) == *(void *)(*a2 + 16) && *(void *)(*a1 + 24) == *(void *)(v3 + 24)) {
    return *(void *)(v2 + 32) == *(void *)(v3 + 32);
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v5) {
    return *(void *)(v2 + 32) == *(void *)(v3 + 32);
  }
  return result;
}

uint64_t destroy for WorkoutSegmentEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for WorkoutSegmentEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutSegmentEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutSegmentEntity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutSegmentEntity()
{
  return &type metadata for WorkoutSegmentEntity;
}

uint64_t sub_100478944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void (*a8)(uint64_t, uint64_t)@<X7>, void *a9@<X8>, uint64_t a10)
{
  v64 = a8;
  uint64_t v71 = a7;
  int v74 = a6;
  uint64_t v73 = a5;
  uint64_t v78 = a4;
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  uint64_t v63 = a1;
  v72 = a9;
  uint64_t v62 = a10;
  uint64_t v10 = sub_1000AFA94(&qword_10094F088);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v70 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v69 = (uint64_t)&v58 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094F078);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v68 = (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v67 = (uint64_t)&v58 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_10094F098);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v66 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v65 = (uint64_t)&v58 - v21;
  uint64_t v77 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v22 = *(void *)(v77 - 8);
  uint64_t v23 = __chkstk_darwin(v77);
  uint64_t v61 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v76 = (char *)&v58 - v25;
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v26 - 8);
  sub_1000AFA94(&qword_10094F0A8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v27 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B0);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0C0);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v29 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0E0);
  uint64_t v31 = v30;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v32 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094D340);
  type metadata accessor for AppDependencyManager();
  long long v82 = 0u;
  long long v83 = 0u;
  uint64_t v84 = 0;
  swift_retain();
  static AppDependencyManager.shared.getter();
  uint64_t v33 = AppDependency.__allocating_init(key:manager:)();
  type metadata accessor for WorkoutSegmentIdentifier();
  double v34 = (void *)swift_allocObject();
  uint64_t v35 = v62;
  v34[2] = v64;
  v34[3] = v35;
  uint64_t v36 = v63;
  v34[4] = v63;
  uint64_t v81 = v33;
  *(void *)&long long v82 = v36;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v59 = v31;
  swift_retain();
  uint64_t v75 = v32;
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v29;
  swift_release();
  uint64_t v38 = v28;
  swift_release();
  uint64_t v39 = v27;
  swift_release();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v41 = v76;
  uint64_t v42 = v77;
  v40(v76, v80, v77);
  v40(v61, (uint64_t)v41, v42);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v43 = v59;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v44 = v38;
  EntityProperty.wrappedValue.setter();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  uint64_t v63 = v22 + 8;
  v64 = v45;
  v45((uint64_t)v76, v42);
  swift_release();
  swift_release();
  uint64_t v46 = v43;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v47 = v65;
  sub_1000AEF2C(v79, v65, &qword_10094F098);
  sub_1000AEF2C(v47, v66, &qword_10094F098);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v48 = v37;
  swift_retain();
  swift_retain();
  uint64_t v49 = v75;
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18(v47, &qword_10094F098);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v50 = v67;
  sub_1000AEF2C(v78, v67, &qword_10094F078);
  sub_1000AEF2C(v50, v68, &qword_10094F078);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18(v50, &qword_10094F078);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v60 = v39;
  swift_release();
  swift_release();
  uint64_t v51 = v71;
  uint64_t v52 = v69;
  sub_1000AEF2C(v71, v69, &qword_10094F088);
  sub_1000AEF2C(v52, v70, &qword_10094F088);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v53 = v81;
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18(v52, &qword_10094F088);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = v60;
  swift_release();
  swift_release();
  sub_10008DB18(v51, &qword_10094F088);
  sub_10008DB18(v78, &qword_10094F078);
  sub_10008DB18(v79, &qword_10094F098);
  v64(v80, v77);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v57 = v72;
  uint64_t v56 = v73;
  void *v72 = v34;
  v57[1] = v54;
  v57[2] = v44;
  v57[3] = v48;
  v57[4] = v46;
  v57[5] = v49;
  v57[6] = v56;
  *((unsigned char *)v57 + 56) = v74 & 1;
  v57[8] = v53;
  return result;
}

__n128 sub_100479268@<Q0>(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v82 = a3;
  long long v83 = a4;
  uint64_t v81 = a2;
  uint64_t v7 = sub_1000AFA94(&qword_10094F0A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v78 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095D9C8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v73 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v75 = (char *)&v71 - v12;
  uint64_t v77 = sub_1000AFA94(&qword_10095D9D0);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  v72 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10094F088);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v84 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v88 = (uint64_t)&v71 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_10094F078);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v86 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_1000AFA94(&qword_10094F098);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v85 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = sub_1000AFA94(&qword_10094F070);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  uint64_t v30 = sub_1000AFA94(&qword_10094F110);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  v87 = v22;
  v31(v22, 1, 1, v30);
  id v32 = [a1 distance];
  id v74 = a1;
  if (v32)
  {
    uint64_t v33 = v32;
    id v34 = [self meterUnit];
    [v33 doubleValueForUnit:v34];
    double v36 = v35;

    if (v36 <= 0.0)
    {

      a1 = v74;
    }
    else
    {
      id v37 = [self meters];
      sub_10007E2D8(0, &qword_10094F128);
      uint64_t v71 = v31;
      uint64_t v38 = (uint64_t)v27;
      uint64_t v39 = v85;
      Measurement.init(value:unit:)();
      sub_10008DB18(v38, &qword_10094F098);
      v29((char *)v39, 0, 1, v28);
      uint64_t v40 = v39;
      uint64_t v27 = (char *)v38;
      sub_1000AEEC8(v40, v38, &qword_10094F098);
      a1 = v74;
      [v74 elapsedTime];
      id v41 = [self metersPerSecond];
      sub_10007E2D8(0, &qword_10094F108);
      uint64_t v42 = v86;
      Measurement.init(value:unit:)();

      uint64_t v43 = (uint64_t)v87;
      sub_10008DB18((uint64_t)v87, &qword_10094F078);
      v71((char *)v42, 0, 1, v30);
      sub_1000AEEC8(v42, v43, &qword_10094F078);
    }
  }
  uint64_t v44 = sub_1000AFA94(&qword_10094F090);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
  v45(v88, 1, 1, v44);
  id v46 = [a1 activeEnergy];
  if (!v46)
  {
    uint64_t v53 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, 1, 1, v77);
LABEL_11:
    sub_10008DB18(v53, &qword_10095D9C8);
    uint64_t v54 = v79;
    uint64_t v55 = (uint64_t)v78;
    goto LABEL_16;
  }
  uint64_t v47 = v46;
  id v48 = [v46 _foundationMeasurement];

  if (v48)
  {
    sub_10007E2D8(0, &qword_10095D9D8);
    uint64_t v49 = (uint64_t)v73;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = 0;
    uint64_t v51 = v77;
    uint64_t v52 = v76;
    uint64_t v53 = (uint64_t)v75;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v51 = v77;
    uint64_t v52 = v76;
    uint64_t v53 = (uint64_t)v75;
    uint64_t v49 = (uint64_t)v73;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v49, v50, 1, v51);
  sub_1000AEEC8(v49, v53, &qword_10095D9C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v51) == 1) {
    goto LABEL_11;
  }
  uint64_t v56 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v72, v53, v51);
  uint64_t v57 = (void *)Measurement.unit.getter();
  self;
  if (swift_dynamicCastObjCClass())
  {
    Measurement.value.getter();
    sub_10007E2D8(0, &qword_10094F130);
    uint64_t v58 = v84;
    Measurement.init(value:unit:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v51);
    uint64_t v59 = v88;
    sub_10008DB18(v88, &qword_10094F088);
    v45(v58, 0, 1, v44);
    sub_1000AEEC8(v58, v59, &qword_10094F088);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v51);
  }
  uint64_t v54 = v79;
  uint64_t v55 = (uint64_t)v78;
  a1 = v74;
LABEL_16:
  [a1 elapsedTime];
  id v60 = [self seconds];
  sub_10007E2D8(0, &qword_10094F0E8);
  Measurement.init(value:unit:)();
  uint64_t v61 = (uint64_t)v27;
  uint64_t v62 = (uint64_t)v27;
  uint64_t v63 = v85;
  sub_1000AEF2C(v61, v85, &qword_10094F098);
  uint64_t v65 = v86;
  uint64_t v64 = (uint64_t)v87;
  sub_1000AEF2C((uint64_t)v87, v86, &qword_10094F078);
  uint64_t v66 = v88;
  uint64_t v67 = v84;
  sub_1000AEF2C(v88, v84, &qword_10094F088);
  sub_100478944(v81, v55, v63, v65, v82, 0, v67, v83, v89, v54);
  sub_10008DB18(v66, &qword_10094F088);
  sub_10008DB18(v64, &qword_10094F078);
  sub_10008DB18(v62, &qword_10094F098);
  long long v68 = v89[3];
  uint64_t v69 = v80;
  *(_OWORD *)(v80 + 32) = v89[2];
  *(_OWORD *)(v69 + 48) = v68;
  *(void *)(v69 + 64) = v90;
  __n128 result = (__n128)v89[1];
  *(_OWORD *)uint64_t v69 = v89[0];
  *(__n128 *)(v69 + 16) = result;
  return result;
}

unint64_t sub_100479BE0()
{
  unint64_t result = qword_10095D9F0;
  if (!qword_10095D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095D9F0);
  }
  return result;
}

unint64_t sub_100479C34()
{
  unint64_t result = qword_10095DA00;
  if (!qword_10095DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WorkoutSegmentIdentifier.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100479D54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSegmentIdentifier.Key()
{
  return &type metadata for WorkoutSegmentIdentifier.Key;
}

unsigned char *storeEnumTagSinglePayload for WorkoutSegmentIdentifier.JSONError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100479E28);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSegmentIdentifier.JSONError()
{
  return &type metadata for WorkoutSegmentIdentifier.JSONError;
}

unint64_t sub_100479E64()
{
  unint64_t result = qword_10095DA18;
  if (!qword_10095DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA18);
  }
  return result;
}

unint64_t sub_100479EBC()
{
  unint64_t result = qword_10095DA20;
  if (!qword_10095DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA20);
  }
  return result;
}

unint64_t sub_100479F14()
{
  unint64_t result = qword_10095DA28;
  if (!qword_10095DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA28);
  }
  return result;
}

unint64_t sub_100479F6C()
{
  unint64_t result = qword_10095DA30;
  if (!qword_10095DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA30);
  }
  return result;
}

unint64_t sub_100479FC4()
{
  unint64_t result = qword_10095DA38;
  if (!qword_10095DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA38);
  }
  return result;
}

unint64_t sub_10047A01C()
{
  unint64_t result = qword_10095DA40[0];
  if (!qword_10095DA40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10095DA40);
  }
  return result;
}

uint64_t sub_10047A070()
{
  return sub_10047C138(&qword_10094EE70, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
}

double sub_10047A0B8@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  a1[12] = v15;
  a1[13] = v16;
  a1[14] = v17;
  a1[15] = v18;
  a1[8] = v11;
  a1[9] = v12;
  a1[10] = v13;
  a1[11] = v14;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_10047A134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10047A8B0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_10047A160(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10095DA90 + dword_10095DA90);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024C1D0;
  return v5(a1);
}

uint64_t sub_10047A208(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_10095DA88 + dword_10095DA88);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001A0E60;
  return v6(v3);
}

unint64_t sub_10047A2B8()
{
  unint64_t result = qword_10095DA58;
  if (!qword_10095DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA58);
  }
  return result;
}

uint64_t sub_10047A30C()
{
  return sub_10047C138(&qword_10094EE90, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
}

unint64_t sub_10047A358()
{
  unint64_t result = qword_10095DA60;
  if (!qword_10095DA60)
  {
    sub_1000A1370(qword_10095DA68);
    sub_10047C138(&qword_10094EE90, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DA60);
  }
  return result;
}

uint64_t sub_10047A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001DCE30();
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutActivityEntityQuery()
{
  return &type metadata for WorkoutActivityEntityQuery;
}

uint64_t sub_10047A4C0(uint64_t a1, void *a2)
{
  uint64_t v40 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v38);
  uint64_t v41 = (uint64_t)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v11 = (char *)v32 - v10;
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (!v37) {
    return result;
  }
  uint64_t v13 = 0;
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v42 = *(void *)(v9 + 72);
  uint64_t v36 = a1 + v14;
  unint64_t v34 = v14;
  double v35 = (void (**)(char *, uint64_t))(v5 + 8);
  v32[1] = v2;
  uint64_t v33 = a2 + 7;
  while (1)
  {
    sub_1002C1E90(v36 + v42 * v13, (uint64_t)v11);
    sub_10047C138((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = v40;
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v44 = v16;
    v17._countAndFlagsBits = 47;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    id v18 = [*(id *)&v11[*(int *)(v38 + 20)] UUID];
    uint64_t v19 = v39;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    (*v35)(v19, v15);
    uint64_t v21 = v44;
    uint64_t v22 = a2[2];
    if (v22)
    {
      uint64_t v23 = v43;
      uint64_t v24 = a2;
      if (a2[4] == v43 && a2[5] == v44 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_9:
        swift_bridgeObjectRelease();
        sub_10031E94C((uint64_t)v11, v41);
        uint64_t v25 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C9494(0, v25[2] + 1, 1);
          uint64_t v25 = v45;
        }
        unint64_t v27 = v25[2];
        unint64_t v26 = v25[3];
        if (v27 >= v26 >> 1)
        {
          sub_1001C9494(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v45;
        }
        v25[2] = v27 + 1;
        sub_10031E94C(v41, (uint64_t)v25 + v34 + v27 * v42);
        a2 = v24;
        goto LABEL_4;
      }
      if (v22 != 1) {
        break;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    sub_1002C1F3C((uint64_t)v11);
LABEL_4:
    if (++v13 == v37) {
      return (uint64_t)v45;
    }
  }
  uint64_t v28 = v33;
  uint64_t v29 = 1;
  while (1)
  {
    uint64_t v30 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    BOOL v31 = *(v28 - 1) == v23 && *v28 == v21;
    if (v31) {
      goto LABEL_9;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_9;
    }
    v28 += 2;
    ++v29;
    BOOL v31 = v30 == v22;
    a2 = v24;
    if (v31) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10047A8B0()
{
  sub_1000AFA94(&qword_10095DA80);
  swift_getKeyPath();
  uint64_t v0 = IntentParameterDependency.__allocating_init<A, B>(_:)();
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094FF10);
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v0;
}

void sub_10047A9C8(void *a1)
{
  uint64_t v2 = type metadata accessor for WorkoutActivityEntity(0);
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v5 = (unint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v39 - v6;
  if (![a1 isMultiSportWorkout])
  {
    if (![a1 isIntervalWorkout]) {
      return;
    }
    id v21 = [a1 workoutActivities];
    sub_10047AFA4();
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((unint64_t)v9 >> 62)
    {
LABEL_51:
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        goto LABEL_52;
      }
    }
    if (v22 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v23 = 0;
    id v40 = (id)(v9 & 0xC000000000000001);
    uint64_t v24 = _swiftEmptyArrayStorage;
    v39[1] = (char *)&type metadata for Any + 8;
    while (1)
    {
      if (v40) {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v25 = *(id *)(v9 + 8 * (void)v23 + 32);
      }
      unint64_t v26 = v25;
      id v27 = [v25 metadata];
      if (!v27)
      {
        long long v42 = 0u;
        long long v43 = 0u;
LABEL_40:
        sub_10008DB18((uint64_t)&v42, &qword_100955A00);
LABEL_41:
        uint64_t v34 = 0;
        goto LABEL_42;
      }
      uint64_t v28 = v27;
      uint64_t v29 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (qword_10094AB20 == -1)
      {
        if (!*(void *)(v29 + 16)) {
          goto LABEL_36;
        }
      }
      else
      {
        swift_once();
        if (!*(void *)(v29 + 16))
        {
LABEL_36:
          long long v42 = 0u;
          long long v43 = 0u;
          goto LABEL_37;
        }
      }
      uint64_t v30 = qword_100997E48;
      uint64_t v31 = qword_100997E40;
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1000DA1C0(v31, v30);
      if (v33)
      {
        sub_10008F484(*(void *)(v29 + 56) + 32 * v32, (uint64_t)&v42);
      }
      else
      {
        long long v42 = 0u;
        long long v43 = 0u;
      }
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
      if (!*((void *)&v43 + 1)) {
        goto LABEL_40;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_41;
      }
      uint64_t v34 = sub_10041A28C();
      swift_bridgeObjectRelease();
LABEL_42:
      swift_retain();
      id v35 = a1;
      id v36 = v26;
      sub_1001DDF38(v36, v34, v23, v35, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = (void *)sub_1001E81B0(0, v24[2] + 1, 1, (unint64_t)v24);
      }
      unint64_t v38 = v24[2];
      unint64_t v37 = v24[3];
      if (v38 >= v37 >> 1) {
        uint64_t v24 = (void *)sub_1001E81B0(v37 > 1, v38 + 1, 1, (unint64_t)v24);
      }
      uint64_t v23 = (char *)v23 + 1;
      v24[2] = v38 + 1;
      sub_10031E94C(v5, (uint64_t)v24+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v38);

      swift_release();
      if ((void *)v22 == v23)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  id v8 = [a1 workoutActivities];
  sub_10047AFA4();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62) {
    goto LABEL_48;
  }
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_51;
    }
    id v40 = a1;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    a1 = (void *)(v5 & 0xC000000000000001);
    long long v12 = _swiftEmptyArrayStorage;
    while (1)
    {
      id v13 = a1 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v11 + 32);
      unint64_t v14 = v13;
      id v15 = [v13 fiui_activityType];
      id v16 = [v15 effectiveTypeIdentifier];

      if (v16 != (id)83) {
        break;
      }

LABEL_7:
      if (v9 == ++v11) {
        goto LABEL_47;
      }
    }
    id v17 = v14;
    sub_1001DDF38(v17, 0, v10, v40, (uint64_t)v7);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v12 = (void *)sub_1001E81B0(0, v12[2] + 1, 1, (unint64_t)v12);
    }
    unint64_t v19 = v12[2];
    unint64_t v18 = v12[3];
    if (v19 >= v18 >> 1) {
      long long v12 = (void *)sub_1001E81B0(v18 > 1, v19 + 1, 1, (unint64_t)v12);
    }
    v12[2] = v19 + 1;
    sub_10031E94C((uint64_t)v7, (uint64_t)v12+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v19);

    if (!__OFADD__(v10++, 1)) {
      goto LABEL_7;
    }
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_52:
  swift_bridgeObjectRelease();
}

unint64_t sub_10047AFA4()
{
  unint64_t result = qword_100955600;
  if (!qword_100955600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100955600);
  }
  return result;
}

uint64_t sub_10047AFE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10047B010(uint64_t a1)
{
  v1[36] = a1;
  sub_1000AFA94((uint64_t *)&unk_1009555F0);
  v1[37] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[38] = v2;
  v1[39] = *(void *)(v2 - 8);
  v1[40] = swift_task_alloc();
  return _swift_task_switch(sub_10047B100, 0, 0);
}

uint64_t sub_10047B100()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[36];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v1[39];
    uint64_t v29 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    id v27 = (void (**)(void))(v4 + 32);
    type metadata accessor for WorkoutActivityIdentifier(0);
    swift_bridgeObjectRetain();
    unint64_t v5 = (uint64_t *)(v2 + 40);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v28 = v1;
    while (1)
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      uint64_t v9 = swift_allocObject();
      v1[34] = v7;
      v1[35] = v8;
      sub_1000A06D0();
      swift_bridgeObjectRetain();
      if (*(void *)(StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)() + 16))
      {
        uint64_t v32 = v3;
        uint64_t v10 = v1[37];
        uint64_t v30 = v1[38];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        if ((*v29)(v10, 1, v30) != 1)
        {
          uint64_t v31 = v28[40];
          uint64_t v12 = v28[38];
          id v13 = *v27;
          (*v27)();
          uint64_t v14 = static String._fromSubstring(_:)();
          uint64_t v16 = v15;
          swift_bridgeObjectRelease();
          *(void *)(v9 + 16) = v14;
          *(void *)(v9 + 24) = v16;
          ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v9 + OBJC_IVAR____TtC10FitnessApp25WorkoutActivityIdentifier_activityId, v31, v12);
          uint64_t v17 = *(void *)(v9 + 16);
          uint64_t v18 = *(void *)(v9 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v1 = v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_100084014(0, v6[2] + 1, 1, v6);
          }
          unint64_t v20 = v6[2];
          unint64_t v19 = v6[3];
          if (v20 >= v19 >> 1) {
            uint64_t v6 = sub_100084014((void *)(v19 > 1), v20 + 1, 1, v6);
          }
          v6[2] = v20 + 1;
          id v21 = &v6[2 * v20];
          v21[4] = v17;
          v21[5] = v18;
          uint64_t v3 = v32;
          goto LABEL_5;
        }
        uint64_t v1 = v28;
        uint64_t v11 = v28[37];
        swift_bridgeObjectRelease();
        sub_10008DB18(v11, (uint64_t *)&unk_1009555F0);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_deallocPartialClassInstance();
      swift_bridgeObjectRelease();
LABEL_5:
      v5 += 2;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_16:
  v1[41] = v6;
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v22 = AppDependency.__allocating_init(key:manager:)();
  v1[42] = v22;
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t v23 = AppDependency.__allocating_init(key:manager:)();
  v1[43] = v23;
  sub_1000AFA94(&qword_10094FF10);
  static AppDependencyManager.shared.getter();
  uint64_t v24 = AppDependency.__allocating_init(key:manager:)();
  v1[44] = v24;
  id v25 = (void *)swift_task_alloc();
  v1[45] = v25;
  *id v25 = v1;
  v25[1] = sub_10047B574;
  return sub_10024EF88((uint64_t)v6, v22, v23, v24);
}

uint64_t sub_10047B574(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 368) = a1;
  *(void *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10047B830;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10047B690;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047B690()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    for (uint64_t i = v2 - 1; ; --i)
    {
      long long v5 = *v3;
      long long v6 = v3[1];
      long long v7 = v3[3];
      *(_OWORD *)(v0 + 48) = v3[2];
      *(_OWORD *)(v0 + 64) = v7;
      *(_OWORD *)(v0 + 16) = v5;
      *(_OWORD *)(v0 + 32) = v6;
      long long v8 = v3[4];
      long long v9 = v3[5];
      long long v10 = v3[7];
      *(_OWORD *)(v0 + 112) = v3[6];
      *(_OWORD *)(v0 + 128) = v10;
      *(_OWORD *)(v0 + 80) = v8;
      *(_OWORD *)(v0 + 96) = v9;
      long long v11 = v3[8];
      long long v12 = v3[9];
      long long v13 = v3[11];
      *(_OWORD *)(v0 + 176) = v3[10];
      *(_OWORD *)(v0 + 192) = v13;
      *(_OWORD *)(v0 + 144) = v11;
      *(_OWORD *)(v0 + 160) = v12;
      long long v14 = v3[12];
      long long v15 = v3[13];
      long long v16 = v3[15];
      *(_OWORD *)(v0 + 240) = v3[14];
      *(_OWORD *)(v0 + 256) = v16;
      *(_OWORD *)(v0 + 208) = v14;
      *(_OWORD *)(v0 + 224) = v15;
      uint64_t v17 = *(void **)(v0 + 240);
      sub_1001B5A54(v0 + 16);
      sub_10047A9C8(v17);
      sub_1001E4AF8(v18);
      sub_1001B5CC0(v0 + 16);
      if (!i) {
        break;
      }
      v3 += 16;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = *(void **)(v0 + 288);
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_10047A4C0(v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v22(v21);
}

uint64_t sub_10047B830()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10047B8D8(uint64_t a1)
{
  *(void *)(v1 + 536) = a1;
  return _swift_task_switch(sub_10047B8F8, 0, 0);
}

uint64_t sub_10047B8F8()
{
  *(void *)(v0 + 528) = _swiftEmptyArrayStorage;
  if (IntentParameterDependency.wrappedValue.getter())
  {
    uint64_t v1 = v0 + 528;
    swift_getKeyPath();
    sub_10020D608();
    IntentProjection.subscript.getter();
    swift_release();
    long long v2 = *(_OWORD *)(v0 + 480);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 224) = v2;
    long long v3 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v0 + 256) = v3;
    long long v4 = *(_OWORD *)(v0 + 416);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 400);
    *(_OWORD *)(v0 + 160) = v4;
    long long v5 = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 432);
    *(_OWORD *)(v0 + 192) = v5;
    long long v6 = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v0 + 96) = v6;
    long long v7 = *(_OWORD *)(v0 + 384);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 128) = v7;
    long long v8 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 32) = v8;
    long long v9 = *(_OWORD *)(v0 + 320);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 64) = v9;
    id v10 = *(id *)(v0 + 240);
    sub_1001B5CC0(v0 + 16);
    if ([v10 workoutActivityType] != (id)82) {
      goto LABEL_5;
    }
    id v11 = v10;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      goto LABEL_22;
    while (1)
    {
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
LABEL_5:

      swift_release();
      uint64_t v12 = *(void *)v1;
      if (*(void *)v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v1 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v1) {
          goto LABEL_18;
        }
      }
      if (v1 >= 1) {
        break;
      }
      __break(1u);
LABEL_22:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    uint64_t v13 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(v12 + 8 * v13 + 32);
      }
      long long v15 = v14;
      ++v13;
      sub_10047A9C8(v14);
      sub_1001E4AF8(v16);
    }
    while (v1 != v13);
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
    return v22(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000AFA94(&qword_10094D338);
    type metadata accessor for AppDependencyManager();
    static AppDependencyManager.shared.getter();
    uint64_t v17 = AppDependency.__allocating_init(key:manager:)();
    *(void *)(v0 + 544) = v17;
    sub_1000AFA94(&qword_10094D340);
    static AppDependencyManager.shared.getter();
    uint64_t v18 = AppDependency.__allocating_init(key:manager:)();
    *(void *)(v0 + 552) = v18;
    sub_1000AFA94(&qword_10094FF10);
    static AppDependencyManager.shared.getter();
    uint64_t v19 = AppDependency.__allocating_init(key:manager:)();
    *(void *)(v0 + 560) = v19;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 568) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10047BC8C;
    return sub_100250B14(v17, v18, v19);
  }
}

uint64_t sub_10047BC8C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 576) = a1;
  *(void *)(v3 + 584) = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    long long v4 = sub_10047BFE8;
  }
  else
  {
    long long v4 = sub_10047BE10;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10047BE10()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = (id *)(v1 + 256);
    do
    {
      id v4 = *v3;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1001E3C40((unint64_t)_swiftEmptyArrayStorage);
  unint64_t v6 = v0[66];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_14;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * v8 + 32);
    }
    id v10 = v9;
    ++v8;
    sub_10047A9C8(v9);
    sub_1001E4AF8(v11);
  }
  while (v7 != v8);
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t (*)(void *))v0[1];
  return v12(_swiftEmptyArrayStorage);
}

uint64_t sub_10047BFE8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10047C000@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  a1[12] = v15;
  a1[13] = v16;
  a1[14] = v17;
  a1[15] = v18;
  a1[8] = v11;
  a1[9] = v12;
  a1[10] = v13;
  a1[11] = v14;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_10047C07C(_OWORD *a1)
{
  long long v1 = a1[13];
  v10[12] = a1[12];
  v10[13] = v1;
  long long v2 = a1[15];
  v10[14] = a1[14];
  v10[15] = v2;
  long long v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  long long v4 = a1[11];
  v10[10] = a1[10];
  v10[11] = v4;
  long long v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  long long v6 = a1[7];
  v10[6] = a1[6];
  v10[7] = v6;
  long long v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  long long v8 = a1[3];
  v10[2] = a1[2];
  v10[3] = v8;
  sub_1001B5A54((uint64_t)v10);
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_10047C138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10047C3A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  sub_10007E4EC(a3, a3[3]);
  uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t, Class, uint64_t))(a4 + 16))(a4, a1, isa, v8);

  swift_unknownObjectRelease();
  return v9;
}

id sub_10047C440()
{
  return sub_10047D03C(type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource);
}

uint64_t type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource()
{
  return self;
}

char *sub_10047C47C(void *a1, void *a2, char a3)
{
  *(void *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource] = 0;
  *(void *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_healthStore] = a1;
  *(void *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_formattingManager] = a2;
  v3[OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime] = a3;
  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for MoveModeSettingsViewController();
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = (char *)[super initWithStyle:2];
  uint64_t result = (char *)[v8 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  long long v10 = result;
  [result setSeparatorStyle:0];

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t result = (char *)[v8 tableView];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  long long v12 = result;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource());
  v20[4] = sub_10047D7E0;
  v20[5] = v11;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_1003A0CBC;
  v20[3] = &unk_1008C8500;
  long long v14 = _Block_copy(v20);
  swift_retain();
  id v15 = [v13 initWithTableView:v12 cellProvider:v14];

  _Block_release(v14);
  swift_release();
  long long v16 = *(void **)&v8[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource];
  *(void *)&v8[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource] = v15;

  uint64_t result = (char *)[v8 tableView];
  if (result)
  {
    long long v17 = result;
    type metadata accessor for MoveModeSettingsCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v19 = String._bridgeToObjectiveC()();
    [v17 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v19];

    sub_10047C73C();
    swift_release();

    return v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10047C73C()
{
  swift_getObjectType();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  long long v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    long long v4 = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10008F1F4(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10008F1F4(0xD000000000000012, 0x80000001007B7F90, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v3, "%s::%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  id v8 = sub_10047C904();
  id v9 = *(void **)(v0 + OBJC_IVAR___CHMoveModeSettingsViewController_dataSource);
  if (v9)
  {
    id v10 = v9;
    [v10 applySnapshot:v8 animatingDifferences:1];
  }
}

id sub_10047C904()
{
  swift_getObjectType();
  id v0 = [objc_allocWithZone((Class)NSDiffableDataSourceSnapshot) init];
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1007509E0;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 32) = 0xD000000000000011;
  *(void *)(v1 + 40) = 0x80000001007C0020;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 appendSectionsWithIdentifiers:isa];

  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1007509E0;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 32) = 0xD000000000000014;
  *(void *)(v3 + 40) = 0x80000001007C9BB0;
  Class v4 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 appendItemsWithIdentifiers:v4];

  os_log_type_t v5 = static os_log_type_t.default.getter();
  uint64_t v6 = (void *)HKLogActivity;
  os_log_type_t v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    id v8 = v0;
    log = v6;
    uint64_t v9 = swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v11 = _typeName(_:qualified:)();
    sub_10008F1F4(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_10008F1F4(0x70616E53656B616DLL, 0xEE002928746F6873, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 22) = 2112;
    id v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v10 = v8;

    _os_log_impl((void *)&_mh_execute_header, log, v7, "%s::%s snapshot %@", (uint8_t *)v9, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  return v0;
}

id sub_10047CC38(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [a1 dequeueReusableCellWithIdentifier:v2 forIndexPath:isa];

  swift_beginAccess();
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong[OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime];
  }
  else
  {
    uint64_t v6 = 0;
  }
  type metadata accessor for MoveModeSettingsCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_beginAccess();
    uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
    id v10 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp20MoveModeSettingsCell_moveTimeSwitch);
    id v11 = v4;
    [v10 setOn:v6];
    unint64_t v12 = &off_1008C84C8;
    if (!v9) {
      unint64_t v12 = 0;
    }
    *(void *)(v8 + OBJC_IVAR____TtC10FitnessApp20MoveModeSettingsCell_delegate + 8) = v12;
    swift_unknownObjectWeakAssign();
  }
  return v4;
}

id sub_10047D024()
{
  return sub_10047D03C(type metadata accessor for MoveModeSettingsViewController);
}

id sub_10047D03C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for MoveModeSettingsViewController()
{
  return self;
}

void sub_10047D0F4(char a1)
{
  NSString v2 = v1;
  id v4 = self;
  id v5 = [v4 mainBundle];
  char v32 = a1;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = [v4 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v31 = self;
  id v11 = [v31 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v37 = sub_10047D828;
  uint64_t v38 = v14;
  id v29 = v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_100066A00;
  id v36 = &unk_1008C8578;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  long long v17 = self;
  id v30 = [v17 actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);
  swift_release();

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(unsigned char *)(v19 + 24) = v32 & 1;
  swift_retain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v37 = sub_10047D868;
  uint64_t v38 = v19;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_100066A00;
  id v36 = &unk_1008C85C8;
  objc_super v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = [v17 actionWithTitle:v20 style:0 handler:v21];
  _Block_release(v21);
  swift_release();

  id v23 = [v31 mainBundle];
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [self alertControllerWithTitle:v26 message:v27 preferredStyle:1];

  [v28 addAction:v30];
  [v28 addAction:v22];
  [v29 presentViewController:v28 animated:1 completion:0];
}

void sub_10047D684()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong tableView];

    if (v2)
    {
      [v2 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10047D708(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime) = a3 & 1;
    if (a3) {
      uint64_t v6 = 2;
    }
    else {
      uint64_t v6 = 1;
    }
    [self saveActivityMoveModeAndDefaultGoalSamplesForActivityMoveMode:v6 healthStore:*(void *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_healthStore) formattingManager:*(void *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_formattingManager)];
  }
}

uint64_t sub_10047D7A8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

id sub_10047D7E0(void *a1)
{
  return sub_10047CC38(a1);
}

uint64_t sub_10047D7E8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

id sub_10047D820(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10047C3A8(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_10047D828()
{
}

uint64_t sub_10047D830()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10047D868(uint64_t a1)
{
  sub_10047D708(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

char *sub_10047D884(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    id v8 = a2[1];
    NSString v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    id v10 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v10;
    uint64_t v11 = a3[9];
    __dst = &a1[v11];
    id v22 = (char *)a2 + v11;
    a1[40] = *((unsigned char *)a2 + 40);
    uint64_t v12 = type metadata accessor for DateInterval();
    uint64_t v13 = *(void *)(v12 - 8);
    id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v14 = v4;
    NSString v15 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v22, 1, v12))
    {
      uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v22, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v22, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[11];
    v7[a3[10]] = *((unsigned char *)a2 + a3[10]);
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v7;
}

uint64_t sub_10047DA9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  id v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  NSString v9 = *(void **)(a2 + 8);
  id v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v12;
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  NSString v15 = (void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for DateInterval();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t sub_10047DCD8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = a3[9];
  id v8 = (void *)(a1 + v7);
  NSString v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DateInterval();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_10047DE5C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = a3[9];
  NSString v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_10047E07C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

void *sub_10047E1AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 44);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

Swift::Int sub_10047E2DC()
{
  Hasher.init(_seed:)();
  sub_1000A8040((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10047E320()
{
  Hasher.init(_seed:)();
  sub_1000A8040((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_10047E35C()
{
  return sub_1000A885C(&qword_10095DBB8, (void (*)(uint64_t))type metadata accessor for MetricDetailViewModel);
}

unsigned char *storeEnumTagSinglePayload for VO2MaxBucket(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10047E470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VO2MaxBucket()
{
  return &type metadata for VO2MaxBucket;
}

uint64_t sub_10047E4A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7475626972747461;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007365;
  }
  if (a2) {
    uint64_t v5 = 0x7475626972747461;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007365;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047E548(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x77654E7374616857;
  }
  else {
    uint64_t v3 = 0x6F72746E49;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x77654E7374616857;
  }
  else {
    uint64_t v5 = 0x6F72746E49;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047E5EC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E6F4D6565726874;
    }
    else {
      uint64_t v3 = 0x68746E6F4D786973;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEB00000000736874;
    }
    else {
      unint64_t v4 = 0xE900000000000073;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E6F4D6565726874;
      }
      else {
        uint64_t v6 = 0x68746E6F4D786973;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEB00000000736874;
      }
      else {
        unint64_t v7 = 0xE900000000000073;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x68746E6F6DLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x68746E6F6DLL)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10047E718(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x68746E6F6DLL;
    }
    else {
      uint64_t v3 = 1918985593;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x68746E6F6DLL;
      }
      else {
        uint64_t v6 = 1918985593;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1801807223;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1801807223)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10047E80C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1953718636;
  }
  else {
    uint64_t v3 = 0x746E6572727563;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1953718636;
  }
  else {
    uint64_t v5 = 0x746E6572727563;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047E8AC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7865646E69;
  }
  else {
    uint64_t v3 = 0x4974756F6B726F77;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7865646E69;
  }
  else {
    uint64_t v5 = 0x4974756F6B726F77;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047E954(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6F74737563;
  }
  else {
    uint64_t v3 = 0x647261646E617473;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D6F74737563;
  }
  else {
    uint64_t v5 = 0x647261646E617473;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047E9F8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  unint64_t v3 = 0x4974756F6B726F77;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4974756F6B726F77;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1701869940;
      break;
    case 2:
      unint64_t v6 = 0x80000001007B5720;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x7865646E69;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1701869940) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x80000001007B5720;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x7865646E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047EB80(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1818321771;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1818321771;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x726574656DLL;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6574756E696DLL;
      break;
    case 3:
      uint64_t v5 = 1701011824;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6465657073;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x746E756F63;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x78614D324F76;
      break;
    case 7:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7628141;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x726574656DLL) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6574756E696DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      if (v5 != 1701011824) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6465657073) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x746E756F63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x78614D324F76;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7628141) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047EDAC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 7105633;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 7105633;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7449726F466F67;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7974697669746361;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7374756F6B726F77;
      break;
    case 4:
      unint64_t v5 = 0x507373656E746966;
      unint64_t v3 = 0xEB0000000073756CLL;
      break;
    case 5:
      unint64_t v5 = 0x45646574696D696CLL;
      unint64_t v3 = 0xEE006E6F69746964;
      break;
    case 6:
      unint64_t v3 = 0x80000001007C9E80;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 7:
      unint64_t v5 = 0x74697465706D6F63;
      unint64_t v3 = 0xEC000000736E6F69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x7449726F466F67) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7974697669746361) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7374756F6B726F77) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEB0000000073756CLL;
      if (v5 != 0x507373656E746966) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEE006E6F69746964;
      if (v5 != 0x45646574696D696CLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0x80000001007C9E80;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEC000000736E6F69;
      if (v5 != 0x74697465706D6F63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047F068(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x796144664F646E65;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x796144664F646E65;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x61446D6F74737563;
      unint64_t v3 = 0xEA00000000007379;
      break;
    case 2:
      uint64_t v5 = 0x656557664F646E65;
      unint64_t v3 = 0xE90000000000006BLL;
      break;
    case 3:
      uint64_t v5 = 0x6E6F4D664F646E65;
      unint64_t v3 = 0xEA00000000006874;
      break;
    case 4:
      uint64_t v5 = 0x6369666963657073;
      unint64_t v3 = 0xEC00000065746144;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007379;
      if (v5 == 0x61446D6F74737563) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE90000000000006BLL;
      if (v5 != 0x656557664F646E65) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6E6F4D664F646E65;
      unint64_t v6 = 0xEA00000000006874;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC00000065746144;
      if (v5 != 0x6369666963657073) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047F264(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x747365676E6F6CLL;
  }
  else {
    uint64_t v2 = 0x746E6572727563;
  }
  if (a2) {
    uint64_t v3 = 0x747365676E6F6CLL;
  }
  else {
    uint64_t v3 = 0x746E6572727563;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10047F2E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000011;
    }
    else {
      unint64_t v3 = 0xD00000000000001BLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001007C9E60;
    }
    else {
      unint64_t v4 = 0x80000001007C9E40;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000011;
      }
      else {
        unint64_t v6 = 0xD00000000000001BLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001007C9E60;
      }
      else {
        unint64_t v7 = 0x80000001007C9E40;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    unint64_t v3 = 0x4547444142;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x4547444142)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10047F3E8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65676172657661;
  }
  else {
    uint64_t v3 = 0x6C61746F74;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x65676172657661;
  }
  else {
    uint64_t v5 = 0x6C61746F74;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047F48C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x74696C7073;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x74696C7073;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x70536D6F74737563;
      unint64_t v3 = 0xEB0000000074696CLL;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x746E656D676573;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C61767265746E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB0000000074696CLL;
      if (v5 == 0x70536D6F74737563) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x746E656D676573;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6C61767265746E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047F624(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x747365776F6C73;
  }
  else {
    uint64_t v2 = 0x74736574736166;
  }
  if (a2) {
    uint64_t v3 = 0x747365776F6C73;
  }
  else {
    uint64_t v3 = 0x74736574736166;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10047F6A4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6F6974616C6572;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xED00007370696873;
  }
  if (a2) {
    uint64_t v5 = 0x6E6F6974616C6572;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xED00007370696873;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047F74C(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000017;
  unint64_t v4 = 0x80000001007B5860;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "VO2MAX_BUCKET_POOR";
      goto LABEL_5;
    case 2:
      uint64_t v5 = "VO2MAX_BUCKET_FAIR";
      goto LABEL_5;
    case 3:
      uint64_t v5 = "VO2MAX_BUCKET_GOOD";
LABEL_5:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000017;
      unint64_t v6 = "VO2MAX_BUCKET_EXCELLENT";
      goto LABEL_8;
    case 5:
      unint64_t v3 = 0xD000000000000016;
      unint64_t v6 = "VO2MAX_BUCKET_SUPERIOR";
LABEL_8:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000017;
  unint64_t v8 = 0x80000001007B5860;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "VO2MAX_BUCKET_POOR";
      goto LABEL_13;
    case 2:
      uint64_t v9 = "VO2MAX_BUCKET_FAIR";
      goto LABEL_13;
    case 3:
      uint64_t v9 = "VO2MAX_BUCKET_GOOD";
LABEL_13:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v7 = 0xD000000000000012;
      goto LABEL_14;
    case 4:
      unint64_t v10 = 0xD000000000000017;
      uint64_t v11 = "VO2MAX_BUCKET_EXCELLENT";
      goto LABEL_18;
    case 5:
      unint64_t v10 = 0xD000000000000016;
      uint64_t v11 = "VO2MAX_BUCKET_SUPERIOR";
LABEL_18:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v3 == v10) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_14:
      if (v3 != v7) {
        goto LABEL_21;
      }
LABEL_19:
      if (v4 == v8) {
        char v12 = 1;
      }
      else {
LABEL_21:
      }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_10047F910(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7105633;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 7105633;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1818324839;
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x68746C616568;
      break;
    case 3:
      unint64_t v5 = 0x6163696669746F6ELL;
      unint64_t v3 = 0xED0000736E6F6974;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1953066613;
LABEL_6:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1818324839;
      goto LABEL_15;
    case 2:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x68746C616568) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 3:
      uint64_t v2 = 0x6163696669746F6ELL;
      unint64_t v7 = 0xED0000736E6F6974;
      goto LABEL_12;
    case 4:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1953066613;
LABEL_15:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x7300000000)) {
        goto LABEL_16;
      }
      goto LABEL_18;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_18;
      }
LABEL_16:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_18:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_10047FAC0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA0000000000656DLL;
  unint64_t v3 = 0x614E747369747261;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000012;
    }
    else {
      unint64_t v5 = 1701667182;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001007B53B0;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x614E747369747261;
  unint64_t v6 = 0xEA0000000000656DLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 1701667182;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001007B53B0;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10047FBCC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x3434333734393431;
  }
  else {
    uint64_t v3 = 0x3235333734393431;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000003631;
  }
  else {
    unint64_t v4 = 0xEA00000000003037;
  }
  if (a2) {
    uint64_t v5 = 0x3434333734393431;
  }
  else {
    uint64_t v5 = 0x3235333734393431;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000003037;
  }
  else {
    unint64_t v6 = 0xEA00000000003631;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047FC78(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6874646977;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6874646977;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746867696568;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x726F6C6F436762;
      break;
    case 4:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003172;
      break;
    case 5:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003272;
      break;
    case 6:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003372;
      break;
    case 7:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003472;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746867696568) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7107189) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x726F6C6F436762) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEA00000000003172;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEA00000000003272;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x6F6C6F4374786574;
      unint64_t v6 = 0xEA00000000003372;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEA00000000003472;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10047FF1C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6863746177;
  }
  else {
    uint64_t v3 = 0x656E6F687069;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6863746177;
  }
  else {
    uint64_t v5 = 0x656E6F687069;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10047FFBC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7105633;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7105633;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F6C614365766F6DLL;
      unint64_t v3 = 0xEC00000073656972;
      break;
    case 2:
      uint64_t v5 = 0x6F6C694B65766F6DLL;
      unint64_t v3 = 0xEE0073656C756F6ALL;
      break;
    case 3:
      uint64_t v5 = 0x756E694D65766F6DLL;
      unint64_t v3 = 0xEB00000000736574;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6573696372657865;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x646E617473;
      break;
    case 6:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1819045746;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000073656972;
      if (v5 == 0x6F6C614365766F6DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEE0073656C756F6ALL;
      if (v5 != 0x6F6C694B65766F6DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEB00000000736574;
      if (v5 != 0x756E694D65766F6DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6573696372657865) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x646E617473;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1819045746) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100480218(char a1, char a2)
{
  if (a1) {
    unint64_t v2 = 0x80000001007B52B0;
  }
  else {
    unint64_t v2 = 0x80000001007B5290;
  }
  if (a2) {
    unint64_t v3 = 0x80000001007B52B0;
  }
  else {
    unint64_t v3 = 0x80000001007B5290;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

Swift::Int sub_1004802B8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480338()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480444()
{
  return Hasher._finalize()();
}

uint64_t sub_10048051C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100480624()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100480774()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100480864()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004809A8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480ADC()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480C30()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480D38()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480E98()
{
  return Hasher._finalize()();
}

Swift::Int sub_100480FB0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100481084()
{
  return Hasher._finalize()();
}

unint64_t sub_100481100@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5 = (void *)result;
  int64_t v8 = 0;
  unint64_t v9 = result + 64;
  uint64_t v10 = 1 << *(unsigned char *)(result + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(result + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = 6;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v8 << 6);
LABEL_24:
    uint64_t v22 = v5[6] + 32 * v16;
    double v23 = *(double *)(v22 + 8);
    if (*(double *)v22 <= a4 && v23 > a4)
    {
      if (v5[2])
      {
        Swift::UInt v25 = *(void *)(v22 + 16);
        Swift::UInt v26 = *(void *)(v22 + 24);
        long long v28 = *(_OWORD *)v22;
        uint64_t result = sub_1005294A0(v25, v26, *(double *)v22, v23);
        long long v18 = v28;
        if (v27)
        {
          uint64_t v14 = *(unsigned __int8 *)(v5[7] + result);
          double v19 = a4;
LABEL_32:
          *(double *)a3 = v19;
          *(void *)(a3 + 8) = 0;
          *(_OWORD *)(a3 + 16) = v18;
          *(void *)(a3 + 32) = v25;
          *(void *)(a3 + 40) = v26;
          *(void *)(a3 + 48) = v14;
          *(void *)(a3 + 56) = a2;
          return result;
        }
      }
    }
  }
  int64_t v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  long long v18 = 0uLL;
  double v19 = 0.0;
  if (v17 >= v13) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v17);
  ++v8;
  if (v20) {
    goto LABEL_23;
  }
  int64_t v8 = v17 + 1;
  if (v17 + 1 >= v13) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v8);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v8 = v17 + 2;
  if (v17 + 2 >= v13) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v8);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v8 = v17 + 3;
  if (v17 + 3 >= v13) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v8);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v8 = v17 + 4;
  if (v17 + 4 >= v13) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v8);
  if (v20)
  {
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v8 << 6);
    goto LABEL_24;
  }
  int64_t v21 = v17 + 5;
  if (v21 >= v13)
  {
LABEL_31:
    Swift::UInt v25 = 0;
    Swift::UInt v26 = 0;
    a2 = 0;
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v21);
  if (v20)
  {
    int64_t v8 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v9 + 8 * v8);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1004812E8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_100481450(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10048150C(char *a1, char *a2)
{
  return sub_10047F74C(*a1, *a2);
}

Swift::Int sub_100481518()
{
  return sub_100480338();
}

uint64_t sub_100481520()
{
  return sub_100480774();
}

Swift::Int sub_100481528()
{
  return sub_100480C30();
}

unint64_t sub_100481530@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004820D0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100481560@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100481450(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100481590()
{
  unint64_t result = qword_10095DC38;
  if (!qword_10095DC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DC38);
  }
  return result;
}

unint64_t sub_1004815E8()
{
  unint64_t result = qword_10095DC40;
  if (!qword_10095DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DC40);
  }
  return result;
}

void sub_10048163C(double a1, double a2, uint64_t a3, Swift::UInt a4, Swift::UInt a5)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  Hasher._combine(_:)(a4);
  Hasher._combine(_:)(a5);
}

Swift::Int sub_1004816A8()
{
  double v1 = *v0;
  double v2 = v0[1];
  Swift::UInt v3 = *((void *)v0 + 2);
  Swift::UInt v4 = *((void *)v0 + 3);
  Hasher.init(_seed:)();
  sub_10048163C(v1, v2, (uint64_t)v6, v3, v4);
  return Hasher._finalize()();
}

void sub_100481708(uint64_t a1)
{
  sub_10048163C(*(double *)v1, *(double *)(v1 + 8), a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

Swift::Int sub_100481714()
{
  double v1 = *v0;
  double v2 = v0[1];
  Swift::UInt v3 = *((void *)v0 + 2);
  Swift::UInt v4 = *((void *)v0 + 3);
  Hasher.init(_seed:)();
  sub_10048163C(v1, v2, (uint64_t)v6, v3, v4);
  return Hasher._finalize()();
}

BOOL sub_100481770(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24);
}

BOOL sub_1004817AC(double *a1, double *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1004817C0(double *a1, double *a2)
{
  return *a1 >= *a2;
}

unint64_t sub_1004817D4()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AE7F8);
  qword_10095DBD8 = result;
  return result;
}

unint64_t sub_1004817FC()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AEA18);
  qword_10095DBE0 = result;
  return result;
}

unint64_t sub_100481824()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AEC38);
  qword_10095DBE8 = result;
  return result;
}

unint64_t sub_10048184C()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AEE58);
  qword_10095DBF0 = result;
  return result;
}

unint64_t sub_100481874()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AF078);
  qword_10095DBF8 = result;
  return result;
}

unint64_t sub_10048189C()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AF298);
  qword_10095DC00 = result;
  return result;
}

unint64_t sub_1004818C4()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AE6E8);
  qword_10095DC08 = result;
  return result;
}

unint64_t sub_1004818EC()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AE908);
  qword_10095DC10 = result;
  return result;
}

unint64_t sub_100481914()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AEB28);
  qword_10095DC18 = result;
  return result;
}

unint64_t sub_10048193C()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AED48);
  qword_10095DC20 = result;
  return result;
}

unint64_t sub_100481964()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AEF68);
  qword_10095DC28 = result;
  return result;
}

unint64_t sub_10048198C()
{
  unint64_t result = sub_10052CF6C((uint64_t)&off_1008AF188);
  qword_10095DC30 = result;
  return result;
}

__n128 sub_1004819B4@<Q0>(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  uint64_t v31 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (2)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v9 << 6);
    }
    else
    {
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        swift_release();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x100481D2CLL);
      }
      if (v13 >= v30) {
        goto LABEL_45;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v13);
      ++v9;
      if (!v14)
      {
        int64_t v9 = v13 + 1;
        if (v13 + 1 >= v30) {
          goto LABEL_45;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 2;
          if (v13 + 2 >= v30) {
            goto LABEL_45;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v9);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v30) {
              goto LABEL_45;
            }
            unint64_t v14 = *(void *)(v31 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v9 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_44;
                }
                if (v9 >= v30) {
                  goto LABEL_45;
                }
                unint64_t v14 = *(void *)(v31 + 8 * v9);
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v9 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
    }
    unint64_t v16 = (__n128 *)(*(void *)(a2 + 48) + 32 * v12);
    __n128 v32 = *v16;
    __n128 v33 = v16[1];
    unsigned __int8 v17 = *(unsigned char *)(*(void *)(a2 + 56) + v12);
    unint64_t v18 = 0xD000000000000017;
    unint64_t v19 = 0x80000001007B5860;
    switch(v17)
    {
      case 1u:
        unint64_t v20 = "VO2MAX_BUCKET_VERY_POOR";
        goto LABEL_26;
      case 2u:
        unint64_t v20 = "VO2MAX_BUCKET_POOR";
        goto LABEL_26;
      case 3u:
        unint64_t v20 = "VO2MAX_BUCKET_FAIR";
LABEL_26:
        unint64_t v19 = (unint64_t)v20 | 0x8000000000000000;
        unint64_t v18 = 0xD000000000000012;
        break;
      case 4u:
        unint64_t v18 = 0xD000000000000017;
        int64_t v21 = "VO2MAX_BUCKET_GOOD";
        goto LABEL_28;
      case 5u:
        unint64_t v18 = 0xD000000000000016;
        int64_t v21 = "VO2MAX_BUCKET_EXCELLENT";
LABEL_28:
        unint64_t v19 = (unint64_t)v21 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v22 = 0xD000000000000017;
    unint64_t v23 = 0x80000001007B5860;
    switch(a1)
    {
      case 1:
        uint64_t v24 = "VO2MAX_BUCKET_VERY_POOR";
        goto LABEL_34;
      case 2:
        uint64_t v24 = "VO2MAX_BUCKET_POOR";
        goto LABEL_34;
      case 3:
        uint64_t v24 = "VO2MAX_BUCKET_FAIR";
LABEL_34:
        unint64_t v23 = (unint64_t)v24 | 0x8000000000000000;
        unint64_t v22 = 0xD000000000000012;
        goto LABEL_35;
      case 4:
        unint64_t v25 = 0xD000000000000017;
        Swift::UInt v26 = "VO2MAX_BUCKET_GOOD";
        goto LABEL_38;
      case 5:
        unint64_t v25 = 0xD000000000000016;
        Swift::UInt v26 = "VO2MAX_BUCKET_EXCELLENT";
LABEL_38:
        unint64_t v23 = (unint64_t)v26 | 0x8000000000000000;
        if (v18 == v25) {
          goto LABEL_39;
        }
        goto LABEL_4;
      default:
LABEL_35:
        if (v18 != v22) {
          goto LABEL_4;
        }
LABEL_39:
        if (v19 != v23)
        {
LABEL_4:
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10)
          {
            swift_release();
            goto LABEL_42;
          }
          continue;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_42:
        a4->n128_u64[0] = 0;
        a4->n128_u8[8] = 1;
        __n128 result = v33;
        a4[1] = v32;
        a4[2] = v33;
        a4[3].n128_u8[0] = v17;
        a4[3].n128_u64[1] = a3;
        return result;
    }
  }
}

uint64_t sub_100481D5C(unint64_t a1, uint64_t a2)
{
  if (a1 - 80 < 0xFFFFFFFFFFFFFFC4 || (unint64_t)(a2 - 1) > 1) {
    return 0;
  }
  if (a1 <= 0x1D)
  {
    if (a2 == 1)
    {
      if (qword_10094ACC0 == -1) {
        return swift_bridgeObjectRetain();
      }
    }
    else if (qword_10094AC90 == -1)
    {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (a1 <= 0x27)
  {
    if (a2 == 1)
    {
      if (qword_10094ACC8 == -1) {
        return swift_bridgeObjectRetain();
      }
    }
    else if (qword_10094AC98 == -1)
    {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (a1 <= 0x31)
  {
    if (a2 == 1)
    {
      if (qword_10094ACD0 == -1) {
        return swift_bridgeObjectRetain();
      }
    }
    else if (qword_10094ACA0 == -1)
    {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (a1 <= 0x3B)
  {
    if (a2 == 1)
    {
      if (qword_10094ACD8 == -1) {
        return swift_bridgeObjectRetain();
      }
    }
    else if (qword_10094ACA8 == -1)
    {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (a1 <= 0x45)
  {
    if (a2 == 1)
    {
      if (qword_10094ACE0 == -1) {
        return swift_bridgeObjectRetain();
      }
    }
    else if (qword_10094ACB0 == -1)
    {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (a2 == 1)
  {
    if (qword_10094ACE8 == -1) {
      return swift_bridgeObjectRetain();
    }
    goto LABEL_39;
  }
  if (qword_10094ACB8 != -1) {
LABEL_39:
  }
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1004820D0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6908, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t getEnumTagSinglePayload for VO2MaxInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 6;
  int v5 = v3 - 6;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VO2MaxInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VO2MaxInfo()
{
  return &type metadata for VO2MaxInfo;
}

ValueMetadata *type metadata accessor for VO2MaxRange()
{
  return &type metadata for VO2MaxRange;
}

void *sub_1004821D4(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for Artwork();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  int v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    unint64_t v16 = _swiftEmptyArrayStorage;
    sub_1001C94D0(0, v6, 0);
    uint64_t v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for MediaMoment() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      MediaMoment.artwork.getter();
      unint64_t v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_1001C94D0(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1004823BC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_10048275C(a1, a2, a3);
}

uint64_t sub_1004823D4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  return sub_100482400(a1, a2, (uint64_t (*)(void))&type metadata accessor for MediaDuration, a3);
}

uint64_t sub_100482400@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, char *a4@<X8>)
{
  uint64_t v34 = a1;
  id v29 = a4;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v30 = a2 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v33 = v7 + 16;
  uint64_t v35 = v7 + 32;
  int64_t v31 = (unint64_t)(v14 + 63) >> 6;
  __n128 v32 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v36 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v36 + 48) + *(void *)(v7 + 72) * i, v6);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v24(v9, v12, v6);
    char v25 = v34(v9);
    if (v4)
    {
      (*v32)(v9, v6);
      return swift_release();
    }
    if (v25)
    {
      swift_release();
      Swift::UInt v26 = v29;
      v24(v29, v9, v6);
      uint64_t v27 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, v27, 1, v6);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v32)(v9, v6);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v18);
    if (!v22)
    {
      int64_t v23 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v30 + 8 * v23);
      if (v22) {
        goto LABEL_16;
      }
      int64_t v23 = v18 + 2;
      if (v18 + 2 >= v31) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v30 + 8 * v23);
      if (v22) {
        goto LABEL_16;
      }
      int64_t v23 = v18 + 3;
      if (v18 + 3 >= v31) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        int64_t v18 = v23;
        goto LABEL_17;
      }
      int64_t v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        unint64_t v22 = *(void *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v18 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_31;
            }
            if (v18 >= v31) {
              goto LABEL_28;
            }
            unint64_t v22 = *(void *)(v30 + 8 * v18);
            ++v23;
            if (v22) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      Swift::UInt v26 = v29;
      swift_release();
      uint64_t v27 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, v27, 1, v6);
    }
LABEL_17:
    unint64_t v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_10048275C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100482884()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache) removeAllObjects];
    sub_10006CA14();
  }
}

uint64_t sub_1004828F0(uint64_t a1, uint64_t a2, void (*a3)(void), char *a4)
{
  v92 = a3;
  v93 = a4;
  uint64_t v6 = sub_1000AFA94(&qword_10095DD20);
  uint64_t v84 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v82 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v8;
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)v77 - v9;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v86 = (char *)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v87 = (char *)v77 - v14;
  uint64_t v83 = v15;
  __chkstk_darwin(v13);
  uint64_t v88 = (char *)v77 - v16;
  uint64_t v17 = sub_1000AFA94(&qword_100950BA8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v79 = (char *)v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  int64_t v21 = (char *)v77 - v20;
  uint64_t v22 = type metadata accessor for Trainer();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v78 = (char *)v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  char v25 = (void *)HKLogActivity;
  v77[1] = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10074E640;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_1000AA64C();
  v77[0] = "tails for identifier: %@";
  *(void *)(v26 + 32) = 0xD000000000000024;
  *(void *)(v26 + 40) = 0x80000001007CA380;
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v27;
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 72) = a1;
  *(void *)(v26 + 80) = a2;
  id v28 = v25;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v29 = v91;
  uint64_t v30 = (uint64_t *)(v91 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache);
  swift_beginAccess();
  uint64_t v31 = *v30;
  if (!*(void *)(v31 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    uint64_t v33 = a1;
LABEL_7:
    sub_10008DB18((uint64_t)v21, &qword_100950BA8);
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v37 = (void *)swift_allocObject();
    v37[2] = v36;
    v37[3] = v33;
    uint64_t v38 = v92;
    uint64_t v39 = v93;
    v37[4] = a2;
    v37[5] = v38;
    v37[6] = v39;
    uint64_t v40 = v33;
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = a2;
    v41[4] = v38;
    v41[5] = v39;
    sub_10007E4EC((void *)(v29 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v29 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    long long v42 = v81;
    dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)();
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_100491D30;
    *(void *)(v43 + 24) = v37;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_1004968C4;
    *(void *)(v44 + 24) = v43;
    uint64_t v46 = v84;
    uint64_t v45 = v85;
    uint64_t v47 = v82;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v42, v85);
    unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    unint64_t v49 = (v80 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v50 + v48, v47, v45);
    uint64_t v51 = (uint64_t (**)(uint64_t))(v50 + v49);
    *uint64_t v51 = sub_1004968F8;
    v51[1] = (uint64_t (*)(uint64_t))v44;
    swift_retain();
    v93 = (char *)&type metadata for () + 8;
    uint64_t v52 = v87;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v45);
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = sub_100496798;
    *(void *)(v53 + 24) = v41;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_1004968AC;
    *(void *)(v54 + 24) = v53;
    uint64_t v56 = v89;
    uint64_t v55 = v90;
    uint64_t v57 = v86;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v52, v90);
    unint64_t v58 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v59 = (v83 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v60 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v60 + v58, v57, v55);
    uint64_t v61 = (void *)(v60 + v59);
    *uint64_t v61 = sub_1001B3D88;
    v61[1] = v54;
    swift_retain();
    uint64_t v62 = v88;
    Promise.init(asyncOperation:)();
    uint64_t v63 = *(void (**)(char *, uint64_t))(v56 + 8);
    v63(v52, v55);
    uint64_t v64 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = 0;
    *(void *)(v65 + 24) = 0;
    v64(sub_10006D8BC, v65);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v63)(v62, v55);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v32 = sub_1000DA1C0(a1, a2);
  uint64_t v33 = a1;
  if (v34)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v21, *(void *)(v31 + 56) + *(void *)(v23 + 72) * v32, v22);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v35(v21, 0, 1, v22);
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v35(v21, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    goto LABEL_7;
  }
  uint64_t v67 = v78;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v78, v21, v22);
  LODWORD(v91) = static os_log_type_t.default.getter();
  long long v68 = (void *)HKLogActivity;
  uint64_t v69 = swift_allocObject();
  uint64_t v70 = v33;
  uint64_t v71 = (void *)v69;
  *(_OWORD *)(v69 + 16) = xmmword_100752410;
  *(void *)(v69 + 56) = &type metadata for String;
  *(void *)(v69 + 64) = v27;
  unint64_t v72 = v77[0] | 0x8000000000000000;
  *(void *)(v69 + 32) = 0xD000000000000024;
  *(void *)(v69 + 40) = v72;
  *(void *)(v69 + 96) = &type metadata for String;
  *(void *)(v69 + 104) = v27;
  *(void *)(v69 + 72) = v70;
  *(void *)(v69 + 80) = a2;
  swift_bridgeObjectRetain();
  id v73 = v68;
  uint64_t v74 = Trainer.description.getter();
  v71[17] = &type metadata for String;
  v71[18] = v27;
  v71[14] = v74;
  v71[15] = v75;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v76 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v79, v67, v22);
  v35((char *)v76, 0, 1, v22);
  v92(v76);
  sub_10008DB18(v76, &qword_100950BA8);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v67, v22);
}

uint64_t sub_100483294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v19 = a6;
  uint64_t v20 = a5;
  uint64_t v8 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Trainer();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainerDetail.trainer.getter();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    v16(v10, v14, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1005CE9F8((uint64_t)v10, a3, a4);
    swift_endAccess();
  }
  v16(v10, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v20(v10);
  sub_10008DB18((uint64_t)v10, &qword_100950BA8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1004834DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v18 = a5;
  uint64_t v19 = a4;
  uint64_t v7 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  uint64_t v10 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100752410;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000AA64C();
  *(void *)(v11 + 32) = 0xD000000000000024;
  *(void *)(v11 + 40) = 0x80000001007CA380;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a2;
  *(void *)(v11 + 80) = a3;
  swift_getErrorValue();
  id v13 = v10;
  swift_bridgeObjectRetain();
  uint64_t v14 = Error.localizedDescription.getter();
  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v12;
  *(void *)(v11 + 112) = v14;
  *(void *)(v11 + 120) = v15;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  v19(v9);
  return sub_10008DB18((uint64_t)v9, &qword_100950BA8);
}

uint64_t sub_1004836C0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1004836E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v42 = a3;
  uint64_t v43 = a6;
  uint64_t v9 = type metadata accessor for CatalogLockup();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v40 - v14;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
  uint64_t v41 = a5;
  uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v16((char *)v40 - v14, a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    a5 = v41;
LABEL_7:
    static os_log_type_t.error.getter();
    char v34 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_100752410;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v36 = sub_1000AA64C();
    *(void *)(v35 + 64) = v36;
    *(void *)(v35 + 32) = 0xD00000000000002ALL;
    *(void *)(v35 + 40) = 0x80000001007B70F0;
    *(void *)(v35 + 96) = sub_1000AFA94(&qword_10095DD08);
    uint64_t v37 = sub_1000A132C(&qword_10095DD10, &qword_10095DD08);
    *(void *)(v35 + 72) = a1;
    *(void *)(v35 + 136) = &type metadata for String;
    *(void *)(v35 + 144) = v36;
    uint64_t v38 = v42;
    *(void *)(v35 + 104) = v37;
    *(void *)(v35 + 112) = v38;
    *(void *)(v35 + 120) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v39 = v34;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void))a5)(0);
  }
  uint64_t v18 = (void *)Strong;
  sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_mediaTagStringBuilder, (uint64_t)v44);

  sub_100093E60(v44, (uint64_t)v45);
  v16(v13, (unint64_t)v15, v9);
  sub_10008E75C((uint64_t)v45, (uint64_t)v44);
  uint64_t v19 = (objc_class *)type metadata accessor for CatalogItemViewModel();
  id v20 = objc_allocWithZone(v19);
  id v21 = sub_10040F280((uint64_t)v13, v44);
  v40[3] = static os_log_type_t.default.getter();
  uint64_t v22 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100752410;
  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v24 = sub_1000AA64C();
  *(void *)(v23 + 32) = 0xD00000000000002ALL;
  *(void *)(v23 + 40) = 0x80000001007B70F0;
  *(void *)(v23 + 96) = &type metadata for String;
  *(void *)(v23 + 104) = v24;
  uint64_t v25 = v42;
  *(void *)(v23 + 64) = v24;
  *(void *)(v23 + 72) = v25;
  *(void *)(v23 + 80) = a4;
  *(void *)(v23 + 136) = v19;
  *(void *)(v23 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
  *(void *)(v23 + 112) = v21;
  id v26 = v22;
  swift_bridgeObjectRetain();
  id v27 = v21;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v28 = swift_unknownObjectWeakLoadStrong();
  if (v28)
  {
    uint64_t v29 = (void *)v28;
    id v30 = objc_retain(*(id *)(v28
                            + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache));

    NSString v31 = String._bridgeToObjectiveC()();
    [v30 setObject:v27 forKey:v31];
  }
  id v32 = v27;
  v41(v27);

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v45);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_100483B90(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100752410;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA64C();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = 0xD00000000000002ALL;
  *(void *)(v5 + 40) = 0x80000001007B70F0;
  uint64_t v8 = a2[3];
  uint64_t v7 = a2[4];
  sub_10007E4EC(a2, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  id v10 = v4;
  uint64_t v11 = v9(v8, v7);
  *(void *)(v5 + 96) = &type metadata for String;
  *(void *)(v5 + 104) = v6;
  *(void *)(v5 + 72) = v11;
  *(void *)(v5 + 80) = v12;
  swift_getErrorValue();
  uint64_t v13 = Error.localizedDescription.getter();
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 112) = v13;
  *(void *)(v5 + 120) = v14;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a3(0);
}

uint64_t sub_100483CF8(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

void sub_100483D24(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  v106 = a2;
  uint64_t v107 = a3;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_100966910);
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v91 = v8;
  v92 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v93 = (char *)&v86 - v9;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v102 = *(void *)(v10 - 8);
  uint64_t v103 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  v97 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v98 = (char *)&v86 - v14;
  uint64_t v96 = v15;
  __chkstk_darwin(v13);
  v101 = (char *)&v86 - v16;
  uint64_t CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest();
  uint64_t v99 = *(void *)(CatalogWorkoutsRequest - 8);
  uint64_t v100 = CatalogWorkoutsRequest;
  __chkstk_darwin(CatalogWorkoutsRequest);
  v108 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v20 = v19 - 8;
  uint64_t v90 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v90 + 64);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  uint64_t v23 = (void *)HKLogActivity;
  uint64_t v88 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10074E640;
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v25 = sub_1000AA64C();
  *(void *)(v24 + 64) = v25;
  unint64_t v87 = (unint64_t)" model for stack: %@";
  *(void *)(v24 + 32) = 0xD000000000000024;
  *(void *)(v24 + 40) = 0x80000001007CA080;
  id v26 = v23;
  uint64_t v27 = sub_1003D4F34();
  *(void *)(v24 + 96) = &type metadata for String;
  *(void *)(v24 + 104) = v25;
  *(void *)(v24 + 72) = v27;
  *(void *)(v24 + 80) = v28;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t *)(a1 + *(int *)(v20 + 36));
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v32 = v4;
  uint64_t v33 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache);
  swift_bridgeObjectRetain();
  uint64_t v104 = v31;
  uint64_t v105 = v30;
  NSString v34 = String._bridgeToObjectiveC()();
  uint64_t v35 = (char *)[v33 objectForKey:v34];

  if (!v35) {
    goto LABEL_7;
  }
  uint64_t v36 = *(void *)(*(void *)&v35[OBJC_IVAR___CHCatalogItemViewModel_workouts] + 16);
  uint64_t v37 = sub_1003D585C()[2];
  swift_bridgeObjectRelease();
  if (v36 != v37)
  {

    uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_7:
    uint64_t v45 = swift_allocObject();
    uint64_t v89 = v32;
    swift_unknownObjectWeakInit();
    sub_1004955C4(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    uint64_t v46 = (uint64_t)v22;
    unint64_t v47 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    unint64_t v48 = (v21 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = a1;
    unint64_t v50 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = swift_allocObject();
    sub_100495630(v46, v52 + v47, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    *(void *)(v52 + v48) = v45;
    uint64_t v53 = (void *)(v52 + v50);
    uint64_t v55 = v106;
    uint64_t v54 = v107;
    void *v53 = v106;
    v53[1] = v54;
    uint64_t v56 = (void *)(v52 + v51);
    uint64_t v57 = v105;
    *uint64_t v56 = v104;
    v56[1] = v57;
    sub_1004955C4(v49, v46, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    uint64_t v58 = swift_allocObject();
    uint64_t v105 = v58;
    sub_100495630(v46, v58 + v47, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    unint64_t v59 = (void *)(v58 + v48);
    *unint64_t v59 = v55;
    v59[1] = v54;
    swift_retain_n();
    uint64_t v60 = sub_1003D585C();
    sub_1001EF044((uint64_t)v60);
    swift_bridgeObjectRelease();
    FetchCatalogWorkoutsRequest.init(identifiers:)();
    sub_10007E4EC((void *)(v89 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v89 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    uint64_t v61 = v93;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)();
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = sub_100490968;
    *(void *)(v62 + 24) = v52;
    uint64_t v90 = v52;
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = sub_1004968DC;
    *(void *)(v63 + 24) = v62;
    uint64_t v65 = v94;
    uint64_t v64 = v95;
    uint64_t v66 = v92;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v92, v61, v95);
    unint64_t v67 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v68 = (v91 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v69 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v69 + v67, v66, v64);
    uint64_t v70 = (uint64_t (**)(uint64_t *))(v69 + v68);
    *uint64_t v70 = sub_100496900;
    v70[1] = (uint64_t (*)(uint64_t *))v63;
    swift_retain();
    uint64_t v71 = v98;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v64);
    uint64_t v72 = swift_allocObject();
    uint64_t v73 = v105;
    *(void *)(v72 + 16) = sub_100490970;
    *(void *)(v72 + 24) = v73;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = sub_1004968AC;
    *(void *)(v74 + 24) = v72;
    uint64_t v76 = v102;
    uint64_t v75 = v103;
    uint64_t v77 = v97;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v97, v71, v103);
    unint64_t v78 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    unint64_t v79 = (v96 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v80 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v80 + v78, v77, v75);
    uint64_t v81 = (void *)(v80 + v79);
    *uint64_t v81 = sub_1001B3D88;
    v81[1] = v74;
    swift_retain();
    uint64_t v82 = v101;
    Promise.init(asyncOperation:)();
    uint64_t v83 = *(void (**)(char *, uint64_t))(v76 + 8);
    v83(v71, v75);
    uint64_t v84 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = 0;
    *(void *)(v85 + 24) = 0;
    v84(sub_10006D8BC, v85);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v83(v82, v75);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v108, v100);
    return;
  }
  uint64_t v38 = v105;
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  id v39 = (void *)HKLogActivity;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100752410;
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = v25;
  unint64_t v41 = v87 | 0x8000000000000000;
  *(void *)(v40 + 32) = 0xD000000000000024;
  *(void *)(v40 + 40) = v41;
  *(void *)(v40 + 96) = &type metadata for String;
  *(void *)(v40 + 104) = v25;
  *(void *)(v40 + 72) = v104;
  *(void *)(v40 + 80) = v38;
  *(void *)(v40 + 136) = type metadata accessor for CatalogItemViewModel();
  *(void *)(v40 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
  *(void *)(v40 + 112) = v35;
  swift_bridgeObjectRetain();
  id v42 = v39;
  uint64_t v43 = v35;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  v108 = v43;
  v106(v35);

  uint64_t v44 = v108;
}

uint64_t sub_10048471C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v121 = a7;
  uint64_t v116 = a6;
  uint64_t v129 = a3;
  uint64_t v138 = a2;
  uint64_t v10 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v113 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v114 = v11;
  uint64_t v126 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1000AFA94(&qword_10095DCE0);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = v12;
  __chkstk_darwin(v13);
  v128 = (char *)&v110 - v14;
  uint64_t v123 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  v120 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10095BCB8);
  uint64_t v111 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8);
  uint64_t v125 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = v17;
  __chkstk_darwin(v18);
  v127 = (char *)&v110 - v19;
  uint64_t v20 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v20 - 8);
  v134 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Artwork();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  v124 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = v24;
  __chkstk_darwin(v25);
  v136 = (char *)&v110 - v26;
  uint64_t v145 = type metadata accessor for CatalogWorkout();
  uint64_t v27 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v147 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v110 - v30;
  __chkstk_darwin(v32);
  v137 = (char *)&v110 - v33;
  unint64_t v34 = sub_100523EB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v35 = *(void *)(a1 + 16);
  uint64_t v139 = a1;
  if (!v35)
  {
LABEL_15:
    uint64_t v60 = sub_1003D585C();
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_10048CD2C((uint64_t)v60, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v61[2])
    {
      uint64_t v62 = v137;
      uint64_t v63 = v145;
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v137, (unint64_t)v61+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), v145);
      uint64_t v64 = (uint64_t)v134;
      ArtworkFlavorMatching.artworkMatching(variant:)();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v64, 1, v22) == 1)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v62, v63);
        swift_bridgeObjectRelease();
        sub_10008DB18(v64, &qword_1009512E8);
      }
      else
      {
        uint64_t v65 = *(char **)(v23 + 32);
        uint64_t v66 = v64;
        unint64_t v67 = v136;
        v147 = (char *)(v23 + 32);
        v146 = v65;
        ((void (*)(char *, uint64_t, uint64_t))v65)(v136, v66, v22);
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v69 = (void *)Strong;
          uint64_t v135 = v27;
          sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_mediaTagStringBuilder, (uint64_t)&v149);

          sub_100093E60(&v149, (uint64_t)&v151);
          swift_beginAccess();
          uint64_t v70 = swift_unknownObjectWeakLoadStrong();
          if (v70)
          {
            uint64_t v71 = (void *)v70;
            uint64_t v72 = *(void *)(v70 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists);
            swift_bridgeObjectRetain();

            __chkstk_darwin(v73);
            *(&v110 - 2) = v138;
            uint64_t v74 = v127;
            sub_100482400((uint64_t (*)(char *))sub_100490AA8, v72, (uint64_t (*)(void))&type metadata accessor for Playlist, v127);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v79 = type metadata accessor for Playlist();
            uint64_t v74 = v127;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v127, 1, 1, v79);
          }
          swift_beginAccess();
          uint64_t v80 = swift_unknownObjectWeakLoadStrong();
          if (v80)
          {
            uint64_t v81 = (void *)v80;
            sub_10008E75C(v80 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_configurationClient, (uint64_t)&v149);

            sub_10007E4EC(&v149, v150);
            dispatch thunk of ConfigurationClientProtocol.queryConfiguration()();
            sub_1000AEF2C((uint64_t)v74, v125, &qword_10095BCB8);
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v124, v136, v22);
            sub_10008E75C((uint64_t)&v151, (uint64_t)&v148);
            v144 = type metadata accessor for FitnessPlusStackViewModel;
            sub_1004955C4(v138, v126, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
            unint64_t v82 = (*(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
            unint64_t v83 = (v112 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v84 = *(unsigned __int8 *)(v23 + 80);
            uint64_t v132 = v22;
            uint64_t v85 = (v84 + v83 + 8) & ~v84;
            uint64_t v130 = v23;
            unint64_t v86 = (v110 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v87 = (*(unsigned __int8 *)(v113 + 80) + v86 + 40) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
            v131 = a4;
            unint64_t v88 = (v114 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v89 = (v88 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v133 = a5;
            uint64_t v90 = swift_allocObject();
            sub_1000AEEC8(v125, v90 + v82, &qword_10095BCB8);
            *(void *)(v90 + v83) = v61;
            ((void (*)(uint64_t, char *, uint64_t))v146)(v90 + v85, v124, v132);
            uint64_t v91 = v90 + v86;
            uint64_t v23 = v130;
            sub_100093E60(&v148, v91);
            sub_100495630(v126, v90 + v87, (uint64_t (*)(void))v144);
            *(void *)(v90 + v88) = v129;
            v92 = (void *)(v90 + v89);
            uint64_t v93 = v121;
            void *v92 = v116;
            v92[1] = v93;
            uint64_t v94 = (void *)(v90 + ((v89 + 23) & 0xFFFFFFFFFFFFFFF8));
            uint64_t v95 = v133;
            *uint64_t v94 = v131;
            v94[1] = v95;
            uint64_t v96 = swift_allocObject();
            *(void *)(v96 + 16) = sub_100490E30;
            *(void *)(v96 + 24) = v90;
            uint64_t v97 = v118;
            v98 = v117;
            uint64_t v99 = v119;
            (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, v128, v119);
            unint64_t v100 = (*(unsigned __int8 *)(v97 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
            unint64_t v101 = (v115 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v102 = swift_allocObject();
            (*(void (**)(unint64_t, char *, uint64_t))(v97 + 32))(v102 + v100, v98, v99);
            uint64_t v103 = (uint64_t (**)(uint64_t))(v102 + v101);
            *uint64_t v103 = sub_100490FF4;
            v103[1] = (uint64_t (*)(uint64_t))v96;
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v104 = v120;
            Promise.init(asyncOperation:)();
            uint64_t v105 = v99;
            uint64_t v74 = v127;
            (*(void (**)(char *, uint64_t))(v97 + 8))(v128, v105);
            uint64_t v22 = v132;
            _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v149);
            uint64_t v106 = v123;
            uint64_t v107 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
            uint64_t v108 = swift_allocObject();
            *(void *)(v108 + 16) = 0;
            *(void *)(v108 + 24) = 0;
            v107(sub_10006D8BC, v108);
            v109 = v136;
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v122 + 8))(v104, v106);
          }
          else
          {
            swift_bridgeObjectRelease();
            v109 = v136;
          }
          sub_10008DB18((uint64_t)v74, &qword_10095BCB8);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v151);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v109, v22);
          return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v137, v145);
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v67, v22);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v137, v145);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    static os_log_type_t.error.getter();
    uint64_t v75 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_10074E640;
    *(void *)(v76 + 56) = &type metadata for String;
    *(void *)(v76 + 64) = sub_1000AA64C();
    *(void *)(v76 + 32) = 0xD000000000000024;
    *(void *)(v76 + 40) = 0x80000001007CA080;
    *(void *)(v76 + 96) = sub_1000AFA94(&qword_10095DCE8);
    *(void *)(v76 + 104) = sub_1000A132C(&qword_10095DCF0, &qword_10095DCE8);
    *(void *)(v76 + 72) = v139;
    swift_bridgeObjectRetain();
    id v77 = v75;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return a4(0);
  }
  uint64_t v130 = v23;
  uint64_t v132 = v22;
  v131 = a4;
  uint64_t v133 = a5;
  uint64_t v135 = v27;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v36 = v27 + 16;
  v143 = v37;
  uint64_t v38 = (char *)(a1 + ((*(unsigned __int8 *)(v36 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 64)));
  uint64_t v39 = *(void *)(v36 + 56);
  v141 = (void (**)(unint64_t, char *, uint64_t))(v36 + 16);
  v140 = (void (**)(unint64_t, char *, uint64_t))(v36 + 24);
  v144 = (uint64_t (*)())v36;
  v142 = (void (**)(char *, uint64_t))(v36 - 8);
  swift_bridgeObjectRetain();
  uint64_t v40 = v145;
  while (1)
  {
    uint64_t v41 = v35;
    v146 = v38;
    id v42 = v143;
    v143(v31, v38, v40);
    uint64_t v43 = CatalogWorkout.identifier.getter();
    uint64_t v45 = v44;
    v42(v147, v31, v40);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v151 = (void *)v34;
    unint64_t v48 = sub_1000DA1C0(v43, v45);
    uint64_t v49 = *(void *)(v34 + 16);
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      break;
    }
    char v52 = v47;
    if (*(void *)(v34 + 24) >= v51)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1004F5040();
      }
    }
    else
    {
      sub_1004ECBEC(v51, isUniquelyReferenced_nonNull_native);
      unint64_t v53 = sub_1000DA1C0(v43, v45);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_31;
      }
      unint64_t v48 = v53;
    }
    uint64_t v55 = v151;
    if (v52)
    {
      uint64_t v40 = v145;
      (*v140)(v151[7] + v48 * v39, v147, v145);
    }
    else
    {
      v151[(v48 >> 6) + 8] |= 1 << v48;
      uint64_t v56 = (uint64_t *)(v55[6] + 16 * v48);
      *uint64_t v56 = v43;
      v56[1] = v45;
      uint64_t v40 = v145;
      (*v141)(v55[7] + v48 * v39, v147, v145);
      uint64_t v57 = v55[2];
      BOOL v58 = __OFADD__(v57, 1);
      uint64_t v59 = v57 + 1;
      if (v58) {
        goto LABEL_30;
      }
      v55[2] = v59;
      swift_bridgeObjectRetain();
    }
    unint64_t v34 = (unint64_t)v151;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v142)(v31, v40);
    uint64_t v38 = &v146[v39];
    --v35;
    if (v41 == 1)
    {
      swift_bridgeObjectRelease();
      a5 = v133;
      a4 = v131;
      uint64_t v22 = v132;
      uint64_t v23 = v130;
      uint64_t v27 = v135;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100485750(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Playlist.identifier.getter();
  uint64_t v5 = v4;
  uint64_t v6 = (void *)(a2 + *(int *)(type metadata accessor for FitnessPlusStackViewModel() + 24));
  uint64_t v7 = v6[1];
  if (v7)
  {
    if (v3 == *v6 && v7 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_1004857E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint64_t a11)
{
  uint64_t v38 = a8;
  uint64_t v39 = a2;
  uint64_t v43 = a7;
  uint64_t v44 = a6;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a1;
  uint64_t v45 = a10;
  uint64_t v46 = a11;
  uint64_t v12 = type metadata accessor for Configuration();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Artwork();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10095BCB8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 += 16;
  sub_1000AEF2C(v39, (uint64_t)v22, &qword_10095BCB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v40, v16);
  sub_10008E75C(v41, (uint64_t)v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v42, v12);
  uint64_t v23 = (objc_class *)type metadata accessor for CatalogItemViewModel();
  objc_allocWithZone(v23);
  swift_bridgeObjectRetain();
  id v24 = sub_10040F5A0((uint64_t)v22, a3, (uint64_t)v19, v47, (uint64_t)v15);
  static os_log_type_t.default.getter();
  uint64_t v25 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100752410;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_1000AA64C();
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 32) = 0xD000000000000024;
  *(void *)(v26 + 40) = 0x80000001007CA080;
  uint64_t v28 = (uint64_t *)(v44 + *(int *)(type metadata accessor for FitnessPlusStackViewModel() + 28));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v27;
  *(void *)(v26 + 72) = v29;
  *(void *)(v26 + 80) = v30;
  *(void *)(v26 + 136) = v23;
  *(void *)(v26 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
  *(void *)(v26 + 112) = v24;
  id v31 = v25;
  swift_bridgeObjectRetain();
  id v32 = v24;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v34 = (void *)Strong;
    id v35 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache);

    NSString v36 = String._bridgeToObjectiveC()();
    [v35 setObject:v32 forKey:v36];
  }
  id v37 = v32;
  v45(v32);
}

uint64_t sub_100485BDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100752410;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA64C();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = 0xD000000000000024;
  *(void *)(v5 + 40) = 0x80000001007CA080;
  id v7 = v4;
  uint64_t v8 = sub_1003D4F34();
  *(void *)(v5 + 96) = &type metadata for String;
  *(void *)(v5 + 104) = v6;
  *(void *)(v5 + 72) = v8;
  *(void *)(v5 + 80) = v9;
  swift_getErrorValue();
  uint64_t v10 = Error.localizedDescription.getter();
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 112) = v10;
  *(void *)(v5 + 120) = v11;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a3(0);
}

uint64_t sub_100485D1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1000AFA94(&qword_10094F3C8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v48 = (char *)&v47 - v11;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  uint64_t v52 = *(void *)(v53 + 64);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v50 = (char *)&v47 - v16;
  __chkstk_darwin(v15);
  uint64_t v55 = (char *)&v47 - v17;
  uint64_t v18 = swift_allocObject();
  uint64_t v56 = v18;
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  sub_10007E4EC((void *)(v3 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader), *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader + 24));
  swift_retain_n();
  id v20 = a1;
  uint64_t v21 = v48;
  dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v56;
  *(void *)(v22 + 16) = sub_1003498DC;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_100495B1C;
  *(void *)(v24 + 24) = v22;
  uint64_t v25 = v49;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v21, v7);
  unint64_t v26 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v28 + v26, v25, v7);
  uint64_t v29 = (uint64_t (**)(void **))(v28 + v27);
  uint64_t *v29 = sub_100495B48;
  v29[1] = (uint64_t (*)(void **))v24;
  swift_retain();
  uint64_t v30 = v50;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_100495B10;
  *(void *)(v31 + 24) = v19;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1004968AC;
  *(void *)(v32 + 24) = v31;
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  id v35 = v51;
  NSString v36 = v30;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v30, v54);
  uint64_t v37 = v33;
  unint64_t v38 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v39 = (v52 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v40 + v38, v35, v34);
  uint64_t v41 = (void *)(v40 + v39);
  *uint64_t v41 = sub_1001B3D88;
  v41[1] = v32;
  swift_retain();
  uint64_t v42 = v55;
  Promise.init(asyncOperation:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v36, v34);
  uint64_t v44 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = 0;
  *(void *)(v45 + 24) = 0;
  v44(sub_10006D8BC, v45);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v43)(v42, v34);
}

uint64_t sub_100486288(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100752410;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA64C();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = 0xD00000000000002ELL;
  *(void *)(v5 + 40) = 0x80000001007CA720;
  *(void *)(v5 + 96) = type metadata accessor for CatalogItemViewModel();
  *(void *)(v5 + 104) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
  *(void *)(v5 + 72) = a2;
  swift_getErrorValue();
  id v7 = v4;
  id v8 = a2;
  uint64_t v9 = Error.localizedDescription.getter();
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 112) = v9;
  *(void *)(v5 + 120) = v10;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a3(0);
}

void sub_1004864CC(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(a2 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v24 = [self gramUnitWithMetricPrefix:9];
    id v13 = [v12 quantity];
    [v13 doubleValueForUnit:v24];
    uint64_t v15 = v14;

    a4(v15, 0);

    return;
  }

LABEL_14:
  double v16 = sub_100493E2C();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  uint64_t v18 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v17))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315650;
    sub_10008F1F4(0xD00000000000002CLL, 0x80000001007CA7C0, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    if (a3)
    {
      swift_getErrorValue();
      Error.localizedDescription.getter();
    }
    sub_1000AFA94((uint64_t *)&unk_100958790);
    uint64_t v21 = Optional.description.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    sub_10008F1F4(v21, v23, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v20 + 22) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v17, "[seymour] %s failed to fetch weight with error %s. Defaulting to %f", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  a4(*(void *)&v16, 0);
}

uint64_t sub_10048687C(uint64_t a1, char a2, uint64_t (*a3)(void, __n128), uint64_t a4, void *a5, void *a6)
{
  uint64_t v84 = a6;
  uint64_t v11 = sub_1000AFA94(&qword_10095DD98);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  double v16 = (char *)v74 - v15;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __n128 v26 = __chkstk_darwin(v19);
  if (a2) {
    return a3(0, v26);
  }
  uint64_t v75 = v21;
  uint64_t v76 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v77 = v16;
  uint64_t v78 = v12;
  uint64_t v79 = v25;
  uint64_t v80 = v24;
  uint64_t v27 = a4;
  uint64_t v81 = (char *)v74 - v22;
  uint64_t v82 = v23;
  uint64_t v83 = v20;
  id v28 = [a5 metadata:v26.n128_f64[0]];
  if (!v28)
  {
    long long v85 = 0u;
    long long v86 = 0u;
    goto LABEL_12;
  }
  uint64_t v29 = v28;
  uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  if (!*(void *)(v30 + 16) || (unint64_t v33 = sub_1000DA1C0(v31, v32), (v34 & 1) == 0))
  {
    long long v85 = 0u;
    long long v86 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_10008F484(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
LABEL_12:
    sub_10008DB18((uint64_t)&v85, &qword_100955A00);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    static os_log_type_t.error.getter();
    unint64_t v68 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_10074E640;
    *(void *)(v69 + 56) = &type metadata for String;
    *(void *)(v69 + 64) = sub_1000AA64C();
    *(void *)(v69 + 32) = 0xD00000000000002ELL;
    *(void *)(v69 + 40) = 0x80000001007CA840;
    *(void *)(v69 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    *(void *)(v69 + 104) = sub_1002320AC();
    *(void *)(v69 + 72) = a5;
    id v70 = a5;
    id v71 = v68;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void))a3)(0);
  }
  id v35 = (void *)swift_allocObject();
  v35[2] = a5;
  v35[3] = a3;
  uint64_t v36 = v27;
  uint64_t v37 = v35;
  v35[4] = v36;
  v35[5] = a1;
  unint64_t v38 = (void *)swift_allocObject();
  v38[2] = a5;
  v38[3] = a3;
  uint64_t v84 = v38;
  v38[4] = v36;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v40 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient, (uint64_t)&v85);
    id v41 = a5;
    swift_retain_n();
    id v42 = v41;

    sub_10007E4EC(&v85, *((uint64_t *)&v86 + 1));
    uint64_t v43 = v77;
    dispatch thunk of ArchivedSessionClientProtocol.queryArchivedSession(sessionIdentifier:)();
    swift_bridgeObjectRelease();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_100496034;
    *(void *)(v44 + 24) = v37;
    uint64_t v45 = swift_allocObject();
    v74[1] = v37;
    uint64_t v46 = v45;
    *(void *)(v45 + 16) = sub_1004968C4;
    *(void *)(v45 + 24) = v44;
    uint64_t v47 = v78;
    unint64_t v48 = v76;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, v43, v11);
    unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v50 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v50 + v49, v48, v11);
    uint64_t v51 = (uint64_t (**)(uint64_t))(v50 + ((v13 + v49 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v51 = sub_1004960A4;
    v51[1] = (uint64_t (*)(uint64_t))v46;
    swift_retain();
    uint64_t v76 = (char *)&type metadata for () + 8;
    uint64_t v52 = v80;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v11);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v85);
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v84;
    *(void *)(v53 + 16) = sub_100496098;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1004968AC;
    *(void *)(v55 + 24) = v53;
    uint64_t v57 = v82;
    uint64_t v56 = v83;
    uint64_t v58 = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v79, v52, v83);
    unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v60 = (v75 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v61 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v57 + 32))(v61 + v59, v58, v56);
    uint64_t v62 = (void *)(v61 + v60);
    *uint64_t v62 = sub_1001B3D88;
    v62[1] = v55;
    swift_retain();
    uint64_t v63 = v81;
    Promise.init(asyncOperation:)();
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v64(v52, v56);
    uint64_t v65 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = 0;
    *(void *)(v66 + 24) = 0;
    v65(sub_10006D8BC, v66);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v64)(v63, v56);
  }
  else
  {
    id v72 = a5;
    swift_retain_n();
    id v73 = v72;
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100487048(uint64_t a1, void *a2, uint64_t (*a3)(id), uint64_t a4)
{
  uint64_t v34 = a4;
  id v35 = a3;
  uint64_t v5 = type metadata accessor for UserBodyMassMetric();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009512E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ScoreSummary();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v32 - v19;
  ArchivedSession.scoreSummary.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10008DB18((uint64_t)v10, &qword_1009512E0);
    static os_log_type_t.default.getter();
    uint64_t v21 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10074E640;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_1000AA64C();
    *(void *)(v22 + 32) = 0xD00000000000002ELL;
    *(void *)(v22 + 40) = 0x80000001007CA840;
    *(void *)(v22 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    *(void *)(v22 + 104) = sub_1002320AC();
    *(void *)(v22 + 72) = a2;
    id v23 = v21;
    id v24 = a2;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return v35(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
    static Double.currentMachTimestamp()();
    UserBodyMassMetric.init(massInKg:machTimestamp:)();
    ScoreSummary.scale(by:)();
    uint64_t v32 = v5;
    __n128 v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v26(v14, v17, v11);
    uint64_t v27 = (objc_class *)type metadata accessor for ScoreSummaryWrapper();
    id v28 = (char *)objc_allocWithZone(v27);
    v26(&v28[OBJC_IVAR___CHScoreSummaryWrapper_scoreSummary], v14, v11);
    v36.receiver = v28;
    v36.super_class = v27;
    id v29 = [super init];
    uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
    v30(v14, v11);
    id v31 = v29;
    v35(v29);

    v30(v17, v11);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
    return ((uint64_t (*)(char *, uint64_t))v30)(v20, v11);
  }
}

uint64_t sub_100487474(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100752410;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA64C();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = 0xD00000000000002ELL;
  *(void *)(v5 + 40) = 0x80000001007CA840;
  *(void *)(v5 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  *(void *)(v5 + 104) = sub_1002320AC();
  *(void *)(v5 + 72) = a2;
  swift_getErrorValue();
  id v7 = v4;
  id v8 = a2;
  uint64_t v9 = Error.localizedDescription.getter();
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 112) = v9;
  *(void *)(v5 + 120) = v10;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a3(0);
}

uint64_t sub_1004876DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArtworkDimension();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SeymourArtworkSizingBehavior();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004955C4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SeymourArtworkSizingBehavior);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader, (uint64_t)v19);

      sub_10007E4EC(v19, v20);
      dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)();
LABEL_6:
      uint64_t v16 = sub_1000AFA94(&qword_10094F3C8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 0, 1, v16);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v19);
    }
  }
  else
  {
    uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_100966460);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v13 + 48)], v4);
    swift_beginAccess();
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      sub_10008E75C(v14 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader, (uint64_t)v19);

      sub_10007E4EC(v19, v20);
      dispatch thunk of ArtworkImageLoading.fetchArtwork(_:thatFits:preservingPreferredDimension:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v18 = sub_1000AFA94(&qword_10094F3C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

void sub_100487A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CatalogWorkout();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  CatalogWorkoutDetail.workout.getter();
  CatalogWorkout.mediaMoments.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (char *)sub_100369C30(v11);
  swift_bridgeObjectRelease();
  uint64_t v18 = v12;
  sub_100488B14((uint64_t *)&v18, (uint64_t (*)(void))&type metadata accessor for MediaMoment, (uint64_t (*)(uint64_t))sub_1001EEFF4, (uint64_t (*)(void *))sub_100488BD8);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1004821D4((uint64_t)v18);
  uint64_t v14 = swift_release();
  __chkstk_darwin(v14);
  *(&v17 - 4) = a2;
  *(&v17 - 3) = a3;
  *(&v17 - 2) = a4;
  uint64_t v15 = sub_1006DE5E4((void (*)(void))sub_10049580C, (uint64_t)(&v17 - 6), (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v18 = v15;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
  sub_1000AFA94(&qword_10095DD78);
  sub_1000A132C(&qword_10095DD80, &qword_10095DD78);
  static Promise.serial<A>(queue:_:)();
  swift_bridgeObjectRelease();
}

uint64_t sub_100487C9C(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100752410;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA64C();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = 0xD00000000000003ALL;
  *(void *)(v5 + 40) = 0x80000001007CA570;
  *(void *)(v5 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  *(void *)(v5 + 104) = sub_1002320AC();
  *(void *)(v5 + 72) = a2;
  swift_getErrorValue();
  id v7 = v4;
  id v8 = a2;
  uint64_t v9 = Error.localizedDescription.getter();
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 112) = v9;
  *(void *)(v5 + 120) = v10;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  return a3(0);
}

uint64_t sub_100487E08(uint64_t a1, void *a2)
{
  static os_log_type_t.error.getter();
  uint64_t v3 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100752410;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA64C();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = 0xD00000000000001BLL;
  *(void *)(v4 + 40) = 0x80000001007CA500;
  uint64_t v7 = a2[3];
  uint64_t v6 = a2[4];
  sub_10007E4EC(a2, v7);
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  id v9 = v3;
  uint64_t v10 = v8(v7, v6);
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 80) = v11;
  swift_getErrorValue();
  uint64_t v12 = Error.localizedDescription.getter();
  *(void *)(v4 + 136) = &type metadata for String;
  *(void *)(v4 + 144) = v5;
  *(void *)(v4 + 112) = v12;
  *(void *)(v4 + 120) = v13;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100487F64(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a1;
  uint64_t v77 = sub_1000AFA94(&qword_10095DDC8);
  uint64_t v69 = *(void *)(v77 - 8);
  uint64_t v70 = *(void *)(v69 + 64);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095DDD0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  id v9 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v61 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_10095DDD8);
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  uint64_t v66 = *(void *)(v67 + 64);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v64 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v61 - v15;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v73 = *(void *)(v17 - 8);
  uint64_t v74 = v17;
  uint64_t v72 = *(void *)(v73 + 64);
  uint64_t v18 = __chkstk_darwin(v17);
  id v71 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v65 = (char *)v61 - v21;
  __chkstk_darwin(v20);
  uint64_t v75 = (char *)v61 - v22;
  sub_10007E4EC((void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient), *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient + 24));
  dispatch thunk of RecommendationClientProtocol.queryRecommendations(for:)();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1004886C8;
  *(void *)(v23 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v25 + v24, v9, v5);
  __n128 v26 = (uint64_t (**)(uint64_t *))(v25 + ((v7 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  *__n128 v26 = sub_1004963E4;
  v26[1] = (uint64_t (*)(uint64_t *))v23;
  sub_1000AFA94(&qword_10094DBE0);
  v61[0] = v16;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v27 = v69;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  id v29 = v76;
  uint64_t v28 = v77;
  v62(v76, a1, v77);
  uint64_t v30 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = (v30 + 16) & ~v30;
  v70 += v31;
  v61[1] = v30 | 7;
  uint64_t v32 = swift_allocObject();
  uint64_t v69 = *(void *)(v27 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v69)(v32 + v31, v29, v28);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100496424;
  *(void *)(v33 + 24) = v32;
  uint64_t v34 = v67;
  id v35 = v64;
  objc_super v36 = v16;
  uint64_t v37 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v36, v68);
  unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v39 = (v66 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v40 + v38, v35, v37);
  id v41 = (uint64_t (**)(uint64_t *))(v40 + v39);
  *id v41 = sub_1004964A4;
  v41[1] = (uint64_t (*)(uint64_t *))v33;
  id v42 = v65;
  Promise.init(asyncOperation:)();
  (*(void (**)(void, uint64_t))(v34 + 8))(v61[0], v37);
  uint64_t v44 = v76;
  uint64_t v43 = v77;
  v62(v76, v63, v77);
  uint64_t v45 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v69)(v45 + v31, v44, v43);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1004965A8;
  *(void *)(v46 + 24) = v45;
  uint64_t v47 = v73;
  unint64_t v48 = v71;
  unint64_t v49 = v42;
  uint64_t v50 = v42;
  uint64_t v51 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v49, v74);
  unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v53 = (v72 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v54 + v52, v48, v51);
  uint64_t v55 = (void *)(v54 + v53);
  void *v55 = sub_1001B3D88;
  v55[1] = v46;
  uint64_t v56 = v75;
  Promise.init(asyncOperation:)();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v47 + 8);
  v57(v50, v51);
  uint64_t v58 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = 0;
  *(void *)(v59 + 24) = 0;
  v58(sub_10006D8BC, v59);
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v57)(v56, v51);
}

uint64_t sub_1004886C8@<X0>(void *a1@<X8>)
{
  uint64_t v29 = type metadata accessor for Recommendation();
  uint64_t v3 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_100369C64(v6);
  swift_bridgeObjectRelease();
  uint64_t v30 = v7;
  sub_100488B14((uint64_t *)&v30, (uint64_t (*)(void))&type metadata accessor for Recommendation, (uint64_t (*)(uint64_t))sub_1001EF008, sub_100489798);
  if (v1)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v8 = v30;
    int64_t v9 = v30[2];
    if (v9)
    {
      v24[2] = 0;
      uint64_t v25 = a1;
      uint64_t v30 = _swiftEmptyArrayStorage;
      sub_1001C950C(0, v9, 0);
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
      uint64_t v10 = v3 + 16;
      uint64_t v12 = *(unsigned __int8 *)(v10 + 64);
      v24[1] = v8;
      uint64_t v13 = (char *)v8 + ((v12 + 32) & ~v12);
      uint64_t v26 = *(void *)(v10 + 56);
      uint64_t v27 = v11;
      uint64_t v28 = v10;
      uint64_t v14 = (void (**)(char *, uint64_t))(v10 - 8);
      do
      {
        uint64_t v15 = v29;
        v27(v5, v13, v29);
        uint64_t v16 = Recommendation.referenceIdentifier.getter();
        uint64_t v18 = v17;
        (*v14)(v5, v15);
        uint64_t v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C950C(0, v19[2] + 1, 1);
          uint64_t v19 = v30;
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          sub_1001C950C(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v30;
        }
        v19[2] = v21 + 1;
        uint64_t v22 = &v19[2 * v21];
        v22[4] = v16;
        v22[5] = v18;
        v13 += v26;
        --v9;
      }
      while (v9);
      uint64_t result = swift_release();
      a1 = v25;
    }
    else
    {
      uint64_t result = swift_release();
      uint64_t v19 = _swiftEmptyArrayStorage;
    }
    *a1 = v19;
  }
  return result;
}

uint64_t sub_100488950()
{
  return CheckedContinuation.resume(returning:)();
}

id sub_1004889D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourCatalogItemDataProvider();
  return [super dealloc];
}

uint64_t sub_100488B14(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

void sub_100488BD8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MediaMoment();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  v136 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v151 = (char *)&v131 - v8;
  __chkstk_darwin(v9);
  v146 = (char *)&v131 - v10;
  __chkstk_darwin(v11);
  v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      sub_10048A33C(0, v13, 1, a1);
    }
    return;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  uint64_t v150 = a1;
  Swift::Int v133 = v14;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_10048A958(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1001EEF68((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_100492C20(&qword_10095DD88, (void (*)(uint64_t))&type metadata accessor for MediaMoment);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = dispatch thunk of static Comparable.< infix(_:_:)();
    Swift::Int v32 = v13;
    uint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        unint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        id v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        unint64_t v52 = (char *)(v141 + v44);
        v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          uint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_100492C20(&qword_10095DD88, (void (*)(uint64_t))&type metadata accessor for MediaMoment);
          LOBYTE(v60) = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1001EE868(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_1001EE868((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v75 = v19 + 32;
    uint64_t v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)uint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_10048A958(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Int sub_100489798(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Recommendation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v139 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v152 = (char *)&v133 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v147 = (char *)&v133 - v11;
  __chkstk_darwin(v10);
  Swift::Int v148 = (char *)&v133 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_142;
    }
    if (v13) {
      return sub_10048A65C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_150;
  }
  Swift::Int v135 = result;
  uint64_t v142 = v5;
  if (v13 < 2)
  {
    Swift::Int v20 = _swiftEmptyArrayStorage;
    unint64_t v141 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v13 != 1)
    {
      unint64_t v23 = _swiftEmptyArrayStorage[2];
      Swift::Int v22 = (char *)_swiftEmptyArrayStorage;
LABEL_106:
      v134 = v20;
      if (v23 >= 2)
      {
        uint64_t v126 = *a1;
        do
        {
          unint64_t v127 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_137;
          }
          if (!v126) {
            goto LABEL_149;
          }
          uint64_t v128 = v22;
          uint64_t v129 = *(void *)&v22[16 * v127 + 32];
          uint64_t v130 = *(void *)&v22[16 * v23 + 24];
          sub_10048AF8C(v126 + *(void *)(v142 + 72) * v129, v126 + *(void *)(v142 + 72) * *(void *)&v22[16 * v23 + 16], v126 + *(void *)(v142 + 72) * v130, v141);
          if (v2) {
            break;
          }
          if (v130 < v129) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v128 = sub_1001EEF68((uint64_t)v22);
          }
          if (v127 >= *((void *)v128 + 2)) {
            goto LABEL_139;
          }
          uint64_t v131 = &v128[16 * v127 + 32];
          *(void *)uint64_t v131 = v129;
          *((void *)v131 + 1) = v130;
          unint64_t v132 = *((void *)v128 + 2);
          if (v23 > v132) {
            goto LABEL_140;
          }
          Swift::Int v22 = v128;
          memmove(&v128[16 * v23 + 16], &v128[16 * v23 + 32], 16 * (v132 - v23));
          *((void *)v128 + 2) = v132 - 1;
          unint64_t v23 = v132 - 1;
        }
        while (v132 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v134[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v16 = 1;
    v134 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v16 = v13;
    uint64_t v17 = v15 >> 1;
    uint64_t v18 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v18 + 16) = v17;
    uint64_t v5 = v142;
    unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v134 = (void *)v18;
    unint64_t v141 = v18 + v19;
  }
  uint64_t v21 = 0;
  uint64_t v145 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v146 = v5 + 16;
  v156 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  Swift::Int v22 = (char *)_swiftEmptyArrayStorage;
  uint64_t v149 = a1;
  uint64_t v151 = v4;
  while (1)
  {
    uint64_t v24 = (char *)v21;
    uint64_t v25 = v21 + 1;
    Swift::Int v137 = v22;
    uint64_t v26 = v16;
    if (v21 + 1 >= v16)
    {
      uint64_t v39 = v21 + 1;
      uint64_t v48 = v142;
    }
    else
    {
      Swift::Int v143 = (char *)*a1;
      uint64_t v27 = v143;
      uint64_t v28 = v142;
      uint64_t v29 = *(void *)(v142 + 72);
      uint64_t v140 = v21;
      uint64_t v30 = v29;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
      uint64_t v157 = v26;
      v31(v148, &v143[v29 * v25], v4);
      Swift::Int v32 = &v27[v30 * v140];
      uint64_t v33 = v147;
      Swift::Int v153 = v31;
      v31(v147, v32, v4);
      uint64_t v34 = v148;
      uint64_t v155 = Recommendation.index.getter();
      uint64_t v154 = Recommendation.index.getter();
      uint64_t v35 = v4;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v33, v35);
      uint64_t v37 = v35;
      uint64_t v26 = v157;
      v36(v34, v37);
      uint64_t v38 = v30;
      uint64_t v24 = (char *)v140;
      uint64_t v39 = v140 + 2;
      uint64_t v158 = v38;
      if (v140 + 2 >= v26)
      {
        uint64_t v48 = v142;
      }
      else
      {
        uint64_t v138 = v2;
        uint64_t v150 = v38 * v25;
        uint64_t v40 = v143;
        id v41 = (char *)(v140 + 2);
        uint64_t v144 = v38 * (v140 + 2);
        while (1)
        {
          int v42 = v155 < v154;
          uint64_t v43 = v148;
          uint64_t v44 = v151;
          Swift::Int v45 = v153;
          v153(v148, &v40[v144], v151);
          uint64_t v46 = v147;
          v45(v147, &v40[v150], v44);
          uint64_t v47 = Recommendation.index.getter();
          LODWORD(v47) = v47 >= Recommendation.index.getter();
          v36(v46, v44);
          v36(v43, v44);
          if (v42 == v47) {
            break;
          }
          uint64_t v38 = v158;
          v40 += v158;
          ++v41;
          uint64_t v26 = v157;
          if ((char *)v157 == v41)
          {
            uint64_t v39 = v157;
            uint64_t v2 = v138;
            uint64_t v48 = v142;
            a1 = v149;
            uint64_t v24 = (char *)v140;
            goto LABEL_25;
          }
        }
        uint64_t v2 = v138;
        uint64_t v48 = v142;
        a1 = v149;
        uint64_t v39 = (uint64_t)v41;
        uint64_t v24 = (char *)v140;
        uint64_t v26 = v157;
        uint64_t v38 = v158;
      }
LABEL_25:
      uint64_t v4 = v151;
      if (v155 < v154)
      {
        if (v39 < (uint64_t)v24) {
          goto LABEL_143;
        }
        if ((uint64_t)v24 < v39)
        {
          uint64_t v49 = 0;
          uint64_t v50 = (uint64_t)v24;
          uint64_t v51 = v38 * (v39 - 1);
          uint64_t v52 = v39 * v38;
          uint64_t v53 = v50;
          uint64_t v54 = v39;
          uint64_t v55 = v50 * v38;
          uint64_t v150 = v54;
          do
          {
            if (v53 != v54 + v49 - 1)
            {
              if (!v143) {
                goto LABEL_148;
              }
              uint64_t v138 = v2;
              Swift::Int v57 = &v143[v55];
              Swift::Int v58 = &v143[v51];
              uint64_t v59 = v143;
              uint64_t v60 = *v156;
              (*v156)(v139, &v143[v55], v151);
              if (v55 < v51 || v57 >= &v59[v52])
              {
                uint64_t v56 = v151;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v56 = v151;
                if (v55 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v60(v58, v139, v56);
              uint64_t v48 = v142;
              uint64_t v2 = v138;
              uint64_t v38 = v158;
            }
            ++v53;
            --v49;
            uint64_t v54 = v150;
            v51 -= v38;
            v52 -= v38;
            v55 += v38;
          }
          while (v53 < v150 + v49);
          a1 = v149;
          uint64_t v4 = v151;
          uint64_t v39 = v150;
          uint64_t v24 = (char *)v140;
          uint64_t v26 = v157;
        }
      }
    }
    if (v39 >= v26) {
      goto LABEL_57;
    }
    if (__OFSUB__(v39, v24)) {
      goto LABEL_141;
    }
    if (v39 - (uint64_t)v24 >= v135) {
      goto LABEL_57;
    }
    if (__OFADD__(v24, v135)) {
      goto LABEL_144;
    }
    uint64_t v61 = (uint64_t)&v24[v135] >= v26 ? v26 : (uint64_t)&v24[v135];
    if (v61 < (uint64_t)v24) {
      break;
    }
    if (v39 != v61)
    {
      uint64_t v140 = (uint64_t)v24;
      uint64_t v138 = v2;
      uint64_t v62 = *(void *)(v48 + 72);
      Swift::Int v143 = *(char **)(v48 + 16);
      uint64_t v144 = v62;
      uint64_t v158 = v62 * (v39 - 1);
      uint64_t v157 = v39 * v62;
      uint64_t v136 = v61;
      do
      {
        uint64_t v64 = 0;
        uint64_t v65 = (void (*)(char *, char *, uint64_t))v140;
        uint64_t v150 = v39;
        while (1)
        {
          Swift::Int v153 = v65;
          uint64_t v67 = v148;
          uint64_t v66 = v149;
          uint64_t v68 = *v149;
          uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v143;
          ((void (*)(char *, uint64_t, uint64_t))v143)(v148, v157 + v64 + *v149, v4);
          uint64_t v70 = v158 + v64 + v68;
          uint64_t v71 = v147;
          v69(v147, v70, v4);
          uint64_t v155 = Recommendation.index.getter();
          uint64_t v154 = Recommendation.index.getter();
          uint64_t v72 = *v145;
          (*v145)(v71, v4);
          v72(v67, v4);
          if (v155 >= v154) {
            break;
          }
          uint64_t v73 = *v66;
          if (!*v66) {
            goto LABEL_146;
          }
          unint64_t v74 = (char *)(v73 + v158 + v64);
          uint64_t v75 = *v156;
          uint64_t v4 = v151;
          (*v156)(v152, (char *)(v73 + v157 + v64), v151);
          uint64_t v63 = (char *)v150;
          swift_arrayInitWithTakeFrontToBack();
          v75(v74, v152, v4);
          v64 -= v144;
          uint64_t v65 = (void (*)(char *, char *, uint64_t))((char *)v153 + 1);
          if (v63 == (char *)v153 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v63 = (char *)v150;
        uint64_t v4 = v151;
LABEL_50:
        uint64_t v39 = (uint64_t)(v63 + 1);
        v158 += v144;
        v157 += v144;
      }
      while (v39 != v136);
      uint64_t v39 = v136;
      uint64_t v2 = v138;
      a1 = v149;
      uint64_t v24 = (char *)v140;
    }
LABEL_57:
    if (v39 < (uint64_t)v24) {
      goto LABEL_136;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      Swift::Int v22 = v137;
    }
    else {
      Swift::Int v22 = sub_1001EE868(0, *((void *)v137 + 2) + 1, 1, v137);
    }
    unint64_t v77 = *((void *)v22 + 2);
    unint64_t v76 = *((void *)v22 + 3);
    unint64_t v23 = v77 + 1;
    if (v77 >= v76 >> 1) {
      Swift::Int v22 = sub_1001EE868((char *)(v76 > 1), v77 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v23;
    unint64_t v78 = v22 + 32;
    uint64_t v79 = &v22[16 * v77 + 32];
    *(void *)uint64_t v79 = v24;
    *((void *)v79 + 1) = v39;
    uint64_t v150 = v39;
    if (v77)
    {
      while (1)
      {
        unint64_t v80 = v23 - 1;
        if (v23 >= 4)
        {
          uint64_t v85 = &v78[16 * v23];
          uint64_t v86 = *((void *)v85 - 8);
          uint64_t v87 = *((void *)v85 - 7);
          BOOL v91 = __OFSUB__(v87, v86);
          uint64_t v88 = v87 - v86;
          if (v91) {
            goto LABEL_125;
          }
          uint64_t v90 = *((void *)v85 - 6);
          uint64_t v89 = *((void *)v85 - 5);
          BOOL v91 = __OFSUB__(v89, v90);
          uint64_t v83 = v89 - v90;
          char v84 = v91;
          if (v91) {
            goto LABEL_126;
          }
          unint64_t v92 = v23 - 2;
          uint64_t v93 = &v78[16 * v23 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v91 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v91) {
            goto LABEL_128;
          }
          BOOL v91 = __OFADD__(v83, v96);
          uint64_t v97 = v83 + v96;
          if (v91) {
            goto LABEL_131;
          }
          if (v97 >= v88)
          {
            uint64_t v115 = &v78[16 * v80];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v91 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v91) {
              goto LABEL_135;
            }
            BOOL v108 = v83 < v118;
            goto LABEL_94;
          }
        }
        else
        {
          if (v23 != 3)
          {
            uint64_t v109 = *((void *)v22 + 4);
            uint64_t v110 = *((void *)v22 + 5);
            BOOL v91 = __OFSUB__(v110, v109);
            uint64_t v102 = v110 - v109;
            char v103 = v91;
            goto LABEL_88;
          }
          uint64_t v82 = *((void *)v22 + 4);
          uint64_t v81 = *((void *)v22 + 5);
          BOOL v91 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          char v84 = v91;
        }
        if (v84) {
          goto LABEL_127;
        }
        unint64_t v92 = v23 - 2;
        uint64_t v98 = &v78[16 * v23 - 32];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v101 = __OFSUB__(v99, v100);
        uint64_t v102 = v99 - v100;
        char v103 = v101;
        if (v101) {
          goto LABEL_130;
        }
        uint64_t v104 = &v78[16 * v80];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v91 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v91) {
          goto LABEL_133;
        }
        if (__OFADD__(v102, v107)) {
          goto LABEL_134;
        }
        if (v102 + v107 >= v83)
        {
          BOOL v108 = v83 < v107;
LABEL_94:
          if (v108) {
            unint64_t v80 = v92;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v103) {
          goto LABEL_129;
        }
        uint64_t v111 = &v78[16 * v80];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v91 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v91) {
          goto LABEL_132;
        }
        if (v114 < v102) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v119 = v80 - 1;
        if (v80 - 1 >= v23)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v120 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v121 = &v78[16 * v119];
        uint64_t v122 = *(void *)v121;
        uint64_t v123 = &v78[16 * v80];
        uint64_t v124 = *((void *)v123 + 1);
        sub_10048AF8C(v120 + *(void *)(v142 + 72) * *(void *)v121, v120 + *(void *)(v142 + 72) * *(void *)v123, v120 + *(void *)(v142 + 72) * v124, v141);
        if (v2) {
          goto LABEL_117;
        }
        if (v124 < v122) {
          goto LABEL_122;
        }
        if (v80 > *((void *)v22 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v121 = v122;
        *(void *)&v78[16 * v119 + 8] = v124;
        unint64_t v125 = *((void *)v22 + 2);
        if (v80 >= v125) {
          goto LABEL_124;
        }
        unint64_t v23 = v125 - 1;
        memmove(&v78[16 * v80], v123 + 16, 16 * (v125 - 1 - v80));
        *((void *)v22 + 2) = v125 - 1;
        a1 = v149;
        uint64_t v4 = v151;
        if (v125 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v23 = 1;
LABEL_15:
    uint64_t v16 = a1[1];
    uint64_t v21 = v150;
    if (v150 >= v16)
    {
      Swift::Int v20 = v134;
      goto LABEL_106;
    }
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10048A33C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for MediaMoment();
  __chkstk_darwin(v7);
  id v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v29 - v10;
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      uint64_t v21 = v36;
      Swift::Int v22 = (void (*)(char *, uint64_t, uint64_t))v33;
      v33(v36, v20, v7, v13);
      unint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_100492C20(&qword_10095DD88, (void (*)(uint64_t))&type metadata accessor for MediaMoment);
      LOBYTE(v22) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = (char *)(v26 + v44 + v18);
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10048A65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a1;
  uint64_t v7 = type metadata accessor for Recommendation();
  uint64_t v8 = __chkstk_darwin(v7);
  Swift::Int v45 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v40 = (char *)&v33 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v39 = (char *)&v33 - v14;
  uint64_t v43 = a3;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v37 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v38 = v15;
    uint64_t v44 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v49 = v17 * (v43 - 1);
    uint64_t v41 = v17;
    uint64_t v18 = v17 * v43;
    uint64_t v48 = a4;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v46 = v35;
    uint64_t v42 = v18;
    while (1)
    {
      uint64_t v20 = *v48;
      uint64_t v21 = v18 + v19 + *v48;
      Swift::Int v22 = v39;
      unint64_t v23 = v37;
      v37(v39, v21, v7);
      uint64_t v24 = v7;
      uint64_t v25 = v40;
      v23(v40, v49 + v19 + v20, v24);
      uint64_t v47 = Recommendation.index.getter();
      uint64_t v26 = Recommendation.index.getter();
      uint64_t v27 = *v36;
      uint64_t v28 = v25;
      uint64_t v7 = v24;
      (*v36)(v28, v24);
      uint64_t v29 = v22;
      uint64_t v18 = v42;
      uint64_t result = v27(v29, v24);
      if (v47 >= v26)
      {
LABEL_4:
        v49 += v41;
        v18 += v41;
        if (++v43 == v34) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v48;
      if (!*v48) {
        break;
      }
      uint64_t v31 = (char *)(v30 + v49 + v19);
      Swift::Int v32 = *v44;
      (*v44)(v45, v30 + v18 + v19, v24);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v32(v31, (uint64_t)v45, v24);
      v19 -= v41;
      if (v43 == ++v46) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10048A958(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for MediaMoment();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_100492C20(&qword_10095DD88, (void (*)(uint64_t))&type metadata accessor for MediaMoment);
          LOBYTE(v41) = dispatch thunk of static Comparable.< infix(_:_:)();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_100492C20(&qword_10095DD88, (void (*)(uint64_t))&type metadata accessor for MediaMoment);
        char v27 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_1001EEBF8(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10048AF8C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v65 = type metadata accessor for Recommendation();
  uint64_t v8 = *(void *)(v65 - 8);
  uint64_t v9 = __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v54 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_73;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v68 = a1;
  unint64_t v67 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v18;
      unint64_t v66 = a4 + v18;
      unint64_t v68 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v39 = -v13;
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v61 = v8 + 16;
        uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
        unint64_t v58 = v40;
        unint64_t v59 = a4;
        unint64_t v55 = a1;
        uint64_t v56 = -v13;
        do
        {
          unint64_t v64 = a3;
          unint64_t v60 = a3 + v39;
          uint64_t v41 = v62;
          uint64_t v42 = v65;
          unint64_t v43 = v58;
          v58(v62, v37 + v39, v65);
          unint64_t v44 = a2 + v39;
          Swift::Int v45 = v63;
          v43(v63, v44, v42);
          uint64_t v46 = Recommendation.index.getter();
          uint64_t v47 = Recommendation.index.getter();
          uint64_t v48 = *v57;
          (*v57)(v45, v42);
          v48(v41, v42);
          if (v46 >= v47)
          {
            unint64_t v51 = v66;
            v66 += v56;
            a3 = v60;
            BOOL v52 = v64 < v51 || v60 >= v51;
            uint64_t v39 = v56;
            if (v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = a2;
              unint64_t v49 = v59;
            }
            else
            {
              unint64_t v49 = v59;
              if (v64 != v51) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v44 = a2;
            }
            unint64_t v50 = v55;
          }
          else
          {
            uint64_t v39 = v56;
            a3 = v60;
            if (v64 < a2 || v60 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v49 = v59;
              unint64_t v50 = v55;
            }
            else
            {
              unint64_t v49 = v59;
              unint64_t v50 = v55;
              if (v64 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v68 += v39;
          }
          unint64_t v37 = v66;
          if (v66 <= v49) {
            break;
          }
          a2 = v44;
        }
        while (v44 > v50);
      }
      goto LABEL_70;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v60 = a4 + v17;
    unint64_t v66 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
      unint64_t v58 = v20;
      unint64_t v64 = a3;
      uint64_t v21 = v62;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        uint64_t v23 = v13;
        uint64_t v24 = v65;
        unint64_t v25 = v58;
        v58(v21, a2, v65);
        unint64_t v26 = a4;
        char v27 = v63;
        v25(v63, v26, v24);
        uint64_t v28 = Recommendation.index.getter();
        uint64_t v29 = Recommendation.index.getter();
        unint64_t v30 = *v22;
        (*v22)(v27, v24);
        v30(v21, v24);
        unint64_t v31 = v68;
        if (v28 >= v29)
        {
          uint64_t v13 = v23;
          unint64_t v35 = v67 + v23;
          if (v68 < v67 || v68 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v34 = v64;
          }
          else
          {
            unint64_t v34 = v64;
            if (v68 != v67) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v67 = v35;
          unint64_t v32 = a2;
        }
        else
        {
          uint64_t v13 = v23;
          unint64_t v32 = a2 + v23;
          if (v68 < a2 || v68 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v34 = v64;
          }
          else
          {
            unint64_t v34 = v64;
            if (v68 == a2) {
              unint64_t v31 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v68 = v31 + v13;
        a4 = v67;
        if (v67 >= v60) {
          break;
        }
        a2 = v32;
      }
      while (v32 < v34);
    }
LABEL_70:
    sub_1001EEC10(&v68, &v67, (uint64_t *)&v66);
    return 1;
  }
LABEL_74:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10048B554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupDescriptor();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  type metadata accessor for NavigationRequest();
  swift_retain();
  return Promise.init(asyncOperation:)();
}

uint64_t sub_10048B6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  swift_errorRetain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10048B75C(void (*a1)(unsigned char *), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1000AFA94(&qword_10095DD38);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  int64_t v14 = &v18[-v13];
  __chkstk_darwin(v12);
  uint64_t v16 = &v18[-v15];
  a3(a5);
  swift_storeEnumTagMultiPayload();
  sub_1000AEEC8((uint64_t)v11, (uint64_t)v14, &qword_10095DD38);
  sub_1000AEEC8((uint64_t)v14, (uint64_t)v16, &qword_10095DD38);
  a1(v16);
  return sub_10008DB18((uint64_t)v16, &qword_10095DD38);
}

uint64_t sub_10048B8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10094F3C8, (uint64_t)&unk_1008C9DD0, (uint64_t)sub_100495BAC);
}

uint64_t sub_10048B8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10094DBA0, (uint64_t)&unk_1008C8CF0, (uint64_t)sub_10049124C);
}

uint64_t sub_10048B920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, (uint64_t *)&unk_100966910, (uint64_t)&unk_1008C89D0, (uint64_t)sub_100490A64);
}

uint64_t sub_10048B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10095DD18, (uint64_t)&unk_1008C8DB8, (uint64_t)sub_1004912C4);
}

uint64_t sub_10048B970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10095DD40, (uint64_t)&unk_1008C9240, (uint64_t)sub_100492D4C);
}

uint64_t sub_10048B998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10095DD30, (uint64_t)&unk_1008C91A0, (uint64_t)sub_100492CA4);
}

uint64_t sub_10048B9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10095DD30, (uint64_t)&unk_1008C91F0, (uint64_t)sub_100492D20);
}

uint64_t sub_10048B9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_10094F3C8, (uint64_t)&unk_1008C9BA0, (uint64_t)sub_100495A7C);
}

uint64_t sub_10048BA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, (uint64_t *)&unk_100966880, (uint64_t)&unk_1008C92B8, (uint64_t)sub_100492E40);
}

uint64_t sub_10048BA38(uint64_t a1, char a2, void (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  if (a2)
  {
    char v19 = 1;
    swift_errorRetain();
    a5(&v18);
    return sub_100496710(a1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v18);
    uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_10006D8BC, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10048BBEC(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  Swift::Int v22 = a4;
  uint64_t v23 = a5;
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v6 = sub_1000AFA94(&qword_10095DD60);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CatalogWorkoutDetail();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095DD70);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000AEF2C(a1, (uint64_t)v16, &qword_10095DD70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v16;
    char v25 = 1;
    swift_errorRetain();
    v22(&v24);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v16, v10);
    v21(v13);
    uint64_t v18 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v22;
    *(void *)(v19 + 24) = v23;
    swift_retain();
    v18(sub_10006D8BC, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_10048BEB8(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  char v27 = a4;
  uint64_t v28 = a5;
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v6 = sub_1000AFA94(&qword_10095DD38);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShelfLockupDescriptor();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10095DD48);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000AEF2C(a1, (uint64_t)v18, &qword_10095DD48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v18;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v27(v8);
    swift_errorRelease();
    return sub_10008DB18((uint64_t)v8, &qword_10095DD38);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v13 + 32))(v15, v18, v12);
    v24(v15);
    uint64_t v20 = v26;
    uint64_t v21 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v27;
    *(void *)(v22 + 24) = v28;
    swift_retain();
    v21(sub_100492D30, v22);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_10048C1E8(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  v22[1] = a3;
  uint64_t v23 = a2;
  uint64_t v6 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v24 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationRequest();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10095DD38);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (void *)((char *)v22 - v17);
  sub_1000AEF2C(a1, (uint64_t)v22 - v17, &qword_10095DD38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v16 = *v18;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v25(v16);
    swift_errorRelease();
    return sub_10008DB18((uint64_t)v16, &qword_10095DD38);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v10 + 32))(v12, v18, v9);
    v23(v12);
    uint64_t v20 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v25;
    *(void *)(v21 + 24) = v26;
    swift_retain();
    v20(sub_100492D30, v21);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_10048C4E8(void *a1, char a2, void (*a3)(id *), uint64_t a4, void (*a5)(id *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = sub_1000AFA94(a7);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = a1;
  if (a2)
  {
    char v22 = 1;
    swift_errorRetain();
    a5(&v21);
    sub_100495AE8(a1, 1);
  }
  else
  {
    id v18 = a1;
    a3(&v21);
    uint64_t v19 = (void (*)(uint64_t, uint64_t))Promise.operation.getter();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a5;
    *(void *)(v20 + 24) = a6;
    swift_retain();
    v19(a9, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10048C688(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  id v7 = v5;
  swift_retain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10048C728(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10048CB60(a1, a2, a3);
}

uint64_t sub_10048C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v35 + 64);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - v15;
  v38[3] = a3;
  v38[4] = a4;
  uint64_t v17 = sub_1000B1710(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v17, a1, a3);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (!v18)
  {
    long long v36 = 0u;
    long long v37 = 0u;
LABEL_10:
    sub_10008DB18((uint64_t)&v36, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v38);
  }
  uint64_t v19 = v18;
  uint64_t v20 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  if (*(void *)(v19 + 16) && (unint64_t v22 = sub_1000DA1C0(v20, v21), (v23 & 1) != 0))
  {
    sub_10008F484(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v36);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    sub_10007E4EC((void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient), *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient + 24));
    dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)();
    swift_bridgeObjectRelease();
    sub_10008E75C((uint64_t)v38, (uint64_t)&v36);
    uint64_t v24 = swift_allocObject();
    sub_100093E60(&v36, v24 + 16);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1002DDB7C;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v10, v13, v8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v28 + v27, v10, v8);
    uint64_t v29 = (void *)(v28 + ((v9 + v27 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v29 = sub_1001B3D88;
    v29[1] = v25;
    Promise.init(asyncOperation:)();
    unint64_t v30 = *(void (**)(char *, uint64_t))(v26 + 8);
    v30(v13, v8);
    unint64_t v31 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = 0;
    *(void *)(v32 + 24) = 0;
    v31(sub_10006D8BC, v32);
    swift_release();
    swift_release();
    v30(v16, v8);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v38);
}

uint64_t sub_10048CB40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10048CB60(a1, a2, a3);
}

uint64_t sub_10048CB60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10048CBF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000AFA94(&qword_10094DBE0);

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10048CC9C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *a5;
  a3(&v9, &v8);
  uint64_t v6 = v9;
  char v10 = 0;
  a1(&v9);
  return sub_100496710(v6, 0);
}

void *sub_10048CD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_10095DD00);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CatalogWorkout();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v31 = (char *)v29 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v29[1] = v2;
    v29[2] = v9 + 16;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    v29[0] = a1;
    uint64_t v15 = (uint64_t *)(a1 + 40);
    uint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v30 = v9;
    while (1)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_1000DA1C0(v16, v17);
        if (v19)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(a2 + 56) + *(void *)(v9 + 72) * v18, v8);
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v20 = 1;
        }
        (*v14)(v7, v20, 1, v8);
        swift_bridgeObjectRelease();
        if ((*v33)(v7, 1, v8) != 1)
        {
          uint64_t v21 = v31;
          unint64_t v22 = *v32;
          (*v32)(v31, v7, v8);
          v22(v34, v21, v8);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = (unint64_t)v35;
          }
          else {
            unint64_t v23 = sub_1001E81E4(0, v35[2] + 1, 1, (unint64_t)v35);
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_1001E81E4(v24 > 1, v25 + 1, 1, v23);
          }
          *(void *)(v23 + 16) = v25 + 1;
          unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v35 = (void *)v23;
          unint64_t v27 = v23 + v26 + *(void *)(v30 + 72) * v25;
          uint64_t v9 = v30;
          v22((char *)v27, v34, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*v14)(v7, 1, 1, v8);
      }
      sub_10008DB18((uint64_t)v7, &qword_10095DD00);
LABEL_5:
      v15 += 2;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10048D08C(void *a1, char *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v118 = a2;
  uint64_t v110 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v109 = *(void *)(v110 - 8);
  uint64_t v11 = *(void *)(v109 + 64);
  uint64_t v12 = __chkstk_darwin(v110);
  BOOL v108 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v114 = (char *)&v98 - v13;
  uint64_t v14 = (void *)sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v15 = *(v14 - 1);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v111 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v112 = (char *)&v98 - v19;
  __chkstk_darwin(v18);
  uint64_t v113 = (char *)&v98 - v20;
  uint64_t v21 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v116 = *(void *)(v21 - 8);
  uint64_t v117 = v21;
  __chkstk_darwin(v21);
  uint64_t v115 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (void *)swift_allocObject();
  v23[2] = a3;
  v23[3] = a4;
  v23[4] = a5;
  v23[5] = a6;
  v126[3] = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  v126[4] = &off_1008C0440;
  v126[0] = a1;
  swift_retain();
  id v119 = a4;
  id v24 = a1;
  uint64_t v120 = a5;
  uint64_t v121 = (void *)a6;
  sub_10008A670(a5);
  id v25 = [v24 metadata];
  if (!v25)
  {
    long long v122 = 0u;
    long long v123 = 0u;
    goto LABEL_10;
  }
  unint64_t v26 = v25;
  uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v28 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v27 + 16) || (unint64_t v30 = sub_1000DA1C0(v28, v29), (v31 & 1) == 0))
  {
    long long v122 = 0u;
    long long v123 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v27 + 56) + 32 * v30, (uint64_t)&v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v123 + 1))
  {
LABEL_10:
    sub_10008DB18((uint64_t)&v122, &qword_100955A00);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    static os_log_type_t.error.getter();
    unint64_t v53 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_10074E640;
    *(void *)(v54 + 56) = &type metadata for String;
    unint64_t v55 = sub_1000AA64C();
    *(void *)(v54 + 64) = v55;
    *(void *)(v54 + 32) = 0xD00000000000002ALL;
    *(void *)(v54 + 40) = 0x80000001007B70F0;
    uint64_t v56 = (void *)v126[0];
    id v57 = v53;
    id v58 = [v56 description];
    uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v60;

    *(void *)(v54 + 96) = &type metadata for String;
    *(void *)(v54 + 104) = v55;
    *(void *)(v54 + 72) = v59;
    *(void *)(v54 + 80) = v61;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    sub_100718438(0, a3, v119, v120, (uint64_t)v121);
    goto LABEL_12;
  }
  uint64_t v99 = v15;
  uint64_t v107 = v124;
  uint64_t v106 = v125;
  int v105 = static os_log_type_t.default.getter();
  uint64_t v32 = (void *)HKLogActivity;
  uint64_t v102 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10074E640;
  *(void *)(v33 + 56) = &type metadata for String;
  unint64_t v34 = sub_1000AA64C();
  *(void *)(v33 + 64) = v34;
  *(void *)(v33 + 32) = 0xD00000000000002ALL;
  *(void *)(v33 + 40) = 0x80000001007B70F0;
  unint64_t v100 = 0x80000001007B70F0;
  uint64_t v35 = (void *)v126[0];
  id v104 = v32;
  id v36 = [v35 description];
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v103 = v38;

  *(void *)(v33 + 96) = &type metadata for String;
  *(void *)(v33 + 104) = v34;
  unint64_t v101 = v34;
  uint64_t v39 = v103;
  *(void *)(v33 + 72) = v37;
  *(void *)(v33 + 80) = v39;
  uint64_t v40 = v104;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v41 = v118;
  uint64_t v42 = *(void **)&v118[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache];
  uint64_t v43 = v106;
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v42 objectForKey:v44];

  if (v45)
  {
    static os_log_type_t.default.getter();
    uint64_t v46 = (void *)HKLogActivity;
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_100752410;
    unint64_t v48 = v101;
    *(void *)(v47 + 56) = &type metadata for String;
    *(void *)(v47 + 64) = v48;
    unint64_t v49 = v100;
    *(void *)(v47 + 32) = 0xD00000000000002ALL;
    *(void *)(v47 + 40) = v49;
    *(void *)(v47 + 96) = &type metadata for String;
    *(void *)(v47 + 104) = v48;
    *(void *)(v47 + 72) = v107;
    *(void *)(v47 + 80) = v43;
    *(void *)(v47 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v47 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v47 + 112) = v45;
    id v50 = v46;
    id v51 = v45;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v52 = v51;
    sub_100718438((char *)v45, a3, v119, v120, (uint64_t)v121);
  }
  else
  {
    uint64_t v63 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v64 = (void *)swift_allocObject();
    uint64_t v121 = v64;
    uint64_t v65 = v107;
    v64[2] = v63;
    v64[3] = v65;
    v64[4] = v43;
    v64[5] = sub_100491128;
    v64[6] = v23;
    sub_10008E75C((uint64_t)v126, (uint64_t)&v122);
    uint64_t v66 = swift_allocObject();
    uint64_t v120 = v66;
    sub_100093E60(&v122, v66 + 16);
    *(void *)(v66 + 56) = sub_100491128;
    *(void *)(v66 + 64) = v23;
    swift_retain_n();
    swift_bridgeObjectRetain();
    unint64_t v67 = v115;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    sub_10007E4EC(&v41[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], *(void *)&v41[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24]);
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v68 = v116;
    uint64_t v69 = *(unsigned __int8 *)(v116 + 80);
    id v119 = v14;
    uint64_t v70 = (v69 + 32) & ~v69;
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1007509E0;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v71 + v70, v67, v117);
    uint64_t v72 = v114;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v73 = swift_allocObject();
    uint64_t v74 = (uint64_t)v121;
    *(void *)(v73 + 16) = sub_100491138;
    *(void *)(v73 + 24) = v74;
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = sub_10049118C;
    *(void *)(v75 + 24) = v73;
    uint64_t v76 = v109;
    unint64_t v77 = v108;
    unint64_t v78 = v72;
    uint64_t v79 = v110;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v108, v78, v110);
    unint64_t v80 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v81 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v81 + v80, v77, v79);
    uint64_t v82 = (uint64_t (**)(uint64_t *))(v81 + ((v11 + v80 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v82 = sub_1004911B8;
    v82[1] = (uint64_t (*)(uint64_t *))v75;
    swift_retain();
    uint64_t v118 = (char *)&type metadata for () + 8;
    uint64_t v83 = v112;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v114, v79);
    uint64_t v84 = swift_allocObject();
    uint64_t v85 = v120;
    *(void *)(v84 + 16) = sub_1001B3640;
    *(void *)(v84 + 24) = v85;
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = sub_1004968AC;
    *(void *)(v86 + 24) = v84;
    uint64_t v87 = v99;
    uint64_t v88 = v111;
    id v89 = v119;
    (*(void (**)(char *, char *, id))(v99 + 16))(v111, v83, v119);
    unint64_t v90 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    unint64_t v91 = (v16 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v92 = swift_allocObject();
    (*(void (**)(unint64_t, char *, id))(v87 + 32))(v92 + v90, v88, v89);
    uint64_t v93 = (void *)(v92 + v91);
    void *v93 = sub_1001B3D88;
    v93[1] = v86;
    swift_retain();
    uint64_t v94 = v113;
    Promise.init(asyncOperation:)();
    uint64_t v95 = *(void (**)(char *, id))(v87 + 8);
    v95(v83, v89);
    uint64_t v96 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v97 = swift_allocObject();
    *(void *)(v97 + 16) = 0;
    *(void *)(v97 + 24) = 0;
    v96(sub_10006D8BC, v97);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v95(v94, v89);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v117);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v126);
  return swift_release();
}

uint64_t sub_10048DC9C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, void *a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v103 = a1;
  id v104 = a3;
  uint64_t v14 = sub_1000AFA94(&qword_10095DD20);
  uint64_t v95 = *(void *)(v14 - 8);
  uint64_t v96 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v92 = v16;
  uint64_t v93 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v94 = (char *)&v84 - v17;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v101 = *(void *)(v18 - 8);
  uint64_t v102 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v98 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v99 = (char *)&v84 - v22;
  uint64_t v97 = v23;
  __chkstk_darwin(v21);
  unint64_t v100 = (char *)&v84 - v24;
  uint64_t v25 = sub_1000AFA94(&qword_100950BA8);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v88 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v84 - v28;
  uint64_t v30 = type metadata accessor for Trainer();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v87 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a4;
  v33[3] = a5;
  v33[4] = a6;
  v33[5] = a7;
  int v105 = v33;
  v33[6] = a8;
  uint64_t v89 = a4;
  swift_retain();
  id v34 = a5;
  id v35 = a6;
  unint64_t v90 = a7;
  uint64_t v91 = a8;
  sub_10008A670((uint64_t)a7);
  static os_log_type_t.default.getter();
  id v36 = (void *)HKLogActivity;
  uint64_t v86 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10074E640;
  *(void *)(v37 + 56) = &type metadata for String;
  unint64_t v38 = sub_1000AA64C();
  unint64_t v85 = (unint64_t)"tails for identifier: %@";
  *(void *)(v37 + 32) = 0xD000000000000024;
  *(void *)(v37 + 40) = 0x80000001007CA380;
  *(void *)(v37 + 96) = &type metadata for String;
  *(void *)(v37 + 104) = v38;
  uint64_t v39 = v103;
  *(void *)(v37 + 64) = v38;
  *(void *)(v37 + 72) = v39;
  *(void *)(v37 + 80) = a2;
  id v40 = v36;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  uint64_t v41 = v104;
  swift_bridgeObjectRelease();
  uint64_t v42 = &v41[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess();
  uint64_t v43 = *(void *)v42;
  if (*(void *)(v43 + 16))
  {
    uint64_t v84 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_1000DA1C0(v39, a2);
    if (v45)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v29, *(void *)(v43 + 56) + *(void *)(v31 + 72) * v44, v30);
      uint64_t v46 = *(char **)(v31 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v46)(v29, 0, 1, v30);
    }
    else
    {
      uint64_t v46 = *(char **)(v31 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v29, 1, 1, v30);
    }
    uint64_t v47 = v105;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
    {
      uint64_t v75 = v87;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v87, v29, v30);
      static os_log_type_t.default.getter();
      id v104 = v46;
      uint64_t v76 = (void *)HKLogActivity;
      uint64_t v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_100752410;
      *(void *)(v77 + 56) = &type metadata for String;
      *(void *)(v77 + 64) = v38;
      unint64_t v78 = v85 | 0x8000000000000000;
      *(void *)(v77 + 32) = 0xD000000000000024;
      *(void *)(v77 + 40) = v78;
      *(void *)(v77 + 96) = &type metadata for String;
      *(void *)(v77 + 104) = v38;
      *(void *)(v77 + 72) = v39;
      *(void *)(v77 + 80) = a2;
      swift_bridgeObjectRetain();
      id v79 = v76;
      uint64_t v80 = Trainer.description.getter();
      *(void *)(v77 + 136) = &type metadata for String;
      *(void *)(v77 + 144) = v38;
      *(void *)(v77 + 112) = v80;
      *(void *)(v77 + 120) = v81;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v82 = (uint64_t)v88;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v88, v75, v30);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v104)(v82, 0, 1, v30);
      sub_100537C0C(v82, v89, v84, v90, v91);
      sub_10008DB18(v82, &qword_100950BA8);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v75, v30);
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    uint64_t v47 = v105;
  }
  sub_10008DB18((uint64_t)v29, &qword_100950BA8);
  uint64_t v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v49 = (void *)swift_allocObject();
  void v49[2] = v48;
  v49[3] = v39;
  v49[4] = a2;
  v49[5] = sub_100492E8C;
  v49[6] = v47;
  id v50 = (void *)swift_allocObject();
  v50[2] = v39;
  v50[3] = a2;
  v50[4] = sub_100492E8C;
  v50[5] = v47;
  sub_10007E4EC(&v41[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], *(void *)&v41[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24]);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v51 = v94;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_100491D30;
  *(void *)(v52 + 24) = v49;
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_1004968C4;
  *(void *)(v53 + 24) = v52;
  uint64_t v55 = v95;
  uint64_t v54 = v96;
  uint64_t v56 = v93;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v93, v51, v96);
  unint64_t v57 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  unint64_t v58 = (v92 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v59 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v59 + v57, v56, v54);
  uint64_t v60 = (uint64_t (**)(uint64_t))(v59 + v58);
  void *v60 = sub_1004968F8;
  v60[1] = (uint64_t (*)(uint64_t))v53;
  swift_retain();
  id v104 = (char *)&type metadata for () + 8;
  uint64_t v61 = v99;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v54);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_100496798;
  *(void *)(v62 + 24) = v50;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_1004968AC;
  *(void *)(v63 + 24) = v62;
  uint64_t v65 = v101;
  uint64_t v64 = v102;
  uint64_t v66 = v98;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v98, v61, v102);
  unint64_t v67 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v68 = (v97 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v69 + v67, v66, v64);
  uint64_t v70 = (void *)(v69 + v68);
  *uint64_t v70 = sub_1001B3D88;
  v70[1] = v63;
  swift_retain();
  uint64_t v71 = v100;
  Promise.init(asyncOperation:)();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v65 + 8);
  v72(v61, v64);
  uint64_t v73 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = 0;
  *(void *)(v74 + 24) = 0;
  v73(sub_10006D8BC, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v72(v71, v64);
  return swift_release();
}

uint64_t sub_10048E6D8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v123 = a2;
  uint64_t v116 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v115 = *(void *)(v116 - 8);
  uint64_t v13 = __chkstk_darwin(v116);
  uint64_t v113 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = v14;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v104 - v15;
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v117 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v118 = (char *)&v104 - v21;
  __chkstk_darwin(v20);
  id v119 = (char *)&v104 - v22;
  uint64_t v23 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v121 = *(void *)(v23 - 8);
  uint64_t v122 = v23;
  __chkstk_darwin(v23);
  uint64_t v120 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a3;
  v25[3] = a4;
  v25[4] = a5;
  v25[5] = a6;
  v25[6] = a7;
  v132[3] = type metadata accessor for MindfulnessSessionViewModel();
  v132[4] = &off_1008C0428;
  v132[0] = a1;
  uint64_t v125 = a3;
  swift_retain();
  id v26 = a4;
  id v27 = a5;
  id v28 = a1;
  uint64_t v126 = a6;
  unint64_t v127 = (void *)a7;
  sub_10008A670(a6);
  uint64_t v29 = MindfulnessSessionViewModel.metadata.getter();
  uint64_t v124 = (uint64_t)v27;
  if (!v29)
  {
    long long v128 = 0u;
    long long v129 = 0u;
    goto LABEL_10;
  }
  uint64_t v30 = v29;
  uint64_t v111 = v17;
  uint64_t v31 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v30 + 16) || (unint64_t v33 = sub_1000DA1C0(v31, v32), (v34 & 1) == 0))
  {
    long long v128 = 0u;
    long long v129 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v129 + 1))
  {
LABEL_10:
    uint64_t v59 = v26;
    sub_10008DB18((uint64_t)&v128, &qword_100955A00);
LABEL_11:
    static os_log_type_t.error.getter();
    uint64_t v60 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_10074E640;
    *(void *)(v61 + 56) = &type metadata for String;
    unint64_t v62 = sub_1000AA64C();
    *(void *)(v61 + 64) = v62;
    *(void *)(v61 + 32) = 0xD00000000000002ALL;
    *(void *)(v61 + 40) = 0x80000001007B70F0;
    uint64_t v63 = (void *)v132[0];
    id v64 = v60;
    id v65 = [v63 description];
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v67;

    *(void *)(v61 + 96) = &type metadata for String;
    *(void *)(v61 + 104) = v62;
    *(void *)(v61 + 72) = v66;
    *(void *)(v61 + 80) = v68;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    sub_100537004(0, v125, v59, v124, v126, (uint64_t)v127);
    goto LABEL_12;
  }
  if (!swift_dynamicCast())
  {
    uint64_t v59 = v26;
    goto LABEL_11;
  }
  uint64_t v105 = v16;
  uint64_t v36 = v130;
  uint64_t v35 = v131;
  LODWORD(v110) = static os_log_type_t.default.getter();
  uint64_t v37 = (void *)HKLogActivity;
  uint64_t v107 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10074E640;
  *(void *)(v38 + 56) = &type metadata for String;
  unint64_t v39 = sub_1000AA64C();
  *(void *)(v38 + 64) = v39;
  *(void *)(v38 + 32) = 0xD00000000000002ALL;
  *(void *)(v38 + 40) = 0x80000001007B70F0;
  unint64_t v106 = 0x80000001007B70F0;
  id v40 = (void *)v132[0];
  id v41 = v37;
  uint64_t v42 = v36;
  id v43 = v41;
  id v44 = [v40 description];
  uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v108 = v45;

  *(void *)(v38 + 96) = &type metadata for String;
  *(void *)(v38 + 104) = v39;
  unint64_t v46 = v39;
  uint64_t v47 = v108;
  *(void *)(v38 + 72) = v109;
  *(void *)(v38 + 80) = v47;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v48 = v123;
  unint64_t v49 = *(void **)(v123 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  uint64_t v110 = v42;
  NSString v50 = String._bridgeToObjectiveC()();
  id v51 = [v49 objectForKey:v50];

  if (v51)
  {
    static os_log_type_t.default.getter();
    uint64_t v52 = (void *)HKLogActivity;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_100752410;
    *(void *)(v53 + 56) = &type metadata for String;
    *(void *)(v53 + 64) = v46;
    *(void *)(v53 + 32) = 0xD00000000000002ALL;
    *(void *)(v53 + 40) = v106;
    *(void *)(v53 + 96) = &type metadata for String;
    *(void *)(v53 + 104) = v46;
    *(void *)(v53 + 72) = v110;
    *(void *)(v53 + 80) = v35;
    *(void *)(v53 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v53 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v53 + 112) = v51;
    id v54 = v52;
    uint64_t v55 = v26;
    id v56 = v54;
    id v57 = v51;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v58 = v57;
    sub_100537004((char *)v51, v125, v55, v124, v126, (uint64_t)v127);
  }
  else
  {
    uint64_t v70 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v71 = (void *)swift_allocObject();
    unint64_t v127 = v71;
    uint64_t v72 = v110;
    v71[2] = v70;
    v71[3] = v72;
    v71[4] = v35;
    v71[5] = sub_100492F38;
    v71[6] = v25;
    sub_10008E75C((uint64_t)v132, (uint64_t)&v128);
    uint64_t v73 = swift_allocObject();
    uint64_t v126 = v73;
    sub_100093E60(&v128, v73 + 16);
    *(void *)(v73 + 56) = sub_100492F38;
    *(void *)(v73 + 64) = v25;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v74 = v120;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    sub_10007E4EC((void *)(v48 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v48 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v75 = v121;
    unint64_t v76 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    uint64_t v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, char *, uint64_t))(v75 + 16))(v77 + v76, v74, v122);
    unint64_t v78 = v114;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v79 = swift_allocObject();
    uint64_t v80 = (uint64_t)v127;
    *(void *)(v79 + 16) = sub_100491138;
    *(void *)(v79 + 24) = v80;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = sub_1004968DC;
    *(void *)(v81 + 24) = v79;
    uint64_t v82 = v115;
    uint64_t v83 = v113;
    uint64_t v84 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v78, v116);
    unint64_t v85 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v86 = (v112 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v87 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v87 + v85, v83, v84);
    uint64_t v88 = (void *)(v87 + v86);
    *uint64_t v88 = sub_1004968F4;
    v88[1] = v81;
    swift_retain();
    uint64_t v125 = (uint64_t)&type metadata for () + 8;
    uint64_t v89 = v118;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v78, v84);
    uint64_t v90 = swift_allocObject();
    uint64_t v91 = v126;
    *(void *)(v90 + 16) = sub_1001B3D1C;
    *(void *)(v90 + 24) = v91;
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = sub_1004968AC;
    *(void *)(v92 + 24) = v90;
    uint64_t v93 = v111;
    uint64_t v94 = v117;
    uint64_t v95 = v105;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v117, v89, v105);
    unint64_t v96 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    unint64_t v97 = (v18 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v98 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v98 + v96, v94, v95);
    uint64_t v99 = (void *)(v98 + v97);
    *uint64_t v99 = sub_1001B3D88;
    v99[1] = v92;
    swift_retain();
    unint64_t v100 = v119;
    Promise.init(asyncOperation:)();
    uint64_t v101 = *(void (**)(char *, uint64_t))(v93 + 8);
    v101(v89, v95);
    uint64_t v102 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = 0;
    *(void *)(v103 + 24) = 0;
    v102(sub_10006D8BC, v103);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v101(v100, v95);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v122);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v132);
  return swift_release();
}

uint64_t sub_10048F2DC(void *a1, void *a2, void (**a3)(void, void))
{
  uint64_t v105 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v98 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v98 + 64);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v87 - v9;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v99 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v100 = (char *)&v87 - v16;
  __chkstk_darwin(v15);
  uint64_t v101 = (char *)&v87 - v17;
  uint64_t v18 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v103 = *(void *)(v18 - 8);
  uint64_t v104 = v18;
  __chkstk_darwin(v18);
  uint64_t v102 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = swift_allocObject();
  *(void *)(v106 + 16) = a3;
  v111[3] = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  v111[4] = &off_1008C0440;
  v111[0] = a1;
  _Block_copy(a3);
  id v20 = [a1 metadata];
  if (!v20)
  {
    long long v107 = 0u;
    long long v108 = 0u;
    goto LABEL_10;
  }
  uint64_t v21 = v20;
  uint64_t v97 = v12;
  uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v22 + 16) || (unint64_t v25 = sub_1000DA1C0(v23, v24), (v26 & 1) == 0))
  {
    long long v107 = 0u;
    long long v108 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v108 + 1))
  {
LABEL_10:
    sub_10008DB18((uint64_t)&v107, &qword_100955A00);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    static os_log_type_t.error.getter();
    unint64_t v46 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_10074E640;
    *(void *)(v47 + 56) = &type metadata for String;
    unint64_t v48 = sub_1000AA64C();
    *(void *)(v47 + 64) = v48;
    *(void *)(v47 + 32) = 0xD00000000000002ALL;
    *(void *)(v47 + 40) = 0x80000001007B70F0;
    unint64_t v49 = (void *)v111[0];
    id v50 = v46;
    id v51 = [v49 description];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    *(void *)(v47 + 96) = &type metadata for String;
    *(void *)(v47 + 104) = v48;
    *(void *)(v47 + 72) = v52;
    *(void *)(v47 + 80) = v54;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    a3[2](a3, 0);
    goto LABEL_12;
  }
  uint64_t v88 = v5;
  uint64_t v89 = v11;
  uint64_t v96 = v109;
  uint64_t v95 = v110;
  LODWORD(v94) = static os_log_type_t.default.getter();
  id v27 = (void *)HKLogActivity;
  uint64_t v92 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10074E640;
  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v29 = sub_1000AA64C();
  *(void *)(v28 + 64) = v29;
  *(void *)(v28 + 32) = 0xD00000000000002ALL;
  *(void *)(v28 + 40) = 0x80000001007B70F0;
  unint64_t v90 = 0x80000001007B70F0;
  uint64_t v30 = (void *)v111[0];
  id v93 = v27;
  id v31 = [v30 description];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  *(void *)(v28 + 96) = &type metadata for String;
  *(void *)(v28 + 104) = v29;
  unint64_t v91 = v29;
  *(void *)(v28 + 72) = v32;
  *(void *)(v28 + 80) = v34;
  uint64_t v35 = v93;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v36 = v105;
  uint64_t v37 = *(void **)((char *)v105 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 objectForKey:v38];

  if (v39)
  {
    static os_log_type_t.default.getter();
    id v40 = (void *)HKLogActivity;
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_100752410;
    unint64_t v42 = v91;
    *(void *)(v41 + 56) = &type metadata for String;
    *(void *)(v41 + 64) = v42;
    *(void *)(v41 + 32) = 0xD00000000000002ALL;
    *(void *)(v41 + 40) = v90;
    *(void *)(v41 + 96) = &type metadata for String;
    *(void *)(v41 + 104) = v42;
    uint64_t v43 = v95;
    *(void *)(v41 + 72) = v96;
    *(void *)(v41 + 80) = v43;
    *(void *)(v41 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v41 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v41 + 112) = v39;
    id v44 = v40;
    id v45 = v39;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    ((void (**)(void, id))a3)[2](a3, v45);
  }
  else
  {
    uint64_t v56 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v57 = (void *)swift_allocObject();
    uint64_t v94 = v57;
    uint64_t v58 = v96;
    v57[2] = v56;
    v57[3] = v58;
    v57[4] = v95;
    v57[5] = sub_100496904;
    uint64_t v59 = v106;
    v57[6] = v106;
    sub_10008E75C((uint64_t)v111, (uint64_t)&v107);
    uint64_t v60 = swift_allocObject();
    id v93 = (id)v60;
    sub_100093E60(&v107, v60 + 16);
    *(void *)(v60 + 56) = sub_100496904;
    *(void *)(v60 + 64) = v59;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v61 = v102;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    uint64_t v105 = sub_10007E4EC((void *)((char *)v36 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)((char *)v36 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v62 = v103;
    unint64_t v63 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, char *, uint64_t))(v62 + 16))(v64 + v63, v61, v104);
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v65 = swift_allocObject();
    uint64_t v66 = v94;
    *(void *)(v65 + 16) = sub_100491138;
    *(void *)(v65 + 24) = v66;
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = sub_1004968DC;
    *(void *)(v67 + 24) = v65;
    uint64_t v68 = v98;
    uint64_t v69 = v88;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v8, v10, v88);
    unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v71 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v71 + v70, v8, v69);
    uint64_t v72 = (void *)(v71 + ((v6 + v70 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v72 = sub_1004968F4;
    v72[1] = v67;
    swift_retain();
    uint64_t v105 = (void *)((char *)&type metadata for () + 8);
    uint64_t v73 = v100;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v10, v69);
    uint64_t v74 = swift_allocObject();
    id v75 = v93;
    *(void *)(v74 + 16) = sub_1001B3D1C;
    *(void *)(v74 + 24) = v75;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_1004968AC;
    *(void *)(v76 + 24) = v74;
    uint64_t v77 = v97;
    unint64_t v78 = v99;
    uint64_t v79 = v89;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v99, v73, v89);
    unint64_t v80 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v81 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v81 + v80, v78, v79);
    uint64_t v82 = (void *)(v81 + ((v13 + v80 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v82 = sub_1001B3D88;
    v82[1] = v76;
    swift_retain();
    uint64_t v83 = v101;
    Promise.init(asyncOperation:)();
    uint64_t v84 = *(void (**)(char *, uint64_t))(v77 + 8);
    v84(v73, v79);
    unint64_t v85 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = 0;
    *(void *)(v86 + 24) = 0;
    v85(sub_10006D8BC, v86);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v84(v83, v79);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v111);
  return swift_release();
}

void sub_10048FEB4(uint64_t a1, char *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v109 = a2;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_100966910);
  uint64_t v97 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v94 = v13;
  uint64_t v95 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v96 = (char *)&v88 - v14;
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v105 = *(void *)(v15 - 8);
  uint64_t v106 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v100 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v101 = (char *)&v88 - v19;
  uint64_t v99 = v20;
  __chkstk_darwin(v18);
  uint64_t v104 = (char *)&v88 - v21;
  uint64_t CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest();
  uint64_t v102 = *(void *)(CatalogWorkoutsRequest - 8);
  uint64_t v103 = CatalogWorkoutsRequest;
  __chkstk_darwin(CatalogWorkoutsRequest);
  long long v108 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v25 = v24 - 8;
  uint64_t v92 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v92 + 64);
  __chkstk_darwin(v24);
  uint64_t v93 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = (uint64_t (*)(char *))swift_allocObject();
  *((void *)v27 + 2) = a3;
  *((void *)v27 + 3) = a4;
  *((void *)v27 + 4) = a5;
  *((void *)v27 + 5) = a6;
  uint64_t v110 = v27;
  uint64_t v89 = a3;
  swift_retain();
  id v88 = a4;
  uint64_t v90 = a5;
  uint64_t v91 = a6;
  sub_10008A670(a5);
  static os_log_type_t.default.getter();
  uint64_t v28 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10074E640;
  *(void *)(v29 + 56) = &type metadata for String;
  unint64_t v30 = sub_1000AA64C();
  *(void *)(v29 + 64) = v30;
  *(void *)(v29 + 32) = 0xD000000000000024;
  *(void *)(v29 + 40) = 0x80000001007CA080;
  id v31 = v28;
  uint64_t v32 = sub_1003D4F34();
  *(void *)(v29 + 96) = &type metadata for String;
  *(void *)(v29 + 104) = v30;
  *(void *)(v29 + 72) = v32;
  *(void *)(v29 + 80) = v33;
  os_log(_:dso:log:_:_:)();

  uint64_t v34 = a1;
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t *)(a1 + *(int *)(v25 + 36));
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  NSString v38 = *(void **)&v109[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache];
  swift_bridgeObjectRetain();
  uint64_t v107 = v36;
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = (char *)[v38 objectForKey:v39];

  if (!v40) {
    goto LABEL_7;
  }
  uint64_t v41 = *(void *)(*(void *)&v40[OBJC_IVAR___CHCatalogItemViewModel_workouts] + 16);
  uint64_t v42 = sub_1003D585C()[2];
  swift_bridgeObjectRelease();
  if (v41 != v42)
  {

LABEL_7:
    uint64_t v48 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v49 = v93;
    sub_1004955C4(v34, v93, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    unint64_t v50 = (*(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v51 = (v26 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v91 = v34;
    unint64_t v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = v37;
    uint64_t v55 = swift_allocObject();
    sub_100495630(v49, v55 + v50, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    *(void *)(v55 + v51) = v48;
    uint64_t v56 = (uint64_t (**)(char *))(v55 + v52);
    id v57 = v110;
    *uint64_t v56 = sub_100490920;
    v56[1] = v57;
    uint64_t v58 = (void *)(v55 + v53);
    uint64_t v59 = v55;
    *uint64_t v58 = v107;
    v58[1] = v54;
    sub_1004955C4(v91, v49, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    uint64_t v60 = swift_allocObject();
    sub_100495630(v49, v60 + v50, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    uint64_t v61 = (uint64_t (**)(char *))(v60 + v51);
    uint64_t v62 = v60;
    *uint64_t v61 = sub_100490920;
    v61[1] = v57;
    swift_retain_n();
    unint64_t v63 = sub_1003D585C();
    sub_1001EF044((uint64_t)v63);
    swift_bridgeObjectRelease();
    FetchCatalogWorkoutsRequest.init(identifiers:)();
    sub_10007E4EC(&v109[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], *(void *)&v109[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24]);
    uint64_t v64 = v96;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_100490968;
    *(void *)(v65 + 24) = v59;
    uint64_t v92 = v59;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_1004968DC;
    *(void *)(v66 + 24) = v65;
    uint64_t v68 = v97;
    uint64_t v67 = v98;
    uint64_t v69 = v95;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v64, v98);
    unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    unint64_t v71 = (v94 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v72 + v70, v69, v67);
    uint64_t v73 = (uint64_t (**)(uint64_t *))(v72 + v71);
    *uint64_t v73 = sub_100490974;
    v73[1] = (uint64_t (*)(uint64_t *))v66;
    swift_retain();
    uint64_t v74 = v101;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v67);
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = sub_100490970;
    *(void *)(v75 + 24) = v62;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_1004909E0;
    *(void *)(v76 + 24) = v75;
    uint64_t v78 = v105;
    uint64_t v77 = v106;
    uint64_t v79 = v100;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v100, v74, v106);
    unint64_t v80 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    unint64_t v81 = (v99 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v82 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v82 + v80, v79, v77);
    uint64_t v83 = (uint64_t (**)(uint64_t))(v82 + v81);
    *uint64_t v83 = sub_1001B36B8;
    v83[1] = (uint64_t (*)(uint64_t))v76;
    swift_retain();
    uint64_t v84 = v104;
    Promise.init(asyncOperation:)();
    unint64_t v85 = *(void (**)(char *, uint64_t))(v78 + 8);
    v85(v74, v77);
    uint64_t v86 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = 0;
    *(void *)(v87 + 24) = 0;
    v86(sub_10006D8BC, v87);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v85(v84, v77);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v108, v103);
    swift_release();
    return;
  }
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  uint64_t v43 = (void *)HKLogActivity;
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100752410;
  *(void *)(v44 + 56) = &type metadata for String;
  *(void *)(v44 + 64) = v30;
  *(void *)(v44 + 32) = 0xD000000000000024;
  *(void *)(v44 + 40) = 0x80000001007CA080;
  *(void *)(v44 + 96) = &type metadata for String;
  *(void *)(v44 + 104) = v30;
  *(void *)(v44 + 72) = v107;
  *(void *)(v44 + 80) = v37;
  *(void *)(v44 + 136) = type metadata accessor for CatalogItemViewModel();
  *(void *)(v44 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
  *(void *)(v44 + 112) = v40;
  swift_bridgeObjectRetain();
  id v45 = v43;
  unint64_t v46 = v40;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v109 = v46;
  sub_10035F9E4(v40, v89, (uint64_t)v88, v90, v91);
  swift_release();

  id v47 = v109;
}

uint64_t sub_100490920(char *a1)
{
  return sub_10035F9E4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10049092C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100490974(uint64_t *a1)
{
  return sub_10048CB60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004909AC()
{
  return sub_10001EC00((uint64_t *)&unk_100966910);
}

uint64_t sub_1004909B8(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, (uint64_t *)&unk_100966910, (uint64_t)&unk_1008C89D0, (uint64_t)sub_100490A64);
}

uint64_t sub_1004909E0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100490A08()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100490A18()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100490A34()
{
  return sub_100496738((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_100490A4C()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100490A64(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008C89F8, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100490A90()
{
  return sub_100496738((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100490AA8(uint64_t a1)
{
  return sub_100485750(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100490AC8()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_10095BCB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v19 = *(void *)(v1 + 64);
  uint64_t v18 = type metadata accessor for Artwork();
  uint64_t v3 = *(void *)(v18 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 64);
  uint64_t v5 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v2, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v2, v7);
  }
  unint64_t v9 = (((v19 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4;
  unint64_t v10 = (v17 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (v10 + v6 + 40) & ~v6;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v9, v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + v10);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v0 + v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13(v0 + v11 + *(int *)(v5 + 32), v12);
  uint64_t v14 = v0 + v11 + *(int *)(v5 + 36);
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100490E30(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000AFA94(&qword_10095BCB8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for Artwork() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004857E8(a1, v1 + v4, *(void *)(v1 + v5), v1 + v7, v1 + v8, v1 + v10, *(void *)(v1 + v11), *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(id))(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100490FF4(uint64_t a1)
{
  return sub_10006DE44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))&type metadata accessor for Configuration);
}

uint64_t sub_100491040()
{
  return sub_10001EC00(&qword_10095DCE0);
}

uint64_t sub_10049104C(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DCE0, (uint64_t)&unk_1008C8AE8, (uint64_t)sub_100491090);
}

uint64_t sub_100491078()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100491090(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for Configuration, &qword_10095DCF8, (uint64_t)&unk_1008C8B10, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1004910F4()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for Configuration);
}

uint64_t sub_10049110C(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for Configuration);
}

void sub_100491128(char *a1)
{
  sub_100718438(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100491138(uint64_t a1)
{
  return sub_10049635C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004836E8);
}

uint64_t sub_100491154()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10049118C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1004911B8(uint64_t *a1)
{
  return sub_10048CB60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004911F0()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_1004911FC(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10094DBA0, (uint64_t)&unk_1008C8CF0, (uint64_t)sub_10049124C);
}

uint64_t sub_100491224()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100491234()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_10049124C(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008C8D18, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100491278()
{
  return sub_100496738((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100491290()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004912AC()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004912C4(uint64_t a1)
{
  return sub_10006D908(a1, (uint64_t (*)(void, void, void, void, void, void))sub_10048BA38);
}

uint64_t sub_1004912E0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v98 = a3;
  uint64_t v11 = sub_1000AFA94(&qword_10095DD20);
  uint64_t v90 = *(void *)(v11 - 8);
  uint64_t v91 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v87 = v13;
  id v88 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v80 - v14;
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v96 = *(void *)(v15 - 8);
  uint64_t v97 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v93 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v94 = (char *)&v80 - v19;
  uint64_t v92 = v20;
  __chkstk_darwin(v18);
  uint64_t v95 = (char *)&v80 - v21;
  uint64_t v22 = sub_1000AFA94(&qword_100950BA8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  unint64_t v85 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = type metadata accessor for Trainer();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v83 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = (void *)swift_allocObject();
  v30[2] = a4;
  v30[3] = a5;
  uint64_t v99 = v30;
  v30[4] = a6;
  uint64_t v86 = a4;
  swift_retain();
  id v31 = a5;
  id v84 = a6;
  static os_log_type_t.default.getter();
  uint64_t v32 = (void *)HKLogActivity;
  uint64_t v82 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10074E640;
  *(void *)(v33 + 56) = &type metadata for String;
  unint64_t v34 = sub_1000AA64C();
  unint64_t v81 = (unint64_t)"tails for identifier: %@";
  *(void *)(v33 + 32) = 0xD000000000000024;
  *(void *)(v33 + 40) = 0x80000001007CA380;
  *(void *)(v33 + 96) = &type metadata for String;
  *(void *)(v33 + 104) = v34;
  *(void *)(v33 + 64) = v34;
  *(void *)(v33 + 72) = a1;
  *(void *)(v33 + 80) = a2;
  id v35 = v32;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  uint64_t v36 = v98;
  swift_bridgeObjectRelease();
  uint64_t v37 = &v36[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess();
  uint64_t v38 = *(void *)v37;
  if (*(void *)(v38 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v39 = sub_1000DA1C0(a1, a2);
    if (v40)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, *(void *)(v38 + 56) + *(void *)(v28 + 72) * v39, v27);
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v41(v26, 0, 1, v27);
    }
    else
    {
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v41(v26, 1, 1, v27);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
    {
      unint64_t v70 = v83;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v83, v26, v27);
      LODWORD(v98) = static os_log_type_t.default.getter();
      unint64_t v71 = (void *)HKLogActivity;
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_100752410;
      *(void *)(v72 + 56) = &type metadata for String;
      *(void *)(v72 + 64) = v34;
      unint64_t v73 = v81 | 0x8000000000000000;
      *(void *)(v72 + 32) = 0xD000000000000024;
      *(void *)(v72 + 40) = v73;
      *(void *)(v72 + 96) = &type metadata for String;
      *(void *)(v72 + 104) = v34;
      *(void *)(v72 + 72) = a1;
      *(void *)(v72 + 80) = a2;
      swift_bridgeObjectRetain();
      uint64_t v74 = v41;
      id v75 = v71;
      uint64_t v76 = Trainer.description.getter();
      *(void *)(v72 + 136) = &type metadata for String;
      *(void *)(v72 + 144) = v34;
      *(void *)(v72 + 112) = v76;
      *(void *)(v72 + 120) = v77;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v78 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v85, v70, v27);
      v74((char *)v78, 0, 1, v27);
      sub_1006AEC5C(v78, v86, (uint64_t)v84);
      sub_10008DB18(v78, &qword_100950BA8);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v70, v27);
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
  }
  sub_10008DB18((uint64_t)v26, &qword_100950BA8);
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v42;
  v43[3] = a1;
  v43[4] = a2;
  v43[5] = sub_100491D20;
  uint64_t v44 = v99;
  v43[6] = v99;
  id v45 = (void *)swift_allocObject();
  v45[2] = a1;
  v45[3] = a2;
  v45[4] = sub_100491D20;
  v45[5] = v44;
  sub_10007E4EC(&v36[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], *(void *)&v36[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24]);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v46 = v89;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_100491D30;
  *(void *)(v47 + 24) = v43;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_100491D6C;
  *(void *)(v48 + 24) = v47;
  uint64_t v50 = v90;
  uint64_t v49 = v91;
  unint64_t v51 = v88;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v88, v46, v91);
  unint64_t v52 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v53 = (v87 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v52, v51, v49);
  uint64_t v55 = (uint64_t (**)(uint64_t))(v54 + v53);
  void *v55 = sub_100491D94;
  v55[1] = (uint64_t (*)(uint64_t))v48;
  swift_retain();
  uint64_t v98 = (char *)&type metadata for () + 8;
  uint64_t v56 = v94;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v49);
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_100491D60;
  *(void *)(v57 + 24) = v45;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_1004968AC;
  *(void *)(v58 + 24) = v57;
  uint64_t v60 = v96;
  uint64_t v59 = v97;
  uint64_t v61 = v93;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v56, v97);
  unint64_t v62 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  unint64_t v63 = (v92 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v64 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v64 + v62, v61, v59);
  uint64_t v65 = (void *)(v64 + v63);
  *uint64_t v65 = sub_1001B3D88;
  v65[1] = v58;
  swift_retain();
  uint64_t v66 = v95;
  Promise.init(asyncOperation:)();
  uint64_t v67 = *(void (**)(char *, uint64_t))(v60 + 8);
  v67(v56, v59);
  uint64_t v68 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = 0;
  *(void *)(v69 + 24) = 0;
  v68(sub_10006D8BC, v69);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v67(v66, v59);
  return swift_release();
}

uint64_t sub_100491CD8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100491D20(uint64_t a1)
{
  return sub_1006AB5F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100491D30(uint64_t a1)
{
  return sub_1004961F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100483294);
}

uint64_t sub_100491D48()
{
  return sub_10002BFD4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100491D60(uint64_t a1)
{
  return sub_1004834DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100491D6C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100491D94(uint64_t a1)
{
  return sub_10006DE44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))&type metadata accessor for TrainerDetail);
}

uint64_t sub_100491DE0()
{
  return sub_10001EC00(&qword_10095DD20);
}

uint64_t sub_100491DEC(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DD20, (uint64_t)&unk_1008C8F98, (uint64_t)sub_100491E3C);
}

uint64_t sub_100491E14()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100491E24()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100491E3C(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for TrainerDetail, &qword_10095DD28, (uint64_t)&unk_1008C8FC0, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100491EA0()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for TrainerDetail);
}

uint64_t sub_100491EB8(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for TrainerDetail);
}

uint64_t sub_100491ED0(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v124 = a2;
  uint64_t v116 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v115 = *(void *)(v116 - 8);
  uint64_t v13 = *(void *)(v115 + 64);
  uint64_t v14 = __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v119 = (char *)&v104 - v15;
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v117 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v120 = (char *)&v104 - v21;
  __chkstk_darwin(v20);
  uint64_t v118 = (char *)&v104 - v22;
  uint64_t v23 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v122 = *(void *)(v23 - 8);
  uint64_t v123 = v23;
  __chkstk_darwin(v23);
  uint64_t v121 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a3;
  v25[3] = a4;
  v25[4] = a5;
  v25[5] = a6;
  unint64_t v127 = v25;
  v25[6] = a7;
  uint64_t v133 = type metadata accessor for MindfulnessSessionViewModel();
  v134 = &off_1008C0428;
  uint64_t v125 = (char *)v133;
  unint64_t v132 = a1;
  id v26 = a3;
  swift_retain();
  id v27 = a5;
  id v28 = a1;
  sub_10008A670(a6);
  uint64_t v29 = MindfulnessSessionViewModel.metadata.getter();
  uint64_t v126 = v26;
  if (!v29)
  {
    long long v128 = 0u;
    long long v129 = 0u;
    goto LABEL_10;
  }
  uint64_t v30 = v29;
  uint64_t v113 = (uint64_t)v27;
  uint64_t v31 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v30 + 16) || (unint64_t v33 = sub_1000DA1C0(v31, v32), (v34 & 1) == 0))
  {
    long long v128 = 0u;
    long long v129 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v129 + 1))
  {
LABEL_10:
    sub_10008DB18((uint64_t)&v128, &qword_100955A00);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    static os_log_type_t.error.getter();
    uint64_t v55 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v56 = swift_allocObject();
    long long v124 = xmmword_10074E640;
    *(_OWORD *)(v56 + 16) = xmmword_10074E640;
    *(void *)(v56 + 56) = &type metadata for String;
    unint64_t v57 = sub_1000AA64C();
    *(void *)(v56 + 64) = v57;
    *(void *)(v56 + 32) = 0xD00000000000002ALL;
    *(void *)(v56 + 40) = 0x80000001007B70F0;
    uint64_t v58 = v132;
    id v59 = v55;
    id v60 = [v58 description];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;

    *(void *)(v56 + 96) = &type metadata for String;
    *(void *)(v56 + 104) = v57;
    *(void *)(v56 + 72) = v61;
    *(void *)(v56 + 80) = v63;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    static os_log_type_t.error.getter();
    uint64_t v64 = (void *)HKLogActivity;
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = v124;
    *(void *)(v65 + 56) = &type metadata for String;
    *(void *)(v65 + 64) = v57;
    *(void *)(v65 + 32) = 0xD000000000000050;
    *(void *)(v65 + 40) = 0x80000001007CA450;
    *(void *)(v65 + 96) = v125;
    *(void *)(v65 + 104) = sub_100492C20((unint64_t *)&qword_100950C98, (void (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel);
    uint64_t v66 = v126;
    *(void *)(v65 + 72) = v126;
    id v67 = v66;
    id v68 = v64;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v105 = v17;
  uint64_t v106 = v16;
  uint64_t v125 = v130;
  uint64_t v112 = v131;
  int v111 = static os_log_type_t.default.getter();
  id v35 = (void *)HKLogActivity;
  uint64_t v109 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10074E640;
  *(void *)(v36 + 56) = &type metadata for String;
  unint64_t v37 = sub_1000AA64C();
  *(void *)(v36 + 64) = v37;
  *(void *)(v36 + 32) = 0xD00000000000002ALL;
  *(void *)(v36 + 40) = 0x80000001007B70F0;
  unint64_t v107 = 0x80000001007B70F0;
  uint64_t v38 = v132;
  id v39 = v35;
  id v40 = [v38 description];
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v110 = v42;

  *(void *)(v36 + 96) = &type metadata for String;
  *(void *)(v36 + 104) = v37;
  unint64_t v108 = v37;
  uint64_t v43 = v110;
  *(void *)(v36 + 72) = v41;
  *(void *)(v36 + 80) = v43;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v44 = v124;
  id v45 = *(void **)(v124 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  uint64_t v46 = v112;
  NSString v47 = String._bridgeToObjectiveC()();
  id v48 = [v45 objectForKey:v47];

  if (v48)
  {
    static os_log_type_t.default.getter();
    uint64_t v49 = (void *)HKLogActivity;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_100752410;
    unint64_t v51 = v108;
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = v51;
    *(void *)(v50 + 32) = 0xD00000000000002ALL;
    *(void *)(v50 + 40) = v107;
    *(void *)(v50 + 96) = &type metadata for String;
    *(void *)(v50 + 104) = v51;
    *(void *)(v50 + 72) = v125;
    *(void *)(v50 + 80) = v46;
    *(void *)(v50 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v50 + 144) = sub_100492C20(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v50 + 112) = v48;
    id v52 = v49;
    id v53 = v48;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v54 = v53;
    sub_1006AB5FC((char *)v48, v126, a4, v113, a6, a7);
  }
  else
  {
    uint64_t v70 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v71 = (void *)swift_allocObject();
    uint64_t v126 = v71;
    uint64_t v72 = v125;
    v71[2] = v70;
    v71[3] = v72;
    v71[4] = v46;
    v71[5] = sub_100492C08;
    unint64_t v73 = v127;
    v71[6] = v127;
    sub_10008E75C((uint64_t)&v132, (uint64_t)&v128);
    uint64_t v74 = swift_allocObject();
    uint64_t v113 = v74;
    sub_100093E60(&v128, v74 + 16);
    *(void *)(v74 + 56) = sub_100492C08;
    *(void *)(v74 + 64) = v73;
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v75 = v121;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    sub_10007E4EC((void *)(v44 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v44 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v76 = v122;
    unint64_t v77 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v78 + v77, v75, v123);
    uint64_t v79 = v119;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v80 = swift_allocObject();
    unint64_t v81 = v126;
    *(void *)(v80 + 16) = sub_100491138;
    *(void *)(v80 + 24) = v81;
    uint64_t v82 = swift_allocObject();
    *(void *)(v82 + 16) = sub_1004968DC;
    *(void *)(v82 + 24) = v80;
    uint64_t v83 = v115;
    id v84 = v114;
    uint64_t v85 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v114, v79, v116);
    unint64_t v86 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    unint64_t v87 = (v13 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v88 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v88 + v86, v84, v85);
    uint64_t v89 = (void *)(v88 + v87);
    *uint64_t v89 = sub_1004968F4;
    v89[1] = v82;
    swift_retain();
    uint64_t v125 = (char *)&type metadata for () + 8;
    uint64_t v90 = v120;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v119, v85);
    uint64_t v91 = swift_allocObject();
    uint64_t v92 = v113;
    *(void *)(v91 + 16) = sub_1001B3D1C;
    *(void *)(v91 + 24) = v92;
    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = sub_1004968AC;
    *(void *)(v93 + 24) = v91;
    uint64_t v94 = v105;
    uint64_t v95 = v117;
    uint64_t v96 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v117, v90, v106);
    unint64_t v97 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    uint64_t v98 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v94 + 32))(v98 + v97, v95, v96);
    uint64_t v99 = (void *)(v98 + ((v18 + v97 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v99 = sub_1001B3D88;
    v99[1] = v93;
    swift_retain();
    unint64_t v100 = v118;
    Promise.init(asyncOperation:)();
    uint64_t v101 = *(void (**)(char *, uint64_t))(v94 + 8);
    v101(v120, v96);
    uint64_t v102 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = 0;
    *(void *)(v103 + 24) = 0;
    v102(sub_10006D8BC, v103);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v101(v100, v96);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v132);
  return swift_release();
}

uint64_t sub_100492BB0()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100492C08(uint64_t a1)
{
  return sub_10049635C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1006AB5FC);
}

uint64_t sub_100492C20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100492C70()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_100492C7C()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100492C8C()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100492CA4(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for NavigationRequest, &qword_10095DD38, (uint64_t)&unk_1008C91C8, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100492D08()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100492D20(uint64_t a1)
{
  return sub_10048C1E8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100492D34()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100492D4C(uint64_t a1)
{
  return sub_10048BEB8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100492D5C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_100492D8C()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for ShelfLockupDescriptor);
}

uint64_t sub_100492DA4(void (*a1)(unsigned char *), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ShelfLockupDescriptor() - 8);
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10048B75C(a1, a2, v6, v7, v8);
}

uint64_t sub_100492E28()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100492E40(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008C92E0, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100492E6C()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100492E8C(uint64_t a1)
{
  return sub_1004961F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100536FF8);
}

uint64_t sub_100492EA8()
{
  return sub_10002BFD4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100492EC0()
{
  return sub_10001EC00(&qword_10095DD20);
}

uint64_t sub_100492ECC()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100492EE0()
{
  swift_release();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100492F38(uint64_t a1)
{
  return sub_10049635C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100537004);
}

uint64_t sub_100492F58()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_100492F64()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100492F74()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100492FAC()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100492FBC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v91 = a3;
  uint64_t v7 = sub_1000AFA94(&qword_10095DD20);
  uint64_t v84 = *(void *)(v7 - 8);
  uint64_t v85 = v7;
  __chkstk_darwin(v7);
  uint64_t v82 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v8;
  __chkstk_darwin(v9);
  unint64_t v81 = (char *)&v75 - v10;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v89 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  __chkstk_darwin(v11);
  unint64_t v86 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v87 = (char *)&v75 - v14;
  uint64_t v83 = v15;
  __chkstk_darwin(v16);
  uint64_t v88 = (char *)&v75 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v18 - 8);
  uint64_t v79 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v75 - v21;
  uint64_t v23 = type metadata accessor for Trainer();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v78 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = a4;
  swift_retain();
  static os_log_type_t.default.getter();
  id v26 = (void *)HKLogActivity;
  uint64_t v77 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10074E640;
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v28 = sub_1000AA64C();
  unint64_t v76 = (unint64_t)"tails for identifier: %@";
  *(void *)(v27 + 32) = 0xD000000000000024;
  *(void *)(v27 + 40) = 0x80000001007CA380;
  *(void *)(v27 + 96) = &type metadata for String;
  *(void *)(v27 + 104) = v28;
  *(void *)(v27 + 64) = v28;
  *(void *)(v27 + 72) = a1;
  *(void *)(v27 + 80) = a2;
  id v29 = v26;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  uint64_t v30 = v91;
  swift_bridgeObjectRelease();
  uint64_t v31 = &v30[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess();
  uint64_t v32 = *(void *)v31;
  if (*(void *)(v32 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1000DA1C0(a1, a2);
    if (v34)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v22, *(void *)(v32 + 56) + *(void *)(v24 + 72) * v33, v23);
      id v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v35(v22, 0, 1, v23);
    }
    else
    {
      id v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v35(v22, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
    {
      uint64_t v64 = v78;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v78, v22, v23);
      LODWORD(v91) = static os_log_type_t.default.getter();
      uint64_t v65 = (void *)HKLogActivity;
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_100752410;
      *(void *)(v66 + 56) = &type metadata for String;
      *(void *)(v66 + 64) = v28;
      unint64_t v67 = v76 | 0x8000000000000000;
      *(void *)(v66 + 32) = 0xD000000000000024;
      *(void *)(v66 + 40) = v67;
      *(void *)(v66 + 96) = &type metadata for String;
      *(void *)(v66 + 104) = v28;
      *(void *)(v66 + 72) = a1;
      *(void *)(v66 + 80) = a2;
      swift_bridgeObjectRetain();
      id v68 = v65;
      uint64_t v69 = v35;
      id v70 = v68;
      uint64_t v71 = Trainer.description.getter();
      *(void *)(v66 + 136) = &type metadata for String;
      *(void *)(v66 + 144) = v28;
      *(void *)(v66 + 112) = v71;
      *(void *)(v66 + 120) = v72;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v73 = (uint64_t)v79;
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v79, v64, v23);
      v69((char *)v73, 0, 1, v23);
      sub_1003A0344(v73);
      sub_10008DB18(v73, &qword_100950BA8);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v64, v23);
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  }
  sub_10008DB18((uint64_t)v22, &qword_100950BA8);
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v37 = (void *)swift_allocObject();
  v37[2] = v36;
  v37[3] = a1;
  v37[4] = a2;
  v37[5] = sub_1004961E8;
  uint64_t v38 = v92;
  v37[6] = v92;
  id v39 = (void *)swift_allocObject();
  void v39[2] = a1;
  v39[3] = a2;
  v39[4] = sub_1004961E8;
  v39[5] = v38;
  sub_10007E4EC(&v30[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], *(void *)&v30[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24]);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v40 = v81;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_100491D30;
  *(void *)(v41 + 24) = v37;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_1004968C4;
  *(void *)(v42 + 24) = v41;
  uint64_t v44 = v84;
  uint64_t v43 = v85;
  id v45 = v82;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v40, v85);
  unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v47 = (v80 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v46, v45, v43);
  uint64_t v49 = (uint64_t (**)(uint64_t))(v48 + v47);
  *uint64_t v49 = sub_1004968F8;
  v49[1] = (uint64_t (*)(uint64_t))v42;
  swift_retain();
  uint64_t v91 = (char *)&type metadata for () + 8;
  uint64_t v50 = v87;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v43);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = sub_100496798;
  *(void *)(v51 + 24) = v39;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_1004968AC;
  *(void *)(v52 + 24) = v51;
  uint64_t v54 = v89;
  uint64_t v53 = v90;
  uint64_t v55 = v86;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v50, v90);
  unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v57 = (v83 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v58 + v56, v55, v53);
  id v59 = (void *)(v58 + v57);
  *id v59 = sub_1001B3D88;
  v59[1] = v52;
  swift_retain();
  id v60 = v88;
  Promise.init(asyncOperation:)();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  v61(v50, v53);
  uint64_t v62 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = 0;
  *(void *)(v63 + 24) = 0;
  v62(sub_10006D8BC, v63);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v61(v60, v53);
  return swift_release();
}

void sub_10049397C(void *a1, void *a2, void (*a3)(void), uint64_t a4, void *a5, uint64_t a6)
{
  id v38 = a1;
  id v39 = a2;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  uint64_t v15 = self;
  swift_retain();
  id v16 = a5;
  swift_retain();
  id v17 = [v15 quantityTypeForIdentifier:HKQuantityTypeIdentifierBodyMass];
  if (v17)
  {
    uint64_t v18 = v17;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v19 = objc_allocWithZone((Class)NSSortDescriptor);
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithKey:v20 ascending:0];

    uint64_t v22 = self;
    id v23 = [v38 endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v25 = [v22 predicateForSamplesWithStartDate:0 endDate:isa options:0];

    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_100751040;
    *(void *)(v26 + 32) = v21;
    aBlock[0] = v26;
    specialized Array._endMutation()();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100496014;
    *(void *)(v27 + 24) = v14;
    id v28 = objc_allocWithZone((Class)HKSampleQuery);
    sub_10007E2D8(0, &qword_100953720);
    id v29 = v18;
    id v30 = v25;
    id v31 = v21;
    swift_retain();
    Class v32 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100496024;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000696FC;
    aBlock[3] = &unk_1008CA180;
    unint64_t v33 = _Block_copy(aBlock);
    id v34 = [v28 initWithSampleType:v29 predicate:v30 limit:1 sortDescriptors:v32 resultsHandler:v33];

    _Block_release(v33);
    swift_release();
    [v39 executeQuery:v34];
    swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    id v35 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1007509E0;
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = sub_1000AA64C();
    *(void *)(v36 + 32) = 0xD00000000000002CLL;
    *(void *)(v36 + 40) = 0x80000001007CA7C0;
    id v37 = v35;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    a3(0);
    swift_release();
  }
}

double sub_100493E2C()
{
  id v0 = [self defaultUserProfile];
  if (!v0 || (uint64_t v1 = v0, v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(), v1, !v2))
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_10008DB18((uint64_t)&v7, &qword_100955A00);
    return 68.0299988;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1000DE24C((uint64_t)v6), (v4 & 1) != 0))
  {
    sub_10008F484(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000DEDB4((uint64_t)v6);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(double *)v6;
  }
  return 68.0299988;
}

uint64_t sub_100493F70(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v91 = a3;
  uint64_t v90 = a2;
  uint64_t v8 = sub_1000AFA94(&qword_10095DD58);
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  uint64_t v9 = *(void *)(v94 + 64);
  __chkstk_darwin(v8);
  uint64_t v92 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v93 = (char *)v88 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_10095DD60);
  uint64_t v98 = *(void *)(v12 - 8);
  uint64_t v99 = v12;
  uint64_t v13 = *(void *)(v98 + 64);
  __chkstk_darwin(v12);
  uint64_t v96 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v97 = (char *)v88 - v15;
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v103 = *(void *)(v16 - 8);
  *(void *)&long long v104 = v16;
  uint64_t v17 = *(void *)(v103 + 64);
  __chkstk_darwin(v16);
  unint64_t v100 = (char *)v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v101 = (char *)v88 - v19;
  __chkstk_darwin(v20);
  uint64_t v102 = (char *)v88 - v21;
  uint64_t v22 = type metadata accessor for SeymourArtworkSizingBehavior();
  uint64_t v89 = *(void **)(v22 - 8);
  uint64_t v23 = v89[8];
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a4;
  *(void *)(v24 + 24) = a5;
  id v25 = a4;
  swift_retain();
  id v26 = [a1 metadata];
  uint64_t v105 = v25;
  uint64_t v106 = v24;
  if (!v26)
  {
    long long v109 = 0u;
    long long v110 = 0u;
    goto LABEL_9;
  }
  uint64_t v27 = v26;
  uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v28 + 16) || (unint64_t v31 = sub_1000DA1C0(v29, v30), (v32 & 1) == 0))
  {
    long long v109 = 0u;
    long long v110 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v28 + 56) + 32 * v31, (uint64_t)&v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v110 + 1))
  {
LABEL_9:
    sub_10008DB18((uint64_t)&v109, &qword_100955A00);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    v88[1] = v107;
    v88[0] = v108;
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v91;
    swift_unknownObjectWeakInit();
    sub_1004955C4(v90, (uint64_t)v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SeymourArtworkSizingBehavior);
    unint64_t v35 = (*((unsigned __int8 *)v89 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v89 + 80);
    uint64_t v36 = swift_allocObject();
    uint64_t v105 = (void (*)(uint64_t))v36;
    *(void *)(v36 + 16) = sub_1004955BC;
    *(void *)(v36 + 24) = v33;
    v88[2] = v33;
    sub_100495630((uint64_t)v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, (uint64_t (*)(void))type metadata accessor for SeymourArtworkSizingBehavior);
    uint64_t v37 = swift_allocObject();
    uint64_t v90 = v37;
    uint64_t v38 = v106;
    *(void *)(v37 + 16) = sub_100495898;
    *(void *)(v37 + 24) = v38;
    uint64_t v39 = v38;
    id v40 = (void *)swift_allocObject();
    uint64_t v89 = v40;
    v40[2] = a1;
    v40[3] = sub_100495898;
    _DWORD v40[4] = v39;
    sub_10007E4EC((void *)(v34 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v34 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    swift_retain_n();
    swift_retain();
    id v41 = a1;
    uint64_t v42 = v93;
    CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)();
    swift_bridgeObjectRelease();
    uint64_t v44 = v94;
    uint64_t v43 = v95;
    id v45 = v92;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v92, v42, v95);
    unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v47 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v47 + v46, v45, v43);
    uint64_t v48 = (void (**)(uint64_t))(v47 + ((v9 + v46 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v49 = v105;
    *uint64_t v48 = sub_100495698;
    v48[1] = v49;
    swift_retain();
    sub_1000AFA94(&qword_10095DD68);
    uint64_t v50 = v97;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = v90;
    *(void *)(v51 + 16) = sub_100496908;
    *(void *)(v51 + 24) = v52;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = sub_1004968DC;
    *(void *)(v53 + 24) = v51;
    uint64_t v55 = v98;
    uint64_t v54 = v99;
    unint64_t v56 = v96;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v96, v50, v99);
    unint64_t v57 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    unint64_t v58 = (v13 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v59 + v57, v56, v54);
    id v60 = (void *)(v59 + v58);
    void *v60 = sub_1004968FC;
    v60[1] = v53;
    swift_retain();
    uint64_t v96 = (char *)&type metadata for () + 8;
    uint64_t v61 = v101;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v54);
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = v89;
    *(void *)(v62 + 16) = sub_100496794;
    *(void *)(v62 + 24) = v63;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = sub_1004968AC;
    *(void *)(v64 + 24) = v62;
    uint64_t v66 = v103;
    uint64_t v65 = v104;
    unint64_t v67 = v100;
    (*(void (**)(char *, char *, void))(v103 + 16))(v100, v61, v104);
    unint64_t v68 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    uint64_t v69 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v69 + v68, v67, v65);
    id v70 = (void *)(v69 + ((v17 + v68 + 7) & 0xFFFFFFFFFFFFFFF8));
    *id v70 = sub_1001B3D88;
    v70[1] = v64;
    swift_retain();
    uint64_t v71 = v102;
    Promise.init(asyncOperation:)();
    uint64_t v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    v72(v61, v65);
    uint64_t v73 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = 0;
    *(void *)(v74 + 24) = 0;
    v73(sub_10006D8BC, v74);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v72(v71, v65);
    return swift_release();
  }
LABEL_10:
  static os_log_type_t.error.getter();
  unint64_t v76 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v77 = swift_allocObject();
  long long v104 = xmmword_10074E640;
  *(_OWORD *)(v77 + 16) = xmmword_10074E640;
  *(void *)(v77 + 56) = &type metadata for String;
  unint64_t v78 = sub_1000AA64C();
  *(void *)(v77 + 64) = v78;
  *(void *)(v77 + 32) = 0xD00000000000003ALL;
  *(void *)(v77 + 40) = 0x80000001007CA570;
  uint64_t v79 = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  *(void *)(v77 + 96) = v79;
  unint64_t v80 = sub_1002320AC();
  *(void *)(v77 + 104) = v80;
  *(void *)(v77 + 72) = a1;
  id v81 = a1;
  id v82 = v76;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  static os_log_type_t.error.getter();
  uint64_t v83 = (void *)HKLogActivity;
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = v104;
  *(void *)(v84 + 56) = &type metadata for String;
  *(void *)(v84 + 64) = v78;
  *(void *)(v84 + 32) = 0xD000000000000025;
  *(void *)(v84 + 40) = 0x80000001007CA690;
  *(void *)(v84 + 96) = v79;
  *(void *)(v84 + 104) = v80;
  uint64_t v85 = v105;
  *(void *)(v84 + 72) = v105;
  unint64_t v86 = v85;
  id v87 = v83;
  os_log(_:dso:log:_:_:)();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100494A88(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v93 = a3;
  uint64_t v92 = a2;
  uint64_t v10 = sub_1000AFA94(&qword_10095DD58);
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  uint64_t v11 = *(void *)(v96 + 64);
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v95 = (char *)v90 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10095DD60);
  uint64_t v100 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  uint64_t v15 = *(void *)(v100 + 64);
  __chkstk_darwin(v14);
  uint64_t v98 = (char *)v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v99 = (char *)v90 - v17;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v105 = *(void *)(v18 - 8);
  *(void *)&long long v106 = v18;
  uint64_t v19 = *(void *)(v105 + 64);
  __chkstk_darwin(v18);
  uint64_t v102 = (char *)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v103 = (char *)v90 - v21;
  __chkstk_darwin(v22);
  long long v104 = (char *)v90 - v23;
  uint64_t v24 = type metadata accessor for SeymourArtworkSizingBehavior();
  uint64_t v91 = *(void **)(v24 - 8);
  uint64_t v25 = v91[8];
  __chkstk_darwin(v24 - 8);
  id v26 = (void *)swift_allocObject();
  v26[2] = a4;
  v26[3] = a5;
  v26[4] = a6;
  uint64_t v27 = a4;
  swift_retain();
  id v28 = [a1 metadata];
  uint64_t v107 = v27;
  uint64_t v108 = v26;
  if (!v28)
  {
    long long v111 = 0u;
    long long v112 = 0u;
    goto LABEL_9;
  }
  uint64_t v29 = v28;
  uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v30 + 16) || (unint64_t v33 = sub_1000DA1C0(v31, v32), (v34 & 1) == 0))
  {
    long long v111 = 0u;
    long long v112 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v112 + 1))
  {
LABEL_9:
    sub_10008DB18((uint64_t)&v111, &qword_100955A00);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    v90[1] = v109;
    v90[0] = v110;
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v93;
    swift_unknownObjectWeakInit();
    sub_1004955C4(v92, (uint64_t)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SeymourArtworkSizingBehavior);
    unint64_t v37 = (*((unsigned __int8 *)v91 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v91 + 80);
    uint64_t v38 = swift_allocObject();
    uint64_t v107 = (void (*)(uint64_t))v38;
    *(void *)(v38 + 16) = sub_1004955BC;
    *(void *)(v38 + 24) = v35;
    v90[2] = v35;
    sub_100495630((uint64_t)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v38 + v37, (uint64_t (*)(void))type metadata accessor for SeymourArtworkSizingBehavior);
    uint64_t v39 = swift_allocObject();
    uint64_t v92 = v39;
    id v40 = v108;
    *(void *)(v39 + 16) = sub_1004955B0;
    *(void *)(v39 + 24) = v40;
    id v41 = v40;
    uint64_t v42 = (void *)swift_allocObject();
    uint64_t v91 = v42;
    v42[2] = a1;
    v42[3] = sub_1004955B0;
    v42[4] = v41;
    sub_10007E4EC((void *)(v36 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v36 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    swift_retain_n();
    swift_retain();
    id v43 = a1;
    uint64_t v44 = v95;
    CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)();
    swift_bridgeObjectRelease();
    uint64_t v46 = v96;
    uint64_t v45 = v97;
    uint64_t v47 = v94;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v94, v44, v97);
    unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v49 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v49 + v48, v47, v45);
    uint64_t v50 = (void (**)(uint64_t))(v49 + ((v11 + v48 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v51 = v107;
    *uint64_t v50 = sub_100495698;
    v50[1] = v51;
    swift_retain();
    sub_1000AFA94(&qword_10095DD68);
    uint64_t v52 = v99;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v92;
    *(void *)(v53 + 16) = sub_10049569C;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1004968DC;
    *(void *)(v55 + 24) = v53;
    uint64_t v57 = v100;
    uint64_t v56 = v101;
    unint64_t v58 = v98;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v52, v101);
    unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v60 = (v15 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v61 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v61 + v59, v58, v56);
    uint64_t v62 = (uint64_t (**)(uint64_t *))(v61 + v60);
    *uint64_t v62 = sub_10049570C;
    v62[1] = (uint64_t (*)(uint64_t *))v55;
    swift_retain();
    uint64_t v98 = (char *)&type metadata for () + 8;
    uint64_t v63 = v103;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v56);
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = v91;
    *(void *)(v64 + 16) = sub_1004956CC;
    *(void *)(v64 + 24) = v65;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_1004968AC;
    *(void *)(v66 + 24) = v64;
    uint64_t v68 = v105;
    uint64_t v67 = v106;
    uint64_t v69 = v102;
    (*(void (**)(char *, char *, void))(v105 + 16))(v102, v63, v106);
    unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v71 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v71 + v70, v69, v67);
    uint64_t v72 = (void *)(v71 + ((v19 + v70 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v72 = sub_1001B3D88;
    v72[1] = v66;
    swift_retain();
    uint64_t v73 = v104;
    Promise.init(asyncOperation:)();
    uint64_t v74 = *(void (**)(char *, uint64_t))(v68 + 8);
    v74(v63, v67);
    uint64_t v75 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = 0;
    *(void *)(v76 + 24) = 0;
    v75(sub_10006D8BC, v76);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v74(v73, v67);
    return swift_release();
  }
LABEL_10:
  static os_log_type_t.error.getter();
  unint64_t v78 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v79 = swift_allocObject();
  long long v106 = xmmword_10074E640;
  *(_OWORD *)(v79 + 16) = xmmword_10074E640;
  *(void *)(v79 + 56) = &type metadata for String;
  unint64_t v80 = sub_1000AA64C();
  *(void *)(v79 + 64) = v80;
  *(void *)(v79 + 32) = 0xD00000000000003ALL;
  *(void *)(v79 + 40) = 0x80000001007CA570;
  uint64_t v81 = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  *(void *)(v79 + 96) = v81;
  unint64_t v82 = sub_1002320AC();
  *(void *)(v79 + 104) = v82;
  *(void *)(v79 + 72) = a1;
  id v83 = a1;
  id v84 = v78;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  static os_log_type_t.error.getter();
  uint64_t v85 = (void *)HKLogActivity;
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = v106;
  *(void *)(v86 + 56) = &type metadata for String;
  *(void *)(v86 + 64) = v80;
  *(void *)(v86 + 32) = 0xD000000000000039;
  *(void *)(v86 + 40) = 0x80000001007CA600;
  *(void *)(v86 + 96) = v81;
  *(void *)(v86 + 104) = v82;
  id v87 = v107;
  *(void *)(v86 + 72) = v107;
  uint64_t v88 = v87;
  id v89 = v85;
  os_log(_:dso:log:_:_:)();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004955A8()
{
  return sub_10049584C();
}

void sub_1004955B0(unint64_t a1)
{
  sub_10064033C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1004955BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1004876DC(a1, a2);
}

uint64_t sub_1004955C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100495630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10049569C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004956C4()
{
  return sub_10049604C();
}

uint64_t sub_1004956CC(uint64_t a1)
{
  return sub_100487C9C(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1004956D8()
{
  return sub_10001EC00(&qword_10095DD58);
}

uint64_t sub_1004956E4(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DD58, (uint64_t)&unk_1008C9970, (uint64_t)sub_1004957FC);
}

uint64_t sub_10049570C(uint64_t *a1)
{
  return sub_10048CB60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100495744()
{
  return sub_10001EC00(&qword_10095DD60);
}

uint64_t sub_100495750(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DD60, (uint64_t)&unk_1008C98F8, (uint64_t)sub_1004957A0);
}

uint64_t sub_100495778()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100495788()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004957A0(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008C9920, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1004957CC()
{
  return sub_100496738((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004957E4()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004957FC(uint64_t a1)
{
  return sub_10048BBEC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10049580C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, *(void *)(v1 + 32));
}

uint64_t sub_100495844()
{
  return sub_10049584C();
}

uint64_t sub_10049584C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100495898(uint64_t a1)
{
  return sub_1004B0F14(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004958A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SeymourArtworkSizingBehavior() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  if (!swift_getEnumCaseMultiPayload())
  {
    unint64_t v3 = v0 + v2 + *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
    uint64_t v4 = type metadata accessor for ArtworkDimension();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }

  return swift_deallocObject();
}

void sub_1004959B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SeymourArtworkSizingBehavior() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100487A14(a1, v4, v5, v6);
}

uint64_t sub_100495A34()
{
  return sub_10049604C();
}

uint64_t sub_100495A3C()
{
  return sub_10001EC00(&qword_10095DD58);
}

uint64_t sub_100495A48()
{
  return sub_10001EC00(&qword_10095DD60);
}

uint64_t sub_100495A54()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100495A64()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

void sub_100495A7C(uint64_t a1)
{
}

void sub_100495AA4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_10048C4E8(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v4 + 16), *(void *)(v4 + 24), *(void (**)(id *))(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_100495AE8(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100495AF8()
{
  return sub_10001EC00((uint64_t *)&unk_100966890);
}

uint64_t sub_100495B08()
{
  return sub_10049604C();
}

uint64_t sub_100495B10(uint64_t a1)
{
  return sub_100486288(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_100495B1C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100495B48(void **a1)
{
  return sub_10048C688(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100495B50()
{
  return sub_10001EC00(&qword_10094F3C8);
}

uint64_t sub_100495B5C(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10094F3C8, (uint64_t)&unk_1008C9DD0, (uint64_t)sub_100495BAC);
}

uint64_t sub_100495B84()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100495B94()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

void sub_100495BAC(uint64_t a1)
{
}

uint64_t sub_100495BD8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100495C1C()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v2 + v1[10], v3);
  uint64_t v5 = v2 + v1[11];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100495DE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(uint64_t (**)(void))(v1 + v6);
  uint64_t v10 = *(void *)(v1 + v6 + 8);
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_10048471C(a1, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_100495EA0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = *(uint64_t (**)(void))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100485BDC(a1, v1 + v4, v5);
}

uint64_t sub_100495F40()
{
  return sub_10001EC00((uint64_t *)&unk_100966910);
}

uint64_t sub_100495F4C()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100495F60()
{
  return sub_10002BFD4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100495F78()
{
  return sub_10001EC00(&qword_10095DD20);
}

uint64_t sub_100495F84()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100495F94()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100495FCC()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100496014(uint64_t a1, char a2)
{
  return sub_10048687C(a1, a2 & 1, *(uint64_t (**)(void, __n128))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

void sub_100496024(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1004864CC(a1, a2, a3, *(void (**)(uint64_t, void))(v3 + 16));
}

uint64_t sub_10049602C()
{
  return sub_10049604C();
}

uint64_t sub_100496034(uint64_t a1)
{
  return sub_100487048(a1, *(void **)(v1 + 16), *(uint64_t (**)(id))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100496044()
{
  return sub_10049604C();
}

uint64_t sub_10049604C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100496098(uint64_t a1)
{
  return sub_100487474(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1004960A4(uint64_t a1)
{
  return sub_10006DE44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))&type metadata accessor for ArchivedSession);
}

uint64_t sub_1004960F0()
{
  return sub_10001EC00(&qword_10095DD98);
}

uint64_t sub_1004960FC(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DD98, (uint64_t)&unk_1008CA320, (uint64_t)sub_10049614C);
}

uint64_t sub_100496124()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100496134()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_10049614C(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for ArchivedSession, &qword_10095DDA0, (uint64_t)&unk_1008CA348, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1004961B0()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for ArchivedSession);
}

uint64_t sub_1004961C8(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for ArchivedSession);
}

uint64_t sub_1004961E0(uint64_t a1)
{
  return sub_100652594(a1, *(void *)(v1 + 16));
}

uint64_t sub_1004961E8(uint64_t a1)
{
  return sub_1003A0344(a1);
}

uint64_t sub_1004961F4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10049620C()
{
  return sub_10002BFD4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100496224()
{
  return sub_10001EC00(&qword_10095DD20);
}

uint64_t sub_100496230()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100496240()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_10049625C()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for WhatsNewSheet);
}

uint64_t sub_100496274()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_100496290()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for IntroSheet);
}

uint64_t sub_1004962A8()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004962C4()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for NoticePrivacyPreference);
}

uint64_t sub_1004962DC()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004962F8()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for ContentAvailability);
}

uint64_t sub_100496314()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10049635C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100496378()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_100496384()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100496394()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004963B0()
{
  return sub_100012920((uint64_t (*)(void))&type metadata accessor for ServiceSubscription);
}

uint64_t sub_1004963C8()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004963E4(uint64_t *a1)
{
  return sub_10048CBF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004963EC()
{
  return sub_10001EC00(&qword_10095DDD0);
}

uint64_t sub_1004963F8(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DDD0, (uint64_t)&unk_1008CAB40, (uint64_t)sub_1004966E8);
}

uint64_t sub_100496424()
{
  return sub_100488950();
}

uint64_t sub_1004964A4(uint64_t *a1)
{
  return sub_10048CB60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004964DC()
{
  return sub_10001EC00(&qword_10095DDD8);
}

uint64_t sub_1004964E8(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, &qword_10095DDD8, (uint64_t)&unk_1008CAAC8, (uint64_t)sub_10049666C);
}

uint64_t sub_100496514()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095DDC8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1004965A8()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100496644()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100496654()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_10049666C(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008CAAF0, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100496698()
{
  return sub_100496738((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004966B0(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1000E2A7C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1004966D0()
{
  return sub_10002BFD4((void (*)(void))&_swift_release);
}

uint64_t sub_1004966E8(uint64_t a1)
{
  return sub_10006D094(a1, &qword_10095DDD8, (uint64_t)&unk_1008CAB68, (uint64_t)sub_10006D8BC);
}

uint64_t sub_100496710(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100496720()
{
  return sub_100496738((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100496738(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_100496788(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10048CC9C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1004968AC()
{
  return sub_1004909E0();
}

uint64_t sub_1004968C4()
{
  return sub_100491D6C();
}

uint64_t sub_1004968DC(void *a1)
{
  return sub_10049118C(a1);
}

id sub_10049693C(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = IndexPath.section.getter();
  if (v4 > 3)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    JUMPOUT(0x100496D98);
  }
  switch(*((unsigned char *)&off_1008B69E0 + v4 + 32))
  {
    case 1:
      NSString v13 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v7 = [a1 dequeueReusableCellWithReuseIdentifier:v13 forIndexPath:isa];

      type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
      uint64_t v15 = (void *)swift_dynamicCastClass();
      if (v15) {
        id v16 = v7;
      }
      unint64_t v17 = IndexPath.row.getter();
      if ((v17 & 0x8000000000000000) != 0) {
        goto LABEL_29;
      }
      uint64_t v18 = *(void *)(v1
                      + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations);
      if (v17 >= *(void *)(v18 + 16)) {
        goto LABEL_30;
      }
      if (v15)
      {
        uint64_t v19 = v18 + 16 * v17;
        uint64_t v21 = *(void *)(v19 + 32);
        uint64_t v20 = *(void *)(v19 + 40);
        uint64_t v22 = (void *)(v2
                       + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider);
        uint64_t v23 = v2 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_artworkImageLoader;
        uint64_t v24 = *sub_10007E4EC(v22, v22[3]);
        swift_bridgeObjectRetain();
        id v25 = v15;
        sub_100497C3C(v21, v20, v24, v23, (uint64_t)v25);
        swift_bridgeObjectRelease();
      }
      return v7;
    case 2:
      NSString v26 = String._bridgeToObjectiveC()();
      Class v27 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v7 = [a1 dequeueReusableCellWithReuseIdentifier:v26 forIndexPath:v27];

      type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
      id v28 = (void *)swift_dynamicCastClass();
      if (v28) {
        id v29 = v7;
      }
      unint64_t v30 = IndexPath.row.getter();
      if ((v30 & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
      uint64_t v31 = *(void *)(v1
                      + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations);
      if (v30 >= *(void *)(v31 + 16)) {
        goto LABEL_32;
      }
      sub_10008E75C(v31 + 40 * v30 + 32, (uint64_t)v42);
      if (!v28) {
        goto LABEL_26;
      }
      uint64_t v32 = *sub_10007E4EC((void *)(v1+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider), *(void *)(v1+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider+ 24));
      unint64_t v33 = v28;
      sub_1006A1F88(v42, v32, v33);
      break;
    case 3:
      NSString v34 = String._bridgeToObjectiveC()();
      Class v35 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v7 = [a1 dequeueReusableCellWithReuseIdentifier:v34 forIndexPath:v35];

      type metadata accessor for AppStoreAppRecommendationCollectionViewCell();
      uint64_t v36 = (void *)swift_dynamicCastClass();
      if (v36) {
        id v37 = v7;
      }
      unint64_t v38 = IndexPath.row.getter();
      if ((v38 & 0x8000000000000000) != 0) {
        goto LABEL_33;
      }
      uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations);
      if (v38 >= *(void *)(v39 + 16)) {
        goto LABEL_34;
      }
      sub_10008E75C(v39 + 40 * v38 + 32, (uint64_t)v42);
      if (!v36) {
        goto LABEL_26;
      }
      uint64_t v40 = *sub_10007E4EC((void *)(v1+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider), *(void *)(v1+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider+ 24));
      unint64_t v33 = v36;
      sub_100497E50(v42, v40, v33);
      break;
    default:
      NSString v5 = String._bridgeToObjectiveC()();
      Class v6 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v7 = [a1 dequeueReusableCellWithReuseIdentifier:v5 forIndexPath:v6];

      type metadata accessor for WalkSuggestionCollectionViewCell();
      uint64_t v8 = (void *)swift_dynamicCastClass();
      if (v8)
      {
        char v9 = *(unsigned char *)(v2
                      + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk
                      + 8);
        id v10 = v7;
        if ((v9 & 1) == 0)
        {
          id v11 = v8;
          sub_10044FD30();
        }
      }
      uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell);
      *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell) = v8;

      return v7;
  }

LABEL_26:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v42);
  return v7;
}

uint64_t sub_100496FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  sub_1000AFA94(&qword_10095DDF8);
  v5[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MetricClickStreamOccurred();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[14] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[15] = v8;
  v5[16] = v7;
  return _swift_task_switch(sub_100497120, v8, v7);
}

uint64_t sub_100497120()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[18] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100497258;
    uint64_t v4 = v0[9];
    uint64_t v3 = v0[10];
    return sub_10039B4A0(v3, v4);
  }
  else
  {
    swift_release();
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[10], 1, 1, v0[11]);
    sub_100498DA8(v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100497258()
{
  uint64_t v3 = *v1;
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void **)(v2 + 136);
  if (v0)
  {
    swift_errorRelease();

    uint64_t v5 = *(void *)(v3 + 120);
    uint64_t v6 = *(void *)(v3 + 128);
    uint64_t v7 = sub_100497524;
  }
  else
  {

    uint64_t v5 = *(void *)(v3 + 120);
    uint64_t v6 = *(void *)(v3 + 128);
    uint64_t v7 = sub_100497394;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100497394()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100498DA8(v0[10]);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[10], v0[11]);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      id v6 = objc_retain(*(id *)(Strong
                             + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_fitnessAppContext));

      swift_unknownObjectRetain();
      swift_getObjectType();
      sub_100498E08();
      dispatch thunk of EventHubProtocol.publish<A>(_:)();
      swift_unknownObjectRelease();
    }
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100497524()
{
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[10], 1, 1, v0[11]);
  sub_100498DA8(v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1004975C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    uint64_t v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v5 = v3;
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)id v6 = 136315138;
      swift_errorRetain();
      sub_1000AFA94(&qword_10095C080);
      uint64_t v7 = String.init<A>(describing:)();
      sub_10008F1F4(v7, v8, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v4, "[AddToYourRingSuggestion] Failed to load AppStore page: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
}

uint64_t sub_100497AB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = type metadata accessor for AppRecommendationDataProvider();
  v17[4] = &off_1008CFB48;
  v17[0] = a2;
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_10008E75C((uint64_t)v17, (uint64_t)v16);
  sub_10008E75C(a1, (uint64_t)v15);
  type metadata accessor for MainActor();
  swift_retain();
  id v10 = a3;
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  sub_100093E60(v16, (uint64_t)(v12 + 5));
  sub_100093E60(v15, (uint64_t)(v12 + 10));
  sub_1000713D0((uint64_t)v8, (uint64_t)&unk_10095DE10, (uint64_t)v12);
  swift_release();
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
}

uint64_t sub_100497C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
  v23[4] = &off_1008B9478;
  v23[3] = v13;
  v23[0] = a3;
  uint64_t v14 = (void *)(a5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation);
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10008E75C((uint64_t)v23, (uint64_t)v22);
  sub_10008E75C(a4, (uint64_t)v21);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  sub_100093E60(v22, (uint64_t)(v18 + 4));
  v18[9] = a1;
  v18[10] = a2;
  v18[11] = v16;
  sub_100093E60(v21, (uint64_t)(v18 + 12));
  swift_release();
  *(void *)(a5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask) = sub_10005810C((uint64_t)v12, (uint64_t)&unk_10095DE08, (uint64_t)v18);
  swift_release();
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v23);
}

uint64_t sub_100497E50(void *a1, uint64_t a2, char *a3)
{
  uint64_t v18 = type metadata accessor for AppRecommendationDataProvider();
  uint64_t v19 = &off_1008CFB48;
  v17[0] = a2;
  uint64_t v6 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp43AppStoreAppRecommendationCollectionViewCell_titleLabel];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_10007E4EC(a1, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  v9(v7, v8);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v10];

  uint64_t v11 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp43AppStoreAppRecommendationCollectionViewCell_subtitleLabel];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_10007E4EC(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v14];

  uint64_t v15 = sub_10007E4EC(v17, v18);
  sub_100497AB8((uint64_t)a1, *v15, a3);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
}

uint64_t sub_100497FB8(unint64_t a1)
{
  if (a1 > 3)
  {
    __break(1u);
    JUMPOUT(0x100498044);
  }
  switch(*((unsigned char *)&off_1008B69B8 + a1 + 32))
  {
    case 1:
      uint64_t v3 = &OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations;
      goto LABEL_7;
    case 2:
      uint64_t v3 = &OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations;
      goto LABEL_7;
    case 3:
      uint64_t v3 = &OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations;
LABEL_7:
      uint64_t result = *(void *)(*(void *)(v1 + *v3) + 16);
      break;
    default:
      uint64_t result = ~*(unsigned __int8 *)(v1
                                   + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk
                                   + 8) & 1;
      break;
  }
  return result;
}

id sub_100498054(void *a1)
{
  id result = (id)IndexPath.section.getter();
  if ((unint64_t)result > 3)
  {
    __break(1u);
  }
  else
  {
    if (*((unsigned __int8 *)&off_1008B6A08 + (void)result + 32) - 2 < 2)
    {
      uint64_t v3 = UICollectionElementKindSectionHeader;
      NSString v4 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v6 = [a1 dequeueReusableSupplementaryViewOfKind:v3 withReuseIdentifier:v4 forIndexPath:isa];

      type metadata accessor for AddToYourRingSectionHeaderView();
      uint64_t v7 = swift_dynamicCastClass();
      if (v7) {
        goto LABEL_10;
      }
      return v6;
    }
    if (*((unsigned char *)&off_1008B6A08 + (void)result + 32))
    {
      uint64_t v9 = UICollectionElementKindSectionHeader;
      NSString v10 = String._bridgeToObjectiveC()();
      Class v11 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v6 = [a1 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v10 forIndexPath:v11];

      type metadata accessor for AddToYourRingSectionHeaderView();
      uint64_t v7 = swift_dynamicCastClass();
      if (v7)
      {
LABEL_10:
        uint64_t v12 = (char *)v7;
        uint64_t v13 = self;
        id v6 = v6;
        id v14 = [v13 mainBundle];
        NSString v15 = String._bridgeToObjectiveC()();
        id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = *(void **)&v12[OBJC_IVAR____TtC10FitnessApp30AddToYourRingSectionHeaderView_titleLabel];
        NSString v18 = String._bridgeToObjectiveC()();
        [v17 setText:v18];

        id v19 = sub_10021495C();
        [v12 frame];
        [v17 sizeThatFits:v20, v21];
        [v19 setConstant:v22];
        swift_bridgeObjectRelease();
      }
      return v6;
    }
    id v8 = objc_allocWithZone((Class)UICollectionReusableView);
    return [v8 init];
  }
  return result;
}

id sub_1004983B8(void *a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v6 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v9 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          id v12 = objc_allocWithZone((Class)UICollectionReusableView);
          return [v12 init];
        }
      }
      id v14 = UICollectionElementKindSectionFooter;
      NSString v15 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v17 = [a1 dequeueReusableSupplementaryViewOfKind:v14 withReuseIdentifier:v15 forIndexPath:isa];

      return v17;
    }
  }

  return sub_100498054(a1);
}

unint64_t sub_100498554(uint64_t a1)
{
  os_log_type_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = IndexPath.section.getter();
  if (result > 3)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    JUMPOUT(0x100498B90);
  }
  switch(*((unsigned char *)&off_1008B6A30 + result + 32))
  {
    case 1:
      unint64_t v11 = IndexPath.row.getter();
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_20;
      }
      uint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations];
      if (v11 >= *(void *)(v12 + 16)) {
        goto LABEL_23;
      }
      uint64_t v13 = v12 + 16 * v11;
      uint64_t v14 = *(void *)(v13 + 32);
      uint64_t v15 = *(void *)(v13 + 40);
      uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_fitnessAppContext];
      swift_bridgeObjectRetain();
      sub_1006ACBD8(v14, v15, v16);
      swift_bridgeObjectRelease();
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v19 = static MainActor.shared.getter();
      unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      double v21 = (char *)swift_allocObject();
      *((void *)v21 + 2) = v19;
      *((void *)v21 + 3) = &protocol witness table for MainActor;
      *((void *)v21 + 4) = v18;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v21[v20], (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      swift_release();
      sub_1000713D0((uint64_t)v9, (uint64_t)&unk_10095DDF0, (uint64_t)v21);
      return swift_release();
    case 2:
      unint64_t v22 = IndexPath.row.getter();
      if ((v22 & 0x8000000000000000) != 0) {
        goto LABEL_21;
      }
      uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations];
      if (v22 >= *(void *)(v23 + 16)) {
        goto LABEL_24;
      }
      sub_10008E75C(v23 + 40 * v22 + 32, (uint64_t)aBlock);
      id v24 = [self defaultWorkspace];
      if (!v24) {
        goto LABEL_26;
      }
      id v25 = v24;
      NSString v26 = v49;
      Class v27 = v50;
      sub_10007E4EC(aBlock, (uint64_t)v49);
      (*((void (**)(void *, void))v27 + 3))(v26, v27);
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 openApplicationWithBundleID:v28];

      id v29 = aBlock;
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v29);
    case 3:
      unint64_t v30 = IndexPath.row.getter();
      if ((v30 & 0x8000000000000000) != 0) {
        goto LABEL_22;
      }
      uint64_t v31 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations];
      if (v30 >= *(void *)(v31 + 16)) {
        goto LABEL_25;
      }
      sub_10008E75C(v31 + 40 * v30 + 32, (uint64_t)v52);
      uint64_t v32 = v53;
      uint64_t v33 = v54;
      sub_10007E4EC(v52, v53);
      uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
      if ((v35 & 1) == 0)
      {
        uint64_t v36 = v34;
        os_log_type_t v37 = static os_log_type_t.default.getter();
        unint64_t v38 = (void *)HKLogActivity;
        os_log_type_t v39 = v37;
        if (os_log_type_enabled(HKLogActivity, v37))
        {
          uint64_t v40 = v38;
          id v41 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v41 = 134217984;
          aBlock[0] = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v40, v39, "[AddToYourRingSuggestion] Presenting AppStore page for storeId = %ld", v41, 0xCu);
          swift_slowDealloc();
        }
        id v42 = [objc_allocWithZone((Class)SKStoreProductViewController) init];
        [v42 setShowsStoreButton:0];
        sub_1000AFA94(&qword_10095DDE0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1007509E0;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v44;
        *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:v36];
        unint64_t v45 = sub_1000D9C28(inited);
        sub_1003D8624(v45);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v50 = sub_1004975C0;
        uint64_t v51 = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000D15C;
        uint64_t v49 = &unk_1008CABA8;
        uint64_t v47 = _Block_copy(aBlock);
        [v42 loadProductWithParameters:isa completionBlock:v47];
        _Block_release(v47);

        [v2 presentViewController:v42 animated:1 completion:0];
      }
      id v29 = v52;
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v29);
    default:
      return result;
  }
}

uint64_t sub_100498BA0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100498BD8()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100498CAC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000DBD6C;
  return sub_100496FFC(a1, v5, v6, v7, v8);
}

uint64_t sub_100498DA8(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095DDF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100498E08()
{
  unint64_t result = qword_10095DE00;
  if (!qword_10095DE00)
  {
    type metadata accessor for MetricClickStreamOccurred();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095DE00);
  }
  return result;
}

uint64_t sub_100498E60()
{
  swift_unknownObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 96);

  return swift_deallocObject();
}

uint64_t sub_100498EB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[11];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005DB5C;
  return sub_1006220A8(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, (uint64_t)(v1 + 12));
}

uint64_t sub_100498F98()
{
  swift_unknownObjectRelease();

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 40);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 80);

  return swift_deallocObject();
}

uint64_t sub_100498FE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1004059CC(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

id sub_1004990B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementsDataProvider);
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider);
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  NSString v10 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chFriendManager);
  uint64_t v11 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  uint64_t v12 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache);
  unint64_t v30 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider);
  uint64_t v32 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  uint64_t v33 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  type metadata accessor for ActivitySharingFriendDetailDataProvider();
  swift_allocObject();
  id v29 = v4;
  id v28 = v5;
  swift_retain();
  id v26 = v6;
  id v25 = v7;
  id v13 = v8;
  id v14 = a1;
  id v15 = v9;
  id v16 = v10;
  id v17 = v11;
  swift_retain();
  id v18 = v12;
  id v19 = v30;
  id v20 = v32;
  id v21 = v33;
  unint64_t v22 = sub_1005199B4(v29, v28, a3, v26, v25, v13, v14, v15, v16, v17, a4, v18, v19, v20, v21);
  id v23 = objc_allocWithZone((Class)type metadata accessor for ActivitySharingFriendDetailViewController());
  return sub_1004214A4((uint64_t)v22, v21);
}

id sub_1004992D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDashboardContext();
  return [super dealloc];
}

uint64_t sub_1004995C4()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100499604()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_10049964C(void *a1)
{
  return sub_1004990B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100499658()
{
  return swift_deallocObject();
}

uint64_t sub_100499690@<X0>(uint64_t a1@<X8>)
{
  objc_super v2 = (int *)type metadata accessor for MirrorStatusView();
  unint64_t v3 = (uint64_t *)(a1 + v2[10]);
  uint64_t *v3 = swift_getKeyPath();
  sub_1000AFA94(&qword_10095E008);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = v2[11];
  *(void *)(a1 + v4) = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v5 = v2[12];
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(void *)(a1 + v5) = v6;
  uint64_t v7 = v2[13];
  static LayoutUtilities.layoutMetric(regular42:)();
  *(void *)(a1 + v7) = v8;
  MetricsPublisher.workoutConfigurationType.getter();
  MetricsPublisher.activitySummaryMetricsPublisher.getter();
  uint64_t v9 = (uint64_t *)(a1 + v2[5]);
  type metadata accessor for ActivitySummaryMetricsPublisher();
  sub_10049E014(&qword_10095E010, (void (*)(uint64_t))&type metadata accessor for ActivitySummaryMetricsPublisher);
  *uint64_t v9 = ObservedObject.init(wrappedValue:)();
  v9[1] = v10;
  MetricsPublisher.goalPublisher.getter();
  uint64_t v11 = (uint64_t *)(a1 + v2[6]);
  type metadata accessor for GoalPublisher();
  sub_10049E014(&qword_10095E018, (void (*)(uint64_t))&type metadata accessor for GoalPublisher);
  *uint64_t v11 = ObservedObject.init(wrappedValue:)();
  v11[1] = v12;
  MetricsPublisher.intervalsMetricsPublisher.getter();
  id v13 = (uint64_t *)(a1 + v2[7]);
  type metadata accessor for IntervalsMetricsPublisher();
  sub_10049E014(&qword_10095C408, (void (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher);
  uint64_t *v13 = ObservedObject.init(wrappedValue:)();
  v13[1] = v14;
  MetricsPublisher.racePositionStatePublisher.getter();
  id v15 = (uint64_t *)(a1 + v2[8]);
  type metadata accessor for RacePositionStatePublisher();
  sub_10049E014(&qword_10095E020, (void (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher);
  *id v15 = ObservedObject.init(wrappedValue:)();
  v15[1] = v16;
  MetricsPublisher.workoutStatePublisher.getter();
  id v17 = (uint64_t *)(a1 + v2[9]);
  type metadata accessor for WorkoutStatePublisher();
  sub_10049E014(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
  uint64_t v18 = ObservedObject.init(wrappedValue:)();
  uint64_t v20 = v19;
  uint64_t result = swift_release();
  *id v17 = v18;
  v17[1] = v20;
  return result;
}

uint64_t sub_100499988()
{
  uint64_t v1 = type metadata accessor for WorkoutAnimationStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v15[-v6];
  uint64_t v8 = type metadata accessor for MirrorStatusView();
  __chkstk_darwin(v8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AppStorage.wrappedValue.getter();
  int v11 = v15[15];
  sub_10049D914(v0, (uint64_t)v10);
  if (v11 == 1)
  {
    sub_1004E7A80((uint64_t)v7);
    (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, enum case for WorkoutAnimationStyle.fullSpeed(_:), v1);
    char v12 = static WorkoutAnimationStyle.== infix(_:_:)();
    id v13 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
    v13(v4, v1);
    v13(v7, v1);
  }
  else
  {
    char v12 = 0;
  }
  sub_10049DCC4((uint64_t)v10);
  return v12 & 1;
}

uint64_t sub_100499B60()
{
  uint64_t v0 = type metadata accessor for RacePositionState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MirrorStatusView();
  swift_retain();
  RacePositionStatePublisher.racePositionState.getter();
  swift_release();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for RacePositionState.notYetOnRoute(_:)) {
    goto LABEL_2;
  }
  if (v4 == enum case for RacePositionState.onRouteAhead(_:))
  {
    type metadata accessor for RaceWorkoutConfiguration();
    return static RaceWorkoutConfiguration.aheadColors.getter();
  }
  if (v4 == enum case for RacePositionState.onRouteBehind(_:))
  {
    type metadata accessor for RaceWorkoutConfiguration();
    return static RaceWorkoutConfiguration.behindColors.getter();
  }
  else
  {
    if (v4 == enum case for RacePositionState.offRoute(_:)) {
      goto LABEL_2;
    }
    if (v4 == enum case for RacePositionState.completed(_:) || v4 == enum case for RacePositionState.unknown(_:))
    {
      type metadata accessor for RaceWorkoutConfiguration();
      return static RaceWorkoutConfiguration.colors.getter();
    }
    if (v4 == enum case for RacePositionState.expired(_:))
    {
LABEL_2:
      type metadata accessor for RaceWorkoutConfiguration();
      return static RaceWorkoutConfiguration.expiredColors.getter();
    }
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100499D44()
{
  uint64_t v0 = type metadata accessor for WorkoutConfigurationColors();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ConfigurationType();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, enum case for ConfigurationType.race(_:), v4, v6);
  sub_10049E014(&qword_10095E158, (void (*)(uint64_t))&type metadata accessor for ConfigurationType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v10 = v12[0];
  uint64_t v9 = v12[1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v9 == v10)
  {
    sub_100499B60();
    WorkoutConfigurationColors.displayColor.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    type metadata accessor for MirrorStatusView();
    swift_retain();
    GoalPublisher.goal.getter();
    swift_release();
    _HKWorkoutGoalType.color.getter();
  }
  return Color.init(_:)();
}

uint64_t sub_100499F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = type metadata accessor for MirrorStatusView();
  uint64_t v68 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v69 = v4;
  unint64_t v70 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v5 - 8);
  uint64_t v72 = type metadata accessor for WorkoutTimeView();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v81 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_10095E100);
  __chkstk_darwin(v67);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095E108);
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  __chkstk_darwin(v9);
  uint64_t v77 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v66 - v12;
  __chkstk_darwin(v13);
  id v83 = (char *)&v66 - v14;
  uint64_t v15 = sub_1000AFA94(&qword_10095E110);
  __chkstk_darwin(v15);
  id v17 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000AFA94(&qword_10095E118);
  __chkstk_darwin(v18 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v66 - v21;
  __chkstk_darwin(v23);
  uint64_t v84 = (uint64_t)&v66 - v24;
  uint64_t v82 = a1;
  swift_retain();
  id v25 = (void *)WorkoutStatePublisher.activityType.getter();
  swift_release();
  uint64_t v76 = v3;
  if (!v25)
  {
    sub_10040D768();
    id v25 = (void *)static FIUIWorkoutActivityType.outdoorCycle.getter();
  }
  *id v17 = static Alignment.center.getter();
  v17[1] = v26;
  uint64_t v27 = sub_1000AFA94(&qword_10095E120);
  sub_10049A838(v82, v25, (uint64_t *)((char *)v17 + *(int *)(v27 + 44)));
  id v74 = v25;
  id v28 = [v25 localizedName];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  uint64_t v85 = v29;
  uint64_t v86 = v31;
  sub_1000A132C(&qword_10095E128, &qword_10095E110);
  sub_1000A06D0();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v17, &qword_10095E110);
  sub_1000AEEC8((uint64_t)v22, v84, &qword_10095E118);
  swift_retain();
  WorkoutStatePublisher.workoutStartDate.getter();
  swift_release();
  sub_100499988();
  swift_retain();
  WorkoutTimeView.init(startDate:showSubseconds:workoutStatePublisher:)();
  swift_retain();
  LOBYTE(v28) = WorkoutStatePublisher.workoutPaused.getter();
  swift_release();
  if (v28)
  {
    static Color.gray.getter();
    uint64_t v32 = Color.opacity(_:)();
    swift_release();
  }
  else
  {
    _HKWorkoutGoalType.color.getter();
    uint64_t v32 = Color.init(_:)();
  }
  uint64_t v33 = (uint64_t)v70;
  uint64_t v34 = v68;
  uint64_t v35 = v67;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = v71;
  unint64_t v38 = v8;
  uint64_t v39 = (uint64_t)v8;
  uint64_t v40 = v81;
  uint64_t v41 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v38, v81, v72);
  id v42 = (uint64_t *)(v39 + *(int *)(v35 + 36));
  *id v42 = KeyPath;
  v42[1] = v32;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v41);
  uint64_t v43 = v82;
  sub_10049D914(v82, v33);
  unint64_t v44 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v45 = swift_allocObject();
  sub_10049DB30(v33, v45 + v44);
  sub_10049DBF4();
  uint64_t v46 = v73;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v39, &qword_10095E100);
  uint64_t v48 = v78;
  uint64_t v47 = v79;
  uint64_t v49 = v83;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v83, v46, v79);
  uint64_t v50 = v76;
  swift_retain();
  uint64_t v81 = (char *)ActivitySummaryMetricsPublisher.activitySummary.getter();
  swift_release();
  uint64_t v51 = *(void *)(v43 + *(int *)(v50 + 48));
  swift_retain();
  LOBYTE(v50) = ActivitySummaryMetricsPublisher.isWheelchairUser.getter();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v82 = v85;
  LODWORD(v76) = v86;
  uint64_t v73 = v87;
  LODWORD(v72) = v88;
  uint64_t v71 = v89;
  unint64_t v70 = v90;
  uint64_t v52 = v75;
  sub_1000AEF2C(v84, v75, &qword_10095E118);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v54 = v77;
  v53(v77, v49, v47);
  LOBYTE(v49) = v50 & 1;
  uint64_t v55 = v80;
  sub_1000AEF2C(v52, v80, &qword_10095E118);
  uint64_t v56 = (int *)sub_1000AFA94(&qword_10095E140);
  uint64_t v57 = v55 + v56[12];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  v53((char *)(v55 + v56[16]), v54, v47);
  uint64_t v58 = v55 + v56[20];
  *(void *)uint64_t v58 = 0;
  *(unsigned char *)(v58 + 8) = 1;
  uint64_t v59 = v55 + v56[24];
  unint64_t v60 = v81;
  uint64_t v61 = v81;

  *(void *)uint64_t v59 = v60;
  *(void *)(v59 + 8) = v51;
  *(_WORD *)(v59 + 16) = 0;
  *(unsigned char *)(v59 + 18) = (_BYTE)v49;
  uint64_t v62 = v83;
  *(void *)(v59 + 24) = v82;
  *(unsigned char *)(v59 + 32) = v76;
  *(void *)(v59 + 40) = v73;
  *(unsigned char *)(v59 + 48) = v72;
  uint64_t v63 = v70;
  *(void *)(v59 + 56) = v71;
  *(void *)(v59 + 64) = v63;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v48 + 8);
  v64(v62, v47);
  sub_10008DB18(v84, &qword_10095E118);

  v64(v54, v47);
  return sub_10008DB18(v52, &qword_10095E118);
}

void sub_10049A838(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  id v87 = a2;
  uint64_t v89 = a3;
  uint64_t v4 = sub_1000AFA94(&qword_10095E148);
  __chkstk_darwin(v4 - 8);
  uint64_t v86 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_10095E150);
  __chkstk_darwin(v85);
  uint64_t v88 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v90 = (uint64_t)&v77 - v8;
  uint64_t v92 = type metadata accessor for MirrorStatusView();
  __chkstk_darwin(v92);
  *(void *)&long long v80 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for WorkoutConfigurationColors();
  uint64_t v84 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  id v83 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v77 - v12;
  uint64_t v14 = type metadata accessor for ConfigurationType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  *(void *)&long long v79 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v77 - v19;
  *(void *)&long long v82 = *(void *)(v15 + 104);
  ((void (*)(char *, void, uint64_t, __n128))v82)((char *)&v77 - v19, enum case for ConfigurationType.race(_:), v14, v18);
  sub_10049E014(&qword_10095E158, (void (*)(uint64_t))&type metadata accessor for ConfigurationType);
  uint64_t v21 = a1;
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v22 = v105;
  uint64_t v23 = v93;
  uint64_t v78 = v15;
  *(void *)&long long v81 = *(void *)(v15 + 8);
  ((void (*)(char *, uint64_t))v81)(v20, v14);
  if (v22 == v23)
  {
    uint64_t v24 = v21;
    sub_100499B60();
    id v25 = (void *)WorkoutConfigurationColors.gradientStartingColor.getter();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v27 = v91;
    v26(v13, v91);
    id v28 = v83;
    sub_100499B60();
    uint64_t v29 = (void *)WorkoutConfigurationColors.gradientEndingColor.getter();
    v26(v28, v27);
    id v30 = (id)FIUICircularGradientImage();

    if (v30)
    {
      *(void *)&long long v93 = Image.init(uiImage:)();
      BYTE8(v93) = 0;
LABEL_7:
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      *(void *)&long long v93 = v105;
      *((void *)&v93 + 1) = BYTE8(v105);
      long long v94 = 0u;
      long long v95 = 0u;
      long long v96 = 0u;
      long long v97 = 0u;
      __int16 v98 = 0;
      sub_1000AFA94(&qword_10095E188);
      sub_1000AFA94(&qword_10095E190);
      sub_10049DDF0(&qword_10095E198, &qword_10095E188);
      sub_10049DE58();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      long long v81 = *(_OWORD *)v107;
      long long v82 = *(_OWORD *)&v107[16];
      long long v80 = v106;
      long long v42 = v105;
LABEL_8:
      long long v79 = v42;
      uint64_t v91 = *((void *)&v108 + 1);
      uint64_t v92 = v108;
      LODWORD(v84) = v109;
      LODWORD(v83) = v110;
      uint64_t v43 = v86;
      sub_10049B518(v24, v87, v86);
      uint64_t v44 = sub_100499D44();
      uint64_t v45 = v88;
      sub_1000AEF2C(v43, v88, &qword_10095E148);
      *(void *)(v45 + *(int *)(v85 + 36)) = v44;
      sub_10008DB18(v43, &qword_10095E148);
      uint64_t v46 = v90;
      sub_1000AEEC8(v45, v90, &qword_10095E150);
      sub_1000AEF2C(v46, v45, &qword_10095E150);
      long long v47 = v80;
      uint64_t v48 = (void *)*((void *)&v79 + 1);
      uint64_t v49 = v79;
      uint64_t v50 = v80;
      uint64_t v77 = v80;
      uint64_t v78 = v79;
      uint64_t v51 = v89;
      *uint64_t v89 = v79;
      v51[1] = v47;
      uint64_t v86 = *((void *)&v47 + 1);
      id v87 = v48;
      long long v52 = v82;
      *(void *)&long long v80 = *((void *)&v81 + 1);
      uint64_t v85 = v81;
      *(void *)&long long v79 = v82;
      v51[2] = v81;
      v51[3] = v52;
      uint64_t v53 = *((void *)&v52 + 1);
      uint64_t v54 = v91;
      uint64_t v55 = v92;
      *((void *)v51 + 8) = v92;
      *((void *)v51 + 9) = v54;
      uint64_t v91 = v54;
      uint64_t v92 = v55;
      char v56 = v84;
      *((unsigned char *)v51 + 80) = v84;
      char v57 = (char)v83;
      *((unsigned char *)v51 + 81) = (_BYTE)v83;
      uint64_t v58 = sub_1000AFA94(&qword_10095E1A8);
      sub_1000AEF2C(v45, (uint64_t)v51 + *(int *)(v58 + 48), &qword_10095E150);
      uint64_t v75 = v55;
      uint64_t v76 = v54;
      uint64_t v59 = v49;
      uint64_t v61 = v86;
      uint64_t v60 = (uint64_t)v87;
      uint64_t v62 = v50;
      uint64_t v63 = v85;
      uint64_t v64 = v80;
      uint64_t v65 = v79;
      sub_10049DF00(v59, (uint64_t)v87, v62, v86, v85, v80, v79, v53, v75, v76, v56, v57);
      sub_10008DB18(v90, &qword_10095E150);
      sub_10008DB18(v45, &qword_10095E150);
      sub_10049DF34(v78, v60, v77, v61, v63, v64, v65, v53, v92, v91, v56, v57);
      return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  ((void (*)(char *, void, uint64_t))v82)(v20, enum case for ConfigurationType.pacer(_:), v14);
  uint64_t v31 = v21;
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v32 = v105;
  uint64_t v33 = v93;
  uint64_t v34 = (void (*)(uint64_t, uint64_t))v81;
  ((void (*)(char *, uint64_t))v81)(v20, v14);
  if (v32 == v33)
  {
    type metadata accessor for PacerWorkoutConfiguration();
    static PacerWorkoutConfiguration.colors.getter();
    uint64_t v35 = (void *)WorkoutConfigurationColors.gradientStartingColor.getter();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v37 = v13;
    uint64_t v38 = v91;
    v36(v37, v91);
    uint64_t v39 = v83;
    static PacerWorkoutConfiguration.colors.getter();
    uint64_t v40 = (void *)WorkoutConfigurationColors.gradientEndingColor.getter();
    v36(v39, v38);
    id v41 = (id)FIUICircularGradientImage();

    if (v41)
    {
      uint64_t v24 = v31;
      *(void *)&long long v93 = Image.init(uiImage:)();
      BYTE8(v93) = 1;
      goto LABEL_7;
    }
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v20, v31, v14);
  uint64_t v66 = v79;
  ((void (*)(void, void, uint64_t))v82)(v79, enum case for ConfigurationType.interval(_:), v14);
  sub_10049E014((unint64_t *)&qword_10095BDB0, (void (*)(uint64_t))&type metadata accessor for ConfigurationType);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
  v34(v66, v14);
  v34((uint64_t)v20, v14);
  uint64_t v68 = v80;
  sub_10049D914(v31, v80);
  uint64_t v24 = v31;
  if (v67)
  {
    sub_10049DCC4(v68);
  }
  else
  {
    uint64_t v69 = v92;
    swift_retain();
    uint64_t v70 = GoalPublisher.goal.getter();
    swift_release();
    sub_10049DCC4(v68);
    if (v70)
    {
      swift_retain();
      uint64_t v71 = GoalPublisher.goal.getter();
      swift_release();
      uint64_t v72 = *(void *)(v31 + *(int *)(v69 + 48));
      swift_retain();
      unsigned int v73 = GoalPublisher.progress.getter();
      swift_release();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      *(void *)&long long v105 = v71;
      *((void *)&v105 + 1) = v72;
      *(void *)&long long v106 = 1084227584;
      *((double *)&v106 + 1) = (double)v73 / 100.0;
      *(void *)uint64_t v107 = v111;
      *(void *)&v107[8] = v112;
      *(void *)&v107[16] = v113;
      *(void *)&v107[24] = v114;
      long long v108 = v115;
      unsigned __int8 v109 = 0;
      sub_1000AFA94(&qword_10095E160);
      sub_1000AFA94(&qword_10095E168);
      sub_10049DD20();
      sub_10049DDF0((unint64_t *)&qword_10095E180, &qword_10095E168);
      _ConditionalContent<>.init(storage:)();
      long long v93 = v99;
      long long v94 = v100;
      long long v95 = v101;
      long long v96 = v102;
      long long v97 = v103;
      LOBYTE(v98) = v104;
      HIBYTE(v98) = 1;
      sub_1000AFA94(&qword_10095E188);
      sub_1000AFA94(&qword_10095E190);
      sub_10049DDF0(&qword_10095E198, &qword_10095E188);
      sub_10049DE58();
      _ConditionalContent<>.init(storage:)();
      long long v81 = *(_OWORD *)v107;
      long long v82 = *(_OWORD *)&v107[16];
      long long v80 = v106;
      long long v42 = v105;
      goto LABEL_8;
    }
  }
  swift_retain();
  GoalPublisher.goal.getter();
  swift_release();
  if ((id)FIUICircularWorkoutGradientImageWithGoal())
  {
    uint64_t v74 = Image.init(uiImage:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(void *)&long long v105 = v74;
    *((void *)&v105 + 1) = v111;
    *(void *)&long long v106 = v112;
    *((void *)&v106 + 1) = v113;
    *(_OWORD *)&v107[8] = v115;
    *(void *)uint64_t v107 = v114;
    *(void *)&v107[24] = 0;
    long long v108 = 0uLL;
    unsigned __int8 v109 = 1;
    swift_retain();
    sub_1000AFA94(&qword_10095E160);
    sub_1000AFA94(&qword_10095E168);
    sub_10049DD20();
    sub_10049DDF0((unint64_t *)&qword_10095E180, &qword_10095E168);
    _ConditionalContent<>.init(storage:)();
    long long v93 = v99;
    long long v94 = v100;
    long long v95 = v101;
    long long v96 = v102;
    long long v97 = v103;
    LOBYTE(v98) = v104;
    HIBYTE(v98) = 1;
    sub_1000AFA94(&qword_10095E188);
    sub_1000AFA94(&qword_10095E190);
    sub_10049DDF0(&qword_10095E198, &qword_10095E188);
    sub_10049DE58();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    long long v81 = *(_OWORD *)v107;
    long long v82 = *(_OWORD *)&v107[16];
    long long v80 = v106;
    long long v42 = v105;
    goto LABEL_8;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_10049B518@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v41 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = type metadata accessor for MirrorStatusView();
  __chkstk_darwin(v50);
  uint64_t v44 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for AnimatedWorkoutGlyph();
  uint64_t v46 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_10095E1B0);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v38 - v9;
  uint64_t v47 = sub_1000AFA94(&qword_10095E1B8);
  __chkstk_darwin(v47);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StepType();
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000AFA94(&qword_10095E1C0);
  uint64_t v40 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ConfigurationType();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v18 + 104))(v21, enum case for ConfigurationType.interval(_:), v17, v19);
  sub_10049E014(&qword_10095E158, (void (*)(uint64_t))&type metadata accessor for ConfigurationType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v23 = v52;
  uint64_t v22 = v53;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if (v22 == v23 && (swift_retain(), uint64_t v24 = IntervalsMetricsPublisher.intervalThisStep.getter(), swift_release(), v24))
  {
    WorkoutStep.stepType.getter();
    StepType.scaleableImage.getter();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
    Image.init(uiImage:)();
    Image.scaledToFit(size:)();
    swift_release();
    uint64_t v25 = v40;
    uint64_t v26 = v51;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v11, v16, v51);
    swift_storeEnumTagMultiPayload();
    swift_getOpaqueTypeConformance2();
    sub_10049DF68();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  }
  else
  {
    char v28 = sub_100499988();
    uint64_t v29 = a1;
    uint64_t v30 = v44;
    sub_10049D914(v29, v44);
    if (v28)
    {
      swift_retain();
      WorkoutStatePublisher.workoutPaused.getter();
      swift_release();
    }
    uint64_t v31 = v48;
    uint64_t v33 = v42;
    uint64_t v32 = (uint64_t)v43;
    uint64_t v34 = v41;
    sub_10049DCC4(v30);
    id v35 = v34;
    uint64_t v36 = v45;
    AnimatedWorkoutGlyph.init(activityType:iconSize:animated:)();
    uint64_t v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v7, v36, v33);
    v7[*(int *)(v31 + 36)] = 1;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v33);
    sub_1000AEEC8((uint64_t)v7, v32, &qword_10095E1B0);
    sub_1000AEF2C(v32, (uint64_t)v11, &qword_10095E1B0);
    swift_storeEnumTagMultiPayload();
    swift_getOpaqueTypeConformance2();
    sub_10049DF68();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v32, &qword_10095E1B0);
  }
}

uint64_t sub_10049BB78()
{
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v0 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WorkoutAnimationStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - v8;
  type metadata accessor for MirrorStatusView();
  sub_1004E7A80((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for WorkoutAnimationStyle.fullSpeed(_:), v3);
  char v10 = static WorkoutAnimationStyle.== infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  if (v10)
  {
    AppStorage.wrappedValue.getter();
    BOOL v17 = (v18 & 1) == 0;
    return AppStorage.wrappedValue.setter();
  }
  else
  {
    static WOLog.app.getter();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Ignoring double-tap during low power mode", v15, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v16);
  }
}

uint64_t sub_10049BE28()
{
  uint64_t v1 = type metadata accessor for WorkoutViewStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095E0E8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v8 = sub_1000AFA94(&qword_10095E0F0);
  sub_100499F98(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for WorkoutViewStyle.iOSStatusBar(_:), v1);
  sub_1000A132C(&qword_10095E0F8, &qword_10095E0E8);
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v7, &qword_10095E0E8);
}

void sub_10049BFE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView);
    id v3 = v2;

    if (v2)
    {
      id v4 = [v3 ringGroup];

      swift_beginAccess();
      uint64_t v5 = (char *)swift_unknownObjectWeakLoadStrong();
      if (v5)
      {
        double v6 = *(double *)&v5[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage];

        *(float *)&double v7 = v6;
      }
      else
      {
        double v7 = 0.0;
      }
      [v4 setPercentage:0 ofRingAtIndex:0 animated:v7];
    }
  }
}

void sub_10049C0D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView];
  if (v3) {
    [v3 removeFromSuperview];
  }
  id v4 = [objc_allocWithZone((Class)ARUIRingGroup) initWithNumberOfRings:1];
  [v4 setPercentage:0 ofRingAtIndex:0 animated:0.0];
  id v5 = [objc_allocWithZone((Class)ARUIRingsView) initWithRingGroup:v4];
  double v6 = self;
  id v7 = v5;
  id v8 = [v6 blackColor];
  [v7 setBackgroundColor:v8];

  *(float *)&double v9 = *(float *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_diameter] + -1.0;
  [v4 setGroupDiameter:v9];
  LODWORD(v10) = *(_DWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_thickness];
  [v4 setThickness:v10];
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType;
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType];
  uint64_t v13 = self;
  id v14 = [v13 metricColorsForGoalTypeIdentifier:v12];
  id v15 = [v14 gradientDarkColor];

  if (!v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v16 = [v13 metricColorsForGoalTypeIdentifier:*(void *)&v1[v11]];
  id v17 = [v16 gradientLightColor];

  if (!v17)
  {
LABEL_9:
    __break(1u);
    return;
  }
  [v4 setTopColor:v15 bottomColor:v17 ofRingAtIndex:0];

  id v18 = [v7 ringGroup];
  LODWORD(v19) = 1045220557;
  [v18 setEmptyOpacity:v19];

  double v20 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage];
  *(float *)&double v20 = v20;
  [v4 setPercentage:0 ofRingAtIndex:0 animated:v20];
  [v1 addSubview:v7];
  id v21 = [v7 leadingAnchor];
  id v22 = [v1 leadingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  [v23 setActive:1];
  id v24 = [v7 trailingAnchor];
  id v25 = [v1 trailingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  [v26 setActive:1];
  id v27 = [v7 topAnchor];
  id v28 = [v1 topAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  [v29 setActive:1];
  id v30 = [v7 bottomAnchor];
  id v31 = [v1 bottomAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  [v32 setActive:1];
  id v33 = *(id *)&v1[v2];
  *(void *)&v1[v2] = v7;
}

id sub_10049C5F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ARUIRingsViewWrapper();
  return [super dealloc];
}

uint64_t type metadata accessor for ARUIRingsViewWrapper()
{
  return self;
}

uint64_t type metadata accessor for MirrorStatusView()
{
  uint64_t result = qword_10095E088;
  if (!qword_10095E088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_10049C6AC(double a1, float a2, double a3, uint64_t a4, uint64_t a5)
{
  double v9 = (objc_class *)type metadata accessor for ARUIRingsViewWrapper();
  double v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType] = a5;
  float v12 = a1;
  *(float *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_diameter] = v12;
  *(float *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_thickness] = a2;
  *(double *)&v10[v11] = a3;
  v15.receiver = v10;
  v15.super_class = v9;
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10049C0D8();

  return v13;
}

void sub_10049C778(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType);
  *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType) = a6;
  if (v8 != a6) {
    sub_10049C0D8();
  }
  *(double *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage) = a4;
  double v9 = self;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12[4] = sub_10049E17C;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100070394;
  v12[3] = &unk_1008CAE10;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [v9 animateWithDuration:v11 animations:4 curve:0 completion:1.0];
  _Block_release(v11);
}

id sub_10049C8A4(uint64_t a1)
{
  return sub_10049C6AC(*(double *)(v1 + 8), *(float *)(v1 + 16), *(double *)(v1 + 24), a1, *(void *)v1);
}

void sub_10049C8B8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  sub_10049C778(a1, a3, a4, *(double *)(v4 + 24), a2, *(void *)v4);
}

uint64_t sub_10049C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10049E0F0();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10049C928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10049E0F0();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10049C98C()
{
}

uint64_t sub_10049C9B4()
{
  return EnvironmentValues.workoutAnimationStyle.getter();
}

uint64_t sub_10049C9D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutAnimationStyle();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.workoutAnimationStyle.setter();
}

uint64_t *sub_10049CAA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConfigurationType();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (uint64_t *)((char *)a1 + v9);
    id v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    id v18 = (uint64_t *)((char *)a1 + v16);
    double v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *id v18 = *v19;
    v18[1] = v20;
    id v21 = (uint64_t *)((char *)a1 + v17);
    id v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    id v26 = (uint64_t *)((char *)a1 + v24);
    id v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *id v26 = *v27;
    v26[1] = v28;
    id v29 = (uint64_t *)((char *)a1 + v25);
    id v30 = (uint64_t *)((char *)a2 + v25);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000AFA94(&qword_10095E008);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for WorkoutAnimationStyle();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      void *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_10049CCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  sub_1000AFA94(&qword_10095E008);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for WorkoutAnimationStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10049CDE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  id v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  id v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v23);
  id v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)(a1 + v24);
  id v29 = (void *)(a2 + v24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_10095E008);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WorkoutAnimationStyle();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *uint64_t v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  return a1;
}

uint64_t sub_10049CF98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_retain();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  id v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_retain();
  swift_release();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v22 = a3[10];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_10008DB18(a1 + v22, &qword_10095E008);
    sub_1000AFA94(&qword_10095E008);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = type metadata accessor for WorkoutAnimationStyle();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_10049D1C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_1000AFA94(&qword_10095E008);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for WorkoutAnimationStyle();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_10049D330(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_release();
  uint64_t v17 = a3[7];
  id v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *id v18 = v21;
  v18[1] = v20;
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_release();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  id v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v32 = a3[10];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (const void *)(a2 + v32);
    sub_10008DB18(a1 + v32, &qword_10095E008);
    uint64_t v35 = sub_1000AFA94(&qword_10095E008);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WorkoutAnimationStyle();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v37 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  return a1;
}

uint64_t sub_10049D514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10049D528);
}

uint64_t sub_10049D528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfigurationType();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_10095E028);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10049D65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10049D670);
}

uint64_t sub_10049D670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ConfigurationType();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_10095E028);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10049D7A4()
{
  type metadata accessor for ConfigurationType();
  if (v0 <= 0x3F)
  {
    sub_10049D898();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10049D898()
{
  if (!qword_10095E098)
  {
    type metadata accessor for WorkoutAnimationStyle();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095E098);
    }
  }
}

uint64_t sub_10049D8F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10049D914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049D978()
{
  uint64_t v1 = type metadata accessor for MirrorStatusView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v3 = type metadata accessor for ConfigurationType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v2 + *(int *)(v1 + 40);
  sub_1000AFA94(&qword_10095E008);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for WorkoutAnimationStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10049DB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049DB94()
{
  type metadata accessor for MirrorStatusView();

  return sub_10049BB78();
}

unint64_t sub_10049DBF4()
{
  unint64_t result = qword_10095E130;
  if (!qword_10095E130)
  {
    sub_1000A1370(&qword_10095E100);
    sub_10049E014(&qword_10095E138, (void (*)(uint64_t))&type metadata accessor for WorkoutTimeView);
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E130);
  }
  return result;
}

uint64_t sub_10049DCC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MirrorStatusView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10049DD20()
{
  unint64_t result = qword_10095E170;
  if (!qword_10095E170)
  {
    sub_1000A1370(&qword_10095E160);
    sub_10049DD9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E170);
  }
  return result;
}

unint64_t sub_10049DD9C()
{
  unint64_t result = qword_10095E178;
  if (!qword_10095E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E178);
  }
  return result;
}

uint64_t sub_10049DDF0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10049DE58()
{
  unint64_t result = qword_10095E1A0;
  if (!qword_10095E1A0)
  {
    sub_1000A1370(&qword_10095E190);
    sub_10049DD20();
    sub_10049DDF0((unint64_t *)&qword_10095E180, &qword_10095E168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E1A0);
  }
  return result;
}

uint64_t sub_10049DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12) {
    return sub_10049DF24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_10049DF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10049DF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12) {
    return sub_10049DF58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_10049DF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11) {
    return swift_release();
  }
  return result;
}

unint64_t sub_10049DF68()
{
  unint64_t result = qword_10095E1C8;
  if (!qword_10095E1C8)
  {
    sub_1000A1370(&qword_10095E1B0);
    sub_10049E014(&qword_10095E1D0, (void (*)(uint64_t))&type metadata accessor for AnimatedWorkoutGlyph);
    sub_1000E16C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E1C8);
  }
  return result;
}

uint64_t sub_10049E014(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalRingView()
{
  return &type metadata for GoalRingView;
}

uint64_t sub_10049E06C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10049E0F0()
{
  unint64_t result = qword_10095E1E0;
  if (!qword_10095E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E1E0);
  }
  return result;
}

uint64_t sub_10049E144()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10049E17C()
{
}

id sub_10049E184()
{
  id v0 = sub_10005DB50();

  return v0;
}

double sub_10049E1B0()
{
  return 12.0;
}

uint64_t sub_10049E1C4()
{
  uint64_t result = static MoveModeNotificationConstants.nextMoveModeUserInfoKey.getter();
  qword_100998098 = result;
  unk_1009980A0 = v1;
  return result;
}

uint64_t sub_10049E210()
{
  uint64_t result = static MoveModeNotificationConstants.notificationTypeUserInfoKey.getter();
  qword_1009980A8 = result;
  *(void *)algn_1009980B0 = v1;
  return result;
}

id sub_10049E29C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessCoachingMoveModeNotificationConstantsBridging();
  [super dealloc];
}

uint64_t type metadata accessor for FitnessCoachingMoveModeNotificationConstantsBridging()
{
  return self;
}

void *initializeWithCopy for MirrorIntervalsSecondPlatterView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v7 = (void *)a2[6];
  uint64_t v6 = a2[7];
  a1[6] = v7;
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v5;
  id v9 = v7;
  return a1;
}

void *assignWithCopy for MirrorIntervalsSecondPlatterView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[6];
  id v8 = (void *)a1[6];
  a1[6] = v7;
  id v9 = v7;

  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for MirrorIntervalsSecondPlatterView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  id v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorIntervalsSecondPlatterView()
{
  return &type metadata for MirrorIntervalsSecondPlatterView;
}

uint64_t sub_10049E4B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10049E4CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  long long v11 = *(_OWORD *)(v1 + 8);
  swift_retain();
  uint64_t v4 = IntervalsMetricsPublisher.intervalThisStep.getter();
  sub_1000E2384((uint64_t)&v11);
  if (v4)
  {
    uint64_t v5 = (void *)WorkoutStep.goal.getter();
    id v6 = [v5 goalTypeIdentifier:v11];

    id v7 = [self metricColorsForGoalTypeIdentifier:v6];
    *a1 = 1;
    uint64_t v8 = sub_1000AFA94(&qword_10095E210);
    sub_10049E624(v2, v7, v4, (uint64_t)&a1[*(int *)(v8 + 44)]);
    swift_release();

    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    uint64_t v10 = sub_1000AFA94(&qword_10095E210);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

id sub_10049E624@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v87 = a3;
  uint64_t v94 = a4;
  uint64_t v90 = sub_1000AFA94(&qword_10095E218);
  __chkstk_darwin(v90);
  uint64_t v88 = (uint64_t *)((char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = (void *)sub_1000AFA94(&qword_10095E220);
  uint64_t v91 = *(v92 - 1);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095E228);
  uint64_t v93 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v80 - v12;
  uint64_t v86 = sub_1000AFA94(&qword_10095E230);
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t *)((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000AFA94(&qword_10095E238);
  uint64_t v106 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v105 = (char *)&v80 - v19;
  __int16 v98 = (void *)type metadata accessor for WorkoutViewStyle();
  uint64_t v84 = *(v98 - 1);
  __chkstk_darwin(v98);
  uint64_t v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_10095C400);
  uint64_t v103 = *(void *)(v22 - 8);
  uint64_t v104 = v22;
  __chkstk_darwin(v22);
  long long v99 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v83 = (char *)&v80 - v25;
  __chkstk_darwin(v26);
  long long v102 = (char *)&v80 - v27;
  uint64_t v28 = a1;
  id v29 = *(id *)(a1 + 40);
  uint64_t v30 = a2;
  id result = [a2 gradientDarkColor];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  long long v82 = (void (*)(void, void, void))v29;
  uint64_t v81 = Color.init(_:)();
  id result = [a2 gradientLightColor];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  long long v100 = v17;
  uint64_t v101 = v15;
  long long v95 = v13;
  long long v96 = v10;
  uint64_t v97 = v8;
  uint64_t v32 = Color.init(_:)();
  uint64_t v33 = *(void **)(v28 + 48);
  long long v116 = *(_OWORD *)(v28 + 8);
  uint64_t v80 = v28;
  id v34 = v33;
  sub_1000E2358((uint64_t)&v116);
  MetricsPublisher.workoutStatePublisher.getter();
  type metadata accessor for IntervalsMetricsPublisher();
  sub_10049FA48(&qword_10095C408, (void (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher);
  uint64_t v35 = ObservedObject.init(wrappedValue:)();
  uint64_t v37 = v36;
  type metadata accessor for WorkoutStatePublisher();
  sub_10049FA48(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
  uint64_t v38 = ObservedObject.init(wrappedValue:)();
  uint64_t v40 = v39;
  id result = [v30 nonGradientTextColor];
  if (result)
  {
    uint64_t v41 = Color.init(_:)();
    uint64_t v107 = v82;
    uint64_t v108 = v81;
    uint64_t v109 = v32;
    id v110 = v34;
    uint64_t v111 = v35;
    uint64_t v112 = v37;
    uint64_t v113 = v38;
    uint64_t v114 = v40;
    uint64_t v115 = v41;
    uint64_t v42 = v84;
    long long v82 = *(void (**)(void, void, void))(v84 + 104);
    uint64_t v43 = v21;
    uint64_t v44 = v98;
    v82(v21, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v98);
    sub_1000AFA94(&qword_10095C418);
    sub_100433958();
    uint64_t v45 = v83;
    View.workoutViewStyle(_:)();
    uint64_t v84 = *(void *)(v42 + 8);
    ((void (*)(char *, void *))v84)(v43, v44);
    uint64_t v46 = v107;
    uint64_t v47 = v110;
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v45, v104);
    uint64_t v48 = static HorizontalAlignment.center.getter();
    uint64_t v49 = (uint64_t)v85;
    *uint64_t v85 = v48;
    *(void *)(v49 + 8) = 0;
    *(unsigned char *)(v49 + 16) = 1;
    uint64_t v50 = sub_1000AFA94(&qword_10095E240);
    uint64_t v51 = v80;
    sub_10049F09C(v87, v80, (void *)(v49 + *(int *)(v50 + 44)));
    sub_1000A132C(&qword_10095E248, &qword_10095E230);
    uint64_t v52 = v100;
    View.metricRow(padding:)();
    sub_10008DB18(v49, &qword_10095E230);
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v105, v52, v101);
    uint64_t v53 = static HorizontalAlignment.leading.getter();
    uint64_t v54 = (uint64_t)v88;
    *uint64_t v88 = v53;
    *(void *)(v54 + 8) = 0;
    *(unsigned char *)(v54 + 16) = 1;
    uint64_t v55 = sub_1000AFA94(&qword_10095E250);
    sub_10049F520(v51, v54 + *(int *)(v55 + 44));
    char v56 = v98;
    v82(v43, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v98);
    uint64_t v57 = sub_1000A132C(&qword_10095E258, &qword_10095E218);
    uint64_t v58 = v89;
    uint64_t v59 = v90;
    View.workoutViewStyle(_:)();
    ((void (*)(char *, void *))v84)(v43, v56);
    sub_10008DB18(v54, &qword_10095E218);
    uint64_t v107 = (void *)v59;
    uint64_t v108 = v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v60 = v96;
    uint64_t v61 = v92;
    View.metricRow(padding:)();
    (*(void (**)(char *, void *))(v91 + 8))(v58, v61);
    uint64_t v62 = v93;
    uint64_t v63 = v95;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v95, v60, v97);
    uint64_t v92 = *(void **)(v103 + 16);
    uint64_t v64 = v99;
    uint64_t v65 = v104;
    ((void (*)(char *, char *, uint64_t))v92)(v99, v102, v104);
    __int16 v98 = *(void **)(v106 + 16);
    uint64_t v66 = v100;
    ((void (*)(char *, char *, uint64_t))v98)(v100, v105, v101);
    char v67 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    uint64_t v68 = v63;
    uint64_t v69 = v97;
    v67(v60, v68, v97);
    uint64_t v70 = v94;
    ((void (*)(uint64_t, char *, uint64_t))v92)(v94, v64, v65);
    uint64_t v71 = sub_1000AFA94(&qword_10095E260);
    uint64_t v72 = v66;
    uint64_t v73 = v101;
    ((void (*)(uint64_t, char *, uint64_t))v98)(v70 + *(int *)(v71 + 48), v72, v101);
    uint64_t v74 = v96;
    v67((char *)(v70 + *(int *)(v71 + 64)), v96, v69);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v76 = v69;
    v75(v95, v69);
    uint64_t v77 = *(void (**)(char *, uint64_t))(v106 + 8);
    v77(v105, v73);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v103 + 8);
    uint64_t v79 = v104;
    v78(v102, v104);
    v75(v74, v76);
    v77(v100, v73);
    return (id)((uint64_t (*)(char *, uint64_t))v78)(v99, v79);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10049F09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v47 = a1;
  uint64_t v4 = type metadata accessor for WorkoutViewStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StepDetailView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095E288);
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10095E290);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_10095E298);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v43 = (uint64_t)&v40 - v24;
  id v25 = *(id *)(a2 + 40);
  swift_retain();
  StepDetailView.init(step:formattingManager:compressed:)();
  uint64_t v26 = v4;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v4);
  sub_10049FA48(&qword_10095E2A0, (void (*)(uint64_t))&type metadata accessor for StepDetailView);
  uint64_t v27 = v41;
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v27);
  uint64_t v28 = (void *)WorkoutStep.goal.getter();
  [v28 goalTypeIdentifier];

  _HKWorkoutGoalType.color.getter();
  uint64_t v29 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = v44;
  uint64_t v31 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v18, v14, v45);
  uint64_t v33 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t *v33 = KeyPath;
  v33[1] = v29;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
  LOBYTE(v29) = static Edge.Set.bottom.getter();
  sub_1000AEF2C((uint64_t)v18, (uint64_t)v22, &qword_10095E290);
  id v34 = &v22[*(int *)(v20 + 44)];
  char *v34 = v29;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 1;
  sub_10008DB18((uint64_t)v18, &qword_10095E290);
  uint64_t v35 = v43;
  sub_1000AEEC8((uint64_t)v22, v43, &qword_10095E298);
  sub_1000AEF2C(v35, (uint64_t)v22, &qword_10095E298);
  uint64_t v36 = v46;
  void *v46 = 0;
  *((unsigned char *)v36 + 8) = 1;
  uint64_t v37 = v36;
  uint64_t v38 = sub_1000AFA94(&qword_10095E2A8);
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v37 + *(int *)(v38 + 48), &qword_10095E298);
  sub_10008DB18(v35, &qword_10095E298);
  return sub_10008DB18((uint64_t)v22, &qword_10095E298);
}

uint64_t sub_10049F520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v53 = a2;
  uint64_t v2 = type metadata accessor for StepDetailView();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000AFA94(&qword_10095E268) - 8;
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v49 = (uint64_t)&v42 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_10095C208);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095E270);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095E278);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v43 = (uint64_t)&v42 - v19;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v20 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v22 = v21;
  *(void *)&long long v54 = v20;
  *((void *)&v54 + 1) = v21;
  char v24 = v23 & 1;
  char v55 = v23 & 1;
  uint64_t v56 = v25;
  View.metricDescriptionFont(multiline:)();
  sub_1000A06C0(v20, v22, v24);
  swift_bridgeObjectRelease();
  int v26 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v28 = v44;
  uint64_t v27 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v13, v9, v45);
  *(_DWORD *)&v13[*(int *)(v11 + 44)] = v26;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v27);
  uint64_t v29 = v46;
  uint64_t v30 = *(void *)(v46 + 56);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v17, &qword_10095E270);
  uint64_t v31 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = v30;
  sub_10008DB18((uint64_t)v13, &qword_10095E270);
  uint64_t v32 = v43;
  sub_1000AEEC8((uint64_t)v17, v43, &qword_10095E278);
  long long v54 = *(_OWORD *)(v29 + 8);
  swift_retain();
  IntervalsMetricsPublisher.intervalNextStep.getter();
  sub_1000E2384((uint64_t)&v54);
  id v33 = *(id *)(v29 + 40);
  id v34 = v48;
  StepDetailView.init(step:formattingManager:compressed:)();
  LODWORD(v29) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  uint64_t v37 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v47, v34, v52);
  *(_DWORD *)(v37 + *(int *)(v50 + 44)) = v29;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  uint64_t v38 = v49;
  sub_1000AEEC8(v37, v49, &qword_10095E268);
  sub_1000AEF2C(v32, (uint64_t)v17, &qword_10095E278);
  sub_1000AEF2C(v38, v37, &qword_10095E268);
  uint64_t v39 = v53;
  sub_1000AEF2C((uint64_t)v17, v53, &qword_10095E278);
  uint64_t v40 = sub_1000AFA94(&qword_10095E280);
  sub_1000AEF2C(v37, v39 + *(int *)(v40 + 48), &qword_10095E268);
  sub_10008DB18(v38, &qword_10095E268);
  sub_10008DB18(v32, &qword_10095E278);
  sub_10008DB18(v37, &qword_10095E268);
  return sub_10008DB18((uint64_t)v17, &qword_10095E278);
}

uint64_t sub_10049FA0C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10049E4CC(a1);
}

uint64_t sub_10049FA48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10049FA9C()
{
  unint64_t result = qword_10095E2B0;
  if (!qword_10095E2B0)
  {
    sub_1000A1370(&qword_10095E2B8);
    sub_10049FB10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E2B0);
  }
  return result;
}

unint64_t sub_10049FB10()
{
  unint64_t result = qword_10095E2C0;
  if (!qword_10095E2C0)
  {
    sub_1000A1370(&qword_10095E210);
    sub_1000A132C(&qword_10095BBB8, &qword_10095BBC0);
    sub_1000A132C(&qword_10095E2C8, &qword_10095E2D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E2C0);
  }
  return result;
}

char *sub_10049FBD4(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for MetricDetailViewModel();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(char **, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_100955590);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v61 = v8;
      uint64_t v12 = *a2;
      uint64_t v11 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v11;
      uint64_t v13 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v13;
      *((void *)a1 + 4) = a2[4];
      a1[40] = *((unsigned char *)a2 + 40);
      uint64_t v14 = v7[9];
      __dst = &a1[v14];
      uint64_t v59 = (char *)a2 + v14;
      uint64_t v15 = type metadata accessor for DateInterval();
      uint64_t v57 = *(void *)(v15 - 8);
      uint64_t v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      uint64_t v16 = v12;
      uint64_t v17 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60(v59, 1, v15))
      {
        uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
        memcpy(__dst, v59, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dst, v59, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v15);
      }
      a1[v7[10]] = *((unsigned char *)a2 + v7[10]);
      uint64_t v19 = v7[11];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, int *))(v61 + 56))(a1, 0, 1, v7);
    }
    uint64_t v23 = a3[5];
    uint64_t v24 = a3[6];
    uint64_t v25 = *(char **)((char *)a2 + v23);
    *(void *)&a1[v23] = v25;
    *(void *)&a1[v24] = *(char **)((char *)a2 + v24);
    uint64_t v26 = a3[7];
    uint64_t v27 = a3[8];
    uint64_t v28 = *(char **)((char *)a2 + v26);
    *(void *)&a1[v26] = v28;
    uint64_t v29 = *(char **)((char *)a2 + v27);
    *(void *)&a1[v27] = v29;
    uint64_t v30 = a3[9];
    uint64_t v31 = a3[10];
    uint64_t v32 = *(char **)((char *)a2 + v30);
    *(void *)&a1[v30] = v32;
    id v33 = &a1[v31];
    id v34 = (char *)a2 + v31;
    uint64_t v35 = *(uint64_t *)((char *)a2 + v31 + 8);
    *(void *)id v33 = *(char **)((char *)a2 + v31);
    *((void *)v33 + 1) = v35;
    id v36 = v25;
    swift_retain();
    id v37 = v28;
    id v38 = v29;
    id v39 = v32;
    swift_retain();
    swift_retain();
    uint64_t v40 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
    uint64_t v41 = (void **)&v33[v40];
    uint64_t v42 = (void **)&v34[v40];
    uint64_t v43 = type metadata accessor for MetricChartData();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = sub_1000AFA94(&qword_10094C1E8);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      uint64_t v46 = *v42;
      *uint64_t v41 = *v42;
      uint64_t v47 = *(int *)(v43 + 20);
      uint64_t v62 = (char *)v41 + v47;
      uint64_t v48 = (char *)v42 + v47;
      uint64_t v49 = type metadata accessor for Date();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      id v51 = v46;
      v50(v62, v48, v49);
      uint64_t v52 = *(int *)(v43 + 24);
      uint64_t v53 = *(void **)((char *)v42 + v52);
      *(void **)((char *)v41 + v52) = v53;
      long long v54 = *(void (**)(void **, void, uint64_t, uint64_t))(v44 + 56);
      id v55 = v53;
      v54(v41, 0, 1, v43);
    }
  }
  return a1;
}

void sub_1004A0054(id *a1, int *a2)
{
  uint64_t v4 = type metadata accessor for MetricDetailViewModel();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v5 = (char *)a1 + *(int *)(v4 + 36);
    uint64_t v6 = type metadata accessor for DateInterval();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = (char *)a1 + *(int *)(v4 + 44);
    uint64_t v9 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }

  swift_release();
  uint64_t v10 = (char *)a1 + a2[10];
  swift_release();
  swift_release();
  uint64_t v11 = (id *)&v10[*(int *)(sub_1000AFA94(&qword_10094C3D0) + 32)];
  uint64_t v12 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {

    uint64_t v13 = (char *)v11 + *(int *)(v12 + 20);
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = *(id *)((char *)v11 + *(int *)(v12 + 24));
  }
}

void **sub_1004A02C8(void **a1, void **a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void **, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_100955590);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v10 = *a2;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    a1[4] = a2[4];
    *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v12 = v6[9];
    __dst = (char *)a1 + v12;
    uint64_t v59 = v7;
    uint64_t v56 = (char *)a2 + v12;
    uint64_t v13 = type metadata accessor for DateInterval();
    uint64_t v55 = *(void *)(v13 - 8);
    uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    id v14 = v10;
    id v15 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v57(v56, 1, v13))
    {
      uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v56, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v56, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v13);
    }
    *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    uint64_t v17 = v6[11];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    (*(void (**)(void **, void, uint64_t, int *))(v59 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = a3[5];
  uint64_t v22 = a3[6];
  uint64_t v23 = *(void **)((char *)a2 + v21);
  *(void **)((char *)a1 + v21) = v23;
  *(void **)((char *)a1 + v22) = *(void **)((char *)a2 + v22);
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)((char *)a2 + v24);
  *(void **)((char *)a1 + v24) = v26;
  uint64_t v27 = *(void **)((char *)a2 + v25);
  *(void **)((char *)a1 + v25) = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = *(void **)((char *)a2 + v28);
  *(void **)((char *)a1 + v28) = v30;
  uint64_t v31 = (void **)((char *)a1 + v29);
  uint64_t v32 = (char *)a2 + v29;
  uint64_t v33 = *(uint64_t *)((char *)a2 + v29 + 8);
  *uint64_t v31 = *(void **)((char *)a2 + v29);
  v31[1] = v33;
  id v34 = v23;
  swift_retain();
  id v35 = v26;
  id v36 = v27;
  id v37 = v30;
  swift_retain();
  swift_retain();
  uint64_t v38 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  id v39 = (void **)((char *)v31 + v38);
  uint64_t v40 = (void **)&v32[v38];
  uint64_t v41 = type metadata accessor for MetricChartData();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v44 = *v40;
    *id v39 = *v40;
    uint64_t v45 = *(int *)(v41 + 20);
    uint64_t v60 = (char *)v39 + v45;
    uint64_t v46 = (char *)v40 + v45;
    uint64_t v47 = type metadata accessor for Date();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
    id v49 = v44;
    v48(v60, v46, v47);
    uint64_t v50 = *(int *)(v41 + 24);
    id v51 = *(void **)((char *)v40 + v50);
    *(void **)((char *)v39 + v50) = v51;
    uint64_t v52 = *(void (**)(void **, void, uint64_t, uint64_t))(v42 + 56);
    id v53 = v51;
    v52(v39, 0, 1, v41);
  }
  return a1;
}

uint64_t sub_1004A06FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10006A518(a1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      goto LABEL_7;
    }
    uint64_t v20 = *(void **)a2;
    uint64_t v21 = *(void **)a1;
    *(void *)a1 = *(void *)a2;
    id v22 = v20;

    uint64_t v23 = *(void **)(a2 + 8);
    uint64_t v24 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = v23;
    id v25 = v23;

    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v26;
    uint64_t v27 = v6[9];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    uint64_t v30 = type metadata accessor for DateInterval();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
    __dsta = v28;
    LODWORD(v28) = v32(v28, 1, v30);
    int v33 = v32(v29, 1, v30);
    if (v28)
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 16))(__dsta, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(__dsta, 0, 1, v30);
        goto LABEL_18;
      }
      size_t v34 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      id v35 = __dsta;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 24))(__dsta, v29, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v31 + 8))(__dsta, v30);
      size_t v34 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      id v35 = __dsta;
    }
    memcpy(v35, v29, v34);
LABEL_18:
    *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
    uint64_t v40 = v6[11];
    uint64_t v41 = a1 + v40;
    uint64_t v42 = a2 + v40;
    uint64_t v43 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v19 = sub_1000AFA94((uint64_t *)&unk_100955590);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v11 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v12 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v12;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v13;
  uint64_t v14 = v6[9];
  __dst = (void *)(a1 + v14);
  long long v95 = (const void *)(a2 + v14);
  uint64_t v15 = type metadata accessor for DateInterval();
  uint64_t v94 = *(void *)(v15 - 8);
  long long v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48);
  id v16 = v11;
  id v17 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v96(v95, 1, v15))
  {
    uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v95, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v94 + 16))(__dst, v95, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v15);
  }
  *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
  uint64_t v36 = v6[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_19:
  uint64_t v44 = a3[5];
  uint64_t v45 = *(void **)(a2 + v44);
  uint64_t v46 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = v45;
  id v47 = v45;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v48 = a3[7];
  id v49 = *(void **)(a2 + v48);
  uint64_t v50 = *(void **)(a1 + v48);
  *(void *)(a1 + v48) = v49;
  id v51 = v49;

  uint64_t v52 = a3[8];
  id v53 = *(void **)(a2 + v52);
  long long v54 = *(void **)(a1 + v52);
  *(void *)(a1 + v52) = v53;
  id v55 = v53;

  uint64_t v56 = a3[9];
  uint64_t v57 = *(void **)(a2 + v56);
  uint64_t v58 = *(void **)(a1 + v56);
  *(void *)(a1 + v56) = v57;
  id v59 = v57;

  uint64_t v60 = a3[10];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  *(void *)(a1 + v60) = *(void *)(a2 + v60);
  swift_retain();
  swift_release();
  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  swift_retain();
  swift_release();
  uint64_t v63 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v64 = (void **)(v61 + v63);
  uint64_t v65 = (void **)(v62 + v63);
  uint64_t v66 = type metadata accessor for MetricChartData();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v67 + 48);
  int v69 = v68(v64, 1, v66);
  int v70 = v68(v65, 1, v66);
  if (!v69)
  {
    if (!v70)
    {
      id v83 = *v65;
      uint64_t v84 = *v64;
      char *v64 = *v65;
      id v85 = v83;

      uint64_t v86 = *(int *)(v66 + 20);
      uint64_t v87 = (char *)v64 + v86;
      uint64_t v88 = (char *)v65 + v86;
      uint64_t v89 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v87, v88, v89);
      uint64_t v90 = *(int *)(v66 + 24);
      uint64_t v91 = *(void **)((char *)v65 + v90);
      uint64_t v92 = *(void **)((char *)v64 + v90);
      *(void **)((char *)v64 + v90) = v91;
      id v93 = v91;

      return a1;
    }
    sub_10006A518((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_24;
  }
  if (v70)
  {
LABEL_24:
    uint64_t v81 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v64, v65, *(void *)(*(void *)(v81 - 8) + 64));
    return a1;
  }
  uint64_t v71 = *v65;
  char *v64 = *v65;
  uint64_t v72 = *(int *)(v66 + 20);
  __src = (char *)v64 + v72;
  uint64_t v73 = (char *)v65 + v72;
  uint64_t v74 = type metadata accessor for Date();
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
  id v76 = v71;
  v75(__src, v73, v74);
  uint64_t v77 = *(int *)(v66 + 24);
  uint64_t v78 = *(void **)((char *)v65 + v77);
  *(void **)((char *)v64 + v77) = v78;
  uint64_t v79 = *(void (**)(void **, void, uint64_t, uint64_t))(v67 + 56);
  id v80 = v78;
  v79(v64, 0, 1, v66);
  return a1;
}

_OWORD *sub_1004A0EAC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_100955590);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = v6[9];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for DateInterval();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    uint64_t v16 = v6[11];
    id v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v20 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
  *uint64_t v23 = v25;
  v23[1] = v26;
  uint64_t v27 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v28 = (void *)((char *)v23 + v27);
  uint64_t v29 = &v24[v27];
  uint64_t v30 = type metadata accessor for MetricChartData();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    *uint64_t v28 = *(void *)v29;
    uint64_t v33 = *(int *)(v30 + 20);
    size_t v34 = (char *)v28 + v33;
    id v35 = &v29[v33];
    uint64_t v36 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    *(void *)((char *)v28 + *(int *)(v30 + 24)) = *(void *)&v29[*(int *)(v30 + 24)];
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

uint64_t sub_1004A1260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10006A518(a1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      goto LABEL_7;
    }
    uint64_t v19 = *(void **)a1;
    *(void *)a1 = *(void *)a2;

    uint64_t v20 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);

    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v21 = v6[9];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (void *)(a2 + v21);
    uint64_t v24 = type metadata accessor for DateInterval();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
    int v70 = v22;
    LODWORD(v22) = v26(v22, 1, v24);
    int v27 = v26(v23, 1, v24);
    if (v22)
    {
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v70, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v70, 0, 1, v24);
        goto LABEL_18;
      }
      size_t v28 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      uint64_t v29 = v70;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v70, v23, v24);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v25 + 8))(v70, v24);
      size_t v28 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      uint64_t v29 = v70;
    }
    memcpy(v29, v23, v28);
LABEL_18:
    *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
    uint64_t v34 = v6[11];
    uint64_t v35 = a1 + v34;
    uint64_t v36 = a2 + v34;
    uint64_t v37 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_100955590);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_19;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v12 = v6[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for DateInterval();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
  uint64_t v30 = v6[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_19:
  uint64_t v38 = a3[5];
  uint64_t v39 = *(void **)(a1 + v38);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v40 = a3[7];
  uint64_t v41 = *(void **)(a1 + v40);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);

  uint64_t v42 = a3[8];
  uint64_t v43 = *(void **)(a1 + v42);
  *(void *)(a1 + v42) = *(void *)(a2 + v42);

  uint64_t v44 = a3[9];
  uint64_t v45 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = *(void *)(a2 + v44);

  uint64_t v46 = a3[10];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_release();
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_release();
  uint64_t v49 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v50 = (void **)(v47 + v49);
  id v51 = (void **)(v48 + v49);
  uint64_t v52 = type metadata accessor for MetricChartData();
  uint64_t v53 = *(void *)(v52 - 8);
  long long v54 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      uint64_t v63 = *v50;
      *uint64_t v50 = *v51;

      uint64_t v64 = *(int *)(v52 + 20);
      uint64_t v65 = (char *)v50 + v64;
      uint64_t v66 = (char *)v51 + v64;
      uint64_t v67 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
      uint64_t v68 = *(int *)(v52 + 24);
      int v69 = *(void **)((char *)v50 + v68);
      *(void **)((char *)v50 + v68) = *(void **)((char *)v51 + v68);

      return a1;
    }
    sub_10006A518((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_24;
  }
  if (v56)
  {
LABEL_24:
    uint64_t v61 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v50, v51, *(void *)(*(void *)(v61 - 8) + 64));
    return a1;
  }
  *uint64_t v50 = *v51;
  uint64_t v57 = *(int *)(v52 + 20);
  uint64_t v58 = (char *)v50 + v57;
  id v59 = (char *)v51 + v57;
  uint64_t v60 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
  *(void **)((char *)v50 + *(int *)(v52 + 24)) = *(void **)((char *)v51 + *(int *)(v52 + 24));
  (*(void (**)(void **, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  return a1;
}

uint64_t sub_1004A1964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A1978);
}

uint64_t sub_1004A1978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_100955590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_10094C3D0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1004A1AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A1AC0);
}

uint64_t sub_1004A1AC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94((uint64_t *)&unk_100955590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_10094C3D0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for MetricDetailWorkoutListView()
{
  uint64_t result = qword_10095E330;
  if (!qword_10095E330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004A1C40()
{
  sub_1004A1D28();
  if (v0 <= 0x3F)
  {
    sub_1004A1D80();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1004A1D28()
{
  if (!qword_10095E340)
  {
    type metadata accessor for MetricDetailViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095E340);
    }
  }
}

void sub_1004A1D80()
{
  if (!qword_100953BF8)
  {
    sub_1000A1370(&qword_10094C1E8);
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100953BF8);
    }
  }
}

uint64_t sub_1004A1DDC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1004A1DF8()
{
  xmmword_1009980C0 = 0uLL;
  double result = 10.0;
  xmmword_1009980D0 = xmmword_1007509A0;
  return result;
}

double sub_1004A1E14()
{
  double result = 10.0;
  xmmword_1009980E0 = xmmword_100751820;
  *(_OWORD *)&qword_1009980F0 = xmmword_100751820;
  return result;
}

uint64_t sub_1004A1E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E390);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for MetricDetailWorkoutListView();
  uint64_t v79 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v80 = v8;
  uint64_t v81 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_10095E398);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v63[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)&v63[-v13];
  uint64_t v15 = type metadata accessor for Font.Leading();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  __chkstk_darwin(v15);
  uint64_t v75 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v63[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for Font.TextStyle();
  uint64_t v76 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = &v63[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = a1;
  sub_1000AEF2C(a1, (uint64_t)v25, (uint64_t *)&unk_100955590);
  uint64_t v26 = type metadata accessor for MetricDetailViewModel();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26) == 1)
  {
    sub_10008DB18((uint64_t)v25, (uint64_t *)&unk_100955590);
LABEL_10:
    uint64_t v62 = sub_1000AFA94(&qword_10095E3A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(a2, 1, 1, v62);
  }
  unint64_t v27 = *((void *)v25 + 3);
  swift_bridgeObjectRetain();
  sub_10006A518((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v61) {
      goto LABEL_5;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v72 = v14;
  uint64_t v73 = v11;
  uint64_t v74 = a2;
  id v28 = [self mainBundle];
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v33 = v32;

  uint64_t v84 = v31;
  unint64_t v85 = v33;
  sub_1000A06D0();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v69 = v35;
  uint64_t v70 = v34;
  int v68 = v36;
  uint64_t v71 = v37;
  if (qword_10094AD00 != -1) {
    swift_once();
  }
  long long v67 = xmmword_1009980C0;
  uint64_t v65 = *((void *)&xmmword_1009980D0 + 1);
  uint64_t v66 = xmmword_1009980D0;
  int v64 = static Edge.Set.all.getter();
  uint64_t v38 = v76;
  (*(void (**)(unsigned char *, void, uint64_t))(v76 + 104))(v22, enum case for Font.TextStyle.title2(_:), v20);
  uint64_t v39 = enum case for Font.Design.rounded(_:);
  uint64_t v40 = type metadata accessor for Font.Design();
  uint64_t v41 = *(void *)(v40 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 104))(v19, v39, v40);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v41 + 56))(v19, 0, 1, v40);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v19, &qword_10094C448);
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v22, v20);
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v43 = v77;
  uint64_t v42 = v78;
  uint64_t v44 = v75;
  (*(void (**)(unsigned char *, void, uint64_t))(v77 + 104))(v75, enum case for Font.Leading.tight(_:), v78);
  uint64_t v76 = Font.leading(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v44, v42);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = static HorizontalAlignment.center.getter();
  uint64_t v47 = (uint64_t)v72;
  uint64_t *v72 = v46;
  *(void *)(v47 + 8) = 0x4024000000000000;
  *(unsigned char *)(v47 + 16) = 0;
  uint64_t v78 = v47 + *(int *)(sub_1000AFA94(&qword_10095E3A8) + 44);
  unint64_t v83 = v27;
  swift_getKeyPath();
  uint64_t v48 = v81;
  sub_1004A32FC(v82, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  unint64_t v49 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  uint64_t v50 = swift_allocObject();
  sub_1004A3994((uint64_t)v48, v50 + v49, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  sub_1000AFA94((uint64_t *)&unk_1009546A0);
  sub_1000AFA94(&qword_10095E3B0);
  sub_1000A132C(&qword_10095E3B8, (uint64_t *)&unk_1009546A0);
  sub_1000A6E44((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v51 = sub_1000A1370(&qword_10095E3C0);
  unint64_t v52 = sub_1004A3148();
  uint64_t v84 = v51;
  unint64_t v85 = v52;
  swift_getOpaqueTypeConformance2();
  ForEach<>.init(_:id:content:)();
  uint64_t v53 = (uint64_t)v73;
  sub_1000AEF2C(v47, (uint64_t)v73, &qword_10095E398);
  uint64_t v55 = v69;
  uint64_t v54 = v70;
  *(void *)uint64_t v6 = v70;
  *((void *)v6 + 1) = v55;
  LOBYTE(v49) = v68 & 1;
  v6[16] = v68 & 1;
  *((void *)v6 + 3) = v71;
  v6[32] = v64;
  *(_OWORD *)(v6 + 40) = v67;
  uint64_t v56 = v65;
  *((void *)v6 + 7) = v66;
  *((void *)v6 + 8) = v56;
  unsigned char v6[72] = 0;
  uint64_t v57 = v76;
  *((void *)v6 + 10) = KeyPath;
  *((void *)v6 + 11) = v57;
  uint64_t v58 = sub_1000AFA94(&qword_10095E3E0);
  sub_1000AEF2C(v53, (uint64_t)&v6[*(int *)(v58 + 48)], &qword_10095E398);
  sub_1000A1750(v54, v55, v49);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008DB18(v47, &qword_10095E398);
  sub_10008DB18(v53, &qword_10095E398);
  sub_1000A06C0(v54, v55, v49);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = sub_1000AFA94(&qword_10095E3A0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v6, 0, 1, v59);
  return sub_1004A3294((uint64_t)v6, v74);
}

uint64_t sub_1004A27BC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v5 = type metadata accessor for MetricDetailWorkoutListView();
  uint64_t v6 = (int *)(v5 - 8);
  uint64_t v63 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v64 = v7;
  uint64_t v66 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v58);
  uint64_t v9 = (long long *)((char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_1000AFA94(&qword_1009531D8);
  __chkstk_darwin(v59);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WorkoutItemView();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_10095E3D8);
  __chkstk_darwin(v57);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000AFA94(&qword_10095E3C0);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v19 = v6[8];
  uint64_t v20 = *(void **)(a2 + v6[7]);
  uint64_t v21 = *(void **)(a2 + v6[9]);
  uint64_t v22 = *(void **)(a2 + v6[10]);
  uint64_t v65 = a2;
  uint64_t v23 = *(void *)(a2 + v19);
  id v24 = v18;
  id v25 = v20;
  id v26 = v21;
  id v27 = v22;
  swift_retain();
  id v60 = v24;
  sub_10057C898(v24, v25, v26, v27, 1, v23, (uint64_t)v14);
  if (qword_10094AD08 != -1) {
    swift_once();
  }
  long long v56 = xmmword_1009980E0;
  uint64_t v28 = qword_1009980F0;
  uint64_t v29 = unk_1009980F8;
  char v30 = static Edge.Set.all.getter();
  sub_1004A32FC((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  uint64_t v31 = &v16[*(int *)(v57 + 36)];
  *uint64_t v31 = v30;
  *(_OWORD *)(v31 + 8) = v56;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v29;
  v31[40] = 0;
  sub_10006A518((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  unint64_t v32 = (char *)v9 + *(int *)(v58 + 20);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v9 = _Q0;
  id v40 = sub_10005DB50();
  uint64_t v41 = Color.init(uiColor:)();
  sub_1004A32FC((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v42 = v59;
  *(void *)&v11[*(int *)(v59 + 52)] = v41;
  *(_WORD *)&v11[*(int *)(v42 + 56)] = 256;
  sub_10006A518((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v43 = static Alignment.center.getter();
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v61;
  uint64_t v47 = (uint64_t)&v61[*(int *)(v62 + 36)];
  sub_1000AEF2C((uint64_t)v11, v47, &qword_1009531D8);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(sub_1000AFA94(&qword_100953DE0) + 36));
  *uint64_t v48 = v43;
  v48[1] = v45;
  sub_1000AEF2C((uint64_t)v16, v46, &qword_10095E3D8);
  sub_10008DB18((uint64_t)v11, &qword_1009531D8);
  sub_10008DB18((uint64_t)v16, &qword_10095E3D8);
  uint64_t v49 = v66;
  sub_1004A32FC(v65, v66, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  unint64_t v50 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v51 = (v64 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = swift_allocObject();
  sub_1004A3994(v49, v52 + v50, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  uint64_t v53 = v60;
  *(void *)(v52 + v51) = v60;
  sub_1004A3148();
  id v54 = v53;
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18(v46, &qword_10095E3C0);
}

void sub_1004A2D30(uint64_t a1, void *a2)
{
  type metadata accessor for MetricDetailWorkoutListView();
  id v3 = a2;
  sub_1004A36E4(v3);
}

uint64_t sub_1004A2D90@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1000AFA94(&qword_10095E388);
  return sub_1004A1E2C(v1, a1 + *(int *)(v3 + 44));
}

const char *sub_1004A2DE0()
{
  return "UUID";
}

uint64_t sub_1004A2DF0()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailWorkoutListView();
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80)));
  uint64_t v3 = type metadata accessor for MetricDetailViewModel();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)v2 + *(int *)(v3 + 36);
    uint64_t v5 = type metadata accessor for DateInterval();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = (char *)v2 + *(int *)(v3 + 44);
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }

  swift_release();
  uint64_t v9 = (char *)v2 + v1[10];
  swift_release();
  swift_release();
  uint64_t v10 = (id *)&v9[*(int *)(sub_1000AFA94(&qword_10094C3D0) + 32)];
  uint64_t v11 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {

    uint64_t v12 = (char *)v10 + *(int *)(v11 + 20);
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }

  return swift_deallocObject();
}

uint64_t sub_1004A30C8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MetricDetailWorkoutListView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1004A27BC(a1, v6, a2);
}

unint64_t sub_1004A3148()
{
  unint64_t result = qword_10095E3C8;
  if (!qword_10095E3C8)
  {
    sub_1000A1370(&qword_10095E3C0);
    sub_1004A31E8();
    sub_1000A132C(&qword_100953DD8, &qword_100953DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E3C8);
  }
  return result;
}

unint64_t sub_1004A31E8()
{
  unint64_t result = qword_10095E3D0;
  if (!qword_10095E3D0)
  {
    sub_1000A1370(&qword_10095E3D8);
    sub_1000A6E44(&qword_1009581E0, (void (*)(uint64_t))type metadata accessor for WorkoutItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E3D0);
  }
  return result;
}

uint64_t sub_1004A3294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A32FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004A3364()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailWorkoutListView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = (id *)(v0 + v2);
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)v4 + *(int *)(v5 + 36);
    uint64_t v7 = type metadata accessor for DateInterval();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = (char *)v4 + *(int *)(v5 + 44);
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }

  swift_release();
  uint64_t v11 = (char *)v4 + v1[10];
  swift_release();
  swift_release();
  uint64_t v12 = (id *)&v11[*(int *)(sub_1000AFA94(&qword_10094C3D0) + 32)];
  uint64_t v13 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {

    uint64_t v14 = (char *)v12 + *(int *)(v13 + 20);
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }

  return swift_deallocObject();
}

void sub_1004A3658()
{
  uint64_t v1 = *(void *)(type metadata accessor for MetricDetailWorkoutListView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004A2D30(v0 + v2, v3);
}

uint64_t sub_1004A36E4(void *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v17[3] = sub_1002DDB04();
  v17[4] = sub_1000A6E44(&qword_10094F3B8, (void (*)(uint64_t))sub_1002DDB04);
  v17[0] = a1;
  sub_10008E75C((uint64_t)v17, (uint64_t)v16);
  id v9 = a1;
  sub_1000AFA94((uint64_t *)&unk_100955630);
  if (swift_dynamicCast())
  {
    uint64_t v10 = v15;
    sub_1003F985C(v15, 0, 0, 0);
LABEL_5:

    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
  }
  sub_10008E75C((uint64_t)v17, (uint64_t)v16);
  type metadata accessor for MindfulnessSessionViewModel();
  if (swift_dynamicCast())
  {
    uint64_t v10 = v15;
    sub_1003F9CD0(v15);
    goto LABEL_5;
  }
  sub_10008E75C((uint64_t)v17, (uint64_t)v16);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v12)
  {
    v13(v4, 0, 1, v5);
    sub_1004A3994((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
    sub_1003F9DC4((uint64_t)v8);
    sub_10006A518((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
  }
  else
  {
    v13(v4, 1, 1, v5);
    sub_10008DB18((uint64_t)v4, &qword_100950DA8);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
}

uint64_t sub_1004A3994(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004A39FC()
{
  return sub_1000A132C(&qword_10095E3E8, &qword_10095E3F0);
}

ValueMetadata *type metadata accessor for FriendSuggestionCoordinator()
{
  return &type metadata for FriendSuggestionCoordinator;
}

uint64_t sub_1004A3A48(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = v13;
  uint64_t v3 = *(void **)a1;
  long long v4 = *(_OWORD *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 24);
  long long v13 = v4;
  uint64_t v11 = *(void *)(a1 + 40);
  id v5 = v3;
  sub_1001D9EF4((uint64_t)&v13);
  sub_1001D9EF4((uint64_t)&v12);
  sub_1001CE648((uint64_t)&v11);
  sub_1004A3BC4(v2, (void *)a1);

  sub_1001D0774((uint64_t)&v13);
  sub_1001D0774((uint64_t)&v12);
  sub_1000B1AE0((uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  id v6 = [v5 identifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  sub_1004A3E70(v7, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A3BC4(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  id v5 = _swiftEmptyArrayStorage;
  unint64_t v23 = *(void *)(result + 16);
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    id v25 = v5;
    unint64_t v26 = v6;
    while (1)
    {
      if (v4 == v26)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v24 + 48 * v4;
      uint64_t v8 = *(void **)v7;
      uint64_t v9 = *(void *)(v7 + 16);
      uint64_t v27 = *(void *)(v7 + 24);
      uint64_t v28 = *(void *)(v7 + 8);
      long long v29 = *(_OWORD *)(v7 + 32);
      ++v4;
      sub_1000A88A4();
      id v10 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((static NSObject.== infix(_:_:)() & 1) == 0) {
        break;
      }
      BOOL v11 = a2[1] == v28 && a2[2] == v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v12 = a2[3] == v27 && a2[4] == (void)v29;
      if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      long long v13 = (void *)a2[5];
      uint64_t v14 = v13[2];
      if (v14 != *(void *)(*((void *)&v29 + 1) + 16)) {
        break;
      }
      if (v14 && v13 != *((void **)&v29 + 1))
      {
        BOOL v15 = v13[4] == *(void *)(*((void *)&v29 + 1) + 32) && v13[5] == *(void *)(*((void *)&v29 + 1) + 40);
        if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
        uint64_t v16 = v14 - 1;
        if (v16)
        {
          uint64_t v17 = (void *)(*((void *)&v29 + 1) + 56);
          uint64_t v18 = v13 + 7;
          do
          {
            BOOL v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
            if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_36;
            }
            v17 += 2;
            v18 += 2;
          }
          while (--v16);
        }
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      id v5 = v25;
      if (v4 == v23) {
        return (uint64_t)v5;
      }
    }
LABEL_36:
    id v5 = v25;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1001C952C(0, v25[2] + 1, 1);
      id v5 = v25;
    }
    unint64_t v21 = v5[2];
    unint64_t v20 = v5[3];
    if (v21 >= v20 >> 1)
    {
      unint64_t result = sub_1001C952C(v20 > 1, v21 + 1, 1);
      id v5 = v25;
    }
    v5[2] = v21 + 1;
    uint64_t v22 = &v5[6 * v21];
    v22[4] = v10;
    v22[5] = v28;
    v22[6] = v9;
    v22[7] = v27;
    *((_OWORD *)v22 + 4) = v29;
    unint64_t v2 = v23;
  }
  while (v4 != v23);
  return (uint64_t)v5;
}

uint64_t sub_1004A3E70(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = self;
  id v5 = [v4 standardUserDefaults];
  id v6 = [v5 objectForKey:@"CHRemovedSuggestedContactsAsDestinationsKey"];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_100074830((uint64_t)v23, (uint64_t)v24);
  if (!v24[3])
  {
    sub_100074898((uint64_t)v24);
    goto LABEL_20;
  }
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    id v17 = [v4 standardUserDefaults];
    sub_1000AFA94(&qword_10094D178);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1007509E0;
    *(void *)(v18 + 32) = a1;
    *(void *)(v18 + 40) = a2;
    v24[0] = v18;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRetain();
    sub_1000AFA94((uint64_t *)&unk_10094B1F0);
    NSUserDefaults.set<A>(_:for:)();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = v22;
  uint64_t v8 = v22[2];
  if (v8)
  {
    uint64_t v9 = v22 + 5;
    uint64_t v10 = v22[2];
    while (1)
    {
      BOOL v11 = *(v9 - 1) == a1 && *v9 == a2;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      v9 += 2;
      if (!--v10) {
        goto LABEL_14;
      }
    }
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_100084014(0, v8 + 1, 1, v22);
    }
    unint64_t v13 = v7[2];
    unint64_t v12 = v7[3];
    unint64_t v14 = v13 + 1;
    if (v13 >= v12 >> 1)
    {
      unint64_t v21 = v13 + 1;
      unint64_t v20 = sub_100084014((void *)(v12 > 1), v13 + 1, 1, v7);
      unint64_t v14 = v13 + 1;
      uint64_t v7 = v20;
    }
    v7[2] = v14;
    BOOL v15 = &v7[2 * v13];
    v15[4] = a1;
    v15[5] = a2;
    id v16 = [v4 standardUserDefaults:v21];
    v24[0] = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSUserDefaults.set<A>(_:for:)();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void destroy for CadenceTargetValue(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for CadenceTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 16);
  unint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for CadenceTargetValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  id v5 = (void *)a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  uint64_t v8 = (void *)a2[3];
  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for CadenceTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for CadenceTargetValue()
{
  return &type metadata for CadenceTargetValue;
}

uint64_t sub_1004A4278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004A4294()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1004A4370(*(void *)v0, *(unsigned __int8 *)(v0 + 8));
  id v2 = [self localizedShortCadenceUnitStringForActivityType:[v1 identifier]];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  return MetricText.init(value:unit:description:stale:includesSlashes:)();
}

uint64_t sub_1004A4370(uint64_t a1, int a2)
{
  int v35 = a2;
  uint64_t v29 = a1;
  uint64_t v2 = type metadata accessor for LocalizationFeature();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  unint64_t v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_1000AFA94(&qword_10095B438);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v29 - v21;
  if (v35)
  {
    uint64_t v27 = v30;
    uint64_t v26 = v31;
    (*(void (**)(char *, void, uint64_t, __n128))(v30 + 104))(v4, enum case for LocalizationFeature.workout(_:), v31, v20);
    uint64_t v25 = static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
  }
  else
  {
    uint64_t v36 = v29;
    static Locale.autoupdatingCurrent.getter();
    sub_1003ED738();
    FloatingPointFormatStyle.init(locale:)();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FloatingPointRoundingRule.down(_:), v7);
    FloatingPointFormatStyle.rounded(rule:increment:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v15, v12);
    uint64_t v24 = v32;
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
    FloatingPointFormatStyle.precision(_:)();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v34);
    v23(v18, v12);
    sub_1004A47D8();
    BinaryFloatingPoint.formatted<A>(_:)();
    v23(v22, v12);
    return v37;
  }
  return v25;
}

unint64_t sub_1004A47D8()
{
  unint64_t result = qword_10095B460;
  if (!qword_10095B460)
  {
    sub_1000A1370(&qword_10095B438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095B460);
  }
  return result;
}

id sub_1004A4944()
{
  id v0 = [objc_allocWithZone((Class)ARUIMetricColors) init];
  id v1 = sub_1004A5294(0x9Bu, 0x6Eu, 0xFAu);
  [v0 setNonGradientTextColor:v1];

  id v2 = sub_1004A5294(0x16u, 0x10u, 0x28u);
  [v0 setGradientDarkColor:v2];

  id v3 = sub_1004A5294(0x2Fu, 0x21u, 0x5Au);
  [v0 setGradientLightColor:v3];

  id v4 = sub_1004A5294(0x9Bu, 0x6Eu, 0xFAu);
  [v0 setAdjustmentButtonBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v0 setValueDisplayColor:v6];

  id v7 = [v5 blackColor];
  [v0 setButtonTextColor:v7];

  id v8 = [v5 blackColor];
  [v0 setButtonDisabledTextColor:v8];

  return v0;
}

id sub_1004A4AFC()
{
  id v0 = [objc_allocWithZone((Class)ARUIMetricColors) init];
  id v1 = sub_1004A5294(0, 0xFFu, 0xA8u);
  [v0 setNonGradientTextColor:v1];

  id v2 = sub_1004A5294(2u, 0x23u, 0x1Cu);
  [v0 setGradientDarkColor:v2];

  id v3 = sub_1004A5294(4u, 0x33u, 0x23u);
  [v0 setGradientLightColor:v3];

  id v4 = sub_1004A5294(0, 0xFFu, 0xA8u);
  [v0 setAdjustmentButtonBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v0 setValueDisplayColor:v6];

  id v7 = [v5 blackColor];
  [v0 setButtonTextColor:v7];

  id v8 = [v5 blackColor];
  [v0 setButtonDisabledTextColor:v8];

  return v0;
}

id sub_1004A4CB4()
{
  id v0 = [objc_allocWithZone((Class)ARUIMetricColors) init];
  id v1 = sub_1004A5294(0x3Au, 0xE9u, 0xE6u);
  [v0 setNonGradientTextColor:v1];

  id v2 = sub_1004A5294(0, 0x25u, 0x22u);
  [v0 setGradientDarkColor:v2];

  id v3 = sub_1004A5294(0, 0x3Du, 0x39u);
  [v0 setGradientLightColor:v3];

  id v4 = sub_1004A5294(0x3Au, 0xE9u, 0xE6u);
  [v0 setAdjustmentButtonBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v0 setValueDisplayColor:v6];

  id v7 = [v5 blackColor];
  [v0 setButtonTextColor:v7];

  id v8 = [v5 blackColor];
  [v0 setButtonDisabledTextColor:v8];

  return v0;
}

id sub_1004A4E6C(id a1)
{
  uint64_t v2 = type metadata accessor for ConfigurationType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 workoutActivityType] == (id)84)
  {
    a1 = [self diveColors];
    if (a1) {
      return a1;
    }
    __break(1u);
  }
  id v6 = [a1 metadata];
  if (v6)
  {
    id v7 = v6;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for BlastDoorConfigurationValidator();
  swift_allocObject();
  BlastDoorConfigurationValidator.init()();
  id v8 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (v8)
  {
    dispatch thunk of WorkoutConfiguration.type.getter();
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v9 == enum case for ConfigurationType.goal(_:))
    {
      type metadata accessor for GoalWorkoutConfiguration();
      if (swift_dynamicCastClass())
      {
        id v10 = v8;
        uint64_t v11 = (void *)GoalWorkoutConfiguration.goal.getter();
        id v12 = [v11 goalTypeIdentifier];

        id v13 = [self metricColorsForGoalTypeIdentifier:v12];
        return v13;
      }
      id result = [self metricColorsForGoalTypeIdentifier:[a1 _goalType]];
      goto LABEL_26;
    }
    if (v9 == enum case for ConfigurationType.interval(_:))
    {
      id result = sub_1004A4944();
LABEL_26:
      a1 = result;

      return a1;
    }
    if (v9 == enum case for ConfigurationType.race(_:))
    {
      id result = sub_1004A4AFC();
      goto LABEL_26;
    }
    if (v9 == enum case for ConfigurationType.pacer(_:))
    {
      id result = sub_1004A4CB4();
      goto LABEL_26;
    }
    if (v9 != enum case for ConfigurationType.multisport(_:))
    {
      a1 = [self metricColorsForGoalTypeIdentifier:[a1 _goalType]];

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return a1;
    }
    id result = [self noMetricColors];
    if (result) {
      goto LABEL_26;
    }
    __break(1u);
  }
  else if ([a1 isIntervalWorkout])
  {
    return sub_1004A4944();
  }
  else
  {
    id v15 = [self metricColorsForGoalTypeIdentifier:[a1 _goalType]];
    return v15;
  }
  return result;
}

id sub_1004A5294(unsigned int a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = +[UIColor colorWithRed:(double)a1 / 255.0 green:(double)a2 / 255.0 blue:(double)a3 / 255.0 alpha:1.0];

  return v3;
}

id sub_1004A52F0()
{
  id v0 = [objc_allocWithZone((Class)ARUIMetricColors) init];
  id v1 = sub_1004A5294(0, 0x39u, 0x38u);
  [v0 setNonGradientTextColor:v1];

  id v2 = sub_1004A5294(0, 0x22u, 0x22u);
  [v0 setGradientDarkColor:v2];

  id v3 = sub_1004A5294(0, 0x39u, 0x38u);
  [v0 setGradientLightColor:v3];

  id v4 = sub_1004A5294(0, 0x22u, 0x22u);
  [v0 setAdjustmentButtonBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v0 setValueDisplayColor:v6];

  id v7 = [v5 blackColor];
  [v0 setButtonTextColor:v7];

  id v8 = [v5 blackColor];
  [v0 setButtonDisabledTextColor:v8];

  return v0;
}

id sub_1004A54A8()
{
  id v0 = [objc_allocWithZone((Class)ARUIMetricColors) init];
  id v1 = sub_1004A5294(0xEDu, 0x72u, 0x5Bu);
  [v0 setNonGradientTextColor:v1];

  id v2 = sub_1004A5294(0x33u, 0x15u, 0x11u);
  [v0 setGradientDarkColor:v2];

  id v3 = sub_1004A5294(0x33u, 0x15u, 0x11u);
  [v0 setGradientLightColor:v3];

  id v4 = sub_1004A5294(0, 0xFFu, 0xA8u);
  [v0 setAdjustmentButtonBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v0 setValueDisplayColor:v6];

  id v7 = [v5 blackColor];
  [v0 setButtonTextColor:v7];

  id v8 = [v5 blackColor];
  [v0 setButtonDisabledTextColor:v8];

  return v0;
}

uint64_t sub_1004A5664(uint64_t a1)
{
  return sub_1004A5B6C(a1, qword_10095E3F8, (void (*)(void))sub_1004A5684);
}

id sub_1004A5684()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  id result = [self sharedBehavior];
  if (result)
  {
    id v2 = result;
    [result isStandalonePhoneFitnessMode];

    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1004A5E68();
    return (id)AttributedString.init(_:attributes:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004A5804(uint64_t a1)
{
  return sub_1004A5B6C(a1, qword_10095E410, (void (*)(void))sub_1004A5824);
}

id sub_1004A5824()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  id result = [self sharedBehavior];
  if (result)
  {
    id v2 = result;
    [result isStandalonePhoneFitnessMode];

    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1004A5E68();
    return (id)AttributedString.init(_:attributes:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004A59AC(uint64_t a1)
{
  return sub_1004A5B6C(a1, qword_10095E428, (void (*)(void))sub_1004A59CC);
}

id sub_1004A59CC()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  id result = [self sharedBehavior];
  if (result)
  {
    id v2 = result;
    [result isStandalonePhoneFitnessMode];

    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1004A5E68();
    return (id)AttributedString.init(_:attributes:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004A5B4C(uint64_t a1)
{
  return sub_1004A5B6C(a1, qword_10095E440, (void (*)(void))sub_1004A5CE4);
}

uint64_t sub_1004A5B6C(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v5 - 8);
  id v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for UIButton.Configuration();
  sub_1000258C4(v8, a2);
  sub_1000876DC(v8, (uint64_t)a2);
  static UIButton.Configuration.gray()();
  type metadata accessor for DayViewRingsConfigurationCell();
  a3();
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  UIButton.Configuration.attributedTitle.setter();
  UIButton.Configuration.contentInsets.getter();
  UIButton.Configuration.contentInsets.getter();
  UIButton.Configuration.contentInsets.setter();
  id v10 = sub_10005DB50();
  UIButton.Configuration.baseBackgroundColor.setter();
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.cornerRadius.setter();
  return v11(v13, 0);
}

id sub_1004A5CE4()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  id result = [self sharedBehavior];
  if (result)
  {
    id v2 = result;
    [result isStandalonePhoneFitnessMode];

    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1004A5E68();
    return (id)AttributedString.init(_:attributes:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004A5E68()
{
  id v0 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v0 setAlignment:1];
  uint64_t v1 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  id v2 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 72) = NSParagraphStyleAttributeName;
  *(void *)(inited + 104) = sub_10007E2D8(0, &qword_100956080);
  *(void *)(inited + 80) = v0;
  NSString v4 = NSFontAttributeName;
  id v5 = v2;
  uint64_t v6 = NSParagraphStyleAttributeName;
  id v7 = v0;
  sub_1000DFC2C(inited);
  AttributeContainer.init(_:)();
}

void sub_1004A5FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v40[1] = a2;
  uint64_t v6 = sub_1000AFA94(&qword_10094C820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  id v10 = objc_allocWithZone((Class)UIButton);
  uint64_t v11 = v3;
  id v12 = [v10 init];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
  id v14 = [objc_allocWithZone((Class)UIButton) init];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v13] = v14;
  v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused] = 0;
  id v15 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
  *(void *)id v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v17 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;

  if (a3)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  __n128 v20 = (objc_class *)type metadata accessor for DayViewRingsConfigurationCell();
  v41.receiver = v11;
  v41.super_class = v20;
  uint64_t v21 = (char *)[super initWithStyle:a1 reuseIdentifier:v19];

  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  uint64_t v23 = qword_10094AD10;
  uint64_t v24 = v21;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for UIButton.Configuration();
  uint64_t v26 = sub_1000876DC(v25, (uint64_t)qword_10095E3F8);
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v8, v26, v25);
  uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  v29(v8, 0, 1, v25);
  UIButton.configuration.setter();
  uint64_t v30 = *(void **)&v21[v22];
  [v30 addTarget:v24 action:"onLeftButtonPressed:" forControlEvents:64];
  id v31 = [v24 contentView];
  [v31 addSubview:v30];

  id v32 = [self sharedBehavior];
  if (!v32)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v33 = v32;
  id v34 = [v32 features];

  if (!v34)
  {
LABEL_14:
    __break(1u);
    return;
  }
  unsigned int v35 = [v34 pauseRings];

  if (v35)
  {
    uint64_t v36 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
    if (qword_10094AD18 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1000876DC(v25, (uint64_t)qword_10095E410);
    v28(v8, v37, v25);
    v29(v8, 0, 1, v25);
    UIButton.configuration.setter();
    uint64_t v38 = *(void **)&v24[v36];
    [v38 addTarget:v24 action:"onRightButtonPressed:" forControlEvents:64];
    id v39 = [v24 contentView];
    [v39 addSubview:v38];
  }
  sub_1004A6800();
}

uint64_t sub_1004A6514(char a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094C820);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused) = a1;
  if (a1)
  {
    if (qword_10094AD20 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for UIButton.Configuration();
    uint64_t v7 = sub_1000876DC(v6, (uint64_t)qword_10095E428);
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v9(v5, v7, v6);
    id v10 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    v10(v5, 0, 1, v6);
    UIButton.configuration.setter();
    if (qword_10094AD28 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_10095E440;
  }
  else
  {
    if (qword_10094AD10 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for UIButton.Configuration();
    uint64_t v12 = sub_1000876DC(v6, (uint64_t)qword_10095E3F8);
    uint64_t v13 = *(void *)(v6 - 8);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v9(v5, v12, v6);
    id v10 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
    v10(v5, 0, 1, v6);
    UIButton.configuration.setter();
    if (qword_10094AD18 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_10095E410;
  }
  uint64_t v14 = sub_1000876DC(v6, (uint64_t)v11);
  v9(v5, v14, v6);
  v10(v5, 0, 1, v6);
  return UIButton.configuration.setter();
}

void sub_1004A6800()
{
  id v1 = [self sharedBehavior];
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v2 = v1;
  id v3 = [v1 features];

  if (!v3)
  {
LABEL_10:
    __break(1u);
    return;
  }
  unsigned int v4 = [v3 pauseRings];

  id v5 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v6 = swift_allocObject();
  if (v4)
  {
    *(_OWORD *)(v6 + 16) = xmmword_10075C8A0;
    uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton];
    id v8 = [v7 topAnchor];
    id v9 = [v0 contentView];
    id v10 = [v9 topAnchor];

    id v11 = [v8 constraintEqualToAnchor:v10];
    *(void *)(v6 + 32) = v11;
    id v12 = [v7 leadingAnchor];
    id v13 = [v0 contentView];
    id v14 = [v13 leadingAnchor];

    id v15 = [v12 constraintEqualToAnchor:v14 constant:16.0];
    *(void *)(v6 + 40) = v15;
    id v16 = [v7 heightAnchor];
    id v17 = [v16 constraintGreaterThanOrEqualToConstant:54.0];

    *(void *)(v6 + 48) = v17;
    id v18 = [v7 trailingAnchor];
    NSString v19 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton];
    id v20 = [v19 leadingAnchor];
    id v21 = [v18 constraintEqualToAnchor:v20 constant:-10.0];

    *(void *)(v6 + 56) = v21;
    id v22 = [v7 bottomAnchor];
    id v23 = [v0 contentView];
    id v24 = [v23 bottomAnchor];

    id v25 = [v22 constraintEqualToAnchor:v24];
    *(void *)(v6 + 64) = v25;
    id v26 = [v19 widthAnchor];
    id v27 = [v7 widthAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    *(void *)(v6 + 72) = v28;
    id v29 = [v19 topAnchor];
    id v30 = [v0 contentView];
    id v31 = [v30 topAnchor];

    id v32 = [v29 constraintEqualToAnchor:v31];
    *(void *)(v6 + 80) = v32;
    id v33 = [v19 heightAnchor];
    id v34 = [v33 constraintGreaterThanOrEqualToConstant:54.0];

    *(void *)(v6 + 88) = v34;
    id v35 = [v19 trailingAnchor];
    id v36 = [v0 contentView];
    id v37 = [v36 trailingAnchor];

    id v38 = [v35 constraintEqualToAnchor:v37 constant:-16.0];
    *(void *)(v6 + 96) = v38;
    id v39 = [v19 bottomAnchor];
    id v40 = [v0 contentView];
    id v41 = [v40 bottomAnchor];

    id v42 = [v39 constraintEqualToAnchor:v41];
    *(void *)(v6 + 104) = v42;
  }
  else
  {
    *(_OWORD *)(v6 + 16) = xmmword_10075C680;
    uint64_t v43 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton];
    id v44 = [v43 topAnchor];
    id v45 = [v0 contentView];
    id v46 = [v45 topAnchor];

    id v47 = [v44 constraintEqualToAnchor:v46];
    *(void *)(v6 + 32) = v47;
    id v48 = [v43 leadingAnchor];
    id v49 = [v0 contentView];
    id v50 = [v49 leadingAnchor];

    id v51 = [v48 constraintEqualToAnchor:v50 constant:16.0];
    *(void *)(v6 + 40) = v51;
    id v52 = [v43 heightAnchor];
    id v53 = [v52 constraintGreaterThanOrEqualToConstant:54.0];

    *(void *)(v6 + 48) = v53;
    id v54 = [v43 trailingAnchor];
    id v55 = [v0 contentView];
    id v56 = [v55 trailingAnchor];

    id v57 = [v54 constraintEqualToAnchor:v56 constant:-16.0];
    *(void *)(v6 + 56) = v57;
    id v58 = [v43 bottomAnchor];
    id v59 = [v0 contentView];
    id v60 = [v59 bottomAnchor];

    id v61 = [v58 constraintEqualToAnchor:v60];
    *(void *)(v6 + 64) = v61;
  }
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];
}

uint64_t sub_1004A6FEC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  id v4 = objc_allocWithZone((Class)UIButton);
  id v5 = v1;
  id v6 = [v4 init];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v3] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
  id v8 = [objc_allocWithZone((Class)UIButton) init];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];

  *(void *)&v5[v7] = v8;
  v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused] = 0;
  id v9 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
  *id v9 = 0;
  v9[1] = 0;
  id v10 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
  *id v10 = 0;
  v10[1] = 0;
  id v11 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
  *id v11 = 0;
  v11[1] = 0;
  id v12 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
  *id v12 = 0;
  v12[1] = 0;

  sub_10005E5F8(*v9);
  sub_10005E5F8(*v10);
  sub_10005E5F8(*v11);
  sub_10005E5F8(*v12);

  type metadata accessor for DayViewRingsConfigurationCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1004A716C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewRingsConfigurationCell();
  [super dealloc];
}

uint64_t type metadata accessor for DayViewRingsConfigurationCell()
{
  return self;
}

uint64_t *sub_1004A7260(uint64_t *result, uint64_t *a2)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused) == 1) {
    uint64_t v3 = *result;
  }
  else {
    uint64_t v3 = *a2;
  }
  id v4 = *(void (**)(uint64_t))(v2 + v3);
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    return (uint64_t *)sub_10005E5F8((uint64_t)v4);
  }
  return result;
}

uint64_t *sub_1004A72E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *id v4 = *a2;
    id v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ActivitySharingSettings();
    id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    id v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + v12) = (uint64_t)v14;
    id v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v15;
    id v16 = v14;
    id v17 = v15;
  }
  return v4;
}

void sub_1004A73FC(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  id v6 = *(void **)(a1 + a2[7]);
}

uint64_t sub_1004A7494(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ActivitySharingSettings();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  id v15 = v13;
  id v16 = v14;
  return a1;
}

uint64_t sub_1004A7560(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[7];
  id v15 = *(void **)(a2 + v14);
  id v16 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = v15;
  id v17 = v15;

  return a1;
}

_OWORD *sub_1004A7634(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_1004A76D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[7];
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t sub_1004A7798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A77AC);
}

uint64_t sub_1004A77AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingSettings();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1004A7870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A7884);
}

uint64_t sub_1004A7884(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingSettings();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingFriendDetailInternalDashboardView()
{
  uint64_t result = qword_10095E510;
  if (!qword_10095E510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004A7990()
{
  uint64_t result = type metadata accessor for ActivitySharingSettings();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004A7A38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004A7A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E558);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v34 = static HorizontalAlignment.center.getter();
  static Font.title.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v33 = v15;
  swift_release();
  int v32 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v36 = a1;
  sub_1000AFA94(&qword_10095E560);
  sub_1000A132C(&qword_10095E568, &qword_10095E560);
  id v31 = v9;
  List<>.init(content:)();
  id v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  id v25 = v35;
  v24(v35, v9, v4);
  uint64_t v26 = v33;
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v14 & 1;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = v32;
  *(void *)(a2 + 64) = v17;
  *(void *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v21;
  *(void *)(a2 + 88) = v23;
  *(unsigned char *)(a2 + 96) = 0;
  uint64_t v27 = sub_1000AFA94(&qword_10095E570);
  v24((char *)(a2 + *(int *)(v27 + 48)), v25, v4);
  sub_1000A1750(v10, v12, v14 & 1);
  id v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v28(v31, v4);
  v28(v25, v4);
  sub_1000A06C0(v10, v12, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A7D24@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v112 = sub_1000AFA94(&qword_10095E578);
  uint64_t v114 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v111 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v97 = (char *)&v77 - v5;
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v89 = (void (*)(void, void, void))v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v79 = *(void *)(v80 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v78 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095E580);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v83 = v10;
  uint64_t v84 = v11;
  __chkstk_darwin(v10);
  uint64_t v91 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10095E588);
  uint64_t v85 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  __chkstk_darwin(v13);
  uint64_t v77 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_10095E590) - 8;
  __chkstk_darwin(v81);
  uint64_t v113 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v102 = (uint64_t)&v77 - v17;
  uint64_t v94 = sub_1000AFA94(&qword_10095E598);
  uint64_t v98 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v104 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v110 = (char *)&v77 - v20;
  __chkstk_darwin(v21);
  long long v100 = (char *)&v77 - v22;
  __chkstk_darwin(v23);
  uint64_t v101 = (char *)&v77 - v24;
  uint64_t v108 = sub_1000AFA94(&qword_10095E5A0);
  uint64_t v96 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v109 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v103 = (char *)&v77 - v27;
  uint64_t v82 = sub_1000AFA94(&qword_10095E5A8);
  uint64_t v95 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v107 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v77 - v30;
  __chkstk_darwin(v31);
  uint64_t v92 = (char *)&v77 - v32;
  __chkstk_darwin(v33);
  long long v105 = (char *)&v77 - v34;
  __chkstk_darwin(v35);
  long long v99 = (char *)&v77 - v36;
  __chkstk_darwin(v37);
  id v93 = (char *)&v77 - v38;
  long long v127 = xmmword_1007672C0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v122 = a1;
  sub_1000AFA94(&qword_10095E5B0);
  sub_1000A132C(&qword_10095E5B8, &qword_10095E5B0);
  Section<>.init(header:content:)();
  long long v127 = xmmword_1007672D0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v121 = a1;
  sub_1000AFA94(&qword_10095E5C0);
  sub_1000A132C(&qword_10095E5C8, &qword_10095E5C0);
  Section<>.init(header:content:)();
  *(void *)&long long v127 = 0xD000000000000012;
  *((void *)&v127 + 1) = 0x80000001007CAE90;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v120 = a1;
  sub_1000AFA94(&qword_10095E5D0);
  sub_1000A132C(&qword_10095E5D8, &qword_10095E5D0);
  Section<>.init(header:content:)();
  *(void *)&long long v127 = 0xD000000000000013;
  *((void *)&v127 + 1) = 0x80000001007CAEB0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v119 = a1;
  Section<>.init(header:content:)();
  long long v127 = xmmword_1007672E0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v118 = a1;
  Section<>.init(header:content:)();
  *(void *)&long long v127 = 0xD000000000000010;
  *((void *)&v127 + 1) = 0x80000001007CAED0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  uint64_t v117 = a1;
  Section<>.init(header:content:)();
  long long v127 = xmmword_1007672F0;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  unint64_t v123 = sub_1004AA67C();
  unint64_t v124 = v39;
  char v125 = 0;
  uint64_t v126 = _swiftEmptyArrayStorage;
  uint64_t v116 = a1;
  sub_1000AFA94(&qword_10095E5E0);
  sub_1000A132C(&qword_10095E5E8, &qword_10095E5E0);
  Section<>.init(header:footer:content:)();
  uint64_t v40 = *(void *)(a1 + 8);
  LOBYTE(v127) = *(unsigned char *)a1;
  *((void *)&v127 + 1) = v40;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  LOBYTE(v127) = v123;
  uint64_t v41 = a1;
  uint64_t v42 = a1;
  uint64_t v43 = v78;
  sub_100428EAC(v41, v78);
  unint64_t v44 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v45 = swift_allocObject();
  sub_1004AC7B8(v43, v45 + v44);
  sub_1004AC89C();
  id v46 = v77;
  uint64_t v47 = v83;
  id v48 = v91;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v47);
  sub_100428EAC(v42, v43);
  uint64_t v49 = swift_allocObject();
  sub_1004AC7B8(v43, v49 + v44);
  id v50 = v87;
  static TaskPriority.userInitiated.getter();
  uint64_t v51 = v113;
  id v52 = (char *)(v113 + *(int *)(v81 + 44));
  uint64_t v53 = type metadata accessor for _TaskModifier();
  uint64_t v55 = v88;
  id v54 = v89;
  (*(void (**)(char *, char *, void))(v88 + 16))(&v52[*(int *)(v53 + 20)], v50, v89);
  *(void *)id v52 = &unk_10095E600;
  *((void *)v52 + 1) = v49;
  uint64_t v57 = v85;
  uint64_t v56 = v86;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v51, v46, v86);
  (*(void (**)(char *, void (*)(void, void, void)))(v55 + 8))(v50, v54);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v46, v56);
  sub_1004ACA10(v51, v102);
  long long v127 = xmmword_100767300;
  char v128 = 0;
  long long v129 = _swiftEmptyArrayStorage;
  unint64_t v123 = 0xD000000000000037;
  unint64_t v124 = 0x80000001007CAEF0;
  char v125 = 0;
  uint64_t v126 = _swiftEmptyArrayStorage;
  uint64_t v115 = v42;
  sub_1000AFA94(&qword_10095E608);
  sub_1004ACA80();
  id v58 = v97;
  Section<>.init(header:footer:content:)();
  id v59 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  id v60 = v92;
  uint64_t v61 = v82;
  v59(v92, v93, v82);
  uint64_t v89 = *(void (**)(void, void, void))(v96 + 16);
  v89(v109, v103, v108);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v63 = v94;
  v62(v110, v101, v94);
  v62(v104, v100, v63);
  v59(v106, v99, v61);
  v59(v107, v105, v61);
  sub_1004ACB18(v102, v113);
  uint64_t v91 = *(char **)(v114 + 16);
  ((void (*)(char *, char *, uint64_t))v91)(v111, v58, v112);
  uint64_t v64 = v90;
  v59(v90, v60, v61);
  uint64_t v65 = (int *)sub_1000AFA94(&qword_10095E628);
  v89(&v64[v65[12]], v109, v108);
  uint64_t v66 = v94;
  v62(&v64[v65[16]], v110, v94);
  v62(&v64[v65[20]], v104, v66);
  uint64_t v67 = v61;
  v59(&v64[v65[24]], v106, v61);
  v59(&v64[v65[28]], v107, v61);
  sub_1004ACB18(v113, (uint64_t)&v64[v65[32]]);
  int v68 = &v64[v65[36]];
  uint64_t v69 = v112;
  ((void (*)(char *, char *, uint64_t))v91)(v68, v111, v112);
  uint64_t v70 = *(char **)(v114 + 8);
  v114 += 8;
  uint64_t v91 = v70;
  ((void (*)(char *, uint64_t))v70)(v97, v69);
  sub_10008DB18(v102, &qword_10095E590);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v95 + 8);
  v71(v105, v61);
  v71(v99, v61);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v98 + 8);
  uint64_t v73 = v66;
  v72(v100, v66);
  v72(v101, v66);
  uint64_t v74 = *(void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v75 = v108;
  v74(v103, v108);
  v71(v93, v67);
  ((void (*)(char *, uint64_t))v91)(v111, v112);
  sub_10008DB18(v113, &qword_10095E590);
  v71(v107, v67);
  v71(v106, v67);
  v72(v104, v73);
  v72(v110, v73);
  v74(v109, v75);
  return ((uint64_t (*)(char *, uint64_t))v71)(v92, v67);
}

uint64_t sub_1004A8C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v43);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28);
  uint64_t v44 = a1;
  uint64_t v14 = *(void **)(a1 + v13);
  id v15 = [v14 fullName];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v18;
    uint64_t v42 = v17;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  id v19 = [v14 displayName];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v22 = 0;
  }
  id v23 = [v14 UUID];
  if (!v23)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    goto LABEL_14;
  }
  uint64_t v24 = v23;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v26 = UUID.uuidString.getter();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  id v29 = [*(id *)(v44 + v13) currentDateComponents];
  if (v29)
  {
    uint64_t v30 = v29;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = type metadata accessor for DateComponents();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v5, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = type metadata accessor for DateComponents();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 1, 1, v32);
  }
  uint64_t v33 = Optional.description.getter();
  uint64_t v35 = v34;
  sub_10008DB18((uint64_t)v5, &qword_10094E8A8);
  uint64_t v36 = sub_1004A9120();
  *(void *)a2 = 0x6D614E206C6C7546;
  *(void *)(a2 + 8) = 0xE900000000000065;
  uint64_t v37 = v41;
  *(void *)(a2 + 16) = v42;
  *(void *)(a2 + 24) = v37;
  strcpy((char *)(a2 + 32), "Display Name");
  *(unsigned char *)(a2 + 45) = 0;
  *(_WORD *)(a2 + 46) = -5120;
  *(void *)(a2 + 48) = v40;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = 1145656661;
  *(void *)(a2 + 72) = 0xE400000000000000;
  *(void *)(a2 + 80) = v26;
  *(void *)(a2 + 88) = v28;
  *(void *)(a2 + 96) = 0x6D6F432061746144;
  *(void *)(a2 + 104) = 0xEF73746E656E6F70;
  *(void *)(a2 + 112) = v33;
  *(void *)(a2 + 120) = v35;
  *(void *)(a2 + 128) = 0x6E6F5A20656D6954;
  *(void *)(a2 + 136) = 0xE900000000000065;
  *(void *)(a2 + 144) = v36;
  *(void *)(a2 + 152) = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A9120()
{
  uint64_t v1 = 0x6E776F6E6B6E55;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)v35 - v14;
  id v16 = [*(id *)(v0 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28)) timeZone];
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_17;
  }
  uint64_t v17 = v16;
  v35[0] = v3;
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_17:
    sub_10008DB18((uint64_t)v8, &qword_1009511B8);
    return v1;
  }
  v18(v15, v8, v9);
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  Date.init()();
  uint64_t v19 = TimeZone.abbreviation(for:)();
  unint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v35[0] + 8);
  v22(v5, v2);
  if (v21) {
    uint64_t v23 = v19;
  }
  else {
    uint64_t v23 = 0x6E776F6E6B6E55;
  }
  if (v21) {
    unint64_t v24 = v21;
  }
  else {
    unint64_t v24 = 0xE700000000000000;
  }
  unint64_t v25 = v24;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease();
  v26._object = (void *)0x80000001007CB160;
  v26._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v26);
  Date.init()();
  char v27 = TimeZone.isDaylightSavingTime(for:)();
  v22(v5, v2);
  if (v27) {
    uint64_t v28 = 1702195828;
  }
  else {
    uint64_t v28 = 0x65736C6166;
  }
  if (v27) {
    unint64_t v29 = 0xE400000000000000;
  }
  else {
    unint64_t v29 = 0xE500000000000000;
  }
  unint64_t v30 = v29;
  String.append(_:)(*(Swift::String *)&v28);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 0x3A74657366666F20;
  v31._object = (void *)0xE900000000000020;
  String.append(_:)(v31);
  Date.init()();
  uint64_t v32 = TimeZone.secondsFromGMT(for:)();
  v22(v5, v2);
  v35[1] = v32;
  v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  uint64_t v1 = v36;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v1;
}

id sub_1004A955C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28);
  uint64_t v9 = *(void **)(a1 + v8);
  id result = [v9 contact];
  if (!result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = result;
  uint64_t v53 = v4;
  id v12 = [result fullName];

  if (v12)
  {
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v54 = a1;
  id result = [v9 contact];
  if (!result) {
    goto LABEL_19;
  }
  id v15 = result;
  id v16 = [result shortName];

  if (v16)
  {
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v51 = v14;
  id result = [v9 contact];
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v19 = result;
  id v20 = [result displayName];

  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  id result = [v9 contact];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v23 = result;
  id v24 = [result UUID];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v53);
  uint64_t v28 = *(void **)(v54 + v8);
  id result = [v28 contact];
  if (!result)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v29 = result;
  uint64_t v54 = v22;
  id v30 = [result linkedContactStoreIdentifier];

  uint64_t v48 = v27;
  if (v30)
  {
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v32 = 0;
  }
  uint64_t v33 = v25;
  id result = [v28 contact];
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v34 = result;
  id v35 = [result destinations];

  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = Set.description.getter();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  id result = [v28 contact];
  if (result)
  {
    uint64_t v39 = result;
    id v40 = [result primaryDestinationForMessaging];

    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    *(void *)a2 = 0x6D614E206C6C7546;
    *(void *)(a2 + 8) = 0xE900000000000065;
    uint64_t v44 = v51;
    *(void *)(a2 + 16) = v52;
    *(void *)(a2 + 24) = v44;
    *(void *)(a2 + 32) = 0x614E2074726F6853;
    *(void *)(a2 + 40) = 0xEA0000000000656DLL;
    *(void *)(a2 + 48) = v50;
    *(void *)(a2 + 56) = v18;
    strcpy((char *)(a2 + 64), "Display Name");
    *(unsigned char *)(a2 + 77) = 0;
    *(_WORD *)(a2 + 78) = -5120;
    uint64_t v45 = v54;
    *(void *)(a2 + 80) = v49;
    *(void *)(a2 + 88) = v45;
    *(void *)(a2 + 96) = 1145656661;
    *(void *)(a2 + 104) = 0xE400000000000000;
    uint64_t v46 = v48;
    *(void *)(a2 + 112) = v33;
    *(void *)(a2 + 120) = v46;
    *(void *)(a2 + 128) = 0xD000000000000018;
    *(void *)(a2 + 136) = 0x80000001007CB120;
    *(void *)(a2 + 144) = v53;
    *(void *)(a2 + 152) = v32;
    strcpy((char *)(a2 + 160), "Destinations");
    *(unsigned char *)(a2 + 173) = 0;
    *(_WORD *)(a2 + 174) = -5120;
    *(void *)(a2 + 176) = v36;
    *(void *)(a2 + 184) = v38;
    *(void *)(a2 + 192) = 0xD000000000000013;
    *(void *)(a2 + 200) = 0x80000001007CB140;
    *(void *)(a2 + 208) = v41;
    *(void *)(a2 + 216) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
LABEL_24:
  __break(1u);
  return result;
}

id sub_1004A9AD8@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, void *a3@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28);
  uint64_t v68 = a1;
  id v12 = *(void **)(a1 + v67);
  id v13 = [v12 contact];
  if (!v13)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v14 = v13;
  id v15 = [v13 relationshipStorage];

  id v16 = [v15 *v69];
  id v17 = [v16 version];

  uint64_t v70 = (uint64_t)v17;
  sub_1004ACEEC();
  uint64_t v65 = BinaryInteger.description.getter();
  uint64_t v66 = v18;
  id v19 = [v12 contact];
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v20 = v19;
  id v21 = [v19 relationshipStorage];

  uint64_t v22 = v69;
  id v23 = [v21 *v69];

  id v24 = [v23 UUID];
  if (!v24)
  {
LABEL_24:
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    goto LABEL_25;
  }
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  if (result == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v26 = UUID.uuidString.getter();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  unint64_t v29 = *(void **)(v68 + v67);
  id result = [v29 contact];
  if (!result)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  id v30 = result;
  uint64_t v67 = v26;
  uint64_t v68 = v28;
  id v31 = [result relationshipStorage];

  id v32 = [v31 *v22];
  id v33 = [v32 cloudKitAddress];

  if (v33)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  id result = [v29 contact];
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v37 = result;
  id v38 = [result relationshipStorage];

  id v39 = [v38 *v22];
  id v40 = [v39 addresses];

  if (v40)
  {
    uint64_t v41 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v41 = 0;
  }
  uint64_t v64 = v34;
  uint64_t v70 = v41;
  sub_1000AFA94(&qword_10095E670);
  uint64_t v42 = Optional.description.getter();
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  id result = [v29 contact];
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v45 = result;
  id v46 = [result relationshipStorage];

  id v47 = [v46 *v22];
  id v48 = [v47 preferredReachableAddress];

  if (v48)
  {
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v50 = 0;
  }
  uint64_t v51 = v36;
  id result = [v29 contact];
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v52 = result;
  uint64_t v53 = v44;
  id v54 = [result relationshipStorage];

  id v55 = [v54 *v22];
  id v56 = [v55 preferredReachableService];

  uint64_t v57 = v42;
  if (v56)
  {
    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v60 = v59;
  }
  else
  {
    uint64_t v58 = 0;
    uint64_t v60 = 0;
  }
  *a3 = 0x6E6F6973726556;
  a3[1] = 0xE700000000000000;
  uint64_t v61 = v66;
  a3[2] = v65;
  a3[3] = v61;
  a3[4] = 1145656661;
  a3[5] = 0xE400000000000000;
  uint64_t v62 = v68;
  a3[6] = v67;
  a3[7] = v62;
  a3[8] = 0xD000000000000010;
  a3[9] = 0x80000001007CB0C0;
  a3[10] = v64;
  a3[11] = v51;
  a3[12] = 0x6573736572646441;
  a3[13] = 0xE900000000000073;
  a3[14] = v57;
  a3[15] = v53;
  a3[16] = 0xD000000000000011;
  a3[17] = 0x80000001007CB0E0;
  a3[18] = v63;
  a3[19] = v50;
  a3[20] = 0xD000000000000011;
  a3[21] = 0x80000001007CB100;
  a3[22] = v58;
  a3[23] = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)swift_bridgeObjectRelease();
}

id sub_1004AA1BC()
{
  return sub_1004AA584((SEL *)&selRef_primaryRelationship);
}

id sub_1004AA1C8@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, SEL *a4@<X3>, void *a5@<X8>)
{
  id v40 = sub_1004AA584(a2);
  uint64_t v10 = v9;
  uint64_t v11 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28));
  id result = [v11 contact];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v13 = result;
  id v14 = [result relationshipStorage];

  id v15 = [v14 *a3];
  id v16 = [v14 *a4];
  uint64_t v39 = sub_1004ABBB8(v15, v16);
  uint64_t v18 = v17;

  id result = [v11 contact];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v19 = result;
  uint64_t v38 = v10;
  id v20 = [result relationshipStorage];

  id v21 = [v20 *a4];
  uint64_t v22 = sub_1004ABCF0(v21, (SEL *)&selRef_secureCloudUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeFailure);
  uint64_t v37 = v23;

  id result = [v11 contact];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v24 = result;
  id v25 = [result relationshipStorage];

  id v26 = [v25 *a4];
  uint64_t v27 = sub_1004ABCF0(v26, (SEL *)&selRef_secureCloudMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationFailed);
  uint64_t v29 = v28;

  id result = [v11 contact];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  id v30 = result;
  id v31 = [result relationshipStorage];

  id v32 = [v31 *a4];
  id v33 = [v32 secureCloudZoneName];

  if (v33)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  *a5 = 0x656E6961746E6F43;
  a5[1] = 0xE900000000000072;
  a5[2] = v40;
  a5[3] = v38;
  a5[4] = 0xD000000000000010;
  a5[5] = 0x80000001007CB020;
  a5[6] = v39;
  a5[7] = v18;
  a5[8] = 0xD00000000000001DLL;
  a5[9] = 0x80000001007CB040;
  a5[10] = v22;
  a5[11] = v37;
  a5[12] = 0xD000000000000017;
  a5[13] = 0x80000001007CB060;
  a5[14] = v27;
  a5[15] = v29;
  a5[16] = 0x6D614E20656E6F5ALL;
  a5[17] = 0xE900000000000065;
  a5[18] = v34;
  a5[19] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (id)swift_bridgeObjectRelease();
}

id sub_1004AA578()
{
  return sub_1004AA584((SEL *)&selRef_primaryRemoteRelationship);
}

id sub_1004AA584(SEL *a1)
{
  id result = [*(id *)(v1 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28)) contact];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result relationshipStorage];

    id v6 = [v5 *a1];
    id v7 = [v6 cloudType];
    if (v7)
    {
      if (v7 == (id)1) {
        uint64_t v8 = 0x646574617267694DLL;
      }
      else {
        uint64_t v8 = 0x6E776F6E6B6E55;
      }
    }
    else
    {
      uint64_t v8 = 0x79636167654CLL;
    }

    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004AA67C()
{
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() + 28));
  id v2 = [v1 displayName];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  sub_1000AFA94((uint64_t *)&unk_100958790);
  uint64_t v7 = Optional.description.getter();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 8238;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  _StringGuts.grow(_:)(32);
  id v12 = [v1 displayName:v4, v6];
  if (v12)
  {
    id v13 = v12;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v14 = Optional.description.getter();
  id v16 = v15;
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._object = (void *)0x80000001007CAFC0;
  v18._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v18);
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = 0xD000000000000032;
  v20._object = (void *)0x80000001007CAFE0;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  return 0xD00000000000002ELL;
}

uint64_t sub_1004AA8B4()
{
  return Toggle.init(isOn:label:)();
}

void sub_1004AA93C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x80000001007CAF70;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_1004AA96C(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v9 - 8);
  Swift::String v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100428EAC(a3, (uint64_t)v8);
  type metadata accessor for MainActor();
  uint64_t v13 = static MainActor.shared.getter();
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = v14 + v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  sub_1004AC7B8((uint64_t)v8, v16 + v14);
  *(unsigned char *)(v16 + v15) = (_BYTE)a2;
  sub_1000713D0((uint64_t)v11, (uint64_t)&unk_10095E660, v16);
  return swift_release();
}

uint64_t sub_1004AAB30(uint64_t a1)
{
  v1[4] = a1;
  v1[5] = type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  id v2 = (void *)swift_task_alloc();
  v1[7] = v2;
  *id v2 = v1;
  v2[1] = sub_1004AABE0;
  return sub_1004AADC8();
}

uint64_t sub_1004AABE0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 65) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004AAD24, v3, v2);
}

uint64_t sub_1004AAD24()
{
  char v1 = *(unsigned char *)(v0 + 65);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  uint64_t v3 = *(void *)(v2 + 8);
  *(unsigned char *)(v0 + 16) = *(unsigned char *)v2;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 64) = v1;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1004AADC8()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_1009555F0);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ActivitySharingSettings();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v5;
  v1[12] = v4;
  return _swift_task_switch(sub_1004AAF48, v5, v4);
}

uint64_t sub_1004AAF48()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  uint64_t v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  id v6 = [*(id *)(v4 + *(int *)(v5 + 28)) UUID];
  uint64_t v7 = v0[6];
  if (!v6)
  {
    uint64_t v12 = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(v0[4] + 56))(v0[6], 1, 1, v0[3]);
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  uint64_t v11 = v0[3];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v9, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v11);
  if (v12 == 1)
  {
LABEL_7:
    __break(1u);
    return ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)(v12, v13);
  }
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[3];
  uint64_t v16 = v0[4];
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;
  v0[13] = v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  Swift::String v20 = (void *)swift_task_alloc();
  v0[14] = v20;
  *Swift::String v20 = v0;
  v20[1] = sub_1004AB124;
  uint64_t v12 = v17;
  uint64_t v13 = v19;
  return ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)(v12, v13);
}

uint64_t sub_1004AB124(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(unsigned char *)(*v1 + 120) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 96);
  uint64_t v7 = *(void *)(v2 + 88);
  return _swift_task_switch(sub_1004AB2CC, v7, v6);
}

uint64_t sub_1004AB2CC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 120);
  return v1(v2);
}

uint64_t sub_1004AB354()
{
  return ForEach<>.init(_:id:content:)();
}

void sub_1004AB490(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

double sub_1004AB4E8@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_1004AB5CC(v3, (uint64_t)v10);
  *(_OWORD *)&v12[71] = v10[4];
  *(_OWORD *)&v12[87] = v10[5];
  *(_OWORD *)&v12[103] = v11[0];
  *(_OWORD *)&v12[7] = v10[0];
  *(_OWORD *)&v12[23] = v10[1];
  *(_OWORD *)&v12[39] = v10[2];
  *(_OWORD *)&v12[55] = v10[3];
  long long v5 = *(_OWORD *)&v12[96];
  *(_OWORD *)(a2 + 129) = *(_OWORD *)((char *)v11 + 9);
  long long v6 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a2 + 97) = v6;
  long long v7 = *(_OWORD *)&v12[32];
  *(_OWORD *)(a2 + 65) = *(_OWORD *)&v12[48];
  *(_OWORD *)(a2 + 49) = v7;
  double result = *(double *)&v12[16];
  long long v9 = *(_OWORD *)v12;
  *(_OWORD *)(a2 + 33) = *(_OWORD *)&v12[16];
  *(_OWORD *)(a2 + 17) = v9;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 113) = v5;
  return result;
}

uint64_t sub_1004AB5CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950CD0);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = static HorizontalAlignment.leading.getter();
  sub_1004AB9A8(a1, (uint64_t)&v49);
  uint64_t v40 = v50;
  int v39 = v51;
  uint64_t v11 = v52;
  uint64_t v12 = v53;
  uint64_t v13 = v54;
  char v14 = v55;
  uint64_t v41 = v56;
  uint64_t v42 = v49;
  if (ASCloudDevice.isEligibleForMigration.getter())
  {
    Image.init(systemName:)();
    static SymbolRenderingMode.monochrome.getter();
    uint64_t v15 = type metadata accessor for SymbolRenderingMode();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
    uint64_t v16 = Image.symbolRenderingMode(_:)();
    swift_release();
    sub_10008DB18((uint64_t)v9, &qword_10094E320);
    uint64_t v17 = static Color.green.getter();
    uint64_t v46 = v16;
    uint64_t v47 = v17;
    char v48 = 0;
  }
  else
  {
    Image.init(systemName:)();
    uint64_t v18 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v19 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v36 = v11;
    uint64_t v21 = v13;
    uint64_t v22 = v12;
    uint64_t v23 = v10;
    uint64_t v24 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v6, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v6, 0, 1, v19);
    uint64_t v10 = v23;
    uint64_t v12 = v22;
    uint64_t v13 = v21;
    uint64_t v11 = v36;
    uint64_t v25 = Image.renderingMode(_:)();
    swift_release();
    sub_10008DB18((uint64_t)v6, &qword_100950CD0);
    uint64_t v46 = v25;
    uint64_t v47 = 0;
    char v48 = 1;
  }
  sub_1000AFA94(&qword_10095E640);
  sub_1004ACB90();
  _ConditionalContent<>.init(storage:)();
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  char v28 = v51;
  LOBYTE(v49) = 1;
  char v29 = v39;
  LOBYTE(v46) = v39;
  char v45 = v14;
  char v44 = 1;
  unsigned __int8 v43 = v51;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v30 = v42;
  uint64_t v31 = v40;
  *(void *)(a2 + 24) = v42;
  *(void *)(a2 + 32) = v31;
  *(unsigned char *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v12;
  uint64_t v37 = v13;
  uint64_t v38 = v12;
  *(void *)(a2 + 64) = v13;
  *(unsigned char *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v41;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 1;
  *(void *)(a2 + 104) = v26;
  *(void *)(a2 + 112) = v27;
  *(unsigned char *)(a2 + 120) = v28;
  uint64_t v32 = v26;
  sub_1000A1750(v30, v31, v29);
  swift_bridgeObjectRetain();
  uint64_t v33 = v12;
  uint64_t v34 = v37;
  sub_1000A1750(v33, v37, v14);
  swift_bridgeObjectRetain();
  sub_1004ACC30(v32, v27, v28);
  sub_1004ACC6C(v32, v27, v28);
  sub_1000A06C0(v30, v31, v29);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v38, v34, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004AB9A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = ASCloudDevice.deviceName.getter();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  id v6 = [a1 osVersion];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v7._countAndFlagsBits = 10272;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  id v8 = [a1 buildNumber];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  static Font.callout.getter();
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v11) = v18 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v19 = Text.foregroundStyle<A>(_:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_1000A06C0(v14, v16, (char)v11);
  swift_bridgeObjectRelease();
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v27;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v23;
  sub_1000A1750(v28, v27, 0);
  swift_bridgeObjectRetain();
  sub_1000A1750(v19, v21, v25);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v19, v21, v25);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v28, v27, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004ABBB8(void *a1, void *a2)
{
  if ([a1 secureCloudUpgradeCompleted]) {
    return 0x64656C62616E45;
  }
  if ([a1 secureCloudUpgradeAvailable]) {
    return 0x6C62616C69617641;
  }
  if ([a1 secureCloudMigrationAvailable]) {
    return 0xD000000000000013;
  }
  if ([a2 secureCloudMigrationCompleted]) {
    return 0xD000000000000012;
  }
  return 0x616C696176616E55;
}

uint64_t sub_1004ABCB8(void *a1)
{
  return sub_1004ABCF0(a1, (SEL *)&selRef_secureCloudUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeFailure);
}

uint64_t sub_1004ABCD4(void *a1)
{
  return sub_1004ABCF0(a1, (SEL *)&selRef_secureCloudMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationFailed);
}

uint64_t sub_1004ABCF0(void *a1, SEL *a2, SEL *a3, SEL *a4)
{
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v36 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v35 - v18;
  *(void *)&double v21 = __chkstk_darwin(v20).n128_u64[0];
  uint64_t v23 = (char *)&v35 - v22;
  if (objc_msgSend(a1, *a2, v21))
  {
    id v24 = [a1 *a3];
    if (v24)
    {
      char v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v26(v13, v19, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
      {
        v26(v23, v13, v14);
        Swift::String v27 = Date.formatted()();
        uint64_t v37 = 0x3A73736563637553;
        unint64_t v38 = 0xE900000000000020;
        String.append(_:)(v27);
        swift_bridgeObjectRelease();
        uint64_t v28 = v37;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        return v28;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
  }
  uint64_t v28 = 0x616C696176616E55;
  if ([a1 secureCloudUpgradeFailed])
  {
    id v29 = [a1 *a4];
    if (v29)
    {
      uint64_t v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v31(v10, v19, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
      {
        uint64_t v32 = v36;
        v31(v36, v10, v14);
        Swift::String v33 = Date.formatted()();
        uint64_t v37 = 0x203A64656C696146;
        unint64_t v38 = 0xE800000000000000;
        String.append(_:)(v33);
        swift_bridgeObjectRelease();
        uint64_t v28 = v37;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v32, v14);
        return v28;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v10, 1, 1, v14);
    }
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095B890);
  }
  return v28;
}

uint64_t sub_1004AC10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 120) = a5;
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_1009555F0);
  *(void *)(v5 + 48) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ActivitySharingSettings();
  *(void *)(v5 + 56) = v7;
  *(void *)(v5 + 64) = *(void *)(v7 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 80) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 88) = v9;
  *(void *)(v5 + 96) = v8;
  return _swift_task_switch(sub_1004AC290, v9, v8);
}

uint64_t sub_1004AC290()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  id v6 = [*(id *)(v4 + *(int *)(v5 + 28)) UUID];
  uint64_t v7 = *(void *)(v0 + 48);
  if (!v6)
  {
    uint64_t v12 = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 32) + 56))(*(void *)(v0 + 48), 1, 1, *(void *)(v0 + 24));
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 24);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v9, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v11);
  if (v12 == 1)
  {
LABEL_7:
    __break(1u);
    return ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(v12, v13, v14);
  }
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v16 = *(void *)(v0 + 24);
  uint64_t v17 = *(void *)(v0 + 32);
  uint64_t v18 = UUID.uuidString.getter();
  uint64_t v20 = v19;
  *(void *)(v0 + 104) = v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  double v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v21;
  void *v21 = v0;
  v21[1] = sub_1004AC474;
  uint64_t v12 = *(unsigned __int8 *)(v0 + 120);
  uint64_t v13 = v18;
  uint64_t v14 = v20;
  return ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(v12, v13, v14);
}

uint64_t sub_1004AC474()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *(void *)(*v0 + 64);
  uint64_t v4 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_1004AC614, v6, v5);
}

uint64_t sub_1004AC614()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004AC698@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_1000AFA94(&qword_10095E550);
  return sub_1004A7A54(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1004AC6E4@<X0>(char *a1@<X8>)
{
  return sub_1004A7D24(*(void *)(v1 + 16), a1);
}

uint64_t sub_1004AC6EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1004A8C74(*(void *)(v1 + 16), a1);
}

id sub_1004AC6F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1004A955C(*(void *)(v1 + 16), a1);
}

id sub_1004AC6FC@<X0>(void *a1@<X8>)
{
  return sub_1004A9AD8(*(void *)(v1 + 16), (SEL *)&selRef_primaryRelationship, a1);
}

id sub_1004AC720@<X0>(void *a1@<X8>)
{
  return sub_1004A9AD8(*(void *)(v1 + 16), (SEL *)&selRef_primaryRemoteRelationship, a1);
}

id sub_1004AC744@<X0>(void *a1@<X8>)
{
  return sub_1004AA1C8(*(void *)(v1 + 16), (SEL *)&selRef_primaryRelationship, (SEL *)&selRef_legacyRelationship, (SEL *)&selRef_secureCloudRelationship, a1);
}

id sub_1004AC778@<X0>(void *a1@<X8>)
{
  return sub_1004AA1C8(*(void *)(v1 + 16), (SEL *)&selRef_primaryRemoteRelationship, (SEL *)&selRef_legacyRemoteRelationship, (SEL *)&selRef_secureCloudRemoteRelationship, a1);
}

uint64_t sub_1004AC7AC()
{
  return sub_1004AA8B4();
}

uint64_t sub_1004AC7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AC81C(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1004AA96C(a1, a2, v6);
}

unint64_t sub_1004AC89C()
{
  unint64_t result = qword_10095E5F0;
  if (!qword_10095E5F0)
  {
    sub_1000A1370(&qword_10095E580);
    sub_1000A132C(&qword_10095E5E8, &qword_10095E5E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095E5F0);
  }
  return result;
}

uint64_t sub_1004AC944()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000DBD6C;
  return sub_1004AAB30(v3);
}

uint64_t sub_1004ACA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004ACA78()
{
  return sub_1004AB354();
}

unint64_t sub_1004ACA80()
{
  unint64_t result = qword_10095E610;
  if (!qword_10095E610)
  {
    sub_1000A1370(&qword_10095E608);
    sub_1000A132C(&qword_10095E618, &qword_10095E620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E610);
  }
  return result;
}

uint64_t sub_1004ACB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

const char *sub_1004ACB80()
{
  return "identifier";
}

unint64_t sub_1004ACB90()
{
  unint64_t result = qword_10095E648;
  if (!qword_10095E648)
  {
    sub_1000A1370(&qword_10095E640);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095E648);
  }
  return result;
}

uint64_t sub_1004ACC30(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    swift_retain();
    uint64_t v3 = vars8;
  }
  return swift_retain();
}

uint64_t sub_1004ACC6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_release();
  if ((a3 & 1) == 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1004ACCB8()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_release();
  unint64_t v4 = v0 + v2 + v1[7];
  uint64_t v5 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_1004ACDD0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  char v9 = *(unsigned char *)(v1 + v5 + *(void *)(v4 + 64));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10005DB5C;
  return sub_1004AC10C(a1, v6, v7, v8, v9);
}

unint64_t sub_1004ACEEC()
{
  unint64_t result = qword_10095E668;
  if (!qword_10095E668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E668);
  }
  return result;
}

uint64_t destroy for InfoView()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InfoView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InfoView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InfoView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InfoView()
{
  return &type metadata for InfoView;
}

uint64_t sub_1004AD084()
{
  return sub_1000A132C(&qword_10095E678, &qword_10095E680);
}

uint64_t sub_1004AD0C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004AD0DC@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  static Font.body.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v2 = Text.font(_:)();
  uint64_t v22 = v3;
  uint64_t v23 = v2;
  char v5 = v4;
  uint64_t v24 = v6;
  swift_bridgeObjectRelease();
  swift_release();
  char v7 = v5 & 1;
  swift_bridgeObjectRetain();
  static Font.footnote.getter();
  uint64_t v8 = Text.font(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  char v13 = v12 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v14 = Text.foregroundStyle<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_1000A06C0(v8, v10, v13);
  swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v22;
  *(unsigned char *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v24;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v16;
  *(unsigned char *)(a1 + 48) = v20;
  *(void *)(a1 + 56) = v18;
  sub_1000A1750(v23, v22, v7);
  swift_bridgeObjectRetain();
  sub_1000A1750(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v14, v16, v20);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v23, v22, v7);
  return swift_bridgeObjectRelease();
}

__n128 sub_1004AD2DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_1004AD0DC((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  __n128 result = v9;
  long long v8 = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_1004AD378()
{
  return sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
}

uint64_t sub_1004AD3B4@<X0>(void *a1@<X8>)
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v4 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10095E6E8);
  __chkstk_darwin(v7 - 8);
  __n128 v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v33 - v11;
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController____lazy_storage___loadDetailView];
  swift_beginAccess();
  sub_1004AFA4C(v13, (uint64_t)v12);
  uint64_t DetailsView = type metadata accessor for LoadDetailsView();
  uint64_t v15 = *(void *)(DetailsView - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, DetailsView) != 1) {
    return sub_1004AFB88((uint64_t)v12, (uint64_t)a1, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  }
  sub_10008DB18((uint64_t)v12, &qword_10095E6E8);
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  uint64_t v40 = a1;
  uint64_t v17 = v6;
  uint64_t v18 = *(void **)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  id v39 = v1;
  char v19 = *(char **)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  char v20 = *(void **)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  id v35 = *(id *)&v19[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  id v36 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  id v38 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  uint64_t v21 = *(void *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider);
  uint64_t v22 = (uint64_t)v17;
  (*(void (**)(void))(v4 + 104))();
  id v37 = v18;
  uint64_t v34 = v19;
  id v33 = v20;
  id v23 = v35;
  id v24 = v36;
  id v25 = v38;
  uint64_t v26 = v21;
  swift_retain();
  uint64_t v27 = (uint64_t)v9;
  uint64_t v28 = (uint64_t)v39;
  id v29 = v39;
  uint64_t v32 = v22;
  uint64_t v30 = v40;
  sub_1005E6DB0((uint64_t)v37, (uint64_t)v34, (uint64_t)v33, (uint64_t)v23, (uint64_t)v24, (uint64_t)v25, v26, v28, v40, v32, 0);
  sub_1004AFAB4((uint64_t)v30, v27, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, DetailsView);
  swift_beginAccess();
  sub_1004AFB1C(v27, v13);
  return swift_endAccess();
}

char *sub_1004AD748(void *a1)
{
  uint64_t DetailsView = type metadata accessor for LoadDetailsView();
  uint64_t v4 = *(void *)(DetailsView - 8);
  __chkstk_darwin(DetailsView);
  uint64_t v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000AFA94(&qword_10095E6F8);
  uint64_t v45 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  __n128 v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - v12;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController____lazy_storage___loadDetailView], 1, 1, DetailsView, v11);
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context] = a1;
  DetailViewController = (objc_class *)type metadata accessor for LoadDetailViewController();
  v46.receiver = v1;
  v46.super_class = DetailViewController;
  id v15 = a1;
  uint64_t v16 = (char *)[v46 initWithNibName:0 bundle:0];
  sub_1004AD3B4(v6);
  type metadata accessor for BalanceDataProvider();
  sub_1004B05F4(&qword_10095E700, (void (*)(uint64_t))type metadata accessor for LoadDetailsView);
  sub_1004B05F4(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  uint64_t v17 = v7;
  uint64_t v18 = v45;
  View.environment<A>(_:)();
  sub_1004AFBF0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v13, v17);
  id v19 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095E708));
  char v20 = (void *)UIHostingController.init(rootView:)();
  id v21 = [v20 view];
  uint64_t v22 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView];
  *(void *)&v16[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView] = v21;

  [v16 addChildViewController:v20];
  __n128 result = (char *)[v16 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v24 = result;
  __n128 result = (char *)[v20 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v25 = result;
  [v24 addSubview:result];

  __n128 result = (char *)[v16 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v26 = result;
  id v27 = [self blackColor];
  [v26 setBackgroundColor:v27];

  uint64_t v28 = self;
  id v29 = v16;
  id v30 = [v28 mainBundle];
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v30 localizedStringForKey:v31 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 setTitle:v33];

  id v34 = [v29 navigationController];
  if (v34)
  {
    id v35 = v34;
    [v34 setToolbarHidden:0];
  }
  id v36 = [self configurationWithPointSize:4 weight:3 scale:17.0];
  id v37 = [objc_allocWithZone((Class)UIButton) init];
  id v38 = v36;
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [self smm_systemImageNamed:v39 withConfiguration:v38];

  [v37 setImage:v40 forState:0];
  [v37 addTarget:v29 action:"didTapOnInfoButton:" forControlEvents:64];
  id v41 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v37];
  id v42 = [v29 navigationItem];
  id v43 = v41;
  [v42 setRightBarButtonItem:v43];

  (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
  return v29;
}

void sub_1004ADF3C()
{
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for LoadDetailViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView];
  if (!v1) {
    goto LABEL_13;
  }
  id v2 = v1;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  [v3 addSubview:v2];

  id v5 = [v2 leadingAnchor];
  id v6 = [v0 view];
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  id v8 = [v6 safeAreaLayoutGuide];

  id v9 = [v8 leadingAnchor];
  id v10 = [v5 constraintEqualToAnchor:v9];

  [v10 setActive:1];
  id v11 = [v2 trailingAnchor];
  id v12 = [v0 view];
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = v12;
  id v14 = [v12 safeAreaLayoutGuide];

  id v15 = [v14 trailingAnchor];
  id v16 = [v11 constraintEqualToAnchor:v15];

  [v16 setActive:1];
  id v17 = [v2 topAnchor];
  id v18 = [v0 view];
  if (v18)
  {
    id v19 = v18;
    id v20 = [v18 safeAreaLayoutGuide];

    id v21 = [v20 topAnchor];
    id v22 = [v17 constraintEqualToAnchor:v21];

    [v22 setActive:1];
    id v23 = [v2 bottomAnchor];
    id v24 = [v0 view];
    if (v24)
    {
      id v25 = v24;
      id v26 = [v24 bottomAnchor];

      id v27 = [v23 constraintEqualToAnchor:v26];
      [v27 setActive:1];

      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004AE478(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1004AE4CC(int a1, uint64_t a2, const char *a3)
{
  int v18 = a1;
  uint64_t v4 = type metadata accessor for TrainingLoadURLBuilder.Source();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.trainingLoad.getter();
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    id v17 = a3;
    id v15 = v14;
    *(_DWORD *)id v14 = 67109120;
    int v19 = v18 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v17, v15, 8u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for EffortUtilities();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for TrainingLoadURLBuilder.Source.fitness(_:), v4);
  static EffortUtilities.sendDidDeeplinktoVitalsAnalyticsEvent(source:vitalsState:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1004AE720(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10008E75C(a1, (uint64_t)v14);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (swift_dynamicCast())
  {
    uint64_t v9 = v13;
    sub_1004AEC2C((uint64_t)v13);
  }
  else
  {
    sub_10008E75C(a1, (uint64_t)v14);
    type metadata accessor for MindfulnessSessionViewModel();
    if (swift_dynamicCast())
    {
      uint64_t v10 = v13;
      sub_1004AEE64(v13);
    }
    else
    {
      sub_10008E75C(a1, (uint64_t)v14);
      int v11 = swift_dynamicCast();
      id v12 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      if (v11)
      {
        v12(v4, 0, 1, v5);
        sub_1004AFB88((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
        sub_1004AEF54((uint64_t)v8);
        sub_1004AFBF0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
      }
      else
      {
        v12(v4, 1, 1, v5);
        sub_10008DB18((uint64_t)v4, &qword_100950DA8);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
  }
}

void sub_1004AE9D4(char a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel);
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  int v11 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  id v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  id v17 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  int v18 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider);
  int v19 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  id v20 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_100612FC8(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v17, v18, v19, v20);
  id v22 = v13;
  id v14 = [v21 navigationController];
  if (v14)
  {
    id v15 = v14;
    [v14 pushViewController:v22 animated:a1 & 1];
  }
}

void sub_1004AEC2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v16[3] = type metadata accessor for AAUIAwardsDataProvider();
  v16[4] = &protocol witness table for AAUIAwardsDataProvider;
  v16[0] = v3;
  uint64_t v4 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v5 = objc_allocWithZone(v4);
  sub_10008E75C((uint64_t)v16, (uint64_t)v5 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v15.receiver = v5;
  v15.super_class = v4;
  id v6 = v3;
  id v7 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v16);

  LOBYTE(v12) = 0;
  id v8 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:shouldExposeDeepLinkToTrainingLoadFromEffort:", a1, 0, *(void *)(*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager), v7,
         v12);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v13 navigationController];
    if (v10)
    {
      int v11 = v10;
      [v10 pushViewController:v9 animated:1];
    }
  }
}

void sub_1004AEE64(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  id v5 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  id v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
  uint64_t v9 = sub_10039EDA8(a1, v5, v6);
  id v7 = [v2 navigationController];
  if (v7)
  {
    id v8 = v7;
    [v7 pushViewController:v9 animated:1];
  }
}

void sub_1004AEF54(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FitnessPlusStackViewModel();
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v43 = v5;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  id v7 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v46[3] = type metadata accessor for AAUIAwardsDataProvider();
  v46[4] = &protocol witness table for AAUIAwardsDataProvider;
  v46[0] = v7;
  id v8 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v9 = objc_allocWithZone(v8);
  sub_10008E75C((uint64_t)v46, (uint64_t)v9 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v45.receiver = v9;
  v45.super_class = v8;
  id v10 = v7;
  id v42 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v46);

  sub_1004AFAB4(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
  int v11 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  uint64_t v12 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  id v13 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  id v14 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  objc_super v15 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel);
  id v16 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  id v17 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  int v18 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  int v19 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  id v34 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  id v37 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  id v39 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  id v40 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  id v41 = objc_allocWithZone((Class)type metadata accessor for StackDetailViewController());
  id v38 = v11;
  id v36 = v12;
  id v35 = v13;
  id v20 = v14;
  id v21 = v15;
  id v22 = v16;
  id v23 = v17;
  id v24 = v18;
  id v25 = v19;
  id v26 = v34;
  id v27 = v42;
  id v28 = v37;
  id v29 = v39;
  id v30 = v40;
  NSString v31 = sub_1002F5640((uint64_t)v43, v38, v36, v35, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  id v32 = [v44 navigationController];
  if (v32)
  {
    NSString v33 = v32;
    [v32 pushViewController:v31 animated:1];
  }
}

id sub_1004AF2C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadDetailViewController();
  return [super dealloc];
}

uint64_t sub_1004AF350()
{
  return type metadata accessor for LoadDetailViewController();
}

uint64_t type metadata accessor for LoadDetailViewController()
{
  uint64_t result = qword_10095E6C8;
  if (!qword_10095E6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004AF3A4()
{
  sub_1004AF44C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004AF44C()
{
  if (!qword_10095E6D8)
  {
    type metadata accessor for LoadDetailsView();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095E6D8);
    }
  }
}

void sub_1004AF4A4(uint64_t a1)
{
}

void sub_1004AF4D4(uint64_t a1)
{
}

void sub_1004AF504(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v43 = a1;
  uint64_t v44 = a3;
  uint64_t v42 = type metadata accessor for EffortUtilities.OvernightVitalsState();
  uint64_t v40 = *(void *)(v42 - 8);
  uint64_t v41 = *(void *)(v40 + 64);
  __chkstk_darwin(v42);
  id v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for BalanceURLBuilder.Source();
  uint64_t v7 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095E6E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for BalanceURLBuilder();
  uint64_t v13 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  objc_super v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  int v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = [self sharedApplication];
  BalanceURLBuilder.init()();
  uint64_t v19 = *a2;
  uint64_t v20 = type metadata accessor for BalanceURLBuilder.Route();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v12, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v20);
  uint64_t v22 = v37;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for BalanceURLBuilder.Source.fitness(_:), v37);
  BalanceURLBuilder.url(route:source:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  sub_10008DB18((uint64_t)v12, &qword_10095E6E0);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  URL._bridgeToObjectiveC()(v23);
  id v25 = v24;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v35);
  sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1004B05F4((unint64_t *)&qword_10094B970, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v28 = v39;
  uint64_t v27 = v40;
  uint64_t v29 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v43, v42);
  uint64_t v30 = v27;
  unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v32 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v32 + v31, v28, v29);
  aBlock[4] = v45;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004AE478;
  void aBlock[3] = v46;
  NSString v33 = _Block_copy(aBlock);
  swift_release();
  id v34 = v38;
  [v38 openURL:v25 options:isa completionHandler:v33];
  _Block_release(v33);
}

uint64_t sub_1004AFA40(int a1)
{
  return sub_1004AFC60(a1, "Launching Overnight Metrics Onboarding Successful: %{BOOL}d");
}

uint64_t sub_1004AFA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AFAB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004AFB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095E6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AFB88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004AFBF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004AFC54(int a1)
{
  return sub_1004AFC60(a1, "Launching Overnight Metrics Successful: %{BOOL}d");
}

uint64_t sub_1004AFC60(int a1, const char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for EffortUtilities.OvernightVitalsState() - 8);
  return sub_1004AE4CC(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

id sub_1004AFCD4(uint64_t a1, int a2, int a3, id a4, char a5)
{
  uint64_t v6 = v5;
  id v94 = a4;
  int v79 = a3;
  LODWORD(v95) = a2;
  int v93 = a5 & 1;
  uint64_t v78 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DispatchQoS();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for DispatchTime();
  uint64_t v72 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v70 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v70 - v11;
  static os_log_type_t.default.getter();
  uint64_t v12 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100752410;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000AA64C();
  *(void *)(v13 + 64) = v14;
  *(void *)(v13 + 32) = 0xD000000000000050;
  *(void *)(v13 + 40) = 0x80000001007BE520;
  type metadata accessor for Date();
  sub_1004B05F4((unint64_t *)&qword_10094C018, (void (*)(uint64_t))&type metadata accessor for Date);
  id v15 = v12;
  uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v14;
  *(void *)(v13 + 72) = v16;
  *(void *)(v13 + 80) = v17;
  LOWORD(aBlock[0]) = 0;
  uint64_t v18 = String.init<A>(describing:)();
  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v14;
  *(void *)(v13 + 112) = v18;
  *(void *)(v13 + 120) = v19;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)&v5[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache;
  uint64_t v22 = (objc_class *)*(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  unsigned __int8 v25 = [*(id *)((char *)v22 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate) isEqualToDate:isa];
  id v26 = *(void **)((char *)v22 + v24);
  *(void *)((char *)v22 + v24) = isa;
  uint64_t v27 = isa;

  id v92 = v6;
  if (v25)
  {
    id v28 = v27;
  }
  else
  {
    id v28 = (objc_class *)[self defaultCenter];
    if (qword_10094A7E8 != -1) {
      swift_once();
    }
    [(objc_class *)v28 postNotificationName:qword_1009979E0 object:v6];

    uint64_t v22 = v27;
  }

  uint64_t v29 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider);
  uint64_t v30 = *(void **)(v20 + v21);
  unint64_t v31 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  uint64_t v32 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionDataProvider);
  NSString v33 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  id v34 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  uint64_t v35 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  uint64_t v36 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  id v84 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  id v85 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider);
  id v87 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  id v88 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  id v90 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  id v91 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  uint64_t v86 = (char *)objc_allocWithZone((Class)type metadata accessor for HistoryPagingViewController());
  id v37 = v29;
  id v89 = v30;
  id v38 = v31;
  id v83 = v32;
  id v82 = v33;
  id v81 = v34;
  id v39 = v35;
  id v80 = v36;
  id v40 = v84;
  id v41 = v85;
  id v85 = v41;
  id v42 = v87;
  id v87 = v42;
  id v43 = v88;
  id v88 = v43;
  id v44 = v90;
  id v45 = v91;
  uint64_t v68 = v42;
  uint64_t v69 = v43;
  uint64_t v66 = v40;
  uint64_t v67 = v41;
  uint64_t v46 = v40;
  uint64_t v47 = v37;
  char v48 = v37;
  uint64_t v49 = v89;
  unsigned __int8 v51 = v82;
  uint64_t v50 = v83;
  uint64_t v52 = v81;
  id v94 = sub_100402C30(v48, v89, v38, v83, v82, v81, v39, (uint64_t)v80, v66, v67, v68, v69, v44, v45, 0, (uint64_t)v94, v93, 0, v86);

  id v53 = v94;
  id v54 = [v92 navigationController];
  if (v54)
  {
    char v55 = v54;
    [v54 pushViewController:v53 animated:v79 & 1];
  }
  if (v95)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v56 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v57 = v70;
    static DispatchTime.now()();
    uint64_t v58 = v71;
    + infix(_:_:)();
    uint64_t v95 = *(void (**)(char *, uint64_t))(v72 + 8);
    v95(v57, v96);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v53;
    aBlock[4] = sub_1002D51E4;
    aBlock[5] = v59;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008CB198;
    uint64_t v60 = _Block_copy(aBlock);
    id v61 = v53;
    swift_release();
    uint64_t v62 = v73;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1004B05F4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    uint64_t v63 = v75;
    uint64_t v64 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v60);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v64);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v76);
    v95(v58, v96);
  }
  return v53;
}

uint64_t sub_1004B05BC()
{
  return swift_deallocObject();
}

uint64_t sub_1004B05F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1004B0640()
{
  id v0 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  id result = [v0 setScrollDirection:1];
  qword_10095E710 = (uint64_t)v0;
  return result;
}

char *sub_1004B07E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  uint64_t v7 = qword_10094AD30;
  uint64_t v8 = v3;
  if (v7 != -1) {
    swift_once();
  }
  id v9 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:qword_10095E710 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems] = _swiftEmptyArrayStorage;
  uint64_t v10 = &v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v25.receiver = v8;
  v25.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell();
  id v12 = [super initWithStyle:a1 reuseIdentifier:v11];

  uint64_t v13 = (char *)v12;
  id v14 = [v13 contentView];
  uint64_t v15 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  [v14 addSubview:*(void *)&v13[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView]];

  uint64_t v16 = *(void **)&v13[v15];
  [v16 setDataSource:v13];
  [v16 setDelegate:v13];
  uint64_t v17 = self;
  id v18 = v16;
  id v19 = [v17 secondarySystemGroupedBackgroundColor];
  [v18 setBackgroundColor:v19];

  uint64_t v20 = *(void **)&v13[v15];
  type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v22 = v20;
  NSString v23 = String._bridgeToObjectiveC()();
  [v22 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v23];

  sub_1004B0AA8();
  return v13;
}

void sub_1004B0AA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10075C680;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 topAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7 constant:sub_1000FC040()];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 leadingAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 leadingAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11 constant:sub_1000FC040()];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 trailingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:-sub_1000FC040()];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 heightAnchor];
  id v18 = [v17 constraintEqualToConstant:164.0];

  *(void *)(v3 + 56) = v18;
  id v19 = [v4 bottomAnchor];
  id v20 = [v1 contentView];
  id v21 = [v20 bottomAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21 constant:-sub_1000FC040()];
  *(void *)(v3 + 64) = v22;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

uint64_t sub_1004B0DD4(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for SeymourArtworkSizingBehavior();
  __chkstk_darwin(v5);
  id v7 = (int64x2_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout);
  *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout) = a1;
  id v9 = a1;

  id v10 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext);
  *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext) = a2;
  id v11 = a2;

  uint64_t v12 = *(void *)&v11[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  *id v7 = vdupq_n_s64(0x4064800000000000uLL);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = v9;
  sub_100493F70(v14, (uint64_t)v7, v12, v14, v13);

  sub_100388CE4((uint64_t)v7);
  return swift_release();
}

uint64_t sub_1004B0F14(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    swift_bridgeObjectRetain();
    id v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a1;
    aBlock[4] = sub_1004B1E84;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008CB210;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1004B1E8C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    static os_log_type_t.error.getter();
    id v18 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10074E640;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_1000AA64C();
    *(void *)(v19 + 32) = 0xD000000000000025;
    *(void *)(v19 + 40) = 0x80000001007CA690;
    *(void *)(v19 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    *(void *)(v19 + 104) = sub_1002320AC();
    *(void *)(v19 + 72) = a2;
    id v20 = v18;
    id v21 = a2;
    os_log(_:dso:log:_:_:)();

    return swift_bridgeObjectRelease();
  }
}

void sub_1004B12E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems) = a2;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = objc_retain(*(id *)(v5
                           + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView));

    [v7 reloadData];
  }
}

id sub_1004B1458()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell()
{
  return self;
}

id sub_1004B15BC(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  unint64_t v7 = IndexPath.row.getter();
  unint64_t v8 = v7;
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems);
  if ((v9 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v11 = v16;
      goto LABEL_6;
    }
LABEL_12:
    swift_unknownObjectRelease();
    return v6;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v7 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = *(id *)(v9 + 8 * v8 + 32);
LABEL_6:
    uint64_t v13 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView);
    id v14 = v6;
    [v13 setImage:v12];
  }
  return v6;
}

void sub_1004B1A10()
{
  uint64_t v1 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  if (qword_10094AD30 != -1) {
    swift_once();
  }
  id v2 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:qword_10095E710 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems] = _swiftEmptyArrayStorage;
  uint64_t v3 = &v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004B1B34()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout);
  if (v3
    && (NSString v4 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext)) != 0)
  {
    id v5 = v4;
    id v6 = v3;
    uint64_t v7 = IndexPath.row.getter();
    objc_allocWithZone((Class)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController());
    unint64_t v8 = (char *)v5;
    id v22 = v6;
    uint64_t v9 = sub_10063FC7C(v22, v8, v7);
    uint64_t v10 = *(void (**)(char *))(v1
                                        + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem);
    if (v10)
    {
      id v21 = v9;
      swift_retain();
      v10(v21);

      sub_10005E5F8((uint64_t)v10);
      uint64_t v11 = v21;
    }
    else
    {

      uint64_t v11 = (char *)v22;
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    id v12 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100752410;
    *(void *)(v13 + 56) = &type metadata for String;
    unint64_t v14 = sub_1000AA64C();
    unint64_t v15 = v14;
    *(void *)(v13 + 64) = v14;
    *(void *)(v13 + 32) = 0xD000000000000022;
    *(void *)(v13 + 40) = 0x80000001007CB3D0;
    uint64_t v16 = *(void **)(v0 + v2);
    if (v16)
    {
      uint64_t v24 = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      unint64_t v25 = sub_1002320AC();
      *(void *)&long long v23 = v16;
      sub_100093E60(&v23, v13 + 72);
    }
    else
    {
      *(void *)(v13 + 96) = &type metadata for String;
      *(void *)(v13 + 104) = v14;
      *(void *)(v13 + 72) = 0x6F6B726F77206F6ELL;
      *(void *)(v13 + 80) = 0xEA00000000007475;
    }
    id v17 = v12;
    id v18 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext);
    if (v18)
    {
      uint64_t v24 = type metadata accessor for FitnessAppContext();
      unint64_t v25 = sub_1004B1E8C(&qword_10095E768, (void (*)(uint64_t))type metadata accessor for FitnessAppContext);
      *(void *)&long long v23 = v18;
      sub_100093E60(&v23, v13 + 112);
    }
    else
    {
      *(void *)(v13 + 136) = &type metadata for String;
      *(void *)(v13 + 144) = v15;
      *(void *)(v13 + 112) = 0xD000000000000016;
      *(void *)(v13 + 120) = 0x80000001007CB400;
    }
    id v19 = v16;
    id v20 = v18;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004B1E0C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004B1E44()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1004B1E84()
{
  sub_1004B12E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004B1E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B1ED4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void *sub_1004B1F14(void *a1, void *a2, uint64_t a3)
{
  NSString v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    NSString v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v4, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    *((unsigned char *)v4 + v7[5]) = *((unsigned char *)a2 + v7[5]);
    uint64_t v8 = v7[6];
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v7[7];
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v13;
    *(void *)((char *)v4 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    *((unsigned char *)v4 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    uint64_t v14 = v7[10];
    uint64_t v32 = (char *)v4 + v14;
    unint64_t v15 = (char *)a2 + v14;
    uint64_t v16 = type metadata accessor for Date();
    id v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    id v18 = v13;
    swift_bridgeObjectRetain();
    v17(v32, v15, v16);
    v17((char *)v4 + v7[11], (char *)a2 + v7[11], v16);
    *(void *)((char *)v4 + v7[12]) = *(void *)((char *)a2 + v7[12]);
    *(void *)((char *)v4 + v7[13]) = *(void *)((char *)a2 + v7[13]);
    *(void *)((char *)v4 + v7[14]) = *(void *)((char *)a2 + v7[14]);
    *(void *)((char *)v4 + v7[15]) = *(void *)((char *)a2 + v7[15]);
    *(void *)((char *)v4 + v7[16]) = *(void *)((char *)a2 + v7[16]);
    *(_OWORD *)((char *)v4 + v7[17]) = *(_OWORD *)((char *)a2 + v7[17]);
    *(void *)((char *)v4 + v7[18]) = *(void *)((char *)a2 + v7[18]);
    uint64_t v19 = v7[19];
    id v20 = *(void **)((char *)a2 + v19);
    *(void *)((char *)v4 + v19) = v20;
    uint64_t v21 = v7[20];
    id v22 = *(void **)((char *)a2 + v21);
    *(void *)((char *)v4 + v21) = v22;
    uint64_t v23 = *(int *)(a3 + 20);
    uint64_t v24 = *(int *)(a3 + 24);
    unint64_t v25 = (void *)((char *)v4 + v23);
    id v26 = (void *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    *((unsigned char *)v4 + v24) = *((unsigned char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v28 = v20;
    id v29 = v22;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1004B2170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v6[5]) = *(unsigned char *)(a2 + v6[5]);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = v6[7];
  uint64_t v12 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v12;
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v13 = v6[10];
  uint64_t v30 = a1 + v13;
  uint64_t v14 = a2 + v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  id v17 = v12;
  swift_bridgeObjectRetain();
  v16(v30, v14, v15);
  v16(a1 + v6[11], a2 + v6[11], v15);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
  *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
  *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
  *(void *)(a1 + v6[16]) = *(void *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
  uint64_t v18 = v6[19];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  uint64_t v20 = v6[20];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v21;
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = (void *)(a1 + v22);
  unint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v27 = v19;
  id v28 = v21;
  swift_retain();
  return a1;
}

uint64_t sub_1004B2380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[7];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v15 = v7[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(a1 + v7[11], a2 + v7[11], v18);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  uint64_t v20 = v7[17];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  uint64_t v23 = v7[19];
  uint64_t v24 = *(void **)(a2 + v23);
  unint64_t v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = v7[20];
  id v28 = *(void **)(a2 + v27);
  id v29 = *(void **)(a1 + v27);
  *(void *)(a1 + v27) = v28;
  id v30 = v28;

  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = (void *)(a1 + v31);
  NSString v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1004B25F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = v7[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  uint64_t v13 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_1004B27A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[7];
  id v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v15 = v7[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(a1 + v7[11], a2 + v7[11], v18);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  swift_release();
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  swift_release();
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  uint64_t v20 = v7[19];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = v7[20];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = *(int *)(a3 + 20);
  unint64_t v25 = (void *)(a1 + v24);
  id v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *unint64_t v25 = v28;
  v25[1] = v27;
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1004B29BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B29D0);
}

uint64_t sub_1004B29D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004B2A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B2AA8);
}

uint64_t sub_1004B2AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutChartView()
{
  uint64_t result = qword_10095E7D0;
  if (!qword_10095E7D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004B2BB4()
{
  uint64_t result = type metadata accessor for WorkoutChartViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004B2C54()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1004B2C70()
{
  double result = 4.0;
  __asm { FMOV            V1.2D, #6.0 }
  xmmword_100998100 = _Q1;
  *(_OWORD *)&qword_100998110 = xmmword_100767510;
  return result;
}

void sub_1004B2C8C()
{
  uint64_t v0 = self;
  id v1 = UIFontSystemFontDesignRounded;
  id v2 = [v0 _preferredFontForTextStyle:UIFontTextStyleBody design:v1 variant:256];

  if (v2)
  {
    uint64_t v3 = self;
    NSString v4 = UIContentSizeCategoryLarge;
    id v5 = [v3 traitCollectionWithPreferredContentSizeCategory:v4];

    id v6 = [v2 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v5];
    if (v6)
    {
      qword_100998120 = (uint64_t)v6;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004B2D94(uint64_t a1)
{
}

void sub_1004B2DA8(uint64_t a1)
{
}

void sub_1004B2DBC(uint64_t a1, void *a2, void *a3)
{
  id v4 = [self _preferredFontForTextStyle:*a2 variant:256];
  if (v4)
  {
    id v5 = v4;
    id v6 = self;
    uint64_t v7 = UIContentSizeCategoryLarge;
    id v8 = [v6 traitCollectionWithPreferredContentSizeCategory:v7];

    id v9 = [v5 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v8];
    if (v9)
    {
      *a3 = v9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004B2EA0()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v1 = self;
  id v2 = UIContentSizeCategoryLarge;
  id v3 = [v1 traitCollectionWithPreferredContentSizeCategory:v2];

  id v4 = [v0 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v3];
  if (v4) {
    qword_100998138 = (uint64_t)v4;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1004B2F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v3 = type metadata accessor for WorkoutChartView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v107 = v3 - 8;
  uint64_t v90 = v4;
  __chkstk_darwin(v3 - 8);
  uint64_t v91 = v5;
  uint64_t v93 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for TapGesture();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1000AFA94(&qword_10095E818);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  long long v99 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095E820);
  __chkstk_darwin(v8 - 8);
  uint64_t v89 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000AFA94(&qword_10095E828);
  __chkstk_darwin(v94);
  uint64_t v95 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10095E830);
  uint64_t v111 = *(void *)(v11 - 8);
  uint64_t v112 = v11;
  __chkstk_darwin(v11);
  id v92 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v13 - 8);
  uint64_t v106 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v104 = v15;
  uint64_t v105 = v16;
  __chkstk_darwin(v15);
  id v88 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10095E838);
  __chkstk_darwin(v18 - 8);
  uint64_t v110 = (uint64_t)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v109 = (char *)&v87 - v21;
  uint64_t v22 = type metadata accessor for DynamicTypeSize();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94(&qword_10095E840);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_10095E848);
  uint64_t v102 = *(void *)(v29 - 8);
  uint64_t v103 = v29;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095E850);
  uint64_t v33 = v32 - 8;
  __chkstk_darwin(v32);
  uint64_t v108 = (uint64_t)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  id v37 = (char *)&v87 - v36;
  __chkstk_darwin(v38);
  uint64_t v114 = (uint64_t)&v87 - v39;
  *(void *)uint64_t v28 = static HorizontalAlignment.leading.getter();
  *((void *)v28 + 1) = 0;
  v28[16] = 0;
  uint64_t v40 = sub_1000AFA94(&qword_10095E858);
  sub_1004B3B78(a1, (uint64_t)&v28[*(int *)(v40 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, enum case for DynamicTypeSize.large(_:), v22);
  sub_1000A132C(&qword_10095E860, &qword_10095E840);
  View.dynamicTypeSize(_:)();
  id v41 = v25;
  uint64_t v42 = v104;
  uint64_t v43 = a1;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v41, v22);
  sub_10008DB18((uint64_t)v28, &qword_10095E840);
  LOBYTE(v22) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v102;
  uint64_t v52 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v37, v31, v103);
  id v54 = &v37[*(int *)(v33 + 44)];
  *id v54 = v22;
  *((void *)v54 + 1) = v45;
  *((void *)v54 + 2) = v47;
  *((void *)v54 + 3) = v49;
  *((void *)v54 + 4) = v51;
  v54[40] = 0;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v52);
  uint64_t v55 = v105;
  sub_1000AEEC8((uint64_t)v37, v114, &qword_10095E850);
  uint64_t v56 = *(void *)(v43 + *(int *)(v107 + 28) + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess();
  uint64_t v57 = v56;
  uint64_t v58 = v106;
  sub_1000AEF2C(v57, v106, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v58, 1, v42) == 1)
  {
    sub_10008DB18(v58, (uint64_t *)&unk_10095B890);
    uint64_t v59 = 1;
    uint64_t v61 = v111;
    uint64_t v60 = v112;
    uint64_t v62 = (uint64_t)v109;
  }
  else
  {
    uint64_t v63 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v88, v58, v42);
    uint64_t v64 = (uint64_t *)(v43 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 24));
    uint64_t v65 = *v64;
    uint64_t v66 = v64[1];
    if (qword_10094AD40 != -1) {
      swift_once();
    }
    id v67 = sub_100378320(v63, (void *)qword_100998120);
    uint64_t v68 = v89;
    sub_1004B4B9C(v65, v66, v67, v89);

    if (qword_10094A798 != -1) {
      swift_once();
    }
    uint64_t v69 = qword_100997980;
    uint64_t v70 = v95;
    sub_1000AEF2C(v68, v95, &qword_10095E820);
    uint64_t v71 = (uint64_t *)(v70 + *(int *)(v94 + 36));
    *uint64_t v71 = v69;
    v71[1] = (uint64_t)sub_1004B5300;
    v71[2] = 0;
    sub_10008DB18(v68, &qword_10095E820);
    uint64_t v72 = v96;
    TapGesture.init(count:)();
    uint64_t v73 = v93;
    sub_1004B7378(v43, v93, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
    unint64_t v74 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    uint64_t v75 = swift_allocObject();
    sub_1004B6D88(v73, v75 + v74);
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_1004B6DEC;
    *(void *)(v76 + 24) = v75;
    uint64_t v77 = v99;
    uint64_t v78 = v98;
    Gesture.onEnded(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v72, v78);
    static GestureMask.all.getter();
    sub_1004B73E8(&qword_10095E870, &qword_10095E828, (void (*)(void))sub_1004B6DF0);
    sub_1000A132C(&qword_10095E8E8, &qword_10095E818);
    int v79 = v92;
    uint64_t v80 = v101;
    View.gesture<A>(_:including:)();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v77, v80);
    sub_10008DB18(v70, &qword_10095E828);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v63, v42);
    uint64_t v61 = v111;
    uint64_t v60 = v112;
    uint64_t v62 = (uint64_t)v109;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v109, v79, v112);
    uint64_t v59 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v62, v59, 1, v60);
  uint64_t v81 = v114;
  uint64_t v82 = v108;
  sub_1000AEF2C(v114, v108, &qword_10095E850);
  uint64_t v83 = v110;
  sub_1000AEF2C(v62, v110, &qword_10095E838);
  uint64_t v84 = v113;
  sub_1000AEF2C(v82, v113, &qword_10095E850);
  uint64_t v85 = sub_1000AFA94(&qword_10095E868);
  sub_1000AEF2C(v83, v84 + *(int *)(v85 + 48), &qword_10095E838);
  sub_10008DB18(v62, &qword_10095E838);
  sub_10008DB18(v81, &qword_10095E850);
  sub_10008DB18(v83, &qword_10095E838);
  return sub_10008DB18(v82, &qword_10095E850);
}

uint64_t sub_1004B3B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v92 = sub_1000AFA94(&qword_10095E8F0);
  __chkstk_darwin(v92);
  uint64_t v91 = (uint64_t)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for WorkoutChart();
  __chkstk_darwin(v74);
  uint64_t v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_10095E8F8);
  uint64_t v81 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v75 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_10095E900);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v76 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000AFA94(&qword_10095E908) - 8;
  __chkstk_darwin(v78);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_10095E910) - 8;
  __chkstk_darwin(v79);
  uint64_t v73 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_10095E918);
  __chkstk_darwin(v85);
  uint64_t v84 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095E920);
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v90 = v12;
  __chkstk_darwin(v12);
  id v88 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v86 = (char *)&v72 - v15;
  __chkstk_darwin(v16);
  uint64_t v87 = (char *)&v72 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_10095E928);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10095E930);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v72 - v26;
  *(void *)uint64_t v20 = static VerticalAlignment.bottom.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v28 = sub_1000AFA94(&qword_10095E938);
  sub_1004B5330(a1, (uint64_t)&v20[*(int *)(v28 + 44)]);
  char v29 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v24, &qword_10095E928);
  uint64_t v38 = &v24[*(int *)(v22 + 44)];
  *uint64_t v38 = v29;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10008DB18((uint64_t)v20, &qword_10095E928);
  uint64_t v77 = v27;
  sub_1000AEEC8((uint64_t)v24, (uint64_t)v27, &qword_10095E930);
  sub_1004B7378(a1, (uint64_t)v5, type metadata accessor for WorkoutChartViewModel);
  uint64_t v72 = type metadata accessor for WorkoutChartView();
  uint64_t v39 = a1;
  uint64_t v40 = v74;
  id v41 = (uint64_t *)&v5[*(int *)(v74 + 20)];
  type metadata accessor for WorkoutChartProperties();
  sub_1004B7774(&qword_100968D00, (void (*)(uint64_t))type metadata accessor for WorkoutChartProperties);
  swift_retain();
  *id v41 = ObservedObject.init(wrappedValue:)();
  v41[1] = v42;
  uint64_t v94 = v39;
  uint64_t v43 = sub_1000AFA94(&qword_10095E940);
  uint64_t v44 = sub_1004B7774(&qword_10095E948, (void (*)(uint64_t))type metadata accessor for WorkoutChart);
  uint64_t v45 = sub_1000A132C(&qword_10095E950, &qword_10095E940);
  uint64_t v46 = v75;
  uint64_t v47 = v40;
  uint64_t v48 = (uint64_t)v73;
  View.chartXAxis<A>(content:)();
  sub_100097DD0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WorkoutChart);
  *(void *)&long long v95 = v47;
  *((void *)&v95 + 1) = v43;
  *(void *)&long long v96 = v44;
  *((void *)&v96 + 1) = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v49 = v76;
  uint64_t v50 = v80;
  View.chartYAxis(_:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v50);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v51 = v82;
  uint64_t v52 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v9, v49, v83);
  uint64_t v53 = &v9[*(int *)(v78 + 44)];
  long long v54 = v96;
  *(_OWORD *)uint64_t v53 = v95;
  *((_OWORD *)v53 + 1) = v54;
  *((_OWORD *)v53 + 2) = v97;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
  sub_1000AEF2C((uint64_t)v9, v48, &qword_10095E908);
  *(_WORD *)(v48 + *(int *)(v79 + 44)) = 0;
  sub_10008DB18((uint64_t)v9, &qword_10095E908);
  if (qword_10094A798 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_100997980;
  uint64_t v56 = v84;
  sub_1000AEF2C(v48, v84, &qword_10095E910);
  uint64_t v57 = (uint64_t *)(v56 + *(int *)(v85 + 36));
  *uint64_t v57 = v55;
  v57[1] = (uint64_t)sub_10026EB78;
  v57[2] = 0;
  sub_10008DB18(v48, &qword_10095E910);
  if (*(unsigned char *)(v39 + *(int *)(v72 + 24)) == 1)
  {
    uint64_t v58 = v91;
    sub_1004B4608(v91);
    uint64_t v59 = sub_1000AFA94(&qword_10095E958);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
  }
  else
  {
    uint64_t v60 = sub_1000AFA94(&qword_10095E958);
    uint64_t v58 = v91;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v91, 1, 1, v60);
  }
  static GestureMask.all.getter();
  sub_1004B73E8(&qword_10095E960, &qword_10095E918, (void (*)(void))sub_1004B7468);
  sub_1004B7668();
  uint64_t v61 = v86;
  View.gesture<A>(_:including:)();
  sub_10008DB18(v58, &qword_10095E8F0);
  sub_10008DB18(v56, &qword_10095E918);
  uint64_t v63 = v89;
  uint64_t v62 = v90;
  uint64_t v64 = v87;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v87, v61, v90);
  uint64_t v65 = (uint64_t)v77;
  sub_1000AEF2C((uint64_t)v77, (uint64_t)v24, &qword_10095E930);
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  id v67 = v88;
  v66(v88, v64, v62);
  uint64_t v68 = v93;
  sub_1000AEF2C((uint64_t)v24, v93, &qword_10095E930);
  uint64_t v69 = sub_1000AFA94(&qword_10095E998);
  v66((char *)(v68 + *(int *)(v69 + 48)), v67, v62);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v63 + 8);
  v70(v64, v62);
  sub_10008DB18(v65, &qword_10095E930);
  v70(v67, v62);
  return sub_10008DB18((uint64_t)v24, &qword_10095E930);
}

uint64_t sub_1004B4608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for TapGesture();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095E818);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WorkoutChartView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v12);
  uint64_t v36 = type metadata accessor for DragGesture();
  uint64_t v13 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10095C808);
  uint64_t v37 = *(void *)(v16 - 8);
  uint64_t v38 = v16;
  __chkstk_darwin(v16);
  uint64_t v35 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  sub_1004B7378(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1004B6D88((uint64_t)v11, v19 + v18);
  sub_1004B7774(&qword_10095C850, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_1004B7774(&qword_10095C858, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  uint64_t v20 = v36;
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  uint64_t v21 = v39;
  TapGesture.init(count:)();
  sub_1004B7378(v34, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
  uint64_t v22 = swift_allocObject();
  sub_1004B6D88((uint64_t)v11, v22 + v18);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1004B6DEC;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = v40;
  uint64_t v25 = v43;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v25);
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  uint64_t v28 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v45, v24, v42);
  uint64_t v29 = v28 + *(int *)(sub_1000AFA94(&qword_10095E958) + 52);
  uint64_t v31 = v37;
  uint64_t v30 = v38;
  uint64_t v32 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v29, v35, v38);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v30);
}

uint64_t sub_1004B4B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v72 = a4;
  uint64_t v68 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v66);
  uint64_t v69 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_10095E888);
  __chkstk_darwin(v67);
  uint64_t v71 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100959218);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = v4 + *(int *)(type metadata accessor for WorkoutChartView() + 20);
  uint64_t v19 = *(void *)(v65 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess();
  sub_1000AEF2C(v19, (uint64_t)v14, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095B890);
    BOOL v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_100378068((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v21 = type metadata accessor for WorkoutChartDataElement(0);
    BOOL v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v11, 1, v21) != 1;
    sub_10008DB18((uint64_t)v11, &qword_100959218);
  }
  uint64_t v62 = static HorizontalAlignment.leading.getter();
  sub_1004B6820(v63, v64, a3, (uint64_t)v79);
  if (qword_10094AD38 != -1) {
    swift_once();
  }
  uint64_t v63 = *((void *)&xmmword_100998100 + 1);
  uint64_t v64 = xmmword_100998100;
  uint64_t v60 = unk_100998118;
  uint64_t v61 = qword_100998110;
  int v59 = static Edge.Set.all.getter();
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v22 = v81;
  uint64_t v23 = v82;
  char v24 = v83;
  uint64_t v57 = v84;
  uint64_t v58 = v80;
  uint64_t v56 = v85;
  if (v20)
  {
    uint64_t v25 = type metadata accessor for WorkoutChartViewModel(0);
    sub_100651620(*(unsigned char *)(v4 + *(int *)(v25 + 20)));
    uint64_t v26 = Color.init(_:)();
  }
  else
  {
    uint64_t v26 = static Color.gray.getter();
  }
  uint64_t v27 = v26;
  *(_OWORD *)&v73[87] = v79[5];
  *(_OWORD *)&v73[103] = v79[6];
  *(_OWORD *)&v73[119] = v79[7];
  *(_OWORD *)&v73[135] = v79[8];
  *(_OWORD *)&v73[23] = v79[1];
  *(_OWORD *)&v73[39] = v79[2];
  *(_OWORD *)&v73[55] = v79[3];
  *(_OWORD *)&v73[71] = v79[4];
  char v74 = 1;
  *(_OWORD *)&v73[7] = v79[0];
  char v75 = 0;
  char v77 = v22;
  char v76 = v24;
  char v28 = static Edge.Set.all.getter();
  char v29 = v77;
  char v30 = v76;
  uint64_t v31 = static Color.black.getter();
  uint64_t KeyPath = swift_getKeyPath();
  *(_OWORD *)((char *)&v78[14] + 1) = *(_OWORD *)&v73[96];
  *(_OWORD *)((char *)&v78[16] + 1) = *(_OWORD *)&v73[112];
  *(_OWORD *)((char *)&v78[18] + 1) = *(_OWORD *)&v73[128];
  *(_OWORD *)((char *)&v78[6] + 1) = *(_OWORD *)&v73[32];
  *(_OWORD *)((char *)&v78[8] + 1) = *(_OWORD *)&v73[48];
  *(_OWORD *)((char *)&v78[10] + 1) = *(_OWORD *)&v73[64];
  *(_OWORD *)((char *)&v78[12] + 1) = *(_OWORD *)&v73[80];
  *(_OWORD *)((char *)&v78[2] + 1) = *(_OWORD *)v73;
  v78[0] = v62;
  v78[1] = 0;
  LOBYTE(v78[2]) = 1;
  v78[20] = *(void *)&v73[143];
  *(_OWORD *)((char *)&v78[4] + 1) = *(_OWORD *)&v73[16];
  LOBYTE(v78[21]) = v59;
  v78[22] = v64;
  v78[23] = v63;
  v78[24] = v61;
  v78[25] = v60;
  LOBYTE(v78[26]) = 0;
  v78[27] = v58;
  LOBYTE(v78[28]) = v29;
  v78[29] = v23;
  LOBYTE(v78[30]) = v30;
  v78[31] = v57;
  v78[32] = v56;
  v78[33] = v27;
  LOBYTE(v78[34]) = v28;
  v78[35] = KeyPath;
  v78[36] = v31;
  uint64_t v33 = (uint64_t)v69;
  uint64_t v34 = &v69[*(int *)(v66 + 20)];
  uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v36 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)uint64_t v33 = _Q0;
  uint64_t v42 = v70;
  sub_1004B7378(v33, v70, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v42 + *(int *)(v68 + 36)) = 256;
  uint64_t v43 = v71;
  sub_1000AEF2C(v42, (uint64_t)&v71[*(int *)(v67 + 36)], &qword_10094E460);
  memcpy(v43, v78, 0x128uLL);
  sub_1004B71AC((uint64_t)v78);
  sub_10008DB18(v42, &qword_10094E460);
  sub_100097DD0(v33, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1004B7288((uint64_t)v78);
  uint64_t v44 = *(void *)(v65 + 8);
  int v45 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8);
  double v46 = *(double *)(v44 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth) + -150.0;
  swift_retain();
  double v47 = COERCE_DOUBLE(sub_100339F24());
  LOBYTE(v33) = v48;
  swift_release();
  double v49 = v47 + -75.0 + -1.0;
  if (v33) {
    double v49 = -76.0;
  }
  if (v45) {
    double v50 = -150.0;
  }
  else {
    double v50 = v46;
  }
  if (v50 < v49) {
    double v49 = v50;
  }
  if (v49 < 0.0) {
    double v51 = 0.0;
  }
  else {
    double v51 = v49;
  }
  uint64_t v52 = v72;
  sub_1000AEF2C((uint64_t)v43, v72, &qword_10095E888);
  uint64_t v53 = v52 + *(int *)(sub_1000AFA94(&qword_10095E820) + 36);
  *(double *)uint64_t v53 = v51;
  *(void *)(v53 + 8) = 0;
  return sub_10008DB18((uint64_t)v43, &qword_10095E888);
}

double sub_1004B5300()
{
  static VerticalAlignment.bottom.getter();
  ViewDimensions.subscript.getter();
  return v0 + -2.0;
}

uint64_t sub_1004B5330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000AFA94(&qword_10095E9C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - v7;
  *(void *)uint64_t v8 = static HorizontalAlignment.leading.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v9 = sub_1000AFA94(&qword_10095E9C8);
  sub_1004B5644(a1, &v8[*(int *)(v9 + 44)]);
  if (qword_10094AD58 != -1) {
    swift_once();
  }
  sub_10037885C((void *)qword_100998138);
  AttributedString.init(_:)();
  uint64_t v10 = Text.init(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  type metadata accessor for WorkoutChartView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  char v15 = v34;
  static Color.gray.getter();
  if ((v15 & 1) == 0)
  {
    Color.opacity(_:)();
    swift_release();
  }
  char v16 = v14 & 1;
  uint64_t v17 = Text.foregroundColor(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  swift_release();
  char v24 = v21 & 1;
  sub_1000A06C0(v10, v12, v16);
  swift_bridgeObjectRelease();
  uint64_t v25 = v32;
  sub_1000AEF2C((uint64_t)v8, v32, &qword_10095E9C0);
  uint64_t v26 = v33;
  sub_1000AEF2C(v25, v33, &qword_10095E9C0);
  uint64_t v27 = sub_1000AFA94(&qword_10095E9D0);
  uint64_t v28 = v26 + *(int *)(v27 + 48);
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = v26 + *(int *)(v27 + 64);
  *(void *)uint64_t v29 = v17;
  *(void *)(v29 + 8) = v19;
  *(unsigned char *)(v29 + 16) = v24;
  *(void *)(v29 + 24) = v23;
  sub_1000A1750(v17, v19, v24);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v8, &qword_10095E9C0);
  sub_1000A06C0(v17, v19, v24);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v25, &qword_10095E9C0);
}

uint64_t sub_1004B5644@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  __chkstk_darwin(v3 - 8);
  uint64_t v85 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for DynamicTypeSize();
  uint64_t v95 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v6 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v88 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v87 = (char *)&v77 - v9;
  __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v77 - v11;
  __chkstk_darwin(v12);
  uint64_t v84 = (char *)&v77 - v13;
  __chkstk_darwin(v14);
  uint64_t v94 = (char *)&v77 - v15;
  uint64_t v83 = type metadata accessor for WorkoutChartViewModel(0);
  char v16 = (uint64_t *)(a1 + *(int *)(v83 + 24));
  uint64_t v17 = v16[1];
  uint64_t v96 = *v16;
  uint64_t v97 = v17;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  if (qword_10094AD48 != -1) {
    swift_once();
  }
  id v23 = (id)qword_100998128;
  Font.init(_:)();
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  LODWORD(v82) = v27;
  swift_release();
  sub_1000A06C0(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  type metadata accessor for WorkoutChartView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  char v28 = v97;
  static Color.white.getter();
  uint64_t v91 = a1;
  if ((v28 & 1) == 0)
  {
    Color.opacity(_:)();
    swift_release();
  }
  char v29 = v82 & 1;
  uint64_t v30 = Text.foregroundColor(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v36 = v35;
  swift_release();
  sub_1000A06C0(v24, v26, v29);
  swift_bridgeObjectRelease();
  uint64_t v96 = v30;
  uint64_t v97 = v32;
  char v98 = v34 & 1;
  uint64_t v99 = v36;
  uint64_t v37 = v95;
  uint64_t v38 = *(void (**)(void))(v95 + 104);
  uint64_t v39 = v92;
  unsigned int v81 = enum case for DynamicTypeSize.large(_:);
  uint64_t v40 = v93;
  uint64_t v80 = v95 + 104;
  uint64_t v79 = (void (*)(char *, void, uint64_t))v38;
  v38(v92);
  uint64_t v41 = v84;
  View.dynamicTypeSize(_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v95 = v37 + 8;
  uint64_t v78 = v42;
  v42(v39, v40);
  sub_1000A06C0(v96, v97, v98);
  swift_bridgeObjectRelease();
  uint64_t v82 = v6;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v44 = v89;
  uint64_t v84 = (char *)(v6 + 32);
  char v77 = v43;
  v43(v94, v41, v89);
  id v45 = *(id *)(v91 + *(int *)(v83 + 28));
  AttributedString.init(_:)();
  uint64_t v46 = Text.init(_:)();
  uint64_t v48 = v47;
  char v50 = v49;
  if (qword_10094AD40 != -1) {
    swift_once();
  }
  id v51 = (id)qword_100998120;
  Font.init(_:)();
  uint64_t v52 = Text.font(_:)();
  uint64_t v54 = v53;
  char v56 = v55;
  swift_release();
  char v57 = v56 & 1;
  sub_1000A06C0(v46, v48, v50 & 1);
  swift_bridgeObjectRelease();
  sub_1004B5DD4();
  uint64_t v58 = Text.foregroundColor(_:)();
  uint64_t v60 = v59;
  char v62 = v61;
  uint64_t v64 = v63;
  swift_release();
  sub_1000A06C0(v52, v54, v57);
  swift_bridgeObjectRelease();
  uint64_t v96 = v58;
  uint64_t v97 = v60;
  char v98 = v62 & 1;
  uint64_t v99 = v64;
  uint64_t v65 = v92;
  uint64_t v66 = v93;
  v79(v92, v81, v93);
  uint64_t v67 = v87;
  View.dynamicTypeSize(_:)();
  v78(v65, v66);
  sub_1000A06C0(v96, v97, v98);
  swift_bridgeObjectRelease();
  uint64_t v68 = v86;
  v77(v86, v67, v44);
  uint64_t v69 = v82;
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  uint64_t v71 = v94;
  v70(v67, v94, v44);
  uint64_t v72 = v88;
  v70(v88, v68, v44);
  uint64_t v73 = v90;
  v70(v90, v67, v44);
  uint64_t v74 = sub_1000AFA94(&qword_10095E9D8);
  v70(&v73[*(int *)(v74 + 48)], v72, v44);
  char v75 = *(void (**)(char *, uint64_t))(v69 + 8);
  v75(v68, v44);
  v75(v71, v44);
  v75(v72, v44);
  return ((uint64_t (*)(char *, uint64_t))v75)(v67, v44);
}

uint64_t sub_1004B5DD4()
{
  type metadata accessor for WorkoutChartView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = type metadata accessor for WorkoutChartViewModel(0);
  sub_100651620(*(unsigned char *)(v0 + *(int *)(v1 + 20)));
  uint64_t v2 = Color.init(_:)();
  if ((v5 & 1) == 0)
  {
    uint64_t v3 = Color.opacity(_:)();
    swift_release();
    return v3;
  }
  return v2;
}

uint64_t sub_1004B5EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v22 = a2;
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  char v21 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v4 - 8);
  uint64_t v20 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WorkoutChartView();
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v18 = *(void *)(v19 + 64);
  __chkstk_darwin(v6);
  uint64_t v17 = (uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10074E640;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.addingTimeInterval(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  uint64_t v11 = v17;
  sub_1004B7378(v15, v17, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
  unint64_t v12 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1004B6D88(v11, v13 + v12);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_10095E9A0);
  sub_1004B78D8();
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_1004B6290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AxisValue.index.getter()) {
    static UnitPoint.trailing.getter();
  }
  else {
    static UnitPoint.leading.getter();
  }
  uint64_t v12 = v11;
  AxisValue.index.getter();
  AxisValue.as<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
    uint64_t v13 = sub_1000AFA94(&qword_10095E9B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v23[1] = v23;
    v23[0] = v12;
    __chkstk_darwin(v15);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v21 = sub_1000AFA94(&qword_1009575A0);
    unint64_t v22 = sub_10033074C();
    uint64_t v19 = sub_1004B7970;
    uint64_t v20 = &v17;
    char v18 = 0;
    uint64_t v17 = 0;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    uint64_t v16 = sub_1000AFA94(&qword_10095E9B8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

double sub_1004B6638@<D0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  sub_100378A10(a1, a2);
  sub_1000A06D0();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.footnote.getter();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  char v21 = v12;
  swift_release();
  sub_1000A06C0(v4, v6, v8);
  swift_bridgeObjectRelease();
  type metadata accessor for WorkoutChartView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  static Color.gray.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v13 = Text.foregroundStyle<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  sub_1000A06C0(v9, v11, v21 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v17 & 1;
  *(void *)(a3 + 24) = v19;
  double result = 0.0;
  *(_OWORD *)(a3 + 32) = xmmword_100756700;
  return result;
}

uint64_t sub_1004B6820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v51 = a3;
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  char v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12;
  if (qword_10094AD50 != -1) {
    swift_once();
  }
  id v14 = (id)qword_100998130;
  Font.init(_:)();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  sub_1000A06C0(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v52 = Text.fontWeight(_:)();
  uint64_t v48 = v20;
  uint64_t v49 = v21;
  HIDWORD(v46) = v22 & 1;
  sub_1000A06C0(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  id v24 = v51;
  AttributedString.init(_:)();
  uint64_t v25 = Text.init(_:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v30 = Text.fontWeight(_:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_1000A06C0(v25, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = swift_getKeyPath();
  char v39 = BYTE4(v46);
  char v53 = BYTE4(v46);
  char v62 = BYTE4(v46);
  char v61 = 0;
  char v59 = v36;
  char v57 = 0;
  *(_DWORD *)(a4 + 17) = v54;
  *(_DWORD *)(a4 + 20) = *(_DWORD *)((char *)&v54 + 3);
  *(_DWORD *)(a4 + 49) = *(_DWORD *)v60;
  *(_DWORD *)(a4 + 52) = *(_DWORD *)&v60[3];
  *(_DWORD *)(a4 + 89) = *(_DWORD *)v58;
  *(_DWORD *)(a4 + 92) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a4 + 121) = *(_DWORD *)v56;
  *(_DWORD *)(a4 + 124) = *(_DWORD *)&v56[3];
  uint64_t v40 = v52;
  uint64_t v41 = v48;
  uint64_t v42 = v49;
  *(void *)a4 = v52;
  *(void *)(a4 + 8) = v41;
  *(unsigned char *)(a4 + 16) = v39;
  uint64_t v43 = KeyPath;
  *(void *)(a4 + 24) = v42;
  *(void *)(a4 + 32) = v43;
  *(void *)(a4 + 40) = 1;
  *(unsigned char *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = v23;
  *(void *)(a4 + 64) = 0x3FE0000000000000;
  *(void *)(a4 + 72) = v30;
  *(void *)(a4 + 80) = v32;
  *(unsigned char *)(a4 + 88) = v36;
  *(void *)(a4 + 96) = v34;
  *(void *)(a4 + 104) = v37;
  *(void *)(a4 + 112) = 1;
  *(unsigned char *)(a4 + 120) = 0;
  *(void *)(a4 + 128) = v38;
  *(void *)(a4 + 136) = 0x3FE0000000000000;
  uint64_t v44 = v41;
  sub_1000A1750(v40, v41, v39);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v30, v32, v36);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A06C0(v30, v32, v36);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v52, v44, v53);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004B6BB8()
{
  return swift_release();
}

uint64_t sub_1004B6C6C()
{
  return swift_release();
}

uint64_t sub_1004B6D08@<X0>(_OWORD *a1@<X8>)
{
  if (qword_10094A7A0 != -1) {
    swift_once();
  }
  *a1 = xmmword_100997988;
  uint64_t v3 = sub_1000AFA94(&qword_10095E810);
  return sub_1004B2F74(v1, (uint64_t)a1 + *(int *)(v3 + 44));
}

uint64_t sub_1004B6D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B6DF0()
{
  return sub_1004B702C(&qword_10095E878, &qword_10095E820, (void (*)(void))sub_1004B6E20);
}

unint64_t sub_1004B6E20()
{
  unint64_t result = qword_10095E880;
  if (!qword_10095E880)
  {
    sub_1000A1370(&qword_10095E888);
    sub_1004B6EC0();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E880);
  }
  return result;
}

unint64_t sub_1004B6EC0()
{
  unint64_t result = qword_10095E890;
  if (!qword_10095E890)
  {
    sub_1000A1370(&qword_10095E898);
    sub_1004B6F60();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E890);
  }
  return result;
}

unint64_t sub_1004B6F60()
{
  unint64_t result = qword_10095E8A0;
  if (!qword_10095E8A0)
  {
    sub_1000A1370(&qword_10095E8A8);
    sub_1004B702C(&qword_10095E8B0, &qword_10095E8B8, (void (*)(void))sub_1004B70A8);
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E8A0);
  }
  return result;
}

uint64_t sub_1004B702C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004B70A8()
{
  unint64_t result = qword_10095E8C0;
  if (!qword_10095E8C0)
  {
    sub_1000A1370(&qword_10095E8C8);
    sub_1000A132C(&qword_10095E8D0, &qword_10095E8D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E8C0);
  }
  return result;
}

unint64_t sub_1004B7148()
{
  unint64_t result = qword_10095E8E0;
  if (!qword_10095E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E8E0);
  }
  return result;
}

uint64_t sub_1004B71AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1004B7288(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1004B7378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004B73E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1004B5EAC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1004B73E8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    sub_1004B7148();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004B7468()
{
  unint64_t result = qword_10095E968;
  if (!qword_10095E968)
  {
    sub_1000A1370(&qword_10095E910);
    sub_1004B7508();
    sub_1000A132C(&qword_10095E978, &qword_10095E980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E968);
  }
  return result;
}

unint64_t sub_1004B7508()
{
  unint64_t result = qword_10095E970;
  if (!qword_10095E970)
  {
    sub_1000A1370(&qword_10095E908);
    sub_1000A1370(&qword_10095E8F8);
    type metadata accessor for WorkoutChart();
    sub_1000A1370(&qword_10095E940);
    sub_1004B7774(&qword_10095E948, (void (*)(uint64_t))type metadata accessor for WorkoutChart);
    sub_1000A132C(&qword_10095E950, &qword_10095E940);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E970);
  }
  return result;
}

unint64_t sub_1004B7668()
{
  unint64_t result = qword_10095E988;
  if (!qword_10095E988)
  {
    sub_1000A1370(&qword_10095E8F0);
    sub_1000A132C(&qword_10095E990, &qword_10095E958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E988);
  }
  return result;
}

uint64_t sub_1004B7704()
{
  type metadata accessor for WorkoutChartView();

  return sub_1004B6BB8();
}

uint64_t sub_1004B7774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B77C0()
{
  return sub_1004B6C6C();
}

uint64_t sub_1004B7814()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1004B7858@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WorkoutChartView();

  return sub_1004B6290(a1);
}

unint64_t sub_1004B78D8()
{
  unint64_t result = qword_10095E9A8;
  if (!qword_10095E9A8)
  {
    sub_1000A1370(&qword_10095E9A0);
    sub_1000A132C(&qword_10095E9B0, &qword_10095E9B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E9A8);
  }
  return result;
}

double sub_1004B7970@<D0>(uint64_t a1@<X8>)
{
  return sub_1004B6638(*(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

uint64_t sub_1004B797C()
{
  return sub_1000A132C(&qword_10095E9E0, &qword_10095E9E8);
}

uint64_t sub_1004B79C0(uint64_t a1, __int16 a2)
{
  switch(HIBYTE(a2))
  {
    case 2:
    case 3:
    case 4:
    case 5:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

      break;
    case 6:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1004B7CDCLL);
    default:
      char v7 = a2;
      int v9 = a2;
      id v2 = [objc_allocWithZone((Class)CHWorkoutTypeKey) init];
      [v2 setActivityType:a1];
      unsigned __int8 v10 = [self historyFilterDisambiguatesLocationForActivityType:a1];
      if (v9 != 2 && (v10 & 1) != 0) {
        [v2 setIndoor:v7 & 1];
      }
      id v4 = [self localizedShortNameForWorkoutTypeKey:v2];
      break;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

void sub_1004B7CF0(uint64_t a1, Swift::UInt a2, __int16 a3)
{
  switch(HIBYTE(a3))
  {
    case 2:
      Swift::UInt v3 = 0;
      goto LABEL_7;
    case 3:
      Swift::UInt v3 = 1;
      goto LABEL_7;
    case 4:
      Swift::UInt v3 = 3;
      goto LABEL_7;
    case 5:
      Swift::UInt v3 = 4;
      goto LABEL_7;
    case 6:
      Swift::UInt v3 = 5;
LABEL_7:
      Hasher._combine(_:)(v3);
      break;
    default:
      int v6 = a3;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(a2);
      if (v6 == 2)
      {
        Swift::UInt8 v7 = 0;
      }
      else
      {
        Hasher._combine(_:)(1u);
        Swift::UInt8 v7 = a3 & 1;
      }
      Hasher._combine(_:)(v7);
      Hasher._combine(_:)(HIBYTE(a3) & 1);
      break;
  }
}

Swift::Int sub_1004B7DCC()
{
  Swift::UInt v1 = *(void *)v0;
  __int16 v2 = *(_WORD *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1004B7CF0((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1004B7E1C(uint64_t a1)
{
  sub_1004B7CF0(a1, *(void *)v1, *(_WORD *)(v1 + 8));
}

Swift::Int sub_1004B7E28()
{
  Swift::UInt v1 = *(void *)v0;
  __int16 v2 = *(_WORD *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1004B7CF0((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1004B7E74(uint64_t a1, uint64_t a2)
{
  return sub_1004BDE08(*(void *)a1, *(_WORD *)(a1 + 8), *(void *)a2, *(unsigned __int16 *)(a2 + 8));
}

uint64_t sub_1004B7E8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004B79C0(*(void *)v1, *(_WORD *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1004B7EBC(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*v1 < 0)
  {
    __break(1u);
  }
  else
  {
    int v3 = *((unsigned __int8 *)v1 + 8);
    if ((v3 & 1) == 0 && v3 != 2) {
      uint64_t v2 = -v2;
    }
    *a1 = v2;
  }
}

Swift::Int sub_1004B7EE0()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  if (v2 == 2)
  {
    Swift::UInt8 v3 = 0;
  }
  else
  {
    Swift::UInt8 v3 = v2 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_1004B7F60()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  Hasher._combine(_:)(*(void *)v0);
  if (v1 == 2)
  {
    Swift::UInt8 v2 = 0;
  }
  else
  {
    Swift::UInt8 v2 = v1 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1004B7FB4()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  if (v2 == 2)
  {
    Swift::UInt8 v3 = 0;
  }
  else
  {
    Swift::UInt8 v3 = v2 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

uint64_t sub_1004B8030(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  BOOL v4 = v2 == 2;
  if (v3 != 2) {
    BOOL v4 = 0;
  }
  if (v2 == 2 || v3 == 2) {
    char v6 = v4;
  }
  else {
    char v6 = ((v2 & 1) == 0) ^ v3;
  }
  return v6 & 1;
}

void sub_1004B8120(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    char v12 = *(void **)(Strong + OBJC_IVAR___CHHistoryDataProvider_queue);
    id v13 = v12;

    if (v12)
    {
      aBlock[4] = sub_1004BDF9C;
      aBlock[5] = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      void aBlock[3] = &unk_1008CB570;
      id v14 = _Block_copy(aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v15 = _swiftEmptyArrayStorage;
      sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v14);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1004B83E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::UInt v1 = (void *)Strong;
    sub_10005E658();
  }
}

void *sub_1004B8464(void *a1, __int16 a2)
{
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  uint64_t v5 = sub_10000C660(v4, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1004BE0A0(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = (void *)sub_100369518(v6);
  swift_bridgeObjectRelease();
  char v18 = v7;
  sub_1004BA958(&v18);
  swift_bridgeObjectRelease();
  uint64_t v8 = v18;
  swift_bridgeObjectRetain();
  int v9 = _swiftEmptyArrayStorage;
  unsigned __int8 v10 = sub_1004BE3B0(_swiftEmptyArrayStorage, (uint64_t)v8, v6);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v10[2];
  if (v11)
  {
    char v12 = v10 + 4;
    do
    {
      uint64_t v15 = *v12;
      if (*(void *)(*v12 + 16))
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v18 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001C928C(0, v9[2] + 1, 1);
          int v9 = v18;
        }
        unint64_t v14 = v9[2];
        unint64_t v13 = v9[3];
        if (v14 >= v13 >> 1)
        {
          sub_1001C928C(v13 > 1, v14 + 1, 1);
          int v9 = v18;
        }
        v9[2] = v14 + 1;
        v9[v14 + 4] = v15;
      }
      ++v12;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  sub_1004BE700((uint64_t)a1, a2, (uint64_t)v9);
  return v9;
}

uint64_t sub_1004B8630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v22 = a3;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v9 = type metadata accessor for Calendar.Component();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100752410;
  unint64_t v14 = v13 + v12;
  uint64_t v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v15(v14, enum case for Calendar.Component.month(_:), v9);
  v15(v14 + v11, enum case for Calendar.Component.year(_:), v9);
  v15(v14 + 2 * v11, enum case for Calendar.Component.era(_:), v9);
  sub_1000C6A18(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(v20, a2);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t sub_1004B8914(void *a1, id a2, __int16 a3)
{
  int v4 = HIBYTE(a3);
  if (HIBYTE(a3) - 4 < 3 || HIBYTE(a3) == 2)
  {
    uint64_t v6 = a1[3];
    sub_10007E4EC(a1, v6);
    sub_1004B8D58(v6);
    switch(v7)
    {
      case 2:
        if (v4 != 2) {
          return 0;
        }
        break;
      case 3:
        if (v4 != 3) {
          return 0;
        }
        break;
      case 4:
        if (v4 != 4) {
          return 0;
        }
        break;
      case 5:
        if (v4 != 5) {
          return 0;
        }
        break;
      case 6:
        if (v4 != 6) {
          return 0;
        }
        break;
      default:
        return 0;
    }
    return 1;
  }
  else
  {
    if (HIBYTE(a3) == 3)
    {
      sub_10008E75C((uint64_t)a1, (uint64_t)v34);
      sub_1000AFA94((uint64_t *)&unk_100955630);
      sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      if (swift_dynamicCast())
      {
        id v8 = v35;
        id v9 = [v35 workoutActivityType];

        return v9 != (id)84;
      }
      return 0;
    }
    sub_10008E75C((uint64_t)a1, (uint64_t)v34);
    sub_1000AFA94((uint64_t *)&unk_100955630);
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    if ((swift_dynamicCast() & 1) == 0) {
      return 0;
    }

    sub_10008E75C((uint64_t)a1, (uint64_t)v34);
    if ((swift_dynamicCast() & 1) == 0) {
      return 0;
    }
    id v13 = v35;
    unsigned int v14 = [self historyFilterDisambiguatesLocationForActivityType:[v35 workoutActivityType]];
    if (a3 != 2 && v14)
    {
      id v15 = [v13 fiui_activityType];
      if (v15)
      {
        uint64_t v16 = v15;
        if ([v15 effectiveTypeIdentifier] == a2)
        {
          BOOL v17 = (a3 & 1) == 0;
          id v18 = v16;
          unsigned int v19 = [v18 isIndoor];

          return v17 ^ v19;
        }
      }
      return 0;
    }
    if ((a3 & 0x100) != 0 && [v13 workoutActivityType] == (id)82)
    {
      id v20 = [v13 workoutActivities];
      sub_10007E2D8(0, (unint64_t *)&qword_100955600);
      unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v21 >> 62) {
        goto LABEL_48;
      }
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v22; uint64_t v22 = _CocoaArrayWrapper.endIndex.getter())
      {
        id v32 = v13;
        unint64_t v33 = v21 & 0xC000000000000001;
        uint64_t v23 = 4;
        unint64_t v24 = v21;
        while (1)
        {
          id v13 = (id)(v23 - 4);
          id v25 = v33 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v21 + 8 * v23);
          uint64_t v26 = v25;
          unint64_t v21 = v23 - 3;
          if (__OFADD__(v13, 1)) {
            break;
          }
          id v27 = [v25 fiui_activityType];
          id v28 = [v27 effectiveTypeIdentifier];

          BOOL v10 = v28 == a2;
          ++v23;
          BOOL v29 = v28 == a2 || v21 == v22;
          unint64_t v21 = v24;
          if (v29)
          {
            id v13 = v32;
            goto LABEL_50;
          }
        }
        __break(1u);
LABEL_48:
        swift_bridgeObjectRetain();
      }
      BOOL v10 = 0;
LABEL_50:

      swift_bridgeObjectRelease_n();
    }
    else
    {
      id v30 = [v13 workoutActivityType];

      return v30 == a2;
    }
  }
  return v10;
}

uint64_t sub_1004B8D58(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = __chkstk_darwin(v4);
  BOOL v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v24 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v24 - v15;
  __chkstk_darwin(v14);
  BOOL v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v17((char *)&v24 - v18, v1, a1);
  type metadata accessor for MindfulnessSessionViewModel();
  if (swift_dynamicCast())
  {

    return 0;
  }
  v17(v16, v1, a1);
  if (swift_dynamicCast())
  {
    sub_1001F0FE0((uint64_t)v6);
    return 0;
  }
  v17(v13, v1, a1);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (!swift_dynamicCast()) {
    return 0;
  }

  v17(v10, v1, a1);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v20 = v25;
  id v21 = [v25 fiui_activityType];
  if (v21)
  {
    uint64_t v22 = v21;
    if ([v21 effectiveTypeIdentifier] == (id)84)
    {

      return 0;
    }
    else
    {
      if ([self historyFilterDisambiguatesLocationForActivityType:[v22 effectiveTypeIdentifier]]){
      id v19 = [v22 effectiveTypeIdentifier];
      }
    }
    return (uint64_t)v19;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004B90FC(void *a1, void *a2, void (*a3)(void *a1@<X8>))
{
  uint64_t v6 = a2[3];
  sub_10007E4EC(a2, v6);
  uint64_t v7 = sub_1004B8D58(v6);
  int v9 = v8;
  if (BYTE1(v8) - 2 >= 5)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void **)a3;
    id v35 = *(void **)a3;
    *(void *)a3 = 0x8000000000000000;
    unint64_t v13 = sub_100529F54(v7, v9);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      goto LABEL_24;
    }
    char v3 = v12;
    if (v11[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F5204();
        uint64_t v11 = v35;
      }
    }
    else
    {
      sub_1004ECFB8(v16, isUniquelyReferenced_nonNull_native);
      uint64_t v11 = v35;
      unint64_t v17 = sub_100529F54(v7, v9);
      if ((v3 & 1) != (v18 & 1))
      {
LABEL_28:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v13 = v17;
    }
    *(void *)a3 = v11;
    swift_bridgeObjectRelease();
    id v19 = *(void **)a3;
    swift_bridgeObjectRetain();
    if ((v3 & 1) == 0) {
      sub_1004F1CC8(v13, v7, v9, 0, v19);
    }
    a3 = (void (*)(void *@<X8>))v19[7];
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)a3 + v13);
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_25;
    }
    *((void *)a3 + v13) = v22;
    a3 = sub_10017DF20;
  }
  else
  {
    a3 = 0;
  }
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = (void *)*a1;
  id v35 = (void *)*a1;
  *a1 = 0x8000000000000000;
  unint64_t v13 = sub_100529EDC(v7, v9);
  uint64_t v26 = v24[2];
  BOOL v27 = (v25 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
    __break(1u);
    goto LABEL_23;
  }
  char v3 = v25;
  if (v24[3] >= v28)
  {
    if ((v23 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  sub_1004ECC0C(v28, v23);
  uint64_t v24 = v35;
  unint64_t v29 = sub_100529EDC(v7, v9);
  if ((v3 & 1) != (v30 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v13 = v29;
  while (1)
  {
LABEL_18:
    *a1 = v24;
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)*a1;
    swift_bridgeObjectRetain();
    if ((v3 & 1) == 0) {
      sub_1004F1C7C(v13, v7, v9, 0, v31);
    }
    a1 = (void *)v31[7];
    swift_bridgeObjectRelease();
    uint64_t v32 = a1[v13];
    BOOL v21 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (!v21) {
      break;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1004F5060();
    uint64_t v24 = v35;
  }
  a1[v13] = v33;
  return sub_10005E5F8((uint64_t)a3);
}

void sub_1004B93A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void **)&v4[OBJC_IVAR___CHHistoryDataProvider_queue];
  if (v13)
  {
    sub_10008E75C(a1, (uint64_t)v40);
    uint64_t v14 = swift_allocObject();
    v27[0] = a1;
    uint64_t v15 = v14;
    *(void *)(v14 + 16) = v4;
    sub_100093E60(v40, v14 + 24);
    uint64_t v38 = sub_1004BDFE4;
    char v39 = (void *)v15;
    aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    v27[1] = (uint64_t)&v36;
    char v36 = sub_100070394;
    uint64_t v37 = &unk_1008CB5C0;
    uint64_t v16 = _Block_copy(&aBlock);
    id v17 = v13;
    char v18 = v4;
    static DispatchQoS.unspecified.getter();
    uint64_t v33 = _swiftEmptyArrayStorage;
    sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
    swift_release();
    uint64_t v19 = v27[0];
    sub_1004BA174(v27[0]);
    uint64_t v20 = *(void **)&v18[OBJC_IVAR___CHHistoryDataProvider_healthStore];
    sub_10007E2D8(0, &qword_10094EA68);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10008E75C(v19, (uint64_t)v40);
    char v23 = (void *)swift_allocObject();
    void v23[2] = v22;
    sub_100093E60(v40, (uint64_t)(v23 + 3));
    uint64_t v25 = v30;
    uint64_t v24 = v31;
    v23[8] = v30;
    v23[9] = v24;
    v23[10] = ObjectType;
    uint64_t v38 = sub_1004BE040;
    char v39 = v23;
    aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    char v36 = sub_10000D15C;
    uint64_t v37 = &unk_1008CB610;
    uint64_t v26 = _Block_copy(&aBlock);
    sub_10008A670(v25);
    swift_release();
    [v20 _deleteObjects:isa options:v32 completion:v26];
    _Block_release(v26);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004B97F0(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v9 = (char *)&v13 - v8;
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_10007E4EC(a2, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
  swift_beginAccess();
  sub_1001E94E0((uint64_t)v9, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  swift_endAccess();
  return sub_10005E658();
}

void sub_1004B9954(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v54 = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    char v18 = (void *)HKLogActivity;
    os_log_type_t v19 = v17;
    if (os_log_type_enabled(HKLogActivity, v17))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v20 = v18;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v23 = _typeName(_:qualified:)();
      *(void *)&v60[0] = sub_10008F1F4(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2112;
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&v60[0] = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "%s failed to delete mindfulness session with error %@", (uint8_t *)v21, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v52 = a4;
    id v51 = v16;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      BOOL v27 = (void *)Strong;
      id v48 = *(id *)(Strong + OBJC_IVAR___CHHistoryDataProvider_seymourCatalogItemDataProvider);

      uint64_t v29 = v52[3];
      uint64_t v28 = v52[4];
      uint64_t v30 = sub_10007E4EC(v52, v29);
      uint64_t v49 = a3;
      uint64_t v31 = v14;
      uint64_t v32 = v12;
      uint64_t v33 = v13;
      uint64_t v34 = v10;
      uint64_t v35 = v30;
      char v57 = (void *)v29;
      uint64_t v50 = v9;
      uint64_t v58 = *(void (**)())(v28 + 8);
      uint64_t v36 = (uint64_t)v58;
      uint64_t v37 = sub_1000B1710(aBlock);
      uint64_t v38 = v35;
      uint64_t v10 = v34;
      uint64_t v13 = v33;
      char v12 = v32;
      uint64_t v14 = v31;
      a3 = v49;
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v37, v38, v29);
      uint64_t v39 = (uint64_t)v37;
      id v40 = v48;
      uint64_t v9 = v50;
      sub_10048C748(v39, (uint64_t)v48, v29, v36);

      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)aBlock);
    }
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    if (v41)
    {
      uint64_t v42 = (void *)v41;
      uint64_t v50 = v10;
      uint64_t v43 = *(void **)(v41 + OBJC_IVAR___CHHistoryDataProvider_queue);
      id v44 = v43;

      if (!v43)
      {
        __break(1u);
        return;
      }
      sub_10008E75C((uint64_t)v52, (uint64_t)v60);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = a3;
      sub_100093E60(v60, v45 + 24);
      uint64_t v58 = sub_1004BE094;
      uint64_t v59 = v45;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100070394;
      char v57 = &unk_1008CB660;
      uint64_t v46 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v47 = v51;
      static DispatchQoS.unspecified.getter();
      uint64_t v55 = _swiftEmptyArrayStorage;
      sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v46);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v47, v13);
      uint64_t v41 = swift_release();
    }
    if (v54) {
      v54(v41);
    }
  }
}

void sub_1004B9F80(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    sub_10007E4EC(a2, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
    swift_beginAccess();
    sub_100195F58((uint64_t)v6, (uint64_t)v9);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_1009555F0);
    swift_endAccess();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_1009555F0);
  }
}

unint64_t sub_1004BA174(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10008E75C(a1, (uint64_t)v32);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  int v9 = swift_dynamicCast();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v9)
  {
    v10(v4, 0, 1, v5);
    sub_100350DA4((uint64_t)v4, (uint64_t)v8);
    uint64_t v11 = *(void *)&v8[*(int *)(v5 + 20)];
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_10008E75C(v13, (uint64_t)v32);
        unint64_t v14 = sub_1004BA174(v32);
        sub_1001E4B40(v14);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
        v13 += 40;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    sub_1001F0FE0((uint64_t)v8);
  }
  else
  {
    v10(v4, 1, 1, v5);
    sub_10008DB18((uint64_t)v4, &qword_100950DA8);
    sub_10008E75C(a1, (uint64_t)v32);
    type metadata accessor for MindfulnessSessionViewModel();
    if (swift_dynamicCast())
    {
      id v15 = v31;
      unint64_t v16 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
      if (v16 >> 62)
      {
        sub_10007E2D8(0, &qword_10094EA68);
        unint64_t v17 = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10007E2D8(0, &qword_10094EA68);
        unint64_t v17 = v16;
      }
      swift_bridgeObjectRelease();
      sub_1001E4B40(v17);
    }
    else
    {
      sub_10008E75C(a1, (uint64_t)v32);
      sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      if (swift_dynamicCast())
      {
        id v18 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        os_log_type_t v19 = static os_log_type_t.error.getter();
        uint64_t v20 = HKLogActivity;
        sub_10008E75C(a1, (uint64_t)v32);
        if (os_log_type_enabled(v20, v19))
        {
          uint64_t v21 = v20;
          uint64_t v22 = swift_slowAlloc();
          id v31 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 136315394;
          uint64_t v23 = _typeName(_:qualified:)();
          uint64_t v30 = sub_10008F1F4(v23, v24, (uint64_t *)&v31);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v22 + 12) = 2080;
          uint64_t v26 = v33;
          uint64_t v25 = v34;
          sub_10007E4EC(v32, v33);
          uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 8))(v26);
          uint64_t v30 = sub_10008F1F4(v27, v28, (uint64_t *)&v31);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
          _os_log_impl((void *)&_mh_execute_header, v21, v19, "%s unexpected historyItem type to delete %s", (uint8_t *)v22, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
        }
      }
    }
  }
  return v35;
}

id sub_1004BA6A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HistoryDataProvider();
  return [super dealloc];
}

uint64_t getEnumTagSinglePayload for HistoryItemFilterValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 < 2) {
    return 0;
  }
  unsigned int v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v4 - 4;
  if (v4 <= 4) {
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HistoryItemFilterValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)uint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 6;
    }
  }
  return result;
}

uint64_t sub_1004BA864(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 9);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1004BA880(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 9) = a2 + 1;
  }
  return result;
}

unint64_t sub_1004BA8AC()
{
  unint64_t result = qword_10095EA98;
  if (!qword_10095EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EA98);
  }
  return result;
}

unint64_t sub_1004BA904()
{
  unint64_t result = qword_10095EAA0;
  if (!qword_10095EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EAA0);
  }
  return result;
}

Swift::Int sub_1004BA958(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DateComponents() - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_1000C7B0C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1004BAA6C(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1004BAA00(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10005F930(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1004BB848(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1004BAA6C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DateComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v189 = (char *)&v181 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v204 = (char *)&v181 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v181 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  v207 = (char *)&v181 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v185 = (char *)&v181 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v193 = (char *)&v181 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v186 = (char *)&v181 - v20;
  __chkstk_darwin(v19);
  v187 = (char *)&v181 - v21;
  v206 = a1;
  Swift::Int v22 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v22);
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_188;
    }
    if (v22) {
      return sub_1004BC2F4(0, v22, 1, v206);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_196;
  }
  uint64_t v208 = v4;
  v196 = v12;
  Swift::Int v183 = result;
  if (v22 < 2)
  {
    uint64_t v27 = v5;
    uint64_t v29 = (char *)_swiftEmptyArrayStorage;
    unint64_t v192 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v182 = _swiftEmptyArrayStorage;
    if (v22 != 1)
    {
      unint64_t v32 = _swiftEmptyArrayStorage[2];
LABEL_154:
      if (v32 >= 2)
      {
        uint64_t v174 = *v206;
        do
        {
          unint64_t v175 = v32 - 2;
          if (v32 < 2) {
            goto LABEL_183;
          }
          if (!v174) {
            goto LABEL_195;
          }
          uint64_t v176 = *(void *)&v29[16 * v175 + 32];
          uint64_t v177 = *(void *)&v29[16 * v32 + 24];
          uint64_t v178 = v27;
          sub_1004BCB70(v174 + *(void *)(v27 + 72) * v176, v174 + *(void *)(v27 + 72) * *(void *)&v29[16 * v32 + 16], v174 + *(void *)(v27 + 72) * v177, v192);
          if (v2) {
            break;
          }
          if (v177 < v176) {
            goto LABEL_184;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_1001EEF68((uint64_t)v29);
          }
          if (v175 >= *((void *)v29 + 2)) {
            goto LABEL_185;
          }
          v179 = &v29[16 * v175 + 32];
          *(void *)v179 = v176;
          *((void *)v179 + 1) = v177;
          unint64_t v180 = *((void *)v29 + 2);
          if (v32 > v180) {
            goto LABEL_186;
          }
          memmove(&v29[16 * v32 + 16], &v29[16 * v32 + 32], 16 * (v180 - v32));
          *((void *)v29 + 2) = v180 - 1;
          unint64_t v32 = v180 - 1;
          uint64_t v27 = v178;
        }
        while (v180 > 2);
      }
LABEL_165:
      swift_bridgeObjectRelease();
      v182[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v25 = v24 >> 1;
    uint64_t v26 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v26 + 16) = v25;
    uint64_t v27 = v5;
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v182 = (void *)v26;
    unint64_t v192 = v26 + v28;
  }
  uint64_t v30 = v22;
  uint64_t v31 = 0;
  v200 = (void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v201 = v27 + 16;
  v205 = (void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v29 = (char *)_swiftEmptyArrayStorage;
  uint64_t v194 = v27;
  while (1)
  {
    uint64_t v33 = v31 + 1;
    uint64_t v190 = v31;
    if (v31 + 1 >= v30)
    {
      uint64_t v57 = v31 + 1;
      goto LABEL_96;
    }
    uint64_t v202 = v30;
    uint64_t v184 = v2;
    uint64_t v34 = *v206;
    uint64_t v35 = *(void *)(v27 + 72);
    uint64_t v36 = v31;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    uint64_t v38 = v208;
    v37(v187, *v206 + v35 * v33, v208);
    v195 = (char *)v34;
    uint64_t v203 = v35;
    v37(v186, v34 + v35 * v36, v38);
    uint64_t v39 = DateComponents.era.getter();
    if (v40)
    {
      LODWORD(v199) = 1;
      uint64_t v56 = v208;
      uint64_t v43 = v185;
      goto LABEL_29;
    }
    uint64_t v41 = v39;
    uint64_t v42 = DateComponents.era.getter();
    uint64_t v43 = v185;
    if ((v44 & 1) != 0
      || (uint64_t v45 = v42, v46 = DateComponents.year.getter(), (v47 & 1) != 0)
      || (uint64_t v48 = v46, v49 = DateComponents.year.getter(), (v50 & 1) != 0)
      || (uint64_t v51 = v49, v52 = DateComponents.month.getter(), (v53 & 1) != 0))
    {
      LODWORD(v199) = 1;
LABEL_28:
      uint64_t v56 = v208;
      goto LABEL_29;
    }
    uint64_t v198 = v52;
    uint64_t v54 = DateComponents.month.getter();
    LODWORD(v199) = 1;
    if (v55) {
      goto LABEL_28;
    }
    uint64_t v56 = v208;
    if (v45 >= v41)
    {
      if (v41 >= v45)
      {
        if (v51 >= v48)
        {
          BOOL v172 = v48 >= v51 && v54 < v198;
          LODWORD(v199) = v172;
        }
        else
        {
          LODWORD(v199) = 1;
        }
      }
      else
      {
        LODWORD(v199) = 0;
      }
    }
LABEL_29:
    uint64_t v58 = *v200;
    (*v200)(v186, v56);
    v58(v187, v56);
    uint64_t v57 = v190 + 2;
    uint64_t v59 = v202;
    if (v190 + 2 >= v202)
    {
LABEL_52:
      uint64_t v79 = v194;
    }
    else
    {
      uint64_t v60 = v195;
      uint64_t v197 = v203 * v57;
      uint64_t v198 = v203 * v33;
      while (1)
      {
        uint64_t v61 = v57;
        v37(v193, (uint64_t)&v60[v197], v56);
        v37(v43, (uint64_t)&v60[v198], v56);
        uint64_t v62 = DateComponents.era.getter();
        if (v63) {
          goto LABEL_40;
        }
        uint64_t v64 = v62;
        uint64_t v65 = DateComponents.era.getter();
        if ((v66 & 1) != 0
          || (uint64_t v67 = v65, v68 = DateComponents.year.getter(), (v69 & 1) != 0)
          || (v191 = v68, uint64_t v70 = DateComponents.year.getter(), (v71 & 1) != 0)
          || (v188 = v70, uint64_t v72 = DateComponents.month.getter(), (v73 & 1) != 0))
        {
LABEL_40:
          int v75 = 1;
        }
        else
        {
          v181 = (char *)v72;
          uint64_t v74 = DateComponents.month.getter();
          int v75 = 1;
          if ((v76 & 1) == 0 && v67 >= v64)
          {
            if (v64 >= v67)
            {
              if (v188 >= v191) {
                int v75 = v191 >= v188 && v74 < (uint64_t)v181;
              }
            }
            else
            {
              int v75 = 0;
            }
          }
        }
        uint64_t v77 = v208;
        v58(v43, v208);
        v58(v193, v77);
        if (v199 != v75) {
          break;
        }
        uint64_t v57 = v61 + 1;
        uint64_t v59 = v202;
        v60 += v203;
        uint64_t v56 = v208;
        if (v202 == v61 + 1)
        {
          uint64_t v57 = v202;
          goto LABEL_52;
        }
      }
      uint64_t v79 = v194;
      uint64_t v56 = v208;
      uint64_t v57 = v61;
      uint64_t v59 = v202;
    }
    uint64_t v31 = v190;
    if (!v199) {
      break;
    }
    if (v57 < v190) {
      goto LABEL_189;
    }
    if (v190 >= v57) {
      break;
    }
    v181 = v29;
    uint64_t v80 = 0;
    uint64_t v81 = v203 * (v57 - 1);
    uint64_t v82 = v57 * v203;
    uint64_t v83 = v190;
    uint64_t v84 = v190 * v203;
    do
    {
      if (v83 != v57 + v80 - 1)
      {
        uint64_t v85 = v195;
        if (!v195) {
          goto LABEL_194;
        }
        uint64_t v86 = &v195[v84];
        uint64_t v87 = &v195[v81];
        v199 = *v205;
        v199(v189, (uint64_t)&v195[v84], v208);
        if (v84 < v81 || v86 >= &v85[v82])
        {
          uint64_t v56 = v208;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v56 = v208;
          if (v84 != v81) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v199(v87, (uint64_t)v189, v56);
        uint64_t v79 = v194;
      }
      ++v83;
      --v80;
      v81 -= v203;
      v82 -= v203;
      v84 += v203;
    }
    while (v83 < v57 + v80);
    uint64_t v2 = v184;
    uint64_t v29 = v181;
    uint64_t v31 = v190;
    uint64_t v59 = v202;
    if (v57 < v202) {
      goto LABEL_69;
    }
LABEL_96:
    if (v57 < v31) {
      goto LABEL_182;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_1001EE868(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v121 = *((void *)v29 + 2);
    unint64_t v120 = *((void *)v29 + 3);
    unint64_t v32 = v121 + 1;
    uint64_t v27 = v194;
    uint64_t v202 = v57;
    if (v121 >= v120 >> 1)
    {
      v173 = sub_1001EE868((char *)(v120 > 1), v121 + 1, 1, v29);
      uint64_t v27 = v194;
      uint64_t v29 = v173;
    }
    *((void *)v29 + 2) = v32;
    uint64_t v122 = v29 + 32;
    unint64_t v123 = &v29[16 * v121 + 32];
    uint64_t v124 = v202;
    *(void *)unint64_t v123 = v31;
    *((void *)v123 + 1) = v124;
    if (v121)
    {
      while (1)
      {
        unint64_t v125 = v32 - 1;
        if (v32 >= 4)
        {
          uint64_t v130 = &v122[16 * v32];
          uint64_t v131 = *((void *)v130 - 8);
          uint64_t v132 = *((void *)v130 - 7);
          BOOL v136 = __OFSUB__(v132, v131);
          uint64_t v133 = v132 - v131;
          if (v136) {
            goto LABEL_171;
          }
          uint64_t v135 = *((void *)v130 - 6);
          uint64_t v134 = *((void *)v130 - 5);
          BOOL v136 = __OFSUB__(v134, v135);
          uint64_t v128 = v134 - v135;
          char v129 = v136;
          if (v136) {
            goto LABEL_172;
          }
          unint64_t v137 = v32 - 2;
          uint64_t v138 = &v122[16 * v32 - 32];
          uint64_t v140 = *(void *)v138;
          uint64_t v139 = *((void *)v138 + 1);
          BOOL v136 = __OFSUB__(v139, v140);
          uint64_t v141 = v139 - v140;
          if (v136) {
            goto LABEL_174;
          }
          BOOL v136 = __OFADD__(v128, v141);
          uint64_t v142 = v128 + v141;
          if (v136) {
            goto LABEL_177;
          }
          if (v142 >= v133)
          {
            v160 = &v122[16 * v125];
            uint64_t v162 = *(void *)v160;
            uint64_t v161 = *((void *)v160 + 1);
            BOOL v136 = __OFSUB__(v161, v162);
            uint64_t v163 = v161 - v162;
            if (v136) {
              goto LABEL_181;
            }
            BOOL v153 = v128 < v163;
            goto LABEL_133;
          }
        }
        else
        {
          if (v32 != 3)
          {
            uint64_t v154 = *((void *)v29 + 4);
            uint64_t v155 = *((void *)v29 + 5);
            BOOL v136 = __OFSUB__(v155, v154);
            uint64_t v147 = v155 - v154;
            char v148 = v136;
            goto LABEL_127;
          }
          uint64_t v127 = *((void *)v29 + 4);
          uint64_t v126 = *((void *)v29 + 5);
          BOOL v136 = __OFSUB__(v126, v127);
          uint64_t v128 = v126 - v127;
          char v129 = v136;
        }
        if (v129) {
          goto LABEL_173;
        }
        unint64_t v137 = v32 - 2;
        Swift::Int v143 = &v122[16 * v32 - 32];
        uint64_t v145 = *(void *)v143;
        uint64_t v144 = *((void *)v143 + 1);
        BOOL v146 = __OFSUB__(v144, v145);
        uint64_t v147 = v144 - v145;
        char v148 = v146;
        if (v146) {
          goto LABEL_176;
        }
        uint64_t v149 = &v122[16 * v125];
        uint64_t v151 = *(void *)v149;
        uint64_t v150 = *((void *)v149 + 1);
        BOOL v136 = __OFSUB__(v150, v151);
        uint64_t v152 = v150 - v151;
        if (v136) {
          goto LABEL_179;
        }
        if (__OFADD__(v147, v152)) {
          goto LABEL_180;
        }
        if (v147 + v152 >= v128)
        {
          BOOL v153 = v128 < v152;
LABEL_133:
          if (v153) {
            unint64_t v125 = v137;
          }
          goto LABEL_135;
        }
LABEL_127:
        if (v148) {
          goto LABEL_175;
        }
        v156 = &v122[16 * v125];
        uint64_t v158 = *(void *)v156;
        uint64_t v157 = *((void *)v156 + 1);
        BOOL v136 = __OFSUB__(v157, v158);
        uint64_t v159 = v157 - v158;
        if (v136) {
          goto LABEL_178;
        }
        if (v159 < v147) {
          goto LABEL_14;
        }
LABEL_135:
        unint64_t v164 = v125 - 1;
        if (v125 - 1 >= v32)
        {
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
          goto LABEL_191;
        }
        if (!*v206) {
          goto LABEL_193;
        }
        v165 = v29;
        v166 = &v122[16 * v164];
        uint64_t v167 = *(void *)v166;
        v168 = &v122[16 * v125];
        uint64_t v169 = *((void *)v168 + 1);
        sub_1004BCB70(*v206 + *(void *)(v27 + 72) * *(void *)v166, *v206 + *(void *)(v27 + 72) * *(void *)v168, *v206 + *(void *)(v27 + 72) * v169, v192);
        if (v2) {
          goto LABEL_165;
        }
        if (v169 < v167) {
          goto LABEL_168;
        }
        if (v125 > *((void *)v165 + 2)) {
          goto LABEL_169;
        }
        *(void *)v166 = v167;
        *(void *)&v122[16 * v164 + 8] = v169;
        unint64_t v170 = *((void *)v165 + 2);
        if (v125 >= v170) {
          goto LABEL_170;
        }
        uint64_t v29 = v165;
        unint64_t v32 = v170 - 1;
        memmove(&v122[16 * v125], v168 + 16, 16 * (v170 - 1 - v125));
        *((void *)v165 + 2) = v170 - 1;
        uint64_t v27 = v194;
        if (v170 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v32 = 1;
LABEL_14:
    uint64_t v30 = v206[1];
    uint64_t v31 = v202;
    if (v202 >= v30) {
      goto LABEL_154;
    }
  }
  uint64_t v2 = v184;
  if (v57 >= v59) {
    goto LABEL_96;
  }
LABEL_69:
  if (__OFSUB__(v57, v31)) {
    goto LABEL_187;
  }
  if (v57 - v31 >= v183) {
    goto LABEL_96;
  }
  if (__OFADD__(v31, v183)) {
    goto LABEL_190;
  }
  if (v31 + v183 >= v59) {
    uint64_t v88 = v59;
  }
  else {
    uint64_t v88 = v31 + v183;
  }
  if (v88 >= v31)
  {
    if (v57 != v88)
    {
      v181 = v29;
      uint64_t v184 = v2;
      uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 72);
      v195 = *(char **)(v79 + 16);
      uint64_t v90 = (void)v89 * (v57 - 1);
      v199 = v89;
      uint64_t v91 = v57 * (void)v89;
      uint64_t v188 = v88;
      do
      {
        uint64_t v94 = 0;
        uint64_t v202 = v57;
        uint64_t v197 = v91;
        uint64_t v198 = v90;
        while (1)
        {
          uint64_t v95 = *v206;
          uint64_t v203 = v91 + v94;
          uint64_t v96 = (void (*)(char *, uint64_t, uint64_t))v195;
          ((void (*)(char *, uint64_t, uint64_t))v195)(v207, v91 + v94 + v95, v56);
          uint64_t v97 = v90 + v94 + v95;
          char v98 = v196;
          v96(v196, v97, v56);
          uint64_t v99 = DateComponents.era.getter();
          if ((v100 & 1) == 0)
          {
            uint64_t v101 = v99;
            uint64_t v102 = DateComponents.era.getter();
            if ((v103 & 1) == 0)
            {
              uint64_t v104 = v102;
              uint64_t v105 = DateComponents.year.getter();
              if ((v106 & 1) == 0)
              {
                uint64_t v107 = v105;
                uint64_t v108 = DateComponents.year.getter();
                if ((v109 & 1) == 0)
                {
                  uint64_t v110 = v108;
                  uint64_t v111 = DateComponents.month.getter();
                  if ((v112 & 1) == 0)
                  {
                    uint64_t v191 = v111;
                    uint64_t v113 = DateComponents.month.getter();
                    if ((v114 & 1) == 0
                      && v104 >= v101
                      && (v101 < v104 || v110 >= v107 && (v107 < v110 || v113 >= v191)))
                    {
                      break;
                    }
                  }
                }
              }
            }
          }
          uint64_t v115 = *v200;
          uint64_t v116 = v208;
          (*v200)(v98, v208);
          v115(v207, v116);
          uint64_t v117 = *v206;
          if (!*v206) {
            goto LABEL_192;
          }
          uint64_t v91 = v197;
          uint64_t v90 = v198;
          uint64_t v118 = (char *)(v117 + v198 + v94);
          uint64_t v119 = *v205;
          (*v205)(v204, v117 + v197 + v94, v116);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v56 = v208;
          v119(v118, (uint64_t)v204, v208);
          v94 -= (uint64_t)v199;
          ++v31;
          uint64_t v93 = v202;
          if (v202 == v31) {
            goto LABEL_79;
          }
        }
        uint64_t v92 = *v200;
        uint64_t v56 = v208;
        (*v200)(v98, v208);
        v92(v207, v56);
        uint64_t v93 = v202;
        uint64_t v91 = v197;
        uint64_t v90 = v198;
LABEL_79:
        uint64_t v57 = v93 + 1;
        v90 += (uint64_t)v199;
        v91 += (uint64_t)v199;
        uint64_t v31 = v190;
      }
      while (v57 != v188);
      uint64_t v57 = v188;
      uint64_t v2 = v184;
      uint64_t v29 = v181;
    }
    goto LABEL_96;
  }
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_1004BB848(uint64_t *a1)
{
  uint64_t v146 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v146 - 8);
  uint64_t v3 = __chkstk_darwin(v146);
  uint64_t v139 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v138 = (char *)&v127 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_138;
    }
    if (v6) {
      return sub_1004BC8FC(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_146;
  }
  Swift::Int v129 = result;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v135 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v128 = v11;
      uint64_t v118 = v136;
      if (v14 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_133;
          }
          if (!v119) {
            goto LABEL_145;
          }
          unint64_t v121 = v13;
          uint64_t v122 = v13 + 32;
          uint64_t v123 = *(void *)&v13[16 * v120 + 32];
          uint64_t v124 = *(void *)&v13[16 * v14 + 24];
          sub_1004BD808((char *)(v119 + 40 * v123), (char *)(v119 + 40 * *(void *)&v122[16 * v14 - 16]), (char *)(v119 + 40 * v124), v135);
          if (v118) {
            goto LABEL_100;
          }
          if (v124 < v123) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v121 = sub_1001EEF68((uint64_t)v121);
          }
          if (v120 >= *((void *)v121 + 2)) {
            goto LABEL_135;
          }
          unint64_t v125 = &v121[16 * v120 + 32];
          *(void *)unint64_t v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v121 + 2);
          if (v14 > v126) {
            goto LABEL_136;
          }
          uint64_t v13 = v121;
          memmove(&v121[16 * v14 + 16], &v121[16 * v14 + 32], 16 * (v126 - v14));
          *((void *)v121 + 2) = v126 - 1;
          unint64_t v14 = v126 - 1;
        }
        while (v126 > 2);
      }
      swift_bridgeObjectRelease();
      v128[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v128 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1000AFA94((uint64_t *)&unk_100955630);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v10 + 16) = v9;
    uint64_t v128 = (void *)v10;
    uint64_t v135 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  unint64_t v137 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v15 = v12++;
    Swift::Int v133 = v15;
    if (v12 < v6)
    {
      uint64_t v130 = v13;
      uint64_t v16 = *a1;
      sub_10008E75C(*a1 + 40 * v12, (uint64_t)&v143);
      sub_10008E75C(v16 + 40 * v15, (uint64_t)v140);
      Swift::Int v134 = v6;
      uint64_t v18 = v144;
      uint64_t v17 = v145;
      sub_10007E4EC(&v143, v144);
      uint64_t v19 = v138;
      (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v18, v17);
      uint64_t v20 = v141;
      uint64_t v21 = v142;
      sub_10007E4EC(v140, v141);
      Swift::Int v22 = v139;
      uint64_t v23 = v20;
      Swift::Int v6 = v134;
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v23, v21);
      LODWORD(v132) = static Date.> infix(_:_:)();
      uint64_t v24 = *v137;
      uint64_t v25 = v22;
      uint64_t v26 = v146;
      (*v137)(v25, v146);
      uint64_t v27 = v19;
      Swift::Int v15 = v133;
      v24(v27, v26);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
      Swift::Int v12 = v15 + 2;
      uint64_t v131 = v16;
      if (v15 + 2 < v6)
      {
        uint64_t v28 = v16 + 40 * v15 + 40;
        while (1)
        {
          sub_10008E75C(v28 + 40, (uint64_t)&v143);
          sub_10008E75C(v28, (uint64_t)v140);
          uint64_t v30 = v144;
          uint64_t v29 = v145;
          sub_10007E4EC(&v143, v144);
          uint64_t v31 = v138;
          (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
          uint64_t v32 = v141;
          uint64_t v33 = v142;
          sub_10007E4EC(v140, v141);
          uint64_t v34 = v139;
          (*(void (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
          LODWORD(v32) = static Date.> infix(_:_:)();
          uint64_t v35 = v146;
          v24(v34, v146);
          v24(v31, v35);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v132 ^ v32)) {
            break;
          }
          ++v12;
          v28 += 40;
          Swift::Int v6 = v134;
          if (v134 == v12)
          {
            Swift::Int v12 = v134;
            Swift::Int v15 = v133;
            goto LABEL_23;
          }
        }
        Swift::Int v15 = v133;
        Swift::Int v6 = v134;
      }
LABEL_23:
      uint64_t v13 = v130;
      if (v132)
      {
        if (v12 < v15) {
          goto LABEL_139;
        }
        if (v15 < v12) {
          break;
        }
      }
    }
    if (v12 < v6) {
      goto LABEL_33;
    }
LABEL_52:
    if (v12 < v15) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1001EE868(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v63 = *((void *)v13 + 2);
    unint64_t v62 = *((void *)v13 + 3);
    unint64_t v14 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v13 = sub_1001EE868((char *)(v62 > 1), v63 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v14;
    uint64_t v64 = v13 + 32;
    uint64_t v65 = &v13[16 * v63 + 32];
    *(void *)uint64_t v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      Swift::Int v134 = v12;
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          char v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_121;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_122;
          }
          unint64_t v78 = v14 - 2;
          uint64_t v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_124;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_127;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_131;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_90;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v13 + 4);
            uint64_t v96 = *((void *)v13 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_84;
          }
          uint64_t v68 = *((void *)v13 + 4);
          uint64_t v67 = *((void *)v13 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_123;
        }
        unint64_t v78 = v14 - 2;
        uint64_t v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_126;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_129;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_130;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_90:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v89) {
          goto LABEL_125;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_128;
        }
        if (v100 < v88) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        char v106 = a1;
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v108 = v13;
        char v109 = &v64[16 * v105];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = v64;
        unint64_t v112 = v66;
        uint64_t v113 = &v64[16 * v66];
        uint64_t v114 = *((void *)v113 + 1);
        uint64_t v115 = v136;
        sub_1004BD808((char *)(v107 + 40 * *(void *)v109), (char *)(v107 + 40 * *(void *)v113), (char *)(v107 + 40 * v114), v135);
        uint64_t v136 = v115;
        if (v115)
        {
LABEL_100:
          uint64_t v117 = v128;
          swift_bridgeObjectRelease();
          v117[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v114 < v110) {
          goto LABEL_118;
        }
        if (v112 > *((void *)v108 + 2)) {
          goto LABEL_119;
        }
        *(void *)char v109 = v110;
        *(void *)&v111[16 * v105 + 8] = v114;
        unint64_t v116 = *((void *)v108 + 2);
        if (v112 >= v116) {
          goto LABEL_120;
        }
        uint64_t v13 = v108;
        unint64_t v14 = v116 - 1;
        memmove(v113, v113 + 16, 16 * (v116 - 1 - v112));
        uint64_t v64 = v111;
        *((void *)v108 + 2) = v116 - 1;
        a1 = v106;
        Swift::Int v12 = v134;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v6 = a1[1];
    if (v12 >= v6)
    {
      uint64_t v11 = v128;
      goto LABEL_103;
    }
  }
  Swift::Int v36 = v12;
  uint64_t v132 = a1;
  uint64_t v37 = v130;
  uint64_t v38 = 40 * v12 - 40;
  uint64_t v39 = 40 * v15;
  do
  {
    if (v15 != --v36)
    {
      if (!v131) {
        goto LABEL_144;
      }
      uint64_t v40 = v131 + v39;
      uint64_t v41 = v131 + v38;
      sub_100093E60((long long *)(v131 + v39), (uint64_t)&v143);
      uint64_t v42 = *(void *)(v41 + 32);
      long long v43 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v43;
      *(void *)(v40 + 32) = v42;
      sub_100093E60(&v143, v41);
    }
    ++v15;
    v38 -= 40;
    v39 += 40;
  }
  while (v15 < v36);
  uint64_t v13 = v37;
  a1 = v132;
  Swift::Int v15 = v133;
  Swift::Int v6 = v134;
  if (v12 >= v134) {
    goto LABEL_52;
  }
LABEL_33:
  if (__OFSUB__(v12, v15)) {
    goto LABEL_137;
  }
  if (v12 - v15 >= v129) {
    goto LABEL_52;
  }
  if (__OFADD__(v15, v129)) {
    goto LABEL_140;
  }
  if (v15 + v129 >= v6) {
    Swift::Int v44 = v6;
  }
  else {
    Swift::Int v44 = v15 + v129;
  }
  if (v44 >= v15)
  {
    if (v12 != v44)
    {
      uint64_t v130 = v13;
      uint64_t v45 = 40 * v12 - 40;
      uint64_t v132 = (uint64_t *)v44;
      do
      {
        Swift::Int v46 = v15;
        Swift::Int v134 = v45;
        while (1)
        {
          Swift::Int v47 = v12;
          uint64_t v48 = *a1 + v45;
          sub_10008E75C(v48 + 40, (uint64_t)&v143);
          sub_10008E75C(v48, (uint64_t)v140);
          uint64_t v49 = v144;
          uint64_t v50 = v145;
          sub_10007E4EC(&v143, v144);
          uint64_t v51 = a1;
          uint64_t v52 = v138;
          (*(void (**)(uint64_t, uint64_t))(v50 + 32))(v49, v50);
          uint64_t v53 = v141;
          uint64_t v54 = v142;
          sub_10007E4EC(v140, v141);
          char v55 = v139;
          (*(void (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
          LOBYTE(v53) = static Date.> infix(_:_:)();
          uint64_t v56 = *v137;
          uint64_t v57 = v55;
          uint64_t v58 = v146;
          (*v137)(v57, v146);
          v56(v52, v58);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v59 = *v51;
          if (!*v51) {
            goto LABEL_142;
          }
          a1 = v51;
          uint64_t v60 = v59 + v45;
          sub_100093E60((long long *)(v59 + v45 + 40), (uint64_t)&v143);
          long long v61 = *(_OWORD *)(v60 + 16);
          *(_OWORD *)(v60 + 40) = *(_OWORD *)v60;
          *(_OWORD *)(v60 + 56) = v61;
          *(void *)(v60 + 72) = *(void *)(v60 + 32);
          sub_100093E60(&v143, v60);
          v45 -= 40;
          ++v46;
          Swift::Int v12 = v47;
          if (v47 == v46) {
            goto LABEL_43;
          }
        }
        a1 = v51;
        Swift::Int v12 = v47;
LABEL_43:
        ++v12;
        Swift::Int v15 = v133;
        uint64_t v45 = v134 + 40;
      }
      while ((uint64_t *)v12 != v132);
      Swift::Int v12 = (Swift::Int)v132;
      uint64_t v13 = v130;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004BC2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v55 = a4;
  uint64_t v43 = a1;
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t result = __chkstk_darwin(v9);
  Swift::Int v15 = (char *)&v41 - v14;
  uint64_t v51 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v16 = v13 + 16;
    uint64_t v18 = *(void *)(v16 + 56);
    Swift::Int v47 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v48 = v17;
    uint64_t v49 = v16;
    uint64_t v50 = v18;
    uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v57 = v18 * (v51 - 1);
    uint64_t v56 = v18 * v51;
LABEL_6:
    uint64_t v20 = 0;
    uint64_t v21 = v43;
    while (1)
    {
      uint64_t v22 = *v55;
      uint64_t v52 = v56 + v20;
      uint64_t v23 = v48;
      v48(v15, v56 + v20 + v22, v6);
      v23(v11, v57 + v20 + v22, v6);
      uint64_t v24 = DateComponents.era.getter();
      uint64_t v25 = v11;
      if ((v26 & 1) == 0)
      {
        uint64_t v27 = v24;
        uint64_t v28 = DateComponents.era.getter();
        if ((v29 & 1) == 0)
        {
          uint64_t v30 = v28;
          uint64_t v46 = DateComponents.year.getter();
          if ((v31 & 1) == 0)
          {
            uint64_t v45 = DateComponents.year.getter();
            if ((v32 & 1) == 0)
            {
              uint64_t v33 = DateComponents.month.getter();
              if ((v34 & 1) == 0)
              {
                uint64_t v44 = v33;
                uint64_t v35 = DateComponents.month.getter();
                if ((v36 & 1) == 0 && v30 >= v27 && (v27 < v30 || v45 >= v46 && (v46 < v45 || v35 >= v44)))
                {
                  uint64_t v19 = *v47;
                  (*v47)(v25, v6);
                  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v15, v6);
                  uint64_t v11 = v25;
LABEL_5:
                  v57 += v50;
                  v56 += v50;
                  if (++v51 == v42) {
                    return result;
                  }
                  goto LABEL_6;
                }
              }
            }
          }
        }
      }
      uint64_t v37 = *v47;
      (*v47)(v25, v6);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v37)(v15, v6);
      uint64_t v38 = *v55;
      if (!*v55) {
        break;
      }
      uint64_t v39 = v38 + v57 + v20;
      uint64_t v40 = *v53;
      (*v53)(v54, v38 + v56 + v20, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v39, v54, v6);
      v20 -= v50;
      ++v21;
      uint64_t v11 = v25;
      if (v51 == v21) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BC688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v29 = a1;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v7 = __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v38 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v15 = 40 * v38 - 40;
LABEL_5:
    uint64_t v16 = v29;
    uint64_t v30 = v15;
    while (1)
    {
      uint64_t v17 = *a4 + v15;
      sub_10008E75C(v17 + 40, (uint64_t)&v35);
      sub_10008E75C(v17, (uint64_t)v32);
      uint64_t v18 = v36;
      uint64_t v19 = v37;
      sub_10007E4EC(&v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      sub_10007E4EC(v32, v33);
      (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
      LOBYTE(v20) = static Date.> infix(_:_:)();
      uint64_t v22 = *v14;
      uint64_t v23 = v31;
      (*v14)(v9, v31);
      v22(v13, v23);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
      uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v35);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        uint64_t v15 = v30 + 40;
        if (++v38 == v28) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = v24 + v15;
      sub_100093E60((long long *)(v24 + v15 + 40), (uint64_t)&v35);
      long long v26 = *(_OWORD *)(v25 + 16);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)v25;
      *(_OWORD *)(v25 + 56) = v26;
      *(void *)(v25 + 72) = *(void *)(v25 + 32);
      uint64_t result = sub_100093E60(&v35, v25);
      v15 -= 40;
      if (v38 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BC8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v29 = a1;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v7 = __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v38 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v15 = 40 * v38 - 40;
LABEL_5:
    uint64_t v16 = v29;
    uint64_t v30 = v15;
    while (1)
    {
      uint64_t v17 = *a4 + v15;
      sub_10008E75C(v17 + 40, (uint64_t)&v35);
      sub_10008E75C(v17, (uint64_t)v32);
      uint64_t v18 = v36;
      uint64_t v19 = v37;
      sub_10007E4EC(&v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      sub_10007E4EC(v32, v33);
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
      LOBYTE(v20) = static Date.> infix(_:_:)();
      uint64_t v22 = *v14;
      uint64_t v23 = v31;
      (*v14)(v9, v31);
      v22(v13, v23);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
      uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v35);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        uint64_t v15 = v30 + 40;
        if (++v38 == v28) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = v24 + v15;
      sub_100093E60((long long *)(v24 + v15 + 40), (uint64_t)&v35);
      long long v26 = *(_OWORD *)(v25 + 16);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)v25;
      *(_OWORD *)(v25 + 56) = v26;
      *(void *)(v25 + 72) = *(void *)(v25 + 32);
      uint64_t result = sub_100093E60(&v35, v25);
      v15 -= 40;
      if (v38 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1004BCB70(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v93 = a3;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v81 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v81 - v16;
  uint64_t v92 = *(void *)(v18 + 72);
  if (!v92)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (a2 - a1 == 0x8000000000000000 && v92 == -1) {
    goto LABEL_96;
  }
  int64_t v19 = v93 - a2;
  if (v93 - a2 == 0x8000000000000000 && v92 == -1) {
    goto LABEL_97;
  }
  uint64_t v20 = (uint64_t)(a2 - a1) / v92;
  unint64_t v96 = a1;
  unint64_t v95 = a4;
  uint64_t v21 = v19 / v92;
  if (v20 >= v19 / v92)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v21 * v92;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v46 = a4 + v24;
      unint64_t v94 = a4 + v24;
      unint64_t v96 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        uint64_t v49 = -v92;
        uint64_t v50 = *(void (**)(char *))(v8 + 16);
        uint64_t v89 = v7;
        uint64_t v90 = v8 + 16;
        uint64_t v86 = (void (**)(uint64_t, uint64_t))(v8 + 8);
        BOOL v87 = v50;
        uint64_t v92 = (uint64_t)v11;
        uint64_t v88 = v49;
        unint64_t v84 = a1;
        unint64_t v85 = a4;
        do
        {
          uint64_t v51 = v87;
          ((void (*)(char *, unint64_t, uint64_t))v87)(v91, v46 + v49, v7);
          uint64_t v52 = v11;
          unint64_t v53 = a2 + v49;
          v51(v52);
          uint64_t v54 = DateComponents.era.getter();
          if (v55) {
            goto LABEL_68;
          }
          uint64_t v56 = v54;
          uint64_t v57 = DateComponents.era.getter();
          if ((v58 & 1) != 0
            || (uint64_t v59 = v57, v60 = DateComponents.year.getter(), (v61 & 1) != 0)
            || (uint64_t v62 = v60, v63 = DateComponents.year.getter(), (v64 & 1) != 0)
            || (v83 = v63, uint64_t v65 = DateComponents.month.getter(), (v66 & 1) != 0))
          {
LABEL_68:
            BOOL v68 = 1;
          }
          else
          {
            uint64_t v82 = v65;
            uint64_t v67 = DateComponents.month.getter();
            BOOL v68 = 1;
            if ((v69 & 1) == 0 && v59 >= v56)
            {
              if (v56 >= v59)
              {
                if (v83 >= v62) {
                  BOOL v68 = v62 >= v83 && v67 < v82;
                }
              }
              else
              {
                BOOL v68 = 0;
              }
            }
          }
          unint64_t v70 = v93;
          uint64_t v71 = v88;
          uint64_t v72 = v89;
          unint64_t v73 = v93 + v88;
          uint64_t v74 = *v86;
          (*v86)(v92, v89);
          v74((uint64_t)v91, v72);
          if (v68)
          {
            if (v70 < a2 || v73 >= a2)
            {
              unint64_t v77 = v53;
              uint64_t v7 = v89;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v76 = v84;
              uint64_t v49 = v88;
            }
            else
            {
              BOOL v75 = v70 == a2;
              unint64_t v76 = v84;
              uint64_t v49 = v88;
              uint64_t v7 = v89;
              unint64_t v77 = v53;
              if (!v75) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v96 += v49;
          }
          else
          {
            unint64_t v78 = v94;
            v94 += v71;
            BOOL v79 = v70 < v78 || v73 >= v78;
            uint64_t v49 = v71;
            if (v79)
            {
              uint64_t v7 = v89;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v7 = v89;
              if (v70 != v78) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v77 = a2;
            unint64_t v76 = v84;
          }
          unint64_t v46 = v94;
          uint64_t v11 = (char *)v92;
          if (v94 <= v85) {
            break;
          }
          a2 = v77;
          unint64_t v93 = v73;
        }
        while (v77 > v76);
      }
      goto LABEL_58;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v20 * v92;
    uint64_t v23 = v15;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v91 = (char *)(a4 + v22);
    unint64_t v94 = a4 + v22;
    if (v22 >= 1 && a2 < v93)
    {
      long long v26 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v90 = v8 + 16;
      uint64_t v27 = (void (**)(uint64_t, uint64_t))(v8 + 8);
      do
      {
        v26(v17, a2, v7);
        v26(v23, a4, v7);
        uint64_t v28 = DateComponents.era.getter();
        if (v29) {
          goto LABEL_38;
        }
        uint64_t v30 = v28;
        uint64_t v31 = DateComponents.era.getter();
        if ((v32 & 1) != 0
          || (uint64_t v33 = v31, v89 = DateComponents.year.getter(), (v34 & 1) != 0)
          || (uint64_t v88 = DateComponents.year.getter(), (v35 & 1) != 0)
          || (uint64_t v36 = DateComponents.month.getter(), (v37 & 1) != 0)
          || (v87 = (void (*)(char *))v36, uint64_t v38 = DateComponents.month.getter(), (v39 & 1) != 0)
          || v33 < v30
          || v30 >= v33 && (v88 < v89 || v89 >= v88 && v38 < (uint64_t)v87))
        {
LABEL_38:
          uint64_t v43 = *v27;
          (*v27)((uint64_t)v23, v7);
          v43((uint64_t)v17, v7);
          unint64_t v41 = v96;
          unint64_t v44 = a2 + v92;
          if (v96 < a2 || v96 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v96 == a2)
          {
            unint64_t v41 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          uint64_t v40 = *v27;
          (*v27)((uint64_t)v23, v7);
          v40((uint64_t)v17, v7);
          unint64_t v41 = v96;
          unint64_t v42 = v95 + v92;
          if (v96 < v95 || v96 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v96 != v95)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v95 = v42;
          unint64_t v44 = a2;
        }
        unint64_t v96 = v41 + v92;
        a4 = v95;
        if (v95 >= (unint64_t)v91) {
          break;
        }
        a2 = v44;
      }
      while (v44 < v93);
    }
LABEL_58:
    sub_1001EE980(&v96, &v95, (uint64_t *)&v94);
    return 1;
  }
LABEL_98:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004BD2A0(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v63 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v63 - 8);
  uint64_t v9 = __chkstk_darwin(v63);
  uint64_t v62 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v60 = a3;
  char v61 = (char *)v57 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 40;
  uint64_t v72 = a1;
  uint64_t v71 = a4;
  if (v13 >= v14 / 40)
  {
    if (v14 < -39) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[40 * v15] <= a4) {
      memmove(a4, a2, 40 * v15);
    }
    char v35 = &a4[40 * v15];
    unint64_t v70 = v35;
    uint64_t v72 = a2;
    if (v14 < 40 || a1 >= a2) {
      goto LABEL_42;
    }
    v57[2] = v8 + 8;
    char v58 = a1;
    unint64_t v36 = (unint64_t)(v60 - 40);
    uint64_t v59 = a4;
    char v37 = v62;
    uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      uint64_t v60 = (char *)(v36 + 40);
      sub_10008E75C((uint64_t)(v35 - 40), (uint64_t)v67);
      unint64_t v41 = a2 - 40;
      sub_10008E75C((uint64_t)(a2 - 40), (uint64_t)v64);
      uint64_t v43 = v68;
      uint64_t v44 = v69;
      sub_10007E4EC(v67, v68);
      uint64_t v45 = v61;
      (*(void (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      sub_10007E4EC(v64, v65);
      (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
      LOBYTE(v46) = static Date.> infix(_:_:)();
      uint64_t v48 = *v38;
      uint64_t v49 = v63;
      (*v38)(v37, v63);
      v48(v45, v49);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
      if (v46) {
        break;
      }
      uint64_t v52 = v70;
      char v35 = v70 - 40;
      v70 -= 40;
      if (v60 < v52 || v36 >= (unint64_t)v52)
      {
        long long v39 = *(_OWORD *)v35;
        long long v40 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v39;
        *(_OWORD *)(v36 + 16) = v40;
        unint64_t v41 = a2;
        goto LABEL_30;
      }
      unint64_t v42 = (unint64_t)v58;
      unint64_t v53 = (unint64_t)v59;
      if (v60 != v52)
      {
        long long v54 = *(_OWORD *)v35;
        long long v55 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v54;
        *(_OWORD *)(v36 + 16) = v55;
      }
      unint64_t v41 = a2;
      if ((unint64_t)v35 <= v53) {
        goto LABEL_42;
      }
LABEL_31:
      v36 -= 40;
      a2 = v41;
      if ((unint64_t)v41 <= v42) {
        goto LABEL_42;
      }
    }
    if (v60 != a2 || v36 >= (unint64_t)a2)
    {
      long long v50 = *(_OWORD *)v41;
      long long v51 = *(_OWORD *)(a2 - 24);
      *(void *)(v36 + 32) = *((void *)a2 - 1);
      *(_OWORD *)unint64_t v36 = v50;
      *(_OWORD *)(v36 + 16) = v51;
    }
    v72 -= 40;
    char v35 = v70;
LABEL_30:
    unint64_t v42 = (unint64_t)v58;
    if (v35 <= v59) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -39)
  {
    if (a4 != a1 || &a1[40 * v13] <= a4) {
      memmove(a4, a1, 40 * v13);
    }
    uint64_t v16 = &a4[40 * v13];
    unint64_t v70 = v16;
    if (v12 >= 40 && a2 < v60)
    {
      uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v18 = v61;
      do
      {
        sub_10008E75C((uint64_t)a2, (uint64_t)v67);
        sub_10008E75C((uint64_t)a4, (uint64_t)v64);
        uint64_t v19 = v68;
        uint64_t v20 = v69;
        sub_10007E4EC(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
        uint64_t v21 = v65;
        uint64_t v22 = v66;
        sub_10007E4EC(v64, v65);
        uint64_t v23 = v62;
        (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
        char v24 = static Date.> infix(_:_:)();
        uint64_t v25 = *v17;
        long long v26 = v23;
        uint64_t v27 = v63;
        (*v17)(v26, v63);
        v25(v18, v27);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
        uint64_t v28 = v72;
        if (v24)
        {
          char v29 = a2 + 40;
          if (v72 >= a2 && v72 < v29 && v72 == a2)
          {
            uint64_t v28 = a2;
          }
          else
          {
            long long v30 = *(_OWORD *)a2;
            long long v31 = *((_OWORD *)a2 + 1);
            *((void *)v72 + 4) = *((void *)a2 + 4);
            *uint64_t v28 = v30;
            v28[1] = v31;
          }
        }
        else
        {
          char v32 = v71 + 40;
          if (v72 != v71 || v72 >= v32)
          {
            long long v33 = *(_OWORD *)v71;
            long long v34 = *((_OWORD *)v71 + 1);
            *((void *)v72 + 4) = *((void *)v71 + 4);
            *uint64_t v28 = v33;
            v28[1] = v34;
          }
          uint64_t v71 = v32;
          char v29 = a2;
        }
        uint64_t v72 = (char *)v28 + 40;
        a4 = v71;
        if (v71 >= v16) {
          break;
        }
        a2 = v29;
      }
      while (v29 < v60);
    }
LABEL_42:
    sub_1001EE964(&v72, &v71, &v70);
    return 1;
  }
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004BD808(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v63 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v63 - 8);
  uint64_t v9 = __chkstk_darwin(v63);
  uint64_t v62 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v60 = a3;
  char v61 = (char *)v57 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 40;
  uint64_t v72 = a1;
  uint64_t v71 = a4;
  if (v13 >= v14 / 40)
  {
    if (v14 < -39) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[40 * v15] <= a4) {
      memmove(a4, a2, 40 * v15);
    }
    char v35 = &a4[40 * v15];
    unint64_t v70 = v35;
    uint64_t v72 = a2;
    if (v14 < 40 || a1 >= a2) {
      goto LABEL_42;
    }
    v57[2] = v8 + 8;
    char v58 = a1;
    unint64_t v36 = (unint64_t)(v60 - 40);
    uint64_t v59 = a4;
    char v37 = v62;
    uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      uint64_t v60 = (char *)(v36 + 40);
      sub_10008E75C((uint64_t)(v35 - 40), (uint64_t)v67);
      unint64_t v41 = a2 - 40;
      sub_10008E75C((uint64_t)(a2 - 40), (uint64_t)v64);
      uint64_t v43 = v68;
      uint64_t v44 = v69;
      sub_10007E4EC(v67, v68);
      uint64_t v45 = v61;
      (*(void (**)(uint64_t, uint64_t))(v44 + 32))(v43, v44);
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      sub_10007E4EC(v64, v65);
      (*(void (**)(uint64_t, uint64_t))(v47 + 32))(v46, v47);
      LOBYTE(v46) = static Date.> infix(_:_:)();
      uint64_t v48 = *v38;
      uint64_t v49 = v63;
      (*v38)(v37, v63);
      v48(v45, v49);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
      if (v46) {
        break;
      }
      uint64_t v52 = v70;
      char v35 = v70 - 40;
      v70 -= 40;
      if (v60 < v52 || v36 >= (unint64_t)v52)
      {
        long long v39 = *(_OWORD *)v35;
        long long v40 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v39;
        *(_OWORD *)(v36 + 16) = v40;
        unint64_t v41 = a2;
        goto LABEL_30;
      }
      unint64_t v42 = (unint64_t)v58;
      unint64_t v53 = (unint64_t)v59;
      if (v60 != v52)
      {
        long long v54 = *(_OWORD *)v35;
        long long v55 = *(_OWORD *)(v52 - 24);
        *(void *)(v36 + 32) = *((void *)v52 - 1);
        *(_OWORD *)unint64_t v36 = v54;
        *(_OWORD *)(v36 + 16) = v55;
      }
      unint64_t v41 = a2;
      if ((unint64_t)v35 <= v53) {
        goto LABEL_42;
      }
LABEL_31:
      v36 -= 40;
      a2 = v41;
      if ((unint64_t)v41 <= v42) {
        goto LABEL_42;
      }
    }
    if (v60 != a2 || v36 >= (unint64_t)a2)
    {
      long long v50 = *(_OWORD *)v41;
      long long v51 = *(_OWORD *)(a2 - 24);
      *(void *)(v36 + 32) = *((void *)a2 - 1);
      *(_OWORD *)unint64_t v36 = v50;
      *(_OWORD *)(v36 + 16) = v51;
    }
    v72 -= 40;
    char v35 = v70;
LABEL_30:
    unint64_t v42 = (unint64_t)v58;
    if (v35 <= v59) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -39)
  {
    if (a4 != a1 || &a1[40 * v13] <= a4) {
      memmove(a4, a1, 40 * v13);
    }
    uint64_t v16 = &a4[40 * v13];
    unint64_t v70 = v16;
    if (v12 >= 40 && a2 < v60)
    {
      uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v18 = v61;
      do
      {
        sub_10008E75C((uint64_t)a2, (uint64_t)v67);
        sub_10008E75C((uint64_t)a4, (uint64_t)v64);
        uint64_t v19 = v68;
        uint64_t v20 = v69;
        sub_10007E4EC(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
        uint64_t v21 = v65;
        uint64_t v22 = v66;
        sub_10007E4EC(v64, v65);
        uint64_t v23 = v62;
        (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
        char v24 = static Date.> infix(_:_:)();
        uint64_t v25 = *v17;
        long long v26 = v23;
        uint64_t v27 = v63;
        (*v17)(v26, v63);
        v25(v18, v27);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
        uint64_t v28 = v72;
        if (v24)
        {
          char v29 = a2 + 40;
          if (v72 >= a2 && v72 < v29 && v72 == a2)
          {
            uint64_t v28 = a2;
          }
          else
          {
            long long v30 = *(_OWORD *)a2;
            long long v31 = *((_OWORD *)a2 + 1);
            *((void *)v72 + 4) = *((void *)a2 + 4);
            *uint64_t v28 = v30;
            v28[1] = v31;
          }
        }
        else
        {
          char v32 = v71 + 40;
          if (v72 != v71 || v72 >= v32)
          {
            long long v33 = *(_OWORD *)v71;
            long long v34 = *((_OWORD *)v71 + 1);
            *((void *)v72 + 4) = *((void *)v71 + 4);
            *uint64_t v28 = v33;
            v28[1] = v34;
          }
          uint64_t v71 = v32;
          char v29 = a2;
        }
        uint64_t v72 = (char *)v28 + 40;
        a4 = v71;
        if (v71 >= v16) {
          break;
        }
        a2 = v29;
      }
      while (v29 < v60);
    }
LABEL_42:
    sub_1001EE964(&v72, &v71, &v70);
    return 1;
  }
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004BDD70(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_1000B1710((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_100093E60(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1004BDE08(uint64_t a1, __int16 a2, uint64_t a3, int a4)
{
  switch(HIBYTE(a2))
  {
    case 2:
      return (a4 & 0xFF00) == 0x200;
    case 3:
      return (a4 & 0xFF00) == 0x300;
    case 4:
      return (a4 & 0xFF00) == 0x400;
    case 5:
      return (a4 & 0xFF00) == 0x500;
    case 6:
      return (a4 & 0xFF00) == 0x600;
    default:
      if (BYTE1(a4) - 2 < 5 || a1 != a3) {
        return 0;
      }
      if (a2 == 2)
      {
        if (a4 == 2) {
          return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
        }
        return 0;
      }
      else
      {
        uint64_t result = 0;
        if a4 != 2 && ((((a2 & 1) == 0) ^ a4)) {
          return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
        }
      }
      return result;
  }
}

uint64_t sub_1004BDF1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1004BDF54()
{
  sub_1004B8120(v0);
}

uint64_t sub_1004BDF5C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1004BDF9C()
{
}

uint64_t sub_1004BDFA4()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1004BDFE4()
{
  return sub_1004B97F0(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1004BDFF0()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 24);
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1004BE040(uint64_t a1, uint64_t a2)
{
  sub_1004B9954(a1, a2, *(void *)(v2 + 16), (void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_1004BE054()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 24);

  return swift_deallocObject();
}

void sub_1004BE094()
{
  sub_1004B9F80(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1004BE0A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DateComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _swiftEmptyDictionarySingleton;
  long long v39 = _swiftEmptyDictionarySingleton;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return (uint64_t)v6;
  }
  uint64_t v8 = a1 + 32;
  long long v31 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v32 = v3 + 32;
  long long v30 = xmmword_1007509E0;
  uint64_t v33 = v3;
  uint64_t v34 = v2;
  while (1)
  {
    sub_10008E75C(v8, (uint64_t)&v36);
    uint64_t v9 = v37;
    uint64_t v10 = v38;
    sub_10007E4EC(&v36, v37);
    sub_1004B8630(v9, v10, (uint64_t)v5);
    unint64_t v12 = sub_100529888((uint64_t)v5);
    uint64_t v13 = v6[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (v6[3] < v15)
    {
      sub_1004EA96C(v15, 1);
      uint64_t v6 = v39;
      unint64_t v17 = sub_100529888((uint64_t)v5);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_19;
      }
      unint64_t v12 = v17;
    }
    if (v16)
    {
      (*v31)(v5, v2);
      uint64_t v6 = v39;
      uint64_t v19 = v39[7];
      sub_100093E60(&v36, (uint64_t)v35);
      uint64_t v20 = *(void **)(v19 + 8 * v12);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v19 + 8 * v12) = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v20 = sub_1001E7334(0, v20[2] + 1, 1, v20);
        *(void *)(v19 + 8 * v12) = v20;
      }
      unint64_t v23 = v20[2];
      unint64_t v22 = v20[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t v20 = sub_1001E7334((void *)(v22 > 1), v23 + 1, 1, v20);
        *(void *)(v19 + 8 * v12) = v20;
      }
      uint64_t v3 = v33;
      v20[2] = v23 + 1;
      sub_100093E60(v35, (uint64_t)&v20[5 * v23 + 4]);
      uint64_t v2 = v34;
    }
    else
    {
      sub_1000AFA94(&qword_10094E830);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = v30;
      sub_100093E60(&v36, v24 + 32);
      v6[(v12 >> 6) + 8] |= 1 << v12;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6[6] + *(void *)(v3 + 72) * v12, v5, v2);
      *(void *)(v6[7] + 8 * v12) = v24;
      uint64_t v25 = v6[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_18;
      }
      uint64_t v6[2] = v27;
    }
    v8 += 40;
    if (!--v7) {
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1004BE3B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v40 = a1;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    char v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v15 = v8 + 16;
    long long v39 = v16;
    uint64_t v17 = a2;
    uint64_t v18 = a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v36 = *(void *)(v15 + 56);
    uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v34 = (void (**)(char *, uint64_t))(v15 - 8);
    char v35 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    v29[2] = v17;
    swift_bridgeObjectRetain();
    uint64_t v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    v29[1] = (v15 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v31 = a3;
    uint64_t v32 = v15;
    long long v30 = v10;
    while (1)
    {
      v39(v13, v18, v7);
      uint64_t v20 = *v38;
      (*v38)(v13, 0, 1, v7);
      if ((*v37)(v13, 1, v7) == 1) {
        break;
      }
      (*v35)(v10, v13, v7);
      if (*(void *)(a3 + 16))
      {
        unint64_t v21 = sub_100529888((uint64_t)v10);
        if (v22)
        {
          unint64_t v41 = *(void **)(*(void *)(a3 + 56) + 8 * v21);
          swift_bridgeObjectRetain_n();
          sub_1004BAA00(&v41);
          if (v4)
          {
            uint64_t result = (void *)swift_release();
            __break(1u);
            return result;
          }
          swift_bridgeObjectRelease();
          unint64_t v23 = v41;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v33 = 0;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            long long v40 = sub_1001E822C(0, v40[2] + 1, 1, v40);
          }
          unint64_t v26 = v40[2];
          unint64_t v25 = v40[3];
          if (v26 >= v25 >> 1) {
            long long v40 = sub_1001E822C((void *)(v25 > 1), v26 + 1, 1, v40);
          }
          uint64_t v19 = v40;
          void v40[2] = v26 + 1;
          v19[v26 + 4] = v23;
          swift_release();
          uint64_t v4 = v33;
          uint64_t v10 = v30;
          a3 = v31;
        }
      }
      (*v34)(v10, v7);
      v18 += v36;
      if (!--v14)
      {
        v20(v13, 1, 1, v7);
        break;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v27(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v40;
}

void *sub_1004BE700(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v52 = a3;
  char v3 = HIBYTE(a2);
  uint64_t v64 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  char v61 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  __chkstk_darwin(v8);
  uint64_t result = _swiftEmptyDictionarySingleton;
  if (v3 != 2 && v3 != 5)
  {
    uint64_t v68 = *(void *)(v52 + 16);
    if (v68)
    {
      uint64_t v65 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v59 = v10;
      uint64_t v67 = v52 + 32;
      unsigned int v58 = enum case for Calendar.Component.month(_:);
      unsigned int v57 = enum case for Calendar.Component.year(_:);
      unsigned int v56 = enum case for Calendar.Component.era(_:);
      long long v55 = (void (**)(char *, uint64_t))(v4 + 8);
      long long v54 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v51 = v11;
      uint64_t v60 = (void (**)(uint64_t, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      uint64_t v66 = _swiftEmptyDictionarySingleton;
      long long v53 = xmmword_100752410;
      while (1)
      {
        uint64_t v15 = *(void *)(v67 + 8 * v13);
        uint64_t v72 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v16 = *(void *)(v15 + 16);
        uint64_t v69 = v13;
        if (v16)
        {
          uint64_t v17 = v15 + 32;
          uint64_t v18 = v15 + 32;
          uint64_t v19 = v16;
          do
          {
            sub_10008E75C(v18, (uint64_t)v71);
            sub_1000AFA94((uint64_t *)&unk_100955630);
            sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
            if (!swift_dynamicCast())
            {
              unint64_t v70 = 0;
              swift_release();
              uint64_t v14 = v70;
              swift_bridgeObjectRelease();

              goto LABEL_6;
            }
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            v18 += 40;
            --v19;
          }
          while (v19);
          swift_release();
          uint64_t v72 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v13 = v69;
          while (1)
          {
            sub_10008E75C(v17, (uint64_t)v71);
            sub_1000AFA94((uint64_t *)&unk_100955630);
            if (!swift_dynamicCast()) {
              break;
            }
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            v17 += 40;
            if (!--v16) {
              goto LABEL_17;
            }
          }
          unint64_t v70 = 0;
          swift_release();
          unint64_t v41 = v70;
          swift_bridgeObjectRelease();

          goto LABEL_7;
        }
        swift_release();
        uint64_t v72 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
LABEL_17:
        unint64_t v20 = (unint64_t)v72;
        swift_bridgeObjectRelease();
        if ((v20 & 0x8000000000000000) != 0 || (v20 & 0x4000000000000000) != 0)
        {
          swift_retain();
          uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
          if (!result)
          {
LABEL_33:
            swift_release_n();
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v21 = *(void *)(v20 + 16);
          uint64_t result = (void *)swift_retain();
          if (!v21) {
            goto LABEL_33;
          }
        }
        if ((v20 & 0xC000000000000001) != 0)
        {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)(v20 + 16))
          {
            __break(1u);
            return result;
          }
          id v22 = *(id *)(v20 + 32);
        }
        unint64_t v23 = v22;
        swift_release();
        id v24 = v23;
        unint64_t v25 = v61;
        static Calendar.current.getter();
        sub_1000AFA94((uint64_t *)&unk_1009559B0);
        uint64_t v26 = type metadata accessor for Calendar.Component();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(void *)(v27 + 72);
        unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v53;
        unint64_t v31 = v30 + v29;
        uint64_t v32 = *(void (**)(unint64_t, void, uint64_t))(v27 + 104);
        v32(v31, v58, v26);
        v32(v31 + v28, v57, v26);
        v32(v31 + 2 * v28, v56, v26);
        sub_1000C6A18(v30);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v33 = [v24 endDate];
        uint64_t v34 = v63;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = (uint64_t)v65;
        Calendar.dateComponents(_:from:)();
        swift_bridgeObjectRelease();
        (*v55)(v34, v64);
        (*v54)(v25, v62);

        id v36 = objc_allocWithZone((Class)FIUIWorkoutStatistics);
        sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_release();
        id v38 = [v36 initWithWorkouts:isa];

        if (v38)
        {
          uint64_t v39 = (uint64_t)v66;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v71[0] = v39;
          sub_1004EFF00((uint64_t)v38, v35, isUniquelyReferenced_nonNull_native);
          uint64_t v66 = (void *)v71[0];
          swift_bridgeObjectRelease();
          (*v60)(v35, v59);

LABEL_6:
          uint64_t v13 = v69;
        }
        else
        {
          uint64_t v42 = (uint64_t)v66;
          swift_bridgeObjectRetain();
          unint64_t v43 = sub_100529888(v35);
          char v45 = v44;
          swift_bridgeObjectRelease();
          if (v45)
          {
            int v46 = swift_isUniquelyReferenced_nonNull_native();
            v71[0] = v42;
            if (!v46)
            {
              sub_1004F33C0();
              uint64_t v42 = v71[0];
            }
            uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
            uint64_t v48 = v59;
            v47(*(void *)(v42 + 48) + *(void *)(v51 + 72) * v43, v59);
            uint64_t v49 = *(void **)(*(void *)(v71[0] + 56) + 8 * v43);
            uint64_t v66 = (void *)v71[0];
            sub_1005DD0D0(v43, v71[0]);
            swift_bridgeObjectRelease();
            uint64_t v50 = v48;
          }
          else
          {
            uint64_t v49 = 0;
            uint64_t v47 = *v60;
            uint64_t v50 = v59;
          }
          v47((uint64_t)v65, v50);

          uint64_t v13 = v69;
        }
LABEL_7:
        if (++v13 == v68)
        {
          swift_bridgeObjectRelease();
          return v66;
        }
      }
    }
    return _swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1004BEF24(unsigned __int16 *a1, unsigned __int16 *a2, unsigned __int16 *a3, unsigned __int16 *a4, uint64_t a5, void *a6)
{
  id v79 = a6;
  uint64_t v88 = a5;
  uint64_t v86 = type metadata accessor for Locale.Language();
  uint64_t v10 = *(void *)(v86 - 8);
  uint64_t v11 = __chkstk_darwin(v86);
  uint64_t v83 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v84 = (char *)v76 - v13;
  uint64_t v85 = type metadata accessor for Locale();
  uint64_t v14 = *(char **)(v85 - 8);
  uint64_t v15 = __chkstk_darwin(v85);
  uint64_t v82 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v81 = (char *)v76 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_100952F38);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v80 = (char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)a2 - (char *)a1;
  uint64_t v23 = (char *)a2 - (char *)a1 + 15;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v23 = (char *)a2 - (char *)a1;
  }
  uint64_t v24 = v23 >> 4;
  BOOL v87 = a3;
  uint64_t v25 = (char *)a3 - (char *)a2;
  uint64_t v26 = (char *)a3 - (char *)a2 + 15;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v26 = (char *)a3 - (char *)a2;
  }
  uint64_t v27 = v26 >> 4;
  uint64_t v91 = a1;
  uint64_t v90 = a4;
  if (v24 >= v27)
  {
    if (v25 < -15) {
      goto LABEL_60;
    }
    uint64_t v49 = 8 * v27;
    if (a4 != a2 || &a2[v49] <= a4) {
      memmove(a4, a2, 16 * v27);
    }
    uint64_t v50 = &a4[v49];
    uint64_t v89 = &a4[v49];
    uint64_t v91 = a2;
    uint64_t v51 = v88;
    if ((unint64_t)(v25 - 16) > 0xFFFFFFFFFFFFFFE0 || a1 >= a2)
    {
LABEL_59:
      sub_1001EED6C((void **)&v91, (const void **)&v90, &v89);
      return 1;
    }
    unint64_t v77 = (void (**)(char *, uint64_t))(v10 + 8);
    unint64_t v78 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v52 = v87 - 8;
    while (1)
    {
      long long v53 = v52 + 8;
      if (!*(void *)(v51 + 16)) {
        goto LABEL_47;
      }
      long long v55 = a2 - 8;
      Swift::UInt v54 = *((void *)a2 - 2);
      int v56 = *(a2 - 4);
      Swift::UInt v57 = *((void *)v50 - 2);
      int v58 = *(v50 - 4);
      BOOL v87 = v52 + 8;
      unint64_t v59 = sub_100529EDC(v57, v58);
      long long v53 = v87;
      uint64_t v51 = v88;
      if ((v60 & 1) == 0) {
        goto LABEL_47;
      }
      if (!*(void *)(v88 + 16)) {
        goto LABEL_47;
      }
      unint64_t v84 = *(char **)(*(void *)(v88 + 56) + 8 * v59);
      unint64_t v61 = sub_100529EDC(v54, v56);
      long long v53 = v87;
      uint64_t v51 = v88;
      if ((v62 & 1) == 0) {
        goto LABEL_47;
      }
      uint64_t v81 = *(char **)(*(void *)(v88 + 56) + 8 * v61);
      id v79 = self;
      id v63 = [v79 currentLocale];
      uint64_t v64 = v82;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v65 = v83;
      Locale.language.getter();
      (*v78)(v64, v85);
      uint64_t v66 = v80;
      Locale.Language.languageCode.getter();
      uint64_t v67 = (uint64_t)v66;
      (*v77)(v65, v86);
      uint64_t v68 = type metadata accessor for Locale.LanguageCode();
      uint64_t v69 = *(void *)(v68 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68) == 1)
      {
        sub_10008DB18(v67, &qword_100952F38);
      }
      else
      {
        uint64_t v70 = Locale.LanguageCode.identifier.getter();
        v76[1] = v71;
        v76[2] = v70;
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
        NSString v72 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v73 = [v79 characterDirectionForLanguage:v72];

        if (v73 == (id)2)
        {
          long long v53 = v87;
          uint64_t v51 = v88;
          if ((uint64_t)v84 < (uint64_t)v81) {
            goto LABEL_55;
          }
          goto LABEL_47;
        }
      }
      long long v53 = v87;
      uint64_t v51 = v88;
      if ((uint64_t)v81 < (uint64_t)v84)
      {
LABEL_55:
        if (v53 != a2 || v52 >= a2) {
          *(_OWORD *)uint64_t v52 = *(_OWORD *)v55;
        }
        uint64_t v91 = a2 - 8;
        if (v50 <= a4) {
          goto LABEL_59;
        }
        goto LABEL_52;
      }
LABEL_47:
      uint64_t v74 = v50 - 8;
      uint64_t v89 = v50 - 8;
      if (v53 < v50 || v52 >= v50 || v53 != v50) {
        *(_OWORD *)uint64_t v52 = *(_OWORD *)v74;
      }
      long long v55 = a2;
      v50 -= 8;
      if (v74 <= a4) {
        goto LABEL_59;
      }
LABEL_52:
      v52 -= 8;
      a2 = v55;
      if (v55 <= a1) {
        goto LABEL_59;
      }
    }
  }
  uint64_t v83 = v14;
  if (v22 >= -15)
  {
    uint64_t v28 = v10;
    uint64_t v80 = (char *)v76 - v21;
    size_t v29 = 8 * v24;
    unint64_t v30 = (unint64_t)v87;
    if (a4 != a1 || &a1[v29] <= a4) {
      memmove(a4, a1, v29 * 2);
    }
    unint64_t v31 = &a4[v29];
    uint64_t v89 = &a4[v29];
    uint64_t v32 = v88;
    if ((unint64_t)(v22 - 16) <= 0xFFFFFFFFFFFFFFE0 && (unint64_t)a2 < v30)
    {
      unint64_t v77 = (void (**)(char *, uint64_t))(v28 + 8);
      unint64_t v78 = (void (**)(char *, uint64_t))(v83 + 8);
      while (1)
      {
        if (!*(void *)(v32 + 16)
          || (v33 = *(void *)a4, v34 = a4[4], v35 = sub_100529EDC(*(void *)a2, a2[4]), uint64_t v32 = v88, (v36 & 1) == 0)
          || !*(void *)(v88 + 16)
          || (uint64_t v37 = *(char **)(*(void *)(v88 + 56) + 8 * v35), v38 = sub_100529EDC(v33, v34),
                                                                 uint64_t v32 = v88,
                                                                 (v39 & 1) == 0))
        {
LABEL_21:
          if (a1 != a4) {
            *(_OWORD *)a1 = *(_OWORD *)a4;
          }
          a4 += 8;
          uint64_t v90 = a4;
          uint64_t v48 = a2;
          goto LABEL_24;
        }
        uint64_t v82 = *(char **)(*(void *)(v88 + 56) + 8 * v38);
        uint64_t v83 = v37;
        id v79 = self;
        id v40 = [v79 currentLocale];
        unint64_t v41 = v81;
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v42 = v84;
        Locale.language.getter();
        (*v78)(v41, v85);
        uint64_t v43 = (uint64_t)v80;
        Locale.Language.languageCode.getter();
        (*v77)(v42, v86);
        uint64_t v44 = type metadata accessor for Locale.LanguageCode();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
        {
          sub_10008DB18(v43, &qword_100952F38);
        }
        else
        {
          Locale.LanguageCode.identifier.getter();
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
          NSString v46 = String._bridgeToObjectiveC()();
          unint64_t v30 = (unint64_t)v87;
          swift_bridgeObjectRelease();
          id v47 = [v79 characterDirectionForLanguage:v46];

          if (v47 == (id)2)
          {
            uint64_t v32 = v88;
            if ((uint64_t)v83 >= (uint64_t)v82) {
              goto LABEL_21;
            }
            goto LABEL_28;
          }
        }
        uint64_t v32 = v88;
        if ((uint64_t)v82 >= (uint64_t)v83) {
          goto LABEL_21;
        }
LABEL_28:
        uint64_t v48 = a2 + 8;
        if (a1 < a2 || a1 >= v48 || a1 != a2) {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
LABEL_24:
        a1 += 8;
        uint64_t v91 = a1;
        if (a4 < v31)
        {
          a2 = v48;
          if ((unint64_t)v48 < v30) {
            continue;
          }
        }
        goto LABEL_59;
      }
    }
    goto LABEL_59;
  }
LABEL_60:

  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1004BF75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v48 = a4;
  uint64_t v36 = a1;
  uint64_t v45 = type metadata accessor for Locale.Language();
  uint64_t v8 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100952F38);
  __chkstk_darwin(v12 - 8);
  unint64_t v41 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *v48;
    char v39 = (void (**)(char *, uint64_t))(v8 + 8);
    id v40 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v38 = v14;
    uint64_t v15 = v14 + 16 * v46;
LABEL_5:
    uint64_t v37 = v15;
    uint64_t v16 = v36;
    while (1)
    {
      if (!*(void *)(a5 + 16)
        || (Swift::UInt v17 = *(void *)(v15 - 16),
            int v18 = *(unsigned __int16 *)(v15 - 8),
            unint64_t v19 = sub_100529EDC(*(void *)v15, *(unsigned __int16 *)(v15 + 8)),
            (v20 & 1) == 0)
        || !*(void *)(a5 + 16)
        || (uint64_t v21 = *(void *)(*(void *)(a5 + 56) + 8 * v19), v22 = sub_100529EDC(v17, v18), (v23 & 1) == 0))
      {
LABEL_4:
        uint64_t v15 = v37 + 16;
        if (++v46 == v35) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v48 = *(uint64_t **)(*(void *)(a5 + 56) + 8 * v22);
      id v47 = self;
      id v24 = [v47 currentLocale];
      uint64_t v25 = v42;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = v44;
      Locale.language.getter();
      (*v40)(v25, v43);
      uint64_t v27 = (uint64_t)v41;
      Locale.Language.languageCode.getter();
      (*v39)(v26, v45);
      uint64_t v28 = type metadata accessor for Locale.LanguageCode();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
      {
        sub_10008DB18(v27, &qword_100952F38);
      }
      else
      {
        Locale.LanguageCode.identifier.getter();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [v47 characterDirectionForLanguage:v30];

        if (v31 == (id)2)
        {
          if (v21 >= (uint64_t)v48) {
            goto LABEL_4;
          }
          goto LABEL_16;
        }
      }
      if ((uint64_t)v48 >= v21) {
        goto LABEL_4;
      }
LABEL_16:
      if (!v38)
      {
        __break(1u);
        return;
      }
      Swift::UInt v32 = *(void *)v15;
      __int16 v33 = *(_WORD *)(v15 + 8);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)(v15 - 16);
      *(_WORD *)(v15 - 8) = v33;
      *(void *)(v15 - 16) = v32;
      v15 -= 16;
      if (v46 == ++v16) {
        goto LABEL_4;
      }
    }
  }
}

uint64_t sub_1004BFB78(Swift::UInt *__src, Swift::UInt *a2, unint64_t a3, Swift::UInt *__dst, uint64_t a5)
{
  uint64_t v7 = (unsigned __int16 *)a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 4;
  uint64_t v52 = (unsigned __int16 *)__src;
  uint64_t v51 = __dst;
  uint64_t v48 = __dst;
  if (v11 >= v14)
  {
    if (v12 >= -15)
    {
      uint64_t v30 = 2 * v14;
      if (__dst != a2 || &a2[v30] <= __dst)
      {
        memmove(__dst, a2, 16 * v14);
        uint64_t v8 = __src;
        __dst = v48;
      }
      id v31 = (char *)&__dst[v30];
      uint64_t v50 = &__dst[v30];
      uint64_t v52 = v7;
      if (v8 < (Swift::UInt *)v7 && (unint64_t)(v12 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        Swift::UInt v32 = (unsigned __int16 *)(a3 - 16);
        do
        {
          __int16 v33 = v32 + 8;
          Swift::UInt v34 = *((void *)v31 - 2);
          unsigned int v35 = *((unsigned __int16 *)v31 - 4);
          if ((v35 >> 8) - 2 < 5) {
            goto LABEL_55;
          }
          uint64_t v36 = v7 - 8;
          if (HIBYTE(*(v7 - 4)) - 2 < 5u) {
            goto LABEL_55;
          }
          if (!*(void *)(a5 + 16)) {
            goto LABEL_55;
          }
          Swift::UInt v46 = *((void *)v7 - 2);
          int v45 = *(v7 - 4);
          sub_100529F54(*((void *)v31 - 2), *((unsigned __int16 *)v31 - 4));
          uint64_t v8 = __src;
          __dst = v48;
          if ((v37 & 1) == 0) {
            goto LABEL_55;
          }
          if (!*(void *)(a5 + 16)) {
            goto LABEL_55;
          }
          sub_100529F54(v46, v45);
          uint64_t v8 = __src;
          __dst = v48;
          if ((v38 & 1) == 0) {
            goto LABEL_55;
          }
          if (*(void *)(a5 + 16)
            && (v39 = sub_100529F54(v34, v35), uint64_t v8 = __src, __dst = v48, (v40 & 1) != 0)
            && *(void *)(a5 + 16)
            && (uint64_t v41 = *(void *)(*(void *)(a5 + 56) + 8 * v39),
                unint64_t v42 = sub_100529F54(v46, v45),
                uint64_t v8 = __src,
                __dst = v48,
                (v43 & 1) != 0)
            && *(void *)(*(void *)(a5 + 56) + 8 * v42) < v41)
          {
            if (v33 != v7 || v32 >= v7) {
              *(_OWORD *)Swift::UInt v32 = *(_OWORD *)v36;
            }
            uint64_t v52 = v7 - 8;
          }
          else
          {
LABEL_55:
            uint64_t v50 = (Swift::UInt *)(v31 - 16);
            if (v33 < (unsigned __int16 *)v31 || v32 >= (unsigned __int16 *)v31 || v33 != (unsigned __int16 *)v31) {
              *(_OWORD *)Swift::UInt v32 = *((_OWORD *)v31 - 1);
            }
            uint64_t v36 = v7;
            v31 -= 16;
          }
          if (v36 <= (unsigned __int16 *)v8) {
            break;
          }
          v32 -= 8;
          uint64_t v7 = v36;
        }
        while (v31 > (char *)__dst);
      }
      goto LABEL_62;
    }
  }
  else if (v9 >= -15)
  {
    size_t v15 = 2 * v11;
    if (__dst != __src || &__src[v15] <= __dst)
    {
      memmove(__dst, __src, v15 * 8);
      uint64_t v8 = __src;
      __dst = v48;
    }
    uint64_t v16 = &__dst[v15];
    uint64_t v50 = &__dst[v15];
    if ((unint64_t)v7 < a3 && (unint64_t)(v9 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      do
      {
        unsigned int v17 = v7[4];
        if ((v17 >> 8) - 2 < 5) {
          goto LABEL_27;
        }
        unsigned int v18 = *((unsigned __int16 *)__dst + 4);
        if ((v18 >> 8) - 2 < 5) {
          goto LABEL_27;
        }
        if (!*(void *)(a5 + 16)) {
          goto LABEL_27;
        }
        Swift::UInt v19 = *(void *)v7;
        Swift::UInt v49 = *__dst;
        char v20 = __dst;
        uint64_t v21 = (unsigned __int16 *)v8;
        sub_100529F54(*(void *)v7, v17);
        uint64_t v8 = (Swift::UInt *)v21;
        __dst = v20;
        if ((v22 & 1) == 0) {
          goto LABEL_27;
        }
        if (!*(void *)(a5 + 16)) {
          goto LABEL_27;
        }
        sub_100529F54(v49, v18);
        uint64_t v8 = (Swift::UInt *)v21;
        __dst = v20;
        if ((v23 & 1) == 0) {
          goto LABEL_27;
        }
        if (*(void *)(a5 + 16)
          && (v24 = sub_100529F54(v19, v17), uint64_t v8 = (Swift::UInt *)v21, __dst = v20, (v25 & 1) != 0)
          && *(void *)(a5 + 16)
          && (uint64_t v26 = *(void *)(*(void *)(a5 + 56) + 8 * v24),
              unint64_t v27 = sub_100529F54(v49, v18),
              uint64_t v8 = (Swift::UInt *)v21,
              __dst = v20,
              (v28 & 1) != 0)
          && *(void *)(*(void *)(a5 + 56) + 8 * v27) < v26)
        {
          uint64_t v29 = v7 + 8;
          if (v21 < v7 || v21 >= v29 || v21 != v7) {
            *(_OWORD *)uint64_t v21 = *(_OWORD *)v7;
          }
        }
        else
        {
LABEL_27:
          if (v8 != __dst) {
            *(_OWORD *)uint64_t v8 = *(_OWORD *)__dst;
          }
          __dst += 2;
          uint64_t v51 = __dst;
          uint64_t v29 = v7;
        }
        v8 += 2;
        if (__dst >= v16) {
          break;
        }
        uint64_t v7 = v29;
      }
      while ((unint64_t)v29 < a3);
      uint64_t v52 = (unsigned __int16 *)v8;
    }
LABEL_62:
    sub_1001EED6C((void **)&v52, (const void **)&v51, &v50);
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1004BFF90(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  unint64_t v21 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v23 = *a4;
    uint64_t v7 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v22 = v7;
    unint64_t v8 = v21;
    while (1)
    {
      unsigned int v9 = *(unsigned __int16 *)(v7 + 8);
      if ((v9 >> 8) - 2 < 5) {
        goto LABEL_4;
      }
      unsigned int v10 = *(unsigned __int16 *)(v7 - 8);
      if ((v10 >> 8) - 2 < 5
        || !*(void *)(a5 + 16)
        || (Swift::UInt v11 = *(void *)v7,
            Swift::UInt v12 = *(void *)(v7 - 16),
            uint64_t result = sub_100529F54(*(void *)v7, *(unsigned __int16 *)(v7 + 8)),
            (v13 & 1) == 0)
        || !*(void *)(a5 + 16)
        || (uint64_t result = sub_100529F54(v12, v10), (v14 & 1) == 0)
        || !*(void *)(a5 + 16)
        || (uint64_t result = sub_100529F54(v11, v9), (v15 & 1) == 0)
        || !*(void *)(a5 + 16)
        || (v16 = *(void *)(*(void *)(a5 + 56) + 8 * result), uint64_t result = sub_100529F54(v12, v10), (v17 & 1) == 0)
        || *(void *)(*(void *)(a5 + 56) + 8 * result) >= v16)
      {
LABEL_4:
        ++v6;
        uint64_t v7 = v22 + 16;
        if (v6 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v23) {
        break;
      }
      Swift::UInt v18 = *(void *)v7;
      __int16 v19 = *(_WORD *)(v7 + 8);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 16);
      *(_WORD *)(v7 - 8) = v19;
      *(void *)(v7 - 16) = v18;
      v7 -= 16;
      if (v6 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1004C0100()
{
  return sub_100019C28(v0, &OBJC_IVAR___CHHistoryDataProvider_shouldForceReload);
}

uint64_t sub_1004C0124()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1004C015C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for FilterActivityType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterActivityType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterActivityType()
{
  return &type metadata for FilterActivityType;
}

uint64_t *sub_1004C0280(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    int v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10095D4C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for OpenURLAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *int v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    Swift::UInt v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    Swift::UInt v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)v4 + v10) = (uint64_t)v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    char v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v15;
    uint64_t v16 = (uint64_t *)((char *)v4 + v14);
    char v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v17[3];
    long long v16[2] = v17[2];
    v16[3] = v19;
    uint64_t v20 = v17[5];
    v16[4] = v17[4];
    v16[5] = v20;
    uint64_t v21 = v17[7];
    void v16[6] = v17[6];
    v16[7] = v21;
    uint64_t v22 = v17[9];
    v16[8] = v17[8];
    v16[9] = v22;
    uint64_t v28 = v17[11];
    v16[10] = v17[10];
    v16[11] = v28;
    uint64_t v23 = v17[13];
    v16[12] = v17[12];
    v16[13] = v23;
    id v24 = v11;
    id v25 = v12;
    id v26 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1004C0470(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10095D4C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1004C0580(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10095D4C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  uint64_t v10 = *(void **)((char *)a2 + v8);
  *(void *)((char *)a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  uint64_t v14 = (void *)((char *)a1 + v12);
  char v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v15[3];
  v14[2] = v15[2];
  v14[3] = v17;
  uint64_t v18 = v15[5];
  v14[4] = v15[4];
  v14[5] = v18;
  uint64_t v19 = v15[7];
  v14[6] = v15[6];
  v14[7] = v19;
  uint64_t v20 = v15[9];
  v14[8] = v15[8];
  v14[9] = v20;
  uint64_t v21 = v15[11];
  v14[10] = v15[10];
  v14[11] = v21;
  uint64_t v26 = v15[13];
  v14[12] = v15[12];
  v14[13] = v26;
  id v22 = v9;
  id v23 = v10;
  id v24 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1004C0724(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10095D4C8);
    sub_1000AFA94(&qword_10095D4C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)((char *)a2 + v11);
  uint64_t v13 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *(void *)((char *)a2 + v19);
  v20[1] = *(void *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[2] = v21[2];
  v20[3] = v21[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[4] = v21[4];
  v20[5] = v21[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v20[6] = v21[6];
  swift_retain();
  swift_release();
  v20[7] = v21[7];
  swift_retain();
  swift_release();
  v20[8] = v21[8];
  swift_retain();
  swift_release();
  v20[9] = v21[9];
  v20[10] = v21[10];
  swift_retain();
  swift_release();
  v20[11] = v21[11];
  swift_retain();
  swift_release();
  v20[12] = v21[12];
  swift_retain();
  swift_release();
  v20[13] = v21[13];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1004C0960(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10095D4C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  id v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v12;
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  long long v13 = *((_OWORD *)v11 + 1);
  *(_OWORD *)id v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v13;
  long long v14 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v14;
  return a1;
}

char *sub_1004C0A70(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10095D4C8);
    uint64_t v6 = sub_1000AFA94(&qword_10095D4C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a1[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];

  uint64_t v12 = a3[7];
  long long v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v16 + 3);
  *((void *)v15 + 2) = *((void *)v16 + 2);
  *((void *)v15 + 3) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v16 + 5);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  *((void *)v15 + 5) = v19;
  swift_bridgeObjectRelease();
  *((void *)v15 + 6) = *((void *)v16 + 6);
  swift_release();
  *((void *)v15 + 7) = *((void *)v16 + 7);
  swift_release();
  *((void *)v15 + 8) = *((void *)v16 + 8);
  swift_release();
  uint64_t v20 = *((void *)v16 + 10);
  *((void *)v15 + 9) = *((void *)v16 + 9);
  *((void *)v15 + 10) = v20;
  swift_release();
  *((void *)v15 + 11) = *((void *)v16 + 11);
  swift_release();
  *((void *)v15 + 12) = *((void *)v16 + 12);
  swift_release();
  *((void *)v15 + 13) = *((void *)v16 + 13);
  swift_release();
  return a1;
}

uint64_t sub_1004C0C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004C0C4C);
}

uint64_t sub_1004C0C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10095EAB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004C0D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004C0D24);
}

uint64_t sub_1004C0D24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10095EAB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutStatView()
{
  uint64_t result = qword_10095EB10;
  if (!qword_10095EB10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004C0E30()
{
  sub_1004C0EE0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1004C0EE0()
{
  if (!qword_10095EB20)
  {
    type metadata accessor for OpenURLAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095EB20);
    }
  }
}

uint64_t sub_1004C0F38()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1004C0F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10095EB60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095EB68);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10095EB70);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000AFA94(&qword_10095EB78);
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WorkoutStatView();
  *(void *)&double v13 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v1 + *(int *)(v16 + 28));
  if (v17)
  {
    id v18 = [v17 fiui_activityType:v13];
    sub_1004C25BC(v1, (uint64_t)v15);
    if (v18) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1004C25BC(v1, (uint64_t)v15);
  }
  id result = [*(id *)&v15[*(int *)(v12 + 24)] fiui_activityType];
  id v18 = result;
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_6:
  sub_1004C2620((uint64_t)v15);
  uint64_t v20 = FIUIPaceFormatForWorkoutActivityType();
  *(void *)uint64_t v4 = static HorizontalAlignment.leading.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v21 = (uint64_t)&v4[*(int *)(sub_1000AFA94(&qword_10095EB80) + 44)];
  if (v20 == 4) {
    int v22 = 8;
  }
  else {
    int v22 = 3;
  }
  sub_1004C1364(v1, v22, v21);
  char v23 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v6, &qword_10095EB60);
  id v24 = &v6[*(int *)(v32 + 36)];
  *id v24 = v23;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  v24[40] = 1;
  sub_10008DB18((uint64_t)v4, &qword_10095EB60);
  id v25 = [self systemBackgroundColor];
  uint64_t v26 = Color.init(_:)();
  char v27 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v8, &qword_10095EB68);
  uint64_t v28 = &v8[*(int *)(v33 + 36)];
  *(void *)uint64_t v28 = v26;
  v28[8] = v27;
  sub_10008DB18((uint64_t)v6, &qword_10095EB68);
  sub_1004C267C();
  View.cornerRadius(_:corners:)();
  sub_10008DB18((uint64_t)v8, &qword_10095EB70);
  LOBYTE(v26) = static Edge.Set.all.getter();
  uint64_t v30 = v34;
  uint64_t v29 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v35, v11, v34);

  uint64_t v31 = v29 + *(int *)(sub_1000AFA94(&qword_10095EBA0) + 36);
  *(unsigned char *)uint64_t v31 = v26;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(unsigned char *)(v31 + 40) = 1;
  return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v30);
}

uint64_t sub_1004C1364@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_10095EBA8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = sub_1000AFA94(&qword_10095EBB0);
  __chkstk_darwin(v13 - 8);
  uint64_t v36 = (uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v48 = static VerticalAlignment.center.getter();
  sub_1004C1748((uint64_t)&v59);
  uint64_t v38 = *((void *)&v59 + 1);
  uint64_t v39 = v59;
  int v37 = v60;
  uint64_t v40 = *((void *)&v60 + 1);
  int v47 = v61[0];
  long long v46 = *(_OWORD *)&v61[8];
  uint64_t v44 = v62;
  uint64_t v45 = *(void *)&v61[24];
  int v43 = BYTE8(v62);
  uint64_t v42 = v63;
  int v41 = BYTE8(v63);
  *(void *)uint64_t v17 = static Alignment.bottomLeading.getter();
  *((void *)v17 + 1) = v18;
  *((void *)v17 + 2) = 0x4034000000000000;
  v17[24] = 0;
  *((void *)v17 + 4) = 0;
  v17[40] = 1;
  uint64_t v19 = (uint64_t)&v17[*(int *)(sub_1000AFA94(&qword_10095EBB8) + 44)];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  sub_1004C1898(a1, a2, (uint64_t)&v12[*(int *)(v7 + 44)]);
  *(void *)&long long v59 = 0;
  BYTE8(v59) = 1;
  sub_1004C1BC8(a2, (uint64_t)&v60);
  long long v55 = v64;
  long long v56 = v65;
  long long v57 = v66;
  long long v51 = *(_OWORD *)v61;
  long long v52 = *(_OWORD *)&v61[16];
  long long v53 = v62;
  long long v54 = v63;
  long long v49 = v59;
  long long v50 = v60;
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v9, &qword_10095EBA8);
  sub_1000AEF2C((uint64_t)v9, v19, &qword_10095EBA8);
  uint64_t v20 = *(int *)(sub_1000AFA94(&qword_10095EBC0) + 48);
  long long v21 = v56;
  v58[6] = v55;
  unsigned char v58[7] = v56;
  long long v22 = v57;
  v58[8] = v57;
  long long v24 = v53;
  long long v23 = v54;
  v58[4] = v53;
  v58[5] = v54;
  long long v25 = v51;
  long long v26 = v52;
  v58[2] = v51;
  v58[3] = v52;
  long long v28 = v49;
  long long v27 = v50;
  v58[0] = v49;
  v58[1] = v50;
  uint64_t v29 = (_OWORD *)(v19 + v20);
  v29[6] = v55;
  v29[7] = v21;
  v29[8] = v22;
  v29[2] = v25;
  void v29[3] = v26;
  v29[4] = v24;
  v29[5] = v23;
  _OWORD *v29 = v28;
  v29[1] = v27;
  sub_1004C27BC((uint64_t)v58);
  sub_10008DB18((uint64_t)v12, &qword_10095EBA8);
  long long v64 = v55;
  long long v65 = v56;
  long long v66 = v57;
  *(_OWORD *)unint64_t v61 = v51;
  *(_OWORD *)&v61[16] = v52;
  long long v62 = v53;
  long long v63 = v54;
  long long v59 = v49;
  long long v60 = v50;
  sub_1004C2898((uint64_t)&v59);
  sub_10008DB18((uint64_t)v9, &qword_10095EBA8);
  uint64_t v30 = v36;
  sub_1000AEF2C((uint64_t)v17, v36, &qword_10095EBB0);
  *(void *)a3 = v48;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  *(void *)(a3 + 24) = v39;
  *(void *)(a3 + 32) = v32;
  LOBYTE(v19) = v37;
  *(unsigned char *)(a3 + 40) = v37;
  *(void *)(a3 + 48) = v40;
  *(unsigned char *)(a3 + 56) = v47;
  *(_OWORD *)(a3 + 64) = v46;
  uint64_t v33 = v44;
  *(void *)(a3 + 80) = v45;
  *(void *)(a3 + 88) = v33;
  *(unsigned char *)(a3 + 96) = v43;
  *(void *)(a3 + 104) = v42;
  *(unsigned char *)(a3 + 112) = v41;
  uint64_t v34 = sub_1000AFA94(&qword_10095EBC8);
  sub_1000AEF2C(v30, a3 + *(int *)(v34 + 48), &qword_10095EBB0);
  sub_1000A1750(v31, v32, v19);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v17, &qword_10095EBB0);
  sub_10008DB18(v30, &qword_10095EBB0);
  sub_1000A06C0(v31, v32, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004C1748@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WorkoutStatView();
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.headline.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1000A06C0(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 1;
  sub_1000A1750(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v7, v9, v11 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004C1898@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v37 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_10095EBD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v36 = (uint64_t)&v33 - v8;
  __chkstk_darwin(v9);
  uint64_t v35 = (uint64_t)&v33 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v33 - v18;
  __chkstk_darwin(v20);
  long long v22 = (char *)&v33 - v21;
  __chkstk_darwin(v23);
  long long v25 = (char *)&v33 - v24;
  *(void *)long long v25 = static HorizontalAlignment.center.getter();
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  uint64_t v26 = sub_1000AFA94(&qword_10095EBD8);
  sub_1004C2248(0, a1, (uint64_t)&v25[*(int *)(v26 + 44)]);
  *(void *)long long v22 = static HorizontalAlignment.center.getter();
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  sub_1004C2248(1, a1, (uint64_t)&v22[*(int *)(v26 + 44)]);
  *(void *)uint64_t v19 = static HorizontalAlignment.center.getter();
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  sub_1004C2248(2, a1, (uint64_t)&v19[*(int *)(v26 + 44)]);
  *(void *)uint64_t v16 = static HorizontalAlignment.center.getter();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  sub_1004C2248(v37, a1, (uint64_t)&v16[*(int *)(v26 + 44)]);
  uint64_t v27 = (uint64_t)v13;
  uint64_t v34 = v13;
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v13, &qword_10095EBD0);
  uint64_t v28 = v35;
  sub_1000AEF2C((uint64_t)v22, v35, &qword_10095EBD0);
  uint64_t v29 = v36;
  sub_1000AEF2C((uint64_t)v19, v36, &qword_10095EBD0);
  uint64_t v30 = v38;
  sub_1000AEF2C((uint64_t)v16, v38, &qword_10095EBD0);
  sub_1000AEF2C(v27, a3, &qword_10095EBD0);
  uint64_t v31 = (int *)sub_1000AFA94(&qword_10095EBE0);
  sub_1000AEF2C(v28, a3 + v31[12], &qword_10095EBD0);
  sub_1000AEF2C(v29, a3 + v31[16], &qword_10095EBD0);
  sub_1000AEF2C(v30, a3 + v31[20], &qword_10095EBD0);
  sub_10008DB18((uint64_t)v16, &qword_10095EBD0);
  sub_10008DB18((uint64_t)v19, &qword_10095EBD0);
  sub_10008DB18((uint64_t)v22, &qword_10095EBD0);
  sub_10008DB18((uint64_t)v25, &qword_10095EBD0);
  sub_10008DB18(v30, &qword_10095EBD0);
  sub_10008DB18(v29, &qword_10095EBD0);
  sub_10008DB18(v28, &qword_10095EBD0);
  return sub_10008DB18((uint64_t)v34, &qword_10095EBD0);
}

uint64_t sub_1004C1BC8@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  sub_1004C1DCC(0, (uint64_t)&v23);
  uint64_t v20 = v24;
  uint64_t v21 = v23;
  char v4 = v25;
  uint64_t v22 = v26;
  sub_1004C1DCC(1, (uint64_t)&v23);
  uint64_t v5 = v24;
  uint64_t v19 = v23;
  char v6 = v25;
  uint64_t v7 = v26;
  sub_1004C1DCC(2, (uint64_t)&v23);
  uint64_t v8 = v23;
  uint64_t v17 = v24;
  char v9 = v25;
  uint64_t v10 = v26;
  sub_1004C1DCC(a1, (uint64_t)&v23);
  uint64_t v11 = v23;
  uint64_t v12 = v24;
  char v13 = v25;
  uint64_t v14 = v26;
  uint64_t v18 = v23;
  LOBYTE(v23) = v4;
  char v29 = v6;
  char v28 = v9;
  char v27 = v25;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v17;
  *(unsigned char *)(a2 + 80) = v9;
  *(void *)(a2 + 88) = v10;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v15 = v12;
  *(unsigned char *)(a2 + 112) = v13;
  *(void *)(a2 + 120) = v14;
  sub_1000A1750(v21, v20, v4);
  swift_bridgeObjectRetain();
  sub_1000A1750(v19, v5, v6);
  swift_bridgeObjectRetain();
  sub_1000A1750(v8, v17, v9);
  swift_bridgeObjectRetain();
  sub_1000A1750(v18, v15, v13);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v18, v15, v13);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v8, v17, v9);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v19, v5, v6);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v21, v20, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004C1DCC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v60 - v10;
  if (sub_100252154(a1) == 0x72656B72616DLL && v12 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v14 = (long long *)(v2 + *(int *)(type metadata accessor for WorkoutStatView() + 32));
    long long v15 = v14[5];
    long long v72 = v14[4];
    long long v73 = v15;
    long long v74 = v14[6];
    long long v16 = v14[3];
    long long v70 = v14[2];
    long long v71 = v16;
    long long v17 = v14[1];
    long long v68 = *v14;
    long long v69 = v17;
    uint64_t v66 = sub_10031A300();
    uint64_t v67 = v18;
    sub_1000A06D0();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    sub_1002528C4(a1);
    uint64_t v24 = Text.foregroundColor(_:)();
    uint64_t v26 = v25;
    char v28 = v27;
    swift_release();
    sub_1000A06C0(v19, v21, v23);
    swift_bridgeObjectRelease();
    if (qword_10094A720 != -1) {
      swift_once();
    }
    id v29 = (id)qword_1009978F0;
    Font.init(_:)();
    uint64_t v30 = Text.font(_:)();
    uint64_t v32 = v31;
    char v34 = v33;
    uint64_t v36 = v35;
    swift_release();
    sub_1000A06C0(v24, v26, v28 & 1);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_5;
  }
  uint64_t v62 = a2;
  uint64_t v38 = (int *)type metadata accessor for WorkoutStatView();
  uint64_t v39 = (long long *)(v2 + v38[8]);
  long long v40 = v39[5];
  long long v72 = v39[4];
  long long v73 = v40;
  long long v74 = v39[6];
  long long v41 = v39[3];
  long long v70 = v39[2];
  long long v71 = v41;
  long long v42 = v39[1];
  long long v68 = *v39;
  long long v69 = v42;
  uint64_t v43 = sub_10031A4A8();
  sub_100252BD4(v43, *(void **)(v2 + v38[6]), *(void **)(v2 + v38[7]), *(void **)(v2 + v38[5]), a1, (uint64_t)v11);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  uint64_t v44 = Text.init(_:)();
  uint64_t v64 = v6;
  uint64_t v46 = v45;
  char v48 = v47 & 1;
  sub_1002528C4(a1);
  uint64_t v49 = Text.foregroundColor(_:)();
  uint64_t v63 = v50;
  char v52 = v51;
  uint64_t v65 = v53;
  swift_release();
  sub_1000A06C0(v44, v46, v48);
  swift_bridgeObjectRelease();
  uint64_t v61 = v5;
  if (qword_10094A728 != -1) {
    swift_once();
  }
  id v54 = (id)qword_1009978F8;
  Font.init(_:)();
  char v55 = v52 & 1;
  uint64_t v56 = v63;
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v57;
  char v34 = v58;
  uint64_t v36 = v59;
  swift_release();
  sub_1000A06C0(v49, v56, v55);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v11, v61);
  a2 = v62;
LABEL_11:
  *(void *)a2 = v30;
  *(void *)(a2 + 8) = v32;
  *(unsigned char *)(a2 + 16) = v34 & 1;
  *(void *)(a2 + 24) = v36;
  return result;
}

uint64_t sub_1004C2248@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v5 = type metadata accessor for AttributedString();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000AFA94(&qword_10095EBE8);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000AFA94(&qword_10095EBF0);
  __chkstk_darwin(v42);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WorkoutStatView();
  sub_1002522C0(*(void **)(a2 + *(int *)(v10 + 20)), a1);
  uint64_t v11 = Text.init(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1009978E8;
  Font.init(_:)();
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  swift_release();
  v21 &= 1u;
  sub_1000A06C0(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  uint64_t v47 = v17;
  uint64_t v48 = v19;
  char v49 = v21;
  uint64_t v50 = v23;
  uint64_t v24 = v43;
  View.hyphenationFactor(_:)();
  sub_1000A06C0(v17, v19, v21);
  swift_bridgeObjectRelease();
  id v25 = [self secondaryLabelColor];
  uint64_t v26 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v44;
  uint64_t v28 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v9, v24, v45);
  uint64_t v30 = (uint64_t *)&v9[*(int *)(v42 + 36)];
  uint64_t *v30 = KeyPath;
  v30[1] = v26;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
  LOBYTE(v26) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v39 = v46;
  sub_1000AEF2C((uint64_t)v9, v46, &qword_10095EBF0);
  uint64_t v40 = v39 + *(int *)(sub_1000AFA94(&qword_10095EBF8) + 36);
  *(unsigned char *)uint64_t v40 = v26;
  *(void *)(v40 + 8) = v32;
  *(void *)(v40 + 16) = v34;
  *(void *)(v40 + 24) = v36;
  *(void *)(v40 + 32) = v38;
  *(unsigned char *)(v40 + 40) = 0;
  return sub_10008DB18((uint64_t)v9, &qword_10095EBF0);
}

uint64_t sub_1004C25BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutStatView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C2620(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutStatView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004C267C()
{
  unint64_t result = qword_10095EB88;
  if (!qword_10095EB88)
  {
    sub_1000A1370(&qword_10095EB70);
    sub_1004C271C();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EB88);
  }
  return result;
}

unint64_t sub_1004C271C()
{
  unint64_t result = qword_10095EB90;
  if (!qword_10095EB90)
  {
    sub_1000A1370(&qword_10095EB68);
    sub_1000A132C(&qword_10095EB98, &qword_10095EB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EB90);
  }
  return result;
}

uint64_t sub_1004C27BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  char v7 = *(unsigned char *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 128);
  sub_1000A1750(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRetain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1000A1750(v5, v6, v7);
  swift_bridgeObjectRetain();
  sub_1000A1750(v11, v10, v9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004C2898(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  char v7 = *(unsigned char *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 128);
  sub_1000A06C0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v5, v6, v7);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v11, v10, v9);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1004C2980()
{
  unint64_t result = qword_10095EC00;
  if (!qword_10095EC00)
  {
    sub_1000A1370(&qword_10095EBA0);
    sub_1000A1370(&qword_10095EB70);
    sub_1004C267C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EC00);
  }
  return result;
}

uint64_t sub_1004C2A30(unint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(a1 + 8 * i + 32);
      }
      char v7 = v6;
      [v2 appendAttributedString:v6];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1004C2B30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  char v7 = (void *)UILabel.withFont(_:)();
  uint64_t v8 = self;
  id v9 = [v8 secondaryLabelColor];
  uint64_t v10 = (void *)UILabel.withTextColor(_:)();

  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setText:v11];

  uint64_t v12 = (void *)UILabel.withFont(_:)();
  id v13 = [v8 secondaryLabelColor];
  char v14 = (void *)UILabel.withTextColor(_:)();

  char v15 = self;
  id v16 = [v15 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  [v14 setText:v19];

  swift_bridgeObjectRelease();
  FIUIPaceFormatForWorkoutActivityType();
  if ([a4 supportsDistanceForWorkout:a1 workoutActivity:0])
  {
    uint64_t v20 = v5;
    char v21 = (void *)UILabel.withFont(_:)();
    id v22 = [v8 secondaryLabelColor];
    uint64_t v23 = (void *)UILabel.withTextColor(_:)();

    id v24 = [v15 mainBundle];
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v27 = String._bridgeToObjectiveC()();
    [v23 setText:v27];

    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)UILabel.withFont(_:)();
    id v29 = [v8 secondaryLabelColor];
    uint64_t v30 = (void *)UILabel.withTextColor(_:)();

    id v31 = [v15 mainBundle];
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [v31 localizedStringForKey:v45 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v47 = String._bridgeToObjectiveC()();
    [v30 setText:v47];

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = (void *)UILabel.withFont(_:)();
    id v33 = [v8 secondaryLabelColor];
    uint64_t v34 = (void *)UILabel.withTextColor(_:)();

    if (a3 == 1)
    {
      uint64_t v20 = v5;
      id v35 = [a4 fitnessUIFormattingManager];
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v35 localizationKeyForEnergyBaseKey:v36];

      if (!v37)
      {
        __break(1u);
        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v38 = [v15 mainBundle];
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = [v38 localizedStringForKey:v39 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      NSString v41 = String._bridgeToObjectiveC()();
      [v34 setText:v41];

      swift_bridgeObjectRelease();
      uint64_t v42 = (void *)UILabel.withFont(_:)();
      id v43 = [v8 secondaryLabelColor];
      uint64_t v44 = (void *)UILabel.withTextColor(_:)();

      NSString v47 = String._bridgeToObjectiveC()();
      [v44 setText:v47];
    }
    else
    {
      NSString v48 = String._bridgeToObjectiveC()();
      [v34 setText:v48];

      char v49 = (void *)UILabel.withFont(_:)();
      id v50 = [v8 secondaryLabelColor];
      char v51 = (void *)UILabel.withTextColor(_:)();

      NSString v47 = String._bridgeToObjectiveC()();
      [v51 setText:v47];

      uint64_t v20 = v5;
    }
  }

  [*(id *)(v20 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:1];

  sub_10026B10C();
}

void sub_1004C3314(void *a1, uint64_t a2, void *a3, void *a4, void *a5, char a6, void *a7)
{
  id v143 = a5;
  uint64_t v144 = a7;
  id v145 = a4;
  uint64_t v142 = a2;
  uint64_t v10 = type metadata accessor for StepType();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v137 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10095B4B0);
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IntervalWorkoutKeyPath();
  uint64_t v141 = *(void (***)(void, void))(v16 - 8);
  *(void *)&double v17 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v140 = (char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [a3 metadata:v17];
  uint64_t v139 = v10;
  *(void *)&long long v138 = v11;
  if (v19)
  {
    uint64_t v20 = v19;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for WorkoutConfigurationValidator();
  static WorkoutConfigurationValidator.shared.getter();
  char v21 = (void *)static WorkoutConfiguration.deserialize(from:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    id v146 = 0;
LABEL_11:
    if (a1) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  type metadata accessor for IntervalWorkoutConfiguration();
  id v146 = (id)swift_dynamicCastClass();
  if (v146)
  {
    id v22 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard];
    if (v22) {
      [v22 setActive:0];
    }
    uint64_t v23 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom];
    if (v23)
    {
      [v23 setActive:1];
      if (!a1) {
        goto LABEL_17;
      }
LABEL_12:
      id v24 = a1;
      sub_10032004C(a6 & 1);
      if (v146)
      {
        id v25 = v146;
        id v26 = [v24 stepKeyPath];
        if (v26)
        {
          NSString v27 = v26;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          IntervalWorkoutKeyPath.init(serializedString:)();
          uint64_t v28 = v141;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v141[6])(v15, 1, v16) != 1)
          {
            ((void (*)(char *, char *, uint64_t))v28[4])(v140, v15, v16);
            uint64_t v63 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter();
            IntervalWorkout.stepForKeyPath(_:)();

            uint64_t v64 = (void *)WorkoutStep.goal.getter();
            id v65 = [v64 goalTypeIdentifier];

            if (v65 == (id)1
              && (uint64_t v66 = (void *)WorkoutStep.goal.getter(),
                  id v67 = [v66 value],
                  v66,
                  v67)
              && (id v68 = [v67 _unit], v67, v68))
            {
              uint64_t v142 = FIUIDistanceUnitForHKUnit();

              char v36 = 0;
            }
            else
            {
              uint64_t v142 = 0;
              char v36 = 1;
            }
            WorkoutStep.displayName.getter();
            if (!v69)
            {
              uint64_t v127 = v137;
              WorkoutStep.stepType.getter();
              sub_1006917B8();
              (*(void (**)(char *, uint64_t))(v138 + 8))(v127, v139);
            }
            uint64_t v128 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
            NSString v129 = String._bridgeToObjectiveC()();
            [v128 setText:v129];
            swift_release();

            swift_bridgeObjectRelease();
            ((void (**)(char *, uint64_t))v141)[1](v140, v16);
LABEL_22:
            id v37 = [v144 fitnessUIFormattingManager];
            id v38 = [v24 formattedDurationValueWithFormattingManager:v37];
            if (v38)
            {
              NSString v39 = v38;
              uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v42 = v41;
            }
            else
            {
              uint64_t v40 = 0;
              uint64_t v42 = 0;
            }
            id v43 = [v24 formattedDistanceAchievedDurationValueWithFormattingManager:v37];
            if (v43)
            {
              uint64_t v44 = v43;
              uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v47 = v46;

              if (v42)
              {
                if (v47)
                {
                  uint64_t v141 = (void (**)(void, void))v37;
                  uint64_t v144 = v24;
                  id v48 = [self mainBundle];
                  NSString v49 = String._bridgeToObjectiveC()();
                  id v50 = [v48 localizedStringForKey:v49 value:0 table:0];

                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  sub_1000AFA94((uint64_t *)&unk_1009546D0);
                  uint64_t v51 = swift_allocObject();
                  *(_OWORD *)(v51 + 16) = xmmword_1007509E0;
                  *(void *)(v51 + 56) = &type metadata for String;
                  *(void *)(v51 + 64) = sub_1000AA64C();
                  *(void *)(v51 + 32) = v40;
                  *(void *)(v51 + 40) = v42;
                  uint64_t v52 = String.init(format:_:)();
                  uint64_t v54 = v53;
                  swift_bridgeObjectRelease();
                  char v55 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
                  sub_1000AFA94(&qword_100951B30);
                  uint64_t inited = swift_initStackObject();
                  *(_OWORD *)(inited + 16) = xmmword_10074E640;
                  *(void *)(inited + 32) = v45;
                  *(void *)(inited + 40) = v47;
                  id v57 = [self elapsedTimeColors];
                  if (v57)
                  {
                    char v58 = v57;
                    id v59 = [v57 nonGradientTextColor];

                    if (v59)
                    {
                      *(void *)(inited + 48) = v59;
                      *(void *)(inited + 56) = v52;
                      *(void *)(inited + 64) = v54;
                      *(void *)(inited + 72) = [self grayColor];
                      id v60 = sub_1005251C8(inited);
                      swift_setDeallocating();
                      sub_1000AFA94(&qword_100951B38);
                      swift_arrayDestroy();
                      [v55 setAttributedText:v60];

                      id v24 = v144;
                      id v37 = v141;
                      goto LABEL_42;
                    }
                  }
                  else
                  {
                    __break(1u);
                  }
                  __break(1u);
                  goto LABEL_77;
                }
                goto LABEL_32;
              }
            }
            else if (v42)
            {
LABEL_32:
              uint64_t v61 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
              NSString v62 = String._bridgeToObjectiveC()();
LABEL_41:
              [v61 setText:v62];

              swift_bridgeObjectRelease();
LABEL_42:
              uint64_t v70 = FIUIDistanceTypeForActivityType();
              id v71 = [v24 distance];

              if (v71)
              {
                id v72 = [v24 distance];
                if (v72)
                {
                  long long v73 = v72;
                  id v74 = [self meterUnit];
                  [v73 doubleValueForUnit:v74];
                  double v76 = v75;
                }
                else
                {
                  double v76 = 0.0;
                }
                if (floor(v76) <= 0.0) {
                  goto LABEL_55;
                }
                if ((v36 & 1) == 0)
                {
                  id v84 = [v37 localizedStringWithDistanceInMeters:v142 distanceUnit:0 unitStyle:0 decimalPrecision:[self defaultPrecisionForDistanceUnit:v142] roundingMode:2 decimalTrimmingMode:v76];
                  if (v84)
                  {
                    uint64_t v85 = v84;
                    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v88 = v87;

                    id v89 = [v37 localizedShortUnitStringForDistanceUnit:v142];
                    if (!v89)
                    {
                      __break(1u);
LABEL_55:
                      id v143 = *(id *)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
                      id v145 = self;
                      id v90 = [v145 mainBundle];
                      uint64_t v142 = 0x80000001007B6B10;
                      NSString v91 = String._bridgeToObjectiveC()();
                      id v92 = [v90 localizedStringForKey:v91 value:0 table:0];

                      static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v140 = (char *)self;
                      id v93 = [v140 grayColor];
                      uint64_t v139 = sub_1000AFA94((uint64_t *)&unk_10095BF70);
                      uint64_t v94 = swift_initStackObject();
                      long long v138 = xmmword_1007509E0;
                      *(_OWORD *)(v94 + 16) = xmmword_1007509E0;
                      *(void *)(v94 + 32) = NSForegroundColorAttributeName;
                      unint64_t v137 = (char *)sub_100006248();
                      *(void *)(v94 + 64) = v137;
                      *(void *)(v94 + 40) = v93;
                      uint64_t v136 = NSForegroundColorAttributeName;
                      id v95 = v93;
                      sub_1000DFC2C(v94);
                      id v96 = objc_allocWithZone((Class)NSAttributedString);
                      swift_bridgeObjectRetain();
                      NSString v97 = String._bridgeToObjectiveC()();
                      uint64_t v144 = v24;
                      uint64_t v98 = v97;
                      swift_bridgeObjectRelease();
                      type metadata accessor for Key(0);
                      sub_1001DCBD0();
                      v99.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                      uint64_t v141 = (void (**)(void, void))v37;
                      Class isa = v99.super.isa;
                      swift_bridgeObjectRelease();
                      id v101 = [v96 initWithString:v98 attributes:isa];
                      swift_bridgeObjectRelease();

                      [v143 setAttributedText:v101];
                      uint64_t v147 = *(char **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
                      id v102 = [v145 mainBundle];
                      NSString v103 = String._bridgeToObjectiveC()();
                      id v104 = [v102 localizedStringForKey:v103 value:0 table:0];

                      static String._unconditionallyBridgeFromObjectiveC(_:)();
                      id v105 = [v140 grayColor];
                      uint64_t v106 = swift_initStackObject();
                      *(_OWORD *)(v106 + 16) = v138;
                      *(void *)(v106 + 64) = v137;
                      uint64_t v107 = v136;
                      *(void *)(v106 + 32) = v136;
                      *(void *)(v106 + 40) = v105;
                      uint64_t v108 = v107;
                      id v109 = v105;
                      sub_1000DFC2C(v106);
                      id v110 = objc_allocWithZone((Class)NSAttributedString);
                      swift_bridgeObjectRetain();
                      NSString v111 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      Class v112 = Dictionary._bridgeToObjectiveC()().super.isa;
                      swift_bridgeObjectRelease();
                      id v113 = [v110 initWithString:v111 attributes:v112];
                      swift_bridgeObjectRelease();

                      [v147 setAttributedText:v113];
LABEL_74:

                      return;
                    }
                    goto LABEL_58;
                  }
                }
                v150[0] = 1;
                id v114 = [v37 localizedNaturalScaleStringWithDistanceInMeters:v70 distanceType:0 unitStyle:v150 usedUnit:v76];
                if (!v114)
                {
LABEL_61:
                  NSString v125 = [v24 formattedPaceUsingFormatType:FIUIPaceFormatForWorkoutActivityType() formattingManager:v37 distanceType:v70];
                  if (v125)
                  {
                    static String._unconditionallyBridgeFromObjectiveC(_:)();

                    unint64_t v126 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
                    NSString v125 = String._bridgeToObjectiveC()();
                  }
                  else
                  {
                    unint64_t v126 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
                  }
                  [v126 setText:v125];
                  swift_bridgeObjectRelease();

                  goto LABEL_73;
                }
                uint64_t v115 = v114;
                uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v88 = v116;

                id v89 = [v37 localizedShortUnitStringForDistanceUnit:v150[0]];
                if (v89)
                {
LABEL_58:
                  uint64_t v117 = v89;
                  uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v120 = v119;

                  uint64_t v148 = v118;
                  uint64_t v149 = v120;
                  sub_1000A06D0();
                  uint64_t v121 = StringProtocol.localizedUppercase.getter();
                  uint64_t v123 = v122;
                  swift_bridgeObjectRelease();
                  if (qword_10094A728 != -1) {
                    swift_once();
                  }
                  id v124 = sub_10052463C(v86, v88, v121, v123, (void *)qword_1009978F8);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  [*(id *)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel] setAttributedText:v124];

                  goto LABEL_61;
                }
LABEL_79:
                __break(1u);
                return;
              }
              if (v143 != (id)1)
              {
LABEL_73:

                goto LABEL_74;
              }
              id v77 = [v37 unitManager];
              if (v77)
              {
                unint64_t v78 = v77;
                id v79 = [v77 userActiveEnergyBurnedUnit];

                id v80 = [v24 formattedActiveEnergyValueForUnit:v79];
                if (v80)
                {
                  uint64_t v81 = v80;
                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v83 = v82;
                }
                else
                {
                  uint64_t v83 = 0;
                }
                uint64_t v130 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
                id v131 = [self energyColors];
                if (v131)
                {
                  uint64_t v132 = v131;
                  id v133 = [v131 nonGradientTextColor];

                  [v130 setTextColor:v133];
                  id v134 = v130;

                  if (v83) {
                    NSString v135 = String._bridgeToObjectiveC()();
                  }
                  else {
                    NSString v135 = 0;
                  }
                  [v134 setText:v135];

                  swift_bridgeObjectRelease();
                  goto LABEL_73;
                }
                goto LABEL_78;
              }
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
              goto LABEL_79;
            }
            swift_bridgeObjectRelease();
            NSString v62 = 0;
            uint64_t v61 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
            goto LABEL_41;
          }

          sub_1003EFE08((uint64_t)v15);
        }
        else
        {
        }
      }
      uint64_t v30 = self;
      id v31 = objc_allocWithZone((Class)NSNumber);
      id v32 = [v31 initWithInteger:v142];
      id v33 = [v30 localizedStringFromNumber:v32 numberStyle:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = *(void **)&v147[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
      NSString v35 = String._bridgeToObjectiveC()();
      [v34 setText:v35];
      swift_bridgeObjectRelease();

      uint64_t v142 = 0;
      char v36 = 1;
      goto LABEL_22;
    }
    goto LABEL_11;
  }

  id v146 = 0;
  if (a1) {
    goto LABEL_12;
  }
LABEL_17:
  sub_1004C2B30((uint64_t)a3, (uint64_t)v145, (uint64_t)v143, v144);
  id v29 = v146;
}

id sub_1004C4614()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnIntervalTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnIntervalTableViewCell()
{
  return self;
}

uint64_t static ASFriendListDisplayMode.validDisplayModes(friendListSectionManager:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  uint64_t v3 = (uint64_t *)(v2 + 16);
  v7[4] = sub_1003A5B18;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1004C489C;
  v7[3] = &unk_1008CB7D0;
  uint64_t v4 = _Block_copy(v7);
  swift_retain();
  swift_release();
  [a1 enumerateValidDisplayModesForFilter:0 usingBlock:v4];
  _Block_release(v4);
  swift_beginAccess();
  uint64_t v5 = *v3;
  swift_bridgeObjectRetain();
  swift_release();
  return v5;
}

uint64_t sub_1004C4790()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1004C47C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1001E8240(0, v5[2] + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t v5 = sub_1001E8240((void *)(v7 > 1), v8 + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  uint64_t v5[2] = v8 + 1;
  v5[v8 + 4] = a1;
  return swift_endAccess();
}

uint64_t sub_1004C489C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

ValueMetadata *type metadata accessor for MetricDetailBackground()
{
  return &type metadata for MetricDetailBackground;
}

uint64_t sub_1004C4900()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1004C491C@<D0>(uint64_t a1@<X8>)
{
  sub_1000AFA94(&qword_10094F3E8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  Color.opacity(_:)();
  *(void *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 40) = v3;
  swift_retain();
  *(void *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 56) = v4;
  Gradient.init(stops:)();
  static UnitPoint.topLeading.getter();
  static UnitPoint.bottomTrailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  *(void *)a1 = v6;
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  double result = 0.15;
  *(_OWORD *)(a1 + 40) = xmmword_100767A00;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1004C4A1C()
{
  return sub_1004C4A90(&qword_10095EC30, &qword_10095EC38, (void (*)(void))sub_1004C4A60);
}

uint64_t sub_1004C4A60()
{
  return sub_1004C4A90(&qword_10095EC40, &qword_10095EC48, (void (*)(void))sub_1000E23B0);
}

uint64_t sub_1004C4A90(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004C4B0C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1004C620C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1004C4B9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR___CHFriendDetailActionCell_label);
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setText:v6];

  long long v7 = *(void **)(a1 + OBJC_IVAR___CHFriendDetailActionCell_accessoryImageView);
  if (v4 == 4)
  {
    id v8 = (id)ActivitySharingBundle();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [self imageNamed:v9 inBundle:v8];
  }
  else
  {
    id v10 = 0;
  }
  [v7 setImage:v10];
}

uint64_t sub_1004C4CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10095ED50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  id v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration;
  swift_beginAccess();
  sub_1004C69D0(v9, (uint64_t)v8);
  uint64_t v10 = sub_1000AFA94(&qword_10095ECD8);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1004C6A38((uint64_t)v8);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10007E2D8(0, &qword_10095ED48);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1004C6AD8((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1004C4F00()
{
  uint64_t v0 = type metadata accessor for UIListContentConfiguration();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR___CHFriendDetailActionListView_footerText);
  }
  UIListContentConfiguration.attributedText.setter();
  v9[3] = v0;
  v9[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v7 = sub_1000B1710(v9);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v7, v3, v0);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1004C5068(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10095ECD8);
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  __chkstk_darwin(v8);
  uint64_t v42 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = OBJC_IVAR___CHFriendDetailActionListView_collectionView;
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))(v17, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v14, v20);
  id v24 = v39;
  id v25 = v39;
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v10);
  UICollectionLayoutListConfiguration.footerMode.setter();
  sub_10007E2D8(0, (unint64_t *)&unk_10095ED58);
  id v26 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id v27 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v26 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v24[v23] = v27;
  *(void *)&v25[OBJC_IVAR___CHFriendDetailActionListView_actionTypes] = _swiftEmptyArrayStorage;
  *(void *)&v25[OBJC_IVAR___CHFriendDetailActionListView_labelTexts] = _swiftEmptyArrayStorage;
  uint64_t v28 = OBJC_IVAR___CHFriendDetailActionListView_footerText;
  *(void *)&v25[v28] = [objc_allocWithZone((Class)NSAttributedString) init];
  swift_unknownObjectWeakInit();
  type metadata accessor for FriendDetailActionCell();
  sub_1000AFA94(&qword_10095ECC8);
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(&v25[OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration], 1, 1, v41);

  id v31 = (objc_class *)type metadata accessor for FriendDetailActionListView();
  v43.receiver = v25;
  v43.super_class = v31;
  id v32 = [super initWithFrame:a1, a2, a3, a4];
  id v33 = *(void **)&v32[OBJC_IVAR___CHFriendDetailActionListView_collectionView];
  uint64_t v34 = v32;
  [v33 setDelegate:v34];
  [v33 setDataSource:v34];
  [v33 setScrollEnabled:0];
  [v34 addSubview:v33];
  NSString v35 = self;
  UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];

  uint64_t v37 = v42;
  sub_1004C4CB0(v42);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v37, v29);
  [v34 setClipsToBounds:1];

  return v34;
}

void sub_1004C5614(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v10 = *(void *)(a1 + 8 * v8 + 32);
      if (v10 <= 5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1001E8358(0, v9[2] + 1, 1, v9);
        }
        unint64_t v12 = v9[2];
        unint64_t v11 = v9[3];
        if (v12 >= v11 >> 1) {
          uint64_t v9 = sub_1001E8358((void *)(v11 > 1), v12 + 1, 1, v9);
        }
        v9[2] = v12 + 1;
        v9[v12 + 4] = v10;
      }
      ++v8;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  *(void *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes) = v9;
  swift_bridgeObjectRelease();
  *(void *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_labelTexts) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v14 = *(id *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_footerText);
  *(void *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_footerText) = a3;
  id v13 = a3;
}

id sub_1004C5844()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FriendDetailActionListView();
  return [super dealloc];
}

uint64_t sub_1004C5950()
{
  return type metadata accessor for FriendDetailActionListView();
}

uint64_t type metadata accessor for FriendDetailActionListView()
{
  uint64_t result = qword_10095ECB0;
  if (!qword_10095ECB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004C59A4()
{
  sub_1004C5A9C();
  if (v0 <= 0x3F)
  {
    sub_1004C5B08();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1004C5A9C()
{
  if (!qword_10095ECC0)
  {
    type metadata accessor for FriendDetailActionCell();
    sub_1000A1370(&qword_10095ECC8);
    unint64_t v0 = type metadata accessor for UICollectionView.CellRegistration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095ECC0);
    }
  }
}

void sub_1004C5B08()
{
  if (!qword_10095ECD0)
  {
    sub_1000A1370(&qword_10095ECD8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095ECD0);
    }
  }
}

unint64_t sub_1004C5B78()
{
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(*(void *)(v0 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes) + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(void *)(*(void *)(v0 + OBJC_IVAR___CHFriendDetailActionListView_labelTexts) + 16))
  {
    type metadata accessor for FriendDetailActionCell();
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_10095ECC8);
    uint64_t v2 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004C6098(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

ValueMetadata *type metadata accessor for FriendDetailActionListView.ActionType()
{
  return &type metadata for FriendDetailActionListView.ActionType;
}

unint64_t sub_1004C61B8()
{
  unint64_t result = qword_10095ED40;
  if (!qword_10095ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095ED40);
  }
  return result;
}

unint64_t sub_1004C620C(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

void sub_1004C621C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR___CHFriendDetailActionListView_collectionView;
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v6, v12);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v2);
  UICollectionLayoutListConfiguration.footerMode.setter();
  sub_10007E2D8(0, (unint64_t *)&unk_10095ED58);
  uint64_t v15 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id v16 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v15 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v21] = v16;
  *(void *)&v1[OBJC_IVAR___CHFriendDetailActionListView_actionTypes] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR___CHFriendDetailActionListView_labelTexts] = _swiftEmptyArrayStorage;
  uint64_t v17 = OBJC_IVAR___CHFriendDetailActionListView_footerText;
  *(void *)&v1[v17] = [objc_allocWithZone((Class)NSAttributedString) init];
  swift_unknownObjectWeakInit();
  type metadata accessor for FriendDetailActionCell();
  sub_1000AFA94(&qword_10095ECC8);
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v18 = &v1[OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration];
  uint64_t v19 = sub_1000AFA94(&qword_10095ECD8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004C65F4(void *a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v8 = [a1 cellForItemAtIndexPath:isa];

  if (v8)
  {
    type metadata accessor for FriendDetailActionCell();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      if (qword_10094AAC0 != -1) {
        swift_once();
      }
      id v5 = (id)qword_10095B000;
      id v6 = [v4 contentView];
      [v6 setBackgroundColor:v5];

      uint64_t v7 = v5;
    }
    else
    {
      uint64_t v7 = v8;
    }
  }
}

unint64_t sub_1004C6714()
{
  uint64_t v1 = v0;
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes);
  if (result >= *(void *)(v3 + 16))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(void *)(v3 + 8 * result + 32);
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [(id)result friendDetailActionListView:v1 didSelectActionType:v4];
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1004C67C0(void *a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v11 = [a1 cellForItemAtIndexPath:isa];

  if (v11)
  {
    type metadata accessor for FriendDetailActionCell();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = v3;
      if (qword_10094AAB8 != -1) {
        swift_once();
      }
      id v5 = (void *)qword_10095AFF8;
      id v6 = self;
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v4;
      *(void *)(v7 + 24) = v5;
      aBlock[4] = sub_1004C69C8;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      uint64_t aBlock[3] = &unk_1008CB868;
      id v8 = _Block_copy(aBlock);
      id v9 = v5;
      id v10 = v11;
      swift_release();
      [v6 animateWithDuration:v8 animations:0.5];

      _Block_release(v8);
    }
    else
    {
    }
  }
}

uint64_t sub_1004C6988()
{
  return swift_deallocObject();
}

void sub_1004C69C8()
{
  sub_1003DD374(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004C69D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095ED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C6A38(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095ED50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004C6A98()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004C6AD0()
{
  return sub_1004C4F00();
}

uint64_t sub_1004C6AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095ED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004C6B40(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004C6BC0()
{
  swift_getObjectType();
  uint64_t v0 = self;
  if (![v0 isRecapAvailable]) {
    goto LABEL_8;
  }
  id v1 = [self sharedApplication];
  id v2 = [v1 connectedScenes];

  sub_10007E2D8(0, &qword_10095EDD0);
  sub_1004C7DB8();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = (void *)sub_10065DD34(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_8;
  }
  id v5 = [v4 delegate];

  if (!v5) {
    goto LABEL_8;
  }
  self;
  id v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6 || (id v7 = sub_1004C7060(v6)) == 0)
  {
    swift_unknownObjectRelease();
LABEL_8:
    id v13 = [self sharedApplication];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 failedTest:v14];

    return 1;
  }
  id v8 = v7;
  id v9 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithTestName:v10 scrollView:v8 completionHandler:0];

  id v12 = v11;
  [v0 runTestWithParameters:v12];

  swift_unknownObjectRelease();
  return 1;
}

void *sub_1004C6E98(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 activityTileViewController:v4];
  id v8 = (char *)[v7 showTodayAndShareImmediately:0 animated:1 forGoalCompleteNotification:0 goalRecommendation:0];

  id v9 = [self mainRunLoop];
  Date.init(timeIntervalSinceNow:)();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  [v9 runUntilDate:isa];

  id v11 = [*(id *)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController] currentlyDisplayedViewController];
  type metadata accessor for HistoryDayViewController();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    id v13 = *(void **)(v12 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView);
    id v14 = v13;
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

id sub_1004C7060(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 activityTileViewController:v4];
  id v8 = [v7 navigateToTrophyCaseAnimated:0 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:0];

  if (v8)
  {
    id v9 = [self mainRunLoop];
    Date.init(timeIntervalSinceNow:)();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    [v9 runUntilDate:isa];

    id v11 = [v8 collectionView];
  }
  else
  {
    os_log_type_t v12 = static os_log_type_t.error.getter();
    id v13 = (void *)HKLogActivity;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogActivity, v12))
    {
      uint64_t v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v17 = _typeName(_:qualified:)();
      uint64_t v20 = sub_10008F1F4(v17, v18, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "%s failed to present new trophy case! Is defaults set correctly?", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return 0;
  }
  return v11;
}

uint64_t sub_1004C7308()
{
  uint64_t v0 = self;
  if (![v0 isRecapAvailable]) {
    goto LABEL_8;
  }
  id v1 = [self sharedApplication];
  id v2 = [v1 connectedScenes];

  sub_10007E2D8(0, &qword_10095EDD0);
  sub_1004C7DB8();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  double v4 = (void *)sub_10065DD34(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_8;
  }
  id v5 = [v4 delegate];

  if (!v5) {
    goto LABEL_8;
  }
  self;
  id v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6
    || (id v7 = [v6 activityTileViewController],
        id v8 = [v7 tableView],
        v7,
        !v8))
  {
    swift_unknownObjectRelease();
LABEL_8:
    id v13 = [self sharedApplication];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 failedTest:v14];

    return 1;
  }
  id v9 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithTestName:v10 scrollView:v8 completionHandler:0];

  id v12 = v11;
  [v0 runTestWithParameters:v12];

  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_1004C7548()
{
  uint64_t v0 = self;
  if (![v0 isRecapAvailable]) {
    goto LABEL_8;
  }
  id v1 = [self sharedApplication];
  id v2 = [v1 connectedScenes];

  sub_10007E2D8(0, &qword_10095EDD0);
  sub_1004C7DB8();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  double v4 = (void *)sub_10065DD34(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_8;
  }
  id v5 = [v4 delegate];

  if (!v5) {
    goto LABEL_8;
  }
  self;
  id v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6 || (id v7 = sub_1004C6E98(v6)) == 0)
  {
    swift_unknownObjectRelease();
LABEL_8:
    id v13 = [self sharedApplication];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 failedTest:v14];

    return 1;
  }
  id v8 = v7;
  id v9 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithTestName:v10 scrollView:v8 completionHandler:0];

  id v12 = v11;
  [v0 runTestWithParameters:v12];

  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_1004C775C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = self;
  id v9 = [v8 sharedApplication];
  id v10 = [v9 connectedScenes];

  sub_10007E2D8(0, &qword_10095EDD0);
  sub_1004C7DB8();
  uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v12 = (void *)sub_10065DD34(v11);
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_8;
  }
  id v13 = [v12 delegate];

  if (!v13) {
    goto LABEL_8;
  }
  self;
  NSString v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
LABEL_8:
    id v18 = [v8 sharedApplication];
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 failedTest:v19];

    return 1;
  }
  uint64_t v15 = v14;
  v21[1] = a3;
  id v24 = [v14 activitySharingViewController];
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  sub_1000AFA94(&qword_10095EDE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    swift_unknownObjectRelease();
    sub_1004C7E20((uint64_t)v22);
    goto LABEL_8;
  }
  sub_100093E60(v22, (uint64_t)v25);
  [v15 _ppt_showSharingTab];
  id v16 = [self mainRunLoop];
  Date.init(timeIntervalSinceNow:)();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v16 runUntilDate:isa];

  sub_10007E4EC(v25, v25[3]);
  dispatch thunk of PPTTestHost.runTest(_:options:)();
  swift_unknownObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v25);
  return 1;
}

uint64_t sub_1004C7A98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  id v7 = (void *)HKLogActivity;
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(HKLogActivity, v6))
  {
    swift_bridgeObjectRetain_n();
    id v9 = v7;
    uint64_t v10 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_10008F1F4(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10008F1F4(a1, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "%s running test: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v10;
    swift_slowDealloc();
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001007CB9C0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    char v14 = sub_1004C7308();
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001007CB9A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v14 = sub_1004C7548();
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007B61F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v14 = sub_1004C775C(a1, a2, a3);
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007CB980 {
         || (v16 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v14 = 0, (v16 & 1) != 0))
  }
  {
    char v14 = sub_1004C6BC0();
  }
  return v14 & 1;
}

unint64_t sub_1004C7DB8()
{
  unint64_t result = qword_10095EDD8;
  if (!qword_10095EDD8)
  {
    sub_10007E2D8(255, &qword_10095EDD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EDD8);
  }
  return result;
}

uint64_t sub_1004C7E20(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095EDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1004C7F50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingCompetitionActionListSwiftUITableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingCompetitionActionListSwiftUITableViewCell()
{
  return self;
}

unint64_t sub_1004C7FAC()
{
  return 0xD000000000000038;
}

uint64_t *sub_1004C7FC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Artwork();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v44(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    char v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    id v18 = (uint64_t *)((char *)a1 + v14);
    NSString v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *id v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    __dst = (char *)a1 + v21;
    id v22 = (char *)a2 + v21;
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v22, 1, v11))
    {
      uint64_t v24 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v44(__dst, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = a3[10];
    uint64_t v28 = (uint64_t *)((char *)a1 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    id v31 = (uint64_t *)((char *)a1 + v27);
    id v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *id v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[11];
    uint64_t v35 = a3[12];
    char v36 = (uint64_t *)((char *)a1 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *char v36 = *v37;
    v36[1] = v38;
    NSString v39 = (char *)a1 + v35;
    uint64_t v40 = (char *)a2 + v35;
    uint64_t v41 = type metadata accessor for URL();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
  }
  return a1;
}

uint64_t sub_1004C8278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  NSString v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v39(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  void *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  char v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  NSString v19 = (const void *)(a2 + v18);
  uint64_t v20 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v40 = (void *)(a1 + v18);
  int v21 = v20();
  int v22 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v20)(v19, 1, v10);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v40, v19, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v23 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
    uint64_t v24 = v40;
  }
  else
  {
    if (!v22)
    {
      v39((uint64_t)v40, (uint64_t)v19, v10);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v40, v10);
    size_t v23 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
    uint64_t v24 = v40;
  }
  memcpy(v24, v19, v23);
LABEL_9:
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  id v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *id v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

uint64_t sub_1004C85BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  char v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    uint64_t v17 = sub_1000AFA94(&qword_1009512E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t sub_1004C87B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  NSString v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v49(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  size_t v23 = (const void *)(a2 + v22);
  uint64_t v24 = *(uint64_t (**)(void))(v11 + 48);
  id v50 = (void *)(a1 + v22);
  int v25 = v24();
  int v26 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v24)(v23, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v50, v23, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v50, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v27 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
    uint64_t v28 = v50;
  }
  else
  {
    if (!v26)
    {
      v49((uint64_t)v50, (uint64_t)v23, v10);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v50, v10);
    size_t v27 = *(void *)(*(void *)(sub_1000AFA94(&qword_1009512E8) - 8) + 64);
    uint64_t v28 = v50;
  }
  memcpy(v28, v23, v27);
LABEL_9:
  uint64_t v29 = a3[9];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[10];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[12];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  return a1;
}

uint64_t sub_1004C8AAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupAttributedTagStrings();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Artwork();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = sub_1000AFA94(&qword_1009512E8);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[8];
      goto LABEL_11;
    }
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[12];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_1004C8C80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ShelfLockupAttributedTagStrings();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for Artwork();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v16 = sub_1000AFA94(&qword_1009512E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[12];

  return v18(v20, a2, a2, v19);
}

uint64_t sub_1004C8E54()
{
  uint64_t v1 = type metadata accessor for Artwork();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShelfLockupAttributedTagStrings();
  sub_1004C9870(&qword_10095EF48, (void (*)(uint64_t))&type metadata accessor for ShelfLockupAttributedTagStrings);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = (int *)type metadata accessor for CatalogTipSectionItem();
  sub_1004C9870(&qword_10095EF50, (void (*)(uint64_t))&type metadata accessor for Artwork);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_1000E363C(v0 + v8[8], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(void *)(v0 + v8[9] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v8[10] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v8[11] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  type metadata accessor for URL();
  sub_1004C9870(&qword_10095EF58, (void (*)(uint64_t))&type metadata accessor for URL);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1004C924C()
{
  return Hasher._finalize()();
}

Swift::Int sub_1004C9290()
{
  return Hasher._finalize()();
}

uint64_t sub_1004C92D0()
{
  return sub_1004C9870(&qword_10095EF40, (void (*)(uint64_t))type metadata accessor for CatalogTipSectionItem);
}

uint64_t sub_1004C9318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095EF60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009512E8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  if ((static ShelfLockupAttributedTagStrings.== infix(_:_:)() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v59 = v5;
  uint64_t v20 = (int *)type metadata accessor for CatalogTipSectionItem();
  if ((static Artwork.== infix(_:_:)() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  if (v22 != *v24 || v23 != v24[1])
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v26 = 0;
    if ((v25 & 1) == 0) {
      return v26 & 1;
    }
  }
  uint64_t v27 = v20[7];
  uint64_t v28 = *(void *)(a1 + v27);
  uint64_t v29 = *(void *)(a1 + v27 + 8);
  uint64_t v30 = (void *)(a2 + v27);
  if (v28 != *v30 || v29 != v30[1])
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v26 = 0;
    if ((v31 & 1) == 0) {
      return v26 & 1;
    }
  }
  sub_1000E363C(a1 + v20[8], (uint64_t)v19);
  id v57 = v20;
  sub_1000E363C(a2 + v20[8], (uint64_t)v17);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000E363C((uint64_t)v19, (uint64_t)v10);
  uint64_t v58 = v32;
  sub_1000E363C((uint64_t)v17, v32);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v33((uint64_t)v10, 1, v4) == 1)
  {
    sub_10008DB18((uint64_t)v17, &qword_1009512E8);
    sub_10008DB18((uint64_t)v19, &qword_1009512E8);
    if (v33(v58, 1, v4) == 1)
    {
      sub_10008DB18((uint64_t)v10, &qword_1009512E8);
      goto LABEL_18;
    }
LABEL_14:
    sub_10008DB18((uint64_t)v10, &qword_10095EF60);
    goto LABEL_15;
  }
  sub_1000E363C((uint64_t)v10, (uint64_t)v14);
  if (v33(v58, 1, v4) == 1)
  {
    sub_10008DB18((uint64_t)v17, &qword_1009512E8);
    sub_10008DB18((uint64_t)v19, &qword_1009512E8);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v4);
    goto LABEL_14;
  }
  uint64_t v35 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v7, v58, v4);
  sub_1004C9870(&qword_10095EF68, (void (*)(uint64_t))&type metadata accessor for Artwork);
  LODWORD(v58) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v35 + 8);
  v36(v7, v4);
  sub_10008DB18((uint64_t)v17, &qword_1009512E8);
  sub_10008DB18((uint64_t)v19, &qword_1009512E8);
  v36(v14, v4);
  sub_10008DB18((uint64_t)v10, &qword_1009512E8);
  if ((v58 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v37 = v57;
  uint64_t v38 = v57[9];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = *(void *)(a1 + v38 + 8);
  uint64_t v41 = (void *)(a2 + v38);
  uint64_t v42 = v41[1];
  if (v40)
  {
    if (!v42) {
      goto LABEL_15;
    }
    if (*v39 != *v41 || v40 != v42)
    {
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v26 = 0;
      if ((v43 & 1) == 0) {
        return v26 & 1;
      }
    }
  }
  else if (v42)
  {
    goto LABEL_15;
  }
  uint64_t v44 = v37[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = *(void *)(a1 + v44 + 8);
  uint64_t v47 = (void *)(a2 + v44);
  uint64_t v48 = v47[1];
  if (v46)
  {
    if (!v48) {
      goto LABEL_15;
    }
    if (*v45 != *v47 || v46 != v48)
    {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v26 = 0;
      if ((v49 & 1) == 0) {
        return v26 & 1;
      }
    }
  }
  else if (v48)
  {
    goto LABEL_15;
  }
  uint64_t v50 = v37[11];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = *(void *)(a1 + v50 + 8);
  uint64_t v53 = (void *)(a2 + v50);
  uint64_t v54 = v53[1];
  if (!v52)
  {
    if (!v54)
    {
LABEL_39:
      char v26 = static URL.== infix(_:_:)();
      return v26 & 1;
    }
    goto LABEL_15;
  }
  if (!v54)
  {
LABEL_15:
    char v26 = 0;
    return v26 & 1;
  }
  if (*v51 == *v53 && v52 == v54) {
    goto LABEL_39;
  }
  char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v26 = 0;
  if (v55) {
    goto LABEL_39;
  }
  return v26 & 1;
}

uint64_t sub_1004C9870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailAlertHandlerView()
{
  return &type metadata for ActivitySharingFriendDetailAlertHandlerView;
}

uint64_t sub_1004C98C8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1004C98E4()
{
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  sub_1004C9A5C();
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  sub_1004C9AC4();
  View.alert<A>(item:content:)();
  swift_release();
  swift_release();
  sub_1004C9B18(v0, v1, v2, v3, v4);
}

uint64_t sub_1004C9A04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  sub_1004C9B6C(a1, (uint64_t)v4);
  swift_retain();
  sub_100568674(v4, a2);
  return swift_release();
}

void sub_1004C9A54()
{
}

unint64_t sub_1004C9A5C()
{
  unint64_t result = qword_10095C150;
  if (!qword_10095C150)
  {
    type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095C150);
  }
  return result;
}

uint64_t sub_1004C9ABC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return sub_1004C9A04(a1, a2);
}

unint64_t sub_1004C9AC4()
{
  unint64_t result = qword_10095EF70;
  if (!qword_10095EF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EF70);
  }
  return result;
}

void sub_1004C9B18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    sub_100346A08(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_1004C9B6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004C9BC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004C9C28()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

unsigned char *storeEnumTagSinglePayload for ActivityRingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004C9DD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingError()
{
  return &type metadata for ActivityRingError;
}

unsigned char *storeEnumTagSinglePayload for WorkoutExtremeStatIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004C9EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutExtremeStatIntentError()
{
  return &type metadata for WorkoutExtremeStatIntentError;
}

unsigned char *storeEnumTagSinglePayload for AwardIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004C9FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardIntentError()
{
  return &type metadata for AwardIntentError;
}

uint64_t sub_1004CA018()
{
  return sub_1004C9C28();
}

uint64_t sub_1004CA020()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

unint64_t sub_1004CA068()
{
  unint64_t result = qword_10095EF78;
  if (!qword_10095EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EF78);
  }
  return result;
}

uint64_t sub_1004CA0BC()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1004CA15C()
{
  return sub_1004CA0BC();
}

unint64_t sub_1004CA168()
{
  unint64_t result = qword_10095EF80;
  if (!qword_10095EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EF80);
  }
  return result;
}

unint64_t sub_1004CA1C0()
{
  unint64_t result = qword_10095EF88;
  if (!qword_10095EF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095EF88);
  }
  return result;
}

uint64_t sub_1004CA218()
{
  uint64_t result = static Color.black.getter();
  qword_100998140 = result;
  return result;
}

uint64_t sub_1004CA238()
{
  uint64_t result = Color.init(rgbHex:)();
  qword_100998148 = result;
  return result;
}

id sub_1004CA260(void *a1)
{
  int v3 = &v1[OBJC_IVAR___WOMirrorViewController_idleTimerToken];
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  v1[OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView] = 2;
  id v4 = objc_allocWithZone((Class)HKHealthStore);
  uint64_t v5 = v1;
  id v6 = [v4 init];
  id v7 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v6];
  id result = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v7];
  if (result)
  {
    *(void *)&v5[OBJC_IVAR___WOMirrorViewController_formattingManager] = result;
    *(void *)&v5[OBJC_IVAR___WOMirrorViewController_dataLinkMonitor] = a1;
    type metadata accessor for WorkoutNotificationCenter();
    uint64_t v9 = swift_allocObject();
    uint64_t v13 = 0;
    id v10 = a1;
    sub_1000AFA94((uint64_t *)&unk_10095F040);
    Published.init(initialValue:)();
    *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications) = _swiftEmptyArrayStorage;
    *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer) = 0;
    *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationTTL) = 0x403E000000000000;
    *(void *)&v5[OBJC_IVAR___WOMirrorViewController_notificationCenter] = v9;

    v12.receiver = v5;
    v12.super_class = (Class)type metadata accessor for MirrorViewController();
    id v11 = [super initWithNibName:0 bundle:0];

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004CA4BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10095F180);
  __chkstk_darwin(v2 - 8);
  sub_1004CB06C((uint64_t)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v4 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095F188));
  uint64_t v5 = (void *)UIHostingController.init(rootView:)();
  [v0 addChildViewController:v5];
  id v6 = (objc_class *)type metadata accessor for MirrorViewController();
  v14.receiver = v0;
  v14.super_class = v6;
  [super viewDidLoad];
  id v7 = [v5 view];
  if (!v7) {
    goto LABEL_9;
  }
  uint64_t v8 = v7;
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [v0 view];
  if (!v9)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v10 = v9;
  [v9 addSubview:v8];

  sub_1004CB664(v8);
  id v11 = [v1 view];
  if (!v11)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  objc_super v12 = v11;
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  if (qword_10094AD60 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v13 = (void *)UIColor.init(_:)();
  [v12 setBackgroundColor:v13];
}

id sub_1004CA748(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_10094B0E8 != -1) {
LABEL_5:
  }
    swift_once();
  sub_1006BEDF8(v14);
  uint64_t v9 = (uint64_t)v2 + OBJC_IVAR___WOMirrorViewController_idleTimerToken;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)v14, v9);
  swift_endAccess();
  id v10 = (objc_class *)type metadata accessor for MirrorViewController();
  v13.receiver = v2;
  v13.super_class = v10;
  return [super viewDidAppear:a1 & 1];
}

id sub_1004CA958(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (uint64_t)v1 + OBJC_IVAR___WOMirrorViewController_idleTimerToken;
  swift_beginAccess();
  sub_100335DBC(v8, (uint64_t)&v14);
  if (!v15)
  {
    sub_100074898((uint64_t)&v14);
    goto LABEL_6;
  }
  sub_10005C2B0(&v14, v16);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (qword_10094B0E8 != -1) {
LABEL_8:
  }
    swift_once();
  sub_1006BF144((uint64_t)v16);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v16);
LABEL_6:
  memset(v16, 0, sizeof(v16));
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)v16, v8);
  swift_endAccess();
  id v10 = (objc_class *)type metadata accessor for MirrorViewController();
  v13.receiver = v2;
  v13.super_class = v10;
  return [super viewDidDisappear:a1 & 1];
}

void sub_1004CABC0(char a1, void (*a2)(), uint64_t a3)
{
  id v7 = [v3 childViewControllers];
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v8 + 32);
  }
  id v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 presentedViewController];

  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v3;
    uint64_t v13 = a1 & 1;
    *(unsigned char *)(v12 + 24) = v13;
    *(void *)(v12 + 32) = a2;
    *(void *)(v12 + 40) = a3;
    uint64_t v22 = sub_1004CD49C;
    uint64_t v23 = v12;
    uint64_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100070394;
    uint64_t v21 = &unk_1008CBC60;
    long long v14 = _Block_copy(&v18);
    id v15 = v3;
    sub_10008A670((uint64_t)a2);
    swift_release();
    [v11 dismissViewControllerAnimated:v13 completion:v14];
    _Block_release(v14);

    return;
  }
LABEL_10:
  if (a2)
  {
    uint64_t v22 = a2;
    uint64_t v23 = a3;
    uint64_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100070394;
    uint64_t v21 = &unk_1008CBC10;
    a2 = (void (*)())_Block_copy(&v18);
    swift_retain();
    swift_release();
  }
  uint64_t v17 = (objc_class *)type metadata accessor for MirrorViewController();
  v24.receiver = v3;
  v24.super_class = v17;
  [super dismissViewControllerAnimated:a1 & 1 completion:a2];
  _Block_release(a2);
}

void sub_1004CAE58(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v8[4] = a3;
    v8[5] = a4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100070394;
    v8[3] = &unk_1008CBC88;
    uint64_t v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (objc_class *)type metadata accessor for MirrorViewController();
  v9.receiver = a1;
  v9.super_class = v7;
  [super dismissViewControllerAnimated:a2 & 1 completion:v6];
  _Block_release(v6);
}

uint64_t sub_1004CB06C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v46 = type metadata accessor for MirrorView();
  __chkstk_darwin(v46);
  uint64_t v40 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_1000AFA94(&qword_10095F160);
  __chkstk_darwin(v43);
  uint64_t v44 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PresentationDetent();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v34 - v8;
  uint64_t v47 = type metadata accessor for MapHostingMirrorView();
  __chkstk_darwin(v47);
  id v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v41 = (uint64_t)&v34 - v12;
  LODWORD(v42) = sub_1004CBA44();
  type metadata accessor for LowPowerModeMonitor();
  swift_allocObject();
  uint64_t v13 = (uint64_t *)LowPowerModeMonitor.init(delegate:)();
  long long v14 = *(void **)(v1 + OBJC_IVAR___WOMirrorViewController_dataLinkMonitor);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR___WOMirrorViewController_notificationCenter);
  type metadata accessor for MirrorControlsState();
  uint64_t v16 = swift_allocObject();
  *(_WORD *)(v16 + 16) = 0;
  id v17 = v14;
  swift_retain();
  ObservationRegistrar.init()();
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR___WOMirrorViewController_formattingManager);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (v42)
  {
    uint64_t v36 = (uint64_t)v17;
    uint64_t v40 = v13;
    uint64_t v42 = v15;
    _OWORD v10[6] = 0;
    v10[7] = 0;
    uint64_t v34 = (char *)v10 + *(int *)(v47 + 40);
    uint64_t v20 = qword_10094A648;
    id v35 = v18;
    swift_retain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1000876DC(v5, (uint64_t)qword_100997778);
    uint64_t v22 = v39;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    objc_super v24 = v37;
    v23(v37, v21, v5);
    v23(v38, (uint64_t)v24, v5);
    State.init(wrappedValue:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v5);
    sub_1004CD30C(&qword_10095F178, (void (*)(uint64_t))&type metadata accessor for LowPowerModeMonitor);
    *id v10 = ObservedObject.init(wrappedValue:)();
    v10[1] = v25;
    uint64_t v26 = v42;
    v10[2] = v36;
    v10[3] = v26;
    uint64_t v27 = (uint64_t)v35;
    v10[4] = v16;
    v10[5] = v27;
    sub_10005E5F8(v10[6]);
    swift_release();
    _OWORD v10[6] = (uint64_t)sub_1004CD2F0;
    v10[7] = v19;
    uint64_t v28 = v41;
    sub_1001FA530((uint64_t)v10, v41);
    uint64_t v29 = type metadata accessor for MapHostingMirrorView;
    sub_1004CD354(v28, v44, (uint64_t (*)(void))type metadata accessor for MapHostingMirrorView);
    swift_storeEnumTagMultiPayload();
    sub_1004CD30C(&qword_10095F168, (void (*)(uint64_t))type metadata accessor for MapHostingMirrorView);
    sub_1004CD30C(&qword_10095F170, (void (*)(uint64_t))type metadata accessor for MirrorView);
    _ConditionalContent<>.init(storage:)();
    uint64_t v30 = v28;
  }
  else
  {
    id v31 = v18;
    uint64_t v32 = v40;
    sub_1005F884C((uint64_t)v17, v15, (uint64_t)v31, (uint64_t)sub_1004CD2F0, v19, v40);
    uint64_t v29 = type metadata accessor for MirrorView;
    sub_1004CD354((uint64_t)v32, v44, (uint64_t (*)(void))type metadata accessor for MirrorView);
    swift_storeEnumTagMultiPayload();
    sub_1004CD30C(&qword_10095F168, (void (*)(uint64_t))type metadata accessor for MapHostingMirrorView);
    sub_1004CD30C(&qword_10095F170, (void (*)(uint64_t))type metadata accessor for MirrorView);
    _ConditionalContent<>.init(storage:)();
    uint64_t v30 = (uint64_t)v32;
  }
  return sub_1004CD3BC(v30, (uint64_t (*)(void))v29);
}

void sub_1004CB664(void *a1)
{
  uint64_t v2 = v1;
  char v4 = sub_1004CBA44();
  id v5 = [v2 view];
  uint64_t v6 = v5;
  if (v4)
  {
    if (v5)
    {
      id v7 = [v5 leadingAnchor];
      goto LABEL_6;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!v5) {
    goto LABEL_25;
  }
  id v8 = [v5 safeAreaLayoutGuide];

  id v7 = [v8 leadingAnchor];
  uint64_t v6 = v8;
LABEL_6:
  id v9 = v7;

  uint64_t v10 = OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView;
  char v11 = *((unsigned char *)v2 + OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView);
  id v12 = [v2 view];
  uint64_t v13 = v12;
  if ((v11 & 1) == 0)
  {
    if (v12)
    {
      id v14 = [v12 safeAreaLayoutGuide];

      id v15 = [v14 trailingAnchor];
      uint64_t v13 = v14;
      goto LABEL_11;
    }
    goto LABEL_26;
  }
  if (!v12)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v15 = [v12 trailingAnchor];
LABEL_11:
  id v36 = v15;

  char v16 = *((unsigned char *)v2 + v10);
  id v17 = [v2 view];
  uint64_t v18 = v17;
  if ((v16 & 1) == 0)
  {
    if (v17)
    {
      uint64_t v19 = v9;
      id v20 = [v17 safeAreaLayoutGuide];

      id v21 = [v20 topAnchor];
      uint64_t v18 = v20;
      goto LABEL_16;
    }
    goto LABEL_28;
  }
  if (!v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v19 = v9;
  id v21 = [v17 topAnchor];
LABEL_16:
  id v22 = v21;

  char v23 = *((unsigned char *)v2 + v10);
  id v24 = [v2 view];
  uint64_t v25 = v24;
  if (v23)
  {
    if (v24)
    {
      id v27 = [v24 bottomAnchor];
      goto LABEL_21;
    }
LABEL_31:
    __break(1u);
    return;
  }
  if (!v24)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v26 = [v24 safeAreaLayoutGuide];

  id v27 = [v26 bottomAnchor];
  uint64_t v25 = v26;
LABEL_21:
  id v28 = v27;

  id v29 = [a1 leadingAnchor];
  id v30 = [v29 constraintEqualToAnchor:v19];

  [v30 setActive:1];
  id v31 = [a1 trailingAnchor];
  id v32 = [v31 constraintEqualToAnchor:v36];

  [v32 setActive:1];
  id v33 = [a1 topAnchor];
  id v34 = [v33 constraintEqualToAnchor:v22];

  [v34 setActive:1];
  id v35 = [a1 bottomAnchor];
  id v37 = [v35 constraintEqualToAnchor:v28];

  [v37 setActive:1];
}

uint64_t sub_1004CBA44()
{
  uint64_t v1 = OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView);
  if (v2 == 2)
  {
    char v3 = sub_1004CBA90();
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_1004CBA90()
{
  uint64_t v0 = type metadata accessor for WorkoutFeatures();
  v5[3] = v0;
  v5[4] = sub_1004CD30C(&qword_10095F158, (void (*)(uint64_t))&type metadata accessor for WorkoutFeatures);
  uint64_t v1 = sub_1000B1710(v5);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v0 - 8) + 104))(v1, enum case for WorkoutFeatures.MapPageView(_:), v0);
  LOBYTE(v0) = isFeatureEnabled(_:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v5);
  if ((v0 & 1) == 0) {
    return 0;
  }
  swift_retain();
  MetricsPublisher.workoutStatePublisher.getter();
  swift_release();
  int v2 = (void *)WorkoutStatePublisher.activityType.getter();
  swift_release();
  if (!v2) {
    return 0;
  }
  [v2 effectiveTypeIdentifier];
  [v2 isIndoor];
  [v2 swimmingLocationType];
  uint64_t IsRouteable = _HKWorkoutActivityTypeIsRouteable();

  return IsRouteable;
}

void sub_1004CBC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:1];

  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_retain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100070A14;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100066A00;
  uint64_t aBlock[3] = &unk_1008CBB70;
  char v11 = _Block_copy(aBlock);
  swift_release();
  id v12 = [self actionWithTitle:v10 style:0 handler:v11];
  _Block_release(v11);

  [v8 addAction:v12];
  [v13 presentViewController:v8 animated:1 completion:0];
}

id sub_1004CC020()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MirrorViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for MirrorViewController()
{
  return self;
}

uint64_t sub_1004CC0EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1004CC160(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v38 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  NSString v6 = (char *)v37 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v37 - v12;
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (void *)((char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v17 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  char v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_9:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    goto LABEL_12;
  }
  static Date.now.getter();
  dispatch thunk of WorkoutNotification.createdAt.getter();
  Date.timeIntervalSince(_:)();
  double v20 = v19;
  id v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v10, v7);
  v21(v13, v7);
  if (v20 < 30.0)
  {
    static WOLog.dataLink.getter();
    id v22 = a1;
    char v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      uint64_t v41 = v22;
      id v27 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v26 = v22;

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Enqueue workout notification: %@", v25, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      char v23 = v22;
    }
    uint64_t v34 = v37[1];

    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v40);
    id v35 = (void *)(v34 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications);
    swift_beginAccess();
    id v36 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_9;
    }
    goto LABEL_14;
  }
  static WOLog.dataLink.getter();
  id v28 = a1;
  id v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    id v31 = (uint8_t *)swift_slowAlloc();
    id v32 = (void *)swift_slowAlloc();
    *(_DWORD *)id v31 = 138412290;
    uint64_t v41 = v28;
    id v33 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v32 = v28;

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Dropping workout notification (TTL expired): %@", v31, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v29 = v28;
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
LABEL_12:
  sub_1004CC714();
}

void sub_1004CC714()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  uint64_t v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v11 = aBlock[0];

    if (v11) {
      return;
    }
    uint64_t v10 = v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications;
    swift_beginAccess();
    if (!(*(void *)v10 >> 62))
    {
      if (!*(void *)((*(void *)v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return;
      }
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v29) {
    return;
  }
LABEL_5:
  swift_beginAccess();
  unint64_t v12 = *(void *)v10;
  if (!(*(void *)v10 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_23;
  }
LABEL_7:
  unint64_t v12 = *(void *)v10;
  if (!(*(void *)v10 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_25;
  }
LABEL_9:
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_26:
    uint64_t v13 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_14;
    }
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v13 = (id *)*(id *)(v12 + 32);
LABEL_12:
  unint64_t v12 = (unint64_t)v13;
  if (*(void *)v10 >> 62) {
    goto LABEL_28;
  }
  if (!*(void *)((*(void *)v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_29;
  }
LABEL_14:
  sub_1001C726C(0, 1);
  swift_endAccess();
  static WOLog.dataLink.getter();
  uint64_t v14 = (id *)(id)v12;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v35 = v2;
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v3;
    double v19 = (void *)v18;
    id v33 = v5;
    *(_DWORD *)id v17 = 138412290;
    aBlock[0] = v14;
    double v20 = v14;
    uint64_t v5 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v19 = v14;

    uint64_t v2 = v35;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Display workout notification: %@", v17, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    uint64_t v3 = v34;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  aBlock[0] = v14;
  id v21 = v14;
  swift_retain();
  static Published.subscript.setter();
  id v22 = self;
  dispatch thunk of WorkoutNotification.displayDuration.getter();
  double v24 = v23;
  uint64_t v25 = (void *)swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1004CD278;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100066A00;
  uint64_t aBlock[3] = &unk_1008CBB20;
  id v26 = _Block_copy(aBlock);
  swift_release();
  id v27 = [v22 scheduledTimerWithTimeInterval:0 repeats:v26 block:v24];

  _Block_release(v26);
  id v28 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer);
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer) = v27;
}

uint64_t sub_1004CCD38()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t *v3 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    char v5 = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
    if (v5)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v7 = 0;
      swift_retain();
      uint64_t v6 = static Published.subscript.setter();
      sub_1004CC714(v6);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1004CCED8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter__notification;
  uint64_t v2 = sub_1000AFA94(&qword_10095F150);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1004CCF9C()
{
  return type metadata accessor for WorkoutNotificationCenter();
}

uint64_t type metadata accessor for WorkoutNotificationCenter()
{
  uint64_t result = qword_10095F028;
  if (!qword_10095F028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004CCFF0()
{
  sub_1004CD0A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004CD0A4()
{
  if (!qword_10095F038)
  {
    sub_1000A1370((uint64_t *)&unk_10095F040);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095F038);
    }
  }
}

uint64_t sub_1004CD100@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutNotificationCenter();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004CD140@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1004CD1C4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1004CD240()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004CD278()
{
  return sub_1004CCD38();
}

uint64_t sub_1004CD280()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1004CD2B8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1004CD2F0()
{
}

uint64_t sub_1004CD30C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004CD354(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004CD3BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004CD41C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1004CD454()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1004CD49C()
{
  sub_1004CAE58(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1004CD508(uint64_t a1)
{
  id v3 = [v1 layer];
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    if (a1)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (v6)
      {
        specialized ContiguousArray.reserveCapacity(_:)();
        sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
        uint64_t v7 = 0;
        do
        {
          uint64_t v8 = v7 + 1;
          NSNumber.init(value:)();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v7 = v8;
        }
        while (v6 != v8);
      }
      swift_bridgeObjectRelease();
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 setLocations:isa];
    }
    else
    {
      Class isa = 0;
      [v4 setLocations:0];
    }
  }
  else
  {

    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

id sub_1004CD7B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientView();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutGradientView()
{
  return self;
}

uint64_t sub_1004CD80C()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_100998150);
  sub_1000876DC(v5, (uint64_t)qword_100998150);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1004CD978(char *a1, char *a2)
{
  return sub_10047F624(*a1, *a2);
}

unint64_t sub_1004CD988()
{
  unint64_t result = qword_10095F1C0;
  if (!qword_10095F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1C0);
  }
  return result;
}

Swift::Int sub_1004CD9DC()
{
  return Hasher._finalize()();
}

uint64_t sub_1004CDA54()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004CDAB0()
{
  return Hasher._finalize()();
}

uint64_t sub_1004CDB24@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6B28, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1004CDB84(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x74736574736166;
  if (*v1) {
    uint64_t v2 = 0x747365776F6C73;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1004CDBC0()
{
  unint64_t result = qword_10095F1C8;
  if (!qword_10095F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1C8);
  }
  return result;
}

unint64_t sub_1004CDC18()
{
  unint64_t result = qword_10095F1D0;
  if (!qword_10095F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1D0);
  }
  return result;
}

unint64_t sub_1004CDC70()
{
  unint64_t result = qword_10095F1D8;
  if (!qword_10095F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1D8);
  }
  return result;
}

unint64_t sub_1004CDCC8()
{
  unint64_t result = qword_10095F1E0;
  if (!qword_10095F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1E0);
  }
  return result;
}

unint64_t sub_1004CDD20()
{
  unint64_t result = qword_10095F1E8;
  if (!qword_10095F1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1E8);
  }
  return result;
}

unint64_t sub_1004CDD7C()
{
  unint64_t result = qword_10095F1F0;
  if (!qword_10095F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1F0);
  }
  return result;
}

uint64_t sub_1004CDDD0@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AD70 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998150);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1004CDE78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004CDEC8(uint64_t a1)
{
  unint64_t v2 = sub_100473F44();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1004CDF18()
{
  unint64_t result = qword_10095F1F8;
  if (!qword_10095F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F1F8);
  }
  return result;
}

unint64_t sub_1004CDF70()
{
  unint64_t result = qword_10095F200;
  if (!qword_10095F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F200);
  }
  return result;
}

unint64_t sub_1004CDFC8()
{
  unint64_t result = qword_10095F208;
  if (!qword_10095F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F208);
  }
  return result;
}

uint64_t sub_1004CE020(uint64_t a1)
{
  unint64_t v2 = sub_1004CDD7C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1004CE070()
{
  unint64_t result = qword_10095F210;
  if (!qword_10095F210)
  {
    sub_1000A1370(&qword_10095F218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F210);
  }
  return result;
}

void sub_1004CE0CC(void *a1@<X8>)
{
  *a1 = &off_1008B6B78;
}

unsigned char *storeEnumTagSinglePayload for WorkoutExtreme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004CE1A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutExtreme()
{
  return &type metadata for WorkoutExtreme;
}

unint64_t sub_1004CE1E0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  v13[1] = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000AFA94(&qword_10095F220);
  uint64_t v7 = (int *)(sub_1000AFA94(&qword_10095F228) - 8);
  uint64_t v8 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10074E640;
  v13[0] = v10 + v9 + v7[14];
  *(unsigned char *)(v10 + v9) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  id v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v10 + v9 + v8) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_1005240B0(v10);
}

unsigned char *_s7SectionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004CE5B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7SectionOMa()
{
  return &_s7SectionON;
}

unint64_t sub_1004CE5EC()
{
  unint64_t result = qword_10095F230;
  if (!qword_10095F230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F230);
  }
  return result;
}

uint64_t sub_1004CE640()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

__n128 initializeWithTake for CardHeaderView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CardHeaderView(uint64_t a1, uint64_t a2)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t sub_1004CE830()
{
  return sub_1000A132C(&qword_10095F358, &qword_10095F360);
}

uint64_t sub_1004CE86C@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v26 = a6;
  int v27 = a7;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v20 = a8 + v19[5];
  *(_OWORD *)uint64_t v20 = xmmword_100768560;
  *(unsigned char *)(v20 + 16) = 3;
  *(unsigned char *)(a8 + v19[6]) = 1;
  sub_1000CD344(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v14);
    id v21 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    id v21 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v21(v18, v14, v15);
  }
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(a8, v18, v15);
  *(unsigned char *)(a8 + v19[7]) = a2 & 1;
  *(unsigned char *)(a8 + v19[8]) = a3 & 1;
  *(void *)(a8 + v19[9]) = v24;
  *(void *)(a8 + v19[10]) = v25;
  *(unsigned char *)(a8 + v19[11]) = v26 & 1;
  *(unsigned char *)(a8 + v19[12]) = v27 & 1;
  return result;
}

Swift::Int sub_1004CEAA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()();
  uint64_t v8 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v9 = v0 + v8[5];
  uint64_t v10 = *(void *)v9;
  id v11 = *(void **)(v9 + 8);
  int v12 = *(unsigned __int8 *)(v9 + 16);
  sub_100091494(*(void *)v9, (uint64_t)v11, *(unsigned char *)(v9 + 16));
  v42._countAndFlagsBits = v10;
  v42._object = v11;
  sub_1000932C0(v42, v12);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v12 || v12 == 2)
  {
    Hasher._combine(_:)(v10);
    uint64_t v13 = v34;
  }
  else
  {
    uint64_t v13 = v34;
    if (v12 == 1)
    {
      String.hash(into:)();
      uint64_t v14 = v10;
      uint64_t v15 = (uint64_t)v11;
      char v16 = 1;
    }
    else
    {
      uint64_t v14 = v10;
      uint64_t v15 = (uint64_t)v11;
      char v16 = v12;
    }
    sub_1000917F8(v14, v15, v16);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v8[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v8[7]));
  uint64_t v17 = *(void *)(v1 + v8[9]);
  int64_t v18 = *(void *)(v17 + 16);
  double v19 = _swiftEmptyArrayStorage;
  if (v18)
  {
    uint64_t v31 = v8;
    uint64_t v32 = v1;
    *(void *)&long long v37 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000B6A64(0, v18, 0);
    unint64_t v20 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v30 = v17;
    uint64_t v21 = v17 + v20;
    uint64_t v33 = *(void *)(v33 + 72);
    uint64_t v22 = v5;
    do
    {
      sub_1004CF258(v21, (uint64_t)v4);
      uint64_t v23 = type metadata accessor for ActivitySharingHighlight();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, &v4[*(int *)(v23 + 20)], v5);
      sub_1001A9284((uint64_t)v4);
      double v19 = (void *)v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B6A64(0, v19[2] + 1, 1);
        double v19 = (void *)v37;
      }
      unint64_t v25 = v19[2];
      unint64_t v24 = v19[3];
      if (v25 >= v24 >> 1)
      {
        sub_1000B6A64(v24 > 1, v25 + 1, 1);
        double v19 = (void *)v37;
      }
      v19[2] = v25 + 1;
      unint64_t v26 = (unint64_t)v19
          + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
          + *(void *)(v6 + 72) * v25;
      uint64_t v13 = v34;
      uint64_t v5 = v22;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26, v34, v22);
      *(void *)&long long v37 = v19;
      v21 += v33;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v1 = v32;
    uint64_t v8 = v31;
  }
  sub_1000CA550((uint64_t)v35, (uint64_t)v19);
  swift_bridgeObjectRelease();
  int v27 = *(void **)(v1 + v8[10]);
  if (v27)
  {
    Hasher._combine(_:)(1u);
    id v28 = v27;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v1 + v8[11]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v8[12]));
  long long v39 = v35[2];
  long long v40 = v35[3];
  uint64_t v41 = v36;
  long long v37 = v35[0];
  long long v38 = v35[1];
  return Hasher.finalize()();
}

uint64_t sub_1004CEEC0()
{
  uint64_t v1 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  long long v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  uint64_t v9 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v10 = (long long *)(v0 + v9[5]);
  char v11 = *((unsigned char *)v10 + 16);
  long long v34 = *v10;
  char v35 = v11;
  _print_unlocked<A, B>(_:_:)();
  v12._countAndFlagsBits = 58;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  LOBYTE(v34) = *(unsigned char *)(v0 + v9[6]);
  _print_unlocked<A, B>(_:_:)();
  v13._countAndFlagsBits = 58;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  sub_100095A68();
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 540945696;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  uint64_t v16 = *(void *)(v0 + v9[9]);
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    *(void *)&long long v34 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000B6A64(0, v17, 0);
    unint64_t v18 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v32[1] = v16;
    uint64_t v19 = v16 + v18;
    uint64_t v20 = *(void *)(v2 + 72);
    void v32[2] = v6 + 32;
    uint64_t v33 = v20;
    uint64_t v21 = v5;
    do
    {
      sub_1004CF258(v19, (uint64_t)v4);
      uint64_t v22 = type metadata accessor for ActivitySharingHighlight();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v22 + 20)], v5);
      sub_1001A9284((uint64_t)v4);
      uint64_t v23 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B6A64(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v34;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1000B6A64(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v34;
      }
      *(void *)(v23 + 16) = v25 + 1;
      unint64_t v26 = v23
          + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
          + *(void *)(v6 + 72) * v25;
      uint64_t v5 = v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26, v8, v21);
      *(void *)&long long v34 = v23;
      v19 += v33;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = Array.description.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1004CF258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingHighlightViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1004CF2BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[10];
    uint64_t v17 = a3[11];
    unint64_t v18 = *(void **)((char *)a2 + v16);
    *(void *)((char *)a1 + v16) = v18;
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    id v19 = v18;
  }
  return a1;
}

void sub_1004CF408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 40));
}

uint64_t sub_1004CF49C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  id v18 = v17;
  return a1;
}

uint64_t sub_1004CF598(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  uint64_t v17 = *(void **)(a1 + v16);
  id v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v18;

  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1004CF6C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_1004CF790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t sub_1004CF880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CF894);
}

uint64_t sub_1004CF894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004CF954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CF968);
}

uint64_t sub_1004CF968(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

double sub_1004CFA24()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing + 8) & 1) == 0) {
    return *(double *)v1;
  }
  *(void *)uint64_t v1 = 0x3FF0000000000000;
  v1[8] = 0;
  return 1.0;
}

void sub_1004CFA54()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath);
    if (v2)
    {
LABEL_3:
      id v3 = [v2 CGPath];
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath);
    if (v2) {
      goto LABEL_3;
    }
  }
  id v3 = 0;
LABEL_6:
  id v4 = v3;
  [v1 setPath:];
}

char *sub_1004CFAFC(uint64_t a1)
{
  uint64_t v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  id v4 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(void *)id v4 = 0;
  v4[8] = 1;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100751040;
  uint64_t v7 = self;
  uint64_t v8 = v2;
  *(void *)(v6 + 32) = [v7 blackColor];
  specialized Array._endMutation()();
  *(void *)&v2[v5] = v6;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  id v10 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v11 = [v7 blackColor];
  id v12 = [v11 CGColor];
  [v10 setFillColor:v12];

  *(void *)&v8[v9] = v10;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  id v14 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v14 setStartPoint:0.5, 1.0];
  [v14 setEndPoint:0.5, 0.0];
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100751040;
  *(void *)(inited + 32) = [v7 blackColor];
  unint64_t v28 = inited;
  specialized Array._endMutation()();
  id v16 = (id)sub_100583824(inited);
  swift_bridgeObjectRelease();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = objc_allocWithZone((Class)CAFilter);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithType:v18];

  [v16 setCompositingFilter:v19];
  *(void *)&v8[v13] = v16;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  uint64_t v20 = &v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)uint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  uint64_t v21 = &v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)a1;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = *(_OWORD *)(a1 + 32);
  *((void *)v21 + 6) = *(void *)(a1 + 48);

  v27.receiver = v8;
  v27.super_class = (Class)type metadata accessor for BarSeriesLayer();
  uint64_t v23 = (char *)[super init];
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer];
  unint64_t v25 = v23;
  [v25 addSublayer:v24];
  [v25 addSublayer:*(void *)&v25[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer]];

  return v25;
}

id sub_1004CFE3C(void *a1)
{
  uint64_t v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  id v4 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(void *)id v4 = 0;
  v4[8] = 1;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100751040;
  uint64_t v7 = self;
  uint64_t v8 = v2;
  *(void *)(v6 + 32) = [v7 blackColor];
  specialized Array._endMutation()();
  *(void *)&v2[v5] = v6;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  id v10 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v11 = [v7 blackColor];
  id v12 = [v11 CGColor];
  [v10 setFillColor:v12];

  *(void *)&v8[v9] = v10;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  id v14 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v14 setStartPoint:0.5, 1.0];
  [v14 setEndPoint:0.5, 0.0];
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100751040;
  *(void *)(inited + 32) = [v7 blackColor];
  v35[0] = inited;
  specialized Array._endMutation()();
  id v16 = (id)sub_100583824(inited);
  swift_bridgeObjectRelease();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = objc_allocWithZone((Class)CAFilter);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithType:v18];

  [v16 setCompositingFilter:v19];
  *(void *)&v8[v13] = v16;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  uint64_t v20 = &v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)uint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  sub_10008F484((uint64_t)a1, (uint64_t)v35);
  uint64_t v21 = (objc_class *)type metadata accessor for BarSeriesLayer();
  if (swift_dynamicCast())
  {
    uint64_t v23 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    uint64_t v22 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 8];
    uint64_t v25 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 16];
    uint64_t v24 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 24];
    uint64_t v27 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 32];
    uint64_t v26 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 40];
    uint64_t v28 = *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_100087AC8(1, (uint64_t)v35, 0.0, 1.0);
    uint64_t v26 = v35[5];
    uint64_t v28 = v35[6];
    uint64_t v24 = v35[3];
    uint64_t v27 = v35[4];
    uint64_t v25 = v35[2];
    uint64_t v23 = v35[0];
    uint64_t v22 = v35[1];
  }
  uint64_t v29 = &v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  *(void *)uint64_t v29 = v23;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v25;
  *((void *)v29 + 3) = v24;
  *((void *)v29 + 4) = v27;
  *((void *)v29 + 5) = v26;
  *((void *)v29 + 6) = v28;

  sub_10007E4EC(a1, a1[3]);
  uint64_t v30 = _bridgeAnythingToObjectiveC<A>(_:)();
  v33.receiver = v8;
  v33.super_class = v21;
  [super initWithLayer:v30];
  swift_unknownObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  return v31;
}

void sub_1004D0264()
{
  uint64_t v1 = (double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  uint64_t v2 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram] + 16);
  double v3 = sub_1004CFA24();
  id v4 = &selRef__presentShareSheetWithTitle_image_workoutData_;
  [v0 bounds];
  double Width = CGRectGetWidth(v36);
  uint64_t v6 = *(void *)(*(void *)v1 + 16);
  id v33 = [objc_allocWithZone((Class)UIBezierPath) init];
  id v32 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v7 = *(void *)(*(void *)v1 + 16);
  if (!v7)
  {
    __break(1u);
    return;
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  double v10 = (Width - v3 * (double)(v2 + 1)) / (double)v6;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing;
  uint64_t v12 = v7 - 1;
  double v13 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins;
  id v31 = v1;
  while (1)
  {
    double v15 = v1[3];
    double v16 = 0.0;
    if (v15 >= 2.22044605e-16)
    {
      if (v9 >= *(void *)(*(void *)v1 + 16)) {
        goto LABEL_12;
      }
      uint64_t v28 = *(void *)v1 + v8;
      if (*(unsigned char *)(v28 + 48)) {
        goto LABEL_12;
      }
      double v16 = *(double *)(v28 + 32) / v15;
    }
    [v0 v4[398]];
    double MaxY = CGRectGetMaxY(v37);
    [v0 v4[398]];
    double Height = CGRectGetHeight(v38);
    if ((v0[v14] & 1) != 0 || v16 >= 2.22044605e-16)
    {
      double v19 = v16 * Height;
      if (v19 > v10) {
        double v20 = v19;
      }
      else {
        double v20 = v10;
      }
      uint64_t v21 = v12;
      uint64_t v22 = v11;
      uint64_t v23 = v14;
      uint64_t v24 = v4;
      uint64_t v25 = self;
      id v26 = [v25 bezierPathWithRoundedRect:v13 cornerRadius:MaxY - v20 v10 cornerRadius:v20 v10 * 0.5];
      id v27 = [v25 bezierPathWithRoundedRect:v13 cornerRadius:MaxY - v10 v10, v10, v10 * 0.5];
      [v33 appendPath:v27];
      [v32 appendPath:v26];

      id v4 = v24;
      uint64_t v14 = v23;
      uint64_t v11 = v22;
      uint64_t v12 = v21;
      uint64_t v1 = v31;
    }
LABEL_12:
    if (v12 == v9) {
      break;
    }
    double v13 = v13 + v10 + *(double *)&v0[v11];
    ++v9;
    v8 += 24;
  }
  uint64_t v29 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = v33;
  id v30 = v33;

  id v34 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = v32;
}

void sub_1004D0538(void *a1, double a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer);
  id v6 = [v5 path];
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath);
  if (v7) {
    id v8 = [v7 CGPath];
  }
  else {
    id v8 = 0;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self animationWithKeyPath:v9];

  [v10 setFromValue:v6];
  [v10 setToValue:v8];
  uint64_t v11 = self;
  if (a1)
  {
    id v12 = a1;
    id v13 = v10;
    id v14 = [v11 functionWithName:v12];
    [v13 setTimingFunction:v14];
  }
  else
  {
    id v15 = v10;
    id v14 = [v11 functionWithName:kCAMediaTimingFunctionEaseOut];
    [v15 setTimingFunction:v14];
  }

  [v10 setDuration:a2];
  *(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType) = 1;
  sub_1004CFA54();
  id v16 = String._bridgeToObjectiveC()();
  [v5 addAnimation:v10 forKey:v16];
}

void sub_1004D078C()
{
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for BarSeriesLayer();
  [super layoutSublayers];
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  CGFloat v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  CGFloat v3 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 8];
  CGFloat v4 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 16];
  CGFloat v5 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 24];
  [v0 bounds];
  v20.origin.x = v6;
  v20.origin.y = v7;
  v20.size.width = v8;
  v20.size.height = v9;
  v19.origin.x = v2;
  v19.origin.y = v3;
  v19.size.width = v4;
  v19.size.height = v5;
  if (!CGRectEqualToRect(v19, v20))
  {
    [v0 bounds];
    *(void *)uint64_t v1 = v10;
    *((void *)v1 + 1) = v11;
    *((void *)v1 + 2) = v12;
    *((void *)v1 + 3) = v13;
    id v14 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer];
    [v0 bounds];
    [v14 setFrame:];
    id v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer];
    [v0 bounds];
    [v15 setFrame:];
    sub_1004D0264();
    id v16 = [v15 path];

    if (v16)
    {
      id v17 = self;
      [v17 begin];
      [v17 setDisableActions:1];
      v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType];
      sub_1004CFA54();
      [v17 commit];
    }
  }
}

uint64_t sub_1004D0950(void *a1)
{
  CGFloat v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  CGFloat v3 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(void *)CGFloat v3 = 0;
  v3[8] = 1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100751040;
  CGFloat v6 = self;
  CGFloat v7 = v2;
  *(void *)(v5 + 32) = [v6 blackColor];
  specialized Array._endMutation()();
  *(void *)&v2[v4] = v5;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  id v9 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v10 = [v6 blackColor];
  id v11 = [v10 CGColor];
  [v9 setFillColor:v11];

  *(void *)&v7[v8] = v9;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  id v13 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v13 setStartPoint:0.5, 1.0];
  [v13 setEndPoint:0.5, 0.0];
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100751040;
  *(void *)(inited + 32) = [v6 blackColor];
  specialized Array._endMutation()();
  id v15 = (id)sub_100583824(inited);
  swift_bridgeObjectRelease();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = objc_allocWithZone((Class)CAFilter);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v16 initWithType:v17];

  [v15 setCompositingFilter:v18];
  *(void *)&v7[v12] = v15;
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v7[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  uint64_t v21 = &v7[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  swift_bridgeObjectRelease();

  uint64_t v22 = *(void **)&v7[v20];
  type metadata accessor for BarSeriesLayer();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1004D0CC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BarSeriesLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for BarSeriesLayer()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for BarSeriesLayer.ShapeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D0E80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarSeriesLayer.ShapeType()
{
  return &type metadata for BarSeriesLayer.ShapeType;
}

unint64_t sub_1004D0EBC()
{
  unint64_t result = qword_10095F490;
  if (!qword_10095F490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F490);
  }
  return result;
}

unint64_t sub_1004D0F14()
{
  unint64_t result = qword_10095F498;
  if (!qword_10095F498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F498);
  }
  return result;
}

unint64_t sub_1004D0F6C()
{
  unint64_t result = qword_10095F4A0[0];
  if (!qword_10095F4A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10095F4A0);
  }
  return result;
}

uint64_t sub_1004D0FC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000AFA94(&qword_10095C080);
    uint64_t v5 = swift_allocError();
    *unsigned int v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v8 = 0;
    if (a2)
    {
      sub_1004D1F80();
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v10 = v8;
    sub_1004D1F18((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1004D109C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10095F4F8 + dword_10095F4F8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10024C1D0;
  return v7(a1, v4);
}

uint64_t sub_1004D1150(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void **)(v1 + 16);
  unsigned int v6 = (uint64_t (*)(void *))((char *)&dword_10095F4F0 + dword_10095F4F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001A0E60;
  return v6(v3);
}

unint64_t sub_1004D1200()
{
  unint64_t result = qword_10095F4B8;
  if (!qword_10095F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F4B8);
  }
  return result;
}

unint64_t sub_1004D1258()
{
  unint64_t result = qword_10095F4C0;
  if (!qword_10095F4C0)
  {
    sub_1000A1370(qword_10095F4C8);
    sub_100477418();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F4C0);
  }
  return result;
}

uint64_t sub_1004D12CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1004767E4();
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutSegmentEntityQuery()
{
  return &type metadata for WorkoutSegmentEntityQuery;
}

uint64_t sub_1004D1390(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v3 = a2;
    unint64_t v4 = 0;
    uint64_t v42 = result + 32;
    uint64_t v40 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v37 = a2 & 0xC000000000000001;
    char v35 = _swiftEmptyArrayStorage;
    unint64_t v36 = *(void *)(result + 16);
    unint64_t v41 = a2 >> 62;
LABEL_3:
    if (v4 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v4;
    }
    unint64_t v34 = v5;
    while (v4 != v5)
    {
      uint64_t v6 = v42 + 72 * v4;
      uint64_t v7 = *(void *)(v6 + 48);
      char v8 = *(unsigned char *)(v6 + 56);
      uint64_t v9 = *(void *)(v6 + 64);
      long long v47 = *(_OWORD *)v6;
      long long v45 = *(_OWORD *)(v6 + 32);
      long long v46 = *(_OWORD *)(v6 + 16);
      if (v41)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v11 = v47;
        uint64_t v10 = result;
      }
      else
      {
        uint64_t v10 = *(void *)(v40 + 16);
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        unint64_t result = swift_bridgeObjectRetain();
        uint64_t v11 = v47;
      }
      ++v4;
      uint64_t v12 = v11;
      if (v10)
      {
        char v38 = v8;
        uint64_t v39 = v7;
        uint64_t v43 = v9;
        unint64_t v44 = v4;
        uint64_t v13 = *(void *)(v11 + 16);
        uint64_t v14 = *(void *)(v11 + 24);
        uint64_t v48 = v11;
        if (v37)
        {
          uint64_t v15 = 0;
          while (1)
          {
            unint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v19 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            uint64_t v20 = result;
            BOOL v21 = *(void *)(result + 16) == v13 && *(void *)(result + 24) == v14;
            if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              uint64_t v16 = *(void *)(v20 + 32);
              unint64_t v17 = v3;
              uint64_t v18 = *(void *)(v48 + 32);
              swift_unknownObjectRelease();
              BOOL v21 = v16 == v18;
              unint64_t v3 = v17;
              if (v21) {
                goto LABEL_36;
              }
            }
            else
            {
              swift_unknownObjectRelease();
            }
            ++v15;
            if (v19 == v10) {
              goto LABEL_34;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              break;
            }
            uint64_t v24 = *(void **)(v3 + 8 * v22 + 32);
            unint64_t result = v24[2];
            BOOL v25 = result == v13 && v24[3] == v14;
            if (v25 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v12 = v48, (result & 1) != 0))
            {
              if (v24[4] == *(void *)(v12 + 32))
              {
LABEL_36:
                swift_release();
                swift_bridgeObjectRelease();
                id v26 = v35;
                unint64_t result = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v4 = v44;
                if ((result & 1) == 0)
                {
                  unint64_t result = sub_1001C9588(0, v35[2] + 1, 1);
                  id v26 = v35;
                }
                long long v27 = v47;
                long long v29 = v45;
                long long v28 = v46;
                unint64_t v31 = v26[2];
                unint64_t v30 = v26[3];
                id v32 = v26;
                if (v31 >= v30 >> 1)
                {
                  unint64_t result = sub_1001C9588(v30 > 1, v31 + 1, 1);
                  long long v29 = v45;
                  long long v28 = v46;
                  long long v27 = v47;
                  id v32 = v35;
                }
                void v32[2] = v31 + 1;
                char v35 = v32;
                id v33 = &v32[9 * v31];
                *((_OWORD *)v33 + 2) = v27;
                *((_OWORD *)v33 + 3) = v28;
                *((_OWORD *)v33 + 4) = v29;
                v33[10] = v39;
                *((unsigned char *)v33 + 88) = v38;
                v33[12] = v43;
                unint64_t v2 = v36;
                if (v44 != v36) {
                  goto LABEL_3;
                }
                return (uint64_t)v35;
              }
            }
            ++v22;
            if (v23 == v10)
            {
LABEL_34:
              swift_release();
              swift_bridgeObjectRelease();
              unint64_t v2 = v36;
              unint64_t v4 = v44;
              unint64_t v5 = v34;
              goto LABEL_8;
            }
          }
        }
        __break(1u);
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_8:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      unint64_t result = swift_release();
      if (v4 == v2) {
        return (uint64_t)v35;
      }
    }
    __break(1u);
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1004D17CC(uint64_t a1, uint64_t a2)
{
  v2[26] = a1;
  v2[27] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[28] = v3;
  v2[29] = *(void *)(v3 - 8);
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_1004D188C, 0, 0);
}

uint64_t sub_1004D188C()
{
  uint64_t v1 = v0[26];
  AppDependency.wrappedValue.getter();
  unint64_t v2 = (void *)v0[25];
  id v3 = [v2 dataCalculator];
  v0[31] = v3;

  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_1004D19C8;
  uint64_t v4 = swift_continuation_init();
  v0[19] = _NSConcreteStackBlock;
  v0[20] = 0x40000000;
  v0[21] = sub_1004D0FC4;
  v0[22] = &unk_1008CBFB8;
  v0[23] = v4;
  [v3 segmentsForWorkout:v1 completion:v0 + 19];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1004D19C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    unint64_t v2 = sub_1004D1D8C;
  }
  else {
    unint64_t v2 = sub_1004D1AD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1004D1AD8()
{
  unint64_t v1 = *(void *)(v0 + 192);

  unint64_t v26 = v1;
  if (v1)
  {
    id v2 = [*(id *)(v0 + 208) fiui_activityType];
    if (!v2) {
      goto LABEL_24;
    }
    id v3 = v2;
    uint64_t v25 = FIUIDistanceTypeForActivityType();

    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_5:
        if (v4 >= 1)
        {
          uint64_t v5 = 0;
          uint64_t v6 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
          uint64_t v7 = _swiftEmptyArrayStorage;
          uint64_t v24 = v4;
          do
          {
            if ((v26 & 0xC000000000000001) != 0) {
              id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v8 = *(id *)(v26 + 8 * v5 + 32);
            }
            uint64_t v9 = *(void *)(v0 + 240);
            uint64_t v10 = *(void *)(v0 + 224);
            uint64_t v11 = *(void **)(v0 + 208);
            id v12 = v8;
            id v13 = [v11 UUID];
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v14 = (void (*)(uint64_t, uint64_t))UUID.uuidString.getter();
            uint64_t v16 = v15;
            (*v6)(v9, v10);
            sub_100479268(v12, v5, v25, v14, v16, v0 + 80);

            sub_1004D1E14(v0 + 80);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v7 = sub_1001E8084(0, v7[2] + 1, 1, v7);
            }
            unint64_t v18 = v7[2];
            unint64_t v17 = v7[3];
            if (v18 >= v17 >> 1) {
              uint64_t v7 = sub_1001E8084((void *)(v17 > 1), v18 + 1, 1, v7);
            }
            ++v5;
            v7[2] = v18 + 1;
            uint64_t v19 = &v7[9 * v18];
            *((_OWORD *)v19 + 2) = *(_OWORD *)(v0 + 80);
            long long v20 = *(_OWORD *)(v0 + 96);
            long long v21 = *(_OWORD *)(v0 + 112);
            long long v22 = *(_OWORD *)(v0 + 128);
            v19[12] = *(void *)(v0 + 144);
            *((_OWORD *)v19 + 4) = v21;
            *((_OWORD *)v19 + 5) = v22;
            *((_OWORD *)v19 + 3) = v20;

            sub_1004D1E98(v0 + 80);
          }
          while (v24 != v5);
          goto LABEL_19;
        }
        __break(1u);
LABEL_24:
        __break(1u);
        return;
      }
    }
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_task_dealloc();
  uint64_t v23 = *(void (**)(void *))(v0 + 8);
  v23(v7);
}

uint64_t sub_1004D1D8C()
{
  unint64_t v1 = *(void **)(v0 + 248);
  swift_willThrow();
  swift_errorRelease();

  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void *))(v0 + 8);
  return v2(_swiftEmptyArrayStorage);
}

uint64_t sub_1004D1E14(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004D1E98(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004D1F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095F4E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004D1F80()
{
  unint64_t result = qword_100958978;
  if (!qword_100958978)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100958978);
  }
  return result;
}

uint64_t sub_1004D1FC0(uint64_t a1, void *a2)
{
  v2[35] = a1;
  v2[36] = a2;
  v2[37] = *a2;
  return _swift_task_switch(sub_1004D2008, 0, 0);
}

uint64_t sub_1004D2008()
{
  unint64_t v1 = v0[35];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t result = sub_1000ABAB8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = *(void *)(v5 + 16);
        uint64_t v6 = *(void *)(v5 + 24);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_1000ABAB8(v8 > 1, v9 + 1, 1);
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v9 + 1;
        uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v7;
        v10[5] = v6;
      }
      while (v2 != v4);
    }
    else
    {
      uint64_t v11 = v0[35] + 32;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = 2 * v12;
      do
      {
        uint64_t v15 = *(void *)(*(void *)v11 + 16);
        uint64_t v14 = *(void *)(*(void *)v11 + 24);
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        int64_t v17 = v12 + 1;
        swift_bridgeObjectRetain();
        if (v12 >= v16 >> 1) {
          sub_1000ABAB8(v16 > 1, v17, 1);
        }
        _swiftEmptyArrayStorage[2] = v17;
        unint64_t v18 = &_swiftEmptyArrayStorage[v13];
        v18[4] = v15;
        v18[5] = v14;
        v13 += 2;
        v11 += 8;
        ++v12;
        --v2;
      }
      while (v2);
    }
  }
  v0[38] = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v19 = AppDependency.__allocating_init(key:manager:)();
  v0[39] = v19;
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t v20 = AppDependency.__allocating_init(key:manager:)();
  v0[40] = v20;
  static AppDependencyManager.shared.getter();
  uint64_t v21 = AppDependency.__allocating_init(key:manager:)();
  v0[41] = v21;
  long long v22 = (void *)swift_task_alloc();
  v0[42] = v22;
  void *v22 = v0;
  v22[1] = sub_1004D22E4;
  return sub_10024EF88((uint64_t)_swiftEmptyArrayStorage, v19, v20, v21);
}

uint64_t sub_1004D22E4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 344) = a1;
  *(void *)(v3 + 352) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1004D28C4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1004D2400;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004D2400()
{
  uint64_t v1 = *(void *)(v0 + 344);
  *(void *)(v0 + 272) = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 360) = v2;
  if (v2)
  {
    *(void *)(v0 + 368) = 0;
    long long v3 = *(_OWORD *)(v1 + 32);
    long long v4 = *(_OWORD *)(v1 + 48);
    long long v5 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 16) = v3;
    *(_OWORD *)(v0 + 32) = v4;
    long long v6 = *(_OWORD *)(v1 + 96);
    long long v7 = *(_OWORD *)(v1 + 112);
    long long v8 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v1 + 128);
    *(_OWORD *)(v0 + 128) = v8;
    *(_OWORD *)(v0 + 80) = v6;
    *(_OWORD *)(v0 + 96) = v7;
    long long v9 = *(_OWORD *)(v1 + 160);
    long long v10 = *(_OWORD *)(v1 + 176);
    long long v11 = *(_OWORD *)(v1 + 208);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v1 + 192);
    *(_OWORD *)(v0 + 192) = v11;
    *(_OWORD *)(v0 + 144) = v9;
    *(_OWORD *)(v0 + 160) = v10;
    long long v12 = *(_OWORD *)(v1 + 224);
    long long v13 = *(_OWORD *)(v1 + 240);
    long long v14 = *(_OWORD *)(v1 + 272);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v1 + 256);
    *(_OWORD *)(v0 + 256) = v14;
    *(_OWORD *)(v0 + 208) = v12;
    *(_OWORD *)(v0 + 224) = v13;
    uint64_t v15 = *(void *)(v0 + 240);
    sub_1001B5A54(v0 + 16);
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10095F4E0 + dword_10095F4E0);
    unint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v16;
    void *v16 = v0;
    v16[1] = sub_1004D25D8;
    uint64_t v17 = *(void *)(v0 + 288);
    return v23(v15, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v19 = *(void *)(v0 + 280);
    swift_bridgeObjectRetain();
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_1004D1390(v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    long long v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v22(v21);
  }
}

uint64_t sub_1004D25D8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004D26D8, 0, 0);
}

uint64_t sub_1004D26D8()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368) + 1;
  sub_1001E4D2C(*(void *)(v0 + 384));
  sub_1001B5CC0(v0 + 16);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = *(void *)(v0 + 280);
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1004D1390(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    long long v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v6(v5);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 368) + 1;
    *(void *)(v0 + 368) = v8;
    long long v9 = (_OWORD *)(*(void *)(v0 + 344) + (v8 << 8));
    long long v10 = v9[5];
    long long v12 = v9[2];
    long long v11 = v9[3];
    *(_OWORD *)(v0 + 48) = v9[4];
    *(_OWORD *)(v0 + 64) = v10;
    *(_OWORD *)(v0 + 16) = v12;
    *(_OWORD *)(v0 + 32) = v11;
    long long v13 = v9[9];
    long long v15 = v9[6];
    long long v14 = v9[7];
    *(_OWORD *)(v0 + 112) = v9[8];
    *(_OWORD *)(v0 + 128) = v13;
    *(_OWORD *)(v0 + 80) = v15;
    *(_OWORD *)(v0 + 96) = v14;
    long long v16 = v9[13];
    long long v18 = v9[10];
    long long v17 = v9[11];
    *(_OWORD *)(v0 + 176) = v9[12];
    *(_OWORD *)(v0 + 192) = v16;
    *(_OWORD *)(v0 + 144) = v18;
    *(_OWORD *)(v0 + 160) = v17;
    long long v19 = v9[17];
    long long v21 = v9[14];
    long long v20 = v9[15];
    *(_OWORD *)(v0 + 240) = v9[16];
    *(_OWORD *)(v0 + 256) = v19;
    *(_OWORD *)(v0 + 208) = v21;
    *(_OWORD *)(v0 + 224) = v20;
    uint64_t v22 = *(void *)(v0 + 240);
    sub_1001B5A54(v0 + 16);
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10095F4E0 + dword_10095F4E0);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1004D25D8;
    uint64_t v24 = *(void *)(v0 + 288);
    return v25(v22, v24);
  }
}

uint64_t sub_1004D28C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004D294C(void *a1)
{
  *(void *)(v1 + 272) = a1;
  *(void *)(v1 + 280) = *a1;
  return _swift_task_switch(sub_1004D2994, 0, 0);
}

uint64_t sub_1004D2994()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v1 = AppDependency.__allocating_init(key:manager:)();
  v0[36] = v1;
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t v2 = AppDependency.__allocating_init(key:manager:)();
  v0[37] = v2;
  static AppDependencyManager.shared.getter();
  uint64_t v3 = AppDependency.__allocating_init(key:manager:)();
  v0[38] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[39] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1004D2AF0;
  return sub_10024FB5C(v1, v2, v3);
}

uint64_t sub_1004D2AF0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1004D300C;
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = sub_1004D2C28;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004D2C28()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 336) = v2;
  if (v2)
  {
    long long v3 = *(_OWORD *)(v1 + 32);
    long long v4 = *(_OWORD *)(v1 + 48);
    long long v5 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 16) = v3;
    *(_OWORD *)(v0 + 32) = v4;
    long long v6 = *(_OWORD *)(v1 + 96);
    long long v7 = *(_OWORD *)(v1 + 112);
    long long v8 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v1 + 128);
    *(_OWORD *)(v0 + 128) = v8;
    *(_OWORD *)(v0 + 80) = v6;
    *(_OWORD *)(v0 + 96) = v7;
    long long v9 = *(_OWORD *)(v1 + 160);
    long long v10 = *(_OWORD *)(v1 + 176);
    long long v11 = *(_OWORD *)(v1 + 208);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v1 + 192);
    *(_OWORD *)(v0 + 192) = v11;
    *(_OWORD *)(v0 + 144) = v9;
    *(_OWORD *)(v0 + 160) = v10;
    long long v12 = *(_OWORD *)(v1 + 224);
    long long v13 = *(_OWORD *)(v1 + 240);
    long long v14 = *(_OWORD *)(v1 + 272);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v1 + 256);
    *(_OWORD *)(v0 + 256) = v14;
    *(_OWORD *)(v0 + 208) = v12;
    *(_OWORD *)(v0 + 224) = v13;
    *(void *)(v0 + 344) = 1;
    uint64_t v15 = *(void *)(v0 + 240);
    sub_1001B5A54(v0 + 16);
    long long v20 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10095F4E0 + dword_10095F4E0);
    long long v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v16;
    void *v16 = v0;
    v16[1] = sub_1004D2D78;
    uint64_t v17 = *(void *)(v0 + 272);
    return v20(v15, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v19 = *(uint64_t (**)(void *))(v0 + 8);
    return v19(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1004D2D78(uint64_t a1)
{
  *(void *)(*(void *)v1 + 360) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004D2E78, 0, 0);
}

uint64_t sub_1004D2E78()
{
  uint64_t v1 = *(void *)(v0 + 360);
  sub_1001B5CC0(v0 + 16);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(v0 + 360);
LABEL_5:
    long long v5 = *(uint64_t (**)(void *))(v0 + 8);
    return v5(v2);
  }
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  if (v3 == v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = _swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(v0 + 344);
  long long v8 = (_OWORD *)(*(void *)(v0 + 320) + (v7 << 8));
  long long v9 = v8[5];
  long long v11 = v8[2];
  long long v10 = v8[3];
  *(_OWORD *)(v0 + 48) = v8[4];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  long long v12 = v8[9];
  long long v14 = v8[6];
  long long v13 = v8[7];
  *(_OWORD *)(v0 + 112) = v8[8];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  long long v15 = v8[13];
  long long v17 = v8[10];
  long long v16 = v8[11];
  *(_OWORD *)(v0 + 176) = v8[12];
  *(_OWORD *)(v0 + 192) = v15;
  *(_OWORD *)(v0 + 144) = v17;
  *(_OWORD *)(v0 + 160) = v16;
  long long v18 = v8[17];
  long long v20 = v8[14];
  long long v19 = v8[15];
  *(_OWORD *)(v0 + 240) = v8[16];
  *(_OWORD *)(v0 + 256) = v18;
  *(_OWORD *)(v0 + 208) = v20;
  *(_OWORD *)(v0 + 224) = v19;
  *(void *)(v0 + 344) = v7 + 1;
  uint64_t v21 = *(void *)(v0 + 240);
  sub_1001B5A54(v0 + 16);
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10095F4E0 + dword_10095F4E0);
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v22;
  void *v22 = v0;
  v22[1] = sub_1004D2D78;
  uint64_t v23 = *(void *)(v0 + 272);
  return v24(v21, v23);
}

uint64_t sub_1004D300C()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1004D30EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if ([result navigateToSeymourTab])
    {
      static Log.default.getter();
      v5._countAndFlagsBits = 0xD000000000000059;
      v5._object = (void *)0x80000001007BEBD0;
      v6._object = (void *)0x80000001007BEC30;
      v6._countAndFlagsBits = 0xD000000000000027;
      Logger.trace(file:function:)(v5, v6);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_10064EE84(1);
      return (void *)swift_unknownObjectRelease();
    }
    else
    {
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_1004D3284()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers];
  uint64_t v2 = self;
  swift_bridgeObjectRetain();
  id v3 = [v2 defaultCenter];
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v1 + 32;
    swift_bridgeObjectRetain();
    id v6 = v3;
    do
    {
      sub_10008F484(v5, (uint64_t)v9);
      sub_10007E4EC(v9, v9[3]);
      [v6 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v9);
      v5 += 32;
      --v4;
    }
    while (v4);

    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ActivityDashboardViewController();
  return [super dealloc];
}

void sub_1004D361C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  uint64_t v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    uint64_t v7 = v5;
    objc_super v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = v1;
    v21[0] = v9;
    *(_DWORD *)objc_super v8 = 136315138;
    uint64_t v10 = _typeName(_:qualified:)();
    uint64_t v20 = sub_10008F1F4(v10, v11, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v6, "%s did receive significantTimeChangeNotification notification", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v1 = v19;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v13 = (void *)Strong;
    Date.init()();
    id v14 = [v13 navigationItem];
    if (qword_10094AD90 != -1) {
      swift_once();
    }
    id v15 = (id)qword_10095F500;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    NSString v17 = [v15 stringFromDate:isa];

    if (!v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v14 _setWeeTitle:v17];

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_1004D3908()
{
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  if (os_log_type_enabled(HKLogActivity, v0))
  {
    id v3 = v1;
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 136315138;
    uint64_t v5 = _typeName(_:qualified:)();
    sub_10008F1F4(v5, v6, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s did receive fiuiFitnessUnitPreferencesDidChange notification", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v8 = Strong;
    id v9 = [Strong collectionView];

    if (v9)
    {
      [v9 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1004D3AAC()
{
  static os_log_type_t.info.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v2 = (void *)Strong;
    id v3 = (char *)*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context);

    id v4 = *(id *)&v3[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider];
    id v5 = (id)FIUICopyUserFirstNameFromAddressBook();
    [v4 setName:v5];
  }
}

void sub_1004D3BAC()
{
  if (*(unsigned char *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) == 1)
  {
    id v1 = [v0 navigationItem];
    id v2 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton]];
    [v1 setLeftBarButtonItem:v2];

    id v3 = [v0 navigationItem];
    id v4 = [v3 leftBarButtonItem];

    if (v4)
    {
      static FitnessAccessibilityIdentifier.SummaryView.plusSignButton.getter();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setAccessibilityIdentifier:v5];
    }
    id v6 = [v0 navigationItem];
    id v7 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton]];
    [v6 setRightBarButtonItem:v7];

    id v8 = [v0 navigationItem];
    id v9 = [v8 rightBarButtonItem];

    if (v9)
    {
      static FitnessAccessibilityIdentifier.SummaryView.doneButton.getter();
      id v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setAccessibilityIdentifier:v10];
    }
  }
}

void sub_1004D3FE4()
{
  id v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10095F728);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10095F650);
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v32 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D576C();
  *(unsigned char *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
           + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) = 1;
  sub_1000E91EC();
  id v7 = [v0 navigationItem];
  id v8 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton]];
  [v7 setLeftBarButtonItem:v8];

  id v9 = [v1 navigationItem];
  id v10 = [v9 leftBarButtonItem];

  if (v10)
  {
    static FitnessAccessibilityIdentifier.SummaryView.plusSignButton.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setAccessibilityIdentifier:v11];
  }
  id v12 = [v1 navigationItem];
  id v13 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton]];
  [v12 setRightBarButtonItem:v13];

  id v14 = [v1 navigationItem];
  id v15 = [v14 rightBarButtonItem];

  if (v15)
  {
    static FitnessAccessibilityIdentifier.SummaryView.doneButton.getter();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 setAccessibilityIdentifier:v16];
  }
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  uint64_t v19 = v33;
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, 1, 1, v33);
    goto LABEL_11;
  }
  id v20 = v18;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v4, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v19) == 1)
  {
LABEL_11:
    sub_10008DB18((uint64_t)v4, &qword_10095F728);
    goto LABEL_12;
  }
  uint64_t v21 = v32;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v32, v4, v19);
  sub_1000AFA94((uint64_t *)&unk_1009555B0);
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10074E640;
  unint64_t v27 = v26 + v25;
  long long v28 = *(void (**)(unint64_t, char *, uint64_t))(v23 + 16);
  v28(v27, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v22);
  v28(v27 + v24, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v22);
  uint64_t v29 = v33;
  NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v26);
  swift_bridgeObjectRelease();
  unint64_t v30 = *(void **)&v1[v17];
  if (v30)
  {
    id v31 = v30;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v29);
LABEL_12:
  sub_1004D5BD0();
}

void sub_1004D44F8()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  uint64_t v3 = *(char **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
  id v4 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState];
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 7;
  id v7 = v3;
  os_unfair_lock_lock(v6);
  sub_1000E64BC(v5, (uint64_t)&v22);
  os_unfair_lock_unlock(v6);
  uint64_t v8 = v22;
  char v9 = v23;

  if (v9)
  {
    os_log_type_t v10 = static os_log_type_t.error.getter();
    NSString v11 = (void *)HKLogActivity;
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(HKLogActivity, v10))
    {
      id v13 = v11;
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)id v14 = 136315138;
      uint64_t v15 = _typeName(_:qualified:)();
      sub_10008F1F4(v15, v16, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v12, "%s User profile missing for entry links button", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider);
    objc_allocWithZone((Class)type metadata accessor for EntryLinksViewController());
    id v18 = v1;
    swift_retain();
    uint64_t v21 = sub_1006A0C1C(v18, v17, v8);
    id v19 = [v18 navigationController];
    if (v19)
    {
      id v20 = v19;
      [v19 pushViewController:v21 animated:1];
    }
  }
}

uint64_t sub_1004D47AC()
{
  id v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10095F728);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095F650);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
           + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) = 0;
  sub_1000E91EC();
  sub_100051DB8();
  id v9 = [v0 navigationItem];
  [v9 setLeftBarButtonItem:0];

  id v10 = [v1 navigationItem];
  [v10 setRightBarButtonItem:0];

  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
  os_log_type_t v12 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10008DB18((uint64_t)v4, &qword_10095F728);
  }
  id v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10008DB18((uint64_t)v4, &qword_10095F728);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v30 = sub_1000AFA94((uint64_t *)&unk_1009555B0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v27 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v31 = v11;
  uint64_t v16 = v15;
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v29 = v17 + *(void *)(v15 + 72);
  uint64_t v18 = swift_allocObject();
  long long v28 = xmmword_1007509E0;
  *(_OWORD *)(v18 + 16) = xmmword_1007509E0;
  id v19 = v8;
  id v20 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 16);
  v20(v18 + v17, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v14);
  uint64_t v32 = 2;
  char v33 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v28;
  v20(v21 + v17, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v27);
  uint64_t v22 = v19;
  uint64_t v32 = 3;
  char v33 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  char v23 = *(void **)&v1[v31];
  if (v23)
  {
    id v24 = v23;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v22, v5);
}

id sub_1004D4BDC()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for CardConfigurationView();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (void *)((char *)aBlock - v6);
  uint64_t v8 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  id v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  id v10 = v8;
  id v11 = v9;
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  id v13 = result;
  id v14 = [result window];

  if (v14)
  {
    [v14 bounds];
    uint64_t v16 = v15;

    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v17 = 0;
  }
  id result = [v1 view];
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v18 = result;
  id v19 = [result window];

  if (v19)
  {
    [v19 bounds];
    uint64_t v21 = v20;

    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0;
  }
  char v23 = sub_1004D5194();
  sub_1001BEC7C(v10, v11, v17, v14 == 0, v22, v19 == 0, (uint64_t)v23, v24, v7);
  sub_1000B0528((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CardConfigurationView);
  id v25 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095F720));
  uint64_t v26 = (void *)UIHostingController.init(rootView:)();
  id v27 = [v26 presentationController];
  if (v27)
  {
    long long v28 = v27;
    self;
    unint64_t v29 = (void *)swift_dynamicCastObjCClass();
    if (v29) {
      [v29 setPrefersGrabberVisible:0];
    }
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v1;
  aBlock[4] = sub_1004D8F34;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008CC2C0;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = v1;
  swift_release();
  [v32 presentViewController:v26 animated:1 completion:v31];
  _Block_release(v31);

  return (id)sub_1000C98F0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CardConfigurationView);
}

uint64_t sub_1004D4F2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CustomizeSummaryTip();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  sub_1000B0528(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  sub_1000B7550(&qword_10095F6B8, (void (*)(uint64_t))type metadata accessor for CustomizeSummaryTip);
  char v10 = Tip.shouldDisplay.getter();
  uint64_t result = sub_1000C98F0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  if (v10)
  {
    sub_1000B0528(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
    Tip.invalidate(reason:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_1000C98F0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  }
  return result;
}

void (*sub_1004D5194())(char a1)
{
  id v1 = (void (**)(char))&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  if (v2)
  {
    uint64_t v3 = *(void (**)(char))&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    uint64_t v3 = sub_1004D8EB0;
    *id v1 = sub_1004D8EB0;
    v1[1] = (void (*)(char))v4;
    uint64_t v5 = v0;
    swift_retain();
    sub_10005E5F8(0);
  }
  sub_10008A670(v2);
  return v3;
}

void sub_1004D5240(char a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  v7[4] = sub_1004D8EF0;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100070394;
  v7[3] = &unk_1008CC270;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [v6 dismissViewControllerAnimated:1 completion:v5];
  _Block_release(v5);
}

void sub_1004D5328(char a1, char *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095F718);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v12 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    if (v12)
    {
      v22[1] = 1;
      Class v13 = v12;
      UICollectionViewDiffableDataSource.snapshot(for:)();
      uint64_t v14 = NSDiffableDataSourceSectionSnapshot.items.getter();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v15 = *(void *)(v14 + 16);
      swift_bridgeObjectRelease();
      if (!v15)
      {
LABEL_8:

        return;
      }
      id v16 = [a2 collectionView];
      if (v16)
      {
        uint64_t v17 = v16;
        id v18 = [a2 collectionView];
        if (!v18)
        {
LABEL_12:
          __break(1u);
          return;
        }
        id v19 = v18;
        id v20 = [v18 numberOfItemsInSection:1];

        if (!__OFSUB__(v20, 1))
        {
          IndexPath.init(row:section:)();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          [v17 scrollToItemAtIndexPath:isa atScrollPosition:1 animated:1];

          Class v13 = isa;
          goto LABEL_8;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_12;
    }
  }
}

id sub_1004D5598(int a1, id a2)
{
  return [a2 dismissViewControllerAnimated:1 completion:0];
}

id sub_1004D55B0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for ActivityDashboardViewController();
  v12.receiver = v2;
  v12.super_class = v8;
  id result = [super viewWillDisappear:a1 & 1];
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility;
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility) == 2)
  {
    v11[1] = v2;
    Date.init()();
    sub_1000B7550(&qword_10095F750, (void (*)(uint64_t))type metadata accessor for ActivityDashboardViewController);
    MetricImpressionPublishing.publishImpressions(on:)();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((unsigned char *)v2 + v10) = 1;
  return result;
}

void sub_1004D576C()
{
  id v1 = [v0 navigationItem];
  [v1 setTitle:0];

  id v2 = [v0 navigationItem];
  [v2 _setWeeTitle:0];

  id v3 = [v0 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 navigationBar];

    [v5 setPrefersLargeTitles:0];
  }
  id v6 = [v0 navigationItem];
  [v6 _setLargeTitleAccessoryView:0 alignToBaseline:0];

  *((unsigned char *)v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup) = 0;
}

uint64_t sub_1004D587C()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t sub_1004D5894()
{
  (*(void (**)(void, void))(v0[38] + 8))(v0[40], v0[37]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1004D59C0()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t sub_1004D59D8()
{
  (*(void (**)(void, void))(v0[36] + 8))(v0[38], v0[35]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1004D5BD0()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095F718);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (v10)
  {
    v17[1] = 1;
    Class v11 = v10;
    UICollectionViewDiffableDataSource.snapshot(for:)();
    uint64_t v12 = NSDiffableDataSourceSectionSnapshot.items.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    if (v13)
    {
      id v14 = [v1 collectionView];
      if (!v14)
      {
        __break(1u);
        return;
      }
      uint64_t v15 = v14;
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      [v15 scrollToItemAtIndexPath:isa atScrollPosition:4 animated:1];

      Class v11 = isa;
    }
  }
}

void sub_1004D5E40()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10095F718);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (v10)
  {
    v20[1] = 1;
    Class v11 = v10;
    UICollectionViewDiffableDataSource.snapshot(for:)();
    uint64_t v12 = NSDiffableDataSourceSectionSnapshot.items.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_7:

      return;
    }
    id v14 = [v1 collectionView];
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = [v1 collectionView];
      if (!v16)
      {
LABEL_11:
        __break(1u);
        return;
      }
      uint64_t v17 = v16;
      id v18 = [v16 numberOfItemsInSection:1];

      if (!__OFSUB__(v18, 1))
      {
        IndexPath.init(row:section:)();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        [v15 scrollToItemAtIndexPath:isa atScrollPosition:1 animated:1];

        Class v11 = isa;
        goto LABEL_7;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

id sub_1004D6100()
{
  if (Tips.Action.id.getter() == 0xD000000000000013 && v0 == 0x80000001007CC3E0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id result = (id)swift_bridgeObjectRelease();
    if ((v1 & 1) == 0) {
      return result;
    }
  }
  return sub_1004D4BDC();
}

void sub_1004D619C()
{
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (Tips.Action.id.getter() == 0xD000000000000013 && v3 == 0x80000001007CC400)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0) {
      return;
    }
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)uint64_t v2 = sub_1004D8D64;
    *((void *)v2 + 1) = v7;
    *((void *)v2 + 2) = 0;
    *((void *)v2 + 3) = 0;
    id v14 = _swiftEmptyArrayStorage;
    sub_1000AFA94((uint64_t *)&unk_10095F6C0);
    State.init(wrappedValue:)();
    uint64_t v8 = v16;
    *((void *)v2 + 4) = v15;
    *((void *)v2 + 5) = v8;
    LOBYTE(v14) = 0;
    State.init(wrappedValue:)();
    uint64_t v9 = v16;
    v2[48] = v15;
    *((void *)v2 + 7) = v9;
    LOBYTE(v14) = 0;
    State.init(wrappedValue:)();
    uint64_t v10 = v16;
    v2[64] = v15;
    *((void *)v2 + 9) = v10;
    Class v11 = (uint64_t *)&v2[*(int *)(OnboardingNavigationView + 36)];
    *Class v11 = swift_getKeyPath();
    sub_1000AFA94(&qword_10094DFC8);
    swift_storeEnumTagMultiPayload();
    id v12 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
    uint64_t v13 = (void *)UIHostingController.init(rootView:)();
    [v6 presentViewController:v13 animated:1 completion:0];
  }
}

uint64_t sub_1004D63E8(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = sub_1000AFA94((uint64_t *)&unk_10095B870);
  __chkstk_darwin(v60);
  uint64_t v63 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v59 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v57 - v9;
  __chkstk_darwin(v8);
  NSString v62 = (char *)&v57 - v10;
  uint64_t TrackingTip = type metadata accessor for TrainingLoadTrackingTip();
  __chkstk_darwin(TrackingTip - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v69 = (char *)&v57 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  id v68 = (char *)&v57 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v67 = (char *)&v57 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v57 - v23;
  uint64_t v25 = type metadata accessor for CustomizeSummaryTip();
  __chkstk_darwin(v25 - 8);
  id v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a2;
  sub_1000B0528(a2 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  uint64_t v28 = sub_1000B7550((unint64_t *)&unk_100955610, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(a2) = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v29 = (char *)(v14 + 8);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v27, v13);
  uint64_t v64 = v14;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v32 = a1;
  v31(v24, a1, v13);
  if (a2)
  {
    v30(v24, v13);
    char v33 = v67;
    v31(v67, v32, v13);
LABEL_4:
    v30(v33, v13);
    unint64_t v36 = v68;
    v31(v68, v32, v13);
LABEL_5:
    v30(v36, v13);
    unint64_t v37 = v69;
    v31(v69, v32, v13);
    goto LABEL_6;
  }
  uint64_t v34 = v65;
  sub_1000B0528(v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip, v65, (uint64_t (*)(void))type metadata accessor for TrainingLoadTrackingTip);
  char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
  v30(v24, v13);
  v30((char *)v34, v13);
  char v33 = v67;
  v31(v67, v32, v13);
  if (v35) {
    goto LABEL_4;
  }
  char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
  v30(v33, v13);
  unint64_t v36 = v68;
  v31(v68, v32, v13);
  if (v40) {
    goto LABEL_5;
  }
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  v30(v36, v13);
  unint64_t v37 = v69;
  v31(v69, v32, v13);
  if ((v41 & 1) == 0)
  {
    id v67 = v29;
    id v68 = (char *)v30;
    uint64_t v65 = v28;
    uint64_t v42 = (uint64_t)v62;
    v31(v62, (uint64_t)v37, v13);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v43(v42, 0, 1, v13);
    uint64_t v44 = *(void *)(*(void *)(v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                    + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
    if (*(void *)(v44 + 16))
    {
      sub_10008E75C(v44 + 32, (uint64_t)v70);
      uint64_t v45 = v71;
      uint64_t v46 = v72;
      sub_10007E4EC(v70, v71);
      uint64_t v47 = (uint64_t)v61;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
      v43(v47, 0, 1, v13);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v70);
    }
    else
    {
      uint64_t v47 = (uint64_t)v61;
      v43((uint64_t)v61, 1, 1, v13);
    }
    uint64_t v48 = v63;
    uint64_t v49 = v63 + *(int *)(v60 + 48);
    sub_1000AEF2C(v42, v63, (uint64_t *)&unk_1009555F0);
    sub_1000AEF2C(v47, v49, (uint64_t *)&unk_1009555F0);
    uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v50(v48, 1, v13) == 1)
    {
      sub_10008DB18(v47, (uint64_t *)&unk_1009555F0);
      sub_10008DB18(v42, (uint64_t *)&unk_1009555F0);
      ((void (*)(char *, uint64_t))v68)(v37, v13);
      if (v50(v49, 1, v13) == 1)
      {
        sub_10008DB18(v48, (uint64_t *)&unk_1009555F0);
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v51 = v59;
      sub_1000AEF2C(v48, v59, (uint64_t *)&unk_1009555F0);
      if (v50(v49, 1, v13) != 1)
      {
        uint64_t v53 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v58, v49, v13);
        char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v55 = v53;
        uint64_t v56 = (void (*)(char *, uint64_t))v68;
        ((void (*)(char *, uint64_t))v68)(v55, v13);
        sub_10008DB18(v47, (uint64_t *)&unk_1009555F0);
        sub_10008DB18(v42, (uint64_t *)&unk_1009555F0);
        v56(v37, v13);
        v56((char *)v51, v13);
        sub_10008DB18(v48, (uint64_t *)&unk_1009555F0);
        char v38 = v54 ^ 1;
        return v38 & 1;
      }
      sub_10008DB18(v47, (uint64_t *)&unk_1009555F0);
      sub_10008DB18(v42, (uint64_t *)&unk_1009555F0);
      uint64_t v52 = (void (*)(uint64_t, uint64_t))v68;
      ((void (*)(char *, uint64_t))v68)(v37, v13);
      v52(v51, v13);
    }
    sub_10008DB18(v48, (uint64_t *)&unk_10095B870);
    char v38 = 1;
    return v38 & 1;
  }
LABEL_6:
  v30(v37, v13);
LABEL_7:
  char v38 = 0;
  return v38 & 1;
}

void sub_1004D6C84()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F650);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    sub_1000AFA94((uint64_t *)&unk_10095F658);
    NSDiffableDataSourceTransaction.finalSnapshot.getter();
    uint64_t v6 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v7 = *(id *)&v5[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
    sub_10044B598(v6);

    swift_bridgeObjectRelease();
  }
}

void sub_1004D6DCC()
{
  uint64_t v0 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - v9 + 16;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = *(void **)(*(void *)(Strong
                               + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                   + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory);
    uint64_t v27 = 0;
    memset(v26, 0, sizeof(v26));
    id v14 = v13;
    sub_100688178(1, 0, 3u, 1, (uint64_t)v26, 0, v14, (uint64_t)&v24);
    sub_10008DB18((uint64_t)v26, &qword_10094CEF0);
    if (v25)
    {
      sub_100093E60(&v24, (uint64_t)v26);

      sub_10008E75C((uint64_t)v26, (uint64_t)&v24);
      uint64_t v23 = 0;
      memset(v22, 0, sizeof(v22));
      swift_beginAccess();
      sub_1006A9D64(0, (uint64_t)&v24, (uint64_t)v22);
      sub_10008DB18((uint64_t)v22, &qword_10094CEF0);
      sub_10008DB18((uint64_t)&v24, &qword_10094CEF0);
      sub_100448CB4((uint64_t)v26, 0, 1);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v26);
    }
    else
    {
      sub_10008DB18((uint64_t)&v24, &qword_10094CEF0);
    }
    static WOLog.trainingLoad.getter();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Added Training Load Card in Summary", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Tips.InvalidationReason.actionPerformed(_:), v0);
    type metadata accessor for TrainingLoadTrackingTip();
    sub_1000B7550(&qword_10095F6B0, (void (*)(uint64_t))type metadata accessor for TrainingLoadTrackingTip);
    Tip.invalidate(reason:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1004D5E40();
  }
  else
  {
    static WOLog.trainingLoad.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No self after returning from Training Load Onboarding Flow", v17, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

ValueMetadata *type metadata accessor for ActivityDashboardViewController.InitialPresentation()
{
  return &type metadata for ActivityDashboardViewController.InitialPresentation;
}

unsigned char *storeEnumTagSinglePayload for ActivityDashboardViewController.Visibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D75DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardViewController.Visibility()
{
  return &type metadata for ActivityDashboardViewController.Visibility;
}

unint64_t sub_1004D7618()
{
  unint64_t result = qword_10095F618[0];
  if (!qword_10095F618[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10095F618);
  }
  return result;
}

uint64_t sub_1004D7670@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker);
  a1[3] = type metadata accessor for ActivityDashboardImpressionsTracker();
  a1[4] = sub_1000B7550(&qword_10095B7C0, (void (*)(uint64_t))type metadata accessor for ActivityDashboardImpressionsTracker);
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_1004D76FC()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095F630);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = enum case for MetricPageCategory.summary(_:);
  uint64_t v7 = type metadata accessor for MetricPageCategory();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)();
}

uint64_t sub_1004D78B4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1004D78FC()
{
  return swift_unknownObjectRetain();
}

uint64_t (*sub_1004D7948())()
{
  return j__swift_endAccess;
}

uint64_t sub_1004D79A4()
{
  swift_getWitnessTable();

  return MetricResignActiveObserving<>.addResignActiveObserver()();
}

uint64_t sub_1004D7A08()
{
  swift_getWitnessTable();

  return MetricResignActiveObserving<>.removeResignActiveObserver()();
}

double sub_1004D7A6C()
{
  return 2.5;
}

void *sub_1004D7A80()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t (*sub_1004D7AD0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004D7B2C()
{
  return swift_retain();
}

uint64_t sub_1004D7B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10005DB5C;
  return MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)(a1, a2, a3);
}

uint64_t sub_1004D7BEC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1004D7BFC(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1004D7C80(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v105 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v8 = __chkstk_darwin(v105);
  uint64_t v106 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v102 - v10);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v111 = *(void *)(v113 - 8);
  uint64_t v12 = __chkstk_darwin(v113);
  Class v112 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v102 - v14;
  v124[3] = a3;
  v124[4] = a4;
  os_log_type_t v16 = sub_1000B1710(v124);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v16, a1, a3);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t (**)(void)))(a4 + 16);
  id v114 = v16;
  uint64_t v115 = a3;
  uint64_t v116 = (uint64_t (**)(void))a4;
  uint64_t v108 = a4 + 16;
  uint64_t v107 = v17;
  uint64_t v18 = v17(a3, (uint64_t (**)(void))a4);
  uint64_t v20 = v19;
  char v22 = v21;
  int v23 = sub_10007CCD8(v18, v19, v21);
  sub_1000917F8(v18, v20, v22);
  long long v24 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v25 = sub_100447F34(v23);
  if (*(void *)(v25 + 16) && (unint64_t v26 = sub_1000D5C14(v23), (v27 & 1) != 0))
  {
    uint64_t v28 = *(void **)(*(void *)(v25 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v109 = v24;
  unint64_t v29 = *(char **)&v24[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v30 = *((void *)v29 + 2);
  if (v30)
  {
    id v104 = v28;
    uint64_t v31 = (uint64_t)(v29 + 32);
    NSString v103 = v29;
    swift_bridgeObjectRetain_n();
    uint64_t v32 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v31, (uint64_t)v121);
      uint64_t v33 = v122;
      uint64_t v34 = v123;
      sub_10007E4EC(v121, v122);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      switch(v37)
      {
        case 1:
          sub_1000917F8(v35, v36, 1);
LABEL_19:
          if (v23 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v23 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v121, (uint64_t)&v117);
          }
          else
          {
LABEL_20:
            uint64_t v119 = 0;
            long long v118 = 0u;
            long long v117 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v121);
          if (*((void *)&v118 + 1))
          {
            sub_100093E60(&v117, (uint64_t)v120);
            sub_100093E60(v120, (uint64_t)&v117);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_10009569C(0, v32[2] + 1, 1, v32);
            }
            unint64_t v39 = v32[2];
            unint64_t v38 = v32[3];
            if (v39 >= v38 >> 1) {
              uint64_t v32 = sub_10009569C((void *)(v38 > 1), v39 + 1, 1, v32);
            }
            void v32[2] = v39 + 1;
            sub_100093E60(&v117, (uint64_t)&v32[5 * v39 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v117, &qword_10094CEF0);
          }
          v31 += 40;
          if (--v30) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          uint64_t v28 = v104;
          break;
        case 3:
          switch(v35)
          {
            case 1:
              if (v23 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v23 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v23 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v23 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v23 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!(_BYTE)v23) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v35)
          {
            case 2:
            case 3:
              if (v23 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v23 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v23 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v23 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v23 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v23 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v23 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v23 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v23 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v23 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
  }
  v121[0] = (uint64_t)v28;
  sub_1001E3F18((uint64_t)v32);
  char v40 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v121, v40);
  swift_bridgeObjectRelease();

  uint64_t v41 = *(void *)(v121[0] + 16);
  if (!v41)
  {
LABEL_62:
    swift_release();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    char v54 = HKLogActivity;
    sub_10008E75C((uint64_t)v124, (uint64_t)v121);
    if (os_log_type_enabled(v54, v53))
    {
      char v55 = v54;
      uint64_t v56 = swift_slowAlloc();
      *(void *)&v120[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v57 = _typeName(_:qualified:)();
      *(void *)&long long v117 = sub_10008F1F4(v57, v58, (uint64_t *)v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      sub_10007E4EC(v121, v122);
      uint64_t v59 = v116[5](v115);
      *(void *)&long long v117 = sub_10008F1F4(v59, v60, (uint64_t *)v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v121);
      _os_log_impl((void *)&_mh_execute_header, v55, v53, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v121);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v124);
  }
  NSString v103 = v40;
  id v104 = a2;
  id v102 = v11;
  uint64_t v42 = (void *)(v121[0] + 32);
  uint64_t v43 = v116[1];
  uint64_t v44 = (void (**)(char *, uint64_t))(v111 + 8);
  uint64_t v111 = v121[0];
  swift_retain();
  uint64_t v45 = 0;
  while (1)
  {
    uint64_t v46 = v42[3];
    uint64_t v47 = v42[4];
    sub_10007E4EC(v42, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    uint64_t v48 = v112;
    ((void (*)(uint64_t, uint64_t (**)(void)))v43)(v115, v116);
    char v49 = static UUID.== infix(_:_:)();
    uint64_t v50 = *v44;
    uint64_t v51 = v48;
    uint64_t v52 = (void *)v113;
    (*v44)(v51, v113);
    v50(v15, (uint64_t)v52);
    if (v49) {
      break;
    }
    ++v45;
    v42 += 5;
    if (v41 == v45)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  uint64_t v61 = v107(v115, v116);
  uint64_t v63 = v62;
  char v65 = v64;
  int v66 = sub_10007CCD8(v61, v62, v64);
  sub_1000917F8(v61, v63, v65);
  sub_10008E75C((uint64_t)v124, (uint64_t)v121);
  id v67 = *(void **)&v103[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  uint64_t v116 = (uint64_t (**)(void))v109;
  id v68 = v67;
  id v69 = v104;
  id v70 = [v104 view];
  if (!v70)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v52 = v70;
  id v71 = [v70 window];

  if (v71)
  {
    [v71 bounds];
    uint64_t v73 = v72;
  }
  else
  {
    uint64_t v73 = 0;
  }
  id v74 = [v69 view];
  if (!v74)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x1004D898CLL);
  }
  double v75 = v74;
  id v76 = [v74 window];

  LODWORD(v115) = v66;
  id v114 = v68;
  if (v76)
  {
    [v76 bounds];
    uint64_t v78 = v77;
  }
  else
  {
    uint64_t v78 = 0;
  }
  LODWORD(v113) = v76 == 0;
  LODWORD(v112) = v71 == 0;
  uint64_t v79 = swift_allocObject();
  id v80 = v104;
  *(void *)(v79 + 16) = v104;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v82 = (uint64_t)v102;
  *id v102 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v83 = (int *)v105;
  uint64_t v84 = *(int *)(v105 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v85 = swift_allocObject();
  *(unsigned char *)(v85 + 16) = 1;
  *(void *)(v85 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v86 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v82 + v84) = v85;
  *(void *)(v85 + 32) = v86;
  uint64_t v87 = v82 + v83[15];
  uint64_t v88 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v89 = type metadata accessor for DynamicTypeSize();
  id v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 104);
  v90(v87, v88, v89);
  v90(v82 + v83[16], enum case for DynamicTypeSize.xLarge(_:), v89);
  *(unsigned char *)(v82 + v83[5]) = v115;
  sub_1000AEEC8((uint64_t)v121, v82 + v83[6], &qword_10094CEF0);
  *(void *)(v82 + v83[7]) = v111;
  *(void *)(v82 + v83[8]) = v116;
  *(void *)(v82 + v83[9]) = v114;
  uint64_t v91 = v82 + v83[11];
  *(void *)uint64_t v91 = v73;
  *(unsigned char *)(v91 + 8) = (_BYTE)v112;
  uint64_t v92 = v82 + v83[12];
  *(void *)uint64_t v92 = v78;
  *(unsigned char *)(v92 + 8) = v113;
  id v93 = (id (**)())(v82 + v83[13]);
  char *v93 = sub_100428F6C;
  v93[1] = (id (*)())v79;
  uint64_t v94 = (void *)(v82 + v83[14]);
  *uint64_t v94 = v45;
  v94[1] = 0;
  sub_1000B0528(v82, v106, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v95 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v96 = v80;
  NSString v97 = (void *)UIHostingController.init(rootView:)();
  id v98 = [v97 presentationController];
  if (v98)
  {
    NSDictionary v99 = v98;
    self;
    uint64_t v100 = (void *)swift_dynamicCastObjCClass();
    if (v100) {
      [v100 setPrefersGrabberVisible:1];
    }
  }
  [v96 presentViewController:v97 animated:1 completion:0];

  sub_1000C98F0(v82, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v124);
}

void sub_1004D8A58()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_paletteBannerInsets];
  *uint64_t v1 = xmmword_1007687B0;
  v1[1] = xmmword_1007687B0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker;
  type metadata accessor for ActivityDashboardImpressionsTracker();
  uint64_t v3 = (void *)swift_allocObject();
  type metadata accessor for BasicImpressionsTracker();
  v3[2] = BasicImpressionsTracker.__allocating_init(threshold:)();
  v3[3] = &protocol witness table for BasicImpressionsTracker;
  v3[4] = 0;
  unint64_t v4 = sub_1000DFC54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController] = 0;
  v3[5] = v4;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache;
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 1;
  *(void *)(v6 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v6 + 32) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[v5] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIButton) init];
  UUID.init()();
  UUID.init()();
  v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton;
  type metadata accessor for AccountButton();
  *(void *)&v0[v10] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  UUID.init()();
  UUID.init()();
  uint64_t v11 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardTipReuseIdentifier];
  *uint64_t v11 = 0xD00000000000001ELL;
  v11[1] = 0x80000001007CC4B0;
  v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver] = 0;
  uint64_t v12 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_ringCardIndex] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004D8D0C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004D8D44(uint64_t a1)
{
  return sub_1004D63E8(a1, *(void *)(v1 + 16));
}

void sub_1004D8D4C()
{
}

void sub_1004D8D54()
{
}

id sub_1004D8D5C()
{
  return sub_1004D6100();
}

void sub_1004D8D64()
{
}

uint64_t sub_1004D8D74()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for OSSignposter();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

void sub_1004D8EB0(char a1)
{
  sub_1004D5240(a1, *(void **)(v1 + 16));
}

uint64_t sub_1004D8EB8()
{
  return swift_deallocObject();
}

void sub_1004D8EF0()
{
  sub_1004D5328(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1004D8EFC()
{
  return swift_deallocObject();
}

uint64_t sub_1004D8F34()
{
  return sub_1004D4F2C(*(void *)(v0 + 16));
}

uint64_t sub_1004D8F3C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1004D8F7C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004D8FB4()
{
}

void sub_1004D8FBC()
{
}

void sub_1004D8FC4()
{
}

void *sub_1004D8FE0()
{
  return sub_1004D30EC();
}

id sub_1004D8FE8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1004D901C(double *a1, id *a2)
{
  return [*a2 setContentSize:*a1 a1[1]];
}

void sub_1004D9030(uint64_t a1, uint64_t a2)
{
  sub_1005384A4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1004D9088()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1004D90BC(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_1009981B8);
}

uint64_t sub_1004D90E0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F980);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1000AFA94(&qword_10095F978);
  sub_1000258C4(v1, qword_1009981D0);
  sub_1000876DC(v1, (uint64_t)qword_1009981D0);
  sub_1003CF038();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001007CC680;
  v2._countAndFlagsBits = 0xD000000000000014;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_10095F970);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_1004D9230@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094ADA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_10095F978);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009981D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1004D92E0()
{
  unint64_t result = qword_10095F830;
  if (!qword_10095F830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F830);
  }
  return result;
}

unint64_t sub_1004D9338()
{
  unint64_t result = qword_10095F838;
  if (!qword_10095F838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F838);
  }
  return result;
}

uint64_t sub_1004D938C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004D93A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094AD98, (uint64_t)qword_1009981B8, a1);
}

uint64_t sub_1004D93CC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F960);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10095F968);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x206E65704FLL;
  v2._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_10095F970);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1004D954C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1004DC770();
  *uint64_t v4 = v2;
  v4[1] = sub_1004747D8;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_1004D95F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004DBB0C();
  *a1 = result;
  return result;
}

uint64_t sub_1004D9620(uint64_t a1)
{
  unint64_t v2 = sub_1003CF038();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1004D9660()
{
  unint64_t result = qword_10095F848;
  if (!qword_10095F848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F848);
  }
  return result;
}

uint64_t sub_1004D96B8(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_1009981E8);
}

double sub_1004D96DC@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1004D9718(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  swift_retain();
  id v2 = v1;
  IntentParameter.wrappedValue.setter();

  return swift_release();
}

uint64_t sub_1004D9778(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1004DC674();
  unint64_t v5 = sub_10021B6BC();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_1004D97E4()
{
  unint64_t result = qword_10095F858;
  if (!qword_10095F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F858);
  }
  return result;
}

unint64_t sub_1004D983C()
{
  unint64_t result = qword_10095F860;
  if (!qword_10095F860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F860);
  }
  return result;
}

uint64_t sub_1004D9890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004DAACC(a1, a2, a3, (void (*)(void))sub_1003CF08C);
}

uint64_t sub_1004D98A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094ADA8, (uint64_t)qword_1009981E8, a1);
}

uint64_t sub_1004D98CC(uint64_t a1)
{
  unint64_t v2 = sub_1004DC674();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1004D9908(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1004DC674();
  unint64_t v6 = sub_1004DC6C8();
  unint64_t v7 = sub_10021B6BC();
  *unint64_t v4 = v2;
  v4[1] = sub_1001A15A8;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1004D99D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004DBE1C();
  *a1 = result;
  return result;
}

uint64_t sub_1004D99FC(uint64_t a1)
{
  unint64_t v2 = sub_1003CF08C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1004D9A40()
{
  unint64_t result = qword_10095F870;
  if (!qword_10095F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F870);
  }
  return result;
}

unint64_t sub_1004D9A98()
{
  unint64_t result = qword_10095F878;
  if (!qword_10095F878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F878);
  }
  return result;
}

uint64_t sub_1004D9AEC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1004D9B20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004D9B3C(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100998200);
}

uint64_t sub_1004D9B68(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  type metadata accessor for LocalizedStringResource();
  v2[9] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentDialog();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004D9CE4, v5, v4);
}

void sub_1004D9CE4()
{
  swift_release();
  if (qword_10094ADC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005107C0(0xD00000000000001ALL, 0x80000001007CC5C0);
  if (!v1)
  {
    sub_1004DC47C();
    swift_allocError();
    unsigned char *v13 = 0;
    swift_willThrow();
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v21 = *(void (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  unint64_t v2 = v1;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned char *)(v0 + 128) & 1) == 0)
  {
    id v14 = [v2 progress];
    if (!v14)
    {
LABEL_18:
      uint64_t v22 = *(void *)(v0 + 88);
      uint64_t v23 = *(void *)(v0 + 96);
      uint64_t v24 = *(void *)(v0 + 80);
      *(void *)(v0 + 32) = *(void *)(v0 + 64);
      LocalizedStringResource.init(stringLiteral:)();
      IntentDialog.init(_:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
      *(void *)(swift_allocObject() + 16) = v2;
      type metadata accessor for AppIntentError();
      sub_1004DC59C();
      swift_allocError();
      sub_1004DC5F4();
      id v25 = v2;
      ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
      swift_release();
      sub_10008DB18(v24, &qword_10094D320);
      swift_willThrow();

      goto LABEL_19;
    }
    uint64_t v15 = v14;
    id v16 = [self countUnit];
    [v15 doubleValueForUnit:v16];
    double v18 = v17;

    if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
    {
      if (v18 > -9.22337204e18)
      {
        if (v18 < 9.22337204e18)
        {
          uint64_t v9 = *(void *)(v0 + 104);
          uint64_t v10 = *(void *)(v0 + 88);
          uint64_t v11 = *(void *)(v0 + 96);
          *(void *)(v0 + 40) = (uint64_t)v18;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v19._countAndFlagsBits = 0xD00000000000001CLL;
          v19._object = (void *)0x80000001007CC600;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
          *(void *)(v0 + 48) = (uint64_t)v18;
          goto LABEL_17;
        }
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v3 = [v2 relevantEarnedInstance];
  if (!v3) {
    goto LABEL_18;
  }
  uint64_t v4 = v3;
  id v5 = [v3 value];

  if (!v5) {
    goto LABEL_18;
  }
  id v6 = [self countUnit];
  [v5 doubleValueForUnit:v6];
  double v8 = v7;

  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 96);
  *(void *)(v0 + 16) = (uint64_t)v8;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD00000000000001DLL;
  v12._object = (void *)0x80000001007CC5E0;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  *(void *)(v0 + 24) = (uint64_t)v8;
LABEL_17:
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v20._countAndFlagsBits = 0x7379616420;
  v20._object = (void *)0xE500000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  IntentDialog.init(stringInterpolation:)();
  sub_100312408();
  static IntentResult.result<A>(value:dialog:)();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v21 = *(void (**)(void))(v0 + 8);
LABEL_20:
  v21();
}

uint64_t sub_1004DA208(uint64_t a1)
{
  v1[4] = a1;
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v1[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v4;
  v1[12] = v3;
  return _swift_task_switch(sub_1004DA358, v4, v3);
}

uint64_t sub_1004DA358()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v2 = v1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v3 = EntityProperty<>.init(title:)();
  *(void *)(v0 + 104) = v3;
  id v4 = v2;
  *(unsigned char *)(v0 + 120) = [v4 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v4;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  unint64_t v6 = sub_10021B6BC();
  void *v5 = v0;
  v5[1] = sub_1004DA48C;
  uint64_t v7 = *(void *)(v0 + 40);
  return URLRepresentableEntity.urlRepresentation.getter(v7, &type metadata for AwardEntity, v6);
}

uint64_t sub_1004DA48C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_1004DA5AC, v3, v2);
}

uint64_t sub_1004DA5AC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    id v4 = (void *)v0[4];
    uint64_t v5 = v0[5];
    swift_release();

    sub_10008DB18(v5, (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[7] + 32))(v0[8], v0[5], v0[6]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v8 = v0[6];
    uint64_t v9 = (void *)v0[4];
    sub_100539564(v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1004DA718@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094ADB0, (uint64_t)qword_100998200, a1);
}

uint64_t sub_1004DA73C()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F920);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10095F928);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 544499015;
  v2._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_10095F930);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x74732065766F6D20;
  v3._object = (void *)0xEC0000006B616572;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1004DA8CC(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return sub_1004D9B68(a1, v4);
}

uint64_t sub_1004DA96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004DC118();
  *a1 = result;
  return result;
}

uint64_t sub_1004DA994(uint64_t a1)
{
  unint64_t v2 = sub_1003CF0E0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1004DA9D4()
{
  unint64_t result = qword_10095F888;
  if (!qword_10095F888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F888);
  }
  return result;
}

unint64_t sub_1004DAA2C()
{
  unint64_t result = qword_10095F890;
  if (!qword_10095F890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F890);
  }
  return result;
}

uint64_t sub_1004DAA80()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1004DAAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004DAACC(a1, a2, a3, (void (*)(void))sub_1003CF134);
}

uint64_t sub_1004DAACC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004DAB20(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100998218);
}

uint64_t sub_1004DAB44(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v2 = type metadata accessor for IntentDialog();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v1[12] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v1[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for DispatchTimeInterval();
  v1[20] = v4;
  v1[21] = *(void *)(v4 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DispatchTime();
  v1[23] = v5;
  v1[24] = *(void *)(v5 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AAUIAwardsDataProviderSection();
  v1[27] = v6;
  v1[28] = *(void *)(v6 - 8);
  v1[29] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[30] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[31] = v8;
  v1[32] = v7;
  return _swift_task_switch(sub_1004DAE60, v8, v7);
}

uint64_t sub_1004DAE60()
{
  if (qword_10094ADC8 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v34 = *(void *)(v0 + 232);
  uint64_t v35 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(void **)(v0 + 176);
  uint64_t v33 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v8 = qword_100998230;
  (*(void (**)(void))(v1 + 104))();
  static DispatchTime.now()();
  void *v5 = 3;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v7);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v4, v33);
  OS_dispatch_group.wait(timeout:)();
  v9(v2, v33);
  sub_10007E4EC((void *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), *(void *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24));
  unint64_t v10 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v34, v35);
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_4;
    }
LABEL_11:
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 104);
    swift_release();
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v0 + 288) = 5;
    sub_1004DBAB8();
    URLRepresentableEnum.urlRepresentation.getter();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
    {
      sub_10008DB18(*(void *)(v0 + 104), (uint64_t *)&unk_10094B790);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 104), *(void *)(v0 + 120));
      if (qword_10094AE38 != -1) {
        swift_once();
      }
      uint64_t v20 = *(void *)(v0 + 128);
      uint64_t v19 = *(void *)(v0 + 136);
      uint64_t v21 = *(void *)(v0 + 120);
      sub_100539564(v19);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v24 = *(void *)(v0 + 72);
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 16) = 0;
    IntentDialog.init(stringLiteral:)();
    sub_1000AFA94(&qword_1009505C8);
    sub_10021B710();
    static IntentResult.result<A>(value:dialog:)();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  if (!v11) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v12 = 0;
  while (1)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(v10 + 8 * v12 + 32);
    }
    id v14 = v13;
    *(void *)(v0 + 264) = v13;
    uint64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if ([v13 unearned]) {
      break;
    }

    ++v12;
    if (v15 == v11) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease_n();
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v27 = v14;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = EntityProperty<>.init(title:)();
  *(void *)(v0 + 272) = v28;
  id v29 = v27;
  swift_retain();
  *(unsigned char *)(v0 + 289) = [v29 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();
  swift_release();

  *(void *)(v0 + 32) = v28;
  *(void *)(v0 + 40) = v29;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v30;
  unint64_t v31 = sub_10021B6BC();
  void *v30 = v0;
  v30[1] = sub_1004DB3F0;
  uint64_t v32 = *(void *)(v0 + 112);
  return URLRepresentableEntity.urlRepresentation.getter(v32, &type metadata for AwardEntity, v31);
}

uint64_t sub_1004DB3F0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 248);
  return _swift_task_switch(sub_1004DB510, v3, v2);
}

uint64_t sub_1004DB510()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_10008DB18(*(void *)(v0 + 112), (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 112), *(void *)(v0 + 120));
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 128);
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  uint64_t v7 = *(void **)(v0 + 264);
  *(void *)(v0 + 48) = *(void *)(v0 + 272);
  *(void *)(v0 + 56) = v7;
  id v8 = v7;
  swift_retain();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x3A7478654E207055;
  v9._object = (void *)0xE900000000000020;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  id v10 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
  id v11 = [v10 titleForAchievement:v8];

  if (v11)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v14 = v13;
  }
  else
  {
    uint64_t v12 = sub_100059FF4(*(void **)(v0 + 264));
    id v14 = v15;
  }
  uint64_t v16 = *(void **)(v0 + 264);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 72);
  uint64_t v19 = *(void *)(v0 + 80);
  v20._countAndFlagsBits = v12;
  v20._object = v14;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  IntentDialog.init(stringInterpolation:)();
  sub_1000AFA94(&qword_1009505C8);
  sub_10021B710();
  static IntentResult.result<A>(value:dialog:)();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  sub_10021B784(*(void *)(v0 + 48), *(void **)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1004DB818@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094ADB8, (uint64_t)qword_100998218, a1);
}

uint64_t sub_1004DB83C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1000DBD6C;
  return sub_1004DAB44(a1);
}

uint64_t sub_1004DB8D4(uint64_t a1)
{
  unint64_t v2 = sub_1003CF134();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for NextLimitedEditionAwardIntent()
{
  return &type metadata for NextLimitedEditionAwardIntent;
}

ValueMetadata *type metadata accessor for MoveStreakIntent()
{
  return &type metadata for MoveStreakIntent;
}

ValueMetadata *type metadata accessor for OpenAwardIntent()
{
  return &type metadata for OpenAwardIntent;
}

ValueMetadata *type metadata accessor for OpenTrophyCaseIntent()
{
  return &type metadata for OpenTrophyCaseIntent;
}

uint64_t sub_1004DB950()
{
  return sub_1000A132C(&qword_100950598, &qword_1009505A0);
}

uint64_t sub_1004DB98C()
{
  return sub_1000A132C(&qword_1009505A8, &qword_1009505A0);
}

uint64_t sub_1004DB9C8()
{
  return sub_1000A132C(&qword_10095F8A0, &qword_10095F8A8);
}

uint64_t sub_1004DBA04()
{
  return sub_1000A132C(&qword_10095F8B0, &qword_10095F8B8);
}

uint64_t sub_1004DBA40()
{
  return sub_1000A132C(&qword_10095F8C0, &qword_10095F8B8);
}

uint64_t sub_1004DBA7C()
{
  return sub_1000A132C(&qword_10095F8C8, &qword_10095F8D0);
}

unint64_t sub_1004DBAB8()
{
  unint64_t result = qword_10095F8E0;
  if (!qword_10095F8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F8E0);
  }
  return result;
}

uint64_t sub_1004DBB0C()
{
  uint64_t v17 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_10095F948);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_1004DC71C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_1004DBE1C()
{
  uint64_t v18 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_1009505B0);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v18);
  sub_1000818CC();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1004DC118()
{
  uint64_t v17 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_10095F8E8);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_1004DC428();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

unint64_t sub_1004DC428()
{
  unint64_t result = qword_10095F8F0;
  if (!qword_10095F8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095F8F0);
  }
  return result;
}

unint64_t sub_1004DC47C()
{
  unint64_t result = qword_10095F900;
  if (!qword_10095F900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10095F900);
  }
  return result;
}

uint64_t sub_1004DC4D0()
{
  return swift_deallocObject();
}

uint64_t sub_1004DC508()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10005DB5C;
  return sub_1004DA208(v2);
}

unint64_t sub_1004DC59C()
{
  unint64_t result = qword_100956960;
  if (!qword_100956960)
  {
    type metadata accessor for AppIntentError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956960);
  }
  return result;
}

unint64_t sub_1004DC5F4()
{
  unint64_t result = qword_10095F918;
  if (!qword_10095F918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F918);
  }
  return result;
}

uint64_t sub_1004DC648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1004DC674()
{
  unint64_t result = qword_10095F938;
  if (!qword_10095F938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F938);
  }
  return result;
}

unint64_t sub_1004DC6C8()
{
  unint64_t result = qword_10095F940;
  if (!qword_10095F940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F940);
  }
  return result;
}

unint64_t sub_1004DC71C()
{
  unint64_t result = qword_10095F950;
  if (!qword_10095F950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F950);
  }
  return result;
}

unint64_t sub_1004DC770()
{
  unint64_t result = qword_10095F958;
  if (!qword_10095F958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F958);
  }
  return result;
}

uint64_t sub_1004DC7C8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 208);
  *(_OWORD *)(a9 + 192) = *(_OWORD *)(v13 + 192);
  *(_OWORD *)(a9 + 208) = v24;
  *(void *)(a9 + 224) = *(void *)(v13 + 224);
  long long v25 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v25;
  long long v26 = *(_OWORD *)(v13 + 176);
  *(_OWORD *)(a9 + 160) = *(_OWORD *)(v13 + 160);
  *(_OWORD *)(a9 + 176) = v26;
  long long v27 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v27;
  long long v28 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v28;
  long long v29 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v29;
  long long v30 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v30;
  *(_OWORD *)(a9 + 296) = v36;
  *(_OWORD *)(a9 + 312) = v37;
  *(_OWORD *)(a9 + 328) = v38;
  *(_OWORD *)(a9 + 232) = v32;
  *(_OWORD *)(a9 + 248) = v33;
  *(_OWORD *)(a9 + 264) = v34;
  *(_OWORD *)(a9 + 280) = v35;

  return sub_10050B3FC(v13);
}

double sub_1004DC9B8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100950958, &qword_100950960).n128_u64[0];
  return result;
}

double sub_1004DCA14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009513A8, &qword_1009513B0).n128_u64[0];
  return result;
}

double sub_1004DCA70@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009531F8, &qword_100953200).n128_u64[0];
  return result;
}

double sub_1004DCACC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100953220, &qword_100953228).n128_u64[0];
  return result;
}

double sub_1004DCB28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100291348(v13, a9);
  *(_OWORD *)(a9 + 136) = v28;
  *(_OWORD *)(a9 + 152) = v29;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  double result = *(double *)&v25;
  *(_OWORD *)(a9 + 88) = v25;
  *(_OWORD *)(a9 + 104) = v26;
  *(_OWORD *)(a9 + 120) = v27;
  return result;
}

uint64_t sub_1004DCCD8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(_DWORD *)(a9 + 64) = *(_DWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;

  return sub_10050B53C(v13);
}

uint64_t sub_1004DCEA4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20)
{
  uint64_t v22 = a16;
  uint64_t v21 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v21 = a17;
    uint64_t v22 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = v22;
  *(void *)(a9 + 8) = v21;
  *(unsigned char *)(a9 + 16) = a18 & 1;
  *(unsigned char *)(a9 + 17) = a19 & 1;
  *(void *)(a9 + 24) = a20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  swift_retain();

  return swift_retain();
}

double sub_1004DD094@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100954308, &qword_1009542F0).n128_u64[0];
  return result;
}

double sub_1004DD0F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10094BFB8, &qword_1009542D0).n128_u64[0];
  return result;
}

uint64_t sub_1004DD14C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;

  return sub_10050A5E0((uint64_t)v13);
}

id sub_1004DD314@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *a19)
{
  char v20 = a18;
  uint64_t v21 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v30 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v21 = a16;
    char v20 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = v21;
  *(void *)(a9 + 8) = a17;
  *(unsigned char *)(a9 + 16) = v20 & 1;
  *(void *)(a9 + 24) = a19;
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v37;
  *(_OWORD *)(a9 + 128) = v38;
  *(_OWORD *)(a9 + 32) = v32;
  *(_OWORD *)(a9 + 48) = v33;
  *(_OWORD *)(a9 + 64) = v34;
  *(_OWORD *)(a9 + 80) = v35;

  return a19;
}

double sub_1004DD4F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100956318, &qword_100956320).n128_u64[0];
  return result;
}

double sub_1004DD554@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009562C8, &qword_1009562D0).n128_u64[0];
  return result;
}

uint64_t sub_1004DD5B0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(unsigned char *)(a9 + 112) = *(unsigned char *)(v13 + 112);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 152) = v30;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 120) = v28;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 200) = v33;
  *(_OWORD *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 168) = v31;
  return sub_100316E5C(v13);
}

uint64_t sub_1004DD780@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v24;
  long long v25 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v25;
  long long v26 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  long long v28 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v28;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 264) = v36;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(v13 + 160);
  *(_OWORD *)(a9 + 200) = v32;
  return sub_100316E5C(v13);
}

double sub_1004DD95C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100957118, &qword_100957120).n128_u64[0];
  return result;
}

uint64_t sub_1004DD9B8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = *(void *)(v13 + 24);
  uint64_t v25 = *(void *)(v13 + 32);
  char v26 = *(unsigned char *)(v13 + 40) & 1;
  long long v27 = *(_OWORD *)(v13 + 16);
  *a9 = *(_OWORD *)v13;
  a9[1] = v27;
  long long v28 = *(_OWORD *)(v13 + 48);
  a9[2] = *(_OWORD *)(v13 + 32);
  a9[3] = v28;
  a9[9] = v35;
  a9[10] = v36;
  a9[4] = v30;
  a9[5] = v31;
  a9[7] = v33;
  a9[8] = v34;
  a9[6] = v32;
  sub_1000A1750(v24, v25, v26);
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1004DDB8C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(void *)(a9 + 80) = *(void *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;

  return sub_10050B374(v13);
}

double sub_1004DDD60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009597A0, &qword_1009597A8).n128_u64[0];
  return result;
}

double sub_1004DDDBC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095BCE0, &qword_10095BD30).n128_u64[0];
  return result;
}

double sub_1004DDE18@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095C368, &qword_10095C370).n128_u64[0];
  return result;
}

double sub_1004DDE74@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095CFF8, &qword_10095D000).n128_u64[0];
  return result;
}

double sub_1004DDED0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FFB0, &qword_10095FFB8).n128_u64[0];
  return result;
}

double sub_1004DDF2C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960078, &qword_100960080).n128_u64[0];
  return result;
}

uint64_t sub_1004DDF88@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[5];
  a9[4] = v13[4];
  a9[5] = v24;
  long long v25 = v13[7];
  a9[6] = v13[6];
  a9[7] = v25;
  long long v26 = v13[1];
  *a9 = *v13;
  a9[1] = v26;
  long long v27 = v13[3];
  a9[2] = v13[2];
  a9[3] = v27;
  a9[8] = v29;
  a9[9] = v30;
  a9[13] = v34;
  a9[14] = v35;
  a9[11] = v32;
  a9[12] = v33;
  a9[10] = v31;
  return sub_100008C44((uint64_t)v13);
}

uint64_t sub_1004DE144@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_10050B5E0((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_10050B63C((uint64_t)v39);
  sub_1001CE648((uint64_t)&v38);
  return sub_1001A91A8((uint64_t)&v34);
}

uint64_t sub_1004DE320@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[5];
  a9[4] = v13[4];
  a9[5] = v24;
  a9[6] = v13[6];
  *(_OWORD *)((char *)a9 + 106) = *(_OWORD *)((char *)v13 + 106);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  long long v26 = v13[3];
  a9[2] = v13[2];
  a9[3] = v26;
  a9[8] = v28;
  a9[9] = v29;
  a9[13] = v33;
  a9[14] = v34;
  a9[11] = v31;
  a9[12] = v32;
  a9[10] = v30;

  return sub_10050B6E8((uint64_t)v13);
}

double sub_1004DE4F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FFE8, &qword_10095FFF0).n128_u64[0];
  return result;
}

uint64_t sub_1004DE54C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v24;
  long long v25 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v25;
  long long v26 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  long long v28 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v28;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 264) = v36;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(v13 + 160);
  *(_OWORD *)(a9 + 200) = v32;

  return sub_10050B670(v13);
}

__n128 sub_1004DE734@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v22 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

double sub_1004DE8C0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FFD8, &qword_10095FFE0).n128_u64[0];
  return result;
}

uint64_t sub_1004DE91C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(_DWORD *)(a9 + 80) = *(_DWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;

  return sub_10050B4B0(v13);
}

double sub_1004DEAF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960028, &qword_100960030).n128_u64[0];
  return result;
}

uint64_t sub_1004DEB4C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(unsigned char *)(a9 + 96) = *(unsigned char *)(v13 + 96);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;

  return sub_10050B5A8(v13);
}

double sub_1004DED20@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960008, &qword_100960010).n128_u64[0];
  return result;
}

uint64_t sub_1004DED7C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_10050B5E0((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_10050B63C((uint64_t)v40);
  sub_1001CE648((uint64_t)&v39);
  return sub_1001A91A8((uint64_t)&v35);
}

double sub_1004DEF64@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960068, &qword_100960070).n128_u64[0];
  return result;
}

uint64_t sub_1004DEFC0()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1004DEFE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t sub_1004DF0B0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a5 = v11;
  *(void *)(a5 + 8) = v12;
  *(unsigned char *)(a5 + 16) = v11;
  *(void *)(a5 + 24) = v12;
  *(unsigned char *)(a5 + 32) = v11;
  *(void *)(a5 + 40) = v12;
  *(void *)(a5 + 48) = a1;
  *(unsigned char *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(void *)(a5 + 72) = a4;
  return result;
}

uint64_t sub_1004DF184@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1004DF22C()
{
  return swift_release();
}

uint64_t sub_1004DF2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = sub_1000AFA94(&qword_10094F3C8);
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StandardArtworkDescriptor();
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  type metadata accessor for ArtworkDescriptor();
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Artwork();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for CatalogLockup();
  v5[24] = v9;
  v5[25] = *(void *)(v9 - 8);
  v5[26] = swift_task_alloc();
  return _swift_task_switch(sub_1004DF500, 0, 0);
}

uint64_t sub_1004DF500()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 216) = v2;
  if (!v2)
  {
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  *(void *)(v0 + 224) = View;
  uint64_t v6 = *(int *)(View + 20);
  *(_DWORD *)(v0 + 432) = v6;
  uint64_t v7 = (void *)(v4 + v6);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v3 += 16;
  LODWORD(v6) = *(_DWORD *)(v3 + 64);
  *(_DWORD *)(v0 + 436) = v6;
  *(void *)(v0 + 232) = *(void *)(v3 + 56);
  *(void *)(v0 + 240) = v8;
  *(void *)(v0 + 248) = 0;
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v10 = *(void *)(v0 + 192);
  uint64_t v11 = v1 + ((v6 + 32) & ~(unint64_t)v6);
  swift_bridgeObjectRetain();
  v8(v9, v11, v10);
  uint64_t v12 = CatalogLockup.identifier.getter();
  uint64_t v14 = v13;
  uint64_t v15 = v7[1];
  *(void *)(v0 + 32) = *v7;
  *(void *)(v0 + 40) = v15;
  *(void *)(v0 + 256) = sub_1000AFA94(&qword_10095FB38);
  State.wrappedValue.getter();
  if (*(void *)(*(void *)(v0 + 80) + 16))
  {
    sub_1000DA1C0(v12, v14);
    if (v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 264) = self;
  *(void *)(v0 + 272) = type metadata accessor for MainActor();
  *(void *)(v0 + 280) = static MainActor.shared.getter();
  uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004DF748, v20, v19);
}

uint64_t sub_1004DF748()
{
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();
  *(void *)(v0 + 288) = [v1 mainScreen];
  return _swift_task_switch(sub_1004DF7D0, 0, 0);
}

uint64_t sub_1004DF7D0()
{
  *(void *)(v0 + 296) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004DF85C, v2, v1);
}

uint64_t sub_1004DF85C()
{
  uint64_t v1 = (void *)v0[36];
  swift_release();
  [v1 bounds];
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;

  v0[38] = v3;
  v0[39] = v5;
  v0[40] = v7;
  v0[41] = v9;
  return _swift_task_switch(sub_1004DF900, 0, 0);
}

uint64_t sub_1004DF900()
{
  double Width = CGRectGetWidth(*(CGRect *)(v0 + 304));
  *(double *)(v0 + 336) = Width;
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return _swift_task_switch(v1, v2, v3);
  }
  *(void *)(v0 + 344) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v7 = v6;
  uint64_t v1 = sub_1004DF9DC;
  uint64_t v2 = v5;
  uint64_t v3 = v7;
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1004DF9DC()
{
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();
  *(void *)(v0 + 352) = [v1 mainScreen];
  return _swift_task_switch(sub_1004DFA64, 0, 0);
}

uint64_t sub_1004DFA64()
{
  *(void *)(v0 + 360) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004DFAF0, v2, v1);
}

uint64_t sub_1004DFAF0()
{
  uint64_t v1 = (void *)v0[44];
  swift_release();
  [v1 bounds];
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;

  v0[46] = v3;
  v0[47] = v5;
  v0[48] = v7;
  v0[49] = v9;
  return _swift_task_switch(sub_1004DFB94, 0, 0);
}

uint64_t sub_1004DFB94()
{
  double v9 = CGRectGetWidth(*(CGRect *)(v0 + 368)) / 1.77777778;
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
  }
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 104);
  CatalogLockup.artworkDescriptor.getter();
  ArtworkDescriptor.standardArtworkDescriptor.getter();
  sub_1000E370C(v11, (uint64_t (*)(void))&type metadata accessor for ArtworkDescriptor);
  StandardArtworkDescriptor.artwork.getter();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  uint64_t v17 = *(int *)(v10 + 28);
  char v18 = (void *)(v16 + *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 44) + v17);
  sub_10007E4EC(v18, v18[3]);
  dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)();
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 400) = v19;
  *(void *)(v19 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Views/Fitness"
                          "PlusUpNext/FitnessPlusUpNextView.swift";
  *(void *)(v19 + 24) = 132;
  *(unsigned char *)(v19 + 32) = 2;
  *(void *)(v19 + 40) = 43;
  *(void *)(v19 + 48) = v15;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v20;
  uint64_t v8 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
  *uint64_t v20 = v0;
  v20[1] = sub_1004DFE00;
  unint64_t v5 = 0x80000001007BEBB0;
  uint64_t v6 = sub_1004F7B24;
  uint64_t v1 = v0 + 72;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  unint64_t v4 = 0xD000000000000013;
  uint64_t v7 = v19;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1004DFE00()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1004E02AC;
  }
  else
  {
    uint64_t v5 = v2[15];
    uint64_t v4 = v2[16];
    uint64_t v6 = v2[14];
    v2[53] = v2[9];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1004DFF4C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004DFF4C()
{
  uint64_t v1 = *(void **)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 192);
  uint64_t v30 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v26 = *(void *)(v0 + 208);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v28 = *(void *)(v0 + 248) + 1;
  uint64_t v4 = (uint64_t *)(*(void *)(v0 + 104) + *(int *)(v0 + 432));
  uint64_t v24 = CatalogLockup.identifier.getter();
  uint64_t v6 = v5;
  id v7 = v1;
  uint64_t v8 = Image.init(uiImage:)();
  uint64_t v10 = *v4;
  uint64_t v9 = v4[1];
  *(void *)(v0 + 48) = v10;
  *(void *)(v0 + 56) = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  State.wrappedValue.getter();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v31 = *(void *)(v0 + 64);
  *(void *)(v0 + 64) = 0x8000000000000000;
  sub_1004F0EA4(v8, v24, v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 64) = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  *(void *)(v0 + 16) = v10;
  *(void *)(v0 + 24) = v9;
  State.wrappedValue.setter();

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v25);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v26, v29);
  if (v28 == v30)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  uint64_t v12 = *(void (**)(void, unint64_t, void))(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 248) + 1;
  *(void *)(v0 + 248) = v13;
  uint64_t v14 = (void *)(*(void *)(v0 + 104) + *(int *)(v0 + 432));
  v12(*(void *)(v0 + 208), *(void *)(v0 + 96)+ ((*(unsigned __int8 *)(v0 + 436) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 436))+ *(void *)(v0 + 232) * v13, *(void *)(v0 + 192));
  uint64_t v15 = CatalogLockup.identifier.getter();
  uint64_t v17 = v16;
  uint64_t v18 = v14[1];
  *(void *)(v0 + 32) = *v14;
  *(void *)(v0 + 40) = v18;
  *(void *)(v0 + 256) = sub_1000AFA94(&qword_10095FB38);
  State.wrappedValue.getter();
  if (*(void *)(*(void *)(v0 + 80) + 16))
  {
    sub_1000DA1C0(v15, v17);
    if (v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 264) = self;
  *(void *)(v0 + 272) = type metadata accessor for MainActor();
  *(void *)(v0 + 280) = static MainActor.shared.getter();
  uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1004DF748, v23, v22);
}

uint64_t sub_1004E02AC()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  swift_errorRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1004E03C4@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v42)(uint64_t *__return_ptr);
  uint64_t *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  uint64_t result;
  unsigned char v55[12];
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unsigned char *v63;
  void (*v64)(uint64_t *__return_ptr);
  uint64_t v65;
  unsigned char *v66;
  uint64_t v67;
  void (*v68)(void);
  void *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned char *v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[9];
  unsigned char v76[151];
  char v77;

  uint64_t v62 = a5;
  id v67 = a4;
  id v68 = a3;
  char v64 = a1;
  char v65 = a2;
  uint64_t v7 = sub_1000AFA94(&qword_10095FC60);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v63 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  int v66 = &v55[-v10];
  uint64_t v73 = sub_1000AFA94(&qword_10095FC28);
  __chkstk_darwin(v73);
  id v69 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v70 = sub_1000AFA94(&qword_10095FC68);
  __chkstk_darwin(v70);
  uint64_t v72 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000AFA94(&qword_10095FC18);
  __chkstk_darwin(v13);
  uint64_t v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v71 = sub_1000AFA94(&qword_10095FBF8);
  uint64_t v16 = __chkstk_darwin(v71);
  uint64_t v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v20 = &v55[-v19];
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = &v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v24);
  int v25 = (*(uint64_t (**)(unsigned char *, uint64_t))(v22 + 88))(v24, v21);
  id v74 = a6;
  if (v25 == enum case for DynamicTypeSize.xSmall(_:)
    || v25 == enum case for DynamicTypeSize.small(_:)
    || v25 == enum case for DynamicTypeSize.medium(_:)
    || v25 == enum case for DynamicTypeSize.large(_:)
    || v25 == enum case for DynamicTypeSize.xLarge(_:)
    || v25 == enum case for DynamicTypeSize.xxLarge(_:)
    || v25 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    id v69 = (void *)static HorizontalAlignment.center.getter();
    sub_1004E1544(v64, v62, (uint64_t)v75);
    *(_OWORD *)&v76[87] = v75[5];
    *(_OWORD *)&v76[103] = v75[6];
    *(_OWORD *)&v76[119] = v75[7];
    *(_OWORD *)&v76[135] = v75[8];
    *(_OWORD *)&v76[23] = v75[1];
    *(_OWORD *)&v76[39] = v75[2];
    *(_OWORD *)&v76[55] = v75[3];
    *(_OWORD *)&v76[71] = v75[4];
    uint64_t v77 = 0;
    *(_OWORD *)&v76[7] = v75[0];
    uint64_t v46 = static Alignment.bottom.getter();
    uint64_t v48 = v47;
    v68();
    char v49 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    *char v49 = v46;
    v49[1] = v48;
    sub_1000AEF2C((uint64_t)v15, (uint64_t)&v18[*(int *)(v71 + 36)], &qword_10095FC18);
    uint64_t v50 = *(_OWORD *)&v76[112];
    *(_OWORD *)(v18 + 113) = *(_OWORD *)&v76[96];
    *(_OWORD *)(v18 + 129) = v50;
    *(_OWORD *)(v18 + 145) = *(_OWORD *)&v76[128];
    uint64_t v51 = *(_OWORD *)&v76[48];
    *(_OWORD *)(v18 + 49) = *(_OWORD *)&v76[32];
    *(_OWORD *)(v18 + 65) = v51;
    uint64_t v52 = *(_OWORD *)&v76[80];
    *(_OWORD *)(v18 + 81) = *(_OWORD *)&v76[64];
    *(_OWORD *)(v18 + 97) = v52;
    os_log_type_t v53 = *(_OWORD *)&v76[16];
    *(_OWORD *)(v18 + 17) = *(_OWORD *)v76;
    *(void *)uint64_t v18 = v69;
    *((void *)v18 + 1) = 0;
    unsigned char v18[16] = 0;
    *((void *)v18 + 20) = *(void *)&v76[143];
    *(_OWORD *)(v18 + 33) = v53;
    sub_10008DB18((uint64_t)v15, &qword_10095FC18);
    uint64_t v43 = &qword_10095FBF8;
    sub_1000AEEC8((uint64_t)v18, (uint64_t)v20, &qword_10095FBF8);
    sub_1000AEF2C((uint64_t)v20, (uint64_t)v72, &qword_10095FBF8);
    swift_storeEnumTagMultiPayload();
    sub_100509FB4();
    sub_1000A132C(&qword_10095FC20, &qword_10095FC28);
    _ConditionalContent<>.init(storage:)();
    uint64_t v45 = (uint64_t)v20;
    return sub_10008DB18(v45, v43);
  }
  if (v25 == enum case for DynamicTypeSize.accessibility1(_:)
    || v25 == enum case for DynamicTypeSize.accessibility2(_:)
    || v25 == enum case for DynamicTypeSize.accessibility3(_:)
    || v25 == enum case for DynamicTypeSize.accessibility4(_:)
    || v25 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    uint64_t v26 = static HorizontalAlignment.leading.getter();
    uint64_t v27 = v69;
    *id v69 = v26;
    v27[1] = 0;
    *((unsigned char *)v27 + 16) = 0;
    uint64_t v28 = (char *)v27 + *(int *)(sub_1000AFA94(&qword_10095FC70) + 44);
    uint64_t v29 = ((void *(*)(unsigned char *__return_ptr))v64)(v76);
    long long v30 = *(_OWORD *)v76;
    uint64_t v31 = *(void *)&v76[24];
    uint64_t v32 = *(void *)&v76[40];
    uint64_t v57 = *(void *)&v76[32];
    unint64_t v58 = *(void *)&v76[16];
    uint64_t v33 = *(void *)&v76[56];
    char v64 = *(void (**)(uint64_t *__return_ptr))&v76[24];
    char v65 = *(void *)&v76[48];
    int v34 = v76[64];
    uint64_t v61 = *(void *)&v76[72];
    uint64_t v62 = *(void *)v76;
    uint64_t v59 = v76[81];
    unint64_t v60 = v76[80];
    long long v35 = v66;
    ((void (*)(void *))v68)(v29);
    char v36 = v63;
    sub_1000AEF2C((uint64_t)v35, (uint64_t)v63, &qword_10095FC60);
    *(_OWORD *)uint64_t v28 = v30;
    uint64_t v37 = v57;
    uint64_t v38 = v58;
    *((void *)v28 + 2) = v58;
    *((void *)v28 + 3) = v31;
    *((void *)v28 + 4) = v37;
    *((void *)v28 + 5) = v32;
    uint64_t v39 = v65;
    *((void *)v28 + 6) = v65;
    *((void *)v28 + 7) = v33;
    uint64_t v56 = v34;
    v28[64] = v34;
    *((void *)v28 + 9) = v61;
    v28[80] = v60;
    v28[81] = v59;
    uint64_t v40 = sub_1000AFA94(&qword_10095FC78);
    sub_1000AEF2C((uint64_t)v36, (uint64_t)&v28[*(int *)(v40 + 48)], &qword_10095FC60);
    uint64_t v41 = v62;
    uint64_t v42 = v64;
    sub_10050A43C(v62, *((uint64_t *)&v30 + 1), v38, (uint64_t)v64, v37, v32, v39, v33, v34);
    sub_10008DB18((uint64_t)v66, &qword_10095FC60);
    sub_10008DB18((uint64_t)v36, &qword_10095FC60);
    sub_10050A480(v41, *((uint64_t *)&v30 + 1), v38, (uint64_t)v42, v37, v32, v65, v33, v56);
    uint64_t v43 = &qword_10095FC28;
    uint64_t v44 = v69;
    sub_1000AEF2C((uint64_t)v69, (uint64_t)v72, &qword_10095FC28);
    swift_storeEnumTagMultiPayload();
    sub_100509FB4();
    sub_1000A132C(&qword_10095FC20, &qword_10095FC28);
    _ConditionalContent<>.init(storage:)();
    uint64_t v45 = (uint64_t)v44;
    return sub_10008DB18(v45, v43);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1004E0B78@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v45)(uint64_t *__return_ptr);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t *v51;
  void (*v52)(uint64_t *__return_ptr);
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  long long v62;
  long long v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void (*v68)(uint64_t *__return_ptr);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[8];
  uint64_t v77;
  unsigned char v78[143];
  char v79;

  *(void *)&uint64_t v63 = a3;
  id v68 = a1;
  id v69 = a2;
  double v75 = a4;
  id v70 = sub_1000AFA94(&qword_10095FAD8);
  uint64_t v4 = __chkstk_darwin(v70);
  int v66 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v65 = (uint64_t)&v60 - v6;
  id v74 = sub_1000AFA94(&qword_10095FAD0);
  __chkstk_darwin(v74);
  id v67 = (uint64_t *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = sub_1000AFA94(&qword_10095FAE0);
  __chkstk_darwin(v72);
  uint64_t v73 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095FAE8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095FAF0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&uint64_t v62 = sub_1000AFA94(&qword_10095FA30);
  __chkstk_darwin(v62);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v71 = sub_1000AFA94(&qword_10095FAB0);
  uint64_t v17 = __chkstk_darwin(v71);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v64 = (uint64_t)&v60 - v20;
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v24);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v25 == enum case for DynamicTypeSize.xSmall(_:)
    || v25 == enum case for DynamicTypeSize.small(_:)
    || v25 == enum case for DynamicTypeSize.medium(_:)
    || v25 == enum case for DynamicTypeSize.large(_:)
    || v25 == enum case for DynamicTypeSize.xLarge(_:)
    || v25 == enum case for DynamicTypeSize.xxLarge(_:)
    || v25 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    id v67 = (void *)static HorizontalAlignment.center.getter();
    sub_1004E16B0(v68, v63, (uint64_t)v76);
    *(_OWORD *)&v78[87] = v76[5];
    *(_OWORD *)&v78[103] = v76[6];
    *(_OWORD *)&v78[119] = v76[7];
    *(_OWORD *)&v78[23] = v76[1];
    *(_OWORD *)&v78[39] = v76[2];
    *(_OWORD *)&v78[55] = v76[3];
    *(_OWORD *)&v78[71] = v76[4];
    uint64_t v79 = 0;
    *(void *)&v78[135] = v77;
    *(_OWORD *)&v78[7] = v76[0];
    LODWORD(v69) = 0;
    uint64_t v44 = static Alignment.bottom.getter();
    id v68 = v45;
    *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v46 = sub_1000AFA94(&qword_10095FB00);
    sub_1004E389C((uint64_t)&v11[*(int *)(v46 + 44)]);
    uint64_t v47 = static Alignment.leading.getter();
    sub_100098478(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v47, v48, &qword_10095FAE8, &qword_10095FAF0);
    sub_10008DB18((uint64_t)v11, &qword_10095FAE8);
    char v49 = static Edge.Set.all.getter();
    sub_1000AEF2C((uint64_t)v14, (uint64_t)v16, &qword_10095FAF0);
    uint64_t v50 = &v16[*(int *)(v70 + 36)];
    *uint64_t v50 = v49;
    *(_OWORD *)(v50 + 8) = xmmword_100769040;
    *(_OWORD *)(v50 + 24) = xmmword_100769050;
    v50[40] = 0;
    sub_10008DB18((uint64_t)v14, &qword_10095FAF0);
    uint64_t v51 = (uint64_t *)&v16[*(int *)(v62 + 36)];
    uint64_t v52 = v68;
    *uint64_t v51 = v44;
    v51[1] = (uint64_t)v52;
    sub_1000AEF2C((uint64_t)v16, (uint64_t)&v19[*(int *)(v71 + 36)], &qword_10095FA30);
    os_log_type_t v53 = *(_OWORD *)&v78[64];
    *(_OWORD *)(v19 + 97) = *(_OWORD *)&v78[80];
    char v54 = *(_OWORD *)&v78[112];
    *(_OWORD *)(v19 + 113) = *(_OWORD *)&v78[96];
    *(_OWORD *)(v19 + 129) = v54;
    *((_OWORD *)v19 + 9) = *(_OWORD *)&v78[127];
    char v55 = *(_OWORD *)v78;
    *(_OWORD *)(v19 + 33) = *(_OWORD *)&v78[16];
    uint64_t v56 = *(_OWORD *)&v78[48];
    *(_OWORD *)(v19 + 49) = *(_OWORD *)&v78[32];
    *(_OWORD *)(v19 + 65) = v56;
    *(_OWORD *)(v19 + 81) = v53;
    *(void *)uint64_t v19 = v67;
    *((void *)v19 + 1) = 0;
    v19[16] = v69;
    *(_OWORD *)(v19 + 17) = v55;
    sub_10008DB18((uint64_t)v16, &qword_10095FA30);
    uint64_t v42 = &qword_10095FAB0;
    uint64_t v57 = (uint64_t)v19;
    unint64_t v58 = v64;
    sub_1000AEEC8(v57, v64, &qword_10095FAB0);
    sub_1000AEF2C(v58, v73, &qword_10095FAB0);
    swift_storeEnumTagMultiPayload();
    sub_1000D3234(&qword_10095FAA8, &qword_10095FAB0, &qword_10095FAB8, &qword_10095FAC0);
    sub_1000A132C(&qword_10095FAC8, &qword_10095FAD0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = v58;
    return sub_10008DB18(v43, v42);
  }
  if (v25 == enum case for DynamicTypeSize.accessibility1(_:)
    || v25 == enum case for DynamicTypeSize.accessibility2(_:)
    || v25 == enum case for DynamicTypeSize.accessibility3(_:)
    || v25 == enum case for DynamicTypeSize.accessibility4(_:)
    || v25 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    uint64_t v26 = static HorizontalAlignment.leading.getter();
    uint64_t v27 = (uint64_t)v67;
    *id v67 = v26;
    *(void *)(v27 + 8) = 0;
    *(unsigned char *)(v27 + 16) = 0;
    uint64_t v28 = v27 + *(int *)(sub_1000AFA94(&qword_10095FAF8) + 44);
    v68((uint64_t *)v78);
    uint64_t v29 = *(void *)v78;
    id v69 = *(void *)&v78[8];
    LODWORD(v68) = v78[16];
    LODWORD(v64) = v78[17];
    uint64_t v62 = *(_OWORD *)&v78[48];
    uint64_t v63 = *(_OWORD *)&v78[32];
    uint64_t v30 = *(void *)&v78[24];
    unint64_t v60 = *(void *)&v78[72];
    uint64_t v61 = *(void *)&v78[64];
    *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v31 = sub_1000AFA94(&qword_10095FB00);
    sub_1004E389C((uint64_t)&v11[*(int *)(v31 + 44)]);
    uint64_t v32 = static Alignment.leading.getter();
    sub_100098478(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v32, v33, &qword_10095FAE8, &qword_10095FAF0);
    sub_10008DB18((uint64_t)v11, &qword_10095FAE8);
    char v34 = static Edge.Set.all.getter();
    uint64_t v35 = v65;
    sub_1000AEF2C((uint64_t)v14, v65, &qword_10095FAF0);
    uint64_t v36 = v35 + *(int *)(v70 + 36);
    *(unsigned char *)uint64_t v36 = v34;
    *(_OWORD *)(v36 + 8) = xmmword_100769040;
    *(_OWORD *)(v36 + 24) = xmmword_100769050;
    *(unsigned char *)(v36 + 40) = 0;
    sub_10008DB18((uint64_t)v14, &qword_10095FAF0);
    uint64_t v37 = v66;
    sub_1000AEF2C(v35, v66, &qword_10095FAD8);
    uint64_t v38 = v69;
    *(void *)uint64_t v28 = v29;
    *(void *)(v28 + 8) = v38;
    *(unsigned char *)(v28 + 16) = (_BYTE)v68;
    *(unsigned char *)(v28 + 17) = v64;
    *(void *)(v28 + 24) = v30;
    long long v39 = v62;
    *(_OWORD *)(v28 + 32) = v63;
    *(_OWORD *)(v28 + 48) = v39;
    uint64_t v40 = v60;
    *(void *)(v28 + 64) = v61;
    *(void *)(v28 + 72) = v40;
    uint64_t v41 = sub_1000AFA94(&qword_10095FB08);
    sub_1000AEF2C(v37, v28 + *(int *)(v41 + 48), &qword_10095FAD8);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10008DB18(v35, &qword_10095FAD8);
    sub_10008DB18(v37, &qword_10095FAD8);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v42 = &qword_10095FAD0;
    sub_1000AEF2C(v27, v73, &qword_10095FAD0);
    swift_storeEnumTagMultiPayload();
    sub_1000D3234(&qword_10095FAA8, &qword_10095FAB0, &qword_10095FAB8, &qword_10095FAC0);
    sub_1000A132C(&qword_10095FAC8, &qword_10095FAD0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = v27;
    return sub_10008DB18(v43, v42);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1004E1544@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  a1(&v21);
  uint64_t v4 = v22;
  uint64_t v17 = v21;
  uint64_t v5 = v23;
  uint64_t v6 = v24;
  long long v7 = v25;
  uint64_t v8 = v26;
  uint64_t v9 = v27;
  char v10 = v28;
  uint64_t v19 = v29;
  char v11 = v30;
  char v18 = v31;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v12 = v21;
  char v13 = v22;
  uint64_t v14 = v23;
  char v15 = v24;
  char v35 = v10;
  char v34 = v11;
  char v33 = v22;
  char v32 = v24;
  *(void *)a3 = v17;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v9;
  *(unsigned char *)(a3 + 64) = v10;
  *(void *)(a3 + 72) = v19;
  *(unsigned char *)(a3 + 80) = v11;
  *(unsigned char *)(a3 + 81) = v18;
  *(void *)(a3 + 88) = a2;
  *(void *)(a3 + 96) = v12;
  *(unsigned char *)(a3 + 104) = v13;
  *(void *)(a3 + 112) = v14;
  *(unsigned char *)(a3 + 120) = v15;
  *(_OWORD *)(a3 + 128) = v25;
  sub_10050A43C(v17, v4, v5, v6, v7, *((uint64_t *)&v7 + 1), v8, v9, v10);
  swift_retain();
  return sub_10050A480(v17, v4, v5, v6, v7, *((uint64_t *)&v7 + 1), v8, v9, v10);
}

uint64_t sub_1004E16B0@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  a1(&v19);
  uint64_t v5 = v19;
  uint64_t v6 = v20;
  char v7 = v21;
  char v8 = BYTE1(v21);
  uint64_t v9 = v22;
  long long v17 = v24;
  long long v18 = v23;
  uint64_t v10 = v25;
  uint64_t v11 = v26;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v12 = v19;
  char v13 = v20;
  uint64_t v14 = v21;
  char v15 = v22;
  char v29 = v7;
  char v28 = v20;
  char v27 = v22;
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 17) = v8;
  *(void *)(a3 + 24) = v9;
  *(_OWORD *)(a3 + 32) = v18;
  *(_OWORD *)(a3 + 48) = v17;
  *(void *)(a3 + 64) = v10;
  *(void *)(a3 + 72) = v11;
  *(void *)(a3 + 80) = a2;
  *(void *)(a3 + 88) = v12;
  *(unsigned char *)(a3 + 96) = v13;
  *(void *)(a3 + 104) = v14;
  *(unsigned char *)(a3 + 112) = v15;
  *(_OWORD *)(a3 + 120) = v23;
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_bridgeObjectRelease();
}

double sub_1004E17C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for Artwork();
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for StandardArtworkDescriptor();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkDescriptor();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Image.ResizingMode();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  uint64_t v16 = CatalogLockup.identifier.getter();
  uint64_t v18 = v17;
  uint64_t v19 = *(int *)(type metadata accessor for FitnessPlusUpNextView() + 20);
  uint64_t v38 = v3;
  uint64_t v20 = (uint64_t *)(v3 + v19);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *(void *)&long long v49 = v22;
  *((void *)&v49 + 1) = v21;
  sub_1000AFA94(&qword_10095FB38);
  State.wrappedValue.getter();
  if (*(void *)(v45 + 16) && (sub_1000DA1C0(v16, v18), (v23 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Image.ResizingMode.stretch(_:), v12);
    uint64_t v24 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v25 = static Alignment.bottom.getter();
    uint64_t v27 = v26;
    sub_1004E1D08(v43, (uint64_t *)&v49);
    uint64_t v45 = v24;
    *(_OWORD *)uint64_t v46 = v49;
    *(_OWORD *)&v46[16] = v50;
    *(void *)&v46[32] = v51;
    *(void *)&long long v47 = v25;
    *((void *)&v47 + 1) = v27;
    char v48 = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000AFA94(&qword_10095FCA8);
    sub_1000AFA94(&qword_1009597C8);
    sub_10050A4CC();
    sub_1000A132C(&qword_1009597D8, &qword_1009597C8);
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    CatalogLockup.artworkDescriptor.getter();
    ArtworkDescriptor.standardArtworkDescriptor.getter();
    sub_1000E370C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    uint64_t v28 = Artwork.backgroundColor.getter();
    char v30 = v29;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
    v31._countAndFlagsBits = v28;
    v31._object = v30;
    UIColor.init(hex:)(v31);
    uint64_t v45 = Color.init(_:)();
    *(void *)uint64_t v46 = 256;
    memset(&v46[8], 0, 32);
    long long v47 = 0u;
    char v48 = 1;
    sub_1000AFA94(&qword_10095FCA8);
    sub_1000AFA94(&qword_1009597C8);
    sub_10050A4CC();
    sub_1000A132C(&qword_1009597D8, &qword_1009597C8);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v49;
  long long v33 = v50;
  long long v34 = v51;
  long long v35 = v52;
  char v36 = v53;
  uint64_t v37 = v44;
  *uint64_t v44 = v49;
  v37[1] = v33;
  void v37[2] = v34;
  v37[3] = v35;
  *((unsigned char *)v37 + 64) = v36;
  return result;
}

uint64_t sub_1004E1D08@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v2 = type metadata accessor for Artwork();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for StandardArtworkDescriptor();
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ArtworkDescriptor();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)&v36 - v15);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for DynamicTypeSize.accessibility1(_:), v10);
  char v17 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
  if (v17)
  {
    sub_1000AFA94((uint64_t *)&unk_100959030);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10074E640;
    sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    CatalogLockup.artworkDescriptor.getter();
    ArtworkDescriptor.standardArtworkDescriptor.getter();
    uint64_t v37 = &type metadata accessor for ArtworkDescriptor;
    sub_1000E370C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter();
    uint64_t v39 = *(void *)(v39 + 8);
    ((void (*)(char *, uint64_t))v39)(v6, v42);
    uint64_t v20 = Artwork.backgroundColor.getter();
    uint64_t v22 = v21;
    uint64_t v23 = v41;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v40 + 8);
    v24(v4, v41);
    v25._countAndFlagsBits = v20;
    v25._object = v22;
    UIColor.init(hex:)(v25);
    *(void *)(v38 + 32) = Color.init(_:)();
    CatalogLockup.artworkDescriptor.getter();
    ArtworkDescriptor.standardArtworkDescriptor.getter();
    sub_1000E370C((uint64_t)v9, (uint64_t (*)(void))v37);
    StandardArtworkDescriptor.artwork.getter();
    ((void (*)(char *, uint64_t))v39)(v6, v42);
    uint64_t v26 = Artwork.backgroundColor.getter();
    uint64_t v28 = v27;
    v24(v4, v23);
    v29._countAndFlagsBits = v26;
    v29._object = v28;
    UIColor.init(hex:)(v29);
    Color.init(_:)();
    uint64_t v30 = Color.opacity(_:)();
    swift_release();
    uint64_t v31 = v38;
    *(void *)(v38 + 40) = v30;
    uint64_t v45 = v31;
    specialized Array._endMutation()();
    static UnitPoint.bottom.getter();
    static UnitPoint.center.getter();
    Gradient.init(colors:)();
    uint64_t result = LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v32 = v45;
    long long v33 = v46;
    long long v34 = v47;
  }
  else
  {
    uint64_t v32 = 0;
    long long v33 = 0uLL;
    long long v34 = 0uLL;
  }
  long long v35 = v44;
  *uint64_t v44 = v32;
  *(_OWORD *)(v35 + 1) = v33;
  *(_OWORD *)(v35 + 3) = v34;
  return result;
}

uint64_t sub_1004E21D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for StandardArtworkDescriptor();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v37 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ArtworkDescriptor();
  __chkstk_darwin(v7 - 8);
  uint64_t v36 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaTagStringBuilderOptions();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + *(int *)(type metadata accessor for FitnessPlusUpNextView() + 28);
  uint64_t v14 = (void *)(v13 + *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 48));
  sub_10007E4EC(v14, v14[3]);
  CatalogLockup.titleTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  uint64_t v34 = dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = v10 + 8;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31[1] = v15;
  uint64_t v32 = v9;
  v16(v12, v9);
  sub_10007E4EC(v14, v14[3]);
  CatalogLockup.subtitleTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  uint64_t v33 = dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)();
  swift_bridgeObjectRelease();
  v16(v12, v9);
  sub_10007E4EC(v14, v14[3]);
  CatalogLockup.detailTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  char v17 = (void *)dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)();
  swift_bridgeObjectRelease();
  v16(v12, v32);
  uint64_t v51 = v35;
  uint64_t v52 = a1;
  uint64_t v18 = a1;
  uint64_t v19 = (void *)v34;
  uint64_t v45 = v17;
  uint64_t v46 = v34;
  uint64_t v20 = (void *)v33;
  uint64_t v47 = v33;
  uint64_t v48 = v35;
  uint64_t v49 = v18;
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  uint64_t v21 = (uint64_t)v36;
  CatalogLockup.artworkDescriptor.getter();
  uint64_t v22 = v37;
  ArtworkDescriptor.standardArtworkDescriptor.getter();
  sub_1000E370C(v21, (uint64_t (*)(void))&type metadata accessor for ArtworkDescriptor);
  uint64_t v23 = v39;
  StandardArtworkDescriptor.artwork.getter();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v40);
  uint64_t v24 = v23;
  uint64_t v25 = Artwork.backgroundColor.getter();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v42);
  v28._countAndFlagsBits = v25;
  v28._object = v27;
  UIColor.init(hex:)(v28);
  uint64_t v29 = Color.init(_:)();
  sub_1004E03C4((void (*)(uint64_t *__return_ptr))sub_10050A424, (uint64_t)v50, (void (*)(void))sub_10050A42C, (uint64_t)v44, v29, v43);

  return swift_release();
}

double sub_1004E2694@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1004E17C8(a1, v7);
  char v3 = v10;
  long long v4 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v4;
  double result = *(double *)&v8;
  long long v6 = v9;
  *(_OWORD *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 64) = v3;
  *(void *)(a2 + 72) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_1004E26FC@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v52 = a5;
  unint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  uint64_t v60 = a6;
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  char v53 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StandardArtworkDescriptor();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ArtworkDescriptor();
  __chkstk_darwin(v10 - 8);
  uint64_t v48 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = sub_1000AFA94(&qword_10095FC80);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (uint64_t)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_10095FC88);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_10095FC90);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  Swift::String v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v21 = static HorizontalAlignment.leading.getter();
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  uint64_t v29 = sub_1000AFA94(&qword_10095FC98);
  sub_1004E2C9C(v56, v57, v58, v21 + *(int *)(v29 + 44));
  uint64_t v30 = static Alignment.leading.getter();
  sub_100098478(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, v30, v31, &qword_10095FC80, &qword_10095FC88);
  sub_10008DB18(v21, &qword_10095FC80);
  LOBYTE(v21) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v28, &qword_10095FC88);
  uint64_t v32 = &v28[*(int *)(v26 + 44)];
  *uint64_t v32 = v21;
  *(_OWORD *)(v32 + 8) = xmmword_100769040;
  *(_OWORD *)(v32 + 24) = xmmword_100769050;
  v32[40] = 0;
  sub_10008DB18((uint64_t)v24, &qword_10095FC88);
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v18);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for DynamicTypeSize.accessibility1(_:), v12);
  LOBYTE(v21) = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v16, v12);
  v33(v18, v12);
  if (v21)
  {
    uint64_t v34 = static Color.clear.getter();
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    uint64_t v35 = (uint64_t)v48;
    CatalogLockup.artworkDescriptor.getter();
    uint64_t v36 = v49;
    ArtworkDescriptor.standardArtworkDescriptor.getter();
    sub_1000E370C(v35, (uint64_t (*)(void))&type metadata accessor for ArtworkDescriptor);
    uint64_t v37 = v53;
    StandardArtworkDescriptor.artwork.getter();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
    uint64_t v38 = Artwork.backgroundColor.getter();
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v55);
    v41._countAndFlagsBits = v38;
    v41._object = v40;
    UIColor.init(hex:)(v41);
    uint64_t v34 = Color.init(_:)();
  }
  uint64_t v42 = v34;
  char v43 = static Edge.Set.all.getter();
  uint64_t v44 = v60;
  sub_1000AEF2C((uint64_t)v28, v60, &qword_10095FC90);
  uint64_t v45 = v44 + *(int *)(sub_1000AFA94(&qword_10095FC60) + 36);
  *(void *)uint64_t v45 = v42;
  *(unsigned char *)(v45 + 8) = v43;
  return sub_10008DB18((uint64_t)v28, &qword_10095FC90);
}

uint64_t sub_1004E2C9C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v94 = a3;
  uint64_t v95 = a4;
  id v90 = a2;
  uint64_t v5 = type metadata accessor for Font.Leading();
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  __chkstk_darwin(v5);
  uint64_t v91 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_10094DDC0) - 8;
  __chkstk_darwin(v87);
  unint64_t v86 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v84 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_10095FB10) - 8;
  __chkstk_darwin(v85);
  uint64_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_10095FB18) - 8;
  uint64_t v12 = __chkstk_darwin(v89);
  uint64_t v97 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v96 = (uint64_t)&v84 - v14;
  id v15 = [a1 string];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v98 = v16;
  uint64_t v99 = v18;
  unint64_t v88 = sub_1000A06D0();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static Font.caption.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  LOBYTE(v15) = v27;
  uint64_t v29 = v28;
  swift_release();
  LOBYTE(v15) = v15 & 1;
  sub_1000A06C0(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = enum case for Text.Case.uppercase(_:);
  uint64_t v32 = type metadata accessor for Text.Case();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v84, v31, v32);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = v86;
  sub_1000AEF2C(v34, (uint64_t)v86 + *(int *)(v87 + 36), &qword_10094DDC8);
  *uint64_t v36 = v35;
  sub_1000AEF2C((uint64_t)v36, (uint64_t)&v11[*(int *)(v85 + 44)], &qword_10094DDC0);
  *(void *)uint64_t v11 = v24;
  *((void *)v11 + 1) = v26;
  v11[16] = (char)v15;
  *((void *)v11 + 3) = v29;
  *((void *)v11 + 4) = KeyPath;
  *((void *)v11 + 5) = 1;
  v11[48] = 0;
  sub_1000A1750(v24, v26, (char)v15);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18((uint64_t)v36, &qword_10094DDC0);
  sub_10008DB18(v34, &qword_10094DDC8);
  sub_1000A06C0(v24, v26, (char)v15);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = static ShapeStyle<>.keyTint.getter();
  uint64_t v38 = v97;
  sub_1000AEF2C((uint64_t)v11, v97, &qword_10095FB10);
  *(void *)(v38 + *(int *)(v89 + 44)) = v37;
  sub_10008DB18((uint64_t)v11, &qword_10095FB10);
  sub_1000AEEC8(v38, v96, &qword_10095FB18);
  id v39 = [v90 string];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  uint64_t v98 = v40;
  uint64_t v99 = v42;
  uint64_t v43 = Text.init<A>(_:)();
  uint64_t v45 = v44;
  LOBYTE(KeyPath) = v46 & 1;
  static Font.title3.getter();
  Font.bold()();
  swift_release();
  uint64_t v48 = v91;
  uint64_t v47 = v92;
  uint64_t v49 = v93;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, enum case for Font.Leading.tight(_:), v93);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  uint64_t v50 = Text.font(_:)();
  uint64_t v92 = v51;
  uint64_t v93 = v50;
  uint64_t v91 = v52;
  LOBYTE(v48) = v53;
  swift_release();
  LOBYTE(v26) = v48 & 1;
  sub_1000A06C0(v43, v45, KeyPath);
  swift_bridgeObjectRelease();
  id v90 = (id)swift_getKeyPath();
  id v54 = [v94 string];
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v56;

  uint64_t v98 = v55;
  uint64_t v99 = v57;
  uint64_t v58 = Text.init<A>(_:)();
  uint64_t v60 = v59;
  LOBYTE(v47) = v61 & 1;
  static Font.caption.getter();
  static Font.Weight.regular.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v62 = Text.font(_:)();
  uint64_t v64 = v63;
  LOBYTE(v45) = v65;
  uint64_t v67 = v66;
  swift_release();
  LOBYTE(v48) = v45 & 1;
  sub_1000A06C0(v58, v60, v47);
  swift_bridgeObjectRelease();
  uint64_t v68 = swift_getKeyPath();
  LODWORD(v60) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v70 = v96;
  uint64_t v69 = v97;
  sub_1000AEF2C(v96, v97, &qword_10095FB18);
  LOBYTE(v98) = v26;
  uint64_t v71 = v69;
  uint64_t v72 = v95;
  sub_1000AEF2C(v71, v95, &qword_10095FB18);
  uint64_t v73 = sub_1000AFA94(&qword_10095FCA0);
  uint64_t v74 = v72 + *(int *)(v73 + 48);
  uint64_t v76 = v92;
  uint64_t v75 = v93;
  uint64_t v77 = (uint64_t)v91;
  *(void *)uint64_t v74 = v93;
  *(void *)(v74 + 8) = v77;
  char v78 = v26;
  *(unsigned char *)(v74 + 16) = v26;
  id v79 = v90;
  *(void *)(v74 + 24) = v76;
  *(void *)(v74 + 32) = v79;
  *(void *)(v74 + 40) = 2;
  *(unsigned char *)(v74 + 48) = 0;
  *(_WORD *)(v74 + 49) = 256;
  uint64_t v80 = v72 + *(int *)(v73 + 64);
  *(void *)uint64_t v80 = v62;
  *(void *)(v80 + 8) = v64;
  *(unsigned char *)(v80 + 16) = (_BYTE)v48;
  *(void *)(v80 + 24) = v67;
  *(void *)(v80 + 32) = v68;
  *(void *)(v80 + 40) = 1;
  *(unsigned char *)(v80 + 48) = 0;
  *(_DWORD *)(v80 + 52) = v60;
  uint64_t v81 = v75;
  uint64_t v82 = v77;
  sub_1000A1750(v75, v77, v78);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v62, v64, (char)v48);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18(v70, &qword_10095FB18);
  sub_1000A06C0(v62, v64, (char)v48);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v81, v82, v98);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10008DB18(v97, &qword_10095FB18);
}

__n128 sub_1004E3474@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(_:bundle:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = static Alignment.bottom.getter();
  uint64_t v9 = v8;
  sub_1004E3604((uint64_t)v13);
  uint64_t v10 = v14;
  __n128 result = (__n128)v13[0];
  long long v12 = v13[1];
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v12;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v9;
  return result;
}

uint64_t sub_1004E3604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)&v19 - v7);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for DynamicTypeSize.accessibility1(_:), v2);
  char v9 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
  if (v9)
  {
    sub_1000AFA94((uint64_t *)&unk_100959030);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10074E640;
    sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    v13._countAndFlagsBits = 0x353035313232;
    v13._object = (void *)0xE600000000000000;
    UIColor.init(hex:)(v13);
    *(void *)(v12 + 32) = Color.init(_:)();
    v14._countAndFlagsBits = 0x353035313232;
    v14._object = (void *)0xE600000000000000;
    UIColor.init(hex:)(v14);
    Color.init(_:)();
    uint64_t v15 = Color.opacity(_:)();
    swift_release();
    *(void *)(v12 + 40) = v15;
    uint64_t v20 = v12;
    specialized Array._endMutation()();
    static UnitPoint.bottom.getter();
    static UnitPoint.center.getter();
    Gradient.init(colors:)();
    uint64_t result = LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v16 = v20;
    long long v17 = v21;
    long long v18 = v22;
  }
  else
  {
    uint64_t v16 = 0;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
  }
  *(void *)a1 = v16;
  *(_OWORD *)(a1 + 8) = v17;
  *(_OWORD *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_1004E389C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v76 = *(void *)(v1 - 8);
  uint64_t v77 = v1;
  __chkstk_darwin(v1);
  uint64_t v75 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_10094DDC0) - 8;
  __chkstk_darwin(v73);
  uint64_t v72 = (uint64_t *)((char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v4 - 8);
  uint64_t v70 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_10095FB10) - 8;
  __chkstk_darwin(v71);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_10095FB18) - 8;
  uint64_t v8 = __chkstk_darwin(v74);
  uint64_t v80 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v79 = (uint64_t)&v69 - v10;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v11 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  static Font.caption.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  swift_release();
  v20 &= 1u;
  sub_1000A06C0(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = enum case for Text.Case.uppercase(_:);
  uint64_t v25 = type metadata accessor for Text.Case();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v70, v24, v25);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v25);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = v72;
  sub_1000AEF2C(v27, (uint64_t)v72 + *(int *)(v73 + 36), &qword_10094DDC8);
  uint64_t *v29 = v28;
  sub_1000AEF2C((uint64_t)v29, (uint64_t)&v7[*(int *)(v71 + 44)], &qword_10094DDC0);
  *(void *)uint64_t v7 = v16;
  *((void *)v7 + 1) = v18;
  v7[16] = v20;
  *((void *)v7 + 3) = v22;
  *((void *)v7 + 4) = KeyPath;
  *((void *)v7 + 5) = 1;
  v7[48] = 0;
  sub_1000A1750(v16, v18, v20);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18((uint64_t)v29, &qword_10094DDC0);
  sub_10008DB18(v27, &qword_10094DDC8);
  sub_1000A06C0(v16, v18, v20);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = static ShapeStyle<>.keyTint.getter();
  uint64_t v31 = v80;
  sub_1000AEF2C((uint64_t)v7, v80, &qword_10095FB10);
  *(void *)(v31 + *(int *)(v74 + 44)) = v30;
  sub_10008DB18((uint64_t)v7, &qword_10095FB10);
  sub_1000AEEC8(v31, v79, &qword_10095FB18);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v32 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v34 = v33;
  LOBYTE(v25) = v35 & 1;
  static Font.title3.getter();
  Font.bold()();
  swift_release();
  uint64_t v37 = v75;
  uint64_t v36 = v76;
  uint64_t v38 = v77;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, enum case for Font.Leading.tight(_:), v77);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  uint64_t v39 = Text.font(_:)();
  uint64_t v76 = v40;
  uint64_t v77 = v39;
  uint64_t v75 = v41;
  LOBYTE(v37) = v42;
  swift_release();
  LOBYTE(v28) = v37 & 1;
  sub_1000A06C0(v32, v34, v25);
  swift_bridgeObjectRelease();
  uint64_t v74 = swift_getKeyPath();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v43 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v45 = v44;
  LOBYTE(v36) = v46 & 1;
  static Font.caption.getter();
  static Font.Weight.regular.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v47 = Text.font(_:)();
  uint64_t v49 = v48;
  LOBYTE(v34) = v50;
  uint64_t v52 = v51;
  swift_release();
  LOBYTE(v37) = v34 & 1;
  sub_1000A06C0(v43, v45, v36);
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_getKeyPath();
  LODWORD(v45) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v55 = v79;
  uint64_t v54 = v80;
  sub_1000AEF2C(v79, v80, &qword_10095FB18);
  char v81 = v28;
  uint64_t v56 = v54;
  uint64_t v57 = v78;
  sub_1000AEF2C(v56, v78, &qword_10095FB18);
  uint64_t v58 = sub_1000AFA94(&qword_10095FB20);
  uint64_t v59 = v57 + *(int *)(v58 + 48);
  uint64_t v61 = v76;
  uint64_t v60 = v77;
  uint64_t v62 = (uint64_t)v75;
  *(void *)uint64_t v59 = v77;
  *(void *)(v59 + 8) = v62;
  char v63 = v28;
  *(unsigned char *)(v59 + 16) = v28;
  uint64_t v64 = v74;
  *(void *)(v59 + 24) = v61;
  *(void *)(v59 + 32) = v64;
  *(void *)(v59 + 40) = 2;
  *(unsigned char *)(v59 + 48) = 0;
  uint64_t v65 = v57 + *(int *)(v58 + 64);
  *(void *)uint64_t v65 = v47;
  *(void *)(v65 + 8) = v49;
  *(unsigned char *)(v65 + 16) = (_BYTE)v37;
  *(void *)(v65 + 24) = v52;
  *(void *)(v65 + 32) = v53;
  *(void *)(v65 + 40) = 1;
  *(unsigned char *)(v65 + 48) = 0;
  *(_DWORD *)(v65 + 52) = v45;
  uint64_t v66 = v60;
  uint64_t v67 = v62;
  sub_1000A1750(v60, v62, v63);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v47, v49, (char)v37);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18(v55, &qword_10095FB18);
  sub_1000A06C0(v47, v49, (char)v37);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v66, v67, v81);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10008DB18(v80, &qword_10095FB18);
}

id sub_1004E4068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v109 = sub_1000AFA94(&qword_10095FB58);
  __chkstk_darwin(v109);
  uint64_t v110 = (uint64_t)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000AFA94(&qword_10095FA60);
  __chkstk_darwin(v120);
  uint64_t v111 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095FB60);
  __chkstk_darwin(v5 - 8);
  uint64_t v105 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v102 = sub_1000AFA94(&qword_10095FB68);
  __chkstk_darwin(v102);
  uint64_t v103 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000AFA94(&qword_10095FA90);
  __chkstk_darwin(v104);
  uint64_t v106 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000AFA94(&qword_10095FA70);
  uint64_t v9 = __chkstk_darwin(v107);
  uint64_t v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v108 = (uint64_t)&v97 - v12;
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v101 = *(void *)(View - 8);
  uint64_t v14 = *(void *)(v101 + 64);
  __chkstk_darwin(View);
  uint64_t v117 = sub_1000AFA94(&qword_10095FB70);
  __chkstk_darwin(v117);
  uint64_t v119 = (uint64_t)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000AFA94(&qword_10095FB78);
  __chkstk_darwin(v113);
  uint64_t v17 = (_OWORD *)((char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = sub_1000AFA94(&qword_10095F9F0);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for RedactionReasons();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  char v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94(&qword_10095F9F8);
  __chkstk_darwin(v112);
  uint64_t v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000AFA94(&qword_10095FB80);
  uint64_t v100 = *(void *)(v114 - 8);
  uint64_t v23 = __chkstk_darwin(v114);
  uint64_t v25 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v99 = (char *)&v97 - v26;
  uint64_t v27 = *(int *)(View + 28);
  uint64_t v116 = a1;
  uint64_t v28 = a1 + v27 + *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 36);
  uint64_t v29 = *(void *)v28;
  uint64_t v30 = *(void *)(v28 + 8);
  int v31 = *(unsigned __int8 *)(v28 + 16);
  if (!v31)
  {
    char v53 = *(unsigned char *)(v116 + *(int *)(View + 40));
    sub_1000D2848(v116, (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    unint64_t v54 = (*(unsigned __int8 *)(v101 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v29;
    sub_1000D27E0((uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v54, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    sub_1000908B0(v29, v30, 0);
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_1004DF0B0(v56, v53, (uint64_t)sub_100509CE8, v55, (uint64_t)&v133);
    long long v57 = v136;
    void v17[2] = v135;
    void v17[3] = v57;
    v17[4] = v137;
    long long v58 = v134;
    *uint64_t v17 = v133;
    v17[1] = v58;
    swift_storeEnumTagMultiPayload();
    sub_100366BC8((uint64_t)&v133);
    sub_1000AFA94(&qword_10095FA50);
    unint64_t v59 = sub_1000D2A38();
    uint64_t v122 = v112;
    unint64_t v123 = v59;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10095FA48, &qword_10095FA50);
    uint64_t v60 = (uint64_t)v115;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v60, v119, &qword_10095F9F0);
    swift_storeEnumTagMultiPayload();
    sub_1004E747C();
    sub_1000D29C4();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v60, &qword_10095F9F0);
    return (id)sub_100509D5C((uint64_t)&v133);
  }
  if (v31 == 1)
  {
    uint64_t v32 = static HorizontalAlignment.center.getter();
    sub_1004E6698((uint64_t)&v133);
    uint64_t v33 = *((void *)&v133 + 1);
    uint64_t v99 = (char *)v133;
    char v34 = v134;
    LODWORD(v112) = BYTE1(v134);
    uint64_t v101 = *((void *)&v134 + 1);
    uint64_t v100 = v135;
    char v35 = BYTE8(v135);
    uint64_t v113 = v136;
    char v36 = BYTE8(v136);
    uint64_t v114 = *((void *)&v137 + 1);
    uint64_t v115 = (char *)v137;
    char v37 = static Edge.Set.all.getter();
    LOBYTE(v133) = 0;
    LOBYTE(v122) = v34;
    LOBYTE(v126[0]) = v35;
    LOBYTE(v125[0]) = v36;
    LOBYTE(v129) = 0;
    uint64_t v38 = static Alignment.center.getter();
    uint64_t v40 = v39;
    uint64_t v41 = static HorizontalAlignment.center.getter();
    uint64_t v42 = (uint64_t)v105;
    *uint64_t v105 = v41;
    *(void *)(v42 + 8) = 0x4014000000000000;
    *(unsigned char *)(v42 + 16) = 0;
    uint64_t v43 = sub_1000AFA94(&qword_10095FB88);
    sub_1004E5CF0(v116, (uint64_t *)(v42 + *(int *)(v43 + 44)));
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v45 = v103;
    sub_1000AEF2C(v42, v103, &qword_10095FB60);
    uint64_t v46 = v45 + *(int *)(v102 + 36);
    *(void *)uint64_t v46 = KeyPath;
    *(unsigned char *)(v46 + 8) = 1;
    sub_10008DB18(v42, &qword_10095FB60);
    uint64_t v47 = v106;
    sub_1000AEEC8(v45, v106, &qword_10095FB68);
    uint64_t v48 = (uint64_t *)(v47 + *(int *)(v104 + 36));
    *uint64_t v48 = v38;
    v48[1] = v40;
    sub_1000AEF2C(v47, (uint64_t)&v11[*(int *)(v107 + 36)], &qword_10095FA90);
    *(void *)uint64_t v11 = v32;
    *((void *)v11 + 1) = 0;
    v11[16] = v133;
    *((void *)v11 + 3) = v99;
    *((void *)v11 + 4) = v33;
    v11[40] = v122;
    v11[41] = v112;
    uint64_t v49 = v100;
    *((void *)v11 + 6) = v101;
    *((void *)v11 + 7) = v49;
    v11[64] = v126[0];
    *((void *)v11 + 9) = v113;
    v11[80] = v125[0];
    uint64_t v50 = v114;
    *((void *)v11 + 11) = v115;
    *((void *)v11 + 12) = v50;
    v11[104] = v37;
    *((_OWORD *)v11 + 7) = xmmword_100769040;
    *((_OWORD *)v11 + 8) = xmmword_100769040;
    v11[144] = v129;
    sub_10008DB18(v47, &qword_10095FA90);
    uint64_t v51 = v108;
    sub_1000AEEC8((uint64_t)v11, v108, &qword_10095FA70);
    sub_1000AEF2C(v51, v110, &qword_10095FA70);
    swift_storeEnumTagMultiPayload();
    sub_1000E1994();
    uint64_t v52 = (uint64_t)v111;
  }
  else
  {
    if (__PAIR128__(v30, v29) < 2)
    {
      uint64_t v62 = static Color.clear.getter();
      sub_1000D2AF8((void (*)(uint64_t *__return_ptr))sub_1000D3E9C, 0, (void (*)(void))sub_1000D32F4, 0, v62, (uint64_t)v22);
      swift_release();
      static RedactionReasons.placeholder.getter();
      unint64_t v63 = sub_1000D2A38();
      uint64_t v64 = v112;
      View.redacted(reason:)();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v20, v98);
      sub_10008DB18((uint64_t)v22, &qword_10095F9F8);
      uint64_t v65 = v100;
      uint64_t v66 = v99;
      uint64_t v67 = v114;
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v25, v114);
      (*(void (**)(_OWORD *, char *, uint64_t))(v65 + 16))(v17, v66, v67);
      swift_storeEnumTagMultiPayload();
      sub_1000AFA94(&qword_10095FA50);
      *(void *)&long long v133 = v64;
      *((void *)&v133 + 1) = v63;
      swift_getOpaqueTypeConformance2();
      sub_1000A132C(&qword_10095FA48, &qword_10095FA50);
      uint64_t v68 = (uint64_t)v115;
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C(v68, v119, &qword_10095F9F0);
      swift_storeEnumTagMultiPayload();
      sub_1004E747C();
      sub_1000D29C4();
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v68, &qword_10095F9F0);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v66, v67);
    }
    id result = (id)MobileGestalt_get_current_device();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v69 = result;
    int wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability) {
      uint64_t v71 = 1312902231;
    }
    else {
      uint64_t v71 = 1229343063;
    }
    *(void *)&long long v133 = 0;
    *((void *)&v133 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    *(void *)&long long v133 = 0xD000000000000017;
    *((void *)&v133 + 1) = 0x80000001007CC7E0;
    v72._countAndFlagsBits = v71;
    v72._object = (void *)0xE400000000000000;
    String.append(_:)(v72);
    swift_bridgeObjectRelease();
    v73._object = (void *)0x80000001007CC800;
    v73._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v73);
    id v74 = [self mainBundle];
    NSString v75 = String._bridgeToObjectiveC()();
    id v76 = [v74 localizedStringForKey:v75 value:0 table:0];

    uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();

    uint64_t v80 = static HorizontalAlignment.center.getter();
    sub_1004E6698((uint64_t)&v133);
    uint64_t v81 = *((void *)&v133 + 1);
    uint64_t v98 = v133;
    LOBYTE(v76) = v134;
    LODWORD(v99) = BYTE1(v134);
    uint64_t v101 = *((void *)&v134 + 1);
    uint64_t v100 = v135;
    char v82 = BYTE8(v135);
    uint64_t v112 = v136;
    char v83 = BYTE8(v136);
    uint64_t v114 = *((void *)&v137 + 1);
    uint64_t v115 = (char *)v137;
    LODWORD(v113) = static Edge.Set.all.getter();
    char v132 = 0;
    char v131 = (char)v76;
    char v128 = v82;
    char v127 = v83;
    char v124 = 0;
    uint64_t v84 = static Alignment.center.getter();
    uint64_t v86 = v85;
    uint64_t v87 = static HorizontalAlignment.center.getter();
    uint64_t v88 = (uint64_t)v105;
    *uint64_t v105 = v87;
    *(void *)(v88 + 8) = 0x4014000000000000;
    *(unsigned char *)(v88 + 16) = 0;
    uint64_t v89 = sub_1000AFA94(&qword_10095FB88);
    sub_1004E673C(v77, v79, v116, (uint64_t *)(v88 + *(int *)(v89 + 44)));
    uint64_t v90 = swift_getKeyPath();
    uint64_t v91 = v103;
    sub_1000AEF2C(v88, v103, &qword_10095FB60);
    uint64_t v92 = v91 + *(int *)(v102 + 36);
    *(void *)uint64_t v92 = v90;
    *(unsigned char *)(v92 + 8) = 1;
    sub_10008DB18(v88, &qword_10095FB60);
    uint64_t v93 = v106;
    sub_1000AEEC8(v91, v106, &qword_10095FB68);
    id v94 = (uint64_t *)(v93 + *(int *)(v104 + 36));
    *id v94 = v84;
    v94[1] = v86;
    sub_1000AEF2C(v93, (uint64_t)&v11[*(int *)(v107 + 36)], &qword_10095FA90);
    *(void *)uint64_t v11 = v80;
    *((void *)v11 + 1) = 0;
    v11[16] = v132;
    *(_DWORD *)(v11 + 17) = v133;
    *((_DWORD *)v11 + 5) = *(_DWORD *)((char *)&v133 + 3);
    *((void *)v11 + 3) = v98;
    *((void *)v11 + 4) = v81;
    v11[40] = v131;
    v11[41] = (char)v99;
    *(_DWORD *)(v11 + 42) = v129;
    *((_WORD *)v11 + 23) = v130;
    uint64_t v95 = v100;
    *((void *)v11 + 6) = v101;
    *((void *)v11 + 7) = v95;
    v11[64] = v128;
    *(_DWORD *)(v11 + 65) = v122;
    *((_DWORD *)v11 + 17) = *(_DWORD *)((char *)&v122 + 3);
    *((void *)v11 + 9) = v112;
    v11[80] = v127;
    *(_DWORD *)(v11 + 81) = v126[0];
    *((_DWORD *)v11 + 21) = *(_DWORD *)((char *)v126 + 3);
    uint64_t v96 = v114;
    *((void *)v11 + 11) = v115;
    *((void *)v11 + 12) = v96;
    v11[104] = v113;
    LODWORD(v96) = v125[0];
    *((_DWORD *)v11 + 27) = *(_DWORD *)((char *)v125 + 3);
    *(_DWORD *)(v11 + 105) = v96;
    *((_OWORD *)v11 + 7) = xmmword_100769040;
    *((_OWORD *)v11 + 8) = xmmword_100769040;
    v11[144] = v124;
    sub_10008DB18(v93, &qword_10095FA90);
    swift_bridgeObjectRelease();
    uint64_t v51 = v108;
    sub_1000AEEC8((uint64_t)v11, v108, &qword_10095FA70);
    sub_1000AEF2C(v51, v110, &qword_10095FA70);
    swift_storeEnumTagMultiPayload();
    sub_1000E1994();
    uint64_t v52 = (uint64_t)v111;
  }
  _ConditionalContent<>.init(storage:)();
  sub_1000AEF2C(v52, v119, &qword_10095FA60);
  swift_storeEnumTagMultiPayload();
  sub_1004E747C();
  sub_1000D29C4();
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v52, &qword_10095FA60);
  return (id)sub_10008DB18(v51, &qword_10095FA70);
}

uint64_t sub_1004E5188@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v5 = *(void *)(View - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(View - 8);
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_1000AFA94(&qword_10095FBB8);
  uint64_t v7 = swift_bridgeObjectRetain();
  size_t v8 = sub_1004F8C40(v7);
  swift_bridgeObjectRelease();
  size_t v20 = v8;
  swift_getKeyPath();
  sub_1000D2848(a1, (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1000D27E0((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100509DF4;
  *(void *)(v11 + 24) = v10;
  sub_1000AFA94(&qword_10095FBC0);
  sub_1000AFA94(&qword_10095FBC8);
  sub_1000A132C(&qword_10095FBD0, &qword_10095FBC0);
  uint64_t v12 = sub_1000A1370(&qword_10095FBD8);
  uint64_t v13 = sub_1000A1370(&qword_10095FBE0);
  unint64_t v14 = sub_100509F14();
  uint64_t v18 = v13;
  unint64_t v19 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v12;
  unint64_t v19 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1004E541C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v32 = a1;
  uint64_t v33 = a4;
  uint64_t v28 = type metadata accessor for CatalogLockup();
  uint64_t v6 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v6 + 64);
  __chkstk_darwin(v28);
  char v34 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v27 = *(void *)(View - 8);
  uint64_t v9 = *(void *)(v27 + 64);
  __chkstk_darwin(View - 8);
  uint64_t v26 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095FBE0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_10095FBD8);
  uint64_t v31 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E21D8(a2, (uint64_t)v12);
  static Axis.Set.horizontal.getter();
  static Alignment.center.getter();
  unint64_t v25 = sub_100509F14();
  View.containerRelativeFrame(_:alignment:)();
  sub_10008DB18((uint64_t)v12, &qword_10095FBE0);
  uint64_t v15 = v26;
  sub_1000D2848(a3, v26, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  uint64_t v16 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v34, v24, v28);
  unint64_t v17 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v18 = (v9 + *(unsigned __int8 *)(v6 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v30 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  sub_1000D27E0(v15, v20 + v17, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v18, v34, v16);
  *(void *)(v20 + v19) = v32;
  uint64_t v35 = v10;
  unint64_t v36 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v29;
  View.onTapGesture(count:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v21);
}

uint64_t sub_1004E57E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v32 = a1;
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  __chkstk_darwin(CardActionContext);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for MetricClickElement();
  uint64_t v33 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MetricLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MediaTagStringBuilderOptions();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v15 = a1 + *(int *)(View + 28);
  uint64_t v16 = *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 48);
  uint64_t v28 = v15;
  sub_10007E4EC((void *)(v15 + v16), *(void *)(v15 + v16 + 24));
  CatalogLockup.titleTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  unint64_t v17 = (void *)dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v18 = (uint64_t)v29;
  id v19 = [v17 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  CatalogLockup.identifier.getter();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v30, enum case for MetricClickElement.lockup(_:), v36);
  sub_1004E7AF8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  uint64_t v22 = CardActionContext;
  MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)();
  uint64_t v23 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v18, a2, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v18 + *(int *)(v22 + 20), v10, v20);
  sub_1000AEF2C(v32 + *(int *)(View + 32), (uint64_t)v40, &qword_10094C750);
  if (v41)
  {
    uint64_t v24 = (char **)sub_10007E4EC(v40, v41);
    v39[3] = v22;
    unint64_t v25 = sub_1000B1710(v39);
    sub_1000D2848(v18, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
    sub_1004FA5D0(v28, (uint64_t)v39, *v24, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (uint64_t)&off_1008C2C58, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (char *)sub_1004FDF98, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
    sub_1000E370C(v18, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
    sub_10008DB18((uint64_t)v39, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v40);
  }
  else
  {
    sub_1000E370C(v18, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
    return sub_10008DB18((uint64_t)v40, &qword_10094C750);
  }
}

uint64_t sub_1004E5CF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v67 = a2;
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v3 = *(void *)(View - 8);
  uint64_t v87 = View - 8;
  uint64_t v78 = v3;
  uint64_t v76 = *(void *)(v3 + 64);
  __chkstk_darwin(View - 8);
  uint64_t v74 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000AFA94(&qword_10094E150);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  NSString v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_10095FCD0) - 8;
  __chkstk_darwin(v81);
  uint64_t v77 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_10095FCD8) - 8;
  __chkstk_darwin(v83);
  uint64_t v80 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_10095FCE0) - 8;
  uint64_t v8 = __chkstk_darwin(v85);
  uint64_t v82 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v88 = (uint64_t)&v67 - v10;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v11 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  static Font.title2.getter();
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_1000A06C0(v11, v13, v15);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v72 = Text.fontWeight(_:)();
  uint64_t v71 = v21;
  uint64_t v73 = v22;
  int v70 = v23 & 1;
  sub_1000A06C0(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v24 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v26 = v25;
  LOBYTE(v13) = v27 & 1;
  static Font.subheadline.getter();
  uint64_t v28 = Text.font(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  swift_release();
  LOBYTE(v16) = v32 & 1;
  sub_1000A06C0(v24, v26, v13);
  swift_bridgeObjectRelease();
  int v90 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v33 = Text.foregroundStyle<A>(_:)();
  uint64_t v35 = v34;
  uint64_t v69 = v36;
  int v68 = v37 & 1;
  sub_1000A06C0(v28, v30, v16);
  swift_bridgeObjectRelease();
  uint64_t v38 = v79;
  uint64_t v39 = v74;
  sub_1000D2848(v79, v74, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  unint64_t v40 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v41 = swift_allocObject();
  sub_1000D27E0(v39, v41 + v40, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
  uint64_t v42 = v75;
  Button.init(action:label:)();
  uint64_t v43 = static Color.keyTint.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v84;
  uint64_t v46 = (uint64_t)v77;
  uint64_t v47 = v86;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v77, v42, v86);
  uint64_t v48 = (uint64_t *)(v46 + *(int *)(v81 + 44));
  *uint64_t v48 = KeyPath;
  v48[1] = v43;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v47);
  uint64_t v49 = *(int *)(v87 + 36);
  LOBYTE(v49) = *(unsigned char *)(v38 + *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 28) + v49);
  uint64_t v50 = v80;
  sub_1000AEF2C(v46, v80, &qword_10095FCD0);
  *(unsigned char *)(v50 + *(int *)(v83 + 44)) = (v49 & 1) == 0;
  sub_10008DB18(v46, &qword_10095FCD0);
  LOBYTE(v49) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v59 = v82;
  sub_1000AEF2C(v50, v82, &qword_10095FCD8);
  uint64_t v60 = v59 + *(int *)(v85 + 44);
  *(unsigned char *)uint64_t v60 = v49;
  *(void *)(v60 + 8) = v52;
  *(void *)(v60 + 16) = v54;
  *(void *)(v60 + 24) = v56;
  *(void *)(v60 + 32) = v58;
  *(unsigned char *)(v60 + 40) = 0;
  sub_10008DB18(v50, &qword_10095FCD8);
  uint64_t v61 = v88;
  sub_1000AEEC8(v59, v88, &qword_10095FCE0);
  LOBYTE(v45) = v70;
  char v89 = v70;
  sub_1000AEF2C(v61, v59, &qword_10095FCE0);
  uint64_t v62 = v72;
  unint64_t v63 = v67;
  uint64_t v64 = v71;
  *uint64_t v67 = v72;
  v63[1] = v64;
  *((unsigned char *)v63 + 16) = v45;
  v63[3] = v73;
  v63[4] = v33;
  v63[5] = v35;
  LOBYTE(v38) = v68;
  *((unsigned char *)v63 + 48) = v68;
  v63[7] = v69;
  uint64_t v65 = sub_1000AFA94(&qword_10095FCE8);
  sub_1000AEF2C(v59, (uint64_t)v63 + *(int *)(v65 + 64), &qword_10095FCE0);
  sub_1000A1750(v62, v64, v45);
  swift_bridgeObjectRetain();
  sub_1000A1750(v33, v35, v38);
  swift_bridgeObjectRetain();
  sub_10008DB18(v88, &qword_10095FCE0);
  sub_10008DB18(v59, &qword_10095FCE0);
  sub_1000A06C0(v33, v35, v38);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v62, v64, v89);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004E64A4(uint64_t a1)
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  sub_1000AEF2C(a1 + *(int *)(View + 32), (uint64_t)v7, &qword_10094C750);
  if (!v8) {
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
  uint64_t v3 = sub_10007E4EC(v7, v8);
  uint64_t v4 = a1 + *(int *)(View + 28);
  memset(v6, 0, sizeof(v6));
  sub_10050457C(v4, (uint64_t)v6, *v3, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (uint64_t)&off_1008C2C58, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (void (*)(uint64_t *, char *))sub_1004FDF98, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
  sub_10008DB18((uint64_t)v6, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
}

uint64_t sub_1004E65A4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.subheadline.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1000A06C0(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

double sub_1004E6698@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t v3 = static Color.clear.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a1 + 64) = v9;
  return result;
}

uint64_t sub_1004E673C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v93 = a3;
  uint64_t v82 = a2;
  uint64_t v83 = a1;
  id v94 = a4;
  uint64_t v4 = sub_1000AFA94(&qword_10094E150);
  uint64_t v90 = *(void *)(v4 - 8);
  uint64_t v91 = v4;
  __chkstk_darwin(v4);
  uint64_t v84 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000AFA94(&qword_10095FCD0) - 8;
  __chkstk_darwin(v86);
  uint64_t v85 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_10095FCD8) - 8;
  __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000AFA94(&qword_10095FCE0) - 8;
  uint64_t v8 = __chkstk_darwin(v92);
  uint64_t v88 = (uint64_t)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v95 = (uint64_t)v76 - v10;
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v77 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  v76[1] = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [self mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t v96 = v18;
  uint64_t v97 = v20;
  sub_1000A06D0();
  uint64_t v21 = Text.init<A>(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  static Font.title2.getter();
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  char v30 = v29;
  swift_release();
  sub_1000A06C0(v21, v23, v25);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v81 = Text.fontWeight(_:)();
  uint64_t v79 = v31;
  uint64_t v80 = v32;
  int v78 = v33 & 1;
  sub_1000A06C0(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.LocalizationValue.init(_:)();
  static Locale.current.getter();
  uint64_t v96 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v97 = v34;
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  static Font.subheadline.getter();
  uint64_t v40 = Text.font(_:)();
  uint64_t v42 = v41;
  LOBYTE(v18) = v43;
  swift_release();
  sub_1000A06C0(v35, v37, v39);
  swift_bridgeObjectRelease();
  LODWORD(v96) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v44 = Text.foregroundStyle<A>(_:)();
  uint64_t v83 = v45;
  uint64_t v82 = v46;
  LODWORD(v77) = v47 & 1;
  sub_1000A06C0(v40, v42, v18 & 1);
  swift_bridgeObjectRelease();
  uint64_t v48 = v84;
  Button.init(action:label:)();
  uint64_t v49 = static Color.keyTint.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v90;
  uint64_t v51 = v91;
  uint64_t v53 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v85, v48, v91);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v86 + 44));
  *uint64_t v54 = KeyPath;
  v54[1] = v49;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
  uint64_t v55 = v93 + *(int *)(type metadata accessor for FitnessPlusUpNextView() + 28);
  LOBYTE(v55) = *(unsigned char *)(v55 + *(int *)(type metadata accessor for FitnessPlusUpNextCard() + 28));
  uint64_t v56 = v87;
  sub_1000AEF2C(v53, v87, &qword_10095FCD0);
  *(unsigned char *)(v56 + *(int *)(v89 + 44)) = (v55 & 1) == 0;
  sub_10008DB18(v53, &qword_10095FCD0);
  LOBYTE(v55) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v88;
  sub_1000AEF2C(v56, v88, &qword_10095FCD8);
  uint64_t v66 = v65 + *(int *)(v92 + 44);
  *(unsigned char *)uint64_t v66 = v55;
  *(void *)(v66 + 8) = v58;
  *(void *)(v66 + 16) = v60;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v64;
  *(unsigned char *)(v66 + 40) = 0;
  sub_10008DB18(v56, &qword_10095FCD8);
  uint64_t v67 = v95;
  sub_1000AEEC8(v65, v95, &qword_10095FCE0);
  char v68 = v78;
  LOBYTE(v96) = v78;
  sub_1000AEF2C(v67, v65, &qword_10095FCE0);
  uint64_t v69 = v94;
  uint64_t v70 = v81;
  uint64_t v71 = v79;
  *id v94 = v81;
  v69[1] = v71;
  *((unsigned char *)v69 + 16) = v68;
  v69[3] = v80;
  v69[4] = v44;
  uint64_t v72 = v83;
  v69[5] = v83;
  LOBYTE(KeyPath) = (_BYTE)v77;
  *((unsigned char *)v69 + 48) = (_BYTE)v77;
  v69[7] = v82;
  uint64_t v73 = v69;
  uint64_t v74 = sub_1000AFA94(&qword_10095FCE8);
  sub_1000AEF2C(v65, (uint64_t)v73 + *(int *)(v74 + 64), &qword_10095FCE0);
  sub_1000A1750(v70, v71, v68);
  swift_bridgeObjectRetain();
  sub_1000A1750(v44, v72, KeyPath);
  swift_bridgeObjectRetain();
  sub_10008DB18(v95, &qword_10095FCE0);
  sub_10008DB18(v65, &qword_10095FCE0);
  sub_1000A06C0(v44, v72, KeyPath);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v70, v71, v96);
  return swift_bridgeObjectRelease();
}

id sub_1004E6F24()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return (id)sub_10008DB18((uint64_t)v2, (uint64_t *)&unk_10094B790);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v9 = result;
    URL._bridgeToObjectiveC()(v8);
    uint64_t v11 = v10;
    sub_100522E98((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 openSensitiveURL:v11 withOptions:isa];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004E7144@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_1004E7230()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1004E7298@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CatalogLockup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1004E72C8()
{
  return sub_1000060BC((uint64_t (*)(uint64_t))sub_1004E7230);
}

uint64_t sub_1004E72E4()
{
  return sub_1004E730C(&qword_10095F9C8, &qword_10095F990, (void (*)(void))sub_1004E738C);
}

uint64_t sub_1004E730C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004E738C()
{
  unint64_t result = qword_10095F9D0;
  if (!qword_10095F9D0)
  {
    sub_1000A1370(&qword_10095F988);
    sub_1004E7400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F9D0);
  }
  return result;
}

unint64_t sub_1004E7400()
{
  unint64_t result = qword_10095F9D8;
  if (!qword_10095F9D8)
  {
    sub_1000A1370(&qword_10095F9E0);
    sub_1004E747C();
    sub_1000D29C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F9D8);
  }
  return result;
}

unint64_t sub_1004E747C()
{
  unint64_t result = qword_10095F9E8;
  if (!qword_10095F9E8)
  {
    sub_1000A1370(&qword_10095F9F0);
    sub_1000A1370(&qword_10095F9F8);
    sub_1000D2A38();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10095FA48, &qword_10095FA50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F9E8);
  }
  return result;
}

double sub_1004E7554@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1004E3474(a1).n128_u64[0];
  return result;
}

uint64_t sub_1004E755C()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_1004E7580@<X0>(uint64_t a1@<X8>)
{
  return sub_100091DD0(&qword_10094DFC8, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

id sub_1004E75C0(void *a1, char a2)
{
  id v14 = a1;
  uint64_t v3 = type metadata accessor for EnvironmentValues();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v12 = v14;
    return v12;
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    uint64_t v8 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v15 = sub_10008F1F4(0xD000000000000013, 0x80000001007BA960, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_1001AEDC8(v14, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)v16;
  }
}

uint64_t sub_1004E77FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100091DD0(&qword_100952468, (uint64_t (*)(void))&type metadata accessor for Calendar, 0x7261646E656C6143, 0xE800000000000000, a1);
}

id sub_1004E7830(void *a1, char a2)
{
  id v16 = a1;
  uint64_t v3 = type metadata accessor for EnvironmentValues();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v14 = v16;
    return v14;
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    uint64_t v8 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      sub_10007E2D8(0, (unint64_t *)&qword_100963830);
      uint64_t v11 = _typeName(_:qualified:)();
      uint64_t v17 = sub_10008F1F4(v11, v12, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_1001AEDC8(v16, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)v18;
  }
}

uint64_t sub_1004E7A80@<X0>(uint64_t a1@<X8>)
{
  return sub_100091DD0(&qword_10095E008, (uint64_t (*)(void))&type metadata accessor for WorkoutAnimationStyle, 0xD000000000000015, 0x80000001007CC9B0, a1);
}

uint64_t sub_1004E7AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100091DD0(&qword_100968CD0, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

unint64_t sub_1004E7AF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FC58);
  id v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100351A74(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004E7C1C(char a1, uint64_t a2, void *a3)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1004E7D90(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000AFA94(&qword_10095FFD0);
  int v41 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    uint64_t v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v23 = v22 | (v11 << 6);
      }
      else
      {
        int64_t v24 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v24 >= v38) {
          goto LABEL_36;
        }
        unint64_t v25 = v39[v24];
        ++v11;
        if (!v25)
        {
          int64_t v11 = v24 + 1;
          if (v24 + 1 >= v38) {
            goto LABEL_36;
          }
          unint64_t v25 = v39[v11];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_36:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_43;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v25 = v39[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v11 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_45;
                }
                if (v11 >= v38) {
                  goto LABEL_36;
                }
                unint64_t v25 = v39[v11];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v11 = v26;
          }
        }
LABEL_30:
        unint64_t v15 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v11 << 6);
      }
      uint64_t v31 = *(void *)(v8 + 48) + 16 * v23;
      Swift::UInt v32 = *(void *)v31;
      char v33 = *(unsigned char *)(v31 + 8);
      uint64_t v34 = *(void *)(v40 + 72);
      uint64_t v35 = *(void *)(v8 + 56) + v34 * v23;
      if (v41) {
        sub_1000D27E0(v35, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      }
      else {
        sub_1000D2848(v35, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      }
      Hasher.init(_seed:)();
      if ((v33 & 1) == 0) {
        Hasher._combine(_:)(3uLL);
      }
      Hasher._combine(_:)(v32);
      uint64_t result = Hasher._finalize()();
      uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v16 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v16 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v29 = v19 == v28;
          if (v19 == v28) {
            unint64_t v19 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v16 + 8 * v19);
        }
        while (v30 == -1);
        unint64_t v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = *(void *)(v10 + 48) + 16 * v20;
      *(void *)uint64_t v21 = v32;
      *(unsigned char *)(v21 + 8) = v33;
      uint64_t result = sub_1000D27E0((uint64_t)v7, *(void *)(v10 + 56) + v34 * v20, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_43:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1004E8158(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000AFA94(&qword_10095FD00);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_100093E78((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1004E857C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FE60);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    id v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    unint64_t v32 = *(void **)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v38 & 1) == 0)
    {
      id v34 = v30;
      sub_1001AEDAC(v32, v33);
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E8870(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FB48);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E8B44(uint64_t a1, int a2)
{
  return sub_1004EC0A0(a1, a2, &qword_10095FEF0);
}

uint64_t sub_1004E8B50(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000AFA94(&qword_10095FEE0);
  int v44 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    char v38 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v40 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v39 = (unint64_t)(v12 + 63) >> 6;
    int64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v46 = v5;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v42 = v6;
    for (i = v9; ; uint64_t v9 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_34;
        }
        unint64_t v23 = v40[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v23 = v40[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v44)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v23 = v40[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v44)
      {
        (*v45)(v8, v26, v46);
        uint64_t v27 = *(void **)(*(void *)(v9 + 56) + 8 * v21);
      }
      else
      {
        (*v41)(v8, v26, v46);
        uint64_t v27 = *(void **)(*(void *)(v9 + 56) + 8 * v21);
        id v28 = v27;
      }
      sub_100093E78(&qword_10095FEE8, (void (*)(uint64_t))&type metadata accessor for EffortUtilities.WorkoutAndActivityKey);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v45)(*(void *)(v11 + 48) + v25 * v19, v8, v46);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v27;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v42;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1004E8F6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD80);
  char v43 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v42 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v42 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v42 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    char v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v37 = *(void **)v35;
    uint64_t v36 = *(void *)(v35 + 8);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v38 = v37;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v37;
    v20[1] = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v24 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E9290(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FED8);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E9598(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FED0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v31 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      Swift::UInt v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v21);
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E9864(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD68);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_37;
  }
  char v33 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_38;
    }
    if (v22 >= v12) {
      break;
    }
    unint64_t v23 = v9[v22];
    ++v14;
    if (!v23)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v12) {
        break;
      }
      unint64_t v23 = v9[v14];
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v24 >= v12) {
          break;
        }
        unint64_t v23 = v9[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_39;
            }
            if (v14 >= v12) {
              goto LABEL_32;
            }
            unint64_t v23 = v9[v14];
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v21);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v15 = Hasher._finalize()();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v16) >> 6;
    do
    {
      if (++v18 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1004E9C74);
      }
      BOOL v27 = v18 == v26;
      if (v18 == v26) {
        unint64_t v18 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v13 + 8 * v18);
    }
    while (v28 == -1);
    unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
LABEL_8:
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(*(void *)(v7 + 48) + v19) = v29;
    *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
    ++*(void *)(v7 + 16);
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v2;
  if (v33)
  {
    uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
    if (v31 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v31;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004E9CA4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = type metadata accessor for ImpressionMetrics();
  uint64_t v5 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_1000AFA94(&qword_10095FD90);
  int v50 = a2;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  unint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    unint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_100093E78(&qword_10095FD98, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_1004EA1A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = type metadata accessor for ImpressionMetrics();
  uint64_t v5 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000AFA94(&qword_10095FEC8);
  int v40 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    unint64_t v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    BOOL v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1004EA548(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DateComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000AFA94(&qword_10095FDC8);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_100093E78(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1004EA96C(uint64_t a1, int a2)
{
  return sub_1004EC0A0(a1, a2, &qword_10095FDD0);
}

uint64_t sub_1004EA978(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FEC0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EAC24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FEB0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v22 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v18);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v22);
      uint64_t result = Hasher._finalize()();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
      uint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v15);
      void *v16 = v25;
      v16[1] = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EAEF8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FEB8);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v36 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v18 >= v12) {
          goto LABEL_31;
        }
        unint64_t v19 = v36[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v19 = v36[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v36, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v36 = -1 << v35;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v19 = v36[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      Swift::UInt v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v17);
      Swift::UInt v22 = (uint64_t *)(*(void *)(v5 + 56) + 40 * v17);
      uint64_t v24 = v22[3];
      uint64_t v23 = v22[4];
      uint64_t v26 = v22[1];
      uint64_t v25 = v22[2];
      uint64_t v27 = *v22;
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v21);
      uint64_t result = Hasher._finalize()();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v13 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
      unint64_t v15 = (void *)(*(void *)(v7 + 56) + 40 * v14);
      *unint64_t v15 = v27;
      v15[1] = v26;
      long long v15[2] = v25;
      v15[3] = v24;
      v15[4] = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EB1F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FFC0);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_35;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_35;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_35:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_42;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v32) {
                  goto LABEL_35;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 16 * v19;
      Swift::UInt v28 = *(void *)v27;
      char v29 = *(unsigned char *)(v27 + 8);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      if ((v29 & 1) == 0) {
        Hasher._combine(_:)(3uLL);
      }
      Hasher._combine(_:)(v28);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v28;
      *(unsigned char *)(v17 + 8) = v29;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EB4F4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int v44 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v45 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = *v6;
  sub_1000AFA94(a4);
  int v46 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v16 = result;
  if (*(void *)(v14 + 16))
  {
    int64_t v17 = 0;
    uint64_t v18 = *(void *)(v14 + 64);
    int64_t v43 = (void *)(v14 + 64);
    uint64_t v19 = 1 << *(unsigned char *)(v14 + 32);
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & v18;
    int64_t v41 = v6;
    int64_t v42 = (unint64_t)(v19 + 63) >> 6;
    uint64_t v22 = result + 64;
    while (1)
    {
      if (v21)
      {
        unint64_t v24 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v25 = v24 | (v17 << 6);
      }
      else
      {
        int64_t v26 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v43;
        if (v26 >= v42) {
          goto LABEL_34;
        }
        unint64_t v27 = v43[v26];
        ++v17;
        if (!v27)
        {
          int64_t v17 = v26 + 1;
          if (v26 + 1 >= v42) {
            goto LABEL_34;
          }
          unint64_t v27 = v43[v17];
          if (!v27)
          {
            int64_t v28 = v26 + 2;
            if (v28 >= v42)
            {
LABEL_34:
              if ((v46 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v9 = v41;
                goto LABEL_41;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v14 + 32);
              if (v39 >= 64) {
                bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v43 = -1 << v39;
              }
              uint64_t v9 = v41;
              *(void *)(v14 + 16) = 0;
              break;
            }
            unint64_t v27 = v43[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v17 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_43;
                }
                if (v17 >= v42) {
                  goto LABEL_34;
                }
                unint64_t v27 = v43[v17];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v28;
          }
        }
LABEL_21:
        unint64_t v21 = (v27 - 1) & v27;
        unint64_t v25 = __clz(__rbit64(v27)) + (v17 << 6);
      }
      Swift::UInt v29 = *(unsigned __int8 *)(*(void *)(v14 + 48) + v25);
      uint64_t v30 = *(void *)(v45 + 72);
      uint64_t v31 = *(void *)(v14 + 56) + v30 * v25;
      if (v46) {
        sub_1000D27E0(v31, (uint64_t)v13, a5);
      }
      else {
        sub_1000D2848(v31, (uint64_t)v13, v44);
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v29);
      uint64_t result = Hasher._finalize()();
      uint64_t v32 = -1 << *(unsigned char *)(v16 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v22 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v23 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(unsigned char *)(*(void *)(v16 + 48) + v23) = v29;
      uint64_t result = sub_1000D27E0((uint64_t)v13, *(void *)(v16 + 56) + v30 * v23, a5);
      ++*(void *)(v16 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v9 = v16;
  return result;
}

unint64_t sub_1004EB870(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FEA8);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void **)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        id v21 = v20;
      }
      unint64_t result = sub_1004E7C1C(v19, (uint64_t)v20, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_1004EBA50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FDE8);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    Swift::UInt v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EBD68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD20);
  char v40 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v39 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v38) {
          goto LABEL_33;
        }
        unint64_t v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v24 = v39[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v37;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v24 = v39[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v34 = *(void *)(v5 + 56) + v30;
      uint64_t v35 = *(void **)v34;
      char v36 = *(unsigned char *)(v34 + 8);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1001AEDAC(v35, v36);
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 16 * v17;
      unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      void *v19 = v33;
      v19[1] = v32;
      uint64_t v20 = *(void *)(v7 + 56) + v18;
      *(void *)uint64_t v20 = v35;
      *(unsigned char *)(v20 + 8) = v36;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EC088(uint64_t a1, int a2)
{
  return sub_1004EC0A0(a1, a2, &qword_10095FE88);
}

uint64_t sub_1004EC094(uint64_t a1, int a2)
{
  return sub_1004EC0A0(a1, a2, &qword_10095FE90);
}

uint64_t sub_1004EC0A0(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  sub_1000AFA94(a3);
  int v48 = a2;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  int v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int64_t v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  unint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    unint64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    sub_100093E78(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  unint64_t v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v5 = v14;
  return result;
}

uint64_t sub_1004EC4C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_1009582B0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10005C2B0(v24, v35);
      }
      else
      {
        sub_10008F484((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10005C2B0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EC7C8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000AFA94(&qword_10095FD10);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_100093E78((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1004ECBEC(uint64_t a1, int a2)
{
  return sub_1004EE7B8(a1, a2, (uint64_t (*)(void))&type metadata accessor for CatalogWorkout, &qword_10095FC50);
}

uint64_t sub_1004ECC0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FDE0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_48;
  }
  char v37 = a2;
  int64_t v8 = 0;
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_50;
    }
    if (v18 >= v38) {
      break;
    }
    unint64_t v19 = v9[v18];
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v38) {
        break;
      }
      unint64_t v19 = v9[v8];
      if (!v19)
      {
        int64_t v20 = v18 + 2;
        if (v20 >= v38) {
          break;
        }
        unint64_t v19 = v9[v20];
        if (!v19)
        {
          while (1)
          {
            int64_t v8 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_51;
            }
            if (v8 >= v38) {
              goto LABEL_42;
            }
            unint64_t v19 = v9[v8];
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v8 = v20;
      }
    }
LABEL_21:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(v5 + 48) + 16 * v17;
    unsigned int v22 = *(unsigned __int16 *)(v21 + 8);
    Swift::UInt v23 = *(void *)v21;
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    Hasher.init(_seed:)();
    switch(v22 >> 8)
    {
      case 2u:
        Swift::UInt v25 = 0;
        goto LABEL_30;
      case 3u:
        Swift::UInt v25 = 1;
        goto LABEL_30;
      case 4u:
        Swift::UInt v25 = 3;
        goto LABEL_30;
      case 5u:
        Swift::UInt v25 = 4;
        goto LABEL_30;
      case 6u:
        Swift::UInt v25 = 5;
LABEL_30:
        Hasher._combine(_:)(v25);
        break;
      default:
        Hasher._combine(_:)(2uLL);
        Hasher._combine(_:)(v23);
        if (v22 == 2)
        {
          Swift::UInt8 v26 = 0;
        }
        else
        {
          Hasher._combine(_:)(1u);
          Swift::UInt8 v26 = v22 & 1;
        }
        Hasher._combine(_:)(v26);
        Hasher._combine(_:)(BYTE1(v22) & 1);
        uint64_t v9 = (void *)(v5 + 64);
        break;
    }
    Swift::Int v27 = Hasher._finalize()();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v31 = 0;
    unint64_t v32 = (unint64_t)(63 - v28) >> 6;
    do
    {
      if (++v30 == v32 && (v31 & 1) != 0)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        JUMPOUT(0x1004ECFA4);
      }
      BOOL v33 = v30 == v32;
      if (v30 == v32) {
        unint64_t v30 = 0;
      }
      v31 |= v33;
      uint64_t v34 = *(void *)(v13 + 8 * v30);
    }
    while (v34 == -1);
    unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
LABEL_7:
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 16 * v14;
    *(void *)uint64_t v15 = v23;
    *(_WORD *)(v15 + 8) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v24;
    ++*(void *)(v7 + 16);
  }
LABEL_42:
  if (v37)
  {
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      bzero(v9, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v35;
    }
    uint64_t v3 = v2;
    *(void *)(v5 + 16) = 0;
LABEL_48:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004ECFB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FDD8);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    uint64_t v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_34;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_41;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      int v21 = *(unsigned __int8 *)(v20 + 8);
      Swift::UInt v22 = *(void *)v20;
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v22);
      if (v21 == 2)
      {
        Swift::UInt8 v24 = 0;
      }
      else
      {
        Swift::UInt8 v24 = v21 & 1;
        Hasher._combine(_:)(1u);
      }
      Hasher._combine(_:)(v24);
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004ED2C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FB40);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    Swift::UInt v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  Swift::UInt v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004ED5DC(uint64_t a1, char a2)
{
  return sub_1004EEF94(a1, a2, &qword_10095FD88);
}

uint64_t sub_1004ED5E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_1009600A0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v20);
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(unsigned char *)(*(void *)(v7 + 56) + v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004ED8B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD78);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  uint64_t *v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      int64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *int64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EDB68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD70);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EDE20(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000AFA94(&qword_10095FCF8);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_100093E78((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1004EE244(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000AFA94(&qword_10095FCF0);
  int v41 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  v37[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  swift_retain();
  int64_t v16 = 0;
  v37[1] = "groundContactTime";
  void v37[2] = "";
LABEL_9:
  if (v14)
  {
    unint64_t v22 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v23 = v22 | (v16 << 6);
    goto LABEL_31;
  }
  int64_t v24 = v16 + 1;
  if (__OFADD__(v16, 1)) {
    goto LABEL_43;
  }
  if (v24 >= v38)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v37[0];
    unint64_t v25 = v39;
    if (v41)
    {
LABEL_38:
      uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
      if (v35 >= 64) {
        bzero(v25, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v25 = -1 << v35;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v25 = v39;
    unint64_t v26 = v39[v24];
    ++v16;
    if (v26) {
      goto LABEL_30;
    }
    int64_t v16 = v24 + 1;
    if (v24 + 1 >= v38) {
      goto LABEL_35;
    }
    unint64_t v26 = v39[v16];
    if (v26)
    {
LABEL_30:
      unint64_t v14 = (v26 - 1) & v26;
      unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
      char v32 = *(unsigned char *)(*(void *)(v8 + 48) + v23);
      uint64_t v33 = *(void *)(v40 + 72);
      uint64_t v34 = *(void *)(v8 + 56) + v33 * v23;
      if (v41) {
        sub_1000D27E0(v34, (uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
      }
      else {
        sub_1000D2848(v34, (uint64_t)v7, type metadata accessor for WorkoutChartViewModel);
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v17 = Hasher._finalize()();
      uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v20 == v29;
        if (v20 == v29) {
          unint64_t v20 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v20);
        if (v31 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v31)) + (v20 << 6);
LABEL_8:
          *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          *(unsigned char *)(*(void *)(v10 + 48) + v21) = v32;
          sub_1000D27E0((uint64_t)v7, *(void *)(v10 + 56) + v33 * v21, type metadata accessor for WorkoutChartViewModel);
          ++*(void *)(v10 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1004EE76CLL);
    }
    int64_t v27 = v24 + 2;
    if (v27 < v38)
    {
      unint64_t v26 = v39[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v16 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_44;
          }
          if (v16 >= v38) {
            goto LABEL_35;
          }
          unint64_t v26 = v39[v16];
          ++v27;
          if (v26) {
            goto LABEL_30;
          }
        }
      }
      int64_t v16 = v27;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = (uint64_t *)v37[0];
    if (v41) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1004EE798(uint64_t a1, int a2)
{
  return sub_1004EE7B8(a1, a2, (uint64_t (*)(void))&type metadata accessor for CatalogLockup, &qword_10095FD30);
}

uint64_t sub_1004EE7B8(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = a3(0);
  uint64_t v8 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v44 - v9;
  uint64_t v10 = *v4;
  sub_1000AFA94(a4);
  int v50 = a2;
  uint64_t v11 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  int v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  Swift::Int v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    unint64_t v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    unint64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    void *v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  unint64_t v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_1004EEBA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FD28);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v40 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v41 = v5;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v43 = v13;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        if (v18 >= v39) {
          goto LABEL_38;
        }
        unint64_t v19 = v40[v18];
        int64_t v20 = v13 + 1;
        if (!v19)
        {
          int64_t v20 = v13 + 2;
          if (v13 + 2 >= v39) {
            goto LABEL_38;
          }
          unint64_t v19 = v40[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 3;
            if (v13 + 3 >= v39)
            {
LABEL_38:
              swift_release();
              uint64_t v3 = v2;
              if (v42)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
                if (v38 >= 64) {
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v40 = -1 << v38;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_45;
                }
                if (v20 >= v39) {
                  goto LABEL_38;
                }
                unint64_t v19 = v40[v20];
                ++v21;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v20 = v13 + 3;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        int64_t v43 = v20;
        unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      uint64_t v22 = *(void *)(v5 + 56);
      uint64_t v23 = *(void *)(v5 + 48) + 40 * v17;
      uint64_t v25 = *(void *)v23;
      unint64_t v24 = *(void **)(v23 + 8);
      int v26 = *(unsigned __int8 *)(v23 + 16);
      Swift::UInt v27 = *(unsigned __int8 *)(v23 + 17);
      uint64_t v29 = *(void *)(v23 + 24);
      uint64_t v28 = *(void *)(v23 + 32);
      uint64_t v30 = *(void *)(v22 + 8 * v17);
      if ((v42 & 1) == 0)
      {
        sub_100091494(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      sub_100091494(v25, (uint64_t)v24, v26);
      v44._countAndFlagsBits = v25;
      v44._object = v24;
      sub_1000932C0(v44, v26);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      if (!v26 || v26 == 2)
      {
        Hasher._combine(_:)(v25);
      }
      else if (v26 == 1)
      {
        String.hash(into:)();
      }
      Hasher._combine(_:)(v27);
      sub_1000917F8(v25, (uint64_t)v24, v26);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v11 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
      *(void *)uint64_t v15 = v25;
      *(void *)(v15 + 8) = v24;
      *(unsigned char *)(v15 + 16) = v26;
      *(unsigned char *)(v15 + 17) = v27;
      *(void *)(v15 + 24) = v29;
      *(void *)(v15 + 32) = v28;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v30;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v41;
      int64_t v13 = v43;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1004EEF88(uint64_t a1, char a2)
{
  return sub_1004EEF94(a1, a2, &qword_10095FD08);
}

uint64_t sub_1004EEF94(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000AFA94(a3);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  BOOL v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    unint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1004EF2A0(uint64_t a1, Swift::UInt a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v9 = a3 & 1;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10052931C(a2, a3 & 1);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for MetricDetailViewModel();
      return sub_10050A758(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1004F1E18();
    goto LABEL_7;
  }
  sub_1004E7D90(v15, a4 & 1);
  unint64_t v22 = sub_10052931C(a2, v9);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1004F15D8(v12, a2, v9, a1, v18);
}

void sub_1004EF404(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100529660(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for Date, &qword_10095FD00);
    goto LABEL_7;
  }
  sub_1004E8158(v17, a3 & 1);
  unint64_t v22 = sub_100529660(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1004F1D5C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for Date);
}

void sub_1004EF5DC(uint64_t a1, char a2, void *a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_100529734((uint64_t)a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 < v14 || (a4 & 1) == 0)
  {
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_1004F20CC();
      goto LABEL_9;
    }
    sub_1004E857C(v14, a4 & 1);
    unint64_t v17 = sub_100529734((uint64_t)a3);
    if ((v15 & 1) == (v18 & 1))
    {
      unint64_t v11 = v17;
      goto LABEL_9;
    }
LABEL_15:
    type metadata accessor for CatalogItemViewModel();
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
LABEL_9:
  int v19 = a2 & 1;
  uint64_t v20 = *v5;
  if (v15)
  {
    BOOL v21 = v19 != 0;
    uint64_t v22 = v20[7] + 16 * v11;
    sub_1001AEDC8(*(id *)v22, *(unsigned char *)(v22 + 8));
    *(void *)uint64_t v22 = a1;
    *(unsigned char *)(v22 + 8) = v21;
  }
  else
  {
    sub_1004F168C(v11, (uint64_t)a3, a1, v19, v20);
    id v23 = a3;
  }
}

uint64_t sub_1004EF72C(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000D5C14(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F2298();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1004E8870(result, a3 & 1);
  uint64_t result = sub_1000D5C14(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1004EF864(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1005299A0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004F243C();
    goto LABEL_7;
  }
  sub_1004E8B50(v17, a3 & 1);
  unint64_t v22 = sub_1005299A0(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  BOOL v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1004F1720(v14, (uint64_t)v11, a1, v20);
}

void sub_1004EFA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1000DA1C0(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1004F26D4();
LABEL_7:
    BOOL v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;

      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return;
    }
    goto LABEL_11;
  }
  sub_1004E8F6C(v17, a5 & 1);
  unint64_t v22 = sub_1000DA1C0(a3, a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  BOOL v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v24 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v24 = a3;
  v24[1] = a4;
  int64_t v25 = (void *)(v20[7] + 16 * v14);
  *int64_t v25 = a1;
  v25[1] = a2;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;

  swift_bridgeObjectRetain();
}

uint64_t sub_1004EFB94(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100529B44(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1004F2D88();
      goto LABEL_7;
    }
    sub_1004E9CA4(v17, a3 & 1);
    unint64_t v28 = sub_100529B44(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      BOOL v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1004F1870(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = type metadata accessor for ImpressionMetrics();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

uint64_t sub_1004EFD98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100005758(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004F3130();
      goto LABEL_7;
    }
    sub_1004EA1A0(v13, a3 & 1);
    unint64_t v24 = sub_100005758(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = type metadata accessor for ImpressionMetrics();
    uint64_t v19 = *(void *)(v18 - 8);
    BOOL v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_1004F1964(v10, a2, a1, v16);
}

void sub_1004EFF00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_100529888(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for DateComponents, &qword_10095FDC8);
    goto LABEL_7;
  }
  sub_1004EA548(v17, a3 & 1);
  unint64_t v22 = sub_100529888(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  BOOL v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1004F1D5C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for DateComponents);
}

uint64_t sub_1004F00D8(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1000D5C14(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      BOOL v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for TrendListMetric();
        return sub_10050A758(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      }
      return sub_1004F1A60(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004F3AEC((uint64_t (*)(void))type metadata accessor for TrendListMetric, &qword_10095FEA0, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      goto LABEL_7;
    }
    sub_1004EB4F4(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for TrendListMetric, &qword_10095FEA0, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    unint64_t v20 = sub_1000D5C14(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_1004F1A60(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F02BC(unsigned __int8 a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000D5C14(a1);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F35B8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (double *)(v18[7] + 16 * v12);
      double *v19 = a3;
      v19[1] = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a1;
    char v21 = (double *)(v18[7] + 16 * v12);
    double *v21 = a3;
    v21[1] = a4;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1004EAC24(result, a2 & 1);
  uint64_t result = sub_1000D5C14(a1);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F03F0(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000D5C14(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F3748();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 40 * v10;
      long long v18 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(void *)(v17 + 32) = *(void *)(a1 + 32);
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v20 = v16[7] + 40 * v10;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 16) = v21;
    *(void *)(v20 + 32) = *(void *)(a1 + 32);
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      _OWORD v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1004EAEF8(result, a3 & 1);
  uint64_t result = sub_1000D5C14(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_1004F0544(uint64_t a1, Swift::UInt a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v9 = a3 & 1;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10052931C(a2, a3 & 1);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    long long v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1004F38EC();
    goto LABEL_7;
  }
  sub_1004EB1F4(v15, a4 & 1);
  unint64_t v21 = sub_10052931C(a2, v9);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  long long v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1004F1A10(v12, a2, v9, a1, v18);
}

uint64_t sub_1004F067C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1000D5C14(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      char v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for MetricDetailViewModel();
        return sub_10050A758(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      }
      return sub_1004F1A60(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004F3AEC((uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, &qword_10095FFC8, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      goto LABEL_7;
    }
    sub_1004EB4F4(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, &qword_10095FFC8, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    unint64_t v20 = sub_1000D5C14(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_1004F1A60(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1004F0860(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = sub_1000DA1C0(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1004F40A0();
      goto LABEL_9;
    }
    sub_1004EBD68(v17, a5 & 1);
    unint64_t v20 = sub_1000DA1C0(a3, a4);
    if ((v18 & 1) == (v21 & 1))
    {
      unint64_t v14 = v20;
      goto LABEL_9;
    }
LABEL_15:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
LABEL_9:
  int v22 = a2 & 1;
  BOOL v23 = *v6;
  if (v18)
  {
    BOOL v24 = v22 != 0;
    uint64_t v25 = v23[7] + 16 * v14;
    sub_1001AEDC8(*(id *)v25, *(unsigned char *)(v25 + 8));
    *(void *)uint64_t v25 = a1;
    *(unsigned char *)(v25 + 8) = v24;
  }
  else
  {
    sub_1004F1B08(v14, a3, a4, a1, v22, v23);
    swift_bridgeObjectRetain();
  }
}

_OWORD *sub_1004F09C0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1000DA1C0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1004F46CC();
      goto LABEL_7;
    }
    sub_1004EC4C8(v15, a4 & 1);
    unint64_t v21 = sub_1000DA1C0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v19);
    return sub_10005C2B0(a1, v19);
  }
LABEL_13:
  sub_1004F1B60(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

void sub_1004F0B14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10008F618(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for UUID, &qword_10095FD10);
    goto LABEL_7;
  }
  sub_1004EC7C8(v17, a3 & 1);
  unint64_t v22 = sub_10008F618(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1004F1D5C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1004F0CEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1000DA1C0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1004F5F08((uint64_t (*)(void))&type metadata accessor for Trainer, &qword_10095FD18);
      goto LABEL_7;
    }
    sub_1004EE7B8(v15, a4 & 1, (uint64_t (*)(void))&type metadata accessor for Trainer, &qword_10095FD18);
    unint64_t v26 = sub_1000DA1C0(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = type metadata accessor for Trainer();
    uint64_t v21 = *(void *)(v20 - 8);
    unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_1004F1BCC(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1004F0EA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000DA1C0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1004F53A8();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1004ED2C4(v15, a4 & 1);
  unint64_t v21 = sub_1000DA1C0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1004F1014(char a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000D5C14(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F556C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(unsigned char *)(v16[7] + v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      _OWORD v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1004ED5E8(result, a3 & 1);
  uint64_t result = sub_1000D5C14(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F1140(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100005758(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F58A8();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      _OWORD v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1004EDB68(result, a3 & 1);
  uint64_t result = sub_100005758(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F127C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_100529660(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004F5A4C();
    goto LABEL_7;
  }
  sub_1004EDE20(v17, a3 & 1);
  unint64_t v23 = sub_100529660(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1004F1D5C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1004F1438(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10052A09C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      BOOL v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for WorkoutChartViewModel(0);
        return sub_10050A758(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for WorkoutChartViewModel);
      }
      return sub_1004F1A60(v10, a2, a1, v16, type metadata accessor for WorkoutChartViewModel, type metadata accessor for WorkoutChartViewModel);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004F3AEC(type metadata accessor for WorkoutChartViewModel, &qword_10095FCF0, type metadata accessor for WorkoutChartViewModel, type metadata accessor for WorkoutChartViewModel);
      goto LABEL_7;
    }
    sub_1004EE244(v13, a3 & 1);
    uint64_t v20 = sub_10052A09C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_1004F1A60(v10, a2, a1, v16, type metadata accessor for WorkoutChartViewModel, type metadata accessor for WorkoutChartViewModel);
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F15D8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a5[6] + 16 * a1;
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = a3 & 1;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for MetricDetailViewModel();
  uint64_t result = sub_1000D27E0(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1004F168C(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = a5[7] + 16 * result;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4 & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1004F16DC(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_1004F1720(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1004F17D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_1004F1828(unint64_t result, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  a4[(result >> 6) + 8] |= 1 << result;
  BOOL v5 = (void *)(a4[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1004F1870(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for IndexPath();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1004F1964(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for ImpressionMetrics();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1004F1A10(unint64_t result, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = a3 & 1;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1004F1A60(unint64_t a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_1000D27E0(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_1004F1B08(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = a6[7] + 16 * result;
  *(void *)uint64_t v7 = a4;
  *(unsigned char *)(v7 + 8) = a5 & 1;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

_OWORD *sub_1004F1B60(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10005C2B0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1004F1BCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Trainer();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1004F1C7C(unint64_t result, uint64_t a2, __int16 a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(_WORD *)(v5 + 8) = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1004F1CC8(unint64_t result, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1004F1D14(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1004F1D5C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a4[6];
  uint64_t v10 = a5(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a2, v10);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

void *sub_1004F1E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MetricDetailViewModel();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FFD0);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  char v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v5 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1000D2848(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    uint64_t v22 = *(void *)(v7 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(unsigned char *)(v22 + 8) = v20;
    uint64_t result = (void *)sub_1000D27E0((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1004F20AC()
{
  return sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for Date, &qword_10095FD00);
}

void *sub_1004F20CC()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FE60);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(void **)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(unsigned char *)(v22 + 8) = v21;
    id v23 = v17;
    uint64_t result = sub_1001AEDAC(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F2298()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FB48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1004F243C()
{
  uint64_t v1 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FEE0);
  id v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *id v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    unint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1004F26D4()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FD80);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v22 = *(void **)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    id v23 = (void *)(*(void *)(v4 + 48) + v16);
    *id v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F288C()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FED8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F2A3C()
{
  return sub_1004F2A54(&qword_10095FED0);
}

void *sub_1004F2A48()
{
  return sub_1004F2A54(&qword_10095FD68);
}

void *sub_1004F2A54(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000AFA94(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = v21 + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F2BDC()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FE80);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F2D88()
{
  uint64_t v42 = type metadata accessor for ImpressionMetrics();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for IndexPath();
  uint64_t v44 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FD90);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    uint64_t *v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  unint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    int64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1004F3130()
{
  uint64_t v1 = type metadata accessor for ImpressionMetrics();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FEC8);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1004F33C0()
{
  return sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for DateComponents, &qword_10095FDC8);
}

void *sub_1004F33E0()
{
  return sub_1004F3AEC((uint64_t (*)(void))type metadata accessor for TrendListMetric, &qword_10095FEA0, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
}

void *sub_1004F3428()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FEC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F35B8()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FEB0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F3748()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FEB8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v24 = __clz(__rbit64(v22));
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = v24 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v17 = *(void *)(v16 + 32);
    long long v18 = *(_OWORD *)v16;
    long long v19 = *(_OWORD *)(v16 + 16);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v20 = *(void *)(v4 + 56) + 40 * v15;
    *(_OWORD *)uint64_t v20 = v18;
    *(_OWORD *)(v20 + 16) = v19;
    *(void *)(v20 + 32) = v17;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F38EC()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FFC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F3AA4()
{
  return sub_1004F3AEC((uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, &qword_10095FFC8, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
}

void *sub_1004F3AEC(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  sub_1000AFA94(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = static _DictionaryStorage.copy(original:)();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  int64_t v29 = v6;
  id result = (void *)(v11 + 64);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v10 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v21) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v14 + 8 * v26);
    ++v17;
    if (!v27)
    {
      int64_t v17 = v26 + 1;
      if (v26 + 1 >= v21) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v14 + 8 * v17);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_12:
    char v24 = *(unsigned char *)(*(void *)(v10 + 48) + v23);
    unint64_t v25 = *(void *)(v30 + 72) * v23;
    sub_1000D2848(*(void *)(v10 + 56) + v25, (uint64_t)v9, v31);
    *(unsigned char *)(*(void *)(v12 + 48) + v23) = v24;
    id result = (void *)sub_1000D27E0((uint64_t)v9, *(void *)(v12 + 56) + v25, v32);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v21)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v14 + 8 * v28);
  if (v27)
  {
    int64_t v17 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v14 + 8 * v17);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1004F3D44()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FEA8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F3EE8()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FDE8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F40A0()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FD20);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    int64_t v21 = *(void **)(v17 + v16);
    char v22 = *(unsigned char *)(v17 + v16 + 8);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v20;
    v23[1] = v19;
    uint64_t v24 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v24 = v21;
    *(unsigned char *)(v24 + 8) = v22;
    swift_bridgeObjectRetain();
    id result = sub_1001AEDAC(v21, v22);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F4270()
{
  uint64_t v1 = type metadata accessor for MetricDetailViewModel();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095C4F8);
  int64_t v25 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v25 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  uint64_t v26 = v4 + 64;
  int64_t v27 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 24 * v14;
    uint64_t v16 = *(void *)(v4 + 48) + 24 * v14;
    char v17 = *(unsigned char *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    unint64_t v20 = *(void *)(v28 + 72) * v14;
    sub_1000D2848(*(void *)(v4 + 56) + v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    uint64_t v21 = *(void *)(v6 + 48) + v15;
    *(unsigned char *)uint64_t v21 = v17;
    *(void *)(v21 + 8) = v18;
    *(unsigned char *)(v21 + 16) = v19;
    id result = (void *)sub_1000D27E0((uint64_t)v3, *(void *)(v6 + 56) + v20, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v27) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1004F4508()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FE98);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v22 = v18;
    *(void *)(v22 + 8) = v19;
    *(unsigned char *)(v22 + 16) = v17;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F46CC()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_1009582B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10008F484(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_10005C2B0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1004F48B4()
{
  return sub_1004F48D4((uint64_t (*)(void))&type metadata accessor for UUID, &qword_10095FD10);
}

id sub_1004F48D4(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v26 - v6;
  sub_1000AFA94(a2);
  int64_t v27 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = static _DictionaryStorage.copy(original:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *int64_t v27 = v10;
    return result;
  }
  id result = (id)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v28 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v31 = v5 + 16;
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = v5 + 32;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v20, v4);
    uint64_t v21 = 8 * v19;
    int64_t v22 = *(void **)(*(void *)(v8 + 56) + v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v20, v7, v4);
    *(void *)(*(void *)(v10 + 56) + v21) = v22;
    id result = v22;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v29) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F4B6C()
{
  sub_1000AFA94(&qword_10095FE78);
  unint64_t v24 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *unint64_t v24 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v25 = v1 + 64;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v26) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v7;
    if (!v22)
    {
      int64_t v7 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v7);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v12 = __clz(__rbit64(v22)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 24 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + 24 * v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 17);
    char v18 = *(unsigned char *)(v14 + 16);
    uint64_t v19 = 40 * v12;
    sub_10008E75C(*(void *)(v1 + 56) + 40 * v12, (uint64_t)v27);
    uint64_t v20 = *(void *)(v3 + 48) + v13;
    *(void *)uint64_t v20 = v15;
    *(void *)(v20 + 8) = v16;
    *(unsigned char *)(v20 + 16) = v18;
    *(unsigned char *)(v20 + 17) = v17;
    sub_100093E60(v27, *(void *)(v3 + 56) + v19);
    id result = (void *)sub_100091494(v15, v16, v18);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v7 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v7 >= v26) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v7);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F4D74()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FE70);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_10008E75C(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = (void *)sub_100093E60(v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1004F5020()
{
  return sub_1004F5F08((uint64_t (*)(void))&type metadata accessor for Trainer, &qword_10095FD18);
}

void *sub_1004F5040()
{
  return sub_1004F5F08((uint64_t (*)(void))&type metadata accessor for CatalogWorkout, &qword_10095FC50);
}

void *sub_1004F5060()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FDE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOWORD(v17) = *(_WORD *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(_WORD *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F5204()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FDD8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F53A8()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FB40);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1004F5560()
{
  return sub_1004F63AC(&qword_10095FD88);
}

void *sub_1004F556C()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_1009600A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F56F8()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FD78);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    void *v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F58A8()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FD70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F5A4C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10095FCF8);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1004F5CE4()
{
  return sub_1004F3AEC(type metadata accessor for WorkoutChartViewModel, &qword_10095FCF0, type metadata accessor for WorkoutChartViewModel, type metadata accessor for WorkoutChartViewModel);
}

void *sub_1004F5D2C()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FC58);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F5EE8()
{
  return sub_1004F5F08((uint64_t (*)(void))&type metadata accessor for CatalogLockup, &qword_10095FD30);
}

void *sub_1004F5F08(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v39 = a1(0);
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v33 - v5;
  sub_1000AFA94(a2);
  int64_t v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = static _DictionaryStorage.copy(original:)();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    id result = (void *)swift_release();
    uint64_t v32 = v40;
    uint64_t v31 = v34;
LABEL_28:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  id result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    uint64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    int64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *int64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004F61CC()
{
  uint64_t v1 = v0;
  sub_1000AFA94(&qword_10095FD28);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 17);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    uint64_t v23 = 8 * v15;
    uint64_t v24 = *(void *)(*(void *)(v2 + 56) + v23);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    char v26 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v25 = *(void *)v17;
    *(void *)(v25 + 8) = v19;
    *(unsigned char *)(v25 + 16) = v26;
    *(unsigned char *)(v25 + 17) = v20;
    *(void *)(v25 + 24) = v21;
    *(void *)(v25 + 32) = v22;
    *(void *)(*(void *)(v4 + 56) + v23) = v24;
    sub_100091494(v18, v19, v26);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1004F63A0()
{
  return sub_1004F63AC(&qword_10095FD08);
}

id sub_1004F63AC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000AFA94(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1004F6560@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004F658C()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1004F65B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1001F11C4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1004F6630(v6);
  return specialized ContiguousArray._endMutation()();
}

char *sub_1004F6630(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = (char *)_minimumMergeRunLength(_:)(v3);
  if ((uint64_t)result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_155;
    }
    if (v3) {
      return sub_1004F6F50(0, v3, 1, a1);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_169:
      uint64_t result = (char *)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      char v128 = result;
      Swift::Int v133 = v3;
      NSString v125 = a1;
      if (v3 >= 2)
      {
        uint64_t v6 = v5 >> 1;
        sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
        uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
        *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
        long long v136 = (id *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v141 = v7;
LABEL_12:
        uint64_t v9 = 0;
        uint64_t v10 = *a1;
        uint64_t v126 = *a1 + 16;
        uint64_t v127 = *a1 - 8;
        unint64_t v8 = (char *)_swiftEmptyArrayStorage;
        uint64_t v11 = &selRef_configurePlayer;
        Swift::Int v12 = v133;
        uint64_t v137 = *a1;
        while (1)
        {
          Swift::Int v14 = v9 + 1;
          uint64_t v132 = v9;
          if (v9 + 1 >= v12) {
            goto LABEL_49;
          }
          int v129 = v8;
          unint64_t v15 = *(void **)(v10 + 8 * v9);
          id v16 = *(id *)(v10 + 8 * v14);
          id v17 = v15;
          id v18 = [v16 v11[172]];
          if (!v18) {
            goto LABEL_167;
          }
          uint64_t v19 = v18;
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          id v23 = [v17 v11[172]];
          if (!v23)
          {
LABEL_168:
            __break(1u);
            goto LABEL_169;
          }
          unint64_t v24 = v23;
          uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v27 = v26;

          BOOL v28 = v20 == v25 && v22 == v27;
          uint64_t v9 = v132;
          if (v28) {
            int v134 = 0;
          }
          else {
            int v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          Swift::Int v14 = v132 + 2;
          uint64_t v11 = &selRef_configurePlayer;
          if (v132 + 2 >= v133) {
            goto LABEL_40;
          }
          int64_t v29 = (id *)(v126 + 8 * v132);
          while (1)
          {
            Swift::Int v138 = v14;
            uint64_t v31 = *(v29 - 1);
            id v32 = *v29;
            id v33 = v31;
            id v34 = [v32 v11[172]];
            if (!v34) {
              goto LABEL_163;
            }
            uint64_t v35 = v34;
            uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v38 = v37;

            id v39 = [v33 v11[172]];
            if (!v39) {
              goto LABEL_164;
            }
            uint64_t v40 = v39;
            uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v43 = v42;

            if (v36 == v41 && v38 == v43)
            {

              swift_bridgeObjectRelease_n();
              if (v134)
              {
                unint64_t v8 = v129;
                uint64_t v10 = v137;
                Swift::Int v14 = v138;
                uint64_t v11 = &selRef_configurePlayer;
                uint64_t v9 = v132;
                goto LABEL_41;
              }
              goto LABEL_27;
            }
            int v30 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v134 ^ v30)) {
              break;
            }
LABEL_27:
            Swift::Int v14 = v138 + 1;
            ++v29;
            uint64_t v11 = &selRef_configurePlayer;
            if (v133 == v138 + 1)
            {
              Swift::Int v14 = v133;
              goto LABEL_39;
            }
          }
          uint64_t v11 = &selRef_configurePlayer;
          Swift::Int v14 = v138;
LABEL_39:
          uint64_t v9 = v132;
LABEL_40:
          unint64_t v8 = v129;
          uint64_t v10 = v137;
          if (v134)
          {
LABEL_41:
            if (v14 < v9) {
              goto LABEL_156;
            }
            if (v9 < v14)
            {
              uint64_t v45 = (uint64_t *)(v127 + 8 * v14);
              Swift::Int v46 = v14;
              Swift::Int v47 = v9;
              int v48 = (uint64_t *)(v10 + 8 * v9);
              do
              {
                if (v47 != --v46)
                {
                  if (!v10) {
                    goto LABEL_165;
                  }
                  uint64_t v49 = *v48;
                  *int v48 = *v45;
                  *uint64_t v45 = v49;
                }
                ++v47;
                --v45;
                ++v48;
              }
              while (v47 < v46);
            }
          }
LABEL_49:
          if (v14 < v133)
          {
            if (__OFSUB__(v14, v9)) {
              goto LABEL_154;
            }
            if (v14 - v9 < (uint64_t)v128)
            {
              if (__OFADD__(v9, v128)) {
                goto LABEL_157;
              }
              int v50 = (char *)v133;
              if ((uint64_t)&v128[v9] < v133) {
                int v50 = &v128[v9];
              }
              if ((uint64_t)v50 >= v9)
              {
                if ((char *)v14 != v50)
                {
                  __int16 v130 = v8;
                  char v131 = v50;
                  uint64_t v51 = v127 + 8 * v14;
                  do
                  {
                    uint64_t v53 = *(void **)(v10 + 8 * v14);
                    uint64_t v135 = v51;
                    Swift::Int v139 = v14;
                    while (1)
                    {
                      uint64_t v54 = *(void **)v51;
                      id v55 = v53;
                      id v56 = v54;
                      id v57 = [v55 v11[172]];
                      if (!v57) {
                        goto LABEL_160;
                      }
                      uint64_t v58 = v57;
                      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v61 = v60;

                      id v62 = [v56 v11[172]];
                      if (!v62) {
                        goto LABEL_159;
                      }
                      uint64_t v63 = v62;
                      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v66 = v65;

                      if (v59 == v64 && v61 == v66) {
                        break;
                      }
                      char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v10 = v137;
                      if ((v68 & 1) == 0) {
                        goto LABEL_59;
                      }
                      Swift::Int v52 = v139;
                      if (!v137) {
                        goto LABEL_161;
                      }
                      uint64_t v69 = *(void **)v51;
                      uint64_t v53 = *(void **)(v51 + 8);
                      *(void *)uint64_t v51 = v53;
                      *(void *)(v51 + 8) = v69;
                      v51 -= 8;
                      ++v9;
                      uint64_t v11 = &selRef_configurePlayer;
                      if (v139 == v9) {
                        goto LABEL_60;
                      }
                    }

                    swift_bridgeObjectRelease_n();
                    uint64_t v10 = v137;
LABEL_59:
                    uint64_t v11 = &selRef_configurePlayer;
                    Swift::Int v52 = v139;
LABEL_60:
                    Swift::Int v14 = v52 + 1;
                    uint64_t v51 = v135 + 8;
                    uint64_t v9 = v132;
                  }
                  while ((char *)v14 != v131);
                  Swift::Int v14 = (Swift::Int)v131;
                  unint64_t v8 = v130;
                }
                goto LABEL_73;
              }
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
              goto LABEL_168;
            }
          }
LABEL_73:
          if (v14 < v9) {
            goto LABEL_149;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v8 = sub_1001EE868(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v71 = *((void *)v8 + 2);
          unint64_t v70 = *((void *)v8 + 3);
          unint64_t v13 = v71 + 1;
          Swift::Int v140 = v14;
          if (v71 >= v70 >> 1) {
            unint64_t v8 = sub_1001EE868((char *)(v70 > 1), v71 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v13;
          uint64_t v72 = v8 + 32;
          uint64_t v73 = &v8[16 * v71 + 32];
          *(void *)uint64_t v73 = v132;
          *((void *)v73 + 1) = v140;
          if (v71)
          {
            while (2)
            {
              unint64_t v74 = v13 - 1;
              if (v13 >= 4)
              {
                uint64_t v79 = &v72[16 * v13];
                uint64_t v80 = *((void *)v79 - 8);
                uint64_t v81 = *((void *)v79 - 7);
                BOOL v85 = __OFSUB__(v81, v80);
                uint64_t v82 = v81 - v80;
                if (v85) {
                  goto LABEL_138;
                }
                uint64_t v84 = *((void *)v79 - 6);
                uint64_t v83 = *((void *)v79 - 5);
                BOOL v85 = __OFSUB__(v83, v84);
                uint64_t v77 = v83 - v84;
                char v78 = v85;
                if (v85) {
                  goto LABEL_139;
                }
                unint64_t v86 = v13 - 2;
                uint64_t v87 = &v72[16 * v13 - 32];
                uint64_t v89 = *(void *)v87;
                uint64_t v88 = *((void *)v87 + 1);
                BOOL v85 = __OFSUB__(v88, v89);
                uint64_t v90 = v88 - v89;
                if (v85) {
                  goto LABEL_141;
                }
                BOOL v85 = __OFADD__(v77, v90);
                uint64_t v91 = v77 + v90;
                if (v85) {
                  goto LABEL_144;
                }
                if (v91 >= v82)
                {
                  uint64_t v109 = &v72[16 * v74];
                  uint64_t v111 = *(void *)v109;
                  uint64_t v110 = *((void *)v109 + 1);
                  BOOL v85 = __OFSUB__(v110, v111);
                  uint64_t v112 = v110 - v111;
                  if (v85) {
                    goto LABEL_148;
                  }
                  BOOL v102 = v77 < v112;
                }
                else
                {
LABEL_92:
                  if (v78) {
                    goto LABEL_140;
                  }
                  unint64_t v86 = v13 - 2;
                  uint64_t v92 = &v72[16 * v13 - 32];
                  uint64_t v94 = *(void *)v92;
                  uint64_t v93 = *((void *)v92 + 1);
                  BOOL v95 = __OFSUB__(v93, v94);
                  uint64_t v96 = v93 - v94;
                  char v97 = v95;
                  if (v95) {
                    goto LABEL_143;
                  }
                  uint64_t v98 = &v72[16 * v74];
                  uint64_t v100 = *(void *)v98;
                  uint64_t v99 = *((void *)v98 + 1);
                  BOOL v85 = __OFSUB__(v99, v100);
                  uint64_t v101 = v99 - v100;
                  if (v85) {
                    goto LABEL_146;
                  }
                  if (__OFADD__(v96, v101)) {
                    goto LABEL_147;
                  }
                  if (v96 + v101 < v77) {
                    goto LABEL_104;
                  }
                  BOOL v102 = v77 < v101;
                }
                if (v102) {
                  unint64_t v74 = v86;
                }
              }
              else
              {
                if (v13 == 3)
                {
                  uint64_t v76 = *((void *)v8 + 4);
                  uint64_t v75 = *((void *)v8 + 5);
                  BOOL v85 = __OFSUB__(v75, v76);
                  uint64_t v77 = v75 - v76;
                  char v78 = v85;
                  goto LABEL_92;
                }
                uint64_t v103 = *((void *)v8 + 4);
                uint64_t v104 = *((void *)v8 + 5);
                BOOL v85 = __OFSUB__(v104, v103);
                uint64_t v96 = v104 - v103;
                char v97 = v85;
LABEL_104:
                if (v97) {
                  goto LABEL_142;
                }
                uint64_t v105 = &v72[16 * v74];
                uint64_t v107 = *(void *)v105;
                uint64_t v106 = *((void *)v105 + 1);
                BOOL v85 = __OFSUB__(v106, v107);
                uint64_t v108 = v106 - v107;
                if (v85) {
                  goto LABEL_145;
                }
                if (v108 < v96) {
                  goto LABEL_14;
                }
              }
              unint64_t v113 = v74 - 1;
              if (v74 - 1 >= v13)
              {
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
                goto LABEL_158;
              }
              if (!v10) {
                goto LABEL_162;
              }
              uint64_t v114 = &v72[16 * v113];
              uint64_t v115 = *(void *)v114;
              uint64_t v116 = &v72[16 * v74];
              uint64_t v117 = *((void *)v116 + 1);
              sub_1004F70FC((id *)(v10 + 8 * *(void *)v114), (id *)(v10 + 8 * *(void *)v116), (id *)(v10 + 8 * v117), v136);
              if (v1) {
                goto LABEL_132;
              }
              if (v117 < v115) {
                goto LABEL_135;
              }
              if (v74 > *((void *)v8 + 2)) {
                goto LABEL_136;
              }
              *(void *)uint64_t v114 = v115;
              *(void *)&v72[16 * v113 + 8] = v117;
              unint64_t v118 = *((void *)v8 + 2);
              if (v74 >= v118) {
                goto LABEL_137;
              }
              unint64_t v13 = v118 - 1;
              memmove(&v72[16 * v74], v116 + 16, 16 * (v118 - 1 - v74));
              *((void *)v8 + 2) = v118 - 1;
              if (v118 <= 2) {
                goto LABEL_14;
              }
              continue;
            }
          }
          unint64_t v13 = 1;
LABEL_14:
          Swift::Int v12 = v133;
          uint64_t v9 = v140;
          uint64_t v11 = &selRef_configurePlayer;
          if (v140 >= v133) {
            goto LABEL_121;
          }
        }
      }
      unint64_t v8 = (char *)_swiftEmptyArrayStorage;
      uint64_t v141 = (uint64_t)_swiftEmptyArrayStorage;
      long long v136 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
      if (v3 == 1) {
        goto LABEL_12;
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
LABEL_121:
      if (v13 >= 2)
      {
        uint64_t v119 = *v125;
        do
        {
          unint64_t v120 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_150;
          }
          if (!v119) {
            goto LABEL_166;
          }
          uint64_t v121 = *(void *)&v8[16 * v120 + 32];
          uint64_t v122 = *(void *)&v8[16 * v13 + 24];
          sub_1004F70FC((id *)(v119 + 8 * v121), (id *)(v119 + 8 * *(void *)&v8[16 * v13 + 16]), (id *)(v119 + 8 * v122), v136);
          if (v1) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v8 = sub_1001EEF68((uint64_t)v8);
          }
          if (v120 >= *((void *)v8 + 2)) {
            goto LABEL_152;
          }
          unint64_t v123 = &v8[16 * v120 + 32];
          *(void *)unint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v8 + 2);
          if (v13 > v124) {
            goto LABEL_153;
          }
          memmove(&v8[16 * v13 + 16], &v8[16 * v13 + 32], 16 * (v124 - v13));
          *((void *)v8 + 2) = v124 - 1;
          unint64_t v13 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease();
      *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return (char *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1004F6F50(char *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v26 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    uint64_t v6 = &selRef_configurePlayer;
LABEL_6:
    uint64_t v7 = *(void **)(v26 + 8 * v4);
    uint64_t v27 = v24;
    uint64_t v25 = v5;
    while (1)
    {
      unint64_t v8 = *(void **)v5;
      id v9 = v7;
      id v10 = v8;
      uint64_t result = (char *)[v9 v6[172]];
      if (!result) {
        break;
      }
      uint64_t v11 = result;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      uint64_t result = (char *)[v10 v6[172]];
      if (!result) {
        goto LABEL_18;
      }
      unint64_t v15 = result;
      uint64_t v16 = v4;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if (v12 == v17 && v14 == v19)
      {

        uint64_t result = (char *)swift_bridgeObjectRelease_n();
        uint64_t v4 = v16;
        uint64_t v6 = &selRef_configurePlayer;
LABEL_5:
        ++v4;
        uint64_t v5 = v25 + 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = (char *)swift_bridgeObjectRelease();
      uint64_t v4 = v16;
      uint64_t v6 = &selRef_configurePlayer;
      if (v21)
      {
        if (!v26) {
          goto LABEL_19;
        }
        uint64_t v22 = *(void **)v5;
        uint64_t v7 = *(void **)(v5 + 8);
        *(void *)uint64_t v5 = v7;
        *(void *)(v5 + 8) = v22;
        v5 -= 8;
        if ((char *)v4 != ++v27) {
          continue;
        }
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F70FC(id *__src, id *a2, id *a3, id *__dst)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  unint64_t v70 = __src;
  uint64_t v69 = __dst;
  if (v10 < v12 >> 3)
  {
    if (v8 < -7) {
      goto LABEL_65;
    }
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v60 = &__dst[v10];
    char v68 = (char *)v60;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v14 = &selRef_configurePlayer;
      unint64_t v15 = __dst;
      uint64_t v66 = v5;
      while (1)
      {
        id v62 = v7;
        uint64_t v64 = v15;
        uint64_t v16 = v6;
        uint64_t v17 = *v15;
        id v18 = *v6;
        id v19 = v17;
        id v20 = [v18 v14[172]];
        if (!v20) {
          goto LABEL_63;
        }
        char v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        uint64_t v25 = v14;
        id v26 = [v19 v14[172]];
        if (!v26) {
          goto LABEL_64;
        }
        uint64_t v27 = v26;
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v29;

        if (v22 == v28 && v24 == v30) {
          break;
        }
        char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0) {
          goto LABEL_25;
        }
        id v33 = v16 + 1;
        id v34 = v62;
        unint64_t v15 = v64;
        uint64_t v35 = v66;
        if (v62 >= v16 && v62 < v33)
        {
          uint64_t v14 = v25;
          if (v62 != v16) {
            *id v62 = *v16;
          }
          goto LABEL_29;
        }
        *id v62 = *v16;
LABEL_28:
        uint64_t v14 = v25;
LABEL_29:
        uint64_t v7 = v34 + 1;
        if (v15 < v60)
        {
          uint64_t v6 = v33;
          if (v33 < v35) {
            continue;
          }
        }
        unint64_t v70 = v7;
        goto LABEL_60;
      }

      swift_bridgeObjectRelease_n();
LABEL_25:
      id v34 = v62;
      uint64_t v35 = v66;
      if (v62 != v64) {
        *id v62 = *v64;
      }
      unint64_t v15 = v64 + 1;
      uint64_t v69 = v64 + 1;
      id v33 = v16;
      goto LABEL_28;
    }
LABEL_60:
    sub_1001EE998(&v70, &v69, &v68);
    return 1;
  }
  if (v11 < -7) {
    goto LABEL_65;
  }
  if (__dst != a2 || &a2[v13] <= __dst) {
    memmove(__dst, a2, 8 * v13);
  }
  uint64_t v65 = (char *)__dst;
  uint64_t v36 = (char *)&__dst[v13];
  char v68 = v36;
  unint64_t v70 = v6;
  if (v7 >= v6 || v11 < 8) {
    goto LABEL_60;
  }
  uint64_t v37 = &selRef_configurePlayer;
  uint64_t v38 = v6;
  uint64_t v63 = v7;
  while (1)
  {
    uint64_t v59 = v36;
    uint64_t v61 = v6;
    uint64_t v67 = v5;
    uint64_t v40 = (void *)*((void *)v36 - 1);
    v36 -= 8;
    id v39 = v40;
    uint64_t v41 = *--v38;
    id v42 = v39;
    id v43 = v41;
    id v44 = [v42 v37[172]];
    if (!v44) {
      break;
    }
    uint64_t v45 = v44;
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    id v49 = [v43 v37[172]];
    if (!v49) {
      goto LABEL_62;
    }
    int v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    if (v46 == v51 && v48 == v53)
    {

      swift_bridgeObjectRelease_n();
      id v56 = v67;
      uint64_t v5 = v67 - 1;
LABEL_52:
      uint64_t v38 = v61;
      unint64_t v57 = (unint64_t)v63;
      char v68 = v36;
      uint64_t v37 = &selRef_configurePlayer;
      if (v56 < (id *)v59 || v5 >= (id *)v59 || v56 != (id *)v59) {
        id *v5 = *(id *)v36;
      }
      goto LABEL_56;
    }
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v56 = v67;
    uint64_t v5 = v67 - 1;
    if ((v55 & 1) == 0) {
      goto LABEL_52;
    }
    unint64_t v57 = (unint64_t)v63;
    uint64_t v36 = v59;
    if (v67 != v61 || v5 >= v61) {
      id *v5 = *v38;
    }
    unint64_t v70 = v38;
    uint64_t v37 = &selRef_configurePlayer;
LABEL_56:
    if ((unint64_t)v38 > v57)
    {
      uint64_t v6 = v38;
      if (v36 > v65) {
        continue;
      }
    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004F7564()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1004F7588()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1004F75AC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v2 - 8);
  sub_1000AEF2C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10094DDC8);
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_1004F7648(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int64_t v9 = v2;
  v9[1] = sub_1000DBD6C;
  return sub_1004DF2FC(a1, v5, v6, v7, v8);
}

uint64_t sub_1004F7744(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10094DB88);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    id v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10094F3C8);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1004FDF20;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004F7B24(uint64_t a1)
{
  return sub_1004F7744(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1004F7B34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE68);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    id v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095DD90);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_10050A734;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004F7F14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FD38);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    id v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10094DBA0);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_10050A678;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1004F82F4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v28 = a5;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v26 = a1;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = a8;
    uint64_t v31 = a3;
    uint64_t v32 = v20;
    *(_DWORD *)uint64_t v19 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v25 = v12;
    uint64_t v21 = StaticString.description.getter();
    uint64_t v31 = sub_10008F1F4(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v31 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v26;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    if (a2)
    {
LABEL_3:
      uint64_t v32 = (uint64_t)a1;
      swift_errorRetain();
      sub_1000AFA94(&qword_10094DB88);
      return CheckedContinuation.resume(throwing:)();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v32 = (uint64_t)a1;
  id v24 = a1;
  sub_1000AFA94(&qword_10094DB88);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1004F85B8(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v28 = a5;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v26 = a1;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = a8;
    uint64_t v31 = a3;
    uint64_t v32 = v20;
    *(_DWORD *)uint64_t v19 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v25 = v12;
    uint64_t v21 = StaticString.description.getter();
    uint64_t v31 = sub_10008F1F4(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v31 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v26;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    if (a2)
    {
LABEL_3:
      uint64_t v32 = (uint64_t)a1;
      swift_errorRetain();
      sub_1000AFA94(&qword_10095FE68);
      return CheckedContinuation.resume(throwing:)();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v32 = (uint64_t)a1;
  id v24 = a1;
  sub_1000AFA94(&qword_10095FE68);
  return CheckedContinuation.resume(returning:)();
}

uint64_t (*sub_1004F887C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1004F8998(v6, a2, a3);
  return sub_1004F88E4;
}

uint64_t (*sub_1004F88E8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1004F8A18(v6, a2, a3);
  return sub_1004F88E4;
}

void sub_1004F8950(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1004F8998(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s10FitnessApp24ActivitySharingHighlightV13HighlightTypeOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1004F8A18(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for ActivitySharingHighlight.HighlightType;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004F8A98(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      if (!v4)
      {
        unint64_t v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v9;
        }
        sub_1000AFA94(&qword_100960098);
        uint64_t v11 = (void *)swift_allocObject();
        int64_t v12 = j__malloc_size(v11);
        uint64_t v13 = v12 - 32;
        if (v12 < 32) {
          uint64_t v13 = v12 - 17;
        }
        uint64_t v14 = v13 >> 4;
        void v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        unint64_t v15 = (unint64_t)(v11 + 4);
        uint64_t v16 = v2[3] >> 1;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[2 * v16 + 4]) {
            memmove(v11 + 4, v2 + 4, 16 * v16);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (void *)(v15 + 16 * v16);
        uint64_t v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        uint64_t v2 = v11;
      }
      BOOL v18 = __OFSUB__(v4--, 1);
      if (v18) {
        break;
      }
      *uint64_t v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = 0;
LABEL_23:
  unint64_t v19 = v2[3];
  if (v19 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v18 = __OFSUB__(v20, v4);
  uint64_t v21 = v20 - v4;
  if (!v18)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1004F8C00(uint64_t a1)
{
  return sub_100049030(a1, (uint64_t (*)(unsigned char *, char *))sub_100093E60, &qword_100960018);
}

uint64_t sub_1004F8C20(uint64_t a1)
{
  return sub_100049030(a1, (uint64_t (*)(unsigned char *, char *))sub_100093E60, &qword_10095FDC0);
}

size_t sub_1004F8C40(uint64_t a1)
{
  uint64_t v57 = sub_1000AFA94(&qword_10095FC30);
  uint64_t v2 = __chkstk_darwin(v57);
  id v56 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  char v55 = (void *)((char *)v46 - v5);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v46 - v6;
  uint64_t v58 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v54 = v10;
  v46[0] = a1;
  if (v10)
  {
    uint64_t v47 = (v9 + 32) & ~v9;
    int64_t v12 = (char *)_swiftEmptyArrayStorage + v47;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v53 = type metadata accessor for CatalogLockup();
    uint64_t v15 = *(void *)(v53 - 8);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v51 = v15 + 16;
    uint64_t v52 = v16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    id v49 = v7;
    int v50 = (void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v48 = *(void *)(v15 + 72);
    BOOL v18 = &qword_10095FC30;
    v46[1] = v9 | 7;
    unint64_t v19 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v21 = v57;
      unint64_t v22 = &v56[*(int *)(v57 + 48)];
      uint64_t v23 = v53;
      v52(v22, v17, v53);
      uint64_t v24 = *(int *)(v21 + 48);
      uint64_t v25 = v18;
      unint64_t v26 = v55;
      uint64_t v27 = (char *)v55 + v24;
      void *v55 = v13;
      (*v50)(v27, v22, v23);
      uint64_t v28 = (uint64_t)v26;
      BOOL v18 = v25;
      size_t result = sub_1000AEEC8(v28, (uint64_t)v7, v25);
      if (v14)
      {
        uint64_t v11 = v19;
        BOOL v20 = __OFSUB__(v14--, 1);
        if (v20) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v30 = v19[3];
        if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
        if (v31 <= 1) {
          uint64_t v32 = 1;
        }
        else {
          uint64_t v32 = v31;
        }
        sub_1000AFA94(&qword_10095FCC8);
        uint64_t v33 = *(void *)(v58 + 72);
        uint64_t v34 = v47;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v11);
        if (!v33) {
          goto LABEL_34;
        }
        int64_t v35 = result - v34;
        if (result - v34 == 0x8000000000000000 && v33 == -1) {
          goto LABEL_35;
        }
        uint64_t v37 = v35 / v33;
        void v11[2] = v32;
        v11[3] = 2 * (v35 / v33);
        uint64_t v38 = (char *)v11 + v34;
        uint64_t v39 = v19[3] >> 1;
        uint64_t v40 = v39 * v33;
        if (v19[2])
        {
          if (v11 < v19 || v38 >= (char *)v19 + v47 + v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        int64_t v12 = &v38[v40];
        uint64_t v42 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
        swift_release();
        BOOL v18 = v25;
        BOOL v20 = __OFSUB__(v42, 1);
        uint64_t v14 = v42 - 1;
        if (v20)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      uint64_t v7 = v49;
      sub_1000AEEC8((uint64_t)v49, (uint64_t)v12, v18);
      v12 += *(void *)(v58 + 72);
      v17 += v48;
      unint64_t v19 = v11;
      if (v54 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v43 = v11[3];
  if (v43 >= 2)
  {
    unint64_t v44 = v43 >> 1;
    BOOL v20 = __OFSUB__(v44, v14);
    uint64_t v45 = v44 - v14;
    if (v20) {
      goto LABEL_36;
    }
    void v11[2] = v45;
  }
  return (size_t)v11;
}

uint64_t sub_1004F8FD0(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + 16);
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (v3)
    {
      size_t result = swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = v3 - 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[4];
      uint64_t v10 = a2 - 1;
      uint64_t v26 = a2 - 1;
      while (1)
      {
        uint64_t v11 = *(void *)(v2 + 8 * v6 + 32);
        if (!v7)
        {
          unint64_t v12 = v4[3];
          if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_32;
          }
          int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
          if (v13 <= 1) {
            uint64_t v14 = 1;
          }
          else {
            uint64_t v14 = v13;
          }
          sub_1000AFA94(&qword_100960098);
          uint64_t v15 = (void *)swift_allocObject();
          int64_t v16 = j__malloc_size(v15);
          uint64_t v17 = v16 - 32;
          if (v16 < 32) {
            uint64_t v17 = v16 - 17;
          }
          uint64_t v18 = v17 >> 4;
          long long v15[2] = v14;
          v15[3] = 2 * (v17 >> 4);
          unint64_t v19 = (unint64_t)(v15 + 4);
          uint64_t v20 = v4[3] >> 1;
          if (v4[2])
          {
            if (v15 != v4 || v19 >= (unint64_t)&v4[2 * v20 + 4]) {
              memmove(v15 + 4, v4 + 4, 16 * v20);
            }
            v4[2] = 0;
          }
          uint64_t v9 = (void *)(v19 + 16 * v20);
          uint64_t v7 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v20;
          size_t result = swift_release();
          uint64_t v4 = v15;
          uint64_t v10 = v26;
        }
        BOOL v22 = __OFSUB__(v7--, 1);
        if (v22) {
          break;
        }
        *uint64_t v9 = v6;
        v9[1] = v11;
        if (v10 == v6 || v8 == v6)
        {
          size_t result = swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v9 += 2;
        ++v6;
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
LABEL_27:
  unint64_t v23 = v4[3];
  if (v23 < 2) {
    return (uint64_t)v4;
  }
  unint64_t v24 = v23 >> 1;
  BOOL v22 = __OFSUB__(v24, v7);
  uint64_t v25 = v24 - v7;
  if (!v22)
  {
    v4[2] = v25;
    return (uint64_t)v4;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1004F9178(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_1004FA5D0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FriendCard, (uint64_t)&off_1008D4BE0, (uint64_t (*)(void))type metadata accessor for FriendCard, (char *)sub_1004FF8E0, (uint64_t (*)(void))type metadata accessor for FriendCard);
}

uint64_t sub_1004F91D4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v107 = a2;
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TrendListMetric();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v101 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095FC38);
  __chkstk_darwin(v12 - 8);
  uint64_t v105 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for TrendsActionContext(0);
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v16 - 8);
  uint64_t v94 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for CatalogTipSection();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v19 - 8);
  uint64_t v100 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for CatalogTipCard();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v91 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_10095FC40);
  __chkstk_darwin(v22 - 8);
  uint64_t v98 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  uint64_t v95 = *(void *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  uint64_t v90 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120[3] = type metadata accessor for HistoryItemsCard();
  v120[4] = (uint64_t)&off_1008BA360;
  v120[0] = a1;
  int v29 = *(char **)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  if (!v29) {
    goto LABEL_7;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_editMode))
  {
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16) != 3
      || *(_OWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type) != 0)
    {
      swift_retain();
      unint64_t v30 = v29;
      sub_100500584(a1, v30);
LABEL_6:

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    }
LABEL_7:
    swift_retain();
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
  }
  uint64_t v88 = a3;
  uint64_t v32 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess();
  sub_1000AEF2C(v32, (uint64_t)&v108, &qword_10095F6E8);
  if (!*((void *)&v109 + 1))
  {
    swift_retain();
    unint64_t v43 = v29;
    sub_10008DB18((uint64_t)&v108, &qword_10095F6E8);
LABEL_18:
    uint64_t v36 = v88;
    goto LABEL_19;
  }
  uint64_t v87 = v10;
  sub_10008E75C((uint64_t)&v108, (uint64_t)&v117);
  swift_retain();
  uint64_t v33 = v29;
  sub_10008DB18((uint64_t)&v108, &qword_10095F6E8);
  uint64_t v34 = *(void *)(*sub_10007E4EC(&v117, *((uint64_t *)&v118 + 1))
                  + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v36 = v88;
  if (v35)
  {
    uint64_t v83 = v15;
    uint64_t v84 = OnboardingNavigationView;
    BOOL v85 = v7;
    unint64_t v86 = v29;
    uint64_t v37 = (void *)(v34 + 32);
    uint64_t v38 = (void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v82 = v34;
    swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    while (1)
    {
      uint64_t v41 = v37[3];
      uint64_t v40 = v37[4];
      sub_10007E4EC(v37, v41);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
      char v42 = static UUID.== infix(_:_:)();
      (*v38)(v28, v25);
      if (v42) {
        break;
      }
      ++v39;
      v37 += 5;
      if (v35 == v39)
      {
        swift_bridgeObjectRelease();
        int v29 = v86;
        uint64_t v7 = v85;
        uint64_t OnboardingNavigationView = v84;
        uint64_t v15 = v83;
        uint64_t v36 = v88;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v117);
    sub_1005055A8(v120[0]);
    int v29 = v86;
    uint64_t v7 = v85;
    uint64_t OnboardingNavigationView = v84;
    uint64_t v15 = v83;
    uint64_t v10 = v87;
    goto LABEL_18;
  }
LABEL_15:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v117);
  uint64_t v10 = v87;
LABEL_19:
  uint64_t v44 = *(void *)(v120[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type);
  switch(*(unsigned char *)(v120[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16))
  {
    case 1:
LABEL_23:
      sub_1000AEF2C(v107, (uint64_t)&v108, &qword_100955A00);
      if (*((void *)&v109 + 1))
      {
        if (swift_dynamicCast())
        {
          id v46 = (id)v117;
          swift_retain();
          sub_100371DCC(v46, 1);

          swift_release();
        }
        else
        {
LABEL_47:
        }
      }
      else
      {

        sub_10008DB18((uint64_t)&v108, &qword_100955A00);
      }
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    case 2:
LABEL_26:
      sub_1000AEF2C(v107, (uint64_t)&v108, &qword_100955A00);
      if (!*((void *)&v109 + 1))
      {
        sub_10008DB18((uint64_t)&v108, &qword_100955A00);
        uint64_t v47 = (uint64_t)v105;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v105, 1, 1, v106);
        goto LABEL_33;
      }
      uint64_t v47 = (uint64_t)v105;
      uint64_t v48 = v106;
      int v49 = swift_dynamicCast();
      uint64_t v50 = v104;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v47, v49 ^ 1u, 1, v48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v47, 1, v48) == 1)
      {
LABEL_33:

        sub_10008DB18(v47, &qword_10095FC38);
        return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
      }
      sub_1000D27E0(v47, (uint64_t)v15, type metadata accessor for TrendsActionContext);
      sub_1000AEF2C((uint64_t)v15, (uint64_t)v10, &qword_10095BFB0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v10, 1, v103) == 1)
      {
        sub_10008DB18((uint64_t)v10, &qword_10095BFB0);
        if (v15[*(int *)(v48 + 20) + 8] == 255)
        {
          sub_1000E370C((uint64_t)v15, type metadata accessor for TrendsActionContext);

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
        }
        uint64_t v51 = *(void **)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                       + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager);
        id v52 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
        id v53 = sub_10020AD40(v51);
        [v29 presentViewController:v53 animated:1 completion:0];
      }
      else
      {
        uint64_t v54 = v101;
        sub_1000D27E0((uint64_t)v10, v101, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
        sub_1003FEA50(v54);

        sub_1000E370C(v54, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      }
      sub_1000E370C((uint64_t)v15, type metadata accessor for TrendsActionContext);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    case 3:
      switch(v44)
      {
        case 1:
          if (qword_10094AA90 != -1) {
            swift_once();
          }
          uint64_t v55 = qword_100997DB0;
          swift_getKeyPath();
          *(void *)&long long v108 = v55;
          sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(unsigned char *)(v55 + 16))
          {
            [v29 showLoad];

            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
          }
          *(void *)uint64_t v7 = ASFriendListDisplayMode.id.getter;
          *((void *)v7 + 1) = 0;
          *((void *)v7 + 2) = 0;
          *((void *)v7 + 3) = 0;
          *(void *)&long long v117 = _swiftEmptyArrayStorage;
          sub_1000AFA94((uint64_t *)&unk_10095F6C0);
          State.init(wrappedValue:)();
          uint64_t v74 = *((void *)&v108 + 1);
          *((void *)v7 + 4) = v108;
          *((void *)v7 + 5) = v74;
          LOBYTE(v117) = 0;
          State.init(wrappedValue:)();
          uint64_t v75 = *((void *)&v108 + 1);
          v7[48] = v108;
          *((void *)v7 + 7) = v75;
          LOBYTE(v117) = 0;
          State.init(wrappedValue:)();
          uint64_t v76 = *((void *)&v108 + 1);
          v7[64] = v108;
          *((void *)v7 + 9) = v76;
          uint64_t v77 = (uint64_t *)&v7[*(int *)(OnboardingNavigationView + 36)];
          *uint64_t v77 = swift_getKeyPath();
          sub_1000AFA94(&qword_10094DFC8);
          swift_storeEnumTagMultiPayload();
          id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
          unint64_t v30 = (char *)UIHostingController.init(rootView:)();
          [v29 presentViewController:v30 animated:1 completion:0];

          goto LABEL_6;
        case 2:
          sub_1000AEF2C(v107, (uint64_t)v115, &qword_100955A00);
          if (v116)
          {
            if (swift_dynamicCast())
            {
              if (*((void *)&v118 + 1))
              {
                long long v109 = v118;
                long long v108 = v117;
                uint64_t v56 = (uint64_t)v119;
                uint64_t v110 = v119;
                uint64_t v57 = *((void *)&v118 + 1);
                uint64_t v58 = sub_10007E4EC(&v108, *((uint64_t *)&v118 + 1));
                sub_100401F74((uint64_t)v58, (uint64_t)v29, v57, v56);

                sub_100350CBC((uint64_t)&v108);
                return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
              }
            }
            else
            {
              uint64_t v119 = 0;
              long long v117 = 0u;
              long long v118 = 0u;
            }
          }
          else
          {
            sub_10008DB18((uint64_t)v115, &qword_100955A00);
            long long v117 = 0u;
            long long v118 = 0u;
            uint64_t v119 = 0;
          }

          uint64_t v79 = (uint64_t *)&unk_10095FC48;
          goto LABEL_64;
        case 3:
          sub_1000AEF2C(v107, (uint64_t)&v117, &qword_100955A00);
          if (*((void *)&v118 + 1))
          {
            if (swift_dynamicCast())
            {
              uint64_t v59 = v110;
              sub_1003F8CFC(v110, v36, v111, v112, v113, v114, *(CGFloat *)&v108, *((CGFloat *)&v108 + 1), *(CGFloat *)&v109, *((CGFloat *)&v109 + 1));
              swift_release();
              swift_release();
            }
            goto LABEL_47;
          }

          uint64_t v79 = &qword_100955A00;
LABEL_64:
          sub_10008DB18((uint64_t)&v117, v79);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
        case 4:
          goto LABEL_23;
        case 5:
          sub_1000AEF2C(v107, (uint64_t)&v108, &qword_100955A00);
          if (*((void *)&v109 + 1))
          {
            uint64_t v60 = (uint64_t)v98;
            uint64_t v61 = CardActionContext;
            int v62 = swift_dynamicCast();
            uint64_t v63 = v95;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v60, v62 ^ 1u, 1, v61);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v60, 1, v61) != 1)
            {
              uint64_t v64 = v90;
              sub_1000D27E0(v60, v90, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              sub_1003FBEB8(v64, v64 + *(int *)(v61 + 20));
              uint64_t v65 = CatalogLockup.identifier.getter();
              uint64_t v67 = v66;
              id v68 = objc_retain(*(id *)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                      + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
              sub_10064E14C(v65, v67);
              swift_bridgeObjectRelease();

              sub_1000E370C(v64, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
            }
          }
          else
          {
            sub_10008DB18((uint64_t)&v108, &qword_100955A00);
            uint64_t v60 = (uint64_t)v98;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v98, 1, 1, CardActionContext);
          }

          uint64_t v73 = &qword_10095FC40;
          goto LABEL_61;
        case 6:
          sub_10008E75C((uint64_t)v120, (uint64_t)&v108);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v60 = (uint64_t)v100;
          uint64_t v69 = v99;
          char v70 = swift_dynamicCast();
          unint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
          if (v70)
          {
            v71(v60, 0, 1, v69);
            uint64_t v72 = v91;
            sub_1000D27E0(v60, v91, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
            uint64_t v60 = v94;
            sub_1000AEF2C(v72 + *(int *)(v69 + 36), v94, (uint64_t *)&unk_100955650);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v60, 1, v93) != 1)
            {
              uint64_t v80 = v60;
              uint64_t v81 = v89;
              sub_1000D27E0(v80, v89, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              sub_1003FDF70(v81);
              sub_1003FC8BC(v81);

              sub_1000E370C(v81, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              sub_1000E370C(v72, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
            }
            sub_1000E370C(v72, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

            uint64_t v73 = (uint64_t *)&unk_100955650;
          }
          else
          {
            v71(v60, 1, 1, v69);

            uint64_t v73 = &qword_10094D198;
          }
LABEL_61:
          sub_10008DB18(v60, v73);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
        case 7:
          goto LABEL_26;
        default:

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
      }
    default:
      int v45 = sub_10007CCD8(*(void *)(v120[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(void *)(v120[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), 0);
      sub_1003F7088(v44, v45, 1, 0, 256);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
  }
}

uint64_t sub_1004FA518(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_1004FA5D0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (uint64_t)&off_1008CBE58, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (char *)sub_100501234, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
}

uint64_t sub_1004FA574(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_1004FA5D0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for TrendsCard, (uint64_t)&off_1008D1370, (uint64_t (*)(void))type metadata accessor for TrendsCard, (char *)sub_100502B7C, (uint64_t (*)(void))type metadata accessor for TrendsCard);
}

uint64_t sub_1004FA5D0(uint64_t a1, uint64_t a2, char *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void), char *a7, uint64_t (*a8)(void))
{
  uint64_t v115 = a8;
  unint64_t v120 = a7;
  uint64_t v119 = a2;
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v104 = (uint64_t *)((char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v15 - 8);
  uint64_t v114 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for TrendListMetric();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10095FC38);
  __chkstk_darwin(v18 - 8);
  long long v117 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for TrendsActionContext(0);
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v22 - 8);
  uint64_t v103 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for CatalogTipSection();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v98 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v25 - 8);
  uint64_t v110 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for CatalogTipCard();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v100 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_10095FC40);
  __chkstk_darwin(v28 - 8);
  long long v108 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  uint64_t v105 = *(void *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  uint64_t v99 = (uint64_t)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a4(0);
  v134[3] = v35;
  v134[4] = a5;
  uint64_t v36 = sub_1000B1710(v134);
  sub_1000D2848(a1, (uint64_t)v36, a6);
  uint64_t v121 = a3;
  uint64_t v37 = *(char **)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  if (v37)
  {
    if (*((unsigned char *)v36 + *(int *)(v35 + 28)))
    {
      uint64_t v38 = (char *)v36 + *(int *)(v35 + 20);
      if (v38[16] != 3 || *(_OWORD *)v38 != 0)
      {
        uint64_t v39 = v37;
        ((void (*)(uint64_t *, char *))v120)(v36, v39);
      }
    }
    else
    {
      uint64_t v40 = &v121[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
      swift_beginAccess();
      sub_1000AEF2C((uint64_t)v40, (uint64_t)&v122, &qword_10095F6E8);
      if (*((void *)&v123 + 1))
      {
        sub_10008E75C((uint64_t)&v122, (uint64_t)&v131);
        uint64_t v41 = v37;
        sub_10008DB18((uint64_t)&v122, &qword_10095F6E8);
        uint64_t v42 = *(void *)(*sub_10007E4EC(&v131, *((uint64_t *)&v132 + 1))
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        uint64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v95 = v35;
          uint64_t v96 = v21;
          uint64_t v97 = OnboardingNavigationView;
          unint64_t v120 = v37;
          uint64_t v44 = (void *)(v42 + 32);
          int v45 = (void (**)(char *, uint64_t))(v32 + 8);
          uint64_t v94 = v42;
          swift_bridgeObjectRetain();
          uint64_t v46 = 0;
          while (1)
          {
            uint64_t v48 = v44[3];
            uint64_t v47 = v44[4];
            sub_10007E4EC(v44, v48);
            (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v47);
            char v49 = static UUID.== infix(_:_:)();
            (*v45)(v34, v31);
            if (v49) {
              break;
            }
            ++v46;
            v44 += 5;
            if (v43 == v46)
            {
              swift_bridgeObjectRelease();
              uint64_t v37 = v120;
              uint64_t OnboardingNavigationView = v97;
              uint64_t v21 = v96;
              uint64_t v35 = v95;
              goto LABEL_12;
            }
          }
          swift_bridgeObjectRelease();
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v131);
          sub_100505328((uint64_t)v36, v46, 0, v115);
          uint64_t v37 = v120;
          uint64_t OnboardingNavigationView = v97;
          uint64_t v21 = v96;
          uint64_t v35 = v95;
        }
        else
        {
LABEL_12:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v131);
        }
      }
      else
      {
        uint64_t v50 = v37;
        sub_10008DB18((uint64_t)&v122, &qword_10095F6E8);
      }
      uint64_t v51 = (char *)v36 + *(int *)(v35 + 20);
      uint64_t v52 = *(void *)v51;
      switch(v51[16])
      {
        case 1:
LABEL_19:
          sub_1000AEF2C(v119, (uint64_t)&v122, &qword_100955A00);
          if (!*((void *)&v123 + 1))
          {

            uint64_t v63 = &qword_100955A00;
            uint64_t v64 = &v122;
            goto LABEL_31;
          }
          if (swift_dynamicCast())
          {
            id v54 = (id)v131;
            swift_retain();
            sub_100371DCC(v54, 1);

            swift_release();
          }
          else
          {
LABEL_46:
          }
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
        case 2:
LABEL_22:
          sub_1000AEF2C(v119, (uint64_t)&v122, &qword_100955A00);
          if (*((void *)&v123 + 1))
          {
            uint64_t v55 = (uint64_t)v117;
            uint64_t v56 = v118;
            int v57 = swift_dynamicCast();
            uint64_t v58 = v116;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v116 + 56))(v55, v57 ^ 1u, 1, v56);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v55, 1, v56) != 1)
            {
              sub_1000D27E0(v55, (uint64_t)v21, type metadata accessor for TrendsActionContext);
              uint64_t v59 = v114;
              sub_1000AEF2C((uint64_t)v21, v114, &qword_10095BFB0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v59, 1, v113) == 1)
              {
                sub_10008DB18(v59, &qword_10095BFB0);
                if (v21[*(int *)(v56 + 20) + 8] == 255)
                {
                  sub_1000E370C((uint64_t)v21, type metadata accessor for TrendsActionContext);

                  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
                }
                uint64_t v60 = *(void **)(*(void *)&v37[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                               + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager);
                id v61 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
                id v62 = sub_10020AD40(v60);
                [v37 presentViewController:v62 animated:1 completion:0];
              }
              else
              {
                uint64_t v65 = v59;
                uint64_t v66 = v111;
                sub_1000D27E0(v65, v111, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
                sub_1003FEA50(v66);

                sub_1000E370C(v66, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
              }
              uint64_t v67 = type metadata accessor for TrendsActionContext;
              goto LABEL_34;
            }
          }
          else
          {
            sub_10008DB18((uint64_t)&v122, &qword_100955A00);
            uint64_t v55 = (uint64_t)v117;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v118);
          }

          uint64_t v63 = &qword_10095FC38;
LABEL_30:
          uint64_t v64 = (long long *)v55;
LABEL_31:
          sub_10008DB18((uint64_t)v64, v63);
          break;
        case 3:
          switch(v52)
          {
            case 1:
              if (qword_10094AA90 != -1) {
                swift_once();
              }
              uint64_t v68 = qword_100997DB0;
              swift_getKeyPath();
              *(void *)&long long v122 = v68;
              sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
              ObservationRegistrar.access<A, B>(_:keyPath:)();
              swift_release();
              if (*(unsigned char *)(v68 + 16))
              {
                [v37 showLoad];
              }
              else
              {
                BOOL v85 = v104;
                *uint64_t v104 = ASFriendListDisplayMode.id.getter;
                v85[1] = 0;
                v85[2] = 0;
                v85[3] = 0;
                *(void *)&long long v131 = _swiftEmptyArrayStorage;
                sub_1000AFA94((uint64_t *)&unk_10095F6C0);
                State.init(wrappedValue:)();
                uint64_t v86 = *((void *)&v122 + 1);
                v85[4] = v122;
                v85[5] = v86;
                LOBYTE(v131) = 0;
                State.init(wrappedValue:)();
                uint64_t v87 = *((void *)&v122 + 1);
                *((unsigned char *)v85 + 48) = v122;
                v85[7] = v87;
                LOBYTE(v131) = 0;
                State.init(wrappedValue:)();
                uint64_t v88 = *((void *)&v122 + 1);
                *((unsigned char *)v85 + 64) = v122;
                v85[9] = v88;
                uint64_t v89 = (void *)((char *)v85 + *(int *)(OnboardingNavigationView + 36));
                *uint64_t v89 = swift_getKeyPath();
                sub_1000AFA94(&qword_10094DFC8);
                swift_storeEnumTagMultiPayload();
                id v90 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
                uint64_t v91 = (void *)UIHostingController.init(rootView:)();
                [v37 presentViewController:v91 animated:1 completion:0];
              }
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
            case 2:
              sub_1000AEF2C(v119, (uint64_t)v129, &qword_100955A00);
              if (v130)
              {
                if (swift_dynamicCast())
                {
                  if (*((void *)&v132 + 1))
                  {
                    long long v123 = v132;
                    long long v122 = v131;
                    uint64_t v69 = (uint64_t)v133;
                    unint64_t v124 = v133;
                    uint64_t v70 = *((void *)&v132 + 1);
                    unint64_t v71 = sub_10007E4EC(&v122, *((uint64_t *)&v132 + 1));
                    sub_100401F74((uint64_t)v71, (uint64_t)v37, v70, v69);

                    sub_100350CBC((uint64_t)&v122);
                    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
                  }
                }
                else
                {
                  Swift::Int v133 = 0;
                  long long v131 = 0u;
                  long long v132 = 0u;
                }
              }
              else
              {
                sub_10008DB18((uint64_t)v129, &qword_100955A00);
                long long v131 = 0u;
                long long v132 = 0u;
                Swift::Int v133 = 0;
              }

              uint64_t v63 = (uint64_t *)&unk_10095FC48;
              goto LABEL_63;
            case 3:
              sub_1000AEF2C(v119, (uint64_t)&v131, &qword_100955A00);
              if (*((void *)&v132 + 1))
              {
                if (swift_dynamicCast())
                {
                  uint64_t v72 = v124;
                  sub_1003F8CFC(v124, v121, v125, v126, v127, v128, *(CGFloat *)&v122, *((CGFloat *)&v122 + 1), *(CGFloat *)&v123, *((CGFloat *)&v123 + 1));
                  swift_release();
                  swift_release();
                }
                goto LABEL_46;
              }

              uint64_t v63 = &qword_100955A00;
LABEL_63:
              uint64_t v64 = &v131;
              goto LABEL_31;
            case 4:
              goto LABEL_19;
            case 5:
              sub_1000AEF2C(v119, (uint64_t)&v122, &qword_100955A00);
              if (*((void *)&v123 + 1))
              {
                uint64_t v55 = (uint64_t)v108;
                uint64_t v74 = CardActionContext;
                int v75 = swift_dynamicCast();
                uint64_t v76 = v105;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v55, v75 ^ 1u, 1, v74);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v55, 1, v74) != 1)
                {
                  uint64_t v77 = v99;
                  sub_1000D27E0(v55, v99, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
                  sub_1003FBEB8(v77, v77 + *(int *)(v74 + 20));
                  uint64_t v78 = CatalogLockup.identifier.getter();
                  uint64_t v80 = v79;
                  id v81 = objc_retain(*(id *)(*(void *)&v37[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                          + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
                  sub_10064E14C(v78, v80);
                  swift_bridgeObjectRelease();

                  sub_1000E370C(v77, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
                  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
                }
              }
              else
              {
                sub_10008DB18((uint64_t)&v122, &qword_100955A00);
                uint64_t v55 = (uint64_t)v108;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v108, 1, 1, CardActionContext);
              }

              uint64_t v63 = &qword_10095FC40;
              goto LABEL_30;
            case 6:
              sub_10008E75C((uint64_t)v134, (uint64_t)&v122);
              sub_1000AFA94(&qword_10094D218);
              uint64_t v55 = (uint64_t)v110;
              uint64_t v82 = v109;
              char v83 = swift_dynamicCast();
              uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
              if ((v83 & 1) == 0)
              {
                v84(v55, 1, 1, v82);

                uint64_t v63 = &qword_10094D198;
                goto LABEL_30;
              }
              v84(v55, 0, 1, v82);
              uint64_t v21 = v100;
              sub_1000D27E0(v55, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
              uint64_t v55 = v103;
              sub_1000AEF2C((uint64_t)&v21[*(int *)(v82 + 36)], v103, (uint64_t *)&unk_100955650);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v55, 1, v102) == 1)
              {
                sub_1000E370C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

                uint64_t v63 = (uint64_t *)&unk_100955650;
                goto LABEL_30;
              }
              uint64_t v92 = v55;
              uint64_t v93 = v98;
              sub_1000D27E0(v92, v98, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              sub_1003FDF70(v93);
              sub_1003FC8BC(v93);

              sub_1000E370C(v93, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              uint64_t v67 = (uint64_t (*)(void))type metadata accessor for CatalogTipCard;
              break;
            case 7:
              goto LABEL_22;
            default:

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
          }
LABEL_34:
          sub_1000E370C((uint64_t)v21, v67);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
        default:
          int v53 = sub_10007CCD8(*(void *)v51, *((void *)v51 + 1), 0);
          sub_1003F7088(v52, v53, 1, 0, 256);

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
      }
    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v134);
}

uint64_t sub_1004FB8EC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v109 = a2;
  uint64_t v110 = type metadata accessor for UUID();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for TrendListMetric();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095FC38);
  __chkstk_darwin(v14 - 8);
  uint64_t v106 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for TrendsActionContext(0);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v18 - 8);
  uint64_t v95 = (uint64_t)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for CatalogTipSection();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v90 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v21 - 8);
  uint64_t v101 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for CatalogTipCard();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v92 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_10095FC40);
  __chkstk_darwin(v24 - 8);
  uint64_t v99 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  uint64_t v96 = *(void *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  uint64_t v91 = (uint64_t)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Card = type metadata accessor for LoadCard();
  v123[3] = Card;
  v123[4] = (uint64_t)&off_1008D2310;
  uint64_t v28 = sub_1000B1710(v123);
  sub_1000D2848(a1, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LoadCard);
  uint64_t v29 = *(char **)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  if (!v29) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
  }
  if (*((unsigned char *)v28 + *(int *)(Card + 28)))
  {
    uint64_t v30 = (char *)v28 + *(int *)(Card + 20);
    if (v30[16] != 3 || *(_OWORD *)v30 != 0)
    {
      uint64_t v31 = v29;
      sub_100501ED8((uint64_t)v28, v31);
LABEL_6:
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
  }
  uint64_t v32 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess();
  sub_1000AEF2C(v32, (uint64_t)&v111, &qword_10095F6E8);
  if (*((void *)&v112 + 1))
  {
    uint64_t v89 = v12;
    sub_10008E75C((uint64_t)&v111, (uint64_t)&v120);
    uint64_t v33 = v29;
    sub_10008DB18((uint64_t)&v111, &qword_10095F6E8);
    uint64_t v34 = *(void *)(*sub_10007E4EC(&v120, *((uint64_t *)&v121 + 1))
                    + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v84 = a3;
      BOOL v85 = v17;
      uint64_t v86 = OnboardingNavigationView;
      uint64_t v87 = v9;
      uint64_t v88 = v29;
      uint64_t v36 = (void *)(v34 + 32);
      uint64_t v37 = (void (**)(char *, uint64_t))(v108 + 8);
      uint64_t v108 = v34;
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      while (1)
      {
        uint64_t v40 = v36[3];
        uint64_t v39 = v36[4];
        sub_10007E4EC(v36, v40);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v39);
        LOBYTE(v39) = static UUID.== infix(_:_:)();
        (*v37)(v6, v110);
        if (v39) {
          break;
        }
        ++v38;
        v36 += 5;
        if (v35 == v38)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = v88;
          uint64_t v9 = v87;
          uint64_t OnboardingNavigationView = v86;
          uint64_t v17 = v85;
          a3 = v84;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v120);
      sub_100505328((uint64_t)v28, v38, 0, (uint64_t (*)(void))type metadata accessor for LoadCard);
      uint64_t v29 = v88;
      uint64_t v9 = v87;
      uint64_t OnboardingNavigationView = v86;
      uint64_t v17 = v85;
      a3 = v84;
    }
    else
    {
LABEL_13:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v120);
    }
    uint64_t v12 = v89;
  }
  else
  {
    uint64_t v41 = v29;
    sub_10008DB18((uint64_t)&v111, &qword_10095F6E8);
  }
  uint64_t v42 = (char *)v28 + *(int *)(Card + 20);
  uint64_t v43 = *(void *)v42;
  switch(v42[16])
  {
    case 1:
LABEL_21:
      sub_1000AEF2C(v109, (uint64_t)&v111, &qword_100955A00);
      if (!*((void *)&v112 + 1))
      {

        int v53 = &qword_100955A00;
        id v54 = &v111;
        goto LABEL_32;
      }
      if (swift_dynamicCast())
      {
        id v45 = (id)v120;
        swift_retain();
        sub_100371DCC(v45, 1);

        swift_release();
      }
      else
      {
LABEL_47:
      }
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
    case 2:
LABEL_24:
      sub_1000AEF2C(v109, (uint64_t)&v111, &qword_100955A00);
      if (*((void *)&v112 + 1))
      {
        uint64_t v46 = (uint64_t)v106;
        uint64_t v47 = v107;
        int v48 = swift_dynamicCast();
        uint64_t v49 = v105;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v46, v48 ^ 1u, 1, v47);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v47) != 1)
        {
          sub_1000D27E0(v46, (uint64_t)v17, type metadata accessor for TrendsActionContext);
          sub_1000AEF2C((uint64_t)v17, (uint64_t)v12, &qword_10095BFB0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v12, 1, v104) == 1)
          {
            sub_10008DB18((uint64_t)v12, &qword_10095BFB0);
            if (v17[*(int *)(v47 + 20) + 8] == 255)
            {
              sub_1000E370C((uint64_t)v17, type metadata accessor for TrendsActionContext);

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
            }
            uint64_t v50 = *(void **)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                           + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager);
            id v51 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
            id v52 = sub_10020AD40(v50);
            [v29 presentViewController:v52 animated:1 completion:0];
          }
          else
          {
            uint64_t v55 = v102;
            sub_1000D27E0((uint64_t)v12, v102, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
            sub_1003FEA50(v55);

            sub_1000E370C(v55, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
          }
          uint64_t v56 = type metadata accessor for TrendsActionContext;
          goto LABEL_35;
        }
      }
      else
      {
        sub_10008DB18((uint64_t)&v111, &qword_100955A00);
        uint64_t v46 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v106, 1, 1, v107);
      }

      int v53 = &qword_10095FC38;
      id v54 = (long long *)v46;
LABEL_32:
      sub_10008DB18((uint64_t)v54, v53);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
    case 3:
      switch(v43)
      {
        case 1:
          if (qword_10094AA90 != -1) {
            swift_once();
          }
          uint64_t v57 = qword_100997DB0;
          swift_getKeyPath();
          *(void *)&long long v111 = v57;
          sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(unsigned char *)(v57 + 16))
          {
            [v29 showLoad];

            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
          }
          *(void *)uint64_t v9 = ASFriendListDisplayMode.id.getter;
          *((void *)v9 + 1) = 0;
          *((void *)v9 + 2) = 0;
          *((void *)v9 + 3) = 0;
          *(void *)&long long v120 = _swiftEmptyArrayStorage;
          sub_1000AFA94((uint64_t *)&unk_10095F6C0);
          State.init(wrappedValue:)();
          uint64_t v76 = *((void *)&v111 + 1);
          *((void *)v9 + 4) = v111;
          *((void *)v9 + 5) = v76;
          LOBYTE(v120) = 0;
          State.init(wrappedValue:)();
          uint64_t v77 = *((void *)&v111 + 1);
          v9[48] = v111;
          *((void *)v9 + 7) = v77;
          LOBYTE(v120) = 0;
          State.init(wrappedValue:)();
          uint64_t v78 = *((void *)&v111 + 1);
          v9[64] = v111;
          *((void *)v9 + 9) = v78;
          uint64_t v79 = (uint64_t *)&v9[*(int *)(OnboardingNavigationView + 36)];
          *uint64_t v79 = swift_getKeyPath();
          sub_1000AFA94(&qword_10094DFC8);
          swift_storeEnumTagMultiPayload();
          id v80 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
          uint64_t v31 = (char *)UIHostingController.init(rootView:)();
          [v29 presentViewController:v31 animated:1 completion:0];

          goto LABEL_6;
        case 2:
          sub_1000AEF2C(v109, (uint64_t)v118, &qword_100955A00);
          if (v119)
          {
            if (swift_dynamicCast())
            {
              if (*((void *)&v121 + 1))
              {
                long long v112 = v121;
                long long v111 = v120;
                uint64_t v58 = (uint64_t)v122;
                uint64_t v113 = v122;
                uint64_t v59 = *((void *)&v121 + 1);
                uint64_t v60 = sub_10007E4EC(&v111, *((uint64_t *)&v121 + 1));
                sub_100401F74((uint64_t)v60, (uint64_t)v29, v59, v58);

                sub_100350CBC((uint64_t)&v111);
                return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
              }
            }
            else
            {
              long long v122 = 0;
              long long v120 = 0u;
              long long v121 = 0u;
            }
          }
          else
          {
            sub_10008DB18((uint64_t)v118, &qword_100955A00);
            long long v120 = 0u;
            long long v121 = 0u;
            long long v122 = 0;
          }

          int v53 = (uint64_t *)&unk_10095FC48;
          goto LABEL_65;
        case 3:
          sub_1000AEF2C(v109, (uint64_t)&v120, &qword_100955A00);
          if (*((void *)&v121 + 1))
          {
            if (swift_dynamicCast())
            {
              id v61 = a3;
              id v62 = v113;
              sub_1003F8CFC(v113, v61, v114, v115, v116, v117, *(CGFloat *)&v111, *((CGFloat *)&v111 + 1), *(CGFloat *)&v112, *((CGFloat *)&v112 + 1));
              swift_release();
              swift_release();
            }
            goto LABEL_47;
          }

          int v53 = &qword_100955A00;
LABEL_65:
          id v54 = &v120;
          goto LABEL_32;
        case 4:
          goto LABEL_21;
        case 5:
          sub_1000AEF2C(v109, (uint64_t)&v111, &qword_100955A00);
          if (*((void *)&v112 + 1))
          {
            uint64_t v64 = (uint64_t)v99;
            uint64_t v65 = CardActionContext;
            int v66 = swift_dynamicCast();
            uint64_t v67 = v96;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v64, v66 ^ 1u, 1, v65);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65) != 1)
            {
              uint64_t v68 = v91;
              sub_1000D27E0(v64, v91, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              sub_1003FBEB8(v68, v68 + *(int *)(v65 + 20));
              uint64_t v69 = CatalogLockup.identifier.getter();
              uint64_t v71 = v70;
              id v72 = objc_retain(*(id *)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                      + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
              sub_10064E14C(v69, v71);
              swift_bridgeObjectRelease();

              sub_1000E370C(v68, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
            }
          }
          else
          {
            sub_10008DB18((uint64_t)&v111, &qword_100955A00);
            uint64_t v64 = (uint64_t)v99;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v99, 1, 1, CardActionContext);
          }

          int v53 = &qword_10095FC40;
          goto LABEL_62;
        case 6:
          sub_10008E75C((uint64_t)v123, (uint64_t)&v111);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v64 = (uint64_t)v101;
          uint64_t v73 = v100;
          char v74 = swift_dynamicCast();
          int v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
          if ((v74 & 1) == 0)
          {
            v75(v64, 1, 1, v73);

            int v53 = &qword_10094D198;
            goto LABEL_62;
          }
          v75(v64, 0, 1, v73);
          uint64_t v17 = v92;
          sub_1000D27E0(v64, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
          uint64_t v64 = v95;
          sub_1000AEF2C((uint64_t)&v17[*(int *)(v73 + 36)], v95, (uint64_t *)&unk_100955650);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v64, 1, v94) == 1)
          {
            sub_1000E370C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

            int v53 = (uint64_t *)&unk_100955650;
LABEL_62:
            id v54 = (long long *)v64;
            goto LABEL_32;
          }
          uint64_t v81 = v64;
          uint64_t v82 = v90;
          sub_1000D27E0(v81, v90, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          sub_1003FDF70(v82);
          sub_1003FC8BC(v82);

          sub_1000E370C(v82, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          uint64_t v56 = (uint64_t (*)(void))type metadata accessor for CatalogTipCard;
LABEL_35:
          sub_1000E370C((uint64_t)v17, v56);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
        case 7:
          goto LABEL_24;
        default:

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
      }
    default:
      int v44 = sub_10007CCD8(*(void *)v42, *((void *)v42 + 1), 0);
      sub_1003F7088(v43, v44, 1, 0, 256);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
  }
}

uint64_t sub_1004FCC0C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v106 = a2;
  uint64_t v107 = type metadata accessor for UUID();
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for TrendListMetric();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095FC38);
  __chkstk_darwin(v14 - 8);
  uint64_t v103 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for TrendsActionContext(0);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v18 - 8);
  uint64_t v93 = (uint64_t)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for CatalogTipSection();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v88 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v21 - 8);
  uint64_t v98 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v96 = *((void *)v23 - 1);
  __chkstk_darwin(v23);
  uint64_t v90 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_10095FC40);
  __chkstk_darwin(v25 - 8);
  uint64_t v97 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  uint64_t v94 = *(void *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  uint64_t v89 = (uint64_t)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120[3] = (uint64_t)v23;
  v120[4] = (uint64_t)&off_1008C2CA0;
  uint64_t v28 = sub_1000B1710(v120);
  sub_1000D2848(a1, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
  uint64_t v29 = *(char **)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  if (!v29) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
  }
  if (*((unsigned char *)v28 + v23[7]))
  {
    uint64_t v30 = (char *)v28 + v23[5];
    if (v30[16] != 3 || *(_OWORD *)v30 != 0)
    {
      uint64_t v31 = v29;
      sub_100503820((uint64_t)v28, v31);
LABEL_6:
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
  }
  uint64_t v32 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess();
  sub_1000AEF2C(v32, (uint64_t)&v108, &qword_10095F6E8);
  if (*((void *)&v109 + 1))
  {
    uint64_t v87 = v12;
    sub_10008E75C((uint64_t)&v108, (uint64_t)&v117);
    uint64_t v33 = v29;
    sub_10008DB18((uint64_t)&v108, &qword_10095F6E8);
    uint64_t v34 = *(void *)(*sub_10007E4EC(&v117, *((uint64_t *)&v118 + 1))
                    + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v82 = a3;
      uint64_t v83 = v17;
      uint64_t v84 = OnboardingNavigationView;
      BOOL v85 = v9;
      uint64_t v86 = v29;
      uint64_t v36 = (void *)(v34 + 32);
      uint64_t v37 = (void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v105 = v34;
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      while (1)
      {
        uint64_t v40 = v36[3];
        uint64_t v39 = v36[4];
        sub_10007E4EC(v36, v40);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v39);
        LOBYTE(v39) = static UUID.== infix(_:_:)();
        (*v37)(v6, v107);
        if (v39) {
          break;
        }
        ++v38;
        v36 += 5;
        if (v35 == v38)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = v86;
          uint64_t v9 = v85;
          uint64_t OnboardingNavigationView = v84;
          uint64_t v17 = v83;
          a3 = v82;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v117);
      sub_100505328((uint64_t)v28, v38, 0, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
      uint64_t v29 = v86;
      uint64_t v9 = v85;
      uint64_t OnboardingNavigationView = v84;
      uint64_t v17 = v83;
      a3 = v82;
    }
    else
    {
LABEL_13:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v117);
    }
    uint64_t v12 = v87;
  }
  else
  {
    uint64_t v41 = v29;
    sub_10008DB18((uint64_t)&v108, &qword_10095F6E8);
  }
  uint64_t v42 = (char *)v28 + v23[5];
  uint64_t v43 = *(void *)v42;
  switch(v42[16])
  {
    case 1:
LABEL_21:
      sub_1000AEF2C(v106, (uint64_t)&v108, &qword_100955A00);
      if (!*((void *)&v109 + 1))
      {

        int v53 = &qword_100955A00;
        id v54 = &v108;
        goto LABEL_32;
      }
      if (swift_dynamicCast())
      {
        id v45 = (id)v117;
        swift_retain();
        sub_100371DCC(v45, 1);

        swift_release();
      }
      else
      {
LABEL_47:
      }
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    case 2:
LABEL_24:
      sub_1000AEF2C(v106, (uint64_t)&v108, &qword_100955A00);
      if (*((void *)&v109 + 1))
      {
        uint64_t v46 = (uint64_t)v103;
        uint64_t v47 = v104;
        int v48 = swift_dynamicCast();
        uint64_t v49 = v102;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v46, v48 ^ 1u, 1, v47);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v47) != 1)
        {
          sub_1000D27E0(v46, (uint64_t)v17, type metadata accessor for TrendsActionContext);
          sub_1000AEF2C((uint64_t)v17, (uint64_t)v12, &qword_10095BFB0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v12, 1, v101) == 1)
          {
            sub_10008DB18((uint64_t)v12, &qword_10095BFB0);
            if (v17[*(int *)(v47 + 20) + 8] == 255)
            {
              sub_1000E370C((uint64_t)v17, type metadata accessor for TrendsActionContext);

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
            }
            uint64_t v50 = *(void **)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                           + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager);
            id v51 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
            id v52 = sub_10020AD40(v50);
            [v29 presentViewController:v52 animated:1 completion:0];
          }
          else
          {
            uint64_t v55 = v99;
            sub_1000D27E0((uint64_t)v12, v99, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
            sub_1003FEA50(v55);

            sub_1000E370C(v55, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
          }
          uint64_t v56 = type metadata accessor for TrendsActionContext;
          goto LABEL_35;
        }
      }
      else
      {
        sub_10008DB18((uint64_t)&v108, &qword_100955A00);
        uint64_t v46 = (uint64_t)v103;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v103, 1, 1, v104);
      }

      int v53 = &qword_10095FC38;
      id v54 = (long long *)v46;
LABEL_32:
      sub_10008DB18((uint64_t)v54, v53);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    case 3:
      switch(v43)
      {
        case 1:
          if (qword_10094AA90 != -1) {
            swift_once();
          }
          uint64_t v57 = qword_100997DB0;
          swift_getKeyPath();
          *(void *)&long long v108 = v57;
          sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(unsigned char *)(v57 + 16))
          {
            [v29 showLoad];

            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
          }
          *(void *)uint64_t v9 = ASFriendListDisplayMode.id.getter;
          *((void *)v9 + 1) = 0;
          *((void *)v9 + 2) = 0;
          *((void *)v9 + 3) = 0;
          *(void *)&long long v117 = _swiftEmptyArrayStorage;
          sub_1000AFA94((uint64_t *)&unk_10095F6C0);
          State.init(wrappedValue:)();
          uint64_t v75 = *((void *)&v108 + 1);
          *((void *)v9 + 4) = v108;
          *((void *)v9 + 5) = v75;
          LOBYTE(v117) = 0;
          State.init(wrappedValue:)();
          uint64_t v76 = *((void *)&v108 + 1);
          v9[48] = v108;
          *((void *)v9 + 7) = v76;
          LOBYTE(v117) = 0;
          State.init(wrappedValue:)();
          uint64_t v77 = *((void *)&v108 + 1);
          v9[64] = v108;
          *((void *)v9 + 9) = v77;
          uint64_t v78 = (uint64_t *)&v9[*(int *)(OnboardingNavigationView + 36)];
          *uint64_t v78 = swift_getKeyPath();
          sub_1000AFA94(&qword_10094DFC8);
          swift_storeEnumTagMultiPayload();
          id v79 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
          uint64_t v31 = (char *)UIHostingController.init(rootView:)();
          [v29 presentViewController:v31 animated:1 completion:0];

          goto LABEL_6;
        case 2:
          sub_1000AEF2C(v106, (uint64_t)v115, &qword_100955A00);
          if (v116)
          {
            if (swift_dynamicCast())
            {
              if (*((void *)&v118 + 1))
              {
                long long v109 = v118;
                long long v108 = v117;
                uint64_t v58 = (uint64_t)v119;
                uint64_t v110 = v119;
                uint64_t v59 = *((void *)&v118 + 1);
                uint64_t v60 = sub_10007E4EC(&v108, *((uint64_t *)&v118 + 1));
                sub_100401F74((uint64_t)v60, (uint64_t)v29, v59, v58);

                sub_100350CBC((uint64_t)&v108);
                return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
              }
            }
            else
            {
              uint64_t v119 = 0;
              long long v117 = 0u;
              long long v118 = 0u;
            }
          }
          else
          {
            sub_10008DB18((uint64_t)v115, &qword_100955A00);
            long long v117 = 0u;
            long long v118 = 0u;
            uint64_t v119 = 0;
          }

          int v53 = (uint64_t *)&unk_10095FC48;
          goto LABEL_65;
        case 3:
          sub_1000AEF2C(v106, (uint64_t)&v117, &qword_100955A00);
          if (*((void *)&v118 + 1))
          {
            if (swift_dynamicCast())
            {
              id v61 = a3;
              id v62 = v110;
              sub_1003F8CFC(v110, v61, v111, v112, v113, v114, *(CGFloat *)&v108, *((CGFloat *)&v108 + 1), *(CGFloat *)&v109, *((CGFloat *)&v109 + 1));
              swift_release();
              swift_release();
            }
            goto LABEL_47;
          }

          int v53 = &qword_100955A00;
LABEL_65:
          id v54 = &v117;
          goto LABEL_32;
        case 4:
          goto LABEL_21;
        case 5:
          sub_1000AEF2C(v106, (uint64_t)&v108, &qword_100955A00);
          if (*((void *)&v109 + 1))
          {
            uint64_t v64 = (uint64_t)v97;
            uint64_t v65 = CardActionContext;
            int v66 = swift_dynamicCast();
            uint64_t v67 = v94;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v64, v66 ^ 1u, 1, v65);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65) != 1)
            {
              uint64_t v68 = v89;
              sub_1000D27E0(v64, v89, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              sub_1003FBEB8(v68, v68 + *(int *)(v65 + 20));
              uint64_t v69 = CatalogLockup.identifier.getter();
              uint64_t v71 = v70;
              id v72 = objc_retain(*(id *)(*(void *)&v29[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                      + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
              sub_10064E14C(v69, v71);
              swift_bridgeObjectRelease();

              sub_1000E370C(v68, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
            }
          }
          else
          {
            sub_10008DB18((uint64_t)&v108, &qword_100955A00);
            uint64_t v64 = (uint64_t)v97;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v97, 1, 1, CardActionContext);
          }

          int v53 = &qword_10095FC40;
          goto LABEL_62;
        case 6:
          sub_10008E75C((uint64_t)v120, (uint64_t)&v108);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v64 = (uint64_t)v98;
          char v73 = swift_dynamicCast();
          char v74 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v96 + 56);
          if ((v73 & 1) == 0)
          {
            v74(v64, 1, 1, v23);

            int v53 = &qword_10094D198;
            goto LABEL_62;
          }
          v74(v64, 0, 1, v23);
          uint64_t v17 = v90;
          sub_1000D27E0(v64, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
          uint64_t v64 = v93;
          sub_1000AEF2C((uint64_t)&v17[v23[9]], v93, (uint64_t *)&unk_100955650);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v64, 1, v92) == 1)
          {
            sub_1000E370C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

            int v53 = (uint64_t *)&unk_100955650;
LABEL_62:
            id v54 = (long long *)v64;
            goto LABEL_32;
          }
          uint64_t v80 = v64;
          uint64_t v81 = v88;
          sub_1000D27E0(v80, v88, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          sub_1003FDF70(v81);
          sub_1003FC8BC(v81);

          sub_1000E370C(v81, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          uint64_t v56 = (uint64_t (*)(void))type metadata accessor for CatalogTipCard;
LABEL_35:
          sub_1000E370C((uint64_t)v17, v56);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
        case 7:
          goto LABEL_24;
        default:

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
      }
    default:
      int v44 = sub_10007CCD8(*(void *)v42, *((void *)v42 + 1), 0);
      sub_1003F7088(v43, v44, 1, 0, 256);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
  }
}

uint64_t sub_1004FDF14()
{
  return sub_10001EE38(&qword_10094DB88);
}

uint64_t sub_1004FDF20(uint64_t *a1)
{
  return sub_1000E339C(a1, &qword_10094DB88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1004F82F4);
}

uint64_t sub_1004FDF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100010B58(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (void (*)(char *, char *))sub_100501234, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
}

uint64_t sub_1004FDF98(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
  v103[3] = Card;
  v103[4] = (uint64_t)&off_1008C2C58;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
  uint64_t v11 = (char *)v10 + *(int *)(Card + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  uint64_t v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    uint64_t v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_1000A9368();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  int v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x1004FEB70);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  int v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  uint64_t v75 = (char *)v65 + v66[12];
  *(void *)uint64_t v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (id (**)(int))((char *)v65 + v66[13]);
  char *v76 = sub_100509794;
  v76[1] = (id (*)(int))v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_1004FEC3C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AwardsCard();
  v103[3] = v9;
  v103[4] = (uint64_t)&off_1008C3070;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardsCard);
  uint64_t v11 = (char *)v10 + *(int *)(v9 + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  uint64_t v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    uint64_t v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_1000A90CC();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  int v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x1004FF814);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  int v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  uint64_t v75 = (char *)v65 + v66[12];
  *(void *)uint64_t v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_1004FF8E0(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FriendCard();
  v103[3] = v9;
  v103[4] = (uint64_t)&off_1008D4BE0;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FriendCard);
  uint64_t v11 = (char *)v10 + *(int *)(v9 + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  uint64_t v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    uint64_t v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_100670808();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  int v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x1005004B8);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  int v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  uint64_t v75 = (char *)v65 + v66[12];
  *(void *)uint64_t v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_100500584(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v84 = type metadata accessor for CardTypeConfigurationRoomView();
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v89 = (uint64_t *)((char *)&v82 - v6);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HistoryItemsCard();
  v98[4] = &off_1008BA360;
  v98[3] = v11;
  v98[0] = a1;
  int v12 = sub_10007CCD8(*(void *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), *(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16));
  uint64_t v13 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  swift_retain();
  unint64_t v14 = sub_100447F34(v12);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1000D5C14(v12), (v16 & 1) != 0))
  {
    unint64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v17 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v86 = v13;
  uint64_t v18 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v19 = *(void *)(v18 + 16);
  id v90 = a2;
  if (v19)
  {
    uint64_t v83 = v17;
    uint64_t v88 = v8;
    uint64_t v20 = v18 + 32;
    uint64_t v82 = v18;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v20, (uint64_t)v95);
      uint64_t v23 = v96;
      uint64_t v22 = v97;
      sub_10007E4EC(v95, v96);
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v23, v22);
      switch(v26)
      {
        case 1:
          sub_1000917F8(v24, v25, 1);
LABEL_19:
          if (v12 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v12 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v95, (uint64_t)&v91);
          }
          else
          {
LABEL_20:
            uint64_t v93 = 0;
            long long v92 = 0u;
            long long v91 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v95);
          if (*((void *)&v92 + 1))
          {
            sub_100093E60(&v91, (uint64_t)v94);
            sub_100093E60(v94, (uint64_t)&v91);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v21 = sub_10009569C(0, v21[2] + 1, 1, v21);
            }
            unint64_t v28 = v21[2];
            unint64_t v27 = v21[3];
            if (v28 >= v27 >> 1) {
              uint64_t v21 = sub_10009569C((void *)(v27 > 1), v28 + 1, 1, v21);
            }
            void v21[2] = v28 + 1;
            sub_100093E60(&v91, (uint64_t)&v21[5 * v28 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v91, &qword_10094CEF0);
          }
          v20 += 40;
          if (--v19) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v90;
          uint64_t v8 = v88;
          unint64_t v17 = v83;
          break;
        case 3:
          switch(v24)
          {
            case 1:
              if (v12 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v12 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v12 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v12 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v12 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!(_BYTE)v12) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v24)
          {
            case 2:
            case 3:
              if (v12 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v12 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v12 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v12 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v12 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v12 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v12 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v12 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v12 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v12 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  v95[0] = (uint64_t)v17;
  sub_1001E3F18((uint64_t)v21);
  id v29 = *(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v95, v29);
  swift_bridgeObjectRelease();

  uint64_t v30 = *(void *)(v95[0] + 16);
  if (!v30)
  {
LABEL_62:
    swift_release();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    uint64_t v38 = HKLogActivity;
    sub_10008E75C((uint64_t)v98, (uint64_t)v95);
    if (os_log_type_enabled(v38, v37))
    {
      char v39 = v38;
      uint64_t v40 = swift_slowAlloc();
      *(void *)&v94[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v41 = _typeName(_:qualified:)();
      *(void *)&long long v91 = sub_10008F1F4(v41, v42, (uint64_t *)v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      sub_10007E4EC(v95, v96);
      uint64_t v43 = sub_1000A67DC();
      *(void *)&long long v91 = sub_10008F1F4(v43, v44, (uint64_t *)v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v95);
      _os_log_impl((void *)&_mh_execute_header, v39, v37, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v95);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v98);
  }
  uint64_t v83 = v29;
  unint64_t v31 = (void *)(v95[0] + 32);
  uint64_t v32 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v88 = v95[0];
  swift_retain();
  uint64_t v33 = 0;
  while (1)
  {
    uint64_t v34 = v31[3];
    uint64_t v35 = v31[4];
    sub_10007E4EC(v31, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    char v36 = static UUID.== infix(_:_:)();
    (*v32)(v10, v7);
    if (v36) {
      break;
    }
    ++v33;
    v31 += 5;
    if (v30 == v33)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(ObjectType) = sub_10007CCD8(*(void *)(v98[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(void *)(v98[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), *(unsigned char *)(v98[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16));
  sub_10008E75C((uint64_t)v98, (uint64_t)v95);
  unint64_t v45 = *(void **)((char *)v83 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  id v46 = v86;
  unint64_t v47 = v45;
  int v48 = v90;
  id v49 = [v90 view];
  if (!v49)
  {
    __break(1u);
    goto LABEL_80;
  }
  id v50 = v49;
  id v51 = [v49 window];

  if (v51)
  {
    [v51 bounds];
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v53 = 0;
  }
  id v54 = [v48 view];
  if (!v54)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x100501168);
  }
  uint64_t v55 = v54;
  id v56 = [v54 window];

  id v86 = v46;
  uint64_t v83 = v47;
  if (v56)
  {
    [v56 bounds];
    uint64_t v58 = v57;
  }
  else
  {
    uint64_t v58 = 0;
  }
  LODWORD(v82) = v56 == 0;
  BOOL v59 = v51 == 0;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v48;
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v62 = v89;
  *uint64_t v89 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = (int *)v84;
  uint64_t v64 = *(int *)(v84 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 1;
  *(void *)(v65 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v66 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v62 + v64) = v65;
  *(void *)(v65 + 32) = v66;
  uint64_t v67 = (char *)v62 + v63[15];
  uint64_t v68 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v69 = type metadata accessor for DynamicTypeSize();
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104);
  v70(v67, v68, v69);
  v70((char *)v62 + v63[16], enum case for DynamicTypeSize.xLarge(_:), v69);
  *((unsigned char *)v62 + v63[5]) = ObjectType;
  sub_1000AEEC8((uint64_t)v95, (uint64_t)v62 + v63[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v62 + v63[7]) = v88;
  *(uint64_t *)((char *)v62 + v63[8]) = (uint64_t)v86;
  *(uint64_t *)((char *)v62 + v63[9]) = (uint64_t)v83;
  uint64_t v71 = (char *)v62 + v63[11];
  *(void *)uint64_t v71 = v53;
  v71[8] = v59;
  uint64_t v72 = (char *)v62 + v63[12];
  *(void *)uint64_t v72 = v58;
  v72[8] = v82;
  char v73 = (uint64_t *)((char *)v62 + v63[13]);
  *char v73 = sub_10050B8C8;
  v73[1] = v60;
  char v74 = (uint64_t *)((char *)v62 + v63[14]);
  *char v74 = v33;
  v74[1] = 0;
  sub_1000D2848((uint64_t)v62, v85, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v75 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  uint64_t v76 = v90;
  uint64_t v77 = (void *)UIHostingController.init(rootView:)();
  id v78 = [v77 presentationController];
  if (v78)
  {
    id v79 = v78;
    self;
    uint64_t v80 = (void *)swift_dynamicCastObjCClass();
    if (v80) {
      [v80 setPrefersGrabberVisible:1];
    }
  }
  [v76 presentViewController:v77 animated:1 completion:0 v82];

  sub_1000E370C((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v98);
}

uint64_t sub_100501234(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FriendsHighlightCard();
  v103[3] = v9;
  v103[4] = (uint64_t)&off_1008CBE58;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
  uint64_t v11 = (char *)v10 + *(int *)(v9 + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  char v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    id v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      unint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_1004CEEC0();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x100501E0CLL);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  unint64_t v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  id v75 = (char *)v65 + v66[12];
  *(void *)id v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_100501ED8(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Card = type metadata accessor for LoadCard();
  v103[3] = Card;
  v103[4] = (uint64_t)&off_1008D2310;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LoadCard);
  uint64_t v11 = (char *)v10 + *(int *)(Card + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  char v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    id v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      unint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_100620404();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x100502AB0);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  unint64_t v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  id v75 = (char *)v65 + v66[12];
  *(void *)id v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_100502B7C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TrendsCard();
  v103[3] = v9;
  v103[4] = (uint64_t)&off_1008D1370;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TrendsCard);
  uint64_t v11 = (char *)v10 + *(int *)(v9 + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  char v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    id v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      unint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_1000A7C90();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x100503754);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  unint64_t v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  id v75 = (char *)v65 + v66[12];
  *(void *)id v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_100503820(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v87 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v6);
  uint64_t v95 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CatalogTipCard();
  v103[3] = v9;
  v103[4] = (uint64_t)&off_1008C2CA0;
  uint64_t v10 = sub_1000B1710(v103);
  sub_1000D2848(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
  uint64_t v11 = (char *)v10 + *(int *)(v9 + 20);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v89 = v11;
  int v14 = sub_10007CCD8(v12, v13, v11[16]);
  unsigned __int8 v15 = v14;
  char v16 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  unint64_t v17 = sub_100447F34(v14);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1000D5C14(v15), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v90 = v16;
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  if (v22)
  {
    id v86 = v20;
    uint64_t v23 = v21 + 32;
    uint64_t v85 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _swiftEmptyArrayStorage;
    while (2)
    {
      sub_10008E75C(v23, (uint64_t)v100);
      uint64_t v25 = v101;
      uint64_t v26 = v102;
      sub_10007E4EC(v100, v101);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      switch(v29)
      {
        case 1:
          sub_1000917F8(v27, v28, 1);
LABEL_19:
          if (v15 != 8) {
            goto LABEL_20;
          }
          goto LABEL_17;
        case 2:
LABEL_16:
          if (v15 == 7)
          {
LABEL_17:
            sub_10008E75C((uint64_t)v100, (uint64_t)&v96);
          }
          else
          {
LABEL_20:
            uint64_t v98 = 0;
            long long v97 = 0u;
            long long v96 = 0u;
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
          if (*((void *)&v97 + 1))
          {
            sub_100093E60(&v96, (uint64_t)v99);
            sub_100093E60(v99, (uint64_t)&v96);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v24 = sub_10009569C(0, v24[2] + 1, 1, v24);
            }
            unint64_t v31 = v24[2];
            unint64_t v30 = v24[3];
            if (v31 >= v30 >> 1) {
              uint64_t v24 = sub_10009569C((void *)(v30 > 1), v31 + 1, 1, v24);
            }
            v24[2] = v31 + 1;
            sub_100093E60(&v96, (uint64_t)&v24[5 * v31 + 4]);
          }
          else
          {
            sub_10008DB18((uint64_t)&v96, &qword_10094CEF0);
          }
          v23 += 40;
          if (--v22) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          a2 = v94;
          uint64_t v20 = v86;
          break;
        case 3:
          switch(v27)
          {
            case 1:
              if (v15 != 6) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 2:
              if (v15 != 3) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 3:
              if (v15 != 9) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
              goto LABEL_19;
            case 5:
              if (v15 != 5) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 6:
              if (v15 != 4) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 7:
              goto LABEL_16;
            default:
              if (!v15) {
                goto LABEL_17;
              }
              goto LABEL_20;
          }
        default:
          switch((char)v27)
          {
            case 2:
            case 3:
              if (v15 != 2) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              if (v15 != 12) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
              if (v15 != 13) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 19:
            case 20:
            case 21:
            case 22:
              if (v15 != 15) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 23:
            case 24:
            case 25:
            case 26:
              if (v15 != 16) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 27:
            case 28:
            case 29:
              if (v15 != 14) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 30:
            case 31:
            case 32:
            case 33:
              if (v15 != 11) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 34:
            case 35:
            case 36:
            case 37:
              if (v15 != 10) {
                goto LABEL_20;
              }
              goto LABEL_17;
            case 38:
              if (v15 != 17) {
                goto LABEL_20;
              }
              goto LABEL_17;
            default:
              if (v15 != 1) {
                goto LABEL_20;
              }
              goto LABEL_17;
          }
      }
      break;
    }
  }
  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v100[0] = (uint64_t)v20;
  sub_1001E3F18((uint64_t)v24);
  uint64_t v32 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain();
  sub_1005096FC(v100, v32);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)(v100[0] + 16);
  if (!v33)
  {
LABEL_62:
    swift_release();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    uint64_t v41 = HKLogActivity;
    sub_10008E75C((uint64_t)v103, (uint64_t)v100);
    if (os_log_type_enabled(v41, v40))
    {
      unint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      ASFriendListDisplayMode.id.getter(ObjectType);
      uint64_t v44 = _typeName(_:qualified:)();
      *(void *)&long long v96 = sub_10008F1F4(v44, v45, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_10007E4EC(v100, v101);
      uint64_t v46 = sub_1000A6ED8();
      *(void *)&long long v96 = sub_10008F1F4(v46, v47, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
      _os_log_impl((void *)&_mh_execute_header, v42, v40, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v100);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
  }
  uint64_t v34 = (void *)(v100[0] + 32);
  uint64_t v35 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v92 = v100[0];
  swift_retain();
  uint64_t v36 = 0;
  while (1)
  {
    uint64_t v37 = v34[3];
    uint64_t v38 = v34[4];
    sub_10007E4EC(v34, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v39 = static UUID.== infix(_:_:)();
    (*v35)(v8, v95);
    if (v39) {
      break;
    }
    ++v36;
    v34 += 5;
    if (v33 == v36)
    {
      swift_release();
      goto LABEL_62;
    }
  }
  swift_release();
  LODWORD(v95) = sub_10007CCD8(*(void *)v89, *((void *)v89 + 1), v89[16]);
  sub_10008E75C((uint64_t)v103, (uint64_t)v100);
  int v48 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  id v49 = v90;
  id v50 = v48;
  id v51 = v94;
  id v52 = [v94 view];
  if (!v52)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v53 = v52;
  id v54 = [v52 window];

  if (v54)
  {
    [v54 bounds];
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = [v51 view];
  if (!v57)
  {
LABEL_80:
    __break(1u);

    swift_release();
    __break(1u);
    JUMPOUT(0x1005043F8);
  }
  uint64_t v58 = v57;
  id v59 = [v57 window];

  uint64_t ObjectType = (uint64_t)v49;
  id v90 = v50;
  if (v59)
  {
    [v59 bounds];
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v61 = 0;
  }
  LODWORD(v89) = v59 == 0;
  BOOL v62 = v54 == 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = v93;
  uint64_t *v93 = KeyPath;
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  unint64_t v66 = (int *)v87;
  uint64_t v67 = *(int *)(v87 + 40);
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 1;
  *(void *)(v68 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v69 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v65 + v67) = v68;
  *(void *)(v68 + 32) = v69;
  uint64_t v70 = (char *)v65 + v66[15];
  uint64_t v71 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v72 = type metadata accessor for DynamicTypeSize();
  char v73 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104);
  v73(v70, v71, v72);
  v73((char *)v65 + v66[16], enum case for DynamicTypeSize.xLarge(_:), v72);
  *((unsigned char *)v65 + v66[5]) = v95;
  sub_1000AEEC8((uint64_t)v100, (uint64_t)v65 + v66[6], &qword_10094CEF0);
  *(uint64_t *)((char *)v65 + v66[7]) = v92;
  *(uint64_t *)((char *)v65 + v66[8]) = ObjectType;
  *(uint64_t *)((char *)v65 + v66[9]) = (uint64_t)v90;
  char v74 = (char *)v65 + v66[11];
  *(void *)char v74 = v56;
  v74[8] = v62;
  id v75 = (char *)v65 + v66[12];
  *(void *)id v75 = v61;
  v75[8] = (char)v89;
  uint64_t v76 = (uint64_t *)((char *)v65 + v66[13]);
  void *v76 = sub_10050B8C8;
  v76[1] = v63;
  uint64_t v77 = (uint64_t *)((char *)v65 + v66[14]);
  *uint64_t v77 = v36;
  v77[1] = 0;
  sub_1000D2848((uint64_t)v65, v88, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  id v78 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F820));
  id v79 = v94;
  uint64_t v80 = (void *)UIHostingController.init(rootView:)();
  id v81 = [v80 presentationController];
  if (v81)
  {
    uint64_t v82 = v81;
    self;
    uint64_t v83 = (void *)swift_dynamicCastObjCClass();
    if (v83) {
      [v83 setPrefersGrabberVisible:1];
    }
  }
  [v79 presentViewController:v80 animated:1 completion:0];

  sub_1000E370C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v103);
}

uint64_t sub_1005044C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10050457C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for AwardsCard, (uint64_t)&off_1008C3070, (uint64_t (*)(void))type metadata accessor for AwardsCard, (void (*)(uint64_t *, char *))sub_1004FEC3C, (uint64_t (*)(void))type metadata accessor for AwardsCard);
}

uint64_t sub_100504520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10050457C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (uint64_t)&off_1008CBE58, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard, (void (*)(uint64_t *, char *))sub_100501234, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
}

uint64_t sub_10050457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void), void (*a7)(uint64_t *, char *), uint64_t (*a8)(void))
{
  uint64_t v92 = a8;
  uint64_t v99 = a7;
  uint64_t v100 = type metadata accessor for UUID();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  int v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  unint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10094D190);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for TrendsCard();
  uint64_t v94 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v22 = (void (*)(uint64_t *, char *))((char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v23 - 8);
  uint64_t v88 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for CatalogTipSection();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v84 = (uint64_t)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for URL();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v93 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v27 - 8);
  long long v91 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for CatalogTipCard();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v85 = (uint64_t)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a4(0);
  v105[3] = v30;
  v105[4] = a5;
  unint64_t v31 = sub_1000B1710(v105);
  sub_1000D2848(a1, (uint64_t)v31, a6);
  uint64_t v32 = *(char **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (!v32) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
  }
  if (*((unsigned char *)v31 + *(int *)(v30 + 28)))
  {
    uint64_t v33 = (char *)v31 + *(int *)(v30 + 20);
    if (v33[16] != 3 || *(_OWORD *)v33 != 0)
    {
      uint64_t v34 = v32;
      v99(v31, v34);
LABEL_6:
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
  }
  uint64_t v99 = v22;
  uint64_t v35 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
  swift_beginAccess();
  sub_1000AEF2C(v35, (uint64_t)&v102, &qword_10095F6E8);
  if (!v104)
  {
    uint64_t v46 = v32;
    sub_10008DB18((uint64_t)&v102, &qword_10095F6E8);
LABEL_16:
    uint64_t v39 = (uint64_t)v99;
    goto LABEL_17;
  }
  sub_10008E75C((uint64_t)&v102, (uint64_t)v101);
  uint64_t v36 = v32;
  sub_10008DB18((uint64_t)&v102, &qword_10095F6E8);
  uint64_t v37 = *(void *)(*sub_10007E4EC(v101, v101[3]) + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
  uint64_t v38 = *(void *)(v37 + 16);
  uint64_t v39 = (uint64_t)v99;
  if (v38)
  {
    uint64_t v80 = v20;
    uint64_t v81 = OnboardingNavigationView;
    uint64_t v82 = v17;
    uint64_t v83 = v32;
    os_log_type_t v40 = (void *)(v37 + 32);
    uint64_t v41 = (void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v98 = v37;
    swift_bridgeObjectRetain();
    uint64_t v42 = 0;
    while (1)
    {
      uint64_t v44 = v40[3];
      uint64_t v43 = v40[4];
      sub_10007E4EC(v40, v44);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v43);
      char v45 = static UUID.== infix(_:_:)();
      (*v41)(v14, v100);
      if (v45) {
        break;
      }
      ++v42;
      v40 += 5;
      if (v38 == v42)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v83;
        unint64_t v17 = v82;
        uint64_t OnboardingNavigationView = v81;
        uint64_t v20 = v80;
        uint64_t v39 = (uint64_t)v99;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v101);
    sub_100505328((uint64_t)v31, v42, 1, v92);
    uint64_t v32 = v83;
    unint64_t v17 = v82;
    uint64_t OnboardingNavigationView = v81;
    uint64_t v20 = v80;
    goto LABEL_16;
  }
LABEL_13:
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v101);
LABEL_17:
  unint64_t v47 = (char *)v31 + *(int *)(v30 + 20);
  uint64_t v48 = *(void *)v47;
  switch(v47[16])
  {
    case 1:
LABEL_21:
      id v51 = (id)ASActivityAppLaunchURLForSharingFriendList();
      id v52 = v93;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      id v53 = [self sharedApplication];
      URL._bridgeToObjectiveC()(v54);
      uint64_t v56 = v55;
      sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_100093E78((unint64_t *)&qword_10094B970, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v53 openURL:v56 options:isa completionHandler:0];

      (*(void (**)(char *, uint64_t))(v95 + 8))(v52, v96);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
    case 2:
LABEL_22:
      sub_10008E75C((uint64_t)v105, (uint64_t)&v102);
      sub_1000AFA94(&qword_10094D218);
      uint64_t v58 = v97;
      int v59 = swift_dynamicCast();
      uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
      if (!v59)
      {
        v60(v20, 1, 1, v58);

        sub_10008DB18((uint64_t)v20, &qword_10094D190);
        return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
      }
      v60(v20, 0, 1, v58);
      sub_1000D27E0((uint64_t)v20, v39, (uint64_t (*)(void))type metadata accessor for TrendsCard);
      if (*(unsigned char *)(v39 + *(int *)(v58 + 36) + 8)) {
        [v32 showAllTrendsAnimated:1];
      }

      uint64_t v61 = type metadata accessor for TrendsCard;
      uint64_t v62 = v39;
      goto LABEL_26;
    case 3:
      switch(v48)
      {
        case 1:
          if (qword_10094AA90 != -1) {
            swift_once();
          }
          uint64_t v63 = qword_100997DB0;
          swift_getKeyPath();
          uint64_t v102 = v63;
          sub_100093E78((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(unsigned char *)(v63 + 16))
          {
            [v32 showLoad];

            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
          }
          *(void *)unint64_t v17 = ASFriendListDisplayMode.id.getter;
          *((void *)v17 + 1) = 0;
          *((void *)v17 + 2) = 0;
          *((void *)v17 + 3) = 0;
          v101[0] = _swiftEmptyArrayStorage;
          sub_1000AFA94((uint64_t *)&unk_10095F6C0);
          State.init(wrappedValue:)();
          uint64_t v71 = v103;
          *((void *)v17 + 4) = v102;
          *((void *)v17 + 5) = v71;
          LOBYTE(v101[0]) = 0;
          State.init(wrappedValue:)();
          uint64_t v72 = v103;
          v17[48] = v102;
          *((void *)v17 + 7) = v72;
          LOBYTE(v101[0]) = 0;
          State.init(wrappedValue:)();
          uint64_t v73 = v103;
          v17[64] = v102;
          *((void *)v17 + 9) = v73;
          char v74 = (uint64_t *)&v17[*(int *)(OnboardingNavigationView + 36)];
          *char v74 = swift_getKeyPath();
          sub_1000AFA94(&qword_10094DFC8);
          swift_storeEnumTagMultiPayload();
          id v75 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
          uint64_t v34 = (char *)UIHostingController.init(rootView:)();
          [v32 presentViewController:v34 animated:1 completion:0];

          goto LABEL_6;
        case 2:
          [v32 navigateToHistoryAnimated:1];

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
        case 3:
          id v50 = [v32 navigateToTrophyCaseAnimated:1 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:0];
          goto LABEL_34;
        case 4:
          goto LABEL_21;
        case 5:
          id v64 = objc_retain(*(id *)(*(void *)&v32[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                  + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
          sub_10064D718();

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
        case 6:
          sub_10008E75C((uint64_t)v105, (uint64_t)&v102);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v65 = (uint64_t)v91;
          uint64_t v66 = v90;
          char v67 = swift_dynamicCast();
          uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
          if ((v67 & 1) == 0)
          {
            v68(v65, 1, 1, v66);

            uint64_t v70 = &qword_10094D198;
            goto LABEL_41;
          }
          v68(v65, 0, 1, v66);
          uint64_t v69 = v85;
          sub_1000D27E0(v65, v85, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
          uint64_t v65 = v88;
          sub_1000AEF2C(v69 + *(int *)(v66 + 36), v88, (uint64_t *)&unk_100955650);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v65, 1, v87) == 1)
          {
            sub_1000E370C(v69, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

            uint64_t v70 = (uint64_t *)&unk_100955650;
LABEL_41:
            sub_10008DB18(v65, v70);
            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
          }
          uint64_t v77 = v65;
          uint64_t v78 = v84;
          sub_1000D27E0(v77, v84, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          sub_1003FDF70(v78);
          sub_1003FC8BC(v78);

          sub_1000E370C(v78, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          uint64_t v61 = type metadata accessor for CatalogTipCard;
          uint64_t v62 = v69;
LABEL_26:
          sub_1000E370C(v62, (uint64_t (*)(void))v61);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
        case 7:
          goto LABEL_22;
        default:
          id v50 = [v32 showTodayAndShareImmediately:0 animated:1 forGoalCompleteNotification:0 goalRecommendation:0];
LABEL_34:

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
      }
    default:
      int v49 = sub_10007CCD8(v48, *((void *)v47 + 1), 0);
      sub_1003F68A8(v49, 0, 0x100u);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v105);
  }
}

void sub_100505328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v6 = [self standardUserDefaults];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 BOOLForKey:v7];

  sub_1000AFA94(&qword_10095DDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752870;
  *(void *)(inited + 32) = 0x7463617265746E69;
  *(void *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 0x6570795464726163;
  *(void *)(inited + 64) = 0xE800000000000000;
  uint64_t v9 = a1 + *(int *)(a4(0) + 20);
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  Class isa = sub_1000D9C34(v10, v11, v12).super.super.isa;
  sub_1000917F8(v10, v11, v12);
  *(void *)(inited + 72) = isa;
  *(void *)(inited + 80) = 0x657A695364726163;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x65646E4964726163;
  *(void *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x80000001007CC840;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  unint64_t v14 = sub_1000D9C28(inited);
  NSString v15 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v14);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

void sub_1005055A8(uint64_t a1)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 BOOLForKey:v3];

  sub_1000AFA94(&qword_10095DDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752870;
  *(void *)(inited + 32) = 0x7463617265746E69;
  *(void *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 0x6570795464726163;
  *(void *)(inited + 64) = 0xE800000000000000;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8);
  char v7 = *(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16);
  sub_100091494(v5, v6, v7);
  Class isa = sub_1000D9C34(v5, v6, v7).super.super.isa;
  sub_1000917F8(v5, v6, v7);
  *(void *)(inited + 72) = isa;
  *(void *)(inited + 80) = 0x657A695364726163;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x65646E4964726163;
  *(void *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x80000001007CC840;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  unint64_t v9 = sub_1000D9C28(inited);
  NSString v10 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v9);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class v11 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

uint64_t sub_100505824(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v32 = a2;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  char v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v28 - v8;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    uint64_t v11 = 0;
    unint64_t v31 = a1 & 0xC000000000000001;
    char v12 = (uint64_t *)&unk_1009555F0;
    uint64_t v29 = v7;
    while (1)
    {
      id v13 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v11 + 32);
      unint64_t v14 = v13;
      id v15 = [v13 UUID];
      if (v15)
      {
        Class v16 = v15;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v17 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
      }
      else
      {
        uint64_t v17 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
      }
      sub_1000AEEC8((uint64_t)v7, (uint64_t)v9, v12);
      type metadata accessor for UUID();
      uint64_t v18 = v12;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v17) == 1)
      {
        sub_10008DB18((uint64_t)v9, v18);

        char v12 = v18;
      }
      else
      {
        uint64_t v20 = v10;
        unint64_t v21 = a1;
        uint64_t v22 = UUID.uuidString.getter();
        uint64_t v24 = v23;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v17);
        if (v22 == v32 && v24 == v30)
        {

          swift_bridgeObjectRelease();
          return v11;
        }
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        a1 = v21;
        uint64_t v10 = v20;
        char v7 = v29;
        char v12 = (uint64_t *)&unk_1009555F0;
        if (v25) {
          return v11;
        }
      }
      uint64_t v26 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        break;
      }
      ++v11;
      if (v26 == v10) {
        return 0;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100505B44(char *__src, char *a2, unint64_t a3, char *__dst, char *a5)
{
  uint64_t v6 = __dst;
  unint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 40;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v128 = __src;
  uint64_t v127 = __dst;
  if (v11 < v13)
  {
    if (v10 < -39) {
      goto LABEL_126;
    }
    if (__dst != __src || &__src[40 * v11] <= __dst) {
      memmove(__dst, __src, 40 * v11);
    }
    unint64_t v14 = &v6[40 * v11];
    uint64_t v126 = v14;
    if ((unint64_t)a2 < a3 && v10 >= 40)
    {
      id v113 = *(id *)&a5[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
      uint64_t v115 = &v6[40 * v11];
      while (1)
      {
        sub_10008E75C((uint64_t)a2, (uint64_t)v123);
        sub_10008E75C((uint64_t)v6, (uint64_t)v120);
        uint64_t v15 = v124;
        uint64_t v16 = v125;
        sub_10007E4EC(v123, v124);
        uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
        a5 = (char *)v17;
        if (v19 == 2) {
          break;
        }
        uint64_t v20 = v18;
        if (v19 == 1)
        {
          id v22 = [v113 allFriends];
          if (v22)
          {
            uint64_t v23 = v22;
            sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
            sub_10044BEE8();
            uint64_t v24 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            uint64_t v24 = &_swiftEmptySetSingleton;
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
              && _CocoaArrayWrapper.endIndex.getter())
            {
              sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
              uint64_t v24 = v59;
            }
          }
          unint64_t v25 = (unint64_t)sub_1003691DC((uint64_t)v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          if ((v25 & 0x8000000000000000) != 0 || (uint64_t v26 = (void *)v25, (v25 & 0x4000000000000000) != 0))
          {
            uint64_t v26 = sub_100369BDC(v25);
            swift_release();
          }
          uint64_t v119 = v26;
          sub_1004F65B4((uint64_t *)&v119);
          if (v118) {
            goto LABEL_125;
          }
          swift_release();
          unint64_t v27 = (unint64_t)v119;
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_100505824(v27, (uint64_t)a5, v20);
          char v30 = v29;
          uint64_t v118 = 0;
          sub_1000917F8((uint64_t)a5, v20, 1);
          swift_release();
          sub_1000917F8((uint64_t)a5, v20, 1);
          if (v30) {
            uint64_t v21 = 0;
          }
          else {
            uint64_t v21 = v28;
          }
          unint64_t v14 = v115;
        }
        else
        {
          if (!v19) {
            break;
          }
          sub_1000917F8(v17, v18, v19);
          uint64_t v21 = -1;
        }
LABEL_24:
        uint64_t v31 = v121;
        uint64_t v32 = v122;
        sub_10007E4EC(v120, v121);
        uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
        a5 = (char *)v33;
        if (v35 == 2) {
          goto LABEL_27;
        }
        uint64_t v36 = v34;
        if (v35 == 1)
        {
          id v38 = [v113 allFriends];
          if (v38)
          {
            uint64_t v39 = v38;
            sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
            sub_10044BEE8();
            os_log_type_t v40 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            os_log_type_t v40 = &_swiftEmptySetSingleton;
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
              && _CocoaArrayWrapper.endIndex.getter())
            {
              sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
              os_log_type_t v40 = v60;
            }
          }
          unint64_t v41 = (unint64_t)sub_1003691DC((uint64_t)v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          if ((v41 & 0x8000000000000000) != 0 || (uint64_t v42 = (void *)v41, (v41 & 0x4000000000000000) != 0))
          {
            uint64_t v42 = sub_100369BDC(v41);
            swift_release();
          }
          uint64_t v119 = v42;
          sub_1004F65B4((uint64_t *)&v119);
          if (v118) {
            goto LABEL_125;
          }
          swift_release();
          unint64_t v43 = (unint64_t)v119;
          swift_bridgeObjectRetain();
          uint64_t v37 = sub_100505824(v43, (uint64_t)a5, v36);
          char v45 = v44;
          uint64_t v118 = 0;
          sub_1000917F8((uint64_t)a5, v36, 1);
          swift_release();
          sub_1000917F8((uint64_t)a5, v36, 1);
          if (v45)
          {
            if (!v21)
            {
              unint64_t v14 = v115;
LABEL_44:
              uint64_t v47 = v124;
              uint64_t v48 = v125;
              sub_10007E4EC(v123, v124);
              unsigned int v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 24))(v47, v48) & 1;
              uint64_t v50 = v121;
              uint64_t v51 = v122;
              sub_10007E4EC(v120, v121);
              BOOL v46 = ((*(unint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51) & 1) < v49;
              goto LABEL_45;
            }
            uint64_t v37 = 0;
            unint64_t v14 = v115;
          }
          else
          {
            unint64_t v14 = v115;
            if (v21 == v37) {
              goto LABEL_44;
            }
          }
        }
        else
        {
          if (!v35)
          {
LABEL_27:
            uint64_t v37 = v33;
            if (v21 == v33) {
              goto LABEL_44;
            }
            goto LABEL_42;
          }
          sub_1000917F8(v33, v34, v35);
          if (v21 == -1) {
            goto LABEL_44;
          }
          uint64_t v37 = -1;
        }
LABEL_42:
        BOOL v46 = v21 < v37;
LABEL_45:
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
        id v52 = v128;
        if (v46)
        {
          id v53 = a2 + 40;
          if (v128 >= a2 && v128 < v53 && v128 == a2)
          {
            id v52 = a2;
          }
          else
          {
            long long v54 = *(_OWORD *)a2;
            long long v55 = *((_OWORD *)a2 + 1);
            *((void *)v128 + 4) = *((void *)a2 + 4);
            *id v52 = v54;
            v52[1] = v55;
          }
        }
        else
        {
          uint64_t v56 = v127 + 40;
          if (v128 != v127 || v128 >= v56)
          {
            long long v57 = *(_OWORD *)v127;
            long long v58 = *((_OWORD *)v127 + 1);
            *((void *)v128 + 4) = *((void *)v127 + 4);
            *id v52 = v57;
            v52[1] = v58;
          }
          uint64_t v127 = v56;
          id v53 = a2;
        }
        uint64_t v128 = (char *)v52 + 40;
        uint64_t v6 = v127;
        if (v127 < v14)
        {
          a2 = v53;
          if ((unint64_t)v53 < a3) {
            continue;
          }
        }
        goto LABEL_124;
      }
      uint64_t v21 = v17;
      goto LABEL_24;
    }
LABEL_124:
    sub_1001EE964(&v128, &v127, &v126);
    return 1;
  }
  if (v12 < -39) {
    goto LABEL_126;
  }
  if (__dst != a2 || &a2[40 * v13] <= __dst)
  {
    memmove(__dst, a2, 40 * v13);
    unint64_t v9 = __src;
  }
  uint64_t v62 = &v6[40 * v13];
  uint64_t v126 = v62;
  uint64_t v128 = a2;
  if (v9 >= a2 || v12 < 40) {
    goto LABEL_124;
  }
  id v114 = *(id *)&a5[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
  unint64_t v63 = a3 - 40;
  uint64_t v116 = v9;
  long long v117 = v6;
  while (1)
  {
    sub_10008E75C((uint64_t)(v62 - 40), (uint64_t)v123);
    uint64_t v66 = a2 - 40;
    sub_10008E75C((uint64_t)(a2 - 40), (uint64_t)v120);
    uint64_t v67 = v124;
    uint64_t v68 = v125;
    sub_10007E4EC(v123, v124);
    uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
    a5 = (char *)v69;
    if (v71 == 2)
    {
LABEL_77:
      uint64_t v73 = v69;
      goto LABEL_88;
    }
    uint64_t v72 = v70;
    if (v71 == 1) {
      break;
    }
    if (!v71) {
      goto LABEL_77;
    }
    sub_1000917F8(v69, v70, v71);
    uint64_t v73 = -1;
LABEL_88:
    uint64_t v83 = v121;
    uint64_t v84 = v122;
    sub_10007E4EC(v120, v121);
    uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 16))(v83, v84);
    a5 = (char *)v85;
    if (v87 == 2) {
      goto LABEL_91;
    }
    uint64_t v88 = v86;
    if (v87 != 1)
    {
      if (v87)
      {
        sub_1000917F8(v85, v86, v87);
        if (v73 == -1)
        {
          unint64_t v90 = (unint64_t)v117;
          goto LABEL_107;
        }
        uint64_t v89 = -1;
        unint64_t v90 = (unint64_t)v117;
        goto LABEL_105;
      }
LABEL_91:
      uint64_t v89 = v85;
      goto LABEL_92;
    }
    id v91 = [v114 allFriends];
    if (v91)
    {
      uint64_t v92 = v91;
      sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
      sub_10044BEE8();
      uint64_t v93 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v93 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter())
      {
        sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
        uint64_t v93 = v111;
      }
    }
    unint64_t v94 = (unint64_t)sub_1003691DC((uint64_t)v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v94 & 0x8000000000000000) != 0 || (uint64_t v95 = (void *)v94, (v94 & 0x4000000000000000) != 0))
    {
      uint64_t v95 = sub_100369BDC(v94);
      swift_release();
    }
    uint64_t v119 = v95;
    sub_1004F65B4((uint64_t *)&v119);
    if (v118) {
      goto LABEL_125;
    }
    swift_release();
    unint64_t v96 = (unint64_t)v119;
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_100505824(v96, (uint64_t)a5, v88);
    char v98 = v97;
    uint64_t v118 = 0;
    sub_1000917F8((uint64_t)a5, v88, 1);
    swift_release();
    sub_1000917F8((uint64_t)a5, v88, 1);
    if (v98)
    {
      unint64_t v90 = (unint64_t)v117;
      if (!v73) {
        goto LABEL_107;
      }
      uint64_t v89 = 0;
LABEL_105:
      BOOL v99 = v73 < v89;
      goto LABEL_108;
    }
LABEL_92:
    unint64_t v90 = (unint64_t)v117;
    if (v73 != v89) {
      goto LABEL_105;
    }
LABEL_107:
    uint64_t v100 = v124;
    uint64_t v101 = v125;
    sub_10007E4EC(v123, v124);
    unsigned int v102 = (*(uint64_t (**)(uint64_t, uint64_t))(v101 + 24))(v100, v101) & 1;
    uint64_t v103 = v121;
    uint64_t v104 = v122;
    sub_10007E4EC(v120, v121);
    BOOL v99 = ((*(unint64_t (**)(uint64_t, uint64_t))(v104 + 24))(v103, v104) & 1) < v102;
LABEL_108:
    uint64_t v105 = (char *)(v63 + 40);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v120);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
    if (v99)
    {
      unint64_t v106 = (unint64_t)v116;
      if (v105 != a2 || v63 >= (unint64_t)a2)
      {
        long long v64 = *(_OWORD *)v66;
        long long v65 = *(_OWORD *)(a2 - 24);
        *(void *)(v63 + 32) = *((void *)a2 - 1);
        *(_OWORD *)unint64_t v63 = v64;
        *(_OWORD *)(v63 + 16) = v65;
      }
      v128 -= 40;
      uint64_t v62 = v126;
      if ((unint64_t)v126 <= v90) {
        goto LABEL_124;
      }
    }
    else
    {
      uint64_t v107 = v126;
      uint64_t v62 = v126 - 40;
      v126 -= 40;
      unint64_t v106 = (unint64_t)v116;
      if (v105 < v107 || v63 >= (unint64_t)v107 || v105 != v107)
      {
        long long v108 = *(_OWORD *)v62;
        long long v109 = *(_OWORD *)(v107 - 24);
        *(void *)(v63 + 32) = *((void *)v107 - 1);
        *(_OWORD *)unint64_t v63 = v108;
        *(_OWORD *)(v63 + 16) = v109;
      }
      uint64_t v66 = a2;
      if ((unint64_t)v62 <= v90) {
        goto LABEL_124;
      }
    }
    v63 -= 40;
    a2 = v66;
    if ((unint64_t)v66 <= v106) {
      goto LABEL_124;
    }
  }
  id v74 = [v114 allFriends];
  if (v74)
  {
    id v75 = v74;
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    sub_10044BEE8();
    uint64_t v76 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v76 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    {
      sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v76 = v110;
    }
  }
  unint64_t v77 = (unint64_t)sub_1003691DC((uint64_t)v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v77 & 0x8000000000000000) != 0 || (uint64_t v78 = (void *)v77, (v77 & 0x4000000000000000) != 0))
  {
    uint64_t v78 = sub_100369BDC(v77);
    swift_release();
  }
  uint64_t v119 = v78;
  sub_1004F65B4((uint64_t *)&v119);
  if (!v118)
  {
    swift_release();
    unint64_t v79 = (unint64_t)v119;
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_100505824(v79, (uint64_t)a5, v72);
    char v82 = v81;
    uint64_t v118 = 0;
    sub_1000917F8((uint64_t)a5, v72, 1);
    swift_release();
    sub_1000917F8((uint64_t)a5, v72, 1);
    if (v82) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = v80;
    }
    goto LABEL_88;
  }
LABEL_125:
  swift_release();
  __break(1u);
LABEL_126:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005066F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v112 = a1;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v121 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v118 = (char *)&v108 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  int v129 = (char *)&v108 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v108 = a2;
  if (a3 == a2) {
    return result;
  }
  id v111 = *(id *)(a5 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  uint64_t v110 = a4;
  uint64_t v117 = (uint64_t)&v108 - v17;
LABEL_5:
  uint64_t v109 = a3;
  uint64_t v18 = a3;
LABEL_6:
  uint64_t v19 = *a4 + 40 * v18;
  sub_10008E75C(v19, (uint64_t)&v126);
  sub_10008E75C(v19 - 40, (uint64_t)v123);
  uint64_t v20 = v127;
  uint64_t v21 = v128;
  sub_10007E4EC(&v126, v127);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  if (v24 == 2) {
    goto LABEL_9;
  }
  if (v24 != 1)
  {
    if (v24)
    {
      sub_1000917F8(v22, v23, v24);
      uint64_t v25 = -1;
      goto LABEL_53;
    }
LABEL_9:
    uint64_t v25 = v22;
    goto LABEL_53;
  }
  uint64_t v116 = v22;
  uint64_t v119 = v23;
  uint64_t v113 = v18;
  id v26 = [v111 allFriends];
  uint64_t v27 = (uint64_t)v129;
  if (v26)
  {
    uint64_t v28 = v26;
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    sub_10044BEE8();
    uint64_t v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v29 = (uint64_t)&_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
        uint64_t v29 = v106;
      }
      else
      {
        uint64_t v29 = (uint64_t)&_swiftEmptySetSingleton;
      }
    }
  }
  if ((v29 & 0xC000000000000001) == 0)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30) {
      goto LABEL_16;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  uint64_t v30 = __CocoaSet.count.getter();
  if (!v30) {
    goto LABEL_21;
  }
LABEL_16:
  if (v30 <= 0)
  {
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    unint64_t v31 = swift_allocObject();
    int64_t v32 = j__malloc_size((const void *)v31);
    uint64_t v33 = v32 - 32;
    if (v32 < 32) {
      uint64_t v33 = v32 - 25;
    }
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = (2 * (v33 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_10036B148(&v122, (void *)(v31 + 32), v30, v29);
  sub_1000D9B04();
  if (v34 != (void *)v30) {
    goto LABEL_118;
  }
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRetain();
  if ((v31 & 0x8000000000000000) != 0 || (char v35 = (void *)v31, (v31 & 0x4000000000000000) != 0))
  {
    char v35 = sub_100369BDC(v31);
    swift_release();
  }
  uint64_t v122 = (uint64_t)v35;
  uint64_t v36 = v114;
  sub_1004F65B4(&v122);
  uint64_t v114 = v36;
  if (v36) {
    goto LABEL_121;
  }
  swift_release();
  uint64_t v37 = v122;
  if (v122 < 0 || (v122 & 0x4000000000000000) != 0)
  {
    sub_100091494(v116, v119, 1);
    swift_retain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v38)
    {
LABEL_51:
      uint64_t v55 = v116;
      uint64_t v56 = v119;
      sub_1000917F8(v116, v119, 1);
      swift_release();
      sub_1000917F8(v55, v56, 1);
      uint64_t v25 = 0;
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v38 = *(void *)(v122 + 16);
    swift_bridgeObjectRetain();
    if (!v38) {
      goto LABEL_51;
    }
  }
  uint64_t v25 = 0;
  unint64_t v120 = v37 & 0xC000000000000001;
  while (1)
  {
    id v39 = v120 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v37 + 8 * v25 + 32);
    os_log_type_t v40 = v39;
    id v41 = [v39 UUID:v108];
    if (v41)
    {
      uint64_t v42 = v41;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v27, 0, 1, v43);
    }
    else
    {
      uint64_t v43 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v27, 1, 1, v43);
    }
    uint64_t v44 = v117;
    sub_1000AEEC8(v27, v117, (uint64_t *)&unk_1009555F0);
    type metadata accessor for UUID();
    uint64_t v45 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v44, 1, v43) == 1)
    {
      sub_10008DB18(v44, (uint64_t *)&unk_1009555F0);

      uint64_t v27 = (uint64_t)v129;
    }
    else
    {
      uint64_t v46 = UUID.uuidString.getter();
      uint64_t v48 = v47;
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v43);
      if (v46 == v116 && v119 == v48)
      {

        swift_bridgeObjectRelease();
LABEL_47:
        uint64_t v53 = v116;
        uint64_t v54 = v119;
        sub_1000917F8(v116, v119, 1);
        swift_release();
        sub_1000917F8(v53, v54, 1);
LABEL_48:
        a4 = v110;
LABEL_52:
        uint64_t v18 = v113;
LABEL_53:
        uint64_t v57 = v124;
        uint64_t v58 = v125;
        sub_10007E4EC(v123, v124);
        uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v57, v58);
        if (v61 == 2)
        {
LABEL_56:
          uint64_t v62 = v59;
          if (v25 == v59) {
            goto LABEL_99;
          }
          goto LABEL_102;
        }
        if (v61 != 1)
        {
          if (!v61) {
            goto LABEL_56;
          }
          sub_1000917F8(v59, v60, v61);
          if (v25 == -1) {
            goto LABEL_99;
          }
          uint64_t v62 = -1;
LABEL_102:
          BOOL v101 = v25 < v62;
          goto LABEL_103;
        }
        uint64_t v116 = v60;
        uint64_t v115 = v59;
        uint64_t v113 = v18;
        id v63 = [v111 allFriends];
        if (v63)
        {
          long long v64 = v63;
          sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
          sub_10044BEE8();
          uint64_t v65 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v66 = (uint64_t)v121;
        }
        else
        {
          uint64_t v65 = (uint64_t)&_swiftEmptySetSingleton;
          uint64_t v66 = (uint64_t)v121;
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
          {
            if (_CocoaArrayWrapper.endIndex.getter())
            {
              sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
              uint64_t v65 = v107;
            }
            else
            {
              uint64_t v65 = (uint64_t)&_swiftEmptySetSingleton;
            }
          }
        }
        if ((v65 & 0xC000000000000001) == 0)
        {
          uint64_t v67 = *(void *)(v65 + 16);
          if (!v67) {
            goto LABEL_70;
          }
LABEL_65:
          if (v67 <= 0)
          {
            unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
          }
          else
          {
            sub_1000AFA94((uint64_t *)&unk_10095B850);
            unint64_t v68 = swift_allocObject();
            int64_t v69 = j__malloc_size((const void *)v68);
            uint64_t v70 = v69 - 32;
            if (v69 < 32) {
              uint64_t v70 = v69 - 25;
            }
            *(void *)(v68 + 16) = v67;
            *(void *)(v68 + 24) = (2 * (v70 >> 3)) | 1;
          }
          swift_bridgeObjectRetain();
          char v71 = sub_10036B148(&v122, (void *)(v68 + 32), v67, v65);
          sub_1000D9B04();
          if (v71 == (void *)v67)
          {
            swift_bridgeObjectRelease();
            goto LABEL_74;
          }
          goto LABEL_119;
        }
        uint64_t v67 = __CocoaSet.count.getter();
        if (v67) {
          goto LABEL_65;
        }
LABEL_70:
        swift_bridgeObjectRelease();
        unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_74:
        swift_bridgeObjectRetain();
        if ((v68 & 0x8000000000000000) != 0 || (uint64_t v72 = (void *)v68, (v68 & 0x4000000000000000) != 0))
        {
          uint64_t v72 = sub_100369BDC(v68);
          swift_release();
        }
        uint64_t v122 = (uint64_t)v72;
        uint64_t v73 = v114;
        sub_1004F65B4(&v122);
        uint64_t v114 = v73;
        if (v73) {
          goto LABEL_121;
        }
        swift_release();
        uint64_t v74 = v122;
        if ((v122 & 0x8000000000000000) == 0 && (v122 & 0x4000000000000000) == 0)
        {
          uint64_t v75 = *(void *)(v122 + 16);
          swift_bridgeObjectRetain();
          if (v75) {
            goto LABEL_80;
          }
LABEL_94:
          uint64_t v90 = v115;
          uint64_t v91 = v116;
          sub_1000917F8(v115, v116, 1);
          swift_release();
          sub_1000917F8(v90, v91, 1);
          if (!v25)
          {
            a4 = v110;
            uint64_t v18 = v113;
            goto LABEL_99;
          }
          uint64_t v62 = 0;
          a4 = v110;
          uint64_t v18 = v113;
          goto LABEL_102;
        }
        sub_100091494(v115, v116, 1);
        swift_retain();
        uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v75) {
          goto LABEL_94;
        }
LABEL_80:
        uint64_t v62 = 0;
        uint64_t v119 = v75;
        unint64_t v120 = v74 & 0xC000000000000001;
        while (2)
        {
          if (v120) {
            id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v76 = *(id *)(v74 + 8 * v62 + 32);
          }
          unint64_t v77 = v76;
          uint64_t v78 = (uint64_t)v118;
          id v79 = [v76 UUID:v108];
          if (v79)
          {
            uint64_t v80 = v79;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v81 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v66, 0, 1, v81);
          }
          else
          {
            uint64_t v81 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v66, 1, 1, v81);
          }
          sub_1000AEEC8(v66, v78, (uint64_t *)&unk_1009555F0);
          type metadata accessor for UUID();
          uint64_t v82 = *(void *)(v81 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v78, 1, v81) == 1)
          {
            sub_10008DB18(v78, (uint64_t *)&unk_1009555F0);

            uint64_t v66 = (uint64_t)v121;
LABEL_92:
            uint64_t v89 = v62 + 1;
            if (__OFADD__(v62, 1)) {
              goto LABEL_117;
            }
            ++v62;
            if (v89 == v119) {
              goto LABEL_94;
            }
            continue;
          }
          break;
        }
        uint64_t v83 = UUID.uuidString.getter();
        uint64_t v84 = v78;
        uint64_t v85 = v83;
        uint64_t v87 = v86;
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v81);
        if (v85 != v115 || v116 != v87)
        {
          char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          uint64_t v66 = (uint64_t)v121;
          if (v88) {
            goto LABEL_98;
          }
          goto LABEL_92;
        }

        swift_bridgeObjectRelease();
LABEL_98:
        uint64_t v92 = v115;
        uint64_t v93 = v116;
        sub_1000917F8(v115, v116, 1);
        swift_release();
        sub_1000917F8(v92, v93, 1);
        a4 = v110;
        uint64_t v18 = v113;
        if (v25 != v62) {
          goto LABEL_102;
        }
LABEL_99:
        uint64_t v94 = v127;
        uint64_t v95 = v128;
        sub_10007E4EC(&v126, v127);
        uint64_t v96 = v18;
        unsigned int v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 24))(v94, v95) & 1;
        uint64_t v98 = v124;
        uint64_t v99 = v125;
        sub_10007E4EC(v123, v124);
        BOOL v100 = ((*(unint64_t (**)(uint64_t, uint64_t))(v99 + 24))(v98, v99) & 1) >= v97;
        uint64_t v18 = v96;
        BOOL v101 = !v100;
LABEL_103:
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v123);
        uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v126);
        if (v101)
        {
          uint64_t v102 = *a4;
          if (!*a4) {
            goto LABEL_120;
          }
          uint64_t v103 = v102 + 40 * v18;
          uint64_t v104 = v102 + 40 * (v18 - 1);
          sub_100093E60((long long *)v103, (uint64_t)&v126);
          long long v105 = *(_OWORD *)(v104 + 16);
          *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
          *(_OWORD *)(v103 + 16) = v105;
          *(void *)(v103 + 32) = *(void *)(v104 + 32);
          uint64_t result = sub_100093E60(&v126, v104);
          if (--v18 == v112) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
LABEL_4:
        a3 = v109 + 1;
        if (v109 + 1 == v108) {
          return result;
        }
        goto LABEL_5;
      }
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t)v129;
      if (v49) {
        goto LABEL_47;
      }
    }
    uint64_t v50 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    ++v25;
    if (v50 == v38)
    {
      uint64_t v51 = v116;
      uint64_t v52 = v119;
      sub_1000917F8(v116, v119, 1);
      swift_release();
      sub_1000917F8(v51, v52, 1);
      uint64_t v25 = 0;
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_100507420(char **a1, void *a2)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v331 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v331 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  v341 = (char *)&v331 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v340 = (char *)&v331 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v343 = (char *)&v331 - v17;
  __chkstk_darwin(v16);
  uint64_t v342 = (uint64_t)&v331 - v18;
  Swift::Int v19 = (Swift::Int)a1[1];
  v344 = a2;
  Swift::Int v20 = _minimumMergeRunLength(_:)(v19);
  uint64_t v349 = v2;
  if (v20 >= v19)
  {
    if (v19 < 0) {
      goto LABEL_377;
    }
    id v25 = v344;
    if (v19)
    {
      id v26 = v344;
      uint64_t v27 = v349;
      sub_1005066F8(0, v19, 1, a1, (uint64_t)v26);

      uint64_t v349 = v27;
    }
    else
    {
    }
    goto LABEL_348;
  }
  if (v19 >= 0) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v19 + 1;
  }
  if (v19 < -1) {
    goto LABEL_386;
  }
  uint64_t v22 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v333 = v20;
  if (v19 < 2)
  {
    v339 = (char *)&_swiftEmptyArrayStorage[4];
    if (v19 == 1)
    {
      v332 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v253 = _swiftEmptyArrayStorage[2];
    v332 = _swiftEmptyArrayStorage;
LABEL_332:
    if (v253 >= 2)
    {
      v313 = *a1;
      v362 = *a1;
      do
      {
        unint64_t v314 = v253 - 2;
        if (v253 < 2) {
          goto LABEL_369;
        }
        if (!v313) {
          goto LABEL_384;
        }
        v346 = v22;
        uint64_t v315 = *(void *)&v22[16 * v314 + 32];
        uint64_t v316 = *(void *)&v22[16 * v253 + 24];
        v317 = &v313[40 * v315];
        v318 = &v313[40 * *(void *)&v22[16 * v253 + 16]];
        unint64_t v319 = (unint64_t)&v313[40 * v316];
        v320 = v344;
        uint64_t v321 = v349;
        sub_100505B44(v317, v318, v319, v339, v320);
        uint64_t v349 = v321;
        if (v321) {
          goto LABEL_345;
        }

        if (v316 < v315) {
          goto LABEL_370;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          v322 = v346;
        }
        else {
          v322 = sub_1001EEF68((uint64_t)v346);
        }
        if (v314 >= *((void *)v322 + 2)) {
          goto LABEL_371;
        }
        v323 = &v322[16 * v314 + 32];
        *(void *)v323 = v315;
        *((void *)v323 + 1) = v316;
        unint64_t v324 = *((void *)v322 + 2);
        if (v253 > v324) {
          goto LABEL_372;
        }
        v325 = v322;
        memmove(&v322[16 * v253 + 16], &v322[16 * v253 + 32], 16 * (v324 - v253));
        uint64_t v22 = v325;
        *((void *)v325 + 2) = v324 - 1;
        unint64_t v253 = v324 - 1;
        v313 = v362;
      }
      while (v324 > 2);
    }
    swift_bridgeObjectRelease();
    v332[2] = 0;
    id v25 = v344;
LABEL_347:

    swift_bridgeObjectRelease();
LABEL_348:

    return;
  }
  uint64_t v23 = v21 >> 1;
  sub_1000AFA94(&qword_10094D218);
  uint64_t v24 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  uint64_t v22 = (char *)_swiftEmptyArrayStorage;
  *(void *)(v24 + 16) = v23;
  v332 = (void *)v24;
  v339 = (char *)(v24 + 32);
LABEL_13:
  Swift::Int v28 = 0;
  uint64_t v334 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager;
  v347 = a1;
  v350 = v8;
  v352 = v11;
  while (2)
  {
    v346 = v22;
    int64_t v29 = v28 + 1;
    Swift::Int v338 = v19;
    uint64_t v348 = v28;
    if (v28 + 1 >= v19)
    {
      os_log_type_t v40 = v344;
      goto LABEL_167;
    }
    uint64_t v30 = *a1;
    uint64_t v31 = v28 + 1;
    sub_10008E75C((uint64_t)&(*a1)[40 * v29], (uint64_t)&v359);
    int64_t v337 = (int64_t)v30;
    sub_10008E75C((uint64_t)&v30[40 * v28], (uint64_t)v356);
    uint64_t v32 = v360;
    uint64_t v33 = v361;
    sub_10007E4EC(&v359, v360);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
    uint64_t v37 = v34;
    id v335 = *(id *)&v344[v334];
    if (v36 == 2) {
      goto LABEL_18;
    }
    uint64_t v38 = v35;
    if (v36 == 1)
    {
      id v41 = [v335 allFriends];
      if (v41)
      {
        uint64_t v42 = v41;
        sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
        sub_10044BEE8();
        uint64_t v43 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v43 = &_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter())
          {
            sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v43 = v311;
          }
          a1 = v347;
          uint64_t v8 = v350;
        }
      }
      unint64_t v44 = (unint64_t)sub_1003691DC((uint64_t)v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v44 & 0x8000000000000000) != 0 || (uint64_t v45 = (void *)v44, (v44 & 0x4000000000000000) != 0))
      {
        uint64_t v45 = sub_100369BDC(v44);
        swift_release();
      }
      unint64_t v355 = (unint64_t)v45;
      uint64_t v46 = v349;
      sub_1004F65B4((uint64_t *)&v355);
      if (v46) {
        goto LABEL_385;
      }
      swift_release();
      unint64_t v47 = v355;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_100505824(v47, v37, v38);
      char v50 = v49;
      uint64_t v349 = 0;
      sub_1000917F8(v37, v38, 1);
      swift_release();
      sub_1000917F8(v37, v38, 1);
      if (v50) {
        uint64_t v39 = 0;
      }
      else {
        uint64_t v39 = v48;
      }
    }
    else
    {
      if (!v36)
      {
LABEL_18:
        uint64_t v39 = v34;
        goto LABEL_30;
      }
      sub_1000917F8(v34, v35, v36);
      uint64_t v39 = -1;
    }
LABEL_30:
    uint64_t v51 = v357;
    uint64_t v52 = v358;
    sub_10007E4EC(v356, v357);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v51, v52);
    uint64_t v56 = v53;
    if (v55 == 2)
    {
LABEL_33:
      uint64_t v58 = v53;
      goto LABEL_34;
    }
    uint64_t v57 = v54;
    if (v55 == 1)
    {
      id v60 = [v335 allFriends];
      if (v60)
      {
        char v61 = v60;
        sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
        sub_10044BEE8();
        uint64_t v62 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v62 = &_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter())
          {
            sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v62 = v312;
          }
          a1 = v347;
          uint64_t v8 = v350;
        }
      }
      unint64_t v63 = (unint64_t)sub_1003691DC((uint64_t)v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v63 & 0x8000000000000000) != 0 || (long long v64 = (void *)v63, (v63 & 0x4000000000000000) != 0))
      {
        long long v64 = sub_100369BDC(v63);
        swift_release();
      }
      unint64_t v355 = (unint64_t)v64;
      uint64_t v65 = v349;
      sub_1004F65B4((uint64_t *)&v355);
      if (v65) {
        goto LABEL_385;
      }
      swift_release();
      unint64_t v66 = v355;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_100505824(v66, v56, v57);
      char v68 = v67;
      uint64_t v349 = 0;
      sub_1000917F8(v56, v57, 1);
      swift_release();
      sub_1000917F8(v56, v57, 1);
      if ((v68 & 1) == 0)
      {
LABEL_34:
        uint64_t v59 = v31;
        if (v39 == v58) {
          goto LABEL_48;
        }
LABEL_47:
        BOOL v69 = v39 < v58;
        goto LABEL_49;
      }
      if (v39)
      {
        uint64_t v59 = v31;
        uint64_t v58 = 0;
        goto LABEL_47;
      }
    }
    else
    {
      if (!v55) {
        goto LABEL_33;
      }
      sub_1000917F8(v53, v54, v55);
      if (v39 != -1)
      {
        uint64_t v58 = -1;
        uint64_t v59 = v31;
        goto LABEL_47;
      }
    }
LABEL_48:
    uint64_t v70 = v360;
    uint64_t v71 = v361;
    sub_10007E4EC(&v359, v360);
    unsigned int v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 24))(v70, v71) & 1;
    uint64_t v73 = v357;
    uint64_t v74 = v358;
    sub_10007E4EC(v356, v357);
    char v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
    uint64_t v59 = v31;
    BOOL v69 = (v75 & 1u) < v72;
LABEL_49:
    int v336 = v69;
    uint64_t v11 = v352;
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v356);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v359);
    uint64_t v76 = v348 + 2;
    if (v348 + 2 >= v338) {
      goto LABEL_157;
    }
    while (2)
    {
      int64_t v77 = v337;
      uint64_t v351 = v76;
      sub_10008E75C(v337 + 40 * v76, (uint64_t)&v359);
      sub_10008E75C(v77 + 40 * v59, (uint64_t)v356);
      uint64_t v78 = v360;
      uint64_t v79 = v361;
      sub_10007E4EC(&v359, v360);
      uint64_t v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v78, v79);
      if (v82 == 2) {
        goto LABEL_53;
      }
      if (v82 != 1)
      {
        if (v82)
        {
          sub_1000917F8(v80, v81, v82);
          uint64_t v83 = (char *)-1;
          goto LABEL_96;
        }
LABEL_53:
        uint64_t v83 = (char *)v80;
        goto LABEL_96;
      }
      uint64_t v353 = v80;
      unint64_t v354 = v81;
      id v84 = [v335 allFriends];
      if (v84)
      {
        uint64_t v85 = v84;
        sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
        sub_10044BEE8();
        uint64_t v86 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v86 = (uint64_t)&_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter())
          {
            sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v86 = v164;
          }
          else
          {
            uint64_t v86 = (uint64_t)&_swiftEmptySetSingleton;
          }
        }
      }
      if ((v86 & 0xC000000000000001) != 0)
      {
        uint64_t v87 = __CocoaSet.count.getter();
        if (v87)
        {
LABEL_60:
          if (v87 <= 0)
          {
            unint64_t v88 = (unint64_t)_swiftEmptyArrayStorage;
          }
          else
          {
            sub_1000AFA94((uint64_t *)&unk_10095B850);
            unint64_t v88 = swift_allocObject();
            int64_t v89 = j__malloc_size((const void *)v88);
            uint64_t v90 = v89 - 32;
            if (v89 < 32) {
              uint64_t v90 = v89 - 25;
            }
            *(void *)(v88 + 16) = v87;
            *(void *)(v88 + 24) = (2 * (v90 >> 3)) | 1;
          }
          swift_bridgeObjectRetain();
          uint64_t v91 = sub_10036B148(&v355, (void *)(v88 + 32), v87, v86);
          sub_1000D9B04();
          if (v91 != (void *)v87) {
            goto LABEL_374;
          }
          swift_bridgeObjectRelease();
          goto LABEL_69;
        }
      }
      else
      {
        uint64_t v87 = *(void *)(v86 + 16);
        if (v87) {
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v88 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_69:
      swift_bridgeObjectRetain();
      if ((v88 & 0x8000000000000000) != 0 || (uint64_t v92 = (void *)v88, (v88 & 0x4000000000000000) != 0))
      {
        uint64_t v92 = sub_100369BDC(v88);
        swift_release();
      }
      unint64_t v355 = (unint64_t)v92;
      uint64_t v93 = v349;
      sub_1004F65B4((uint64_t *)&v355);
      uint64_t v349 = v93;
      if (v93) {
        goto LABEL_385;
      }
      swift_release();
      uint64_t v94 = v355;
      if ((v355 & 0x8000000000000000) != 0 || (v355 & 0x4000000000000000) != 0)
      {
        unint64_t v120 = v354;
        sub_100091494(v353, v354, 1);
        swift_retain();
        uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        uint64_t v96 = v120;
        if (!v95)
        {
LABEL_95:
          uint64_t v121 = v353;
          sub_1000917F8(v353, v96, 1);
          swift_release();
          sub_1000917F8(v121, v96, 1);
          uint64_t v83 = 0;
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v95 = *(void *)(v355 + 16);
        uint64_t v96 = v354;
        swift_bridgeObjectRetain();
        if (!v95) {
          goto LABEL_95;
        }
      }
      uint64_t v83 = 0;
      unint64_t v97 = v94 & 0xC000000000000001;
      while (1)
      {
        id v98 = v97
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v94 + 8 * (void)v83 + 32);
        uint64_t v99 = v98;
        BOOL v100 = v343;
        id v101 = [v98 UUID];
        if (v101)
        {
          uint64_t v102 = v101;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v103 = type metadata accessor for UUID();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v100, 0, 1, v103);
        }
        else
        {
          uint64_t v103 = type metadata accessor for UUID();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v100, 1, 1, v103);
        }
        uint64_t v104 = (uint64_t)v100;
        uint64_t v105 = v342;
        sub_1000AEEC8(v104, v342, (uint64_t *)&unk_1009555F0);
        type metadata accessor for UUID();
        uint64_t v106 = v105;
        uint64_t v107 = *(void *)(v103 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v106, 1, v103) != 1) {
          break;
        }
        sub_10008DB18(v106, (uint64_t *)&unk_1009555F0);

        a1 = v347;
LABEL_87:
        uint64_t v115 = v83 + 1;
        if (__OFADD__(v83, 1)) {
          goto LABEL_350;
        }
        ++v83;
        if (v115 == (char *)v95)
        {
          uint64_t v117 = v353;
          uint64_t v116 = v354;
          sub_1000917F8(v353, v354, 1);
          swift_release();
          sub_1000917F8(v117, v116, 1);
          uint64_t v83 = 0;
          goto LABEL_92;
        }
      }
      v362 = v83;
      uint64_t v108 = v94;
      uint64_t v109 = v95;
      unint64_t v110 = v97;
      uint64_t v111 = UUID.uuidString.getter();
      uint64_t v113 = v112;
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v103);
      if (v111 != v353 || v354 != v113)
      {
        char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        a1 = v347;
        unint64_t v97 = v110;
        uint64_t v95 = v109;
        uint64_t v94 = v108;
        uint64_t v83 = v362;
        if (v114) {
          goto LABEL_91;
        }
        goto LABEL_87;
      }

      swift_bridgeObjectRelease();
      a1 = v347;
      uint64_t v83 = v362;
LABEL_91:
      uint64_t v119 = v353;
      uint64_t v118 = v354;
      sub_1000917F8(v353, v354, 1);
      swift_release();
      sub_1000917F8(v119, v118, 1);
LABEL_92:
      uint64_t v8 = v350;
LABEL_96:
      uint64_t v122 = v357;
      uint64_t v123 = v358;
      sub_10007E4EC(v356, v357);
      uint64_t v124 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v123 + 16))(v122, v123);
      v362 = v126;
      if (v125 == 2)
      {
LABEL_99:
        uint64_t v127 = v124;
        if (v83 == (char *)v124) {
          goto LABEL_142;
        }
        goto LABEL_143;
      }
      if (v125 != 1)
      {
        if (v125)
        {
          sub_1000917F8((uint64_t)v124, (uint64_t)v362, v125);
          if (v83 == (char *)-1) {
            goto LABEL_142;
          }
          uint64_t v127 = -1;
          goto LABEL_143;
        }
        goto LABEL_99;
      }
      id v345 = v124;
      id v128 = [v335 allFriends];
      if (v128)
      {
        int v129 = v128;
        sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
        sub_10044BEE8();
        uint64_t v130 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v130 = (uint64_t)&_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter())
          {
            sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v130 = v165;
          }
          else
          {
            uint64_t v130 = (uint64_t)&_swiftEmptySetSingleton;
          }
        }
      }
      if ((v130 & 0xC000000000000001) == 0)
      {
        uint64_t v131 = *(void *)(v130 + 16);
        if (!v131) {
          goto LABEL_113;
        }
LABEL_108:
        if (v131 <= 0)
        {
          unint64_t v132 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_1000AFA94((uint64_t *)&unk_10095B850);
          unint64_t v132 = swift_allocObject();
          int64_t v133 = j__malloc_size((const void *)v132);
          uint64_t v134 = v133 - 32;
          if (v133 < 32) {
            uint64_t v134 = v133 - 25;
          }
          *(void *)(v132 + 16) = v131;
          *(void *)(v132 + 24) = (2 * (v134 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        uint64_t v135 = sub_10036B148(&v355, (void *)(v132 + 32), v131, v130);
        sub_1000D9B04();
        if (v135 == (void *)v131)
        {
          swift_bridgeObjectRelease();
          goto LABEL_117;
        }
LABEL_375:
        __break(1u);
LABEL_376:
        __break(1u);
LABEL_377:
        __break(1u);
LABEL_378:
        __break(1u);
LABEL_379:
        __break(1u);
        goto LABEL_380;
      }
      uint64_t v131 = __CocoaSet.count.getter();
      if (v131) {
        goto LABEL_108;
      }
LABEL_113:
      swift_bridgeObjectRelease();
      unint64_t v132 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_117:
      swift_bridgeObjectRetain();
      if ((v132 & 0x8000000000000000) != 0 || (long long v136 = (void *)v132, (v132 & 0x4000000000000000) != 0))
      {
        long long v136 = sub_100369BDC(v132);
        swift_release();
      }
      unint64_t v355 = (unint64_t)v136;
      uint64_t v137 = v349;
      sub_1004F65B4((uint64_t *)&v355);
      uint64_t v349 = v137;
      if (v137) {
        goto LABEL_385;
      }
      swift_release();
      uint64_t v138 = v355;
      if ((v355 & 0x8000000000000000) == 0 && (v355 & 0x4000000000000000) == 0)
      {
        uint64_t v139 = *(void *)(v355 + 16);
        swift_bridgeObjectRetain();
        if (v139) {
          goto LABEL_123;
        }
LABEL_137:
        uint64_t v154 = (uint64_t)v345;
        uint64_t v155 = v362;
        sub_1000917F8((uint64_t)v345, (uint64_t)v362, 1);
        swift_release();
        sub_1000917F8(v154, (uint64_t)v155, 1);
        if (!v83)
        {
          a1 = v347;
          goto LABEL_142;
        }
        uint64_t v127 = 0;
        a1 = v347;
        goto LABEL_143;
      }
      sub_100091494((uint64_t)v345, (uint64_t)v362, 1);
      swift_retain();
      uint64_t v139 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (!v139) {
        goto LABEL_137;
      }
LABEL_123:
      uint64_t v127 = 0;
      uint64_t v353 = v139;
      unint64_t v354 = v138 & 0xC000000000000001;
      while (2)
      {
        if (v354) {
          id v140 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v140 = *(id *)(v138 + 8 * v127 + 32);
        }
        uint64_t v141 = v140;
        uint64_t v142 = (uint64_t)v341;
        uint64_t v143 = (uint64_t)v340;
        id v144 = [v140 UUID];
        if (v144)
        {
          id v145 = v144;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v146 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v142, 0, 1, v146);
        }
        else
        {
          uint64_t v146 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v142, 1, 1, v146);
        }
        sub_1000AEEC8(v142, v143, (uint64_t *)&unk_1009555F0);
        type metadata accessor for UUID();
        uint64_t v147 = v143;
        uint64_t v148 = *(void *)(v146 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v147, 1, v146) == 1)
        {
          sub_10008DB18(v147, (uint64_t *)&unk_1009555F0);

          uint64_t v8 = v350;
          goto LABEL_135;
        }
        id v149 = (id)UUID.uuidString.getter();
        uint64_t v151 = v150;
        (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v147, v146);
        if (v149 != v345 || v362 != v151)
        {
          char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          uint64_t v8 = v350;
          if (v152) {
            goto LABEL_141;
          }
LABEL_135:
          uint64_t v153 = v127 + 1;
          if (__OFADD__(v127, 1)) {
            goto LABEL_351;
          }
          ++v127;
          if (v153 == v353) {
            goto LABEL_137;
          }
          continue;
        }
        break;
      }

      swift_bridgeObjectRelease();
      uint64_t v8 = v350;
LABEL_141:
      uint64_t v156 = (uint64_t)v345;
      uint64_t v157 = v362;
      sub_1000917F8((uint64_t)v345, (uint64_t)v362, 1);
      swift_release();
      sub_1000917F8(v156, (uint64_t)v157, 1);
      a1 = v347;
      if (v83 == (char *)v127)
      {
LABEL_142:
        uint64_t v158 = v360;
        uint64_t v159 = v361;
        sub_10007E4EC(&v359, v360);
        unsigned int v160 = (*(uint64_t (**)(uint64_t, uint64_t))(v159 + 24))(v158, v159) & 1;
        uint64_t v161 = v357;
        uint64_t v162 = v358;
        sub_10007E4EC(v356, v357);
        int v163 = ((*(unint64_t (**)(uint64_t, uint64_t))(v162 + 24))(v161, v162) & 1) < v160;
        goto LABEL_144;
      }
LABEL_143:
      int v163 = (uint64_t)v83 < v127;
LABEL_144:
      uint64_t v11 = v352;
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v356);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v359);
      if (v336 == v163)
      {
        uint64_t v59 = v351;
        uint64_t v76 = v351 + 1;
        if (v351 + 1 == v338)
        {
          uint64_t v76 = v338;
          goto LABEL_157;
        }
        continue;
      }
      break;
    }
    uint64_t v76 = v351;
LABEL_157:
    os_log_type_t v40 = v344;
    if (!v336)
    {
      int64_t v29 = v76;
      goto LABEL_167;
    }
    int64_t v29 = v76;
    if (v76 < v348)
    {
LABEL_380:
      __break(1u);
LABEL_381:
      id v326 = v344;

      __break(1u);
LABEL_382:
      id v327 = v344;

      __break(1u);
LABEL_383:
      id v328 = v344;

      __break(1u);
LABEL_384:
      id v329 = v344;

      __break(1u);
      goto LABEL_385;
    }
    if (v348 < v76)
    {
      uint64_t v166 = 40 * v76 - 40;
      uint64_t v167 = 40 * v348;
      int64_t v168 = v76;
      uint64_t v169 = v76;
      uint64_t v170 = v348;
      do
      {
        if (v170 != --v169)
        {
          if (!v337) {
            goto LABEL_383;
          }
          int64_t v171 = v337 + v167;
          uint64_t v172 = v337 + v166;
          sub_100093E60((long long *)(v337 + v167), (uint64_t)&v359);
          uint64_t v173 = *(void *)(v172 + 32);
          long long v174 = *(_OWORD *)(v172 + 16);
          *(_OWORD *)int64_t v171 = *(_OWORD *)v172;
          *(_OWORD *)(v171 + 16) = v174;
          *(void *)(v171 + 32) = v173;
          sub_100093E60(&v359, v172);
          os_log_type_t v40 = v344;
        }
        ++v170;
        v166 -= 40;
        v167 += 40;
      }
      while (v170 < v169);
      int64_t v29 = v168;
      uint64_t v11 = v352;
    }
LABEL_167:
    if (v29 >= v338) {
      goto LABEL_270;
    }
    if (__OFSUB__(v29, v348)) {
      goto LABEL_376;
    }
    if (v29 - v348 >= v333) {
      goto LABEL_270;
    }
    if (__OFADD__(v348, v333)) {
      goto LABEL_378;
    }
    Swift::Int v175 = v338;
    if (v348 + v333 < v338) {
      Swift::Int v175 = v348 + v333;
    }
    if (v175 < v348) {
      goto LABEL_379;
    }
    if (v29 == v175)
    {
LABEL_270:
      if (v29 < v348) {
        goto LABEL_373;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v338 = v29;
      if (isUniquelyReferenced_nonNull_native) {
        uint64_t v22 = v346;
      }
      else {
        uint64_t v22 = sub_1001EE868(0, *((void *)v346 + 2) + 1, 1, v346);
      }
      unint64_t v252 = *((void *)v22 + 2);
      unint64_t v251 = *((void *)v22 + 3);
      unint64_t v253 = v252 + 1;
      if (v252 >= v251 >> 1) {
        uint64_t v22 = sub_1001EE868((char *)(v251 > 1), v252 + 1, 1, v22);
      }
      *((void *)v22 + 2) = v253;
      unint64_t v254 = (unint64_t)(v22 + 32);
      v255 = &v22[16 * v252 + 32];
      Swift::Int v256 = v338;
      *(void *)v255 = v348;
      *((void *)v255 + 1) = v256;
      if (!v252)
      {
        unint64_t v253 = 1;
LABEL_319:
        Swift::Int v19 = (Swift::Int)a1[1];
        Swift::Int v28 = v338;
        if (v338 >= v19) {
          goto LABEL_332;
        }
        continue;
      }
      v346 = v22;
      unint64_t v354 = (unint64_t)(v22 + 32);
      while (1)
      {
        unint64_t v257 = v253 - 1;
        if (v253 >= 4)
        {
          unint64_t v262 = v254 + 16 * v253;
          uint64_t v263 = *(void *)(v262 - 64);
          uint64_t v264 = *(void *)(v262 - 56);
          BOOL v268 = __OFSUB__(v264, v263);
          uint64_t v265 = v264 - v263;
          if (v268) {
            goto LABEL_358;
          }
          uint64_t v267 = *(void *)(v262 - 48);
          uint64_t v266 = *(void *)(v262 - 40);
          BOOL v268 = __OFSUB__(v266, v267);
          uint64_t v260 = v266 - v267;
          char v261 = v268;
          if (v268) {
            goto LABEL_359;
          }
          unint64_t v269 = v253 - 2;
          v270 = (uint64_t *)(v254 + 16 * (v253 - 2));
          uint64_t v272 = *v270;
          uint64_t v271 = v270[1];
          BOOL v268 = __OFSUB__(v271, v272);
          uint64_t v273 = v271 - v272;
          if (v268) {
            goto LABEL_361;
          }
          BOOL v268 = __OFADD__(v260, v273);
          uint64_t v274 = v260 + v273;
          if (v268) {
            goto LABEL_364;
          }
          if (v274 >= v265)
          {
            v292 = (uint64_t *)(v254 + 16 * v257);
            uint64_t v294 = *v292;
            uint64_t v293 = v292[1];
            BOOL v268 = __OFSUB__(v293, v294);
            uint64_t v295 = v293 - v294;
            if (v268) {
              goto LABEL_368;
            }
            BOOL v285 = v260 < v295;
            goto LABEL_308;
          }
        }
        else
        {
          if (v253 != 3)
          {
            uint64_t v286 = *((void *)v22 + 4);
            uint64_t v287 = *((void *)v22 + 5);
            BOOL v268 = __OFSUB__(v287, v286);
            uint64_t v279 = v287 - v286;
            char v280 = v268;
            goto LABEL_302;
          }
          uint64_t v259 = *((void *)v22 + 4);
          uint64_t v258 = *((void *)v22 + 5);
          BOOL v268 = __OFSUB__(v258, v259);
          uint64_t v260 = v258 - v259;
          char v261 = v268;
        }
        if (v261) {
          goto LABEL_360;
        }
        unint64_t v269 = v253 - 2;
        v275 = (uint64_t *)(v254 + 16 * (v253 - 2));
        uint64_t v277 = *v275;
        uint64_t v276 = v275[1];
        BOOL v278 = __OFSUB__(v276, v277);
        uint64_t v279 = v276 - v277;
        char v280 = v278;
        if (v278) {
          goto LABEL_363;
        }
        v281 = (uint64_t *)(v254 + 16 * v257);
        uint64_t v283 = *v281;
        uint64_t v282 = v281[1];
        BOOL v268 = __OFSUB__(v282, v283);
        uint64_t v284 = v282 - v283;
        if (v268) {
          goto LABEL_366;
        }
        if (__OFADD__(v279, v284)) {
          goto LABEL_367;
        }
        if (v279 + v284 >= v260)
        {
          BOOL v285 = v260 < v284;
LABEL_308:
          if (v285) {
            unint64_t v257 = v269;
          }
          goto LABEL_310;
        }
LABEL_302:
        if (v280) {
          goto LABEL_362;
        }
        v288 = (uint64_t *)(v254 + 16 * v257);
        uint64_t v290 = *v288;
        uint64_t v289 = v288[1];
        BOOL v268 = __OFSUB__(v289, v290);
        uint64_t v291 = v289 - v290;
        if (v268) {
          goto LABEL_365;
        }
        if (v291 < v279)
        {
          uint64_t v22 = v346;
          goto LABEL_319;
        }
LABEL_310:
        unint64_t v296 = v257 - 1;
        if (v257 - 1 >= v253) {
          goto LABEL_352;
        }
        v297 = *a1;
        if (!*a1) {
          goto LABEL_382;
        }
        v298 = (uint64_t *)(v254 + 16 * v296);
        uint64_t v299 = *v298;
        unint64_t v300 = v257;
        v301 = (uint64_t *)(v254 + 16 * v257);
        uint64_t v302 = *v301;
        uint64_t v303 = v301[1];
        v362 = &v297[40 * *v298];
        v304 = &v297[40 * v302];
        unint64_t v305 = (unint64_t)&v297[40 * v303];
        v306 = v344;
        uint64_t v307 = v349;
        sub_100505B44(v362, v304, v305, v339, v306);
        uint64_t v349 = v307;
        if (v307)
        {
LABEL_345:
          swift_bridgeObjectRelease();
          id v25 = v344;

          v332[2] = 0;
          goto LABEL_347;
        }

        if (v303 < v299) {
          goto LABEL_353;
        }
        v308 = v346;
        if (v300 > *((void *)v346 + 2)) {
          goto LABEL_354;
        }
        unint64_t v309 = v300;
        uint64_t *v298 = v299;
        unint64_t v254 = v354;
        *(void *)(v354 + 16 * v296 + 8) = v303;
        unint64_t v310 = *((void *)v308 + 2);
        if (v309 >= v310) {
          goto LABEL_355;
        }
        unint64_t v253 = v310 - 1;
        memmove(v301, v301 + 2, 16 * (v310 - 1 - v309));
        uint64_t v22 = v346;
        *((void *)v346 + 2) = v310 - 1;
        a1 = v347;
        uint64_t v8 = v350;
        uint64_t v11 = v352;
        if (v310 <= 2) {
          goto LABEL_319;
        }
      }
    }
    break;
  }
  id v345 = *(id *)&v40[v334];
  int64_t v337 = v175;
LABEL_177:
  Swift::Int v338 = v29;
  while (2)
  {
    uint64_t v176 = *a1;
    unint64_t v354 = v29;
    uint64_t v177 = (uint64_t)&v176[40 * v29];
    sub_10008E75C(v177, (uint64_t)&v359);
    sub_10008E75C(v177 - 40, (uint64_t)v356);
    uint64_t v178 = v360;
    uint64_t v179 = v361;
    sub_10007E4EC(&v359, v360);
    uint64_t v180 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 16))(v178, v179);
    if (v182 == 2) {
      goto LABEL_181;
    }
    if (v182 != 1)
    {
      if (v182)
      {
        sub_1000917F8(v180, v181, v182);
        uint64_t v183 = -1;
        goto LABEL_225;
      }
LABEL_181:
      uint64_t v183 = v180;
      goto LABEL_225;
    }
    uint64_t v351 = v180;
    uint64_t v353 = v181;
    id v184 = [v345 allFriends];
    if (v184)
    {
      v185 = v184;
      sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
      sub_10044BEE8();
      uint64_t v186 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v186 = (uint64_t)&_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        if (_CocoaArrayWrapper.endIndex.getter())
        {
          sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
          uint64_t v186 = v248;
        }
        else
        {
          uint64_t v186 = (uint64_t)&_swiftEmptySetSingleton;
        }
      }
    }
    if ((v186 & 0xC000000000000001) != 0)
    {
      uint64_t v187 = __CocoaSet.count.getter();
      if (v187)
      {
LABEL_188:
        if (v187 <= 0)
        {
          unint64_t v188 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_1000AFA94((uint64_t *)&unk_10095B850);
          unint64_t v188 = swift_allocObject();
          int64_t v189 = j__malloc_size((const void *)v188);
          uint64_t v190 = v189 - 32;
          if (v189 < 32) {
            uint64_t v190 = v189 - 25;
          }
          *(void *)(v188 + 16) = v187;
          *(void *)(v188 + 24) = (2 * (v190 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        uint64_t v191 = sub_10036B148(&v355, (void *)(v188 + 32), v187, v186);
        sub_1000D9B04();
        if (v191 != (void *)v187) {
          goto LABEL_356;
        }
        swift_bridgeObjectRelease();
        goto LABEL_197;
      }
    }
    else
    {
      uint64_t v187 = *(void *)(v186 + 16);
      if (v187) {
        goto LABEL_188;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v188 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_197:
    swift_bridgeObjectRetain();
    if ((v188 & 0x8000000000000000) != 0 || (unint64_t v192 = (void *)v188, (v188 & 0x4000000000000000) != 0))
    {
      unint64_t v192 = sub_100369BDC(v188);
      swift_release();
    }
    unint64_t v355 = (unint64_t)v192;
    uint64_t v193 = v349;
    sub_1004F65B4((uint64_t *)&v355);
    uint64_t v349 = v193;
    if (v193) {
      goto LABEL_385;
    }
    swift_release();
    uint64_t v194 = v355;
    if ((v355 & 0x8000000000000000) != 0 || (v355 & 0x4000000000000000) != 0)
    {
      uint64_t v215 = v353;
      sub_100091494(v351, v353, 1);
      swift_retain();
      uint64_t v195 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      uint64_t v196 = v215;
      if (!v195)
      {
LABEL_222:
        uint64_t v209 = v351;
        uint64_t v210 = v351;
        uint64_t v212 = v196;
        uint64_t v211 = v196;
        goto LABEL_223;
      }
    }
    else
    {
      uint64_t v195 = *(void *)(v355 + 16);
      uint64_t v196 = v353;
      swift_bridgeObjectRetain();
      if (!v195) {
        goto LABEL_222;
      }
    }
    uint64_t v183 = 0;
    v362 = (char *)(v194 & 0xC000000000000001);
    while (1)
    {
      if (v362) {
        id v197 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v197 = *(id *)(v194 + 8 * v183 + 32);
      }
      uint64_t v198 = v197;
      id v199 = [v197 UUID];
      if (v199)
      {
        v200 = v199;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v201 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v8, 0, 1, v201);
      }
      else
      {
        uint64_t v201 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v8, 1, 1, v201);
      }
      sub_1000AEEC8((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1009555F0);
      type metadata accessor for UUID();
      uint64_t v202 = (uint64_t)v11;
      uint64_t v203 = *(void *)(v201 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v202, 1, v201) == 1)
      {
        sub_10008DB18(v202, (uint64_t *)&unk_1009555F0);

        uint64_t v11 = (char *)v202;
        goto LABEL_215;
      }
      uint64_t v204 = UUID.uuidString.getter();
      uint64_t v206 = v205;
      (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v202, v201);
      if (v204 == v351 && v353 == v206) {
        break;
      }
      char v207 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t v8 = v350;
      uint64_t v11 = v352;
      if (v207) {
        goto LABEL_219;
      }
LABEL_215:
      uint64_t v208 = v183 + 1;
      if (__OFADD__(v183, 1))
      {
        __break(1u);
LABEL_350:
        __break(1u);
LABEL_351:
        __break(1u);
LABEL_352:
        __break(1u);
LABEL_353:
        __break(1u);
LABEL_354:
        __break(1u);
LABEL_355:
        __break(1u);
LABEL_356:
        __break(1u);
        goto LABEL_357;
      }
      ++v183;
      if (v208 == v195)
      {
        uint64_t v209 = v351;
        uint64_t v210 = v351;
        uint64_t v211 = v353;
        uint64_t v212 = v353;
LABEL_223:
        sub_1000917F8(v210, v212, 1);
        swift_release();
        sub_1000917F8(v209, v211, 1);
        uint64_t v183 = 0;
        goto LABEL_224;
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v8 = v350;
    uint64_t v11 = v352;
LABEL_219:
    uint64_t v213 = v351;
    uint64_t v214 = v353;
    sub_1000917F8(v351, v353, 1);
    swift_release();
    sub_1000917F8(v213, v214, 1);
LABEL_224:
    a1 = v347;
LABEL_225:
    uint64_t v216 = v357;
    uint64_t v217 = v358;
    sub_10007E4EC(v356, v357);
    uint64_t v218 = (*(uint64_t (**)(uint64_t, uint64_t))(v217 + 16))(v216, v217);
    uint64_t v221 = v218;
    if (v220 == 2)
    {
LABEL_228:
      uint64_t v223 = v218;
      goto LABEL_229;
    }
    uint64_t v222 = v219;
    if (v220 != 1)
    {
      if (!v220) {
        goto LABEL_228;
      }
      sub_1000917F8(v218, v219, v220);
      if (v183 != -1)
      {
        uint64_t v223 = -1;
        goto LABEL_255;
      }
LABEL_257:
      uint64_t v238 = v360;
      uint64_t v239 = v361;
      sub_10007E4EC(&v359, v360);
      unsigned int v240 = (*(uint64_t (**)(uint64_t, uint64_t))(v239 + 24))(v238, v239) & 1;
      uint64_t v241 = v357;
      uint64_t v242 = v358;
      sub_10007E4EC(v356, v357);
      BOOL v237 = ((*(unint64_t (**)(uint64_t, uint64_t))(v242 + 24))(v241, v242) & 1) < v240;
LABEL_258:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v356);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v359);
      if (v237)
      {
        v243 = *a1;
        if (!*a1) {
          goto LABEL_381;
        }
        int64_t v244 = v354 - 1;
        v245 = &v243[40 * v354];
        uint64_t v246 = (uint64_t)&v243[40 * v354 - 40];
        sub_100093E60((long long *)v245, (uint64_t)&v359);
        long long v247 = *(_OWORD *)(v246 + 16);
        *(_OWORD *)v245 = *(_OWORD *)v246;
        *((_OWORD *)v245 + 1) = v247;
        *((void *)v245 + 4) = *(void *)(v246 + 32);
        sub_100093E60(&v359, v246);
        int64_t v29 = v244;
        if (v244 == v348) {
          goto LABEL_176;
        }
        continue;
      }
LABEL_176:
      int64_t v29 = v338 + 1;
      if (v338 + 1 == v337)
      {
        int64_t v29 = v337;
        goto LABEL_270;
      }
      goto LABEL_177;
    }
    break;
  }
  id v224 = [v345 allFriends];
  if (v224)
  {
    v225 = v224;
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    sub_10044BEE8();
    uint64_t v226 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v226 = (uint64_t)&_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1002F0DBC((unint64_t)_swiftEmptyArrayStorage);
        uint64_t v226 = v249;
      }
      else
      {
        uint64_t v226 = (uint64_t)&_swiftEmptySetSingleton;
      }
    }
  }
  if ((v226 & 0xC000000000000001) == 0)
  {
    uint64_t v227 = *(void *)(v226 + 16);
    if (!v227) {
      goto LABEL_243;
    }
LABEL_238:
    if (v227 <= 0)
    {
      unint64_t v228 = (unint64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      unint64_t v228 = swift_allocObject();
      int64_t v229 = j__malloc_size((const void *)v228);
      uint64_t v230 = v229 - 32;
      if (v229 < 32) {
        uint64_t v230 = v229 - 25;
      }
      *(void *)(v228 + 16) = v227;
      *(void *)(v228 + 24) = (2 * (v230 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    v231 = sub_10036B148(&v355, (void *)(v228 + 32), v227, v226);
    sub_1000D9B04();
    if (v231 == (void *)v227)
    {
      swift_bridgeObjectRelease();
      a1 = v347;
      goto LABEL_248;
    }
LABEL_357:
    __break(1u);
LABEL_358:
    __break(1u);
LABEL_359:
    __break(1u);
LABEL_360:
    __break(1u);
LABEL_361:
    __break(1u);
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
LABEL_369:
    __break(1u);
LABEL_370:
    __break(1u);
LABEL_371:
    __break(1u);
LABEL_372:
    __break(1u);
LABEL_373:
    __break(1u);
LABEL_374:
    __break(1u);
    goto LABEL_375;
  }
  uint64_t v227 = __CocoaSet.count.getter();
  if (v227) {
    goto LABEL_238;
  }
LABEL_243:
  swift_bridgeObjectRelease();
  unint64_t v228 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_248:
  swift_bridgeObjectRetain();
  if ((v228 & 0x8000000000000000) != 0 || (v232 = (void *)v228, (v228 & 0x4000000000000000) != 0))
  {
    v232 = sub_100369BDC(v228);
    swift_release();
  }
  unint64_t v355 = (unint64_t)v232;
  uint64_t v233 = v349;
  sub_1004F65B4((uint64_t *)&v355);
  if (!v233)
  {
    swift_release();
    unint64_t v234 = v355;
    swift_bridgeObjectRetain();
    uint64_t v223 = sub_100505824(v234, v221, v222);
    char v236 = v235;
    uint64_t v349 = 0;
    sub_1000917F8(v221, v222, 1);
    swift_release();
    sub_1000917F8(v221, v222, 1);
    if (v236)
    {
      if (!v183)
      {
        uint64_t v11 = v352;
        goto LABEL_257;
      }
      uint64_t v223 = 0;
      uint64_t v11 = v352;
LABEL_255:
      BOOL v237 = v183 < v223;
      goto LABEL_258;
    }
    uint64_t v11 = v352;
LABEL_229:
    if (v183 != v223) {
      goto LABEL_255;
    }
    goto LABEL_257;
  }
LABEL_385:
  swift_release();
  __break(1u);
LABEL_386:
  id v330 = v344;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1005096FC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1001EEF7C((void *)v3);
  }
  uint64_t v5 = *(char **)(v3 + 16);
  v7[0] = (char *)(v3 + 32);
  v7[1] = v5;
  id v6 = v4;
  sub_100507420(v7, v6);

  *a1 = v3;
}

id sub_100509794(int a1)
{
  return sub_1004D5598(a1, *(id *)(v1 + 16));
}

uint64_t sub_10050979C()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1005097C8()
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(View - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(View - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v3 + *(int *)(View + 28);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  sub_1000917F8(*(void *)(v5 + Card[5]), *(void *)(v5 + Card[5] + 8), *(unsigned char *)(v5 + Card[5] + 16));
  sub_1000904DC(*(void *)(v5 + Card[9]), *(void *)(v5 + Card[9] + 8), *(unsigned char *)(v5 + Card[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[11]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[12]);
  uint64_t v8 = v3 + *(int *)(View + 32);
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }

  return swift_deallocObject();
}

uint64_t sub_1005099B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005DB5C;
  return sub_1004DF2FC(a1, v5, v6, v7, v8);
}

uint64_t sub_100509AB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100509ADC()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100509B04()
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(View - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(View - 8) + 80);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v3 + *(int *)(View + 28);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  sub_1000917F8(*(void *)(v5 + Card[5]), *(void *)(v5 + Card[5] + 8), *(unsigned char *)(v5 + Card[5] + 16));
  sub_1000904DC(*(void *)(v5 + Card[9]), *(void *)(v5 + Card[9] + 8), *(unsigned char *)(v5 + Card[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[11]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[12]);
  uint64_t v8 = v3 + *(int *)(View + 32);
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }

  return swift_deallocObject();
}

uint64_t sub_100509CE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1004E5188(v4, a1);
}

uint64_t sub_100509D5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100509DC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CatalogLockup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100509DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1004E541C(a1, a2, v8, a3);
}

uint64_t sub_100509E7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100509EB4(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_1000AFA94(&qword_10095FC30);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_100509F14()
{
  unint64_t result = qword_10095FBE8;
  if (!qword_10095FBE8)
  {
    sub_1000A1370(&qword_10095FBE0);
    sub_100509FB4();
    sub_1000A132C(&qword_10095FC20, &qword_10095FC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FBE8);
  }
  return result;
}

unint64_t sub_100509FB4()
{
  unint64_t result = qword_10095FBF0;
  if (!qword_10095FBF0)
  {
    sub_1000A1370(&qword_10095FBF8);
    sub_1000A132C(&qword_10095FC00, &qword_10095FC08);
    sub_1000A132C(&qword_10095FC10, &qword_10095FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FBF0);
  }
  return result;
}

uint64_t sub_10050A078()
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(View - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(View - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(View - 8) + 64);
  uint64_t v3 = type metadata accessor for CatalogLockup();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v8 = v6 + *(int *)(View + 28);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  sub_1000917F8(*(void *)(v8 + Card[5]), *(void *)(v8 + Card[5] + 8), *(unsigned char *)(v8 + Card[5] + 16));
  sub_1000904DC(*(void *)(v8 + Card[9]), *(void *)(v8 + Card[9] + 8), *(unsigned char *)(v8 + Card[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v8 + Card[11]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v8 + Card[12]);
  uint64_t v11 = v6 + *(int *)(View + 32);
  if (*(void *)(v11 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v13 + v5) & ~v5), v3);

  return swift_deallocObject();
}

uint64_t sub_10050A300()
{
  uint64_t v1 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for CatalogLockup() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004E57E4(v0 + v2, v0 + v5, v6);
}

uint64_t sub_10050A400()
{
  return EnvironmentValues.dismiss.getter();
}

double sub_10050A424@<D0>(uint64_t a1@<X8>)
{
  return sub_1004E2694(*(void *)(v1 + 24), a1);
}

uint64_t sub_10050A42C@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E26FC(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_10050A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    swift_bridgeObjectRetain();
  }

  return swift_retain();
}

uint64_t sub_10050A480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result = swift_release();
  if ((a9 & 1) == 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10050A4CC()
{
  unint64_t result = qword_10095FCB0;
  if (!qword_10095FCB0)
  {
    sub_1000A1370(&qword_10095FCA8);
    sub_1000A132C(&qword_10095FCB8, &qword_10095FCC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FCB0);
  }
  return result;
}

uint64_t sub_10050A570()
{
  return sub_1000060BC(sub_1004E64A4);
}

uint64_t sub_10050A588@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10050A5B4()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_10050A5E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050A638(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050A66C()
{
  return sub_10001EE38(&qword_10095FD38);
}

uint64_t sub_10050A678(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FD38);
}

uint64_t sub_10050A688()
{
  return sub_10001EE38(&qword_10095FD40);
}

uint64_t sub_10050A698()
{
  return sub_10001EE38(&qword_10095FD58);
}

uint64_t sub_10050A6A8()
{
  return sub_10001EE38(&qword_10095FD60);
}

uint64_t sub_10050A6B8()
{
  return sub_10001EE38(&qword_10095FDF0);
}

uint64_t sub_10050A6C8()
{
  return sub_10001EE38(&qword_10095FE00);
}

uint64_t sub_10050A6D8()
{
  return sub_10001EE38(&qword_10095FE10);
}

uint64_t sub_10050A6E8()
{
  return sub_10001EE38(&qword_10095FE20);
}

uint64_t sub_10050A6F8()
{
  return sub_10001EE38(&qword_10095FE30);
}

uint64_t sub_10050A708()
{
  return sub_10001EE38(&qword_10095FE40);
}

uint64_t sub_10050A718()
{
  return sub_10001EE38(&qword_10095FE50);
}

uint64_t sub_10050A728()
{
  return sub_10001EE38(&qword_10095FE68);
}

uint64_t sub_10050A734(uint64_t *a1)
{
  return sub_1000E339C(a1, &qword_10095FE68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1004F85B8);
}

uint64_t sub_10050A758(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void *sub_10050A7C0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    *uint64_t v14 = *v15;
    *((void *)v14 + 1) = *((void *)v15 + 1);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID();
    Swift::Int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    unint64_t v44 = a3;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v20(v17, v18, v19);
    uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
    uint64_t v22 = Card[5];
    uint64_t v23 = &v17[v22];
    uint64_t v24 = &v18[v22];
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *((void *)v24 + 1);
    LOBYTE(v19) = v24[16];
    sub_100091494(*(void *)v24, v26, v19);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    v23[16] = v19;
    v17[Card[6]] = v18[Card[6]];
    v17[Card[7]] = v18[Card[7]];
    v17[Card[8]] = v18[Card[8]];
    uint64_t v27 = Card[9];
    Swift::Int v28 = &v17[v27];
    int64_t v29 = &v18[v27];
    uint64_t v30 = *(void *)v29;
    uint64_t v31 = *((void *)v29 + 1);
    LOBYTE(v19) = v29[16];
    sub_1000908B0(*(void *)v29, v31, v19);
    *(void *)Swift::Int v28 = v30;
    *((void *)v28 + 1) = v31;
    v28[16] = v19;
    v17[Card[10]] = v18[Card[10]];
    uint64_t v32 = Card[11];
    long long v33 = *(_OWORD *)&v18[v32 + 24];
    *(_OWORD *)&v17[v32 + 24] = v33;
    (**(void (***)(void))(v33 - 8))();
    uint64_t v34 = Card[12];
    long long v35 = *(_OWORD *)&v18[v34 + 24];
    *(_OWORD *)&v17[v34 + 24] = v35;
    (**(void (***)(void))(v35 - 8))();
    uint64_t v36 = v44[8];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = *(void *)((char *)a2 + v36 + 24);
    if (v39)
    {
      uint64_t v40 = *((void *)v38 + 4);
      *((void *)v37 + 3) = v39;
      *((void *)v37 + 4) = v40;
      (**(void (***)(void))(v39 - 8))();
    }
    else
    {
      long long v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((void *)v37 + 4) = *((void *)v38 + 4);
    }
    uint64_t v42 = v44[10];
    *((unsigned char *)a1 + v44[9]) = *((unsigned char *)a2 + v44[9]);
    *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  }
  return a1;
}

char *sub_10050AB30(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v14 = Card[5];
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  unsigned char v15[16] = v16[16];
  v10[Card[6]] = v11[Card[6]];
  v10[Card[7]] = v11[Card[7]];
  v10[Card[8]] = v11[Card[8]];
  uint64_t v17 = Card[9];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  unsigned char v18[16] = v19[16];
  v10[Card[10]] = v11[Card[10]];
  uint64_t v20 = Card[11];
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  *((void *)v21 + 4) = *((void *)v22 + 4);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  uint64_t v24 = Card[12];
  uint64_t v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  uint64_t v28 = a3[8];
  uint64_t v29 = a3[9];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((void *)v30 + 4) = *((void *)v31 + 4);
  a1[v29] = a2[v29];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_10050AD34(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_bridgeObjectRelease();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v19 = Card[5];
  uint64_t v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  char v22 = v21[16];
  uint64_t v23 = *(void *)v20;
  uint64_t v24 = *((void *)v20 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  char v25 = v20[16];
  v20[16] = v22;
  sub_1000917F8(v23, v24, v25);
  v15[Card[6]] = v16[Card[6]];
  v15[Card[7]] = v16[Card[7]];
  v15[Card[8]] = v16[Card[8]];
  uint64_t v26 = Card[9];
  long long v27 = &v15[v26];
  uint64_t v28 = &v16[v26];
  char v29 = v28[16];
  uint64_t v30 = *(void *)v27;
  uint64_t v31 = *((void *)v27 + 1);
  *(_OWORD *)long long v27 = *(_OWORD *)v28;
  unsigned __int8 v32 = v27[16];
  v27[16] = v29;
  sub_1000904DC(v30, v31, v32);
  v15[Card[10]] = v16[Card[10]];
  uint64_t v33 = Card[11];
  uint64_t v34 = &v15[v33];
  long long v35 = &v16[v33];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v15[v33]);
  long long v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *((void *)v34 + 4) = *((void *)v35 + 4);
  uint64_t v37 = Card[12];
  uint64_t v38 = (uint64_t)&v15[v37];
  uint64_t v39 = &v16[v37];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
  *(void *)(v38 + 32) = *((void *)v39 + 4);
  long long v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  uint64_t v41 = a3[8];
  uint64_t v42 = &a1[v41];
  if (*(void *)&a1[v41 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v41]);
  }
  long long v43 = *(_OWORD *)&a2[v41 + 16];
  *(_OWORD *)uint64_t v42 = *(_OWORD *)&a2[v41];
  *((_OWORD *)v42 + 1) = v43;
  *((void *)v42 + 4) = *(void *)&a2[v41 + 32];
  uint64_t v44 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v44] = a2[v44];
  return a1;
}

uint64_t sub_10050AFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Card - 8) + 48);
    uint64_t v13 = Card;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10050B100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Card - 8) + 56);
    uint64_t v13 = Card;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

unint64_t sub_10050B234()
{
  unint64_t result = qword_10095FFA0;
  if (!qword_10095FFA0)
  {
    sub_1000A1370(&qword_10095FFA8);
    sub_1000D28B0();
    sub_1000A1370(&qword_10095F9A0);
    sub_1000A1370(&qword_10095F998);
    sub_1004E730C(&qword_10095F9C0, &qword_10095F998, (void (*)(void))sub_1004E72E4);
    swift_getOpaqueTypeConformance2();
    sub_1000D2970();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FFA0);
  }
  return result;
}

uint64_t sub_10050B374(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_retain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10050B3FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 200);
  uint64_t v6 = *(void *)(a1 + 208);
  char v7 = *(unsigned char *)(a1 + 216);
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10050B4B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050B504()
{
  return swift_deallocObject();
}

uint64_t sub_10050B53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050B5A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050B5E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10050B63C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050B670(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  char v5 = *(unsigned char *)(a1 + 136);
  id v6 = *(id *)(a1 + 24);
  sub_10008A670(v2);
  sub_1000A1750(v3, v4, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10050B6E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10050B754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, char a17)
{
  if (a17)
  {
    sub_1000A1750(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    char v19 = a16 & 1;
    return sub_10050B7E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, v19);
  }
}

uint64_t sub_10050B7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  sub_1000A1750(a4, a5, a6 & 1);
  swift_bridgeObjectRetain();
  sub_1000A1750(a8, a9, a10 & 1);
  if (a16)
  {
    swift_bridgeObjectRetain();
    sub_1000A1750(a12, a13, a14 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t *sub_10050B8EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = (void *)a2[4];
    uint64_t v10 = a3[7];
    char v22 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = (uint64_t)v9;
    uint64_t v12 = type metadata accessor for MetricPlatterType();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    id v14 = v9;
    v13(v22, v11, v12);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v18 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    id v19 = v17;
  }
  return v4;
}

void sub_10050BA38(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  id v6 = *(void **)(a1 + *(int *)(a2 + 32));
}

void *sub_10050BAD4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = (void *)a2[4];
  a1[4] = v8;
  uint64_t v9 = a3[7];
  uint64_t v20 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = type metadata accessor for MetricPlatterType();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  swift_retain();
  id v13 = v8;
  v12(v20, v10, v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v17 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  id v18 = v16;
  return a1;
}

void *sub_10050BBD0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10050BCE4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

void *sub_10050BDA0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_release();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);

  uint64_t v15 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10050BE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050BE9C);
}

uint64_t sub_10050BE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10050BF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050BF60);
}

uint64_t sub_10050BF60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricPlatterType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorSpeedometerPlatterView()
{
  uint64_t result = qword_100960100;
  if (!qword_100960100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10050C054()
{
  uint64_t result = type metadata accessor for MetricPlatterType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10050C110()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10050C12C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MirrorSpeedometerPlatterView();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - v12;
  FIUIDistanceTypeForActivityType();
  uint64_t v14 = FIUIPaceFormatForDistanceType();
  sub_10050DEA8(v1, (uint64_t)v13);
  if (v14 != 4)
  {
    sub_10050DF0C((uint64_t)v13);
    sub_10050DEA8(v1, (uint64_t)v10);
    goto LABEL_6;
  }
  MetricsPublisher.currentPace.getter();
  double v16 = v15;
  sub_10050DF0C((uint64_t)v13);
  sub_10050DEA8(v1, (uint64_t)v10);
  if (v16 < 0.0)
  {
LABEL_6:
    sub_10050DF0C((uint64_t)v10);
    goto LABEL_7;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
  uint64_t v17 = (void *)static FIUIWorkoutActivityType.indoorCycle.getter();
  char v18 = static NSObject.== infix(_:_:)();

  sub_10050DF0C((uint64_t)v10);
  if (v18) {
    return 0;
  }
LABEL_7:
  FIUIDistanceTypeForActivityType();
  uint64_t v20 = FIUIPaceFormatForDistanceType();
  sub_10050DEA8(v1, (uint64_t)v7);
  if (v20 == 4)
  {
    swift_retain();
    char v21 = WorkoutStatePublisher.gpsUnavailable.getter();
    swift_release();
    sub_10050DEA8((uint64_t)v7, (uint64_t)v4);
    if (v21)
    {
      BOOL v19 = 1;
    }
    else
    {
      MetricsPublisher.currentPace.getter();
      BOOL v19 = v22 < 0.0;
    }
    sub_10050DF0C((uint64_t)v7);
  }
  else
  {
    BOOL v19 = 0;
    unint64_t v4 = v7;
  }
  sub_10050DF0C((uint64_t)v4);
  return v19;
}

void sub_10050C38C()
{
  uint64_t v1 = type metadata accessor for LocalizationFeature();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10050C12C())
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationFeature.workout(_:), v1);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 32);
    id v6 = [self meterUnit];
    MetricsPublisher.currentPace.getter();
    id v8 = [self quantityWithUnit:v6 doubleValue:v7];

    type metadata accessor for MirrorSpeedometerPlatterView();
    FIUIDistanceTypeForActivityType();
    uint64_t v9 = FIUIPaceFormatForDistanceType();
    id v10 = [v5 localizedPaceStringWithDistance:v8 overDuration:v9 paceFormat:FIUIDistanceTypeForActivityType() distanceType:1.0];

    if (v10)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10050C59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a1;
  uint64_t v104 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v2 - 8);
  uint64_t v99 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1000AFA94(&qword_10094C108);
  uint64_t v141 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v122 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1000AFA94(&qword_10095C3D0);
  uint64_t v142 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  BOOL v100 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100960158);
  uint64_t v124 = *(void **)(v6 - 8);
  uint64_t v125 = v6;
  __chkstk_darwin(v6);
  uint64_t v103 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v102 = (char *)&v98 - v9;
  __chkstk_darwin(v10);
  id v101 = (char *)&v98 - v11;
  __chkstk_darwin(v12);
  uint64_t v109 = (char *)&v98 - v13;
  __chkstk_darwin(v14);
  int v129 = (char *)&v98 - v15;
  __chkstk_darwin(v16);
  id v140 = (char *)&v98 - v17;
  __chkstk_darwin(v18);
  uint64_t v135 = (char *)&v98 - v19;
  __chkstk_darwin(v20);
  uint64_t v130 = (char *)&v98 - v21;
  uint64_t v22 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v132 = *(void *)(v22 - 8);
  uint64_t v133 = v22;
  __chkstk_darwin(v22);
  unint64_t v110 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for WorkoutViewStyle();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  long long v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = (void (*)(char *, uint64_t))sub_1000AFA94(&qword_100960160);
  __chkstk_darwin(v137);
  char v29 = (uint64_t *)((char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = (void *)sub_1000AFA94(&qword_100960168);
  uint64_t v30 = *(v134 - 1);
  __chkstk_darwin(v134);
  unsigned __int8 v32 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_100960170);
  __chkstk_darwin(v33);
  long long v35 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100960178);
  uint64_t v127 = *(void *)(v36 - 8);
  uint64_t v128 = v36;
  __chkstk_darwin(v36);
  uint64_t v121 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  long long v126 = (char *)&v98 - v39;
  uint64_t *v29 = static Alignment.center.getter();
  v29[1] = v40;
  uint64_t v41 = sub_1000AFA94(&qword_100960180);
  sub_10050D62C(v123, (uint64_t)v29 + *(int *)(v41 + 44));
  uint64_t v42 = *(void (**)(char *, void, uint64_t))(v25 + 104);
  uint64_t v115 = v25 + 104;
  uint64_t v131 = v24;
  v42(v27, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v24);
  uint64_t v105 = v42;
  sub_1000A132C(&qword_100960188, &qword_100960160);
  uint64_t v107 = v27;
  View.workoutViewStyle(_:)();
  long long v43 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v136 = v25 + 8;
  uint64_t v137 = v43;
  v43(v27, v24);
  sub_10008DB18((uint64_t)v29, &qword_100960160);
  uint64_t v44 = Color.init(rgbHex:)();
  uint64_t v45 = v134;
  (*(void (**)(char *, char *, void *))(v30 + 16))(v35, v32, v134);
  *(void *)&v35[*(int *)(v33 + 36)] = v44;
  (*(void (**)(char *, void *))(v30 + 8))(v32, v45);
  uint64_t v46 = v110;
  static AccessibilityChildBehavior.combine.getter();
  sub_10050DD8C();
  unint64_t v47 = v121;
  View.accessibilityElement(children:)();
  uint64_t v48 = v133;
  char v49 = *(void **)(v132 + 8);
  v132 += 8;
  uint64_t v134 = v49;
  ((void (*)(char *, uint64_t))v49)(v46, v133);
  sub_10008DB18((uint64_t)v35, &qword_100960170);
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v47, v128);
  uint64_t v120 = type metadata accessor for MetricPlatterType();
  uint64_t v50 = *(void *)(v120 - 8);
  uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
  uint64_t v106 = v50 + 56;
  uint64_t v51 = (uint64_t)v99;
  v119(v99, 1, 1, v120);
  uint64_t v118 = *(int *)(type metadata accessor for MirrorSpeedometerPlatterView() + 32);
  uint64_t v52 = v122;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_10008DB18(v51, &qword_10094C100);
  unsigned int v117 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  uint64_t v53 = v107;
  uint64_t v54 = v131;
  ((void (*)(char *))v42)(v107);
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v56 = v100;
  uint64_t v57 = v138;
  uint64_t v111 = OpaqueTypeConformance2;
  View.workoutViewStyle(_:)();
  v137(v53, v54);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v141 + 8);
  v141 += 8;
  uint64_t v116 = v58;
  v58(v52, v57);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v143 = v57;
  uint64_t v144 = OpaqueTypeConformance2;
  uint64_t v114 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = v135;
  uint64_t v60 = v139;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v134)(v46, v48);
  char v61 = *(void (**)(char *, uint64_t))(v142 + 8);
  v142 += 8;
  uint64_t v113 = v61;
  v61(v56, v60);
  uint64_t v62 = (void (*)(char *, char *, uint64_t))v124[4];
  uint64_t v108 = v124 + 4;
  uint64_t v112 = v62;
  uint64_t v63 = v125;
  v62(v130, v59, v125);
  v119((char *)v51, 1, 1, v120);
  long long v64 = v122;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_10008DB18(v51, &qword_10094C100);
  uint64_t v65 = v131;
  unint64_t v66 = v105;
  v105(v53, v117, v131);
  uint64_t v67 = v138;
  View.workoutViewStyle(_:)();
  v137(v53, v65);
  v116(v64, v67);
  char v68 = v110;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v69 = v139;
  uint64_t v70 = v140;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v134)(v68, v133);
  v113(v56, v69);
  v112(v135, v70, v63);
  v119((char *)v51, 1, 1, v120);
  uint64_t v71 = v122;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_10008DB18(v51, &qword_10094C100);
  unsigned int v72 = v107;
  uint64_t v73 = v131;
  v66(v107, v117, v131);
  uint64_t v74 = v138;
  View.workoutViewStyle(_:)();
  v137(v72, v73);
  v116(v71, v74);
  char v75 = v110;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v76 = v129;
  uint64_t v77 = v139;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v134)(v75, v133);
  v113(v56, v77);
  v112(v140, v76, v125);
  v119((char *)v51, 1, 1, v120);
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_10008DB18(v51, &qword_10094C100);
  uint64_t v78 = v131;
  v105(v72, v117, v131);
  uint64_t v79 = v138;
  View.workoutViewStyle(_:)();
  v137(v72, v78);
  v116(v71, v79);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v80 = v109;
  uint64_t v81 = v139;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v134)(v75, v133);
  v113(v56, v81);
  char v82 = v129;
  uint64_t v83 = v80;
  uint64_t v84 = v125;
  v112(v129, v80, v125);
  uint64_t v142 = *(void *)(v127 + 16);
  uint64_t v85 = v121;
  uint64_t v86 = v128;
  ((void (*)(char *, char *, uint64_t))v142)(v121, v126, v128);
  uint64_t v87 = (void (*)(char *, char *, uint64_t))v124[2];
  v87(v83, v130, v84);
  unint64_t v88 = v101;
  v87(v101, v135, v84);
  int64_t v89 = v102;
  v87(v102, v140, v84);
  uint64_t v90 = v103;
  v87(v103, v82, v84);
  uint64_t v91 = v104;
  ((void (*)(uint64_t, char *, uint64_t))v142)(v104, v85, v86);
  uint64_t v92 = (int *)sub_1000AFA94(&qword_100960198);
  uint64_t v93 = v109;
  v87((char *)(v91 + v92[12]), v109, v84);
  v87((char *)(v91 + v92[16]), v88, v84);
  v87((char *)(v91 + v92[20]), v89, v84);
  v87((char *)(v91 + v92[24]), v90, v84);
  uint64_t v94 = (void (*)(char *, uint64_t))v124[1];
  v94(v129, v84);
  v94(v140, v84);
  v94(v135, v84);
  v94(v130, v84);
  uint64_t v95 = *(void (**)(char *, uint64_t))(v127 + 8);
  uint64_t v96 = v128;
  v95(v126, v128);
  v94(v90, v84);
  v94(v89, v84);
  v94(v88, v84);
  v94(v93, v84);
  return ((uint64_t (*)(char *, uint64_t))v95)(v121, v96);
}