uint64_t sub_10025B244()
{
  uint64_t v0;
  uint64_t v1;
  unsigned char *v2;
  uint64_t (*v3)(void);
  id v5;
  void *v6;
  unsigned int v7;
  os_log_type_t v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t (*v22)(void *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = v0;
  v1 = *(void *)(v0 + 1960);
  sub_10025B950(*(void *)(v0 + 1992));
  if (*(void *)(v1 + 112))
  {
    sub_10025B768();
    swift_allocError();
    *v2 = 8;
    swift_willThrow();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    v5 = [self sharedConnection];
    if (v5 && (v6 = v5, v7 = [v5 isAppInstallationAllowed], v6, v7))
    {
      v8 = static os_log_type_t.default.getter();
      v9 = (void *)HKLogActivity;
      v10 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        v11 = *(void *)(v0 + 1952);
        swift_bridgeObjectRetain_n();
        v12 = v9;
        v13 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v13 = 134218242;
        *(void *)(v0 + 1920) = *(void *)(v11 + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v13 + 12) = 2080;
        swift_bridgeObjectRetain();
        v14 = Array.description.getter();
        v16 = v15;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1928) = sub_10008F1F4(v14, v16, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, v10, "[AppStoreQuery] Fetching Editorial Items for %ld identifiers %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      v17 = *(unsigned char *)(v0 + 2048);
      v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 2008) = v18;
      *v18 = v0;
      v18[1] = sub_10025A400;
      v19 = *(void *)(v0 + 1984);
      v20 = *(void *)(v0 + 1952);
      return sub_100256218(v19, v20, v17 & 1);
    }
    else
    {
      static os_log_type_t.default.getter();
      v21 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      swift_task_dealloc();
      v22 = *(uint64_t (**)(void *))(v0 + 8);
      return v22(_swiftEmptyArrayStorage);
    }
  }
}

uint64_t sub_10025B62C()
{
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10025B6BC()
{
  (*(void (**)(void, void))(v0[247] + 8))(v0[248], v0[246]);
  swift_task_dealloc();
  v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_10025B768()
{
  unint64_t result = qword_100951D30;
  if (!qword_100951D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100951D30);
  }
  return result;
}

void *sub_10025B7BC(void *a1)
{
  uint64_t v2 = a1[10];
  uint64_t v7 = a1[9];
  uint64_t v8 = a1[8];
  uint64_t v3 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100209CCC(v8, v7, v2, v3, v4, v5);
  return a1;
}

uint64_t sub_10025B894(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 - 1) & ~(((int)v1 - 1) >> 31);
}

uint64_t sub_10025B8B0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_10025B8D4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return result;
}

uint64_t *sub_10025B8F4(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10025B950(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

unsigned __int8 *sub_10025B960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10025BCC4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  v11 = sub_10025BA48(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_10025BA48(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10025BCC4()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10025BD44(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10025BD44(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10025BE9C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10009016C(v9, 0),
          unint64_t v12 = sub_10025BF9C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10025BE9C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    double result = sub_1003B13A0(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    double result = sub_1003B13A0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_10025BF9C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    double result = v12;
    if (v17 == v15) {
      double result = sub_1003B13A0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      double result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        double result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          double result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    double result = sub_1003B13A0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10025C1B0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10025C1E8()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10025C228()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  v3[5] = v2;
  return _swift_task_switch(sub_100255814, 0, 0);
}

void sub_10025C2D4(uint64_t a1)
{
  sub_100258288(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10025C2DC()
{
  uint64_t v1 = type metadata accessor for URLRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = sub_1000AFA94(&qword_100951D50);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_10025C430(void *a1, NSObject *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URLRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1000AFA94(&qword_100951D50) - 8);
  uint64_t v9 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1002586E8(a1, a2, v2 + v6, v9);
}

unint64_t sub_10025C518()
{
  unint64_t result = qword_100951D60;
  if (!qword_100951D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951D60);
  }
  return result;
}

uint64_t sub_10025C56C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_10025C5C4(uint64_t a1)
{
  sub_100256BFC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10025C5CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10025C614()
{
  uint64_t v1 = sub_1000AFA94(&qword_100951D78);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10025C6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94(&qword_100951D78) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100256DB8(a1, a2, v6, v7);
}

uint64_t getEnumTagSinglePayload for AppStoreQuery.AppStoreQueryError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppStoreQuery.AppStoreQueryError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025C8C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreQuery.AppStoreQueryError()
{
  return &type metadata for AppStoreQuery.AppStoreQueryError;
}

unint64_t sub_10025C904()
{
  unint64_t result = qword_100951D88;
  if (!qword_100951D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951D88);
  }
  return result;
}

id sub_10025C95C(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12 = [objc_allocWithZone((Class)UIBezierPath) init];
  CGFloat v13 = a3;
  CGFloat v14 = a4;
  CGFloat v15 = a5;
  CGFloat v16 = a6;
  if ((a2 & 1) == 0)
  {
    CGRectGetMaxY(*(CGRect *)&v13);
    if (qword_10094AE00 != -1) {
LABEL_13:
    }
      swift_once();
    UIRoundToScale();
    UIRoundToScale();
    double v18 = v17;
    UIRoundToScale();
    [v12 moveToPoint:v18, v19];
    v38.origin.x = a3;
    v38.origin.y = a4;
    v38.size.width = a5;
    v38.size.height = a6;
    CGRectGetMaxX(v38);
    UIRoundToScale();
    double v21 = v20;
    UIRoundToScale();
    [v12 addLineToPoint:v21, v22];
    UIRoundToScale();
    double v24 = v23;
    UIRoundToScale();
    [v12 moveToPoint:v24, v25];
    v39.origin.x = a3;
    v39.origin.y = a4;
    v39.size.width = a5;
    v39.size.height = a6;
    CGRectGetMaxX(v39);
    UIRoundToScale();
    double v27 = v26;
    UIRoundToScale();
    [v12 addLineToPoint:v27, v28];
    return v12;
  }
  CGRectGetWidth(*(CGRect *)&v13);
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else if (a1 - 1 >= 1)
  {
    if (qword_10094AE00 == -1) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  __break(1u);
LABEL_16:
  swift_once();
LABEL_8:
  uint64_t v30 = 2;
  while (1)
  {
    uint64_t v31 = v30 - 1;
    UIRoundToScale();
    UIRoundToScale();
    double v33 = v32;
    UIRoundToScale();
    [v12 moveToPoint:v33, v34];
    v40.origin.x = a3;
    v40.origin.y = a4;
    v40.size.width = a5;
    v40.size.height = a6;
    CGRectGetMaxY(v40);
    UIRoundToScale();
    double v36 = v35;
    UIRoundToScale();
    [v12 addLineToPoint:v36, v37];
    if (a1 == v30) {
      return v12;
    }
    ++v30;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
  }
}

void *sub_10025CC44(char a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12 = [objc_allocWithZone((Class)UIBezierPath) init];
  CGFloat v13 = v12;
  if (a2)
  {
    [v12 moveToPoint:0.0, 0.0];
    v31.origin.x = a3;
    v31.origin.y = a4;
    v31.size.width = a5;
    v31.size.height = a6;
    [v13 addLineToPoint:0.0, CGRectGetMaxY(v31)];
    v32.origin.x = a3;
    v32.origin.y = a4;
    v32.size.width = a5;
    v32.size.height = a6;
    [v13 moveToPoint:CGRectGetMaxX(v32), 0.0];
    v33.origin.x = a3;
    v33.origin.y = a4;
    v33.size.width = a5;
    v33.size.height = a6;
    double MaxX = CGRectGetMaxX(v33);
    v34.origin.x = a3;
    v34.origin.y = a4;
    v34.size.width = a5;
    v34.size.height = a6;
    double MaxY = CGRectGetMaxY(v34);
    goto LABEL_7;
  }
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  double v15 = v14;
  UIRoundToScale();
  [v13 moveToPoint:v15, v16];
  v27.origin.x = a3;
  v27.origin.y = a4;
  v27.size.width = a5;
  v27.size.height = a6;
  CGRectGetMaxX(v27);
  UIRoundToScale();
  double v18 = v17;
  UIRoundToScale();
  [v13 addLineToPoint:v18, v19];
  if (a1)
  {
    v28.origin.x = a3;
    v28.origin.y = a4;
    v28.size.width = a5;
    v28.size.height = a6;
    CGRectGetMaxY(v28);
    UIRoundToScale();
    double v21 = v20;
    UIRoundToScale();
    [v13 moveToPoint:v21, v22];
    v29.origin.x = a3;
    v29.origin.y = a4;
    v29.size.width = a5;
    v29.size.height = a6;
    CGRectGetMaxX(v29);
    v30.origin.x = a3;
    v30.origin.y = a4;
    v30.size.width = a5;
    v30.size.height = a6;
    CGRectGetMaxY(v30);
    UIRoundToScale();
    double MaxX = v23;
    UIRoundToScale();
LABEL_7:
    [v13 addLineToPoint:MaxX, MaxY];
  }
  return v13;
}

double sub_10025CEB8()
{
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100998308 + *(double *)&qword_100998308;
  *(double *)&qword_100951D90 = *(double *)&qword_100998308 + *(double *)&qword_100998308;
  return result;
}

char *sub_10025CF10(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainGridLayer;
  id v4 = objc_allocWithZone((Class)CAShapeLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayGridLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainStrokeColor;
  sub_100006248();
  *(UIColor *)&v5[v7] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.28235, 0.28235, 0.28235, 1.0);
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayStrokeColor;
  *(UIColor *)&v5[v8] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.50196, 0.50196, 0.50196, 1.0);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineDashPattern;
  sub_1000AFA94(&qword_10094E770);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10074E640;
  if (qword_10094A740 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_100951D90;
  double v12 = *(double *)&qword_100951D90 * 4.0;
  *(void *)(v10 + 32) = qword_100951D90;
  *(double *)(v10 + 40) = v12;
  *(void *)&v5[v9] = v10;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineWidth] = v11;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_nHoursInADay] = 24;
  v5[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_drawsBottomLine] = 0;
  v5[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_gridType] = a1 & 1;

  v30.receiver = v5;
  v30.super_class = (Class)type metadata accessor for ChartAxisGridLayer();
  CGFloat v13 = [super init];
  double v14 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainGridLayer];
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineWidth;
  double v16 = *(double *)&v13[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineWidth];
  double v17 = v13;
  id v18 = v14;
  [v18 setLineWidth:v16];
  id v19 = *(id *)&v17[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainStrokeColor];
  id v20 = [v19 CGColor];
  [v18 setStrokeColor:v20];

  swift_bridgeObjectRetain();
  double v21 = (void *)CAShapeLayer.withLineDashPattern(_:)();

  swift_bridgeObjectRelease();
  [v17 addSublayer:v21];

  double v22 = *(void **)&v17[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayGridLayer];
  double v23 = *(double *)&v13[v15];
  double v24 = v17;
  id v25 = v22;
  [v25 setLineWidth:v23];
  id v26 = *(id *)&v24[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayStrokeColor];
  id v27 = [v26 CGColor];
  [v25 setStrokeColor:v27];

  swift_bridgeObjectRetain();
  CGRect v28 = (void *)CAShapeLayer.withLineDashPattern(_:)();

  swift_bridgeObjectRelease();
  [v24 addSublayer:v28];

  return v24;
}

char *sub_10025D240(uint64_t a1)
{
  sub_10008F484(a1, (uint64_t)v10);
  uint64_t v3 = (objc_class *)type metadata accessor for ChartAxisGridLayer();
  id v4 = v1;
  if (swift_dynamicCast())
  {
    char v5 = v9[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_gridType];
  }
  else
  {

    char v5 = 0;
  }
  id v6 = objc_allocWithZone(v3);
  uint64_t v7 = sub_10025CF10(v5);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

uint64_t sub_10025D368(void *a1)
{
  int v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainGridLayer;
  id v5 = objc_allocWithZone((Class)CAShapeLayer);
  id v6 = v2;
  *(void *)&v2[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayGridLayer;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainStrokeColor;
  sub_100006248();
  *(UIColor *)&v6[v8] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.28235, 0.28235, 0.28235, 1.0);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayStrokeColor;
  *(UIColor *)&v6[v9] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.50196, 0.50196, 0.50196, 1.0);
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineDashPattern;
  sub_1000AFA94(&qword_10094E770);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10074E640;
  if (qword_10094A740 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_100951D90;
  double v13 = *(double *)&qword_100951D90 * 4.0;
  *(void *)(v11 + 32) = qword_100951D90;
  *(double *)(v11 + 40) = v13;
  *(void *)&v6[v10] = v11;

  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_lineWidth] = v12;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_nHoursInADay] = 24;
  v6[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_drawsBottomLine] = 0;

  swift_bridgeObjectRelease();
  type metadata accessor for ChartAxisGridLayer();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10025D57C()
{
  uint64_t v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for ChartAxisGridLayer();
  [super layoutSublayers];
  int v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_mainGridLayer];
  [v0 bounds];
  [v2 setFrame:];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_overlayGridLayer];
  [v1 bounds];
  [v3 setFrame:];
  char v4 = v1[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_gridType];
  [v1 bounds];
  id v9 = sub_10025C95C(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_nHoursInADay], v4, v5, v6, v7, v8);
  [v1 bounds];
  double v14 = sub_10025CC44(v1[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_drawsBottomLine], v4, v10, v11, v12, v13);
  uint64_t v15 = self;
  [v15 begin];
  [v15 setDisableActions:1];
  id v16 = [v9 CGPath];
  [v2 setPath:v16];

  id v17 = [v14 CGPath];
  [v3 setPath:v17];

  [v15 commit];
}

id sub_10025D7A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartAxisGridLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for ChartAxisGridLayer()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ChartAxisGridLayer.GridType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025D944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartAxisGridLayer.GridType()
{
  return &type metadata for ChartAxisGridLayer.GridType;
}

unint64_t sub_10025D980()
{
  unint64_t result = qword_100951E08;
  if (!qword_100951E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E08);
  }
  return result;
}

uint64_t destroy for SleepingSampleMetricChartView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SleepingSampleMetricChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SleepingSampleMetricChartView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for SleepingSampleMetricChartView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SleepingSampleMetricChartView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleMetricChartView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleMetricChartView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleMetricChartView()
{
  return &type metadata for SleepingSampleMetricChartView;
}

uint64_t sub_10025DC3C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10025DC58(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BaselineRelativeValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  CGFloat v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v14[1] = v1;
    objc_super v18 = _swiftEmptyArrayStorage;
    sub_1001C9154(0, v7, 0);
    CGFloat v8 = v18;
    uint64_t v17 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    CGFloat v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v14[2] = v4 + 32;
    uint64_t v15 = v10;
    do
    {
      v15(v6, v9 + *(int *)(v17 + 20), v3);
      objc_super v18 = v8;
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        sub_1001C9154(v11 > 1, v12 + 1, 1);
        CGFloat v8 = v18;
      }
      v8[2] = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v6, v3);
      v9 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_10025DE70(uint64_t a1)
{
  return sub_10025DEBC(a1, &qword_100997908);
}

uint64_t sub_10025DE98(uint64_t a1)
{
  return sub_10025DEBC(a1, &qword_100997910);
}

uint64_t sub_10025DEBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Color.RGBColorSpace();
  __chkstk_darwin(v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.displayP3(_:));
  uint64_t result = Color.init(_:red:green:blue:opacity:)();
  *a2 = result;
  return result;
}

uint64_t sub_10025DFB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(char **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unsigned int v6 = *(void (**)(void, void, void))(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  char v9 = *(unsigned char *)(v1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CGFloat v10 = sub_10025E044(v3, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;

  return swift_bridgeObjectRetain();
}

void *sub_10025E044(char *a1, uint64_t a2, void (*a3)(void, void, void), char a4, uint64_t a5)
{
  double v121 = *(double *)&a2;
  double v122 = *(double *)&a3;
  v118 = a1;
  uint64_t v9 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v117 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v12 = (double *)((char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v119 = (double *)((char *)v100 - v13);
  *(double *)&uint64_t v14 = COERCE_DOUBLE(type metadata accessor for BaselineRelativeValue());
  uint64_t v112 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (double *)((char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = sub_1000AFA94(&qword_100951E10);
  uint64_t v17 = __chkstk_darwin(v120);
  v116 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v113 = (char *)v100 - v19;
  uint64_t v114 = sub_1000AFA94(&qword_100951E18);
  uint64_t v20 = __chkstk_darwin(v114);
  v115 = (char *)v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  double v23 = (char *)v100 - v22;
  uint64_t v24 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  id v27 = (char *)v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  CGRect v29 = (char *)v100 - v28;
  uint64_t v30 = type metadata accessor for Date();
  __chkstk_darwin(v30);
  uint64_t v32 = __chkstk_darwin((char *)v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v34 = __chkstk_darwin(v33);
  if (a4) {
    return _swiftEmptyArrayStorage;
  }
  v111 = v23;
  uint64_t v39 = *(void *)(a5 + 16);
  if (!v39)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v29, 1, 1, v30);
    goto LABEL_7;
  }
  double v123 = *(double *)&v14;
  v104 = (int *)v34;
  uint64_t v105 = v38;
  uint64_t v106 = v37;
  v110 = (char *)v100 - v35;
  v103 = (int *)v9;
  v102 = v12;
  CGRect v40 = (char *)(a5 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)));
  v41 = *(void (**)(char *))(v36 + 16);
  v108 = v40;
  uint64_t v42 = v36;
  v41(v29);
  uint64_t v109 = *(void *)(v42 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v109)(v29, 0, 1, v30);
  double v107 = *(double *)(v42 + 48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))&v107)(v29, 1, v30) == 1)
  {
LABEL_7:
    uint64_t v45 = (uint64_t)v29;
    goto LABEL_8;
  }
  v101 = v41;
  v100[0] = *(void *)(v42 + 32);
  ((void (*)(char *, char *, uint64_t))v100[0])(v110, v29, v30);
  v100[1] = v42 + 32;
  v43 = (void (*)(char *, int *, uint64_t))v101;
  ((void (*)(char *, char *, uint64_t))v101)(v27, &v108[*(void *)(v42 + 72) * (v39 - 1)], v30);
  ((void (*)(char *, void, uint64_t, uint64_t))v109)(v27, 0, 1, v30);
  uint64_t v44 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))&v107)(v27, 1, v30) != 1)
  {
    v48 = v43;
    uint64_t v109 = v42;
    ((void (*)(uint64_t, char *, uint64_t))v100[0])(v106, v27, v30);
    v49 = v110;
    Date.timeIntervalSince(_:)();
    uint64_t v50 = v105;
    Date.addingTimeInterval(_:)();
    v51 = v104;
    Date.addingTimeInterval(_:)();
    sub_1000C8E70();
    v52 = (double *)v30;
    if (dispatch thunk of static Comparable.<= infix(_:_:)())
    {
      double v5 = v121;
      double v6 = v122;
      uint64_t v53 = v120;
      v54 = v113;
      v55 = &v113[*(int *)(v120 + 48)];
      v48(v113, v51, v44);
      v108 = v55;
      v48(v55, (int *)v50, v44);
      v56 = v116;
      v57 = &v116[*(int *)(v53 + 48)];
      v48(v116, (int *)v54, v44);
      v48(v57, (int *)v55, v44);
      uint64_t v58 = (uint64_t)v115;
      v59 = (void (*)(char *, char *, uint64_t))v100[0];
      ((void (*)(char *, char *, uint64_t))v100[0])(v115, v56, v44);
      uint64_t v60 = v109 + 8;
      v61 = *(char **)(v109 + 8);
      ((void (*)(char *, uint64_t))v61)(v57, v44);
      v62 = &v56[*(int *)(v120 + 48)];
      v59(v56, v54, v44);
      v59(v62, v108, v44);
      v63 = v62;
      v49 = v61;
      v59((char *)(v58 + *(int *)(v114 + 36)), v63, v44);
      uint64_t v109 = v60;
      ((void (*)(char *, uint64_t))v61)(v56, v44);
      uint64_t v50 = (uint64_t)v111;
      sub_10025ECE8(v58, (uint64_t)v111);
      sub_1000AFA94(&qword_10094F470);
      unint64_t v64 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      uint64_t v117 = *(void *)(v117 + 72);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_1007509E0;
      uint64_t v120 = v65;
      v116 = (char *)v64;
      v52 = (double *)(v65 + v64);
      v51 = v103;
      if (qword_10094A748 == -1) {
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_13:
    uint64_t v66 = Color.opacity(_:)();
    double v67 = v122;
    double *v52 = v121;
    v52[1] = v67;
    sub_10025ED50(v50, (uint64_t)v52 + v51[5]);
    *(void *)((char *)v52 + v51[6]) = v66;
    *(double *)((char *)v52 + v51[7]) = 4.0;
    uint64_t v68 = swift_bridgeObjectRetain();
    v69 = (char *)sub_10025DC58(v68);
    swift_bridgeObjectRelease();
    uint64_t v70 = *((void *)v69 + 2);
    double v107 = v6;
    if (v70)
    {
      v118 = v49;
      double v121 = *(double *)&v44;
      double v122 = *(double *)(v112 + 16);
      uint64_t v71 = *(unsigned __int8 *)(v112 + 80);
      v115 = v69;
      v72 = &v69[(v71 + 32) & ~v71];
      uint64_t v73 = *(void *)(v112 + 72);
      v74 = (unsigned int (**)(double *, double))(v112 + 88);
      int v75 = enum case for BaselineRelativeValue.determinate(_:);
      v76 = (void (**)(double *, double))(v112 + 8);
      v77 = (void (**)(double *, double))(v112 + 96);
      double v78 = v5;
      do
      {
        v79 = v16;
        v80 = v16;
        double v81 = v123;
        (*(void (**)(double *, char *, void))&v122)(v79, v72, *(void *)&v123);
        if ((*v74)(v80, COERCE_DOUBLE(*(void *)&v81)) == v75)
        {
          (*v77)(v80, COERCE_DOUBLE(*(void *)&v81));
          uint64_t v16 = v80;
          if (*v80 >= v5)
          {
            if (v6 < *v80) {
              double v6 = *v80;
            }
          }
          else
          {
            double v5 = *v80;
          }
        }
        else
        {
          (*v76)(v80, COERCE_DOUBLE(*(void *)&v81));
          uint64_t v16 = v80;
        }
        v72 += v73;
        --v70;
      }
      while (v70);
      swift_bridgeObjectRelease();
      v51 = v103;
      uint64_t v44 = *(void *)&v121;
      v49 = v118;
      double v82 = v78;
    }
    else
    {
      swift_bridgeObjectRelease();
      double v82 = v5;
    }
    double v83 = fabs(v5 * 100.0);
    double v84 = fmod(v83, 50.0);
    double v123 = v6 * 100.0;
    double v85 = fmod(v6 * 100.0, 50.0);
    double v86 = v82 + -0.1;
    v87 = v102;
    v88 = v119;
    unint64_t v46 = v120;
    if (v5 >= v86)
    {
LABEL_31:
      double v93 = v107 + 0.1;
      if (v107 + 0.1 >= v6)
      {
        uint64_t v99 = (uint64_t)v111;
LABEL_38:
        sub_10008DB18(v99, &qword_100951E18);
        ((void (*)(int *, uint64_t))v49)(v104, v44);
        ((void (*)(uint64_t, uint64_t))v49)(v105, v44);
        ((void (*)(uint64_t, uint64_t))v49)(v106, v44);
        ((void (*)(char *, uint64_t))v49)(v110, v44);
        return (void *)v46;
      }
      double v94 = (v123 + 50.0 - v85) / 100.0;
      if (v93 > v94)
      {
        __break(1u);
      }
      else
      {
        sub_10025ED50((uint64_t)v111, (uint64_t)v87 + v51[5]);
        if (qword_10094A750 == -1)
        {
LABEL_34:
          uint64_t v95 = Color.opacity(_:)();
          double *v87 = v93;
          v87[1] = v94;
          *(void *)((char *)v87 + v51[6]) = v95;
          *(double *)((char *)v87 + v51[7]) = 4.0;
          unint64_t v97 = *(void *)(v46 + 16);
          unint64_t v96 = *(void *)(v46 + 24);
          if (v97 >= v96 >> 1) {
            unint64_t v46 = sub_1001E7808(v96 > 1, v97 + 1, 1, v46);
          }
          uint64_t v98 = (uint64_t)v111;
          *(void *)(v46 + 16) = v97 + 1;
          sub_10025EDB8((uint64_t)v87, (uint64_t)&v116[v46 + v97 * v117]);
          uint64_t v99 = v98;
          goto LABEL_38;
        }
      }
      swift_once();
      goto LABEL_34;
    }
    double v122 = v85;
    double v89 = (v83 + 50.0 - v84) / -100.0;
    if (v89 > v86)
    {
      __break(1u);
    }
    else
    {
      sub_10025ED50((uint64_t)v111, (uint64_t)v119 + v51[5]);
      if (qword_10094A750 == -1)
      {
LABEL_28:
        uint64_t v90 = Color.opacity(_:)();
        double *v88 = v89;
        v88[1] = v86;
        *(void *)((char *)v88 + v51[6]) = v90;
        *(double *)((char *)v88 + v51[7]) = 4.0;
        unint64_t v92 = *(void *)(v46 + 16);
        unint64_t v91 = *(void *)(v46 + 24);
        if (v92 >= v91 >> 1) {
          unint64_t v46 = sub_1001E7808(v91 > 1, v92 + 1, 1, v46);
        }
        *(void *)(v46 + 16) = v92 + 1;
        sub_10025EDB8((uint64_t)v88, (uint64_t)&v116[v46 + v92 * v117]);
        double v85 = v122;
        goto LABEL_31;
      }
    }
    swift_once();
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v110, v30);
  uint64_t v45 = (uint64_t)v27;
LABEL_8:
  sub_10008DB18(v45, (uint64_t *)&unk_10095B890);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10025ECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100951E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025ED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100951E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025EDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10025EE20()
{
  unint64_t result = qword_100951E20;
  if (!qword_100951E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E20);
  }
  return result;
}

unint64_t sub_10025EE78()
{
  unint64_t result = qword_100951E28;
  if (!qword_100951E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E28);
  }
  return result;
}

unint64_t sub_10025EED0()
{
  unint64_t result = qword_100951E30;
  if (!qword_100951E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E30);
  }
  return result;
}

unint64_t sub_10025EF28()
{
  unint64_t result = qword_100951E38;
  if (!qword_100951E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E38);
  }
  return result;
}

unint64_t sub_10025EF80()
{
  unint64_t result = qword_100951E40;
  if (!qword_100951E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E40);
  }
  return result;
}

uint64_t sub_10025EFD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025EFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025FF7C(a1, a2, a3, (void (*)(void))sub_10025EED0);
}

uint64_t sub_10025F008(int a1, uint64_t a2, uint64_t a3)
{
  int v31 = a1;
  uint64_t v5 = type metadata accessor for DataLinkCommand();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.dataLink.getter();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v11, a3, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v30 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v12;
    uint64_t v19 = v18;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v34 = v28;
    *(_DWORD *)uint64_t v19 = 136315650;
    os_log_t v27 = v16;
    v15(v9, (uint64_t)v11, v5);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v33 = sub_10008F1F4(v20, v21, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    *(_WORD *)(v19 + 12) = 1024;
    LODWORD(v33) = v31 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 18) = 2080;
    uint64_t v33 = a2;
    sub_1000AFA94(&qword_10094C908);
    uint64_t v22 = Optional.description.getter();
    uint64_t v33 = sub_10008F1F4(v22, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v24 = v27;
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v30, "Sent %s: %{BOOL}d, %s", (uint8_t *)v19, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v12);
  }
}

uint64_t sub_10025F3B8(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997920);
}

uint64_t sub_10025F3DC(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for DataLinkCommand();
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = *(void *)(v3 + 64);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_10025F4B4, 0, 0);
}

uint64_t sub_10025F4B4()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10025F548, v2, v1);
}

uint64_t sub_10025F548()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for DataLinkCommand.resume(_:), v2);
  if (qword_10094AB68 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + v8, v4, v7);
  swift_retain();
  dispatch thunk of DataLinkClient.send(command:acknowledged:)();
  swift_release();
  swift_release();
  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10025F70C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094A760, (uint64_t)qword_100997920, a1);
}

uint64_t sub_10025F734(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  return sub_10025F3DC(a1);
}

uint64_t sub_10025F7CC(uint64_t a1)
{
  unint64_t v2 = sub_10025EED0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10025F80C()
{
  unint64_t result = qword_100951E50;
  if (!qword_100951E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E50);
  }
  return result;
}

unint64_t sub_10025F864()
{
  unint64_t result = qword_100951E58;
  if (!qword_100951E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E58);
  }
  return result;
}

unint64_t sub_10025F8BC()
{
  unint64_t result = qword_100951E60;
  if (!qword_100951E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E60);
  }
  return result;
}

unint64_t sub_10025F914()
{
  unint64_t result = qword_100951E68;
  if (!qword_100951E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E68);
  }
  return result;
}

uint64_t sub_10025F968()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025F984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025FF7C(a1, a2, a3, (void (*)(void))sub_10025F864);
}

uint64_t sub_10025F99C(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997940);
}

uint64_t sub_10025F9C0(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for DataLinkCommand();
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = *(void *)(v3 + 64);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_10025FA98, 0, 0);
}

uint64_t sub_10025FA98()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10025FB2C, v2, v1);
}

uint64_t sub_10025FB2C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for DataLinkCommand.pause(_:), v2);
  if (qword_10094AB68 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + v8, v4, v7);
  swift_retain();
  dispatch thunk of DataLinkClient.send(command:acknowledged:)();
  swift_release();
  swift_release();
  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10025FCF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094A770, (uint64_t)qword_100997940, a1);
}

uint64_t sub_10025FD14(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  return sub_10025F9C0(a1);
}

uint64_t sub_10025FDAC(uint64_t a1)
{
  unint64_t v2 = sub_10025F864();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10025FDEC()
{
  unint64_t result = qword_100951E78;
  if (!qword_100951E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E78);
  }
  return result;
}

unint64_t sub_10025FE44()
{
  unint64_t result = qword_100951E80;
  if (!qword_100951E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E80);
  }
  return result;
}

unint64_t sub_10025FE9C()
{
  unint64_t result = qword_100951E88;
  if (!qword_100951E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E88);
  }
  return result;
}

unint64_t sub_10025FEF4()
{
  unint64_t result = qword_100951E90;
  if (!qword_100951E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951E90);
  }
  return result;
}

uint64_t sub_10025FF48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025FF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025FF7C(a1, a2, a3, (void (*)(void))sub_10025FE44);
}

uint64_t sub_10025FF7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025FFD0(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997960);
}

uint64_t sub_10025FFF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v3, a2);
  sub_1000876DC(v3, (uint64_t)a2);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100260054(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for DataLinkCommand();
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = *(void *)(v3 + 64);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_10026012C, 0, 0);
}

uint64_t sub_10026012C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002601C0, v2, v1);
}

uint64_t sub_1002601C0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for DataLinkCommand.markSegment(_:), v2);
  if (qword_10094AB68 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + v8, v4, v7);
  swift_retain();
  dispatch thunk of DataLinkClient.send(command:acknowledged:)();
  swift_release();
  swift_release();
  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100260384@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094A780, (uint64_t)qword_100997960, a1);
}

uint64_t sub_1002603A8@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = sub_1000876DC(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100260444(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  return sub_100260054(a1);
}

uint64_t sub_1002604DC(uint64_t a1)
{
  unint64_t v2 = sub_10025FE44();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for MarkMirroredSegment()
{
  return &type metadata for MarkMirroredSegment;
}

ValueMetadata *type metadata accessor for PauseMirroredWorkout()
{
  return &type metadata for PauseMirroredWorkout;
}

ValueMetadata *type metadata accessor for ResumeMirroredWorkout()
{
  return &type metadata for ResumeMirroredWorkout;
}

unint64_t sub_10026054C()
{
  unint64_t result = qword_10094E580;
  if (!qword_10094E580)
  {
    sub_1000A1370(&qword_10094E588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E580);
  }
  return result;
}

uint64_t sub_1002605B8(int a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DataLinkCommand() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10025F008(a1, a2, v6);
}

id sub_10026063C(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t destroy for DivingDetailWaterTemperatureChartView(uint64_t a1)
{
  return sub_10026065C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10026065C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return _objc_release_x1();
  }
  else {
    return swift_release();
  }
}

uint64_t _s10FitnessApp37DivingDetailWaterTemperatureChartViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10026063C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DivingDetailWaterTemperatureChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10026063C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10026065C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DivingDetailWaterTemperatureChartView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10026065C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DivingDetailWaterTemperatureChartView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DivingDetailWaterTemperatureChartView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DivingDetailWaterTemperatureChartView()
{
  return &type metadata for DivingDetailWaterTemperatureChartView;
}

uint64_t sub_1002607F4()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_100260810()
{
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v0 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v25[8] = v23;
  *(_OWORD *)uint64_t v26 = v24[0];
  *(_OWORD *)&v26[9] = *(_OWORD *)((char *)v24 + 9);
  v25[4] = v19;
  v25[5] = v20;
  v25[6] = v21;
  v25[7] = v22;
  v25[0] = v15;
  v25[1] = v16;
  v25[2] = v17;
  v25[3] = v18;
  sub_100264974((uint64_t)v25);
  if (v26[24]) {
    return 0;
  }
  uint64_t v2 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  long long v23 = v13;
  v24[0] = *(_OWORD *)v14;
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)&v14[9];
  long long v19 = v9;
  long long v20 = v10;
  long long v21 = v11;
  long long v22 = v12;
  long long v15 = v5;
  long long v16 = v6;
  long long v17 = v7;
  long long v18 = v8;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)&v15);
  if (*((void *)&v5 + 1)) {
    unsigned int v3 = (void *)*((void *)&v5 + 1);
  }
  else {
    unsigned int v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v4 = v3[2];
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_100260A1C(uint64_t a1, uint64_t a2, char a3)
{
  int v5 = a3 & 1;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v53 = v50;
  uint64_t v7 = __chkstk_darwin(v6);
  long long v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v51 = (char *)&v42 - v10;
  uint64_t v11 = type metadata accessor for DivingDataCalculator(0);
  uint64_t v12 = sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v46 = v11;
  uint64_t v47 = a1;
  uint64_t v44 = v12;
  uint64_t v45 = a2;
  long long v13 = (char *)StateObject.wrappedValue.getter();
  id v14 = *(id *)&v13[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v15 = [v14 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  long long v16 = v9;
  uint64_t v17 = v52;
  int v43 = v5;
  long long v18 = (char *)StateObject.wrappedValue.getter();
  id v19 = *(id *)&v18[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v20 = [v19 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100264FEC((unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date);
  long long v21 = v51;
  int v48 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = v53;
  long long v23 = *(void (**)(char *, uint64_t))(v53 + 8);
  v49 = v16;
  v23(v16, v17);
  uint64_t v42 = v23;
  v23(v21, v17);
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  uint64_t v24 = *(void *)(v50 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10074E640;
  uint64_t v50 = v26;
  unint64_t v27 = v26 + v25;
  uint64_t v28 = (char *)StateObject.wrappedValue.getter();
  id v29 = *(id *)&v28[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v30 = [v29 startDate];
  int v31 = v51;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v32 = v31;
  uint64_t v33 = *(void (**)(unint64_t, char *, uint64_t))(v53 + 32);
  v53 += 32;
  v33(v27, v32, v17);
  unint64_t v34 = v27 + v24;
  uint64_t v35 = (char *)StateObject.wrappedValue.getter();
  id v36 = *(id *)&v35[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  if (v48)
  {
    id v37 = [v36 startDate];

    uint64_t v38 = v49;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Date.addingTimeInterval(_:)();
    v42(v38, v52);
  }
  else
  {
    id v39 = [v36 endDate];

    CGRect v40 = v49;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v33(v34, v40, v52);
  }
  return v50;
}

void *sub_100260EA4()
{
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v0 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v14[8] = v12;
  *(_OWORD *)id v15 = *(_OWORD *)v13;
  *(_OWORD *)&v15[9] = *(_OWORD *)&v13[9];
  v14[4] = v8;
  v14[5] = v9;
  v14[6] = v10;
  v14[7] = v11;
  v14[0] = v4;
  v14[1] = v5;
  v14[2] = v6;
  void v14[3] = v7;
  sub_100264974((uint64_t)v14);
  if (v15[24]) {
    return _swiftEmptyArrayStorage;
  }
  if (*(double *)&v15[8] > 0.0) {
    double v2 = *(double *)&v15[8];
  }
  else {
    double v2 = 0.0;
  }
  if (*(double *)&v15[16] > 0.0) {
    double v3 = *(double *)&v15[16];
  }
  else {
    double v3 = 0.0;
  }
  sub_1000AFA94(&qword_10094E7C8);
  unint64_t result = (void *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_10074E640;
  *((double *)result + 4) = v2;
  *((double *)result + 5) = v3;
  return result;
}

uint64_t sub_100261020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000AFA94(&qword_100951EC0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  long long v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)&v19 - v12;
  id v14 = [self systemGray6Color];
  uint64_t v15 = Color.init(_:)();
  *(void *)long long v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v16 = sub_1000AFA94(&qword_100951EC8);
  sub_10026118C(a1, a2, v7, (uint64_t *)&v13[*(int *)(v16 + 44)]);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v11, &qword_100951EC0);
  *a4 = v15;
  uint64_t v17 = sub_1000AFA94(&qword_100951ED0);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)a4 + *(int *)(v17 + 48), &qword_100951EC0);
  swift_retain();
  sub_10008DB18((uint64_t)v13, &qword_100951EC0);
  sub_10008DB18((uint64_t)v11, &qword_100951EC0);
  return swift_release();
}

void sub_10026118C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v166 = a1;
  uint64_t v167 = a2;
  v165 = a4;
  int v4 = a3 & 1;
  uint64_t v164 = sub_1000AFA94(&qword_100951ED8);
  __chkstk_darwin(v164);
  long long v6 = (uint64_t *)&v125[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_100951EE0);
  __chkstk_darwin(v7 - 8);
  v153 = &v125[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_100951EE8);
  uint64_t v136 = *(void *)(v9 - 8);
  uint64_t v137 = v9;
  __chkstk_darwin(v9);
  v135 = &v125[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000AFA94(&qword_100951EF0);
  uint64_t v139 = *(void *)(v11 - 8);
  uint64_t v140 = v11;
  __chkstk_darwin(v11);
  v138 = &v125[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v146 = sub_1000AFA94(&qword_100951EF8);
  uint64_t v142 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v141 = &v125[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = sub_1000AFA94(&qword_100951F00);
  uint64_t v150 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  v147 = &v125[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000AFA94(&qword_100951F08);
  uint64_t v148 = *(void *)(v15 - 8);
  uint64_t v149 = v15;
  __chkstk_darwin(v15);
  v144 = &v125[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v143 = sub_1000AFA94(&qword_100951F10);
  __chkstk_darwin(v143);
  v151 = &v125[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v145 = sub_1000AFA94(&qword_100951F18);
  uint64_t v18 = __chkstk_darwin(v145);
  v154 = &v125[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v155 = &v125[-v20];
  uint64_t v158 = sub_1000AFA94(&qword_100951F20);
  __chkstk_darwin(v158);
  uint64_t v22 = &v125[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_1000AFA94(&qword_100951F28);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  v163 = &v125[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v162 = &v125[-v26];
  LocalizedStringKey.init(stringLiteral:)();
  __int16 v124 = 256;
  uint64_t v123 = 0;
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  static Font.body.getter();
  uint64_t v32 = Text.font(_:)();
  uint64_t v159 = v33;
  uint64_t v160 = v32;
  int v157 = v34;
  uint64_t v161 = v35;
  swift_release();
  sub_1000A06C0(v27, v29, v31);
  swift_bridgeObjectRelease();
  if (!sub_100260810())
  {
    LocalizedStringKey.init(stringLiteral:)();
    __int16 v124 = 256;
    uint64_t v123 = 0;
    uint64_t v106 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v108 = v107;
    char v110 = v109 & 1;
    static Font.body.getter();
    uint64_t v111 = Text.font(_:)();
    uint64_t v113 = v112;
    char v115 = v114;
    uint64_t v167 = v116;
    swift_release();
    sub_1000A06C0(v106, v108, v110);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v22 = v111;
    *((void *)v22 + 1) = v113;
    v22[16] = v115 & 1;
    *((void *)v22 + 3) = v167;
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100951F30, &qword_100951ED8);
    uint64_t v105 = (uint64_t)v162;
    _ConditionalContent<>.init(storage:)();
    goto LABEL_6;
  }
  v133 = v22;
  v134 = v6;
  id v36 = [self mainBundle];
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v36 localizedStringForKey:v37 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1007509E0;
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  LODWORD(v156) = v4;
  CGRect v40 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v180[8] = v178;
  v181[0] = v179[0];
  *(_OWORD *)((char *)v181 + 9) = *(_OWORD *)((char *)v179 + 9);
  v180[4] = v174;
  v180[5] = v175;
  v180[6] = v176;
  v180[7] = v177;
  v180[0] = v170;
  v180[1] = v171;
  v180[2] = v172;
  v180[3] = v173;
  uint64_t v41 = *((void *)&v176 + 1);
  uint64_t v42 = v177;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v180);
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_1000AA64C();
  *(void *)(v39 + 32) = v41;
  *(void *)(v39 + 40) = v42;
  uint64_t v43 = String.init(format:_:)();
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  *(void *)&long long v170 = v43;
  *((void *)&v170 + 1) = v45;
  sub_1000A06D0();
  uint64_t v46 = Text.init<A>(_:)();
  uint64_t v48 = v47;
  LOBYTE(v41) = v49 & 1;
  static Font.body.getter();
  uint64_t v50 = Text.font(_:)();
  uint64_t v52 = v51;
  char v54 = v53;
  swift_release();
  sub_1000A06C0(v46, v48, v41);
  swift_bridgeObjectRelease();
  id v55 = [self paceColors];
  if (v55)
  {
    v56 = v55;
    id v57 = [v55 nonGradientTextColor];

    if (v57)
    {
      BOOL v58 = v156 != 0;
      *(void *)&long long v170 = Color.init(_:)();
      uint64_t v59 = Text.foregroundStyle<A>(_:)();
      uint64_t v130 = v60;
      uint64_t v131 = v59;
      uint64_t v129 = v61;
      int v128 = v62 & 1;
      sub_1000A06C0(v50, v52, v54 & 1);
      swift_release();
      uint64_t v63 = swift_bridgeObjectRelease();
      __chkstk_darwin(v63);
      uint64_t v65 = v166;
      uint64_t v64 = v167;
      *(void *)&v125[-32] = v166;
      *(void *)&v125[-24] = v64;
      uint64_t v66 = v64;
      BOOL v67 = v58;
      BOOL v126 = v58;
      sub_1000AFA94(&qword_100951F48);
      sub_100264A98();
      uint64_t v68 = v135;
      uint64_t v69 = Chart.init(content:)();
      v132 = v125;
      __chkstk_darwin(v69);
      *(void *)&v125[-32] = v65;
      *(void *)&v125[-24] = v66;
      uint64_t v70 = v66;
      LOBYTE(v123) = v67;
      uint64_t v71 = sub_1000AFA94(&qword_100951F60);
      uint64_t v72 = sub_1000A132C(&qword_100951F68, &qword_100951EE8);
      v127 = &protocol conformance descriptor for AxisMarks<A>;
      uint64_t v73 = sub_1000A132C(&qword_100951F70, &qword_100951F60);
      uint64_t v74 = v137;
      int v75 = v138;
      View.chartYAxis<A>(content:)();
      (*(void (**)(unsigned char *, uint64_t))(v136 + 8))(v68, v74);
      uint64_t v169 = sub_100260A1C(v65, v70, (char)v156);
      uint64_t v76 = type metadata accessor for ScaleType();
      uint64_t v77 = *(void *)(v76 - 8);
      v135 = *(unsigned char **)(v77 + 56);
      uint64_t v136 = v77 + 56;
      uint64_t v78 = (uint64_t)v153;
      ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v135)(v153, 1, 1, v76);
      uint64_t v79 = sub_1000AFA94(&qword_100951F78);
      *(void *)&long long v170 = v74;
      *((void *)&v170 + 1) = v71;
      *(void *)&long long v171 = v72;
      *((void *)&v171 + 1) = v73;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v81 = sub_100264B90((unint64_t *)&qword_100951F80, &qword_100951F78);
      uint64_t v83 = v140;
      double v82 = v141;
      View.chartXScale<A>(domain:type:)();
      sub_10008DB18(v78, &qword_100951EE0);
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v139 + 8))(v75, v83);
      v168 = sub_100260EA4();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v135)(v78, 1, 1, v76);
      uint64_t v84 = sub_1000AFA94(&qword_10094E7B8);
      *(void *)&long long v170 = v83;
      *((void *)&v170 + 1) = v79;
      *(void *)&long long v171 = OpaqueTypeConformance2;
      *((void *)&v171 + 1) = v81;
      uint64_t v85 = swift_getOpaqueTypeConformance2();
      uint64_t v86 = sub_100264B90(&qword_100951F88, &qword_10094E7B8);
      uint64_t v87 = v146;
      v88 = v147;
      View.chartYScale<A>(domain:type:)();
      sub_10008DB18(v78, &qword_100951EE0);
      swift_bridgeObjectRelease();
      uint64_t v89 = (*(uint64_t (**)(unsigned char *, uint64_t))(v142 + 8))(v82, v87);
      v156 = v125;
      __chkstk_darwin(v89);
      uint64_t v90 = v167;
      *(void *)&v125[-32] = v166;
      *(void *)&v125[-24] = v90;
      LOBYTE(v123) = v126;
      sub_1000AFA94(&qword_100951F90);
      *(void *)&long long v170 = v87;
      *((void *)&v170 + 1) = v84;
      *(void *)&long long v171 = v85;
      *((void *)&v171 + 1) = v86;
      swift_getOpaqueTypeConformance2();
      sub_1000A132C(&qword_100951F98, &qword_100951F90);
      unint64_t v91 = v144;
      uint64_t v92 = v152;
      View.chartXAxis<A>(content:)();
      (*(void (**)(unsigned char *, uint64_t))(v150 + 8))(v88, v92);
      uint64_t v94 = v148;
      uint64_t v93 = v149;
      uint64_t v95 = (uint64_t)v151;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v148 + 16))(v151, v91, v149);
      *(_WORD *)(v95 + *(int *)(v143 + 36)) = 0;
      (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v91, v93);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      unint64_t v96 = v154;
      sub_1000AEF2C(v95, (uint64_t)v154, &qword_100951F10);
      unint64_t v97 = &v96[*(int *)(v145 + 36)];
      long long v98 = v171;
      *unint64_t v97 = v170;
      v97[1] = v98;
      v97[2] = v172;
      sub_10008DB18(v95, &qword_100951F10);
      uint64_t v99 = v155;
      sub_1000AEEC8((uint64_t)v96, (uint64_t)v155, &qword_100951F18);
      sub_1000AEF2C((uint64_t)v99, (uint64_t)v96, &qword_100951F18);
      uint64_t v100 = (uint64_t)v134;
      uint64_t v101 = v130;
      uint64_t v102 = v131;
      uint64_t v103 = v129;
      uint64_t *v134 = v131;
      *(void *)(v100 + 8) = v103;
      LOBYTE(v93) = v128;
      *(unsigned char *)(v100 + 16) = v128;
      *(void *)(v100 + 24) = v101;
      uint64_t v104 = sub_1000AFA94(&qword_100951FA0);
      sub_1000AEF2C((uint64_t)v96, v100 + *(int *)(v104 + 48), &qword_100951F18);
      sub_1000A1750(v102, v103, v93);
      swift_bridgeObjectRetain();
      sub_1000A1750(v102, v103, v93);
      swift_bridgeObjectRetain();
      sub_10008DB18((uint64_t)v96, &qword_100951F18);
      sub_1000A06C0(v102, v103, v93);
      swift_bridgeObjectRelease();
      sub_1000AEF2C(v100, (uint64_t)v133, &qword_100951ED8);
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_100951F30, &qword_100951ED8);
      uint64_t v105 = (uint64_t)v162;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v100, &qword_100951ED8);
      sub_10008DB18((uint64_t)v99, &qword_100951F18);
      sub_1000A06C0(v102, v103, v93);
      swift_bridgeObjectRelease();
LABEL_6:
      char v117 = v157 & 1;
      v118 = v163;
      sub_1000AEF2C(v105, (uint64_t)v163, &qword_100951F28);
      v119 = v165;
      uint64_t v121 = v159;
      uint64_t v120 = v160;
      uint64_t *v165 = v160;
      v119[1] = v121;
      *((unsigned char *)v119 + 16) = v117;
      v119[3] = v161;
      uint64_t v122 = sub_1000AFA94(&qword_100951F38);
      sub_1000AEF2C((uint64_t)v118, (uint64_t)v119 + *(int *)(v122 + 48), &qword_100951F28);
      sub_1000A1750(v120, v121, v117);
      swift_bridgeObjectRetain();
      sub_10008DB18(v105, &qword_100951F28);
      sub_10008DB18((uint64_t)v118, &qword_100951F28);
      sub_1000A06C0(v120, v121, v117);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002622A8@<X0>(uint64_t a1@<X8>)
{
  v11[0] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100951F48);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v5 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v22[7] = v19;
  v22[8] = v20;
  v23[0] = v21[0];
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)((char *)v21 + 9);
  v22[4] = v16;
  v22[5] = v17;
  v22[6] = v18;
  v22[0] = v12;
  v22[1] = v13;
  v22[2] = v14;
  v22[3] = v15;
  long long v6 = (void *)*((void *)&v12 + 1);
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v22);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6) {
    uint64_t v7 = v6;
  }
  v11[1] = v7;
  sub_1000AFA94(&qword_100952030);
  sub_1000AFA94(&qword_100952038);
  sub_1000A132C(&qword_100952040, &qword_100952030);
  uint64_t v8 = sub_1000A1370(&qword_100951F58);
  *(void *)&long long v12 = type metadata accessor for RuleMark();
  *((void *)&v12 + 1) = &type metadata for Color;
  *(void *)&long long v13 = &protocol witness table for RuleMark;
  *((void *)&v13 + 1) = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v12 = v8;
  *((void *)&v12 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_100264FEC(&qword_100952048, (void (*)(uint64_t))type metadata accessor for WorkoutChartDataElement);
  ForEach<>.init(_:content:)();
  return (*(uint64_t (**)(void, char *, uint64_t))(v2 + 32))(v11[0], v4, v1);
}

uint64_t sub_1002625E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100952050);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v23 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v21[1] = (char *)v21 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v7 - 8);
  v21[0] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RuleMark();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  __chkstk_darwin(v9);
  long long v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100951F58);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  __chkstk_darwin(v13);
  uint64_t v22 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = type metadata accessor for WorkoutChartDataElement(0);
  v33[0] = *(void *)(a1 + *(int *)(v16 + 24));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v33[0] = *(void *)(a1 + *(int *)(v16 + 28));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  RuleMark.init<A, B>(x:yStart:yEnd:)();
  v33[0] = static Color.teal.getter();
  long long v17 = v22;
  uint64_t v18 = v24;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v18);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v29 = v18;
  char v30 = &type metadata for Color;
  char v31 = &protocol witness table for RuleMark;
  uint64_t v32 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v26;
  ChartContent.lineStyle(_:)();
  sub_100265034((uint64_t)v33);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v19);
}

uint64_t sub_100262A4C(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v8 - 8);
  static AxisMarkPreset.inset.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(unsigned char *)(v9 + 32) = a3 & 1;
  sub_10026063C(a1, a2, a3 & 1);
  static AxisMarkPosition.automatic.getter();
  static AxisMarkValues.automatic.getter();
  sub_1000AFA94(&qword_100951FE8);
  sub_100264D58();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_100262BF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  LODWORD(v82) = a3;
  uint64_t v80 = a1;
  uint64_t v81 = a2;
  uint64_t v79 = a4;
  uint64_t v73 = (uint64_t *)sub_1000AFA94(&qword_100952018);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100952010);
  __chkstk_darwin(v5 - 8);
  uint64_t v74 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100951FE8);
  __chkstk_darwin(v7 - 8);
  uint64_t v77 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000AFA94(&qword_100951FB8);
  uint64_t v76 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_100952020);
  uint64_t v83 = *(void *)(v75 - 8);
  uint64_t v14 = __chkstk_darwin(v75);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = type metadata accessor for AxisGridLine();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v78 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v66 - v23;
  if (!AxisValue.index.getter())
  {
    uint64_t v86 = 0;
    long long v84 = 0u;
    long long v85 = 0u;
    uint64_t v70 = v24;
    AxisGridLine.init(centered:stroke:)();
    uint64_t v36 = static UnitPoint.bottomTrailing.getter();
    uint64_t v68 = v38;
    uint64_t v69 = v37;
    __chkstk_darwin(v36);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v65 = &protocol witness table for Text;
    uint64_t v63 = &v60;
    uint64_t v64 = &type metadata for Text;
    char v62 = sub_100264F9C;
    char v61 = 1;
    uint64_t v60 = 0;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    AxisMark.offset(x:y:)();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v13, v11);
    uint64_t v39 = v83;
    double v82 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    CGRect v40 = v18;
    uint64_t v41 = v75;
    v82(v18, v16, v75);
    uint64_t v67 = v20;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v43 = v78;
    v42(v78, v70, v19);
    uint64_t v81 = v19;
    uint64_t v71 = v18;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v44(v16, v40, v41);
    uint64_t v45 = v72;
    uint64_t v46 = v43;
    uint64_t v47 = v81;
    v42(v72, v46, v81);
    uint64_t v48 = v73;
    char v49 = &v45[*((int *)v73 + 12)];
    v44(v49, v16, v41);
    uint64_t v50 = v67;
    uint64_t v51 = (uint64_t)v74;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v74, v45, v47);
    v82((char *)(v51 + *((int *)v48 + 12)), v49, v41);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v83 + 8);
    v52(v16, v41);
    char v53 = *(void (**)(char *, uint64_t))(v50 + 8);
    v53(v78, v47);
    uint64_t v54 = v77;
    sub_1000AEF2C(v51, v77, &qword_100952010);
    sub_1000AFA94(&qword_100952028);
    swift_storeEnumTagMultiPayload();
    sub_10008DB18(v51, &qword_100952010);
    v52(v71, v41);
    v53(v70, v47);
    uint64_t v55 = sub_1000AFA94(&qword_100952000);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
    uint64_t v35 = v54;
    return sub_1000AEEC8(v35, v79, &qword_100951FE8);
  }
  uint64_t v74 = (char *)v11;
  uint64_t v78 = v16;
  uint64_t v25 = AxisValue.index.getter();
  uint64_t result = AxisValue.count.getter();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v25 == result - 1)
    {
      uint64_t v27 = static UnitPoint.trailing.getter();
      uint64_t v73 = &v66;
      __chkstk_darwin(v27);
      uint64_t v71 = v18;
      uint64_t v28 = v83;
      static AxisValueLabelCollisionResolution.automatic.getter();
      static AxisValueLabelOrientation.automatic.getter();
      uint64_t v65 = &protocol witness table for Text;
      uint64_t v63 = &v60;
      uint64_t v64 = &type metadata for Text;
      char v62 = sub_100264F90;
      char v61 = 1;
      uint64_t v60 = 0;
      AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
      sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
      uint64_t v29 = v78;
      char v30 = v74;
      AxisMark.offset(x:y:)();
      (*(void (**)(char *, char *))(v76 + 8))(v13, v30);
      char v31 = v71;
      uint64_t v32 = v75;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v71, v29, v75);
      uint64_t v33 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v77, v31, v32);
      sub_1000AFA94(&qword_100952028);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v32);
      uint64_t v34 = sub_1000AFA94(&qword_100952000);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
      uint64_t v35 = v33;
      return sub_1000AEEC8(v35, v79, &qword_100951FE8);
    }
    uint64_t v56 = sub_1000AFA94(&qword_100952000);
    id v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56);
    uint64_t v58 = v56;
    uint64_t v59 = v79;
    return v57(v59, 1, 1, v58);
  }
  return result;
}

uint64_t sub_100263598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v4 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v33[7] = v30;
  v33[8] = v31;
  v34[0] = v32[0];
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v32 + 9);
  v33[4] = v27;
  uint64_t v33[5] = v28;
  v33[6] = v29;
  v33[0] = v23;
  v33[1] = v24;
  v33[2] = v25;
  v33[3] = v26;
  uint64_t v5 = *((void *)&v30 + 1);
  unint64_t v6 = v31;
  sub_100264FA8(*((uint64_t *)&v30 + 1), v31);
  sub_100264974((uint64_t)v33);
  if (v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v6;
  sub_1000A06D0();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v3, &qword_10094C448);
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_1000A06C0(v7, v9, v11);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v22;
  *uint64_t v22 = v13;
  v21[1] = v15;
  *((unsigned char *)v21 + 16) = v17 & 1;
  v21[3] = v19;
  return result;
}

uint64_t sub_100263840@<X0>(uint64_t *a1@<X8>)
{
  long long v23 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v4 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v34[7] = v31;
  v34[8] = v32;
  v35[0] = v33[0];
  *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v33 + 9);
  v34[4] = v28;
  v34[5] = v29;
  v34[6] = v30;
  v34[0] = v24;
  v34[1] = v25;
  v34[2] = v26;
  _OWORD v34[3] = v27;
  uint64_t v5 = *((void *)&v32 + 1);
  uint64_t v7 = v32;
  unint64_t v6 = *(void *)&v33[0];
  sub_100264FA8(*((uint64_t *)&v31 + 1), v32);
  sub_100264974((uint64_t)v34);
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *(void *)&long long v24 = v5;
  *((void *)&v24 + 1) = v6;
  sub_1000A06D0();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v3, &qword_10094C448);
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_1000A06C0(v8, v10, v12);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = v23;
  *long long v23 = v14;
  v22[1] = v16;
  *((unsigned char *)v22 + 16) = v18 & 1;
  v22[3] = v20;
  return result;
}

uint64_t sub_100263AE8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  v16[1] = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v9 - 8);
  uint64_t v17 = sub_1000AFA94(&qword_100951F90);
  uint64_t v10 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  a3 &= 1u;
  uint64_t v13 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v29[8] = v27;
  v30[0] = v28[0];
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)v28 + 9);
  v29[4] = v23;
  v29[5] = v24;
  v29[6] = v25;
  v29[7] = v26;
  v29[0] = v19;
  v29[1] = v20;
  v29[2] = v21;
  v29[3] = v22;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v29);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(unsigned char *)(v14 + 32) = a3;
  sub_10026063C(a1, a2, a3);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_100951FA8);
  type metadata accessor for Date();
  sub_100264C10();
  AxisMarks.init<A>(preset:position:values:content:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v17);
}

uint64_t sub_100263E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v62) = a4;
  uint64_t v60 = a3;
  uint64_t v58 = a2;
  uint64_t v61 = a1;
  uint64_t v65 = a5;
  uint64_t v64 = sub_1000AFA94(&qword_100951FC8) - 8;
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v6 - 8);
  uint64_t v55 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v8 - 8);
  char v53 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100951FB8);
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_100951FD0);
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v13 = __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v66 = (char *)&v47 - v15;
  uint64_t v16 = type metadata accessor for AxisGridLine();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100951FD8);
  uint64_t v50 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  long long v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  long long v26 = (char *)&v47 - v25;
  uint64_t v74 = 0;
  long long v72 = 0u;
  long long v73 = 0u;
  AxisGridLine.init(centered:stroke:)();
  AxisMark.offset(x:y:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v49 = v21;
  long long v27 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  uint64_t v51 = v21 + 32;
  uint64_t v52 = v27;
  uint64_t v48 = v26;
  v27((uint64_t)v26, v24, v20);
  uint64_t v67 = v58;
  uint64_t v68 = v60;
  char v69 = v62 & 1;
  uint64_t v70 = v61;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  static Color.gray.getter();
  uint64_t v28 = Color.opacity(_:)();
  swift_release();
  uint64_t v71 = v28;
  sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
  long long v29 = v56;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v10);
  uint64_t v30 = v59;
  long long v31 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
  uint64_t v61 = v59 + 32;
  char v62 = v31;
  long long v32 = v66;
  uint64_t v33 = v57;
  v31((uint64_t)v66, v29, v57);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v47 = v24;
  uint64_t v35 = v26;
  uint64_t v36 = v50;
  v34(v24, v35, v50);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v38 = v32;
  uint64_t v39 = v33;
  v37(v29, v38, v33);
  CGRect v40 = v63;
  v34(v63, v24, v36);
  uint64_t v41 = v64;
  uint64_t v42 = &v40[*(int *)(v64 + 56)];
  v37(v42, v29, v39);
  uint64_t v43 = v65;
  v52(v65, v40, v36);
  v62(v43 + *(int *)(v41 + 56), v42, v39);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
  v44(v66, v39);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v49 + 8);
  v45(v48, v36);
  v44(v29, v39);
  return ((uint64_t (*)(char *, uint64_t))v45)(v47, v36);
}

unint64_t sub_10026450C@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v34 = StateObject.wrappedValue.getter();
  uint64_t v7 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v49[7] = v46;
  v49[8] = v47;
  v50[0] = v48[0];
  *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)v48 + 9);
  v49[4] = v43;
  v49[5] = v44;
  v49[6] = v45;
  v49[0] = v39;
  v49[1] = v40;
  v49[2] = v41;
  v49[3] = v42;
  uint64_t v8 = (void *)v40;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v49);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  unint64_t result = AxisValue.index.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < v9[2])
  {
    uint64_t v11 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, (unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * result, v35);
    swift_bridgeObjectRelease();
    char v12 = (void *)v34;
    uint64_t v13 = *(void **)(v34 + OBJC_IVAR___CHDivingDataCalculator_axisFormatter);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v15 = [v13 stringFromDate:isa];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
    *(void *)&long long v39 = v16;
    *((void *)&v39 + 1) = v18;
    sub_1000A06D0();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    uint64_t v24 = type metadata accessor for Font.Design();
    uint64_t v25 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v36, 1, 1, v24);
    static Font.system(size:weight:design:)();
    sub_10008DB18(v25, &qword_10094C448);
    uint64_t v26 = Text.font(_:)();
    uint64_t v28 = v27;
    char v30 = v29;
    uint64_t v32 = v31;
    swift_release();
    sub_1000A06C0(v19, v21, v23);
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v33 = v37;
    *uint64_t v37 = v26;
    v33[1] = v28;
    *((unsigned char *)v33 + 16) = v30 & 1;
    v33[3] = v32;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100264910@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
  *a1 = static Alignment.leading.getter();
  a1[1] = v6;
  uint64_t v7 = sub_1000AFA94(&qword_100951EB8);
  return sub_100261020(v3, v4, v5, (uint64_t *)((char *)a1 + *(int *)(v7 + 44)));
}

uint64_t sub_100264974(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v2 = *(void *)(a1 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100264A48(v3, v2);
  return a1;
}

uint64_t sub_100264A48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100264A8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002622A8(a1);
}

unint64_t sub_100264A98()
{
  unint64_t result = qword_100951F50;
  if (!qword_100951F50)
  {
    sub_1000A1370(&qword_100951F48);
    sub_1000A1370(&qword_100951F58);
    type metadata accessor for RuleMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951F50);
  }
  return result;
}

uint64_t sub_100264B84()
{
  return sub_100262A4C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100264B90(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100264BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100263AE8(*(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

uint64_t sub_100264C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100263E0C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

unint64_t sub_100264C10()
{
  unint64_t result = qword_100951FB0;
  if (!qword_100951FB0)
  {
    sub_1000A1370(&qword_100951FA8);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_100951FB8);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951FB0);
  }
  return result;
}

unint64_t sub_100264D38@<X0>(uint64_t *a1@<X8>)
{
  return sub_10026450C(*(void *)(v1 + 40), a1);
}

uint64_t sub_100264D4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100262BF0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

unint64_t sub_100264D58()
{
  unint64_t result = qword_100951FF0;
  if (!qword_100951FF0)
  {
    sub_1000A1370(&qword_100951FE8);
    sub_100264DCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951FF0);
  }
  return result;
}

unint64_t sub_100264DCC()
{
  unint64_t result = qword_100951FF8;
  if (!qword_100951FF8)
  {
    sub_1000A1370(&qword_100952000);
    sub_100264EA8();
    sub_1000A1370(&qword_100951FB8);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951FF8);
  }
  return result;
}

unint64_t sub_100264EA8()
{
  unint64_t result = qword_100952008;
  if (!qword_100952008)
  {
    sub_1000A1370(&qword_100952010);
    sub_1000A1370(&qword_100951FB8);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952008);
  }
  return result;
}

uint64_t sub_100264F90@<X0>(uint64_t *a1@<X8>)
{
  return sub_100263840(a1);
}

uint64_t sub_100264F9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100263598(a1);
}

uint64_t sub_100264FA8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100264FEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100265034(uint64_t a1)
{
  return a1;
}

uint64_t sub_100265060()
{
  return sub_1000A132C(&qword_100952060, &qword_100952068);
}

uint64_t sub_10026509C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (!a1 || !a2)
  {
    uint64_t v33 = self;
    id v34 = [v33 mainBundle];
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    id v40 = [v33 mainBundle];
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

    long long v43 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    if (a4) {
      sub_100525974(v37, v39, (uint64_t)v43, v45, 0, 0xE000000000000000, a3, a5);
    }
    else {
      sub_1000533BC(v37, v39, v43, v45, 0, 0xE000000000000000, a3, a5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = type metadata accessor for AttributedString();
    long long v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
    uint64_t v48 = v46;
    uint64_t v49 = a5;
    goto LABEL_15;
  }
  uint64_t v8 = self;
  id v9 = a1;
  id v10 = a2;
  id v11 = [v8 minuteUnit];
  char v12 = self;
  [v9 doubleValueForUnit:v11];
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v13];
  id v15 = [v12 stringWithNumber:v14 decimalPrecision:1 roundingMode:1];

  uint64_t v16 = v10;
  if (!v15)
  {
LABEL_12:

    uint64_t v50 = type metadata accessor for AttributedString();
    long long v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
    uint64_t v48 = v50;
    uint64_t v49 = a5;
    uint64_t v51 = 1;
    goto LABEL_16;
  }
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  [v16 doubleValueForUnit:v11];
  id v20 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v19];
  id v21 = [v12 stringWithNumber:v20 decimalPrecision:1 roundingMode:1];

  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v22 = v18;
  char v23 = v16;
  uint64_t v54 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  id v26 = [self mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  char v29 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  if (a4) {
    sub_100525974(v55, v22, (uint64_t)v54, v25, (uint64_t)v29, v31, a3, a5);
  }
  else {
    sub_1000533BC(v55, v22, v54, v25, v29, v31, a3, a5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v52 = type metadata accessor for AttributedString();
  long long v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  uint64_t v48 = v52;
  uint64_t v49 = a5;
LABEL_15:
  uint64_t v51 = 0;
LABEL_16:

  return v47(v49, v51, 1, v48);
}

uint64_t sub_100265548@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a1 || !a2)
  {
    uint64_t v33 = self;
    id v34 = [v33 mainBundle];
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    id v40 = [v33 mainBundle];
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

    long long v43 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    sub_1000533BC(v37, v39, v43, v45, 0, 0xE000000000000000, a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v8 = self;
  id v9 = a1;
  id v10 = a2;
  id v11 = [v8 countUnit];
  char v12 = self;
  uint64_t v55 = v9;
  [v9 doubleValueForUnit:v11];
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v13];
  id v15 = [v12 stringWithNumber:v14 decimalPrecision:1];

  uint64_t v16 = v10;
  if (v15)
  {
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    [v16 doubleValueForUnit:v11];
    id v20 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v19];
    id v21 = [v12 stringWithNumber:v20 decimalPrecision:1];

    if (v21)
    {
      uint64_t v22 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      id v25 = [self mainBundle];
      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

      id v28 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v18;
      uint64_t v30 = v16;
      uint64_t v32 = v31;

      sub_1000533BC(v53, v29, v22, v24, v28, v32, a3, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_7:
      uint64_t v46 = type metadata accessor for AttributedString();
      long long v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      uint64_t v48 = v46;
      uint64_t v49 = a4;
      uint64_t v50 = 0;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }

  uint64_t v51 = type metadata accessor for AttributedString();
  long long v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
  uint64_t v48 = v51;
  uint64_t v49 = a4;
  uint64_t v50 = 1;
LABEL_10:

  return v47(v49, v50, 1, v48);
}

id sub_10026597C(void *a1, void *a2, void *a3)
{
  if (!a1 || !a2) {
    return sub_1005253F0(11565, 0xE200000000000000, (void *)0x2D2D, 0xE200000000000000, 0, 0xE000000000000000, a3);
  }
  uint64_t v6 = self;
  id v30 = a2;
  id v7 = a1;
  id v8 = [v6 minuteUnit];
  id v9 = self;
  [v7 doubleValueForUnit:v8];
  id v11 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v10];
  id v12 = [v9 stringWithNumber:v11 decimalPrecision:1 roundingMode:1];

  if (!v12)
  {
LABEL_8:

    return 0;
  }
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  [v30 doubleValueForUnit:v8];
  id v16 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v15];
  id v17 = [v9 stringWithNumber:v16 decimalPrecision:1 roundingMode:1];

  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  id v21 = [self mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  id v27 = sub_1005253F0(v29, v14, v18, v20, v24, v26, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v27;
}

id sub_100265C24(void *a1, void *a2, void *a3, void *a4)
{
  if (!a1 || !a2) {
    return sub_1005253F0(11565, 0xE200000000000000, (void *)0x2D2D, 0xE200000000000000, 0, 0xE000000000000000, a4);
  }
  id v29 = a2;
  id v7 = a1;
  id result = [a3 unitManager];
  if (result)
  {
    id v9 = result;
    id v10 = [result userActiveEnergyBurnedUnit];

    id v11 = self;
    [v7 doubleValueForUnit:v10];
    id v13 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v12];
    id v14 = [v11 stringWithNumber:v13 decimalPrecision:1 roundingMode:1];

    if (!v14)
    {

      return 0;
    }
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    [v29 doubleValueForUnit:v10];
    id v18 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v17];
    id v19 = [v11 stringWithNumber:v18 decimalPrecision:1 roundingMode:1];

    if (!v19)
    {
      swift_bridgeObjectRelease();

      return 0;
    }
    uint64_t v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    id result = [a3 localizedShortActiveEnergyUnitString];
    if (result)
    {
      id v23 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A06D0();
      uint64_t v24 = StringProtocol.localizedUppercase.getter();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      id v27 = sub_1005253F0(v28, v16, v20, v22, v24, v26, a4);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100265EEC(void *a1, void *a2, void *a3)
{
  if (!a1 || !a2) {
    return sub_1005253F0(11565, 0xE200000000000000, (void *)0x2D2D, 0xE200000000000000, 0, 0xE000000000000000, a3);
  }
  uint64_t v6 = self;
  id v30 = a2;
  id v7 = a1;
  id v8 = [v6 countUnit];
  id v9 = self;
  [v7 doubleValueForUnit:v8];
  id v11 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v10];
  id v12 = [v9 stringWithNumber:v11 decimalPrecision:1];

  if (!v12)
  {
LABEL_8:

    return 0;
  }
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  [v30 doubleValueForUnit:v8];
  id v16 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v15];
  id v17 = [v9 stringWithNumber:v16 decimalPrecision:1];

  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  id v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  id v21 = [self mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  id v27 = sub_1005253F0(v29, v14, v18, v20, v24, v26, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_10026618C(void *a1)
{
  id v2 = [self countUnit];
  [a1 doubleValueForUnit:v2];
  double v4 = v3;

  char v5 = self;
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v4];
  id v7 = [v5 stringWithNumber:v6 decimalPrecision:1 roundingMode:4];

  if (!v7) {
    return 0;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v8;
}

id sub_100266284(void *a1, void *a2, void *a3)
{
  id v6 = [self meterUnit];
  [a1 doubleValueForUnit:v6];
  double v8 = v7;

  id result = [a2 unitManager];
  if (result)
  {
    double v10 = result;
    [result distanceInUserDistanceUnitForDistanceInMeters:1 distanceType:v8];

    v11.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v12 = [self stringWithNumber:v11.super.super.isa decimalPrecision:3];
    if (!v12)
    {

      return 0;
    }
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id result = [a2 localizedShortUnitStringForDistanceType:1];
    if (result)
    {
      id v17 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A06D0();
      uint64_t v18 = StringProtocol.localizedUppercase.getter();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      id v21 = sub_10052463C(v14, v16, v18, v20, a3);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t destroy for FitnessPlusCardFactory(id *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 6);

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(a1 + 1));

  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v2);
}

void **assignWithCopy for FitnessPlusCardFactory(void **a1, uint64_t a2)
{
  char v5 = (uint64_t *)(a2 + 48);
  double v4 = *(void **)a2;
  id v6 = (uint64_t *)(a1 + 1);
  double v7 = *a1;
  *a1 = *(void **)a2;
  double v8 = (uint64_t *)(a1 + 6);
  id v9 = v4;

  sub_10009EDF0(v6, (uint64_t *)(a2 + 8));
  sub_10009EDF0(v8, v5);
  return a1;
}

__n128 initializeWithTake for FitnessPlusCardFactory(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FitnessPlusCardFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FitnessPlusCardFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FitnessPlusCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessPlusCardFactory()
{
  return &type metadata for FitnessPlusCardFactory;
}

double sub_10026663C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1002666C8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000908B0(v2, v3, v5);
  id v6 = v4;
  return static Published.subscript.setter();
}

uint64_t sub_10026675C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002667E0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100266854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  return sub_1000CCD74(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10026685C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int v32 = a6;
  unsigned int v16 = a3;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t result = __chkstk_darwin(v20 - 8);
  id v23 = &v31[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v16 < 3 || a1 ^ 6 | a2)
  {
    *(void *)(a9 + 32) = 0;
    *(_OWORD *)a9 = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
  }
  else
  {
    char v24 = a4 & 1;
    sub_1000AEF2C(a5, (uint64_t)v33, &qword_10094CEF0);
    uint64_t v25 = v34;
    if (v34)
    {
      uint64_t v26 = v35;
      sub_10007E4EC(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      uint64_t v27 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 0, 1, v27);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
    }
    else
    {
      sub_1000058F4((uint64_t)v33);
      uint64_t v28 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 1, 1, v28);
    }
    uint64_t v29 = a7 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
    swift_beginAccess();
    sub_1000AEF2C(v29, (uint64_t)v19, (uint64_t *)&unk_100955650);
    *(void *)(a9 + 24) = type metadata accessor for CatalogTipCard();
    *(void *)(a9 + 32) = &off_1008C2CA0;
    id v30 = sub_1000B1710((uint64_t *)a9);
    swift_retain();
    return sub_1000CC2DC((uint64_t)v23, v24, v32 & 1, 1, (uint64_t)v19, a8, v30);
  }
  return result;
}

uint64_t sub_100266AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_1000CC57C(a1, a2, a3, a4 & 1, a5, a6, a7);
}

void sub_100266B24(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  if (a3 == 1)
  {
    sub_100521160(a1, a2, a4, a5 & 1, a6);
  }
  else if (a3 == 3 && a1 == 4 && !a2)
  {
    sub_100521708(a4, a5 & 1, (uint64_t *)a6);
  }
  else
  {
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
}

void sub_100266BB4(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  sub_100688178(a1, a2, a3, a4 & 1, a5, a6, *v7, a7);
}

uint64_t sub_100266BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_10026685C(a1, a2, a3, a4 & 1, a5, a6, *v7, v7[1], a7);
}

id sub_100266BCC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = type metadata accessor for AttributedString();
  uint64_t v57 = *(void *)(v50 - 8);
  uint64_t v4 = __chkstk_darwin(v50);
  id v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v8 = (char *)&v48 - v7;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  id v9 = (void *)UILabel.withFont(_:)();
  double v10 = self;
  id v51 = v10;
  id v11 = [v10 secondaryLabelColor];
  id v12 = (void *)UILabel.withTextColor(_:)();

  NSString v13 = String._bridgeToObjectiveC()();
  [v12 setText:v13];

  uint64_t v14 = (void *)UILabel.withFont(_:)();
  id v15 = [v10 secondaryLabelColor];
  id v52 = (id)UILabel.withTextColor(_:)();

  id v16 = [a1 fitnessUIFormattingManager];
  id v56 = self;
  id v17 = [v56 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v19 = a1;
  id v49 = a1;
  uint64_t v20 = v18;
  id v21 = [v17 localizedStringForKey:v18 value:0 table:0];
  uint64_t v48 = v2;
  id v22 = v21;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AttributedString.init(stringLiteral:)();

  unint64_t v23 = sub_1002681AC();
  uint64_t v24 = v57;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v53 = v57 + 16;
  unint64_t v54 = v23;
  uint64_t v55 = v25;
  uint64_t v26 = v50;
  v25(v6, v8, v50);
  uint64_t v27 = NSAttributedString.init(_:)();
  id v28 = v52;
  [v52 setAttributedText:v27];

  uint64_t v29 = *(void **)(v24 + 8);
  uint64_t v57 = v24 + 8;
  id v52 = v29;
  ((void (*)(char *, uint64_t))v29)(v8, v26);
  id v30 = (void *)UILabel.withFont(_:)();
  id v31 = [v51 secondaryLabelColor];
  int v32 = (void *)UILabel.withTextColor(_:)();

  id v33 = [v19 fitnessUIFormattingManager];
  id v34 = [v56 mainBundle];
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AttributedString.init(stringLiteral:)();

  v55(v6, v8, v26);
  uint64_t v37 = NSAttributedString.init(_:)();
  [v32 setAttributedText:v37];

  ((void (*)(char *, uint64_t))v52)(v8, v26);
  uint64_t v38 = v48;
  id v39 = [v51 secondaryLabelColor];
  id v40 = (void *)UILabel.withTextColor(_:)();

  NSString v41 = (void *)UILabel.withFont(_:)();
  id v42 = [v49 fitnessUIFormattingManager];
  id v43 = [v56 mainBundle];
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v43 localizedStringForKey:v44 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AttributedString.init(stringLiteral:)();

  v55(v6, v8, v26);
  uint64_t v46 = NSAttributedString.init(_:)();
  [v41 setAttributedText:v46];

  ((void (*)(char *, uint64_t))v52)(v8, v26);
  [*(id *)(v38 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:1];
  return sub_10026B10C();
}

void sub_10026726C(int a1, uint64_t a2, id a3)
{
  uint64_t v4 = v3;
  id v6 = [a3 fitnessUIFormattingManager];
  sub_100267940(0);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  [v7 setText:v11];
  swift_bridgeObjectRelease();

  DownhillRunsStats.duration.getter();
  if (round(v12) < 3600.0) {
    uint64_t v13 = 3;
  }
  else {
    uint64_t v13 = 2;
  }
  NSString v14 = [v6 stringWithDuration:v13];
  if (v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v15 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
    NSString v14 = String._bridgeToObjectiveC()();
  }
  else
  {
    id v15 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
  }
  [v15 setText:v14];
  swift_bridgeObjectRelease();

  id v16 = (void *)DownhillRunsStats.distance.getter();
  id v17 = sub_100267DE0(v16, a2, v6);

  [*(id *)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel) setAttributedText:v17];
  NSString v18 = (void *)DownhillRunsStats.elevationDescended.getter();
  id v19 = sub_100267FC8(v18, v6);

  [*(id *)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel) setAttributedText:v19];
  uint64_t v20 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView);
  id v21 = [self grayColor];
  [v20 setBackgroundColor:v21];
}

void sub_1002675D4(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = v5;
  if (a1)
  {
    id v11 = a1;
    id v12 = [a5 fitnessUIFormattingManager];
    sub_100267940(a4 & 1);
    uint64_t v13 = self;
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
    id v15 = [v13 localizedStringFromNumber:v14 numberStyle:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v16 = *(void **)(v6 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
    NSString v17 = String._bridgeToObjectiveC()();
    [v16 setText:v17];
    swift_bridgeObjectRelease();

    dispatch thunk of DownhillRun.workoutTime.getter();
    if (round(v18) < 3600.0) {
      uint64_t v19 = 3;
    }
    else {
      uint64_t v19 = 2;
    }
    NSString v20 = [v12 stringWithDuration:v19];
    if (v20)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v21 = *(void **)(v6 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
      NSString v20 = String._bridgeToObjectiveC()();
    }
    else
    {
      id v21 = *(void **)(v6 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
    }
    [v21 setText:v20];
    swift_bridgeObjectRelease();

    id v22 = (void *)dispatch thunk of DownhillRun.distance.getter();
    id v23 = sub_100267DE0(v22, a3, v12);

    [*(id *)(v6 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel) setAttributedText:v23];
    uint64_t v24 = (void *)DownhillRun.elevationDescended.getter();
    id v25 = sub_100267FC8(v24, v12);

    [*(id *)(v6 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel) setAttributedText:v25];
  }
  else
  {
    sub_100266BCC(a5);
  }
}

id sub_100267940(char a1)
{
  uint64_t v2 = v1;
  if (qword_10094A720 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)UILabel.withFont(_:)();
  id v5 = [self secondaryLabelColor];
  uint64_t v6 = (void *)UILabel.withTextColor(_:)();

  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setText:v7];

  if (qword_10094A728 != -1) {
    swift_once();
  }
  id v8 = (void *)UILabel.withFont(_:)();
  NSString v9 = self;
  id result = [v9 elapsedTimeColors];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v11 = result;
  id v12 = [result nonGradientTextColor];

  [v8 setTextColor:v12];
  NSString v13 = String._bridgeToObjectiveC()();
  [v8 setText:v13];

  id v14 = (void *)UILabel.withFont(_:)();
  id result = [v9 distanceColors];
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  id v15 = result;
  id v16 = [result nonGradientTextColor];

  [v14 setTextColor:v16];
  NSString v17 = String._bridgeToObjectiveC()();
  [v14 setText:v17];

  double v18 = (void *)UILabel.withFont(_:)();
  id v19 = [v9 elevationColors];
  id v20 = [v19 nonGradientTextColor];

  [v18 setTextColor:v20];
  NSString v21 = String._bridgeToObjectiveC()();
  [v18 setText:v21];

  id result = [*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:a1 & 1];
  if (a1)
  {
    id v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
    if (v22) {
      [v22 setActive:0];
    }
    id result = *(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
    if (result)
    {
      return [result setActive:1];
    }
  }
  return result;
}

id sub_100267D88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnDownhillRunTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnDownhillRunTableViewCell()
{
  return self;
}

id sub_100267DE0(void *a1, uint64_t a2, void *a3)
{
  if (!a1) {
    return 0;
  }
  id v4 = a1;
  uint64_t v5 = FIUIDistanceTypeForActivityType();
  uint64_t v20 = 1;
  id v6 = [self meterUnit];
  [v4 doubleValueForUnit:v6];
  double v8 = v7;

  id v9 = [a3 localizedNaturalScaleStringWithDistanceInMeters:v5 distanceType:0 unitStyle:&v20 usedUnit:v8];
  if (!v9)
  {

    return 0;
  }
  id v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id result = [a3 localizedShortUnitStringForDistanceUnit:v20];
  if (result)
  {
    id v15 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A06D0();
    uint64_t v16 = StringProtocol.localizedUppercase.getter();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    if (qword_10094A728 != -1) {
      swift_once();
    }
    id v19 = sub_10052463C(v11, v13, v16, v18, (void *)qword_1009978F8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v19;
  }
  __break(1u);
  return result;
}

id sub_100267FC8(void *a1, void *a2)
{
  if (!a1) {
    return 0;
  }
  id v4 = self;
  id v5 = a1;
  id v6 = [v4 meterUnit];
  [v5 doubleValueForUnit:v6];
  double v8 = v7;

  id v9 = [a2 localizedStringWithDistanceInMeters:5 distanceType:0 unitStyle:v8];
  if (!v9)
  {

    return 0;
  }
  id v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id result = [a2 unitManager];
  if (result)
  {
    id v15 = result;
    id v16 = [result userDistanceElevationUnit];

    id result = [a2 localizedShortUnitStringForDistanceUnit:v16];
    if (result)
    {
      uint64_t v17 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A06D0();
      uint64_t v18 = StringProtocol.localizedUppercase.getter();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      if (qword_10094A728 != -1) {
        swift_once();
      }
      id v21 = sub_10052463C(v11, v13, v18, v20, (void *)qword_1009978F8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1002681AC()
{
  unint64_t result = qword_10094D428;
  if (!qword_10094D428)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094D428);
  }
  return result;
}

id sub_10026838C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingNavigationController();
  return [super dealloc];
}

id *sub_100268534()
{
  sub_10019B9F8((uint64_t)(v0 + 4));
  swift_release();

  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutDetailDataStore__inWorkoutData;
  uint64_t v2 = sub_1000AFA94(&qword_10094D6C0);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutDetailDataStore__inWorkoutProperties;
  uint64_t v4 = sub_1000AFA94(&qword_10094D6B8);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_100268614()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

void (*sub_10026868C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_100268718;
}

void sub_100268718(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_100268780()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void *sub_1002687F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v87 = a1;
  uint64_t v80 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  double v82 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v103 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v99 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v75 - v9;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v101 = (char *)&v75 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v75 - v16;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v78 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v81 = (char *)&v75 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v75 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  int v32 = (char *)&v75 - v31;
  __chkstk_darwin(v30);
  uint64_t v76 = (char *)&v75 - v33;
  id v34 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v1 + 24);
  unint64_t v91 = v29;
  unint64_t v97 = v32;
  uint64_t v98 = v2;
  uint64_t v100 = v34;
  if (v34)
  {
    unint64_t v96 = sub_1006CB820();
    id v35 = [v34 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v36 = *(void (**)(void))(v19 + 32);
    ((void (*)(char *, char *, uint64_t))v36)(v17, v32, v18);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v37(v17, 0, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      id v39 = v76;
      v36();
      uint64_t v29 = v91;
      id v40 = v100;
      goto LABEL_8;
    }
    uint64_t v29 = v91;
    uint64_t v2 = v98;
  }
  else
  {
    unint64_t v96 = sub_100415450();
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v37(v17, 1, 1, v18);
  }
  id v38 = [*(id *)(v2 + 16) startDate];
  id v39 = v76;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18((uint64_t)v17, (uint64_t *)&unk_10095B890);
  id v40 = v100;
  if (!v100)
  {
    uint64_t v41 = (uint64_t)v101;
    v37(v101, 1, 1, v18);
    id v42 = v97;
    id v43 = v39;
LABEL_13:
    id v48 = [*(id *)(v98 + 16) endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10008DB18(v41, (uint64_t *)&unk_10095B890);
    id v49 = v102;
    goto LABEL_15;
  }
LABEL_8:
  id v44 = [v40 endDate];
  if (v44)
  {
    id v45 = v44;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = 0;
  }
  else
  {
    uint64_t v46 = 1;
  }
  id v43 = v39;
  v37(v13, v46, 1, v18);
  uint64_t v47 = (uint64_t)v13;
  uint64_t v41 = (uint64_t)v101;
  sub_1000CBFEC(v47, (uint64_t)v101);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v41, 1, v18) == 1)
  {
    id v42 = v97;
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v29, v41, v18);
  id v49 = v102;
  id v42 = v97;
LABEL_15:
  uint64_t v50 = v96;
  uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v94 = v19 + 16;
  v93(v26, v43, v18);
  if (static Date.< infix(_:_:)())
  {
    unint64_t v96 = v50;
    uint64_t v90 = v50[2];
    uint64_t v101 = (char *)(v86 + 16);
    uint64_t v51 = v19;
    id v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
    uint64_t v100 = (unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
    uint64_t v98 = v86 + 32;
    uint64_t v53 = (void (**)(char *, uint64_t))(v86 + 8);
    long long v85 = _swiftEmptyArrayStorage;
    uint64_t v89 = (void (**)(char *, char *, uint64_t))(v51 + 32);
    uint64_t v77 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration;
    unint64_t v83 = (v86 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v95 = (void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v75 = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v84 = v18;
    v88 = v26;
    uint64_t v92 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    do
    {
      v93(v42, v26, v18);
      DateInterval.init(start:duration:)();
      uint64_t v55 = v90;
      if (v90)
      {
        id v56 = (char *)v96
            + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
        uint64_t v57 = *(void *)(v86 + 72);
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        swift_bridgeObjectRetain();
        uint64_t v59 = v55;
        uint64_t v60 = v103;
        while (1)
        {
          v58(v60, v56, v6);
          uint64_t v61 = *v52;
          (*v52)(v60, 0, 1, v6);
          if ((*v100)(v60, 1, v6) == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v18 = v84;
            id v49 = v102;
            goto LABEL_18;
          }
          char v62 = v99;
          (*(void (**)(char *, char *, uint64_t))v98)(v99, v60, v6);
          char v63 = DateInterval.intersects(_:)();
          (*v53)(v62, v6);
          if (v63) {
            break;
          }
          v56 += v57;
          --v59;
          uint64_t v60 = v103;
          if (!v59)
          {
            uint64_t v18 = v84;
            id v49 = v102;
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v64 = v78;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v26 = v88;
        Date.timeIntervalSince(_:)();
        uint64_t v65 = v81;
        Date.addingTimeInterval(_:)();
        uint64_t v66 = *v95;
        uint64_t v18 = v84;
        (*v95)(v64, v84);
        uint64_t v67 = (uint64_t)v82;
        v93(v82, v65, v18);
        uint64_t v68 = v80;
        *(void *)(v67 + *(int *)(v80 + 20)) = 0;
        *(void *)(v67 + *(int *)(v68 + 24)) = 0;
        *(void *)(v67 + *(int *)(v68 + 28)) = 0;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v69 = (unint64_t)v85;
        }
        else {
          unint64_t v69 = sub_1001E7108(0, v85[2] + 1, 1, (unint64_t)v85);
        }
        unint64_t v71 = *(void *)(v69 + 16);
        unint64_t v70 = *(void *)(v69 + 24);
        if (v71 >= v70 >> 1) {
          unint64_t v69 = sub_1001E7108(v70 > 1, v71 + 1, 1, v69);
        }
        *(void *)(v69 + 16) = v71 + 1;
        unint64_t v72 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
        long long v85 = (void *)v69;
        sub_10026984C((uint64_t)v82, v69 + v72 + *(void *)(v79 + 72) * v71);
        v66(v81, v18);
        id v49 = v102;
      }
      else
      {
        uint64_t v61 = *v52;
        swift_bridgeObjectRetain();
        uint64_t v60 = v103;
LABEL_27:
        v61(v60, 1, 1, v6);
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v26 = v88;
      }
      Date.addingTimeInterval(_:)();
      id v42 = v97;
      unint64_t v54 = *v95;
      (*v95)(v26, v18);
      (*v53)(v49, v6);
      (*v89)(v26, v42, v18);
    }
    while ((static Date.< infix(_:_:)() & 1) != 0);
    swift_bridgeObjectRelease();
    id v43 = v76;
    long long v73 = v85;
    uint64_t v29 = v91;
    v54(v26, v18);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v54 = *(void (**)(char *, uint64_t))(v19 + 8);
    long long v73 = _swiftEmptyArrayStorage;
    v54(v26, v18);
  }
  v54(v29, v18);
  v54(v43, v18);
  return v73;
}

uint64_t sub_100269364()
{
  sub_100268534();

  return swift_deallocClassInstance();
}

uint64_t sub_1002693BC()
{
  return type metadata accessor for WorkoutDetailDataStore();
}

uint64_t type metadata accessor for WorkoutDetailDataStore()
{
  uint64_t result = qword_100952100;
  if (!qword_100952100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100269410()
{
  sub_100181968(319, &qword_10094D440, &qword_10094D448);
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_10094D450, (uint64_t *)&unk_10094D458);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void *sub_10026952C(void *a1, void *a2, void *a3, void *a4)
{
  id v36 = a3;
  uint64_t v37 = a4;
  id v34 = a1;
  id v35 = a2;
  uint64_t v33 = sub_1000AFA94(&qword_10094D6B8);
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094D6C0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10094D448);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  v4[5] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v18 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutDetailDataStore__inWorkoutData;
  uint64_t v19 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_1001A58D4((uint64_t)v17, (uint64_t)v15);
  Published.init(initialValue:)();
  sub_10008DB18((uint64_t)v17, &qword_10094D448);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v11, v8);
  uint64_t v20 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutDetailDataStore__inWorkoutProperties;
  uint64_t v38 = 0;
  sub_1000AFA94((uint64_t *)&unk_10094D458);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v20, v7, v33);
  uint64_t v22 = v34;
  uint64_t v21 = v35;
  v4[2] = v34;
  v4[3] = v21;
  uint64_t v24 = v36;
  uint64_t v23 = v37;
  v4[6] = v36;
  v4[8] = v23;
  id v25 = v21;
  id v26 = v24;
  id v27 = v23;
  id v28 = v22;
  id v29 = [v27 fitnessUIFormattingManager];
  type metadata accessor for WorkoutChartDataElementFormattingManager();
  uint64_t v30 = (void *)swift_allocObject();
  id v31 = sub_10009F6D8();
  v30[2] = v29;
  _OWORD v30[3] = v28;
  v30[4] = v21;
  v30[5] = v31;
  v4[7] = v30;
  return v4;
}

uint64_t sub_10026984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartDataElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SeymourBrowsingCoordinator()
{
  return &type metadata for SeymourBrowsingCoordinator;
}

void sub_1002698DC(char a1, void *a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v10 = 0;
    uint64_t v8 = swift_allocObject();
    sub_100269CEC((uint64_t)&v10, v8 + 16);
    sub_1000AFA94(&qword_100952260);
    Promise.init(synchronousOperation:)();
  }
  else
  {
    id v4 = a2;
    id v5 = [v4 popToRootViewControllerAnimated:a1 & 1];
    if (v5)
    {
      uint64_t v6 = v5;
      sub_100187B74();
      uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v7 = 0;
    }
    uint64_t v10 = v7;
    uint64_t v9 = swift_allocObject();
    sub_100269CEC((uint64_t)&v10, v9 + 16);
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_100952260);
    Promise.init(synchronousOperation:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100269A28()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10005DB5C;
  return AppCoordinator.onAppActive()();
}

uint64_t sub_100269ABC(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDidDisconnect(), (void (*)(uint64_t))&AppCoordinator.reportDidDisconnect());
}

uint64_t sub_100269AE8(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDefaultLaunch(), (void (*)(uint64_t))&AppCoordinator.reportDefaultLaunch());
}

uint64_t sub_100269B14(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportOpenURLContexts(), (void (*)(uint64_t))&AppCoordinator.reportOpenURLContexts());
}

uint64_t sub_100269B40(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportContinueUserActivity(), (void (*)(uint64_t))&AppCoordinator.reportContinueUserActivity());
}

uint64_t sub_100269B6C(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDidBecomeActive(), (void (*)(uint64_t))&AppCoordinator.reportDidBecomeActive());
}

uint64_t sub_100269B98(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDidEnterBackground(), (void (*)(uint64_t))&AppCoordinator.reportDidEnterBackground());
}

uint64_t sub_100269BC4(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDidSelectTab(), (void (*)(uint64_t))&AppCoordinator.reportDidSelectTab());
}

uint64_t sub_100269BF0(uint64_t a1, uint64_t a2)
{
  return sub_100269C1C(a1, a2, (void (*)(uint64_t))&MetricSceneLifecycleTracker.reportDidDeselectTab(), (void (*)(uint64_t))&AppCoordinator.reportDidDeselectTab());
}

uint64_t sub_100269C1C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v5 = *(void *)(v4 + 8);
  if (v5 < 0)
  {
    uint64_t v10 = *(void **)v4;
    uint64_t v11 = swift_retain();
    a4(v11);
    return sub_1000656A0(v10, v5);
  }
  else
  {
    uint64_t v7 = swift_retain();
    a3(v7);
    return swift_release();
  }
}

uint64_t sub_100269CB4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100269CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100952260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100269D54@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t _s10FitnessApp26SeymourBrowsingCoordinatorV5StyleOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  sub_1000CEE44(*(void **)a2, v4);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  sub_1000656A0(v5, v6);
  return a1;
}

uint64_t assignWithTake for SeymourBrowsingCoordinator.Style(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1000656A0(v3, v4);
  return a1;
}

uint64_t _s10FitnessApp26SeymourBrowsingCoordinatorV5StyleOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 50) >> 13) | (2
                                                           * ((*(void *)(a1 + 8) >> 50) & 0x1C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s10FitnessApp26SeymourBrowsingCoordinatorV5StyleOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)uint64_t result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_100269EDC(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_100269EE8(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

void *sub_100269EF8(void *result, uint64_t a2)
{
  uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for SeymourBrowsingCoordinator.Style()
{
  return &type metadata for SeymourBrowsingCoordinator.Style;
}

uint64_t sub_100269F28@<X0>(void *a1@<X8>)
{
  return sub_100269D54(a1);
}

uint64_t sub_100269F40(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v3 + 24);
  if (!v9) {
    goto LABEL_3;
  }
  double v10 = *(double *)(v3 + 32);
  double v11 = a3 - v10;
  if (a3 - v10 < 0.0) {
    goto LABEL_3;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
  {
    if (v11 <= 0.0)
    {
LABEL_3:
      uint64_t v12 = 0;
LABEL_4:
      *(void *)(v5 + 16) = a1;
      *(void *)(v5 + 24) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(double *)(v5 + 32) = a3;
      return sub_10005E5F8((uint64_t)v12);
    }
  }
  else if (v11 <= 0.0 || (COERCE_UNSIGNED_INT64(a3 - v10) & 0xFFFFFFFFFFFFFLL) != 0)
  {
    goto LABEL_3;
  }
  uint64_t v16 = (void *)(v3 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v3 + 40);
  uint64_t v27 = *(void *)(v5 + 40);
  *(void *)(v5 + 40) = 0x8000000000000000;
  unint64_t v20 = sub_1000DA1C0(v14, v9);
  uint64_t v21 = *(void *)(v18 + 16);
  BOOL v22 = (v19 & 1) == 0;
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_22;
  }
  char v4 = v19;
  if (*(void *)(v18 + 24) >= v23)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_18;
    }
LABEL_22:
    sub_1004F288C();
    uint64_t v18 = v27;
    goto LABEL_18;
  }
  sub_1004E9290(v23, isUniquelyReferenced_nonNull_native);
  uint64_t v18 = v27;
  unint64_t v24 = sub_1000DA1C0(v14, v9);
  if ((v4 & 1) == (v25 & 1))
  {
    unint64_t v20 = v24;
LABEL_18:
    *uint64_t v16 = v18;
    swift_bridgeObjectRelease();
    id v26 = (void *)*v16;
    swift_bridgeObjectRetain();
    if ((v4 & 1) == 0)
    {
      sub_1004F1828(v20, v14, v9, v26, 0.0);
      swift_bridgeObjectRetain();
    }
    *(double *)(v26[7] + 8 * v20) = v11 + *(double *)(v26[7] + 8 * v20);
    swift_endAccess();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_10017DF20;
    goto LABEL_4;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_10026A164()
{
  uint64_t v0 = type metadata accessor for ConfigurationType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetricsPublisher.elapsedTimeMetricsPublisher.getter();
  ElapsedTimeMetricsPublisher.elapsedTime.getter();
  double v5 = v4;
  swift_release();
  sub_100269F40(0, 0, v5);
  MetricsPublisher.workoutStatePublisher.getter();
  uint64_t v6 = (void *)WorkoutStatePublisher.activityType.getter();
  id result = (id)swift_release();
  if (v6)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    [v6 effectiveTypeIdentifier];
    HKWorkoutActivityType.shortenedAnalyticsKey.getter();
    MetricsPublisher.workoutConfigurationType.getter();
    ConfigurationType.analyticsKey.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    [v6 isIndoor];
    [v6 swimmingLocationType];
    id result = (id)_HKWorkoutSwimmingLocationTypeName();
    if (result)
    {
      uint64_t v8 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      static WKAnalyticsEvent.metricPlatters(_:activityType:configurationType:duration:isIndoor:swimmingLocationType:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10026A388()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_10026A3C8()
{
  return &protocol witness table for UInt;
}

id sub_10026A3D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView];
  id v3 = [v2 bottomAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 bottomAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5];
  uint64_t v7 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard];
  uint64_t v122 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard] = v6;

  id v8 = [v2 bottomAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 bottomAnchor];

  id v11 = [v8 constraintEqualToAnchor:v10 constant:-8.0];
  uint64_t v12 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow] = v11;

  uint64_t v13 = v2;
  id v119 = v2;
  id v14 = [v2 topAnchor];
  uint64_t v15 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
  id v16 = [v15 bottomAnchor];
  id v17 = [v14 constraintEqualToAnchor:v16 constant:4.0];

  uint64_t v18 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard];
  uint64_t v121 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard] = v17;

  id v19 = [v13 topAnchor];
  id v20 = [v15 bottomAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  BOOL v22 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader] = v21;

  uint64_t v23 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
  id v24 = [v23 topAnchor];
  id v25 = [v0 contentView];
  id v26 = [v25 topAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26 constant:4.0];
  id v28 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow];
  uint64_t v120 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow] = v27;

  id v29 = [v23 topAnchor];
  id v30 = [v0 contentView];
  id v31 = [v30 topAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31 constant:8.0];
  uint64_t v33 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow] = v32;

  id v34 = [v23 widthAnchor];
  id v35 = [v34 constraintEqualToConstant:22.0];

  uint64_t v118 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard;
  id v36 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard] = v35;

  id v37 = [v15 widthAnchor];
  id v38 = [v23 widthAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  id v40 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom] = v39;

  uint64_t v41 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
  id v42 = [v41 widthAnchor];
  id v43 = [v15 widthAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  id v45 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard];
  uint64_t v117 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard] = v44;

  id v46 = [v41 widthAnchor];
  id v47 = [v15 widthAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-40.0];

  id v49 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet] = v48;

  id v114 = *(id *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
  id v50 = [v114 widthAnchor];
  id v51 = [v41 widthAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  uint64_t v53 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard];
  uint64_t v116 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard] = v52;

  id v54 = [v114 widthAnchor];
  id v55 = [v41 widthAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55 constant:20.0];

  uint64_t v57 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet] = v56;

  id v115 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1007545A0;
  id v59 = [v23 leadingAnchor];
  id v60 = [v0 contentView];
  id v61 = [v60 leadingAnchor];

  id v62 = [v59 constraintEqualToAnchor:v61 constant:16.0];
  *(void *)(v58 + 32) = v62;
  id v63 = [v23 lastBaselineAnchor];
  id v64 = [v15 lastBaselineAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  *(void *)(v58 + 40) = v65;
  id v66 = [v23 heightAnchor];
  id v67 = [v15 heightAnchor];
  id v68 = [v66 constraintGreaterThanOrEqualToAnchor:v67];

  *(void *)(v58 + 48) = v68;
  id v69 = [v23 heightAnchor];
  id v70 = [v41 heightAnchor];
  id v71 = [v69 constraintGreaterThanOrEqualToAnchor:v70];

  *(void *)(v58 + 56) = v71;
  id v72 = [v23 heightAnchor];
  id v73 = [v114 heightAnchor];
  id v74 = [v72 constraintGreaterThanOrEqualToAnchor:v73];

  *(void *)(v58 + 64) = v74;
  id v75 = [v15 leadingAnchor];
  id v76 = [v23 trailingAnchor];
  id v77 = [v75 constraintEqualToAnchor:v76 constant:8.0];

  *(void *)(v58 + 72) = v77;
  id v78 = [v15 lastBaselineAnchor];
  id v79 = [v41 lastBaselineAnchor];
  id v80 = [v78 constraintEqualToAnchor:v79];

  *(void *)(v58 + 80) = v80;
  id v81 = [v41 leadingAnchor];
  id v82 = [v15 trailingAnchor];
  id v83 = [v81 constraintEqualToAnchor:v82 constant:8.0];

  *(void *)(v58 + 88) = v83;
  id v84 = [v41 lastBaselineAnchor];
  id v85 = [v114 lastBaselineAnchor];
  id v86 = [v84 constraintEqualToAnchor:v85];

  *(void *)(v58 + 96) = v86;
  id v87 = [v114 leadingAnchor];
  id v88 = [v41 trailingAnchor];
  id v89 = [v87 constraintEqualToAnchor:v88 constant:8.0];

  *(void *)(v58 + 104) = v89;
  id v90 = [v114 trailingAnchor];
  id v91 = [v0 contentView];
  id v92 = [v91 trailingAnchor];

  id v93 = [v90 constraintEqualToAnchor:v92 constant:-16.0];
  *(void *)(v58 + 112) = v93;
  id v94 = [v119 leadingAnchor];
  id v95 = [v0 contentView];
  id v96 = [v95 leadingAnchor];

  id v97 = [v94 constraintEqualToAnchor:v96 constant:16.0];
  *(void *)(v58 + 120) = v97;
  id v98 = [v119 trailingAnchor];
  id v99 = [v0 contentView];
  id v100 = [v99 trailingAnchor];

  id v101 = [v98 constraintEqualToAnchor:v100 constant:-16.0];
  *(void *)(v58 + 128) = v101;
  id v102 = [v119 heightAnchor];
  id v103 = [self mainScreen];
  [v103 scale];
  double v105 = v104;

  id v106 = [v102 constraintEqualToConstant:1.0 / v105];
  *(void *)(v58 + 136) = v106;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v115 activateConstraints:isa];

  uint64_t v108 = *(void **)&v1[v118];
  if (v108) {
    [v108 setActive:1];
  }
  char v109 = *(void **)&v1[v117];
  if (v109) {
    [v109 setActive:1];
  }
  char v110 = *(void **)&v1[v116];
  if (v110) {
    [v110 setActive:1];
  }
  uint64_t v111 = *(void **)&v1[v121];
  if (v111) {
    [v111 setActive:1];
  }
  uint64_t v112 = *(void **)&v1[v122];
  if (v112) {
    [v112 setActive:1];
  }
  id result = *(id *)&v1[v120];
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

id sub_10026B10C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow);
  if (v1) {
    [v1 setActive:0];
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow);
  if (v2) {
    [v2 setActive:1];
  }
  id v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
  [v3 setNumberOfLines:2];
  [v3 setLineBreakMode:4];
  id v4 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
  [v4 setNumberOfLines:2];
  [v4 setLineBreakMode:4];
  id v5 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
  [v5 setNumberOfLines:2];
  [v5 setLineBreakMode:4];
  id v6 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
  [v6 setNumberOfLines:2];
  [v6 setLineBreakMode:4];
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard);
  if (v7) {
    [v7 setActive:0];
  }
  id result = *(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader);
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

id sub_10026B284()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard);
  if (v1) {
    [v1 setActive:0];
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet);
  if (v2) {
    [v2 setActive:1];
  }
  id v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard);
  if (v3) {
    [v3 setActive:0];
  }
  id result = *(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet);
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

id sub_10026B32C()
{
  [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel) setNumberOfLines:1];
  [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel) setNumberOfLines:1];
  [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel) setNumberOfLines:1];
  [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel) setNumberOfLines:1];
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard);
  if (v1) {
    [v1 setActive:1];
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard);
  if (v2) {
    [v2 setActive:1];
  }
  id v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard);
  if (v3) {
    [v3 setActive:1];
  }
  id v4 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard);
  if (v4) {
    [v4 setActive:1];
  }
  id v5 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
  if (v5) {
    [v5 setActive:1];
  }
  id v6 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow);
  if (v6) {
    [v6 setActive:1];
  }
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
  if (v7) {
    [v7 setActive:0];
  }
  id v8 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader);
  if (v8) {
    [v8 setActive:0];
  }
  id v9 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow);
  if (v9) {
    [v9 setActive:0];
  }
  id v10 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom);
  if (v10) {
    [v10 setActive:0];
  }
  id v11 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet);
  if (v11) {
    [v11 setActive:0];
  }
  id result = *(id *)(v0 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet);
  if (result)
  {
    return [result setActive:0];
  }
  return result;
}

char *sub_10026B5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel;
  id v7 = objc_allocWithZone((Class)UILabel);
  id v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  uint64_t v10 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v10] = v11;
  uint64_t v12 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel;
  id v13 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v12] = v13;
  uint64_t v14 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v14] = v15;
  uint64_t v16 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView;
  id v17 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v16] = v17;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard] = 0;
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet] = 0;

  if (a3)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  v33.receiver = v8;
  v33.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v18];

  id v20 = (char *)v19;
  id v21 = [v20 contentView];
  [v21 addSubview:*(void *)&v20[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel]];

  id v22 = [v20 contentView];
  [v22 addSubview:*(void *)&v20[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel]];

  id v23 = [v20 contentView];
  [v23 addSubview:*(void *)&v20[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel]];

  id v24 = [v20 contentView];
  [v24 addSubview:*(void *)&v20[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel]];

  uint64_t v25 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView;
  id v26 = *(void **)&v20[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView];
  id v27 = self;
  id v28 = v26;
  id v29 = [v27 separatorColor];
  [v28 setBackgroundColor:v29];

  id v30 = *(void **)&v20[v25];
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v31 = [v20 contentView];
  [v31 addSubview:v30];

  sub_10026A3D4();
  return v20;
}

id sub_10026BA98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnTableViewCell()
{
  return self;
}

void sub_10026BC2C()
{
  uint64_t v1 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel;
  id v2 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel;
  id v4 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel;
  id v6 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v5] = v6;
  uint64_t v7 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel;
  id v8 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v7] = v8;
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView;
  id v10 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v9] = v10;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorStandard] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewTopAnchorHeader] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorStandardRow] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_topAnchorHeaderRow] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorStandard] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeWidthAnchorSwimSet] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorStandard] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourWidthAnchorSwimSet] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10026BF58()
{
  uint64_t v1 = v0;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  id v2 = (void *)UILabel.withFont(_:)();
  uint64_t v3 = self;
  id v4 = [v3 secondaryLabelColor];
  uint64_t v5 = (void *)UILabel.withTextColor(_:)();

  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setText:v6];

  uint64_t v7 = (void *)UILabel.withFont(_:)();
  id v8 = [v3 secondaryLabelColor];
  uint64_t v9 = (void *)UILabel.withTextColor(_:)();

  id v10 = self;
  id v11 = [v10 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  [v9 setText:v14];

  swift_bridgeObjectRelease();
  id v15 = (void *)UILabel.withFont(_:)();
  id v16 = [v3 secondaryLabelColor];
  id v17 = (void *)UILabel.withTextColor(_:)();

  id v18 = [v10 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v21 = String._bridgeToObjectiveC()();
  [v17 setText:v21];

  swift_bridgeObjectRelease();
  id v22 = (void *)UILabel.withFont(_:)();
  id v23 = [v3 secondaryLabelColor];
  id v24 = (void *)UILabel.withTextColor(_:)();

  id v25 = [v10 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  [v24 setText:v28];

  swift_bridgeObjectRelease();
  [*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:1];

  return sub_10026B10C();
}

void sub_10026C3D0(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_10026B284();
  if (a1)
  {
    id v9 = a1;
    sub_10026C878(a3 & 1);
    id v10 = self;
    id v11 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
    id v12 = [v10 localizedStringFromNumber:v11 numberStyle:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v13 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setText:v14];
    swift_bridgeObjectRelease();

    id v15 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
    NSString v16 = [v9 formattedDominantStrokeStyle];
    if (v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v16 = String._bridgeToObjectiveC()();
    }
    [v15 setText:v16];
    swift_bridgeObjectRelease();

    id v17 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
    NSString v18 = [v9 formattedDistanceValueWithFormattingManager:a4];
    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v18 = String._bridgeToObjectiveC()();
    }
    [v17 setText:v18];
    swift_bridgeObjectRelease();

    id v19 = [v9 formattedPaceUsingFormatType:100 formattingManager:a4];
    if (v19)
    {
      id v20 = v19;
      id v34 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      id v34 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    id v23 = [v9 formattedStrokeCountUsingFormatType:100 formattingManager:a4];
    if (v23)
    {
      id v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    id v28 = [self mainBundle];
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_10074E640;
    *(void *)(v31 + 56) = &type metadata for String;
    unint64_t v32 = sub_1000AA64C();
    *(void *)(v31 + 32) = v34;
    *(void *)(v31 + 40) = v22;
    *(void *)(v31 + 96) = &type metadata for String;
    *(void *)(v31 + 104) = v32;
    *(void *)(v31 + 64) = v32;
    *(void *)(v31 + 72) = v25;
    *(void *)(v31 + 80) = v27;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    objc_super v33 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
    id v35 = String._bridgeToObjectiveC()();
    [v33 setText:v35];

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10026BF58();
  }
}

id sub_10026C878(char a1)
{
  uint64_t v2 = v1;
  if (qword_10094A720 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)UILabel.withFont(_:)();
  uint64_t v5 = self;
  id v6 = [v5 secondaryLabelColor];
  uint64_t v7 = (void *)UILabel.withTextColor(_:)();

  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setText:v8];

  if (qword_10094A728 != -1) {
    swift_once();
  }
  id v9 = (void *)UILabel.withFont(_:)();
  id v10 = [v5 whiteColor];
  id v11 = (void *)UILabel.withTextColor(_:)();

  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setText:v12];

  id v13 = (void *)UILabel.withFont(_:)();
  NSString v14 = self;
  id result = [v14 distanceColors];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  NSString v16 = result;
  id v17 = [result nonGradientTextColor];

  [v13 setTextColor:v17];
  NSString v18 = String._bridgeToObjectiveC()();
  [v13 setText:v18];

  id v19 = (void *)UILabel.withFont(_:)();
  id result = [v14 paceColors];
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  id v20 = result;
  id v21 = [result nonGradientTextColor];

  [v19 setTextColor:v21];
  NSString v22 = String._bridgeToObjectiveC()();
  [v19 setText:v22];

  id result = [*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:a1 & 1];
  if (a1)
  {
    id v23 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
    if (v23) {
      [v23 setActive:0];
    }
    id result = *(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
    if (result)
    {
      return [result setActive:1];
    }
  }
  return result;
}

id sub_10026CCA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnSwimmingSetTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnSwimmingSetTableViewCell()
{
  return self;
}

uint64_t sub_10026CD00@<X0>(uint64_t *a1@<X8>)
{
  sub_10007E2D8(0, (unint64_t *)&unk_100963420);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void *sub_10026CD50(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_100952468);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    id v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    id v12 = *(id *)v11;
    char v13 = v11[8];
    sub_1001AEDAC(*(id *)v11, v13);
    *(void *)id v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    NSString v16 = (void *)((char *)a1 + v14);
    id v17 = (void *)((char *)a2 + v14);
    uint64_t v19 = *v17;
    NSString v18 = (void *)v17[1];
    *NSString v16 = v19;
    v16[1] = v18;
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v20 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    id v21 = v18;
  }
  return a1;
}

void sub_10026CEC4(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_100952468);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1001AEDC8(*(id *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  int v5 = *(void **)(a1 + *(int *)(a2 + 24) + 8);
}

void *sub_10026CF7C(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_100952468);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Calendar();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  id v10 = *(id *)v9;
  char v11 = v9[8];
  sub_1001AEDAC(*(id *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v17 = *v15;
  NSString v16 = (void *)v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  id v19 = v16;
  return a1;
}

void *sub_10026D0A0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100952468);
    sub_1000AFA94(&qword_100952468);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  id v10 = *(id *)v9;
  char v11 = v9[8];
  sub_1001AEDAC(*(id *)v9, v11);
  uint64_t v12 = *(void **)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1001AEDC8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  NSString v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  uint64_t v17 = (void *)v16[1];
  uint64_t v18 = (void *)v15[1];
  v15[1] = v17;
  id v19 = v17;

  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

char *sub_10026D200(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100952468);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  id v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)id v10 = *(void *)v11;
  v10[8] = v11[8];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_10026D30C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100952468);
    uint64_t v6 = sub_1000AFA94(&qword_100952468);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Calendar();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  id v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void **)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1001AEDC8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  NSString v16 = &a2[v14];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  id v19 = (void *)*((void *)v15 + 1);
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;

  uint64_t v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_10026D450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026D464);
}

uint64_t sub_10026D464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100952470);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10026D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026D540);
}

uint64_t sub_10026D540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_100952470);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AdvancedChangeGoalView()
{
  uint64_t result = qword_1009524D0;
  if (!qword_1009524D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10026D650()
{
  sub_10026D708();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10026D708()
{
  if (!qword_1009524E0)
  {
    type metadata accessor for Calendar();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009524E0);
    }
  }
}

uint64_t sub_10026D760()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026D77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100952520);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100952528);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100952530);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  uint64_t v13 = sub_1000AFA94(&qword_100952538);
  sub_10026DA14(v2, (uint64_t)&v6[*(int *)(v13 + 44)]);
  unsigned __int8 v14 = static Edge.Set.leading.getter();
  unsigned __int8 v15 = static Edge.Set.trailing.getter();
  char v16 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v14) {
    char v16 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v15) {
    char v16 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_100952520);
  uint64_t v25 = &v9[*(int *)(v7 + 36)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_10008DB18((uint64_t)v6, &qword_100952520);
  char v26 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v12, &qword_100952528);
  id v35 = &v12[*(int *)(v10 + 36)];
  *id v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10008DB18((uint64_t)v9, &qword_100952528);
  return sub_1000AEEC8((uint64_t)v12, a1, &qword_100952530);
}

uint64_t sub_10026DA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = (int *)type metadata accessor for AdvancedChangeGoalView();
  uint64_t v70 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v71 = v4;
  uint64_t KeyPath = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_100952540);
  uint64_t v81 = *(void *)(v76 - 8);
  uint64_t v5 = __chkstk_darwin(v76);
  id v80 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v83 = (char *)&v68 - v7;
  uint64_t v82 = type metadata accessor for Calendar();
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityDailyGoalChartView();
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100952548);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v68 - v19;
  sub_10039EC38(*(void *)(a1 + v3[8]));
  uint64_t v78 = v21;
  sub_1004E77FC((uint64_t)v9);
  uint64_t v22 = a1 + v3[5];
  id v23 = *(id *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_1001AEDAC(*(id *)v22, v24);
  id v77 = sub_1004E7830(v23, v24);
  sub_1001AEDC8(v23, v24);
  id v73 = v3;
  uint64_t v74 = a1;
  uint64_t v25 = a1 + v3[6];
  char v26 = *(void **)(v25 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v27 = v26;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  unint64_t v28 = v84;
  uint64_t v29 = v79;
  *(void *)uint64_t v13 = v78;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v13[v11[7]], v9, v82);
  *(void *)&v13[v11[8]] = v77;
  *(void *)&v13[v11[9]] = v28;
  LOBYTE(v11) = static Edge.Set.all.getter();
  sub_10026E440((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivityDailyGoalChartView);
  uint64_t v30 = &v18[*(int *)(v15 + 44)];
  *uint64_t v30 = (char)v11;
  *(_OWORD *)(v30 + 8) = xmmword_100758AD0;
  *(_OWORD *)(v30 + 24) = xmmword_100758AE0;
  v30[40] = 0;
  sub_10026E3E4((uint64_t)v13);
  uint64_t v31 = (uint64_t)v20;
  sub_1000AEEC8((uint64_t)v18, (uint64_t)v20, &qword_100952548);
  uint64_t v32 = *(void **)(v25 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v33 = v32;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v84 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v34 < 0)
    {
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  unint64_t v84 = 0;
  uint64_t v85 = v34;
  swift_getKeyPath();
  uint64_t v35 = v74;
  uint64_t v36 = KeyPath;
  sub_10026E440(v74, KeyPath, (uint64_t (*)(void))type metadata accessor for AdvancedChangeGoalView);
  unint64_t v37 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  uint64_t v38 = swift_allocObject();
  sub_10026E5E0(v36, v38 + v37);
  sub_1000AFA94(&qword_10094E360);
  type metadata accessor for ScheduleDayRowView();
  sub_1001C5704();
  sub_10026E78C(&qword_100952550, (void (*)(uint64_t))type metadata accessor for ScheduleDayRowView);
  ForEach<>.init(_:id:content:)();
  if (*(unsigned char *)(v35 + v73[9]) == 1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10094C828);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v40 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v41 = String._bridgeToObjectiveC()();
    NSString v42 = String._bridgeToObjectiveC()();
    id v43 = [v40 localizedStringForKey:v41 value:0 table:v42];

    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v45;

    unint64_t v84 = v44;
    uint64_t v85 = v46;
    sub_1000A06D0();
    uint64_t v82 = Text.init<A>(_:)();
    uint64_t v78 = v48;
    uint64_t v79 = v47;
    id v77 = (id)(v49 & 1);
    LOBYTE(v46) = static Edge.Set.all.getter();
    uint64_t v50 = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v74 = static Font.footnote.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = v46;
    uint64_t v52 = (v50 << 32) | 1;
    LODWORD(v73) = 256;
  }
  else
  {
    uint64_t v82 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    id v77 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t KeyPath = 0;
    uint64_t v74 = 0;
    LODWORD(v73) = 0;
  }
  uint64_t v68 = v31;
  id v69 = v18;
  uint64_t v53 = v18;
  sub_1000AEF2C(v31, (uint64_t)v18, &qword_100952548);
  id v54 = v80;
  id v55 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  uint64_t v56 = v76;
  v55(v80, v83, v76);
  uint64_t v57 = (uint64_t)v53;
  uint64_t v58 = v75;
  sub_1000AEF2C(v57, v75, &qword_100952548);
  uint64_t v59 = sub_1000AFA94(&qword_100952558);
  v55((char *)(v58 + *(int *)(v59 + 48)), v54, v56);
  uint64_t v60 = v58 + *(int *)(v59 + 64);
  uint64_t v61 = v82;
  uint64_t v63 = v78;
  uint64_t v62 = v79;
  *(void *)uint64_t v60 = v82;
  *(void *)(v60 + 8) = v62;
  char v64 = (char)v77;
  *(void *)(v60 + 16) = v77;
  *(void *)(v60 + 24) = v63;
  *(void *)(v60 + 32) = v51;
  *(_OWORD *)(v60 + 40) = 0u;
  *(_OWORD *)(v60 + 56) = 0u;
  *(void *)(v60 + 72) = v52;
  uint64_t v71 = v52;
  uint64_t v65 = v74;
  *(void *)(v60 + 80) = KeyPath;
  *(void *)(v60 + 88) = v65;
  *(_WORD *)(v60 + 96) = (_WORD)v73;
  sub_10026E6C4(v61, v62, v64, v63);
  id v66 = *(void (**)(char *, uint64_t))(v81 + 8);
  v66(v83, v56);
  sub_10008DB18(v68, &qword_100952548);
  sub_10026E724(v82, v62, v64, v63);
  v66(v80, v56);
  return sub_10008DB18((uint64_t)v69, &qword_100952548);
}

uint64_t sub_10026E2CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  sub_1004E77FC(a3);
  uint64_t v6 = type metadata accessor for AdvancedChangeGoalView();
  uint64_t v7 = a2 + *(int *)(v6 + 20);
  id v8 = *(id *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_1001AEDAC(*(id *)v7, v9);
  id v10 = sub_1004E7830(v8, v9);
  sub_1001AEDC8(v8, v9);
  uint64_t v11 = *(void **)(a2 + *(int *)(v6 + 24) + 8);
  uint64_t v12 = (int *)type metadata accessor for ScheduleDayRowView();
  *(void *)(a3 + v12[5]) = v10;
  *(void *)(a3 + v12[6]) = v5;
  uint64_t v13 = (uint64_t *)(a3 + v12[7]);
  type metadata accessor for GoalDaysModel();
  sub_10026E78C(&qword_100952560, (void (*)(uint64_t))type metadata accessor for GoalDaysModel);
  id v14 = v11;
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *uint64_t v13 = result;
  v13[1] = v16;
  return result;
}

uint64_t sub_10026E3E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityDailyGoalChartView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10026E440(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10026E4A8()
{
  uint64_t v1 = type metadata accessor for AdvancedChangeGoalView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_100952468);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for Calendar();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  sub_1001AEDC8(*(id *)(v3 + *(int *)(v1 + 20)), *(unsigned char *)(v3 + *(int *)(v1 + 20) + 8));

  return swift_deallocObject();
}

uint64_t sub_10026E5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdvancedChangeGoalView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026E644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AdvancedChangeGoalView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10026E2CC(a1, v6, a2);
}

uint64_t sub_10026E6C4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A1750(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10026E724(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A06C0(result, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10026E78C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10026E7D4()
{
  return sub_10026E838(&qword_100952568, &qword_100952530, (void (*)(void))sub_10026E810);
}

uint64_t sub_10026E810()
{
  return sub_10026E838(&qword_100952570, &qword_100952528, (void (*)(void))sub_10026E8B8);
}

uint64_t sub_10026E838(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10026E8B8()
{
  unint64_t result = qword_100952578;
  if (!qword_100952578)
  {
    sub_1000A1370(&qword_100952520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952578);
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for CelebrationContext(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CelebrationContext(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CelebrationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10026EA90);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CelebrationContext()
{
  return &type metadata for CelebrationContext;
}

uint64_t sub_10026EAC8()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10026EAF4()
{
  sub_10026EB24();
  uint64_t result = HorizontalAlignment.init(_:)();
  qword_100997978 = result;
  return result;
}

unint64_t sub_10026EB24()
{
  unint64_t result = qword_100952580;
  if (!qword_100952580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952580);
  }
  return result;
}

uint64_t sub_10026EB78()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10026EBA0()
{
  sub_10026EBD0();
  uint64_t result = VerticalAlignment.init(_:)();
  qword_100997980 = result;
  return result;
}

unint64_t sub_10026EBD0()
{
  unint64_t result = qword_100952588;
  if (!qword_100952588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952588);
  }
  return result;
}

uint64_t sub_10026EC24()
{
  if (qword_10094A790 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = qword_100997978;
  if (qword_10094A798 != -1) {
    uint64_t result = swift_once();
  }
  *(void *)&xmmword_100997988 = v0;
  *((void *)&xmmword_100997988 + 1) = qword_100997980;
  return result;
}

ValueMetadata *_s17LollipopAlignmentVMa()
{
  return &_s17LollipopAlignmentVN;
}

ValueMetadata *_s17LollipopAlignmentVMa_0()
{
  return &_s17LollipopAlignmentVN_0;
}

unint64_t sub_10026ECDC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10026ECF8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10026F520();
    return swift_release();
  }
  return result;
}

uint64_t sub_10026ED50()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    int v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v4, (uint64_t)v7);
      id v5 = [v3 defaultCenter];
      sub_10007E4EC(v7, v7[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005E5F8(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10026EE70()
{
  sub_10026ED50();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HistoryActivityTileDataModel()
{
  return self;
}

uint64_t sub_10026EEC8()
{
  uint64_t v1 = *v0;
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    int v3 = self;
    id v4 = [v3 defaultCenter];
    id v5 = self;
    id v6 = [v5 mainQueue];
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    unint64_t v28 = sub_1002702F4;
    uint64_t v29 = v7;
    uint64_t v25 = 1107296256;
    aBlock = _NSConcreteStackBlock;
    char v26 = sub_1000711BC;
    id v27 = &unk_1008BE198;
    int v8 = _Block_copy(&aBlock);
    swift_release();
    id v9 = [v4 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v6 usingBlock:v8];
    _Block_release(v8);

    id v10 = [v3 defaultCenter];
    uint64_t v11 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v12 = [v5 mainQueue];
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    unint64_t v28 = sub_10027031C;
    uint64_t v29 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    char v26 = sub_1000711BC;
    id v27 = &unk_1008BE1C0;
    id v14 = _Block_copy(&aBlock);
    swift_release();
    id v15 = [v10 addObserverForName:v11 object:0 queue:v12 usingBlock:v14];
    _Block_release(v14);

    id v16 = [v3 defaultCenter];
    uint64_t v17 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
    id v18 = [v5 mainQueue];
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = v1;
    unint64_t v28 = sub_10027037C;
    uint64_t v29 = v20;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    char v26 = sub_1000711BC;
    id v27 = &unk_1008BE210;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_release();
    id v22 = [v16 addObserverForName:v17 object:0 queue:v18 usingBlock:v21];
    _Block_release(v21);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100752410;
    *(void *)(v23 + 56) = swift_getObjectType();
    *(void *)(v23 + 32) = v9;
    *(void *)(v23 + 88) = swift_getObjectType();
    *(void *)(v23 + 64) = v15;
    *(void *)(v23 + 120) = swift_getObjectType();
    *(void *)(v23 + 96) = v22;
    v0[7] = v23;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10026F2F0()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10026F520();
    return swift_release();
  }
  return result;
}

uint64_t sub_10026F3A8()
{
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  if (os_log_type_enabled(HKLogActivity, v0))
  {
    int v3 = v1;
    id v4 = (uint8_t *)swift_slowAlloc();
    v8[0] = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    uint64_t v5 = _typeName(_:qualified:)();
    sub_10008F1F4(v5, v6, v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s did receive FIMindfulnessSessionDataProviderDidUpdate notification", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10026F520();
    return swift_release();
  }
  return result;
}

uint64_t sub_10026F520()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin(v6);
  int v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0[2] + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems);
  swift_bridgeObjectRetain();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = (void *)HKLogActivity;
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(HKLogActivity, v10))
  {
    swift_bridgeObjectRetain_n();
    os_log_t v28 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = v3;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v31 = v2;
    aBlock[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v29 = v5;
    uint64_t v16 = v1;
    uint64_t v17 = _typeName(_:qualified:)();
    uint64_t v34 = sub_10008F1F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    uint64_t v19 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    uint64_t v34 = v19;
    uint64_t v1 = v16;
    uint64_t v5 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v20 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, v12, "%s historyItems count: %ld", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v31;
    swift_slowDealloc();
    uint64_t v3 = v30;
    swift_slowDealloc();
  }
  uint64_t v21 = sub_10026FF08(v9);
  sub_1000DF004();
  id v22 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  char v24 = (void *)swift_allocObject();
  _OWORD v24[2] = v23;
  v24[3] = v9;
  v24[4] = v21;
  v24[5] = v1;
  aBlock[4] = (uint64_t)sub_1002702C8;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008BE170;
  uint64_t v25 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v33);
}

uint64_t sub_10026F970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 32) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v6 = swift_weakLoadStrong();
  if (v6)
  {
    *(void *)(v6 + 24) = a3;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
  }
  os_log_type_t v7 = static os_log_type_t.default.getter();
  int v8 = (void *)HKLogActivity;
  os_log_type_t v9 = v7;
  if (os_log_type_enabled(HKLogActivity, v7))
  {
    swift_bridgeObjectRetain_n();
    os_log_type_t v10 = v8;
    uint64_t v11 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_10008F1F4(v12, v13, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v14 = sub_1000A6950(a2);
    sub_10008F1F4(v14, v15, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "%s did update keyHistoryItems: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = *(void (**)(uint64_t))(result + 40);
    sub_10008A670((uint64_t)v17);
    uint64_t result = swift_release();
    if (v17)
    {
      v17(result);
      return sub_10005E5F8((uint64_t)v17);
    }
  }
  return result;
}

uint64_t sub_10026FBF8(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_10007E4EC(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  LOBYTE(a1) = static Date.< infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

void *sub_10026FD18(char *a1)
{
  v1[4] = _swiftEmptyArrayStorage;
  v1[5] = 0;
  v1[6] = 0;
  v1[7] = _swiftEmptyArrayStorage;
  v1[2] = a1;
  v1[3] = _swiftEmptyArrayStorage;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10026FEC8;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = &a1[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess();
  uint64_t v6 = *(void **)v5;
  uint64_t v7 = a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_10001E94C(0, v6[2] + 1, 1, v6);
    *(void *)uint64_t v5 = v6;
  }
  unint64_t v10 = v6[2];
  unint64_t v9 = v6[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v6 = sub_10001E94C((void *)(v9 > 1), v10 + 1, 1, v6);
    *(void *)uint64_t v5 = v6;
  }
  v6[2] = v10 + 1;
  uint64_t v11 = &v6[2 * v10];
  v11[4] = sub_100020A64;
  v11[5] = v4;
  swift_endAccess();
  swift_release_n();
  sub_10026EEC8();
  return v1;
}

uint64_t sub_10026FE90()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10026FEC8()
{
  return sub_10026ECF8();
}

uint64_t sub_10026FED0()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_10026FF08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v24[-v11];
  if (*(void *)(a1 + 16) < 2uLL)
  {
    swift_bridgeObjectRetain();
    return (void *)a1;
  }
  else
  {
    static Calendar.current.getter();
    Date.init()();
    Calendar.startOfDay(for:)();
    unint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v13(v10, v6);
    uint64_t v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    __chkstk_darwin(v14);
    *(void *)&v24[-16] = v12;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1006239DC((uint64_t)sub_1002702D4, &v24[-32], a1);
    uint64_t v16 = v15;
    if (*(void *)(v15 + 16) >= 0x64uLL) {
      uint64_t v17 = 100;
    }
    else {
      uint64_t v17 = *(void *)(v15 + 16);
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    unint64_t v18 = (void *)swift_dynamicCastClass();
    if (!v18)
    {
      swift_bridgeObjectRelease();
      unint64_t v18 = _swiftEmptyArrayStorage;
    }
    uint64_t v19 = v18[2];
    swift_release();
    if (v19 == v17)
    {
      os_log_t v20 = (void *)swift_dynamicCastClass();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        os_log_t v20 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      os_log_t v20 = sub_10036937C(v16, v16 + 32, 0, (2 * v17) | 1);
    }
    swift_bridgeObjectRelease();
    if (!v20[2])
    {
      swift_release();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v21 = (void *)swift_dynamicCastClass();
      if (!v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = _swiftEmptyArrayStorage;
      }
      uint64_t v22 = v21[2];
      swift_release();
      if (v22 == 1)
      {
        os_log_t v20 = (void *)swift_dynamicCastClass();
        if (!v20)
        {
          swift_bridgeObjectRelease();
          os_log_t v20 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        os_log_t v20 = sub_10036937C(a1, a1 + 32, 0, 3uLL);
      }
      swift_bridgeObjectRelease();
    }
    v13(v12, v6);
  }
  return v20;
}

uint64_t sub_100270280()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002702C8()
{
  return sub_10026F970(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002702D4(void *a1)
{
  return sub_10026FBF8(a1) & 1;
}

uint64_t sub_1002702F4()
{
  return sub_10026F2F0();
}

uint64_t sub_10027031C()
{
  return sub_10026F2F0();
}

uint64_t sub_100270344()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10027037C()
{
  return sub_10026F3A8();
}

unint64_t sub_10027038C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100274A5C(*a1);
  *a2 = result;
  return result;
}

id sub_1002703B8()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setMinimumIntegerDigits:2];
  id result = [v0 setMaximumFractionDigits:0];
  qword_1009526C8 = (uint64_t)v0;
  return result;
}

uint64_t sub_10027041C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_100270490()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_dataCalculator];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workoutActivity];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  void v7[4] = sub_100275508;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1002706E4;
  v7[3] = &unk_1008BE340;
  uint64_t v5 = _Block_copy(v7);
  uint64_t v6 = v0;
  swift_release();
  [v1 swimmingSetsForWorkout:v2 workoutActivity:v3 completion:v5];
  _Block_release(v5);
}

uint64_t sub_1002705A4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    *(void *)(v3 + 56) = v8;
    uint64_t v4 = sub_1000B1710((uint64_t *)(v3 + 32));
    (*(void (**)(uint64_t *))(*(void *)(v8 - 8) + 16))(v4);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    if (a1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      id v7 = a3;
      static Published.subscript.setter();
    }
    return sub_1002730C4();
  }
}

uint64_t sub_1002706E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, &qword_100952848);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_100270788(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columns);
  if (*(void *)(v2 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (*(unsigned __int8 *)(v2 + result + 32) >= 3u)
  {
    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  return AttributedString.init(stringLiteral:)();
}

unint64_t sub_1002708A0(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columns);
  if (*(void *)(v2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  unsigned __int8 v3 = *(unsigned char *)(v2 + result + 32);
  uint64_t v4 = v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columnSizes;
  id result = swift_beginAccess();
  if (*(void *)(*(void *)v4 + 16)) {
    return sub_1000D5C14(v3);
  }
  return result;
}

uint64_t sub_100270948@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t result = self;
  BOOL v16 = __OFADD__(a1, 1);
  uint64_t v17 = a1 + 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = (void *)result;
    id v19 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v17];
    id v20 = [v18 localizedStringFromNumber:v19 numberStyle:0];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v5;
    uint64_t v23 = v22;

    uint64_t v61 = v21;
    uint64_t v62 = v23;
    sub_1000A06D0();
    uint64_t v24 = Text.init<A>(_:)();
    uint64_t v26 = v25;
    id v55 = v7;
    char v28 = v27 & 1;
    static Font.body.getter();
    uint64_t v60 = a2;
    uint64_t v29 = Text.font(_:)();
    uint64_t v58 = v8;
    uint64_t v59 = v14;
    uint64_t v30 = v29;
    uint64_t v56 = v12;
    uint64_t v32 = v31;
    uint64_t v54 = v4;
    char v34 = v33;
    uint64_t v35 = v9;
    swift_release();
    char v36 = v34 & 1;
    sub_1000A06C0(v24, v26, v28);
    swift_bridgeObjectRelease();
    static Color.gray.getter();
    uint64_t v37 = Text.foregroundColor(_:)();
    uint64_t v39 = v38;
    LOBYTE(v23) = v40;
    uint64_t v42 = v41;
    swift_release();
    sub_1000A06C0(v30, v32, v36);
    swift_bridgeObjectRelease();
    uint64_t v61 = v37;
    uint64_t v62 = v39;
    char v63 = v23 & 1;
    uint64_t v64 = v42;
    uint64_t v43 = v57;
    uint64_t v45 = v54;
    uint64_t v44 = v55;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v55, enum case for DynamicTypeSize.large(_:), v54);
    uint64_t v46 = v56;
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    sub_1000A06C0(v61, v62, v63);
    swift_bridgeObjectRelease();
    uint64_t v47 = v58;
    uint64_t v48 = v59;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v59, v46, v58);
    char v49 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v49(v46, v48, v47);
    uint64_t v50 = v60;
    v49(v60, v46, v47);
    uint64_t v51 = &v50[*(int *)(sub_1000AFA94(&qword_100952800) + 48)];
    *(void *)uint64_t v51 = 0;
    v51[8] = 1;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v35 + 8);
    v52(v48, v47);
    return ((uint64_t (*)(char *, uint64_t))v52)(v46, v47);
  }
  return result;
}

uint64_t sub_100270D44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v47 = a3;
  uint64_t v44 = type metadata accessor for DynamicTypeSize();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v40 - v9;
  uint64_t v48 = sub_100272E68(a2);
  uint64_t v49 = v10;
  sub_1000A06D0();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  static Font.body.getter();
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  char v21 = v20 & 1;
  sub_1000A06C0(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v22 = Text.foregroundColor(_:)();
  uint64_t v24 = v23;
  LOBYTE(v11) = v25;
  uint64_t v27 = v26;
  sub_1000A06C0(v16, v18, v21);
  swift_bridgeObjectRelease();
  uint64_t v48 = v22;
  uint64_t v49 = v24;
  char v50 = v11 & 1;
  uint64_t v51 = v27;
  uint64_t v29 = v41;
  uint64_t v28 = v42;
  uint64_t v30 = v44;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v41, enum case for DynamicTypeSize.large(_:), v44);
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  sub_1000A06C0(v48, v49, v50);
  swift_bridgeObjectRelease();
  uint64_t v31 = v45;
  uint64_t v32 = v46;
  char v33 = v43;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v43, v8, v46);
  uint64_t v34 = v31;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v35(v8, v33, v32);
  char v36 = v47;
  v35(v47, v8, v32);
  uint64_t v37 = &v36[*(int *)(sub_1000AFA94(&qword_100952800) + 48)];
  *(void *)uint64_t v37 = 0;
  v37[8] = 1;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  v38(v33, v32);
  return ((uint64_t (*)(char *, uint64_t))v38)(v8, v32);
}

uint64_t sub_1002710C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009527A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009527B0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v14 = sub_1000AFA94(&qword_1009527E8);
  sub_100271338(a1, v2, &v10[*(int *)(v14 + 44)]);
  long long v20 = *(_OWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding);
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 16);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 24);
  char v17 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v10, (uint64_t)v13, &qword_1009527A8);
  uint64_t v18 = &v13[*(int *)(v11 + 36)];
  char *v18 = v17;
  *(_OWORD *)(v18 + 8) = v20;
  *((void *)v18 + 3) = v16;
  *((void *)v18 + 4) = v15;
  v18[40] = 0;
  sub_10008DB18((uint64_t)v10, &qword_1009527A8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.large(_:), v4);
  sub_100275148(&qword_1009527F0, &qword_1009527B0, &qword_1009527F8, &qword_1009527A8);
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10008DB18((uint64_t)v13, &qword_1009527B0);
}

id sub_100271338@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v158 = a2;
  uint64_t v143 = a3;
  uint64_t v4 = sub_1000AFA94(&qword_100952808);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v144 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v140 = (char *)&v140 - v7;
  uint64_t v162 = type metadata accessor for DynamicTypeSize();
  uint64_t v165 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v146 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1000AFA94(&qword_100952810);
  uint64_t v148 = *(void *)(v163 - 8);
  uint64_t v9 = __chkstk_darwin(v163);
  uint64_t v142 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v147 = (char *)&v140 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v159 = (char *)&v140 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v164 = (char *)&v140 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v161 = (char *)&v140 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v145 = (char *)&v140 - v20;
  __chkstk_darwin(v19);
  uint64_t v160 = (char *)&v140 - v21;
  id v141 = a1;
  id result = [a1 formattedDominantStrokeStyle];
  if (result)
  {
    uint64_t v23 = result;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    uint64_t v166 = v24;
    uint64_t v167 = v26;
    unint64_t v157 = sub_1000A06D0();
    uint64_t v27 = Text.init<A>(_:)();
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    static Font.body.getter();
    uint64_t v32 = Text.font(_:)();
    uint64_t v34 = v33;
    char v36 = v35;
    swift_release();
    sub_1000A06C0(v27, v29, v31);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v37 = Text.foregroundColor(_:)();
    uint64_t v39 = v38;
    char v41 = v40;
    uint64_t v43 = v42;
    swift_release();
    sub_1000A06C0(v32, v34, v36 & 1);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v166 = v37;
    uint64_t v167 = v39;
    char v168 = v41 & 1;
    uint64_t v169 = v43;
    uint64_t v170 = KeyPath;
    uint64_t v171 = 1;
    char v172 = 0;
    unsigned int v155 = enum case for DynamicTypeSize.large(_:);
    uint64_t v45 = v165;
    uint64_t v46 = *(void (**)(void))(v165 + 104);
    uint64_t v156 = v165 + 104;
    v154 = (void (*)(char *, void, uint64_t))v46;
    uint64_t v47 = v146;
    uint64_t v48 = v162;
    v46(v146);
    uint64_t v153 = sub_1000AFA94(&qword_100952818);
    unint64_t v152 = sub_1000E2004();
    uint64_t v49 = v145;
    View.dynamicTypeSize(_:)();
    char v50 = *(void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v165 = v45 + 8;
    v151 = v50;
    v50(v47, v48);
    sub_1000A06C0(v166, v167, v168);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v148 + 32);
    uint64_t v150 = v148 + 32;
    uint64_t v149 = v51;
    v51(v160, v49, v163);
    uint64_t v145 = (char *)self;
    id v52 = [v145 mainBundle];
    NSString v53 = String._bridgeToObjectiveC()();
    id v54 = [v52 localizedStringForKey:v53 value:0 table:0];

    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;

    uint64_t v166 = v55;
    uint64_t v167 = v57;
    uint64_t v58 = Text.init<A>(_:)();
    uint64_t v60 = v59;
    LOBYTE(v57) = v61 & 1;
    static Font.body.getter();
    uint64_t v62 = Text.font(_:)();
    uint64_t v64 = v63;
    char v66 = v65;
    swift_release();
    sub_1000A06C0(v58, v60, v57);
    swift_bridgeObjectRelease();
    uint64_t v67 = Text.foregroundColor(_:)();
    uint64_t v69 = v68;
    LOBYTE(v54) = v70;
    uint64_t v72 = v71;
    sub_1000A06C0(v62, v64, v66 & 1);
    swift_bridgeObjectRelease();
    uint64_t v73 = swift_getKeyPath();
    uint64_t v166 = v67;
    uint64_t v167 = v69;
    char v168 = v54 & 1;
    uint64_t v169 = v72;
    uint64_t v170 = v73;
    uint64_t v171 = 1;
    char v172 = 0;
    uint64_t v74 = v162;
    v154(v47, v155, v162);
    uint64_t v75 = v164;
    View.dynamicTypeSize(_:)();
    v151(v47, v74);
    sub_1000A06C0(v166, v167, v168);
    swift_bridgeObjectRelease();
    swift_release();
    v149(v161, v75, v163);
    id v76 = [v145 mainBundle];
    NSString v77 = String._bridgeToObjectiveC()();
    id v78 = [v76 localizedStringForKey:v77 value:0 table:0];

    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v81 = v80;

    uint64_t v166 = v79;
    uint64_t v167 = v81;
    uint64_t v82 = Text.init<A>(_:)();
    uint64_t v84 = v83;
    LOBYTE(v81) = v85 & 1;
    static Font.body.getter();
    uint64_t v86 = Text.font(_:)();
    uint64_t v88 = v87;
    char v90 = v89;
    swift_release();
    sub_1000A06C0(v82, v84, v81);
    swift_bridgeObjectRelease();
    uint64_t v91 = Text.foregroundColor(_:)();
    uint64_t v93 = v92;
    LOBYTE(v78) = v94;
    uint64_t v96 = v95;
    sub_1000A06C0(v86, v88, v90 & 1);
    swift_bridgeObjectRelease();
    uint64_t v97 = swift_getKeyPath();
    uint64_t v166 = v91;
    uint64_t v167 = v93;
    char v98 = v78 & 1;
    uint64_t v99 = 1;
    char v168 = v98;
    uint64_t v169 = v96;
    uint64_t v170 = v97;
    uint64_t v171 = 1;
    char v172 = 0;
    uint64_t v100 = v162;
    v154(v47, v155, v162);
    id v101 = v164;
    View.dynamicTypeSize(_:)();
    v151(v47, v100);
    sub_1000A06C0(v166, v167, v168);
    swift_bridgeObjectRelease();
    swift_release();
    id v102 = v159;
    id v103 = v101;
    uint64_t v104 = v163;
    v149(v159, v103, v163);
    if ((uint64_t)[v141 swolfScore] < 1)
    {
      uint64_t v130 = (uint64_t)v140;
      uint64_t v131 = v164;
    }
    else
    {
      id v105 = [v145 mainBundle];
      NSString v106 = String._bridgeToObjectiveC()();
      id v107 = [v105 localizedStringForKey:v106 value:0 table:0];

      uint64_t v108 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v110 = v109;

      uint64_t v166 = v108;
      uint64_t v167 = v110;
      uint64_t v111 = Text.init<A>(_:)();
      uint64_t v113 = v112;
      LOBYTE(v110) = v114 & 1;
      static Font.body.getter();
      uint64_t v115 = Text.font(_:)();
      uint64_t v117 = v116;
      char v119 = v118;
      swift_release();
      sub_1000A06C0(v111, v113, v110);
      swift_bridgeObjectRelease();
      uint64_t v120 = Text.foregroundColor(_:)();
      uint64_t v122 = v121;
      LOBYTE(v107) = v123;
      uint64_t v125 = v124;
      sub_1000A06C0(v115, v117, v119 & 1);
      swift_bridgeObjectRelease();
      uint64_t v126 = swift_getKeyPath();
      uint64_t v166 = v120;
      uint64_t v167 = v122;
      char v168 = v107 & 1;
      uint64_t v169 = v125;
      uint64_t v170 = v126;
      uint64_t v171 = 1;
      char v172 = 0;
      v127 = v146;
      uint64_t v128 = v162;
      uint64_t v104 = v163;
      v154(v146, v155, v162);
      uint64_t v129 = v164;
      View.dynamicTypeSize(_:)();
      id v102 = v159;
      v151(v127, v128);
      sub_1000A06C0(v166, v167, v168);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v130 = (uint64_t)v140;
      v149(v140, v129, v104);
      uint64_t v99 = 0;
      uint64_t v131 = v129;
    }
    uint64_t v132 = v148;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v130, v99, 1, v104);
    v133 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
    v133(v131, v160, v104);
    v133(v147, v161, v104);
    v134 = v142;
    v133(v142, v102, v104);
    uint64_t v135 = v144;
    sub_1000AEF2C(v130, v144, &qword_100952808);
    uint64_t v136 = v143;
    v133(v143, v131, v104);
    uint64_t v137 = (int *)sub_1000AFA94(&qword_100952838);
    v138 = v147;
    v133(&v136[v137[12]], v147, v104);
    v133(&v136[v137[16]], v134, v104);
    sub_1000AEF2C(v135, (uint64_t)&v136[v137[20]], &qword_100952808);
    sub_10008DB18(v130, &qword_100952808);
    uint64_t v139 = *(void (**)(char *, uint64_t))(v132 + 8);
    v139(v159, v104);
    v139(v161, v104);
    v139(v160, v104);
    sub_10008DB18(v135, &qword_100952808);
    v139(v134, v104);
    v139(v138, v104);
    return (id)((uint64_t (*)(char *, uint64_t))v139)(v164, v104);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002720F0(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  unint64_t v152 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_100952808);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v153 = (uint64_t)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v148 = (char *)&v148 - v8;
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v174 = v9;
  uint64_t v175 = v10;
  __chkstk_darwin(v9);
  long long v173 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1000AFA94(&qword_100952810);
  uint64_t v157 = *(void *)(v170 - 8);
  uint64_t v12 = __chkstk_darwin(v170);
  v151 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v150 = (char *)&v148 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v156 = (char *)&v148 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v149 = (char *)&v148 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  char v168 = (char *)&v148 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v154 = (char *)&v148 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v169 = (char *)&v148 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v160 = (char *)&v148 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v148 - v28;
  uint64_t v172 = a2;
  id v158 = *(id *)(a2 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
  id v30 = [v158 fitnessUIFormattingManager];
  uint64_t v171 = a1;
  id v31 = [a1 formattedDistanceValueWithFormattingManager:v30];

  if (!v31)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  uint64_t v176 = v32;
  uint64_t v177 = v34;
  unint64_t v167 = sub_1000A06D0();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  static Font.body.getter();
  uint64_t v40 = Text.font(_:)();
  uint64_t v42 = v41;
  char v44 = v43;
  swift_release();
  sub_1000A06C0(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t v45 = Text.foregroundColor(_:)();
  uint64_t v47 = v46;
  char v49 = v48;
  uint64_t v51 = v50;
  sub_1000A06C0(v40, v42, v44 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v176 = v45;
  uint64_t v177 = v47;
  char v178 = v49 & 1;
  uint64_t v179 = v51;
  uint64_t v180 = KeyPath;
  uint64_t v181 = 1;
  char v182 = 0;
  uint64_t v53 = v175;
  id v54 = *(void (**)(void))(v175 + 104);
  uint64_t v55 = v173;
  unsigned int v165 = enum case for DynamicTypeSize.large(_:);
  uint64_t v56 = v174;
  uint64_t v166 = v175 + 104;
  uint64_t v164 = (void (*)(char *, void, uint64_t))v54;
  v54(v173);
  uint64_t v57 = sub_1000AFA94(&qword_100952818);
  unint64_t v58 = sub_1000E2004();
  uint64_t v59 = v160;
  uint64_t v163 = v57;
  unint64_t v162 = v58;
  View.dynamicTypeSize(_:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v175 = v53 + 8;
  uint64_t v161 = v60;
  v60(v55, v56);
  sub_1000A06C0(v176, v177, v178);
  swift_bridgeObjectRelease();
  swift_release();
  char v61 = *(void (**)(char *, char *, uint64_t))(v157 + 32);
  unsigned int v155 = v29;
  uint64_t v160 = (char *)(v157 + 32);
  uint64_t v159 = v61;
  v61(v29, v59, v170);
  id v62 = [v158 fitnessUIFormattingManager];
  id v63 = [v171 formattedActiveDurationWithFormattingManager:v62];

  if (!v63)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v65;

  uint64_t v176 = v64;
  uint64_t v177 = v66;
  uint64_t v67 = Text.init<A>(_:)();
  uint64_t v69 = v68;
  char v71 = v70 & 1;
  static Font.body.getter();
  uint64_t v72 = Text.font(_:)();
  uint64_t v74 = v73;
  char v76 = v75;
  swift_release();
  sub_1000A06C0(v67, v69, v71);
  swift_bridgeObjectRelease();
  uint64_t v77 = Text.foregroundColor(_:)();
  uint64_t v79 = v78;
  LOBYTE(v66) = v80;
  uint64_t v82 = v81;
  sub_1000A06C0(v72, v74, v76 & 1);
  swift_bridgeObjectRelease();
  uint64_t v83 = swift_getKeyPath();
  uint64_t v176 = v77;
  uint64_t v177 = v79;
  char v178 = v66 & 1;
  uint64_t v179 = v82;
  uint64_t v180 = v83;
  uint64_t v181 = 1;
  char v182 = 0;
  char v85 = v173;
  uint64_t v84 = v174;
  v164(v173, v165, v174);
  uint64_t v86 = v154;
  View.dynamicTypeSize(_:)();
  v161(v85, v84);
  sub_1000A06C0(v176, v177, v178);
  swift_bridgeObjectRelease();
  swift_release();
  v159(v169, v86, v170);
  id v87 = [v158 fitnessUIFormattingManager];
  id v88 = [v171 formattedRestDurationWithFormattingManager:v87];

  if (!v88)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v91 = v90;

  uint64_t v176 = v89;
  uint64_t v177 = v91;
  uint64_t v92 = Text.init<A>(_:)();
  uint64_t v94 = v93;
  char v96 = v95 & 1;
  static Font.body.getter();
  uint64_t v97 = Text.font(_:)();
  uint64_t v99 = v98;
  char v101 = v100;
  swift_release();
  sub_1000A06C0(v92, v94, v96);
  swift_bridgeObjectRelease();
  uint64_t v102 = Text.foregroundColor(_:)();
  uint64_t v104 = v103;
  LOBYTE(v91) = v105;
  uint64_t v107 = v106;
  sub_1000A06C0(v97, v99, v101 & 1);
  swift_bridgeObjectRelease();
  uint64_t v108 = swift_getKeyPath();
  uint64_t v176 = v102;
  uint64_t v177 = v104;
  char v178 = v91 & 1;
  uint64_t v179 = v107;
  uint64_t v180 = v108;
  uint64_t v109 = 1;
  uint64_t v181 = 1;
  char v182 = 0;
  uint64_t v111 = v173;
  uint64_t v110 = v174;
  v164(v173, v165, v174);
  uint64_t v112 = v149;
  View.dynamicTypeSize(_:)();
  v161(v111, v110);
  sub_1000A06C0(v176, v177, v178);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v113 = v170;
  v159(v168, v112, v170);
  if ((uint64_t)[v171 swolfScore] < 1)
  {
    uint64_t v137 = (uint64_t)v148;
    uint64_t v136 = v156;
  }
  else
  {
    uint64_t v176 = sub_100274B28(v171);
    uint64_t v177 = v114;
    uint64_t v115 = Text.init<A>(_:)();
    uint64_t v116 = v113;
    uint64_t v118 = v117;
    char v120 = v119 & 1;
    static Font.body.getter();
    uint64_t v121 = Text.font(_:)();
    uint64_t v123 = v122;
    char v125 = v124;
    swift_release();
    sub_1000A06C0(v115, v118, v120);
    swift_bridgeObjectRelease();
    uint64_t v126 = Text.foregroundColor(_:)();
    uint64_t v128 = v127;
    char v130 = v129;
    uint64_t v132 = v131;
    sub_1000A06C0(v121, v123, v125 & 1);
    swift_bridgeObjectRelease();
    uint64_t v133 = swift_getKeyPath();
    uint64_t v176 = v126;
    uint64_t v177 = v128;
    char v178 = v130 & 1;
    uint64_t v179 = v132;
    uint64_t v180 = v133;
    uint64_t v181 = 1;
    char v182 = 0;
    uint64_t v135 = v173;
    uint64_t v134 = v174;
    v164(v173, v165, v174);
    uint64_t v136 = v156;
    View.dynamicTypeSize(_:)();
    uint64_t v113 = v116;
    v161(v135, v134);
    sub_1000A06C0(v176, v177, v178);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v137 = (uint64_t)v148;
    v159(v148, v136, v116);
    uint64_t v109 = 0;
  }
  uint64_t v138 = v157;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v137, v109, 1, v113);
  uint64_t v139 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
  v139(v136, v155, v113);
  uint64_t v140 = v150;
  v139(v150, v169, v113);
  id v141 = v151;
  v139(v151, v168, v113);
  uint64_t v142 = v136;
  uint64_t v143 = v153;
  sub_1000AEF2C(v137, v153, &qword_100952808);
  uint64_t v144 = v152;
  v139(v152, v142, v113);
  uint64_t v145 = v113;
  uint64_t v146 = (int *)sub_1000AFA94(&qword_100952838);
  v139(&v144[v146[12]], v140, v145);
  v139(&v144[v146[16]], v141, v145);
  sub_1000AEF2C(v143, (uint64_t)&v144[v146[20]], &qword_100952808);
  sub_10008DB18(v137, &qword_100952808);
  v147 = *(void (**)(char *, uint64_t))(v138 + 8);
  v147(v168, v145);
  v147(v169, v145);
  v147(v155, v145);
  sub_10008DB18(v143, &qword_100952808);
  v147(v141, v145);
  v147(v140, v145);
  v147(v156, v145);
}

uint64_t sub_100272E68(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unsigned __int8 v3 = *(void **)(v1 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
  id v4 = [v3 fitnessUIFormattingManager];
  id v5 = [a1 formattedPaceUsingFormatType:v21 formattingManager:v4];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  id v9 = [v3 fitnessUIFormattingManager];
  id v10 = [a1 formattedStrokeCountUsingFormatType:v21 formattingManager:v9];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  id v14 = [self mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10074E640;
  *(void *)(v17 + 56) = &type metadata for String;
  unint64_t v18 = sub_1000AA64C();
  *(void *)(v17 + 32) = v6;
  *(void *)(v17 + 40) = v8;
  *(void *)(v17 + 96) = &type metadata for String;
  *(void *)(v17 + 104) = v18;
  *(void *)(v17 + 64) = v18;
  *(void *)(v17 + 72) = v11;
  *(void *)(v17 + 80) = v13;
  uint64_t v19 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1002730C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v103 = v0;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = v109;
  if (v109 >> 62) {
    goto LABEL_58;
  }
  uint64_t v2 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      id v4 = (uint64_t *)(v103 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columnSizes);
      uint64_t v98 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columns;
      unint64_t v99 = v1 & 0xC000000000000001;
      uint64_t v94 = v1 + 32;
      uint64_t v95 = v1 & 0xFFFFFFFFFFFFFF8;
      p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___CHFitnessAppBadgeAggregatorDelegate + 16);
      char v101 = (uint64_t *)(v103 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columnSizes);
      uint64_t v96 = v2;
      uint64_t v97 = v1;
      while (1)
      {
LABEL_5:
        if (v99)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v7 = __OFADD__(v3++, 1);
          if (v7) {
            goto LABEL_56;
          }
        }
        else
        {
          if (v3 >= *(void *)(v95 + 16)) {
            goto LABEL_57;
          }
          id v6 = *(id *)(v94 + 8 * v3);
          BOOL v7 = __OFADD__(v3++, 1);
          if (v7) {
            goto LABEL_56;
          }
        }
        uint64_t v8 = *(void *)(v103 + v98);
        uint64_t v105 = *(void *)(v8 + 16);
        if (v105) {
          break;
        }

        if (v3 == v2) {
          return swift_bridgeObjectRelease();
        }
      }
      id v104 = v6;
      uint64_t v100 = v3;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v9 = 0;
      uint64_t v10 = v8;
      uint64_t v102 = v8;
      while (2)
      {
        uint64_t v106 = v9 + 1;
        unsigned __int8 v107 = *(unsigned char *)(v10 + v9 + 32);
        switch(v107)
        {
          case 1u:
            sub_1000AFA94((uint64_t *)&unk_1009546D0);
            uint64_t v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = xmmword_1007526C0;
            id v34 = [v104 formattedDominantStrokeStyle];
            if (!v34) {
              goto LABEL_63;
            }
            uint64_t v35 = v34;
            uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v38 = v37;

            *(void *)(v33 + 56) = &type metadata for String;
            unint64_t v39 = sub_1000AA64C();
            *(void *)(v33 + 64) = v39;
            *(void *)(v33 + 32) = v36;
            *(void *)(v33 + 40) = v38;
            uint64_t v40 = self;
            id v41 = [v40 mainBundle];
            NSString v42 = String._bridgeToObjectiveC()();
            id v43 = [v41 localizedStringForKey:v42 value:0 table:0];

            uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v46 = v45;

            *(void *)(v33 + 96) = &type metadata for String;
            *(void *)(v33 + 104) = v39;
            *(void *)(v33 + 72) = v44;
            *(void *)(v33 + 80) = v46;
            id v47 = [v40 mainBundle];
            NSString v48 = String._bridgeToObjectiveC()();
            id v49 = [v47 localizedStringForKey:v48 value:0 table:0];

            uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v52 = v51;

            *(void *)(v33 + 136) = &type metadata for String;
            *(void *)(v33 + 144) = v39;
            *(void *)(v33 + 112) = v50;
            *(void *)(v33 + 120) = v52;
            if ((uint64_t)[v104 swolfScore] < 1)
            {
              uint64_t v56 = 0;
              unint64_t v58 = 0xE000000000000000;
            }
            else
            {
              id v53 = [v40 mainBundle];
              NSString v54 = String._bridgeToObjectiveC()();
              id v55 = [v53 localizedStringForKey:v54 value:0 table:0];

              uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v58 = v57;
            }
            p_prots = &OBJC_PROTOCOL___CHFitnessAppBadgeAggregatorDelegate.prots;
            *(void *)(v33 + 176) = &type metadata for String;
            *(void *)(v33 + 184) = v39;
            *(void *)(v33 + 152) = v56;
            *(void *)(v33 + 160) = v58;
            String.init(format:_:)();
            goto LABEL_30;
          case 2u:
            sub_1000AFA94((uint64_t *)&unk_1009546D0);
            uint64_t v15 = swift_allocObject();
            *(_OWORD *)(v15 + 16) = xmmword_100752410;
            id v16 = *(void **)(v103 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
            id v17 = [v16 fitnessUIFormattingManager];
            id v18 = [v104 formattedDistanceValueWithFormattingManager:v17];

            if (!v18)
            {
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
              JUMPOUT(0x100273B7CLL);
            }
            uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v21 = v20;

            *(void *)(v15 + 56) = &type metadata for String;
            unint64_t v22 = sub_1000AA64C();
            *(void *)(v15 + 64) = v22;
            *(void *)(v15 + 32) = v19;
            *(void *)(v15 + 40) = v21;
            id v23 = [v16 fitnessUIFormattingManager];
            id v24 = [v104 formattedActiveDurationWithFormattingManager:v23];

            if (!v24) {
              goto LABEL_61;
            }
            uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v27 = v26;

            *(void *)(v15 + 96) = &type metadata for String;
            *(void *)(v15 + 104) = v22;
            *(void *)(v15 + 72) = v25;
            *(void *)(v15 + 80) = v27;
            id v28 = [v16 fitnessUIFormattingManager];
            id v29 = [v104 formattedRestDurationWithFormattingManager:v28];

            if (!v29) {
              goto LABEL_62;
            }
            uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v32 = v31;

            *(void *)(v15 + 136) = &type metadata for String;
            *(void *)(v15 + 144) = v22;
            *(void *)(v15 + 112) = v30;
            *(void *)(v15 + 120) = v32;
            String.init(format:_:)();
LABEL_30:
            id v4 = v101;
            uint64_t v10 = v102;
LABEL_31:
            if (p_prots[229] != (__objc2_prot_list *)-1) {
              swift_once();
            }
            id v14 = &qword_1009978F8;
LABEL_34:
            id v59 = (id)*v14;
            NSString v60 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            v111[0] = NSFontAttributeName;
            v111[4] = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
            v111[1] = v59;
            sub_1000AFA94(&qword_100952850);
            uint64_t v1 = static _DictionaryStorage.allocate(capacity:)();
            sub_1000AEF2C((uint64_t)v111, (uint64_t)&v109, &qword_100952858);
            uint64_t v61 = v109;
            id v62 = v59;
            id v63 = NSFontAttributeName;
            unint64_t v64 = sub_10005BC7C(v61);
            if ((v65 & 1) == 0)
            {
              *(void *)(v1 + 8 * (v64 >> 6) + 64) |= 1 << v64;
              *(void *)(*(void *)(v1 + 48) + 8 * v64) = v61;
              sub_10005C2B0(&v110, (_OWORD *)(*(void *)(v1 + 56) + 32 * v64));
              uint64_t v66 = *(void *)(v1 + 16);
              BOOL v7 = __OFADD__(v66, 1);
              uint64_t v67 = v66 + 1;
              if (v7) {
                goto LABEL_53;
              }
              *(void *)(v1 + 16) = v67;
              sub_1000AFA94(&qword_100952858);
              swift_arrayDestroy();
              type metadata accessor for Key(0);
              sub_100275510((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
              Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_release();
              [v60 boundingRectWithSize:1 options:isa context:0];
              CGFloat v70 = v69;
              CGFloat v72 = v71;
              CGFloat v74 = v73;
              CGFloat v76 = v75;

              v112.origin.x = v70;
              v112.origin.y = v72;
              v112.size.width = v74;
              v112.size.height = v76;
              double v77 = ceil(CGRectGetWidth(v112));
              uint64_t v78 = *v4;
              if (*(void *)(*v4 + 16) && (unint64_t v79 = sub_1000D5C14(v107), (v80 & 1) != 0))
              {
                if (*(double *)(*(void *)(v78 + 56) + 8 * v79) >= v77) {
                  goto LABEL_15;
                }
              }
              else if (v77 <= 0.0)
              {
                goto LABEL_15;
              }
              swift_beginAccess();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v108 = (void *)*v4;
              uint64_t v1 = (uint64_t)v108;
              *id v4 = 0x8000000000000000;
              unint64_t v83 = sub_1000D5C14(v107);
              uint64_t v84 = *(void *)(v1 + 16);
              BOOL v85 = (v82 & 1) == 0;
              uint64_t v86 = v84 + v85;
              if (__OFADD__(v84, v85)) {
                goto LABEL_54;
              }
              char v87 = v82;
              if (*(void *)(v1 + 24) >= v86)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v1 = (uint64_t)&v108;
                  sub_1004F2A3C();
                }
              }
              else
              {
                sub_1004E9598(v86, isUniquelyReferenced_nonNull_native);
                uint64_t v1 = (uint64_t)v108;
                unint64_t v88 = sub_1000D5C14(v107);
                if ((v87 & 1) != (v89 & 1)) {
                  goto LABEL_64;
                }
                unint64_t v83 = v88;
              }
              uint64_t v90 = v108;
              if (v87)
              {
                *(double *)(v108[7] + 8 * v83) = v77;
              }
              else
              {
                v108[(v83 >> 6) + 8] |= 1 << v83;
                *(unsigned char *)(v90[6] + v83) = v107;
                *(double *)(v90[7] + 8 * v83) = v77;
                uint64_t v91 = v90[2];
                BOOL v7 = __OFADD__(v91, 1);
                uint64_t v92 = v91 + 1;
                if (v7) {
                  goto LABEL_55;
                }
                v90[2] = v92;
              }
              *id v4 = (uint64_t)v90;
              swift_bridgeObjectRelease();
              swift_endAccess();
LABEL_15:

              uint64_t v9 = v106;
              if (v105 != v106) {
                continue;
              }

              swift_bridgeObjectRelease();
              uint64_t v2 = v96;
              uint64_t v1 = v97;
              unint64_t v3 = v100;
              if (v100 == v96) {
                return swift_bridgeObjectRelease();
              }
              goto LABEL_5;
            }
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            swift_bridgeObjectRetain();
            uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v2) {
              return swift_bridgeObjectRelease();
            }
            break;
          case 3u:
            sub_100272E68(v104);
            goto LABEL_31;
          default:
            uint64_t v11 = self;
            id v12 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v100];
            id v13 = [v11 localizedStringFromNumber:v12 numberStyle:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (qword_10094A720 != -1) {
              swift_once();
            }
            id v14 = &qword_1009978F0;
            goto LABEL_34;
        }
        break;
      }
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_100273B8C(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v35 = a2;
  uint64_t v6 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100952840);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = &v4[OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource__swimmingSets];
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v15 = v4;
  sub_1000AFA94(&qword_100952758);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columns] = &off_1008B36D0;
  *(void *)&v15[OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  id v16 = self;
  id v17 = [v16 distanceColors];
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v18 = v17;
  id v19 = [v17 nonGradientTextColor];

  if (!v19)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v20 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_distanceColor;
  *(void *)&v15[v20] = Color.init(_:)();
  id v21 = [v16 paceColors];
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v22 = v21;
  id v23 = [v21 nonGradientTextColor];

  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_paceColor;
  *(void *)&v15[v24] = Color.init(_:)();
  uint64_t v25 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_restColor;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Color.RGBColorSpace.sRGB(_:), v6);
  *(void *)&v15[v25] = Color.init(_:red:green:blue:opacity:)();
  id v26 = [v16 elapsedTimeColors];
  if (!v26)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v27 = v26;
  id v28 = [v26 nonGradientTextColor];

  if (!v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v29 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_timeColor;
  *(void *)&v15[v29] = Color.init(_:)();
  id v30 = [v16 paceColors];
  if (!v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v31 = v30;
  id v32 = [v30 nonGradientTextColor];

  if (v32)
  {
    uint64_t v33 = OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_swolfColor;
    *(void *)&v15[v33] = Color.init(_:)();
    id v34 = &v15[OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding];
    *(_OWORD *)id v34 = xmmword_100755AF0;
    *((_OWORD *)v34 + 1) = xmmword_100755AF0;

    sub_1002DF234(a1, v35, v36, v37);
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_100273FB4()
{
  uint64_t v1 = v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource__swimmingSets;
  uint64_t v2 = sub_1000AFA94(&qword_100952840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

id sub_100274094()
{
  return sub_1002746AC(type metadata accessor for WorkoutDetailSwimmingSetDataSource);
}

uint64_t sub_100274190()
{
  return type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSwimmingSetDataSource(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100952740);
}

void sub_1002741B8()
{
  sub_100274278();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100274278()
{
  if (!qword_100952750)
  {
    sub_1000A1370(&qword_100952758);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100952750);
    }
  }
}

uint64_t sub_1002742D4()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_columns) + 16);
}

uint64_t sub_1002742F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100274338()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v21 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  Date.init()();
  Date.addingTimeInterval(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v25 = v0;
  id v23 = v10;
  v10(v7, v0);
  Date.addingTimeInterval(_:)();
  uint64_t v24 = v1 + 8;
  unint64_t v22 = (void (**)(char *, char *, uint64_t))(v1 + 32);
  uint64_t v11 = 8;
  do
  {
    sub_100275248();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v12 = (void (*)(char *, void))static Published.subscript.modify();
    id v14 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v12(v26, 0);
    swift_release();
    swift_release();
    Date.addingTimeInterval(_:)();
    uint64_t v15 = v25;
    id v16 = v23;
    v23(v9, v25);
    id v17 = *v22;
    (*v22)(v9, v7, v15);
    Date.addingTimeInterval(_:)();
    v16(v4, v15);
    v17(v4, v7, v15);
    --v11;
  }
  while (v11);
  uint64_t v18 = v25;
  id v19 = (uint64_t (*)(char *, uint64_t))v23;
  v23(v4, v25);
  return v19(v9, v18);
}

id sub_100274694()
{
  return sub_1002746AC(type metadata accessor for WorkoutDetailSwimmingSetPreviewDataSource);
}

id sub_1002746AC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_1002746EC()
{
  return type metadata accessor for WorkoutDetailSwimmingSetPreviewDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSwimmingSetPreviewDataSource(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100952788);
}

uint64_t sub_100274714()
{
  return swift_updateClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for WorkoutDetailSwimmingSetDataSource.Column(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100274818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailSwimmingSetDataSource.Column()
{
  return &type metadata for WorkoutDetailSwimmingSetDataSource.Column;
}

unint64_t sub_100274854()
{
  unint64_t result = qword_100952798;
  if (!qword_100952798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952798);
  }
  return result;
}

uint64_t sub_1002748A8(uint64_t a1)
{
  uint64_t result = sub_100275510((unint64_t *)&qword_1009527A0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSwimmingSetDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100274900@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100274980(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1002749F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100274A2C()
{
  return EnvironmentValues.lineLimit.setter();
}

unint64_t sub_100274A5C(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_100274A6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100274B28(void *a1)
{
  if ((uint64_t)[a1 swolfScore] < 1) {
    return 0;
  }
  if (qword_10094A7A8 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)qword_1009526C8;
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithInteger:[a1 swolfScore]];
  id v4 = [v2 stringFromNumber:v3];

  if (!v4) {
    return 0;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

uint64_t sub_100274C1C(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_1009527A8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v36 = sub_1000AFA94(&qword_1009527B0);
  __chkstk_darwin(v36);
  uint64_t v35 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v34 = sub_1000AFA94(&qword_1009527B8);
  __chkstk_darwin(v34);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009527C0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009527C8);
  __chkstk_darwin(v14);
  id v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v37 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      id v17 = *(id *)(v37 + 8 * a1 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_15;
  }
  id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  switch(a2)
  {
    case 0:
      *(void *)id v13 = static HorizontalAlignment.center.getter();
      *((void *)v13 + 1) = 0;
      v13[16] = 1;
      uint64_t v19 = sub_1000AFA94(&qword_1009527D0);
      sub_100270948(a1, &v13[*(int *)(v19 + 44)]);
      goto LABEL_9;
    case 1:
      sub_1002710C8(v18, (uint64_t)v10);
      uint64_t v31 = sub_100275148(&qword_1009527F0, &qword_1009527B0, &qword_1009527F8, &qword_1009527A8);
      uint64_t v37 = v36;
      uint64_t v38 = v31;
      swift_getOpaqueTypeConformance2();
      goto LABEL_11;
    case 2:
      *(void *)uint64_t v7 = static HorizontalAlignment.leading.getter();
      *((void *)v7 + 1) = 0;
      v7[16] = 1;
      uint64_t v20 = sub_1000AFA94(&qword_1009527E8);
      sub_1002720F0(v18, v2, &v7[*(int *)(v20 + 44)]);
      long long v34 = *(_OWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding);
      uint64_t v21 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 16);
      uint64_t v22 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 24);
      char v23 = static Edge.Set.all.getter();
      uint64_t v24 = v35;
      sub_1000AEF2C((uint64_t)v7, v35, &qword_1009527A8);
      uint64_t v25 = v24 + *(int *)(v36 + 36);
      *(unsigned char *)uint64_t v25 = v23;
      *(_OWORD *)(v25 + 8) = v34;
      *(void *)(v25 + 24) = v21;
      *(void *)(v25 + 32) = v22;
      *(unsigned char *)(v25 + 40) = 0;
      sub_10008DB18((uint64_t)v7, &qword_1009527A8);
      sub_100275148(&qword_1009527F0, &qword_1009527B0, &qword_1009527F8, &qword_1009527A8);
      goto LABEL_11;
    case 3:
      *(void *)id v13 = static HorizontalAlignment.center.getter();
      *((void *)v13 + 1) = 0;
      v13[16] = 1;
      uint64_t v26 = sub_1000AFA94(&qword_1009527D0);
      sub_100270D44(v2, v18, &v13[*(int *)(v26 + 44)]);
LABEL_9:
      long long v36 = *(_OWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding);
      uint64_t v27 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 16);
      uint64_t v28 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSetDataSource_cellPadding + 24);
      char v29 = static Edge.Set.all.getter();
      sub_1000AEF2C((uint64_t)v13, (uint64_t)v16, &qword_1009527C0);
      id v30 = &v16[*(int *)(v14 + 36)];
      *id v30 = v29;
      *(_OWORD *)(v30 + 8) = v36;
      *((void *)v30 + 3) = v27;
      *((void *)v30 + 4) = v28;
      v30[40] = 0;
      sub_10008DB18((uint64_t)v13, &qword_1009527C0);
      sub_100275148(&qword_1009527D8, &qword_1009527C8, &qword_1009527E0, &qword_1009527C0);
LABEL_11:
      uint64_t v32 = AnyView.init<A>(_:)();

      return v32;
    default:
      break;
  }
LABEL_15:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  JUMPOUT(0x100275130);
}

uint64_t sub_100275148(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002751E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100275218()
{
  return EnvironmentValues.lineLimit.setter();
}

unint64_t sub_100275248()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)CHWorkoutSwimmingSet) init];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v4 setStartDate:isa];

  sub_100370078(0x20000000000001uLL);
  Date.addingTimeInterval(_:)();
  Class v6 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setMovementEndDate:v6];

  Class v7 = Date._bridgeToObjectiveC()().super.isa;
  [v4 setEndDate:v7];

  [v4 setDominantStrokeStyle:sub_100370078(5uLL) + 1];
  [v4 setStrokeCount:sub_100370078(0x15uLL) + 10];
  id v8 = [self yardUnit];
  unint64_t result = sub_100020AC4(3uLL);
  if (result > 2)
  {
    __break(1u);
  }
  else
  {
    id v10 = [self quantityWithUnit:v8 doubleValue:*((double *)&off_1008B3660 + result + 4)];

    [v4 setDistance:v10];
    [v4 setSwolfScore:sub_100370078(0x1AuLL) + 25];
    return (unint64_t)v4;
  }
  return result;
}

uint64_t sub_1002754D0()
{
  return swift_deallocObject();
}

uint64_t sub_100275508(uint64_t a1, uint64_t a2)
{
  return sub_1002705A4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100275510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SleepingSampleBaselineRelativeChartPoint.init(date:value:color:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = type metadata accessor for BaselineRelativeValue();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(void *)(a4 + *(int *)(v9 + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for SleepingSampleBaselineRelativeChartPoint()
{
  uint64_t result = qword_1009528B8;
  if (!qword_1009528B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SleepingSampleBaselineRelativeChartPoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Date();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t static SleepingSampleBaselineRelativeChartPoint.__derived_struct_equals(_:_:)()
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  if ((static BaselineRelativeValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static Color.== infix(_:_:)();
}

uint64_t sub_100275768()
{
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static BaselineRelativeValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static Color.== infix(_:_:)();
}

unint64_t sub_1002757E8()
{
  unint64_t result = qword_10094E748;
  if (!qword_10094E748)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E748);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SleepingSampleBaselineRelativeChartPoint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for BaselineRelativeValue();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for BaselineRelativeValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_release();
}

uint64_t initializeWithCopy for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for BaselineRelativeValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for BaselineRelativeValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for BaselineRelativeValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for BaselineRelativeValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100275D78);
}

uint64_t sub_100275D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for BaselineRelativeValue();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleBaselineRelativeChartPoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100275EA0);
}

uint64_t sub_100275EA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for BaselineRelativeValue();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100275FB0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BaselineRelativeValue();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_100276084(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 labelColor];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  *(void *)&v11[v12] = [v10 labelColor];
  id v13 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText] = 0;
  uint64_t v14 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelText];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setAdjustsFontForContentSizeCategory:1];
  id v17 = self;
  id v18 = [v17 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v19 = UILabel.withFont(_:)();

  *(void *)&v11[v15] = v19;
  id v20 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 setAdjustsFontForContentSizeCategory:1];
  uint64_t result = (char *)[v17 systemFontOfSize:UIFontSystemFontDesignRounded weight:30.0 design:UIFontWeightMedium];
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
    uint64_t v24 = UILabel.withFont(_:)();

    *(void *)&v11[v23] = v24;
    uint64_t v25 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaseline;
    id v26 = [v17 preferredFontForTextStyle:UIFontTextStyleBody];
    [v26 _scaledValueForValue:15.0];
    uint64_t v28 = v27;

    *(void *)&v11[v25] = v28;
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint] = 0;
    if (FIUICurrentLanguageRequiresTallScript())
    {
      double v29 = 32.0;
    }
    else
    {
      id v30 = [self sharedApplication];
      id v31 = [v30 preferredContentSizeCategory];

      LOBYTE(v30) = UIContentSizeCategory.isAccessibilityCategory.getter();
      double v29 = 32.0;
      if ((v30 & 1) == 0) {
        double v29 = 29.0;
      }
    }
    *(double *)&v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline] = v29;
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint] = 0;
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_intrinsicContentSizeBottomPadding] = 0x4030000000000000;

    v37.receiver = v11;
    v37.super_class = (Class)type metadata accessor for DayViewTitleAndValueLabelPair();
    uint64_t v32 = (char *)[super initWithFrame:a1, a2, a3, a4];
    uint64_t v33 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel];
    long long v34 = v32;
    [v34 addSubview:v33];
    uint64_t v35 = *(void **)&v34[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel];
    [v34 addSubview:v35];
    [v33 setTextColor:*(void *)&v34[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor]];
    [v35 setTextColor:*(void *)&v34[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor]];
    sub_100276564();
    id v36 = [self defaultCenter];
    [v36 addObserver:v34 selector:"updateFonts" name:UIContentSizeCategoryDidChangeNotification object:0];

    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002764C4(double a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline;
  *(double *)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline] = a1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint];
  if (v3) {
    [v3 setConstant:*(double *)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaseline]];
  }
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint];
  if (v4) {
    [v4 setConstant:*(double *)&v1[v2]];
  }
  [v1 setNeedsLayout];

  return [v1 invalidateIntrinsicContentSize];
}

void sub_100276564()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel];
  id v2 = [v1 leadingAnchor];
  id v3 = [v0 leadingAnchor];
  id v32 = [v2 constraintEqualToAnchor:v3];

  id v4 = [v1 trailingAnchor];
  id v5 = [v0 trailingAnchor];
  id v31 = [v4 constraintEqualToAnchor:v5];

  id v6 = [v1 firstBaselineAnchor];
  id v7 = [v0 topAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7 constant:*(double *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaseline]];

  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint] = v8;
  id v10 = v8;

  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel];
  id v12 = [v11 leadingAnchor];
  id v13 = [v0 leadingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  id v15 = [v11 trailingAnchor];
  id v16 = [v0 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  id v18 = [v11 firstBaselineAnchor];
  id v19 = [v1 firstBaselineAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19 constant:*(double *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline]];

  uint64_t v21 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint] = v20;
  id v22 = v20;

  uint64_t v23 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1007590E0;
  *(void *)(v24 + 32) = v32;
  *(void *)(v24 + 40) = v31;
  *(void *)(v24 + 48) = v10;
  *(void *)(v24 + 56) = v14;
  *(void *)(v24 + 64) = v17;
  *(void *)(v24 + 72) = v22;
  specialized Array._endMutation()();
  sub_1001ABF94();
  id v25 = v10;
  id v26 = v22;
  id v27 = v32;
  id v28 = v31;
  id v29 = v14;
  id v30 = v17;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];
}

id sub_10027690C()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint];
  if (v1) {
    [v1 setConstant:*(double *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaseline]];
  }
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint];
  if (v2) {
    [v2 setConstant:*(double *)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline]];
  }
  [v0 setNeedsLayout];

  return [v0 invalidateIntrinsicContentSize];
}

void sub_100276A2C()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  CGRectGetWidth(v9);
}

id sub_100276ADC(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  double v3 = self;
  CGFloat v4 = v1;
  uint64_t v31 = v2;
  id v32 = v1;
  *(void *)&v1[v2] = [v3 labelColor];
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  *(void *)&v4[v30] = [v3 labelColor];
  double v5 = &v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  *(void *)double v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText] = 0;
  CGFloat v6 = &v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelText];
  *(void *)CGFloat v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  id v8 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setAdjustsFontForContentSizeCategory:1];
  CGRect v9 = self;
  id v10 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v11 = UILabel.withFont(_:)();

  uint64_t v28 = v7;
  *(void *)&v4[v7] = v11;
  id v12 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setAdjustsFontForContentSizeCategory:1];
  id result = [v9 systemFontOfSize:UIFontSystemFontDesignRounded weight:30.0 design:UIFontWeightMedium];
  if (result)
  {
    id v14 = result;
    uint64_t v15 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
    uint64_t v16 = UILabel.withFont(_:)();

    *(void *)&v4[v15] = v16;
    uint64_t v17 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaseline;
    id v18 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
    [v18 _scaledValueForValue:15.0];
    uint64_t v20 = v19;

    *(void *)&v4[v17] = v20;
    uint64_t v21 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleBaselineConstraint] = 0;
    if (FIUICurrentLanguageRequiresTallScript())
    {

      double v22 = 32.0;
    }
    else
    {
      id v23 = [self sharedApplication];
      id v24 = [v23 preferredContentSizeCategory];

      LOBYTE(v23) = UIContentSizeCategory.isAccessibilityCategory.getter();
      double v22 = 32.0;
      if ((v23 & 1) == 0) {
        double v22 = 29.0;
      }
    }
    *(double *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaseline] = v22;
    uint64_t v25 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueBaselineConstraint] = 0;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_intrinsicContentSizeBottomPadding] = 0x4030000000000000;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v26 = *(void **)&v4[v25];
    type metadata accessor for DayViewTitleAndValueLabelPair();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100276EB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewTitleAndValueLabelPair();
  return [super dealloc];
}

uint64_t type metadata accessor for DayViewTitleAndValueLabelPair()
{
  return self;
}

uint64_t sub_100276FD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_100952980);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetricPlatter();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DataLinkMonitor();
  sub_10027BC4C((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
  *(void *)a3 = EnvironmentObject.init()();
  *(void *)(a3 + 8) = v13;
  *(_OWORD *)(a3 + 64) = xmmword_100759120;
  *(void *)(a3 + 56) = a1;
  *(void *)(a3 + 16) = a2;
  id v14 = a1;
  swift_retain();
  MetricsPublisher.platterPublisher.getter();
  type metadata accessor for PlatterPublisher();
  sub_10027BC4C(&qword_100952988, (void (*)(uint64_t))&type metadata accessor for PlatterPublisher);
  *(void *)(a3 + 24) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 32) = v15;
  type metadata accessor for WorkoutNotificationCenter();
  sub_10027BC4C(&qword_100952990, (void (*)(uint64_t))type metadata accessor for WorkoutNotificationCenter);
  swift_retain();
  *(void *)(a3 + 40) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 48) = v16;
  MetricsPublisher.platterPublisher.getter();
  uint64_t v17 = PlatterPublisher.metricPlatters.getter();
  swift_release();
  if (*(void *)(v17 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10008DB18((uint64_t)v8, &qword_100952980);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v18 = a3 + *(int *)(type metadata accessor for MirrorPlatterView() + 44);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v12, v9);
    *(void *)(v18 + *(int *)(sub_1000AFA94(&qword_100952998) + 28)) = 0;
    sub_100277414();

    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorPlatterView()
{
  uint64_t result = qword_1009529F8;
  if (!qword_1009529F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100277414()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v0 - 8);
  uint64_t v40 = v0;
  __chkstk_darwin(v0);
  objc_super v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MetricPlatterType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MetricPlatter();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = 0x80000001007BC9A0;
  unint64_t v53 = 0xD000000000000019;
  unint64_t v54 = 0x80000001007BC9A0;
  swift_retain();
  uint64_t v12 = PlatterPublisher.metricPlatters.getter();
  uint64_t result = swift_release();
  uint64_t v50 = *(void *)(v12 + 16);
  if (v50)
  {
    uint64_t v38 = v2;
    unint64_t v14 = 0;
    unint64_t v48 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v49 = v12;
    uint64_t v46 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v47 = v8 + 16;
    uint64_t v44 = v3;
    uint64_t v45 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    uint64_t v42 = v7;
    id v43 = v6;
    uint64_t v41 = v8;
    while (v14 < *(void *)(v12 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v48 + *(void *)(v8 + 72) * v14, v7);
      v52._countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(22);
      v17._countAndFlagsBits = 0x2065707954;
      v17._object = (void *)0xE500000000000000;
      String.append(_:)(v17);
      MetricPlatter.type.getter();
      _print_unlocked<A, B>(_:_:)();
      (*v46)(v6, v3);
      v18._countAndFlagsBits = 0x64756C636E69202CLL;
      v18._object = (void *)0xEB00000000203A65;
      String.append(_:)(v18);
      char v19 = MetricPlatter.include.getter();
      BOOL v20 = (v19 & 1) == 0;
      if (v19) {
        uint64_t v21 = 1702195828;
      }
      else {
        uint64_t v21 = 0x65736C6166;
      }
      if (v20) {
        unint64_t v22 = 0xE500000000000000;
      }
      else {
        unint64_t v22 = 0xE400000000000000;
      }
      unint64_t v23 = v22;
      String.append(_:)(*(Swift::String *)&v21);
      swift_bridgeObjectRelease();
      v24._countAndFlagsBits = 8236;
      v24._object = (void *)0xE200000000000000;
      String.append(_:)(v24);
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      v52._countAndFlagsBits = 0x3A7363697274656DLL;
      v52._object = (void *)0xE900000000000020;
      uint64_t v25 = MetricPlatter.metrics.getter();
      if (v25)
      {
        uint64_t v26 = v25;
        int64_t v27 = *(void *)(v25 + 16);
        if (v27)
        {
          uint64_t v51 = _swiftEmptyArrayStorage;
          sub_1001C9190(0, v27, 0);
          uint64_t v28 = 0;
          id v29 = v51;
          unint64_t v30 = v51[2];
          do
          {
            uint64_t v31 = *(void *)(v26 + 8 * v28 + 32);
            uint64_t v51 = v29;
            unint64_t v32 = v29[3];
            if (v30 >= v32 >> 1)
            {
              sub_1001C9190(v32 > 1, v30 + 1, 1);
              id v29 = v51;
            }
            ++v28;
            v29[2] = v30 + 1;
            v29[v30++ + 4] = v31;
          }
          while (v27 != v28);
          swift_bridgeObjectRelease();
          uint64_t v6 = v43;
          uint64_t v3 = v44;
          uint64_t v8 = v41;
          uint64_t v7 = v42;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      ++v14;
      v15._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16._countAndFlagsBits = 10;
      v16._object = (void *)0xE100000000000000;
      String.append(_:)(v16);
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      uint64_t result = (*v45)(v10, v7);
      uint64_t v12 = v49;
      if (v14 == v50)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v53;
        unint64_t v11 = v54;
        objc_super v2 = v38;
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = 0xD000000000000019;
LABEL_21:
    static WOLog.dataLink.getter();
    swift_bridgeObjectRetain();
    long long v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      id v36 = v2;
      objc_super v37 = (uint8_t *)swift_slowAlloc();
      v52._countAndFlagsBits = swift_slowAlloc();
      *(_DWORD *)objc_super v37 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v51 = (void *)sub_10008F1F4(v33, v11, &v52._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v36, v40);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v2, v40);
    }
  }
  return result;
}

uint64_t sub_100277A4C(uint64_t a1)
{
  v26[1] = a1;
  uint64_t v1 = type metadata accessor for WorkoutNotification.NotificationType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  int64_t v27 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)v26 - v5;
  uint64_t v6 = type metadata accessor for MetricPlatterType();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v26 - v11;
  uint64_t v13 = type metadata accessor for MetricPlatter();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MirrorPlatterView();
  sub_1000AFA94(&qword_100952998);
  State.wrappedValue.getter();
  MetricPlatter.type.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for MetricPlatterType.interval(_:), v6);
  sub_10027BC4C(&qword_100952D90, (void (*)(uint64_t))&type metadata accessor for MetricPlatterType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v31 == v29 && v32 == v30)
  {
    swift_bridgeObjectRelease_n();
    Swift::String v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v10, v6);
    v19(v12, v6);
    if ((v18 & 1) == 0) {
      return 1;
    }
  }
  BOOL v20 = v28;
  dispatch thunk of WorkoutNotification.notificationType.getter();
  uint64_t v21 = v27;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v27, enum case for WorkoutNotification.NotificationType.zone(_:), v1);
  sub_10027BC4C(&qword_100952D98, (void (*)(uint64_t))&type metadata accessor for WorkoutNotification.NotificationType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v31 == v29 && v32 == v30)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v22 = *(void (**)(char *, uint64_t))(v2 + 8);
    v22(v21, v1);
    v22(v20, v1);
    return 0;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v2 + 8);
  v25(v21, v1);
  v25(v20, v1);
  uint64_t result = 0;
  if ((v24 & 1) == 0) {
    return 1;
  }
  return result;
}

uint64_t sub_100277F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100952A50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10027803C(v2, (uint64_t)v6);
  uint64_t v7 = static Animation.default.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v11[1];
  sub_1000AEF2C((uint64_t)v6, a1, &qword_100952A50);
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(sub_1000AFA94(&qword_100952A58) + 36));
  *uint64_t v9 = v7;
  v9[1] = v8;
  return sub_10008DB18((uint64_t)v6, &qword_100952A50);
}

uint64_t sub_10027803C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v156 = (void *)type metadata accessor for MetricPlatter();
  uint64_t v141 = *(v156 - 1);
  __chkstk_darwin(v156);
  uint64_t v140 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PageTabViewStyle.IndexDisplayMode();
  __chkstk_darwin(v4 - 8);
  char v125 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for PageTabViewStyle();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v127 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100952A60);
  __chkstk_darwin(v7 - 8);
  char v120 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000AFA94(&qword_100952A68);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1000AFA94(&qword_100952A70);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000AFA94(&qword_100952A78);
  __chkstk_darwin(v122);
  uint64_t v132 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1000AFA94(&qword_100952A80);
  __chkstk_darwin(v133);
  uint64_t v134 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1000AFA94(&qword_100952A88);
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1000AFA94(&qword_100952A90);
  uint64_t v14 = __chkstk_darwin(v154);
  uint64_t v135 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v139 = (uint64_t)&v108 - v16;
  uint64_t v152 = sub_1000AFA94(&qword_100952A98);
  __chkstk_darwin(v152);
  uint64_t v153 = (uint64_t)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for MirrorPlatterView();
  uint64_t v147 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v148 = v18;
  uint64_t v151 = (uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MoveTransition();
  uint64_t v145 = *(void *)(v19 - 8);
  uint64_t v146 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v143 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v144 = (char *)&v108 - v22;
  uint64_t v114 = type metadata accessor for WorkoutViewStyle();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  char v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for WorkoutNotificationView();
  uint64_t v112 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  int64_t v27 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000AFA94(&qword_100952AA0);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_100952AA8);
  __chkstk_darwin(v108);
  uint64_t v31 = (char *)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000AFA94(&qword_100952AB0);
  __chkstk_darwin(v109);
  uint64_t v33 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1000AFA94(&qword_100952AB8);
  __chkstk_darwin(v149);
  uint64_t v116 = (uint64_t)&v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1000AFA94(&qword_100952AC0);
  uint64_t v118 = *(void (**)(uint64_t))(v150 - 8);
  uint64_t v35 = __chkstk_darwin(v150);
  uint64_t v115 = (char *)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v117 = (char *)&v108 - v37;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v38 = a1;
  swift_release();
  uint64_t v39 = v157;
  uint64_t v142 = a1;
  if (!v157) {
    goto LABEL_7;
  }
  if ((sub_100277A4C((uint64_t)v157) & 1) == 0)
  {

LABEL_7:
    uint64_t v119 = a1 + *(int *)(v119 + 44);
    sub_1000AFA94(&qword_100952998);
    uint64_t v68 = v120;
    State.projectedValue.getter();
    uint64_t v69 = sub_1000AFA94(&qword_100952AC8);
    uint64_t v70 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
    __chkstk_darwin(v70);
    *(&v108 - 2) = a1;
    sub_1000AFA94(&qword_100952AD0);
    uint64_t v118 = (void (*)(uint64_t))&type metadata accessor for MetricPlatter;
    sub_10027BC4C(&qword_100952AD8, (void (*)(uint64_t))&type metadata accessor for MetricPlatter);
    sub_10027BD70(&qword_100952AE0, &qword_100952AD0, (void (*)(void))sub_10027A91C);
    double v71 = v121;
    TabView.init(selection:content:)();
    static PageTabViewStyle.IndexDisplayMode.automatic.getter();
    CGFloat v72 = v127;
    PageTabViewStyle.init(indexDisplayMode:)();
    sub_1000A132C(&qword_100952D30, &qword_100952A68);
    double v73 = v126;
    uint64_t v74 = v124;
    uint64_t v75 = v131;
    View.tabViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v72, v75);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v71, v74);
    char v76 = static Edge.Set.bottom.getter();
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    EdgeInsets.init(_all:)();
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v85 = v128;
    uint64_t v86 = (uint64_t)v132;
    uint64_t v87 = v129;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v132, v73, v129);
    uint64_t v88 = v86 + *(int *)(v122 + 36);
    *(unsigned char *)uint64_t v88 = v76;
    *(void *)(v88 + 8) = v78;
    *(void *)(v88 + 16) = v80;
    *(void *)(v88 + 24) = v82;
    *(void *)(v88 + 32) = v84;
    *(unsigned char *)(v88 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v73, v87);
    char v89 = v144;
    MoveTransition.init(edge:)();
    uint64_t v91 = v145;
    uint64_t v90 = v146;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v143, v89, v146);
    sub_10027BC4C(&qword_100952D38, (void (*)(uint64_t))&type metadata accessor for MoveTransition);
    uint64_t v92 = AnyTransition.init<A>(_:)();
    uint64_t v93 = v134;
    sub_1000AEF2C(v86, v134, &qword_100952A78);
    *(void *)(v93 + *(int *)(v133 + 36)) = v92;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v90);
    sub_10008DB18(v86, &qword_100952A78);
    uint64_t v94 = v140;
    State.wrappedValue.getter();
    uint64_t v95 = v151;
    sub_10027B5E0(v38, v151);
    unint64_t v96 = (*(unsigned __int8 *)(v147 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    uint64_t v97 = swift_allocObject();
    sub_10027B648(v95, v97 + v96);
    sub_10027B6C4();
    sub_10027BC4C(&qword_100952D60, v118);
    uint64_t v98 = v136;
    unint64_t v99 = v156;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, void *))(v141 + 8))(v94, v99);
    sub_10008DB18(v93, &qword_100952A80);
    sub_10027B5E0(v142, v95);
    uint64_t v100 = swift_allocObject();
    sub_10027B648(v95, v100 + v96);
    uint64_t v101 = v137;
    uint64_t v102 = v135;
    uint64_t v103 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v135, v98, v138);
    id v104 = &v102[*(int *)(v154 + 36)];
    *(void *)id v104 = 0;
    *((void *)v104 + 1) = 0;
    *((void *)v104 + 2) = sub_10027B85C;
    *((void *)v104 + 3) = v100;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v103);
    uint64_t v105 = (uint64_t)v102;
    uint64_t v106 = v139;
    sub_1000AEEC8(v105, v139, &qword_100952A90);
    sub_1000AEF2C(v106, v153, &qword_100952A90);
    swift_storeEnumTagMultiPayload();
    unint64_t v107 = sub_10027B874();
    uint64_t v157 = (void *)v149;
    unint64_t v158 = v107;
    swift_getOpaqueTypeConformance2();
    sub_10027BA38();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v106, &qword_100952A90);
  }
  uint64_t v40 = *(void **)(a1 + 56);
  uint64_t v41 = v39;
  id v42 = v40;
  uint64_t v156 = v41;
  WorkoutNotificationView.init(notification:formattingManager:)();
  uint64_t v43 = v113;
  uint64_t v44 = v114;
  (*(void (**)(char *, void, uint64_t))(v113 + 104))(v24, enum case for WorkoutViewStyle.iOSNotificationMetric(_:), v114);
  sub_10027BC4C(&qword_100952D80, (void (*)(uint64_t))&type metadata accessor for WorkoutNotificationView);
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v44);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v27, v25);
  uint64_t v45 = v110;
  uint64_t v46 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v31, v29, v111);
  v31[*(int *)(v108 + 36)] = 0;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
  uint64_t v47 = *(void *)(v142 + 72);
  if (qword_10094AFD0 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_100998628;
  uint64_t v49 = *(void *)(v38 + 64);
  char v50 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v31, (uint64_t)v33, &qword_100952AA8);
  uint64_t v51 = &v33[*(int *)(v109 + 36)];
  char *v51 = v50;
  *((void *)v51 + 1) = v47;
  *((void *)v51 + 2) = v48;
  *((void *)v51 + 3) = v49;
  *((void *)v51 + 4) = v48;
  v51[40] = 0;
  sub_10008DB18((uint64_t)v31, &qword_100952AA8);
  Swift::String v52 = v144;
  MoveTransition.init(edge:)();
  uint64_t v54 = v145;
  uint64_t v53 = v146;
  (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v143, v52, v146);
  sub_10027BC4C(&qword_100952D38, (void (*)(uint64_t))&type metadata accessor for MoveTransition);
  uint64_t v55 = AnyTransition.init<A>(_:)();
  uint64_t v56 = v116;
  sub_1000AEF2C((uint64_t)v33, v116, &qword_100952AB0);
  uint64_t v57 = v149;
  *(void *)(v56 + *(int *)(v149 + 36)) = v55;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
  sub_10008DB18((uint64_t)v33, &qword_100952AB0);
  uint64_t v58 = v151;
  sub_10027B5E0(v38, v151);
  unint64_t v59 = (*(unsigned __int8 *)(v147 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
  uint64_t v60 = swift_allocObject();
  sub_10027B648(v58, v60 + v59);
  unint64_t v61 = sub_10027B874();
  id v62 = v115;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v56, &qword_100952AB8);
  id v63 = v118;
  unint64_t v64 = v117;
  char v65 = v62;
  uint64_t v66 = v150;
  (*((void (**)(char *, char *, uint64_t))v118 + 4))(v117, v65, v150);
  (*((void (**)(uint64_t, char *, uint64_t))v63 + 2))(v153, v64, v66);
  swift_storeEnumTagMultiPayload();
  uint64_t v157 = (void *)v57;
  unint64_t v158 = v61;
  swift_getOpaqueTypeConformance2();
  sub_10027BA38();
  _ConditionalContent<>.init(storage:)();

  return (*((uint64_t (**)(char *, uint64_t))v63 + 1))(v64, v66);
}

uint64_t sub_100279458()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (void *)((char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  swift_retain();
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v6[1] = 0;
    swift_retain();
    static Published.subscript.setter();
    sub_1004CC714();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002795DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MirrorPlatterView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  swift_retain();
  uint64_t v5 = PlatterPublisher.metricPlatters.getter();
  swift_release();
  v9[1] = v5;
  sub_10027B5E0(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_10027B648((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  sub_1000AFA94(&qword_100952DA0);
  sub_1000AFA94(&qword_100952AF0);
  sub_1000A132C(&qword_100952DA8, &qword_100952DA0);
  sub_10027A91C();
  sub_10027BC4C(&qword_100952DB0, (void (*)(uint64_t))&type metadata accessor for MetricPlatter);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1002797B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_100952DB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100952DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000AFA94(&qword_100952B10);
  __chkstk_darwin(v44);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100952B20);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000AFA94(&qword_100952B00);
  __chkstk_darwin(v45);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000AFA94(&qword_100952AF0);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)(a2 + 16);
  uint64_t v19 = *(void **)(a2 + 56);
  MetricsPublisher.workoutStatePublisher.getter();
  uint64_t v20 = (void *)WorkoutStatePublisher.activityType.getter();
  swift_release();
  uint64_t v49 = v16;
  if (!v20)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    uint64_t v20 = (void *)static FIUIWorkoutActivityType.outdoorCycle.getter();
  }
  uint64_t v21 = FIActivityMoveModeUserDefault();
  sub_1005FE484(v18, v19, v20, v21, (uint64_t)v14);

  uint64_t v22 = type metadata accessor for MetricPlatter();
  uint64_t v23 = *(void *)(v22 - 8);
  char v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24(v9, a1, v22);
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  v25(v9, 0, 1, v22);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)&v11[*(int *)(v44 + 36)], &qword_100952DC0);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_100952B20);
  sub_10008DB18((uint64_t)v9, &qword_100952DC0);
  uint64_t v26 = (uint64_t)v46;
  v24(v46, a1, v22);
  v25((char *)v26, 0, 1, v22);
  uint64_t v27 = sub_1000AFA94(&qword_100952980);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  uint64_t v28 = (uint64_t)v49;
  sub_1000AEF2C(v26, (uint64_t)&v49[*(int *)(v45 + 36)], &qword_100952DB8);
  sub_1000AEF2C((uint64_t)v11, v28, &qword_100952B10);
  sub_10008DB18(v26, &qword_100952DB8);
  sub_10008DB18((uint64_t)v11, &qword_100952B10);
  sub_10008DB18((uint64_t)v14, &qword_100952B20);
  unsigned __int8 v29 = static Edge.Set.leading.getter();
  unsigned __int8 v30 = static Edge.Set.trailing.getter();
  char v31 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v29) {
    char v31 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v30) {
    char v31 = Edge.Set.init(rawValue:)();
  }
  if (qword_10094AFD0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v48;
  sub_1000AEF2C(v28, v48, &qword_100952B00);
  uint64_t v41 = v40 + *(int *)(v47 + 36);
  *(unsigned char *)uint64_t v41 = v31;
  *(void *)(v41 + 8) = v33;
  *(void *)(v41 + 16) = v35;
  *(void *)(v41 + 24) = v37;
  *(void *)(v41 + 32) = v39;
  *(unsigned char *)(v41 + 40) = 0;
  sub_10008DB18(v28, &qword_100952B00);
  return sub_1000AEEC8(v40, v50, &qword_100952AF0);
}

uint64_t sub_100279D08(void *a1)
{
  uint64_t v2 = type metadata accessor for MetricPlatterType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricPlatter();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MirrorPlatterView();
  sub_1000AFA94(&qword_100952998);
  State.wrappedValue.getter();
  MetricPlatter.type.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = MetricPlatterType.bridgedValue.getter();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  MetricsPublisher.elapsedTimeMetricsPublisher.getter();
  ElapsedTimeMetricsPublisher.elapsedTime.getter();
  double v14 = v13;
  swift_release();
  if (*a1)
  {
    swift_retain();
    sub_100269F40(v10, v12, v14);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_10027BC4C((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100279F64(void *a1)
{
  MetricsPublisher.elapsedTimeMetricsPublisher.getter();
  ElapsedTimeMetricsPublisher.elapsedTime.getter();
  double v3 = v2;
  swift_release();
  if (*a1)
  {
    swift_retain();
    sub_100269F40(0, 0, v3);
    return swift_release();
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_10027BC4C((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

char *sub_10027A04C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    uint64_t v7 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v7;
    uint64_t v8 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v8;
    uint64_t v9 = a2[7];
    *((void *)a1 + 7) = v9;
    uint64_t v10 = *(int *)(a3 + 44);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    uint64_t v13 = type metadata accessor for MetricPlatter();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    double v14 = v4;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = v9;
    v18(v11, v12, v13);
    uint64_t v16 = sub_1000AFA94(&qword_100952998);
    *(void *)&v11[*(int *)(v16 + 28)] = *(void *)(v12 + *(int *)(v16 + 28));
  }
  swift_retain();
  return v5;
}

uint64_t sub_10027A1A0(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();

  uint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for MetricPlatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000AFA94(&qword_100952998);

  return swift_release();
}

uint64_t sub_10027A250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v12 = type metadata accessor for MetricPlatter();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v13 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  id v14 = v8;
  v17(v10, v11, v12);
  uint64_t v15 = sub_1000AFA94(&qword_100952998);
  *(void *)(v10 + *(int *)(v15 + 28)) = *(void *)(v11 + *(int *)(v15 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_10027A354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void **)(a2 + 56);
  uint64_t v10 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v9;
  id v11 = v9;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for MetricPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = sub_1000AFA94(&qword_100952998);
  *(void *)(v13 + *(int *)(v16 + 28)) = *(void *)(v14 + *(int *)(v16 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10027A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = type metadata accessor for MetricPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = sub_1000AFA94(&qword_100952998);
  *(void *)(v5 + *(int *)(v8 + 28)) = *(void *)(v6 + *(int *)(v8 + 28));
  return a1;
}

uint64_t sub_10027A54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_release();
  uint64_t v10 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for MetricPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = sub_1000AFA94(&qword_100952998);
  *(void *)(v12 + *(int *)(v15 + 28)) = *(void *)(v13 + *(int *)(v15 + 28));
  swift_release();
  return a1;
}

uint64_t sub_10027A640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027A654);
}

uint64_t sub_10027A654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_100952998);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10027A708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027A71C);
}

uint64_t sub_10027A71C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_100952998);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10027A7C8()
{
  sub_10027A898();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10027A898()
{
  if (!qword_100952A08)
  {
    type metadata accessor for MetricPlatter();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100952A08);
    }
  }
}

uint64_t sub_10027A8F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10027A914()
{
  return sub_1002795DC(*(void *)(v0 + 16));
}

uint64_t sub_10027A91C()
{
  return sub_10027ABD0(&qword_100952AE8, &qword_100952AF0, (void (*)(void))sub_10027A944);
}

unint64_t sub_10027A944()
{
  unint64_t result = qword_100952AF8;
  if (!qword_100952AF8)
  {
    sub_1000A1370(&qword_100952B00);
    sub_10027A9E4();
    sub_1000A132C(&qword_100952D20, &qword_100952D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952AF8);
  }
  return result;
}

unint64_t sub_10027A9E4()
{
  unint64_t result = qword_100952B08;
  if (!qword_100952B08)
  {
    sub_1000A1370(&qword_100952B10);
    sub_10027B284(&qword_100952B18, &qword_100952B20, (void (*)(void))sub_10027AABC, (void (*)(void))sub_10027B03C);
    sub_1000A132C(&qword_100952D10, &qword_100952D18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952B08);
  }
  return result;
}

uint64_t sub_10027AABC()
{
  return sub_10027B284(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
}

uint64_t sub_10027AAF8()
{
  return sub_10027B284(&qword_100952B38, &qword_100952B40, (void (*)(void))sub_10027AB34, (void (*)(void))sub_10027ACA4);
}

unint64_t sub_10027AB34()
{
  unint64_t result = qword_100952B48;
  if (!qword_100952B48)
  {
    sub_1000A1370(&qword_100952B50);
    sub_10027ABA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952B48);
  }
  return result;
}

uint64_t sub_10027ABA8()
{
  return sub_10027ABD0(&qword_100952B58, &qword_100952B60, (void (*)(void))sub_10027AC50);
}

uint64_t sub_10027ABD0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10027AC50()
{
  unint64_t result = qword_100952B68;
  if (!qword_100952B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952B68);
  }
  return result;
}

uint64_t sub_10027ACA4()
{
  return sub_10027B284(&qword_100952B70, &qword_100952B78, (void (*)(void))sub_10027ABA8, (void (*)(void))sub_10027ACE0);
}

unint64_t sub_10027ACE0()
{
  unint64_t result = qword_100952B80;
  if (!qword_100952B80)
  {
    sub_1000A1370(&qword_100952B88);
    sub_10027BC4C(&qword_100952B90, (void (*)(uint64_t))type metadata accessor for MirrorGraphicsMetricsView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952B80);
  }
  return result;
}

uint64_t sub_10027AD8C()
{
  return sub_10027B284(&qword_100952B98, &qword_100952BA0, (void (*)(void))sub_10027ADC8, (void (*)(void))sub_10027AEB0);
}

uint64_t sub_10027ADC8()
{
  return sub_10027B284(&qword_100952BA8, &qword_100952BB0, (void (*)(void))sub_10027ACE0, (void (*)(void))sub_10027AE04);
}

unint64_t sub_10027AE04()
{
  unint64_t result = qword_100952BB8;
  if (!qword_100952BB8)
  {
    sub_1000A1370(&qword_100952BC0);
    sub_10027BC4C(&qword_100952BC8, (void (*)(uint64_t))type metadata accessor for MirrorActivityRingsPlatterView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952BB8);
  }
  return result;
}

uint64_t sub_10027AEB0()
{
  return sub_10027B284(&qword_100952BD0, &qword_100952BD8, (void (*)(void))sub_10027AEEC, (void (*)(void))sub_10027AF90);
}

uint64_t sub_10027AEEC()
{
  return sub_10027ABD0(&qword_100952BE0, &qword_100952BE8, (void (*)(void))sub_10027AF14);
}

uint64_t sub_10027AF14()
{
  return sub_10027ABD0(&qword_100952BF0, &qword_100952BF8, (void (*)(void))sub_10027AF3C);
}

unint64_t sub_10027AF3C()
{
  unint64_t result = qword_100952C00;
  if (!qword_100952C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952C00);
  }
  return result;
}

unint64_t sub_10027AF90()
{
  unint64_t result = qword_100952C08;
  if (!qword_100952C08)
  {
    sub_1000A1370(&qword_100952C10);
    sub_10027BC4C(&qword_100952C18, (void (*)(uint64_t))type metadata accessor for MirrorHeartRateZonesMetricsPlatter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952C08);
  }
  return result;
}

uint64_t sub_10027B03C()
{
  return sub_10027B284(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
}

uint64_t sub_10027B078()
{
  return sub_10027B284(&qword_100952C30, &qword_100952C38, (void (*)(void))sub_10027B0B4, (void (*)(void))sub_10027B248);
}

uint64_t sub_10027B0B4()
{
  return sub_10027B284(&qword_100952C40, &qword_100952C48, (void (*)(void))sub_10027B0F0, (void (*)(void))sub_10027B19C);
}

unint64_t sub_10027B0F0()
{
  unint64_t result = qword_100952C50;
  if (!qword_100952C50)
  {
    sub_1000A1370(&qword_100952C58);
    sub_10027BC4C(&qword_100952C60, (void (*)(uint64_t))type metadata accessor for MirrorSpeedometerPlatterView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952C50);
  }
  return result;
}

unint64_t sub_10027B19C()
{
  unint64_t result = qword_100952C68;
  if (!qword_100952C68)
  {
    sub_1000A1370(&qword_100952C70);
    sub_10027BC4C(&qword_100952C78, (void (*)(uint64_t))type metadata accessor for MirrorPowerZonesMetricsPlatter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952C68);
  }
  return result;
}

uint64_t sub_10027B248()
{
  return sub_10027B284(&qword_100952C80, &qword_100952C88, (void (*)(void))sub_10027B30C, (void (*)(void))sub_10027B388);
}

uint64_t sub_10027B284(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10027B30C()
{
  return sub_10027ABD0(&qword_100952C90, &qword_100952C98, (void (*)(void))sub_10027B334);
}

unint64_t sub_10027B334()
{
  unint64_t result = qword_100952CA0;
  if (!qword_100952CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952CA0);
  }
  return result;
}

uint64_t sub_10027B388()
{
  return sub_10027ABD0(&qword_100952CA8, &qword_100952CB0, (void (*)(void))sub_10027B3B0);
}

unint64_t sub_10027B3B0()
{
  unint64_t result = qword_100952CB8;
  if (!qword_100952CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952CB8);
  }
  return result;
}

unint64_t sub_10027B404()
{
  unint64_t result = qword_100952CC0;
  if (!qword_100952CC0)
  {
    sub_1000A1370(&qword_100952CC8);
    sub_10027B284(&qword_100952CD0, &qword_100952CD8, (void (*)(void))sub_10027B4B8, (void (*)(void))sub_10027B564);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952CC0);
  }
  return result;
}

unint64_t sub_10027B4B8()
{
  unint64_t result = qword_100952CE0;
  if (!qword_100952CE0)
  {
    sub_1000A1370(&qword_100952CE8);
    sub_10027BC4C(&qword_100952CF0, (void (*)(uint64_t))type metadata accessor for MirrorRaceMetricPlatterView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952CE0);
  }
  return result;
}

uint64_t sub_10027B564()
{
  return sub_10027ABD0(&qword_100952CF8, &qword_100952D00, (void (*)(void))sub_10027B58C);
}

unint64_t sub_10027B58C()
{
  unint64_t result = qword_100952D08;
  if (!qword_100952D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D08);
  }
  return result;
}

uint64_t sub_10027B5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorPlatterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027B648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorPlatterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027B6AC()
{
  return sub_10027BB54((uint64_t (*)(uint64_t))sub_100279D08);
}

unint64_t sub_10027B6C4()
{
  unint64_t result = qword_100952D40;
  if (!qword_100952D40)
  {
    sub_1000A1370(&qword_100952A80);
    sub_10027B764();
    sub_1000A132C(&qword_100952D50, &qword_100952D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D40);
  }
  return result;
}

unint64_t sub_10027B764()
{
  unint64_t result = qword_100952D48;
  if (!qword_100952D48)
  {
    sub_1000A1370(&qword_100952A78);
    sub_1000A1370(&qword_100952A68);
    type metadata accessor for PageTabViewStyle();
    sub_1000A132C(&qword_100952D30, &qword_100952A68);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D48);
  }
  return result;
}

uint64_t sub_10027B85C()
{
  return sub_10027BB54((uint64_t (*)(uint64_t))sub_100279F64);
}

unint64_t sub_10027B874()
{
  unint64_t result = qword_100952D68;
  if (!qword_100952D68)
  {
    sub_1000A1370(&qword_100952AB8);
    sub_10027ABD0(&qword_100952D70, &qword_100952AB0, (void (*)(void))sub_10027B938);
    sub_1000A132C(&qword_100952D50, &qword_100952D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D68);
  }
  return result;
}

unint64_t sub_10027B938()
{
  unint64_t result = qword_100952D78;
  if (!qword_100952D78)
  {
    sub_1000A1370(&qword_100952AA8);
    type metadata accessor for WorkoutNotificationView();
    sub_10027BC4C(&qword_100952D80, (void (*)(uint64_t))&type metadata accessor for WorkoutNotificationView);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D78);
  }
  return result;
}

unint64_t sub_10027BA38()
{
  unint64_t result = qword_100952D88;
  if (!qword_100952D88)
  {
    sub_1000A1370(&qword_100952A90);
    sub_1000A1370(&qword_100952A80);
    type metadata accessor for MetricPlatter();
    sub_10027B6C4();
    sub_10027BC4C(&qword_100952D60, (void (*)(uint64_t))&type metadata accessor for MetricPlatter);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952D88);
  }
  return result;
}

uint64_t sub_10027BB3C()
{
  return sub_10027BB54((uint64_t (*)(uint64_t))sub_100279458);
}

uint64_t sub_10027BB54(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for MirrorPlatterView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10027BBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MirrorPlatterView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1002797B8(a1, v6, a2);
}

uint64_t sub_10027BC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10027BC98()
{
  unint64_t result = qword_100952DC8;
  if (!qword_100952DC8)
  {
    sub_1000A1370(&qword_100952A58);
    sub_10027BD70(&qword_100952DD0, &qword_100952A50, (void (*)(void))sub_10027BDDC);
    sub_1000A132C(&qword_100952DE8, &qword_100952DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952DC8);
  }
  return result;
}

uint64_t sub_10027BD70(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10027BDDC()
{
  unint64_t result = qword_100952DD8;
  if (!qword_100952DD8)
  {
    sub_1000A1370(&qword_100952DE0);
    sub_1000A1370(&qword_100952AB8);
    sub_10027B874();
    swift_getOpaqueTypeConformance2();
    sub_10027BA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952DD8);
  }
  return result;
}

uint64_t sub_10027BF40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10027C03C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10027C0BC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_10027C25C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GoalDaysModel();
  return [super dealloc];
}

uint64_t sub_10027C304()
{
  return type metadata accessor for GoalDaysModel();
}

uint64_t type metadata accessor for GoalDaysModel()
{
  uint64_t result = qword_100952E28;
  if (!qword_100952E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10027C358()
{
  sub_10027C3F4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10027C3F4()
{
  if (!qword_100952E38)
  {
    sub_1000A1370(&qword_100952E40);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100952E38);
    }
  }
}

uint64_t sub_10027C450@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GoalDaysModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_10027C498()
{
  id result = sub_10027C4B8();
  qword_100952E50 = (uint64_t)result;
  return result;
}

id sub_10027C4B8()
{
  uint64_t v0 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setLocalizedDateFormatFromTemplate:v4];

  TimeZone.init(secondsFromGMT:)();
  uint64_t v5 = type metadata accessor for TimeZone();
  uint64_t v6 = *(void *)(v5 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
  {
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  [v3 setTimeZone:isa];

  if (qword_10094A5F0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Calendar();
  sub_1000876DC(v8, (uint64_t)qword_100997628);
  Class v9 = Calendar._bridgeToObjectiveC()().super.isa;
  [v3 setCalendar:v9];

  return v3;
}

Swift::Int sub_10027C690()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_10027C6D8()
{
  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_10027C708()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_10027C74C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10027C798(*a1);
  *a2 = result;
  return result;
}

void sub_10027C778(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_10027C788(void *a1@<X8>)
{
  *a1 = &off_1008B3730;
}

uint64_t sub_10027C798(unint64_t a1)
{
  if (a1 >= 8) {
    return 7;
  }
  else {
    return (0x605040302010007uLL >> (8 * a1));
  }
}

unsigned char *storeEnumTagSinglePayload for ActivityDayOfWeek(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10027C88CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDayOfWeek()
{
  return &type metadata for ActivityDayOfWeek;
}

unint64_t sub_10027C8C8()
{
  unint64_t result = qword_100952E58;
  if (!qword_100952E58)
  {
    sub_1000A1370(&qword_100952E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952E58);
  }
  return result;
}

unint64_t sub_10027C928()
{
  unint64_t result = qword_100952E68;
  if (!qword_100952E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952E68);
  }
  return result;
}

uint64_t destroy for SleepingSampleSmoothedLineTrace()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SleepingSampleSmoothedLineTrace(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SleepingSampleSmoothedLineTrace(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for SleepingSampleSmoothedLineTrace(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SleepingSampleSmoothedLineTrace(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleSmoothedLineTrace(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleSmoothedLineTrace(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleSmoothedLineTrace()
{
  return &type metadata for SleepingSampleSmoothedLineTrace;
}

uint64_t sub_10027CC30()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10027CC4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __n128 result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = *(void *)(type metadata accessor for SleepingSampleSingleMetricChartPoint() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      swift_retain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += v6;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10027CD68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v35 = a1;
  uint64_t v28 = sub_1000AFA94(&qword_100952E70);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_100952E78);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v27 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_100952E80);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unsigned __int8 v30 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)v2;
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = *(_OWORD *)(v2 + 48);
  v7[3] = *(_OWORD *)(v2 + 32);
  void v7[4] = v8;
  *(_OWORD *)((char *)v7 + 73) = *(_OWORD *)(v2 + 57);
  long long v9 = *(_OWORD *)(v2 + 16);
  v7[1] = *(_OWORD *)v2;
  v7[2] = v9;
  swift_bridgeObjectRetain();
  sub_10027E670(v2);
  v26[1] = sub_1000AFA94(&qword_100952E88);
  v26[0] = type metadata accessor for Date();
  sub_1000AFA94(&qword_100952E90);
  sub_1000A132C(&qword_100952E98, &qword_100952E88);
  uint64_t v10 = sub_1000A1370(&qword_100952EA0);
  uint64_t v11 = sub_1000A1370(&qword_100952EA8);
  uint64_t v38 = type metadata accessor for LineMark();
  *(void *)&long long v39 = &protocol witness table for LineMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v13 = sub_1000A132C(&qword_100952EB0, &qword_100952EA8);
  uint64_t v38 = v10;
  *(void *)&long long v39 = v11;
  *((void *)&v39 + 1) = OpaqueTypeConformance2;
  *(void *)&long long v40 = v13;
  swift_getOpaqueTypeConformance2();
  sub_10027E6B8();
  ForEach<>.init(_:content:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  unint64_t v14 = sub_10027E710();
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  ChartContent.lineStyle(_:)();
  sub_100265034((uint64_t)v42);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v16);
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_10027CC4C(v18);
  swift_bridgeObjectRelease();
  static UnitPoint.leading.getter();
  static UnitPoint.trailing.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v38 = v43;
  long long v39 = v44;
  long long v40 = v45;
  int v41 = 1053609165;
  uint64_t v19 = sub_1000AFA94(&qword_100952EC8);
  uint64_t v36 = v17;
  unint64_t v37 = v14;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_1000A132C(&qword_100952ED0, &qword_100952EC8);
  uint64_t v22 = v30;
  uint64_t v23 = v31;
  ChartContent.foregroundStyle<A>(_:)();
  sub_1000B1AE0((uint64_t)&v43);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v23);
  uint64_t v38 = v23;
  *(void *)&long long v39 = v19;
  *((void *)&v39 + 1) = v20;
  *(void *)&long long v40 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v33;
  ChartContent.interpolationMethod(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v24);
}

uint64_t sub_10027D350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v31 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100952050);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar.Component();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v12 - 8);
  uint64_t v29 = type metadata accessor for LineMark();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100952EA0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  uint64_t v37 = v16;
  __chkstk_darwin(v15);
  uint64_t v28 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100952E90);
  uint64_t v33 = *(void *)(v18 - 8);
  uint64_t v34 = v18;
  __chkstk_darwin(v18);
  unsigned __int8 v30 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Calendar.Component.day(_:), v8);
  uint64_t v20 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  uint64_t v21 = v31;
  static PlottableValue.value<>(_:_:unit:calendar:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_1009546C0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v42 = *(void *)(v21 + *(int *)(type metadata accessor for SleepingSampleSingleMetricChartPoint() + 20));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  LineMark.init<A, B>(x:y:)();
  uint64_t v22 = v38;
  uint64_t v24 = v28;
  uint64_t v23 = v29;
  ChartContent.opacity(_:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v23);
  uint64_t v40 = v22;
  uint64_t v41 = v21;
  sub_1000AFA94(&qword_100952EA8);
  uint64_t v42 = v23;
  uint64_t v43 = &protocol witness table for LineMark;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_100952EB0, &qword_100952EA8);
  uint64_t v25 = v30;
  uint64_t v26 = v36;
  ChartContent.symbol<A>(symbol:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v26);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v39, v25, v34);
}

uint64_t sub_10027D934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = static Alignment.center.getter();
  a3[1] = v6;
  uint64_t v7 = sub_1000AFA94(&qword_100952ED8);
  return sub_10027D98C(a1, a2, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_10027D98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v87 = sub_1000AFA94(&qword_100952EE0);
  __chkstk_darwin(v87);
  uint64_t v78 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_100952EE8);
  __chkstk_darwin(v84);
  uint64_t v86 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_100952EF0);
  __chkstk_darwin(v85);
  uint64_t v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100952EF8);
  __chkstk_darwin(v9 - 8);
  uint64_t v88 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BlendMode();
  uint64_t v81 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_100952F00);
  __chkstk_darwin(v79);
  uint64_t v80 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100952F08);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v89 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v71 - v22;
  __chkstk_darwin(v21);
  uint64_t v83 = (uint64_t)&v71 - v24;
  uint64_t v25 = type metadata accessor for SleepingSampleSingleMetricChartPoint();
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v18;
  uint64_t v30 = *(void *)(a1 + 8);
  uint64_t v97 = v30;
  uint64_t v31 = *(void *)(v30 + 16);
  uint64_t v82 = v29;
  if (v31)
  {
    uint64_t v75 = v23;
    uint64_t v77 = v14;
    char v76 = v8;
    uint64_t v32 = a1;
    uint64_t v33 = v30 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    uint64_t v34 = *(void *)(v26 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10027E840(v33, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for SleepingSampleSingleMetricChartPoint);
      if ((static Date.== infix(_:_:)() & 1) != 0
        && *(double *)&v28[*(int *)(v25 + 20)] == *(double *)(a2 + *(int *)(v25 + 20)))
      {
        uint64_t v35 = *(int *)(v25 + 24);
        if (static Color.== infix(_:_:)())
        {
          sub_10027E8A8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for SleepingSampleSingleMetricChartPoint);
          sub_1000B1AE0((uint64_t)&v97);
          uint64_t v36 = *(void *)(a2 + v35);
          swift_retain();
          static Alignment.center.getter();
          _FrameLayout.init(width:height:alignment:)();
          uint64_t v89 = v91;
          LODWORD(v78) = BYTE8(v91);
          uint64_t v74 = v92;
          int v73 = BYTE8(v92);
          uint64_t v71 = *((void *)&v93 + 1);
          uint64_t v72 = v93;
          uint64_t v37 = Color.opacity(_:)();
          uint64_t v38 = *(void *)(v32 + 64);
          uint64_t v39 = static Color.black.getter();
          uint64_t v40 = v81;
          uint64_t v41 = v77;
          (*(void (**)(char *, void, uint64_t))(v81 + 104))(v16, enum case for BlendMode.destinationOut(_:), v77);
          uint64_t v42 = (uint64_t)v13;
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v13, v16, v41);
          uint64_t v43 = (uint64_t)v80;
          sub_10027E840(v42, (uint64_t)&v80[*(int *)(v79 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
          *(void *)uint64_t v43 = v39;
          *(_WORD *)(v43 + 8) = 256;
          swift_retain();
          sub_10027E8A8(v42, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
          swift_release();
          static Alignment.center.getter();
          _FrameLayout.init(width:height:alignment:)();
          uint64_t v44 = (uint64_t)v75;
          sub_1000AEF2C(v43, (uint64_t)v75, &qword_100952F00);
          long long v45 = (_OWORD *)(v44 + *(int *)(v82 + 36));
          long long v46 = v95;
          *long long v45 = v94;
          v45[1] = v46;
          v45[2] = v96;
          sub_10008DB18(v43, &qword_100952F00);
          uint64_t v47 = v83;
          sub_1000AEEC8(v44, v83, &qword_100952F08);
          sub_1000AEF2C(v47, v44, &qword_100952F08);
          uint64_t v48 = (uint64_t)v76;
          *char v76 = v36;
          *(_WORD *)(v48 + 8) = 256;
          *(void *)(v48 + 16) = v89;
          *(unsigned char *)(v48 + 24) = v78;
          *(void *)(v48 + 32) = v74;
          *(unsigned char *)(v48 + 40) = v73;
          uint64_t v49 = v71;
          *(void *)(v48 + 48) = v72;
          *(void *)(v48 + 56) = v49;
          *(void *)(v48 + 64) = v37;
          *(void *)(v48 + 72) = v38;
          *(void *)(v48 + 80) = 0;
          *(void *)(v48 + 88) = 0;
          uint64_t v50 = sub_1000AFA94(&qword_100952F30);
          sub_1000AEF2C(v44, v48 + *(int *)(v50 + 48), &qword_100952F08);
          swift_retain_n();
          swift_retain_n();
          sub_10008DB18(v44, &qword_100952F08);
          swift_release();
          swift_release();
          sub_1000AEF2C(v48, v86, &qword_100952EF0);
          swift_storeEnumTagMultiPayload();
          sub_1000A132C(&qword_100952F20, &qword_100952EF0);
          sub_1000A132C(&qword_100952F28, &qword_100952EE0);
          uint64_t v51 = (uint64_t)v88;
          _ConditionalContent<>.init(storage:)();
          sub_10008DB18(v48, &qword_100952EF0);
          sub_10008DB18(v47, &qword_100952F08);
          swift_release();
          swift_release();
          goto LABEL_15;
        }
      }
      sub_10027E8A8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for SleepingSampleSingleMetricChartPoint);
      v33 += v34;
      --v31;
    }
    while (v31);
    sub_1000B1AE0((uint64_t)&v97);
    a1 = v32;
    uint64_t v14 = v77;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v54 = static Color.black.getter();
    uint64_t v55 = v81;
    (*(void (**)(char *, void, uint64_t))(v81 + 104))(v16, enum case for BlendMode.destinationOut(_:), v14);
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v13, v16, v14);
    uint64_t v56 = (uint64_t)v80;
    sub_10027E840((uint64_t)v13, (uint64_t)&v80[*(int *)(v79 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)uint64_t v56 = v54;
    *(_WORD *)(v56 + 8) = 256;
    swift_retain();
    sub_10027E8A8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v14);
    swift_release();
    uint64_t v81 = a1;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v57 = v83;
    sub_1000AEF2C(v56, v83, &qword_100952F00);
    uint64_t v58 = (_OWORD *)(v57 + *(int *)(v82 + 36));
    long long v59 = v92;
    *uint64_t v58 = v91;
    v58[1] = v59;
    v58[2] = v93;
    sub_10008DB18(v56, &qword_100952F00);
    uint64_t v60 = v89;
    sub_1000AEEC8(v57, v89, &qword_100952F08);
    uint64_t v61 = *(void *)(a2 + *(int *)(v25 + 24));
    swift_retain();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v62 = v94;
    char v63 = BYTE8(v94);
    uint64_t v64 = v95;
    char v65 = BYTE8(v95);
    long long v66 = v96;
    if (*(unsigned char *)(v81 + 72)) {
      double v67 = 0.6;
    }
    else {
      double v67 = 1.0;
    }
    sub_1000AEF2C(v60, v57, &qword_100952F08);
    uint64_t v68 = v78;
    sub_1000AEF2C(v57, v78, &qword_100952F08);
    uint64_t v69 = v68 + *(int *)(sub_1000AFA94(&qword_100952F18) + 48);
    *(void *)uint64_t v69 = v61;
    *(_WORD *)(v69 + 8) = 256;
    *(void *)(v69 + 16) = v62;
    *(unsigned char *)(v69 + 24) = v63;
    *(void *)(v69 + 32) = v64;
    *(unsigned char *)(v69 + 40) = v65;
    *(_OWORD *)(v69 + 48) = v66;
    *(double *)(v69 + 64) = v67;
    swift_retain();
    sub_10008DB18(v57, &qword_100952F08);
    sub_1000AEF2C(v68, v86, &qword_100952EE0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100952F20, &qword_100952EF0);
    sub_1000A132C(&qword_100952F28, &qword_100952EE0);
    uint64_t v51 = (uint64_t)v88;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v68, &qword_100952EE0);
    swift_release();
    sub_10008DB18(v89, &qword_100952F08);
LABEL_15:
    uint64_t v70 = sub_1000AFA94(&qword_100952F10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v51, 0, 1, v70);
    return sub_1000AEEC8(v51, v90, &qword_100952EF8);
  }
  else
  {
    uint64_t v52 = sub_1000AFA94(&qword_100952F10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v90, 1, 1, v52);
  }
}

uint64_t sub_10027E5B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10027CD68(a1);
}

uint64_t sub_10027E604()
{
  return static ChartContent._chartContentCount(inputs:)();
}

uint64_t sub_10027E620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10027E668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10027D350(a1, v2 + 16, a2);
}

uint64_t sub_10027E670(uint64_t a1)
{
  return a1;
}

unint64_t sub_10027E6B8()
{
  unint64_t result = qword_100952EB8;
  if (!qword_100952EB8)
  {
    type metadata accessor for SleepingSampleSingleMetricChartPoint();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952EB8);
  }
  return result;
}

unint64_t sub_10027E710()
{
  unint64_t result = qword_100952EC0;
  if (!qword_100952EC0)
  {
    sub_1000A1370(&qword_100952E70);
    sub_1000A1370(&qword_100952EA0);
    sub_1000A1370(&qword_100952EA8);
    type metadata accessor for LineMark();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100952EB0, &qword_100952EA8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952EC0);
  }
  return result;
}

uint64_t sub_10027E838@<X0>(uint64_t *a1@<X8>)
{
  return sub_10027D934(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10027E840(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10027E8A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10027E908()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10027EA24(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = a3[9];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v16;
    uint64_t v17 = type metadata accessor for MetricFormattingHelper();
    uint64_t v18 = *(int *)(v17 + 20);
    uint64_t v52 = &v15[v18];
    uint64_t v53 = &v14[v18];
    uint64_t v19 = type metadata accessor for AttributedString();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    id v20 = v16;
    v51(v53, v52, v19);
    uint64_t v21 = *(int *)(v17 + 24);
    uint64_t v22 = *(void **)&v15[v21];
    *(void *)&v14[v21] = v22;
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    long long v26 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)((char *)a1 + v23 + 24) = v26;
    uint64_t v27 = v26;
    uint64_t v28 = **(void (***)(char *, char *, uint64_t))(v26 - 8);
    id v29 = v22;
    v28(v24, v25, v27);
    uint64_t v30 = a3[11];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    uint64_t v34 = a3[12];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = type metadata accessor for Calendar.Component();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = a3[13];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    uint64_t v41 = type metadata accessor for Date.FormatStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    uint64_t v42 = a3[14];
    uint64_t v43 = a3[15];
    uint64_t v44 = *(void **)((char *)a2 + v42);
    *(void *)((char *)a1 + v42) = v44;
    long long v45 = (char *)a1 + v43;
    long long v46 = (char *)a2 + v43;
    uint64_t v47 = type metadata accessor for AxisMarkValues();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
    id v49 = v44;
    v48(v45, v46, v47);
  }
  return a1;
}

char *sub_10027EDB0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v15 = type metadata accessor for MetricFormattingHelper();
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(void *)&v13[*(int *)(v15 + 24)] = *(void *)&v14[*(int *)(v15 + 24)];
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  *((void *)v22 + 4) = *((void *)v23 + 4);
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  uint64_t v25 = &a1[v21];
  long long v26 = &a2[v21];
  uint64_t v27 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[12];
  id v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for Calendar.Component();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = a3[13];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for AxisMarkValues();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  return a1;
}

char *sub_10027F074(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  uint64_t v9 = a3[8];
  uint64_t v10 = a3[9];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  uint64_t v15 = *(void *)&a2[v10];
  uint64_t v16 = *(void **)&a1[v10];
  *(void *)uint64_t v13 = v15;

  uint64_t v17 = type metadata accessor for MetricFormattingHelper();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = &v13[v18];
  uint64_t v20 = &v14[v18];
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = *(int *)(v17 + 24);
  uint64_t v23 = *(void **)&v13[v22];
  *(void *)&v13[v22] = *(void *)&v14[v22];

  uint64_t v24 = a3[10];
  uint64_t v25 = &a1[v24];
  long long v26 = &a2[v24];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v24]);
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  uint64_t v28 = a3[11];
  id v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = a3[12];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for Calendar.Component();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = a3[13];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  uint64_t v40 = a3[14];
  uint64_t v41 = *(void **)&a1[v40];
  *(void *)&a1[v40] = *(void *)&a2[v40];

  uint64_t v42 = a3[15];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = type metadata accessor for AxisMarkValues();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  return a1;
}

uint64_t sub_10027F388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F39C);
}

uint64_t sub_10027F39C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = type metadata accessor for MetricFormattingHelper();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[9];
LABEL_15:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_16;
  }
  uint64_t v16 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[11];
    goto LABEL_15;
  }
  uint64_t v17 = type metadata accessor for Calendar.Component();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[12];
    goto LABEL_15;
  }
  uint64_t v18 = type metadata accessor for Date.FormatStyle();
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_15;
  }
  uint64_t v19 = type metadata accessor for AxisMarkValues();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[15];

  return v20(v22, a2, v21);
}

uint64_t sub_10027F604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F618);
}

uint64_t sub_10027F618(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for MetricFormattingHelper();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[9];
LABEL_13:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_13;
  }
  uint64_t v17 = type metadata accessor for Calendar.Component();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_13;
  }
  uint64_t v18 = type metadata accessor for Date.FormatStyle();
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_13;
  }
  uint64_t v19 = type metadata accessor for AxisMarkValues();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[15];

  return v20(v22, a2, a2, v21);
}

uint64_t sub_10027F880@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v81 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100952050);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v69 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v68 = (char *)&v63 - v11;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v15 - 8);
  double v67 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for RuleMark();
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_100953060);
  uint64_t v73 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v71 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100953058);
  uint64_t v76 = *(void *)(v20 - 8);
  uint64_t v77 = v20;
  __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_100953130);
  uint64_t v83 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v75 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v74 = (char *)&v63 - v25;
  [*(id *)((char *)a1 + *(int *)(type metadata accessor for MetricChartData() + 24)) doubleValueForUnit:*a1];
  double v27 = v26;
  uint64_t v28 = type metadata accessor for MetricCardBarChartView();
  sub_100534258(*(unsigned char *)(a2 + *(int *)(v28 + 20)), v27);
  uint64_t v30 = v29;
  if ((v29 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    uint64_t v65 = v22;
    uint64_t v82 = v6;
    long long v66 = a3;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v31 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
    static PlottableValue.value<>(_:_:unit:calendar:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_1009546C0);
    LocalizedStringKey.init(stringLiteral:)();
    v89[0] = 0;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    v89[0] = v30;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Date();
    uint64_t v64 = v18;
    RuleMark.init<A, B>(x:yStart:yEnd:)();
    uint64_t v32 = (void *)(a2 + *(int *)(v28 + 40));
    uint64_t v33 = v32[3];
    uint64_t v34 = v32[4];
    sub_10007E4EC(v32, v33);
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
    uint64_t v37 = v36;
    int v39 = v38;
    uint64_t v40 = v80;
    sub_100092088(v80);
    sub_100092DA4(v40, v35, v37, v39);
    sub_1000917F8(v35, v37, v39);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v82 += 8;
    v41(v40, v81);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    uint64_t v42 = v71;
    uint64_t v43 = v72;
    uint64_t v44 = v64;
    ChartContent.lineStyle(_:)();
    sub_100265034((uint64_t)v89);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v43);
    uint64_t v88 = Color.gradient.getter();
    uint64_t v84 = v43;
    uint64_t v85 = &protocol witness table for RuleMark;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v46 = v79;
    ChartContent.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v46);
    uint64_t v47 = v32[3];
    uint64_t v48 = v32[4];
    sub_10007E4EC(v32, v47);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
    uint64_t v51 = v50;
    LODWORD(v48) = v52;
    uint64_t v53 = v80;
    sub_100092088(v80);
    sub_100092DA4(v53, v49, v51, v48);
    sub_1000917F8(v49, v51, v48);
    v41(v53, v81);
    uint64_t v84 = v79;
    uint64_t v85 = &type metadata for AnyGradient;
    uint64_t v86 = OpaqueTypeConformance2;
    uint64_t v87 = &protocol witness table for AnyGradient;
    swift_getOpaqueTypeConformance2();
    uint64_t v54 = v75;
    uint64_t v55 = v77;
    uint64_t v56 = v78;
    ChartContent.offset(x:y:)();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v56, v55);
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    uint64_t v58 = v74;
    uint64_t v59 = v65;
    v57(v74, v54, v65);
    uint64_t v60 = v66;
    v57(v66, v58, v59);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v60, 0, 1, v59);
  }
  else
  {
    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
    return v62((uint64_t)a3, 1, 1, v22);
  }
}

void sub_100280278(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  [*(id *)((char *)a1 + *(int *)(type metadata accessor for MetricChartData() + 24)) doubleValueForUnit:*a1];
  double v6 = v5;
  uint64_t v7 = type metadata accessor for MetricCardBarChartView();
  sub_100534258(*(unsigned char *)(a2 + *(int *)(v7 + 20)), v6);
  *a3 = v8;
}

void sub_100280308(void *a1@<X0>, void *a2@<X8>)
{
  sub_100280278(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100280330(uint64_t a1)
{
  return sub_1000A1424(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10027F880);
}

uint64_t *sub_10028034C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v11 = a3[7];
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = (void *)v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    id v15 = v10;
    id v16 = v14;
  }
  return a1;
}

void sub_10028043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + *(int *)(a2 + 28) + 8);
}

uint64_t sub_1002804C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = (void *)v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  id v14 = v9;
  id v15 = v13;
  return a1;
}

uint64_t sub_100280560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  id v14 = (void *)v13[1];
  id v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  return a1;
}

uint64_t sub_10028061C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1002806AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  id v14 = (void *)v10[1];
  *id v10 = v13;
  v10[1] = v12;

  return a1;
}

uint64_t sub_100280754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100280768);
}

uint64_t sub_100280768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100280828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028083C);
}

uint64_t sub_10028083C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Calendar();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ScheduleDayRowView()
{
  uint64_t result = qword_100953198;
  if (!qword_100953198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100280944()
{
  uint64_t result = type metadata accessor for Calendar();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1002809F4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100280A10(uint64_t a1@<X8>)
{
  uint64_t v116 = a1;
  uint64_t v106 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v106);
  uint64_t v109 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_1009531D8);
  __chkstk_darwin(v108);
  uint64_t v115 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94(&qword_1009531E0);
  uint64_t v4 = __chkstk_darwin(v112);
  uint64_t v114 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v113 = (uint64_t)&v104 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_1009531E8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000AFA94(&qword_1009531F0);
  __chkstk_darwin(v104);
  uint64_t v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000AFA94(&qword_1009531F8);
  __chkstk_darwin(v105);
  uint64_t v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100953200);
  __chkstk_darwin(v14 - 8);
  uint64_t v111 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000AFA94(&qword_100953208);
  __chkstk_darwin(v107);
  uint64_t v110 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for ScheduleDayRowView();
  uint64_t v18 = *(void **)&v1[v17[7] + 8];
  unint64_t v19 = *(void *)&v1[v17[6]];
  swift_getKeyPath();
  swift_getKeyPath();
  id v20 = v18;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v21 = (id)v117;
  if ((v117 & 0xC000000000000001) == 0)
  {
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v22 = (char *)*(id *)(v117 + 8 * v19 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  id v21 = *(id *)&v23[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];

  swift_getKeyPath();
  swift_getKeyPath();
  id v24 = v20;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v117 & 0xC000000000000001) == 0)
  {
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v25 = (char *)*(id *)(v117 + 8 * v19 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
  double v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)&v26[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id v28 = [*(id *)&v1[v17[5]] unitManager];
  if (!v28)
  {
LABEL_41:
    __break(1u);
    return;
  }
  uint64_t v29 = v28;
  id v30 = [v28 unitManager];

  if ((unint64_t)(v27 - 1) < 2)
  {
    uint64_t v31 = &selRef_minuteUnit;
    goto LABEL_14;
  }
  if (v27)
  {
    uint64_t v31 = &selRef_countUnit;
LABEL_14:
    uint64_t v32 = self;
    goto LABEL_16;
  }
  uint64_t v31 = &selRef_userActiveEnergyBurnedUnit;
  uint64_t v32 = v30;
LABEL_16:
  id v33 = [v32 *v31];

  [v21 doubleValueForUnit:v33];
  double v35 = v34;

  double v36 = floor(v35);
  if ((~*(void *)&v36 & 0x7FF0000000000000) == 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v36 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v37 = (void *)(uint64_t)v36;
  int v38 = (void *)sub_1002813D0();
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v39 = sub_1000AFA94(&qword_100953210);
  sub_1002816F0(v1, v37, v38, &v9[*(int *)(v39 + 44)]);
  unsigned __int8 v40 = static Edge.Set.leading.getter();
  char v41 = static Edge.Set.trailing.getter();
  char v42 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v40) {
    char v42 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v43 = Edge.Set.init(rawValue:)();
  uint64_t v44 = (uint64_t)v111;
  if (v43 != v41) {
    char v42 = Edge.Set.init(rawValue:)();
  }
  uint64_t v45 = v104;
  EdgeInsets.init(_all:)();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v11, &qword_1009531E8);
  uint64_t v54 = &v11[*(int *)(v45 + 36)];
  char *v54 = v42;
  *((void *)v54 + 1) = v47;
  *((void *)v54 + 2) = v49;
  *((void *)v54 + 3) = v51;
  *((void *)v54 + 4) = v53;
  v54[40] = 0;
  sub_10008DB18((uint64_t)v9, &qword_1009531E8);
  unsigned __int8 v55 = static Edge.Set.top.getter();
  char v56 = static Edge.Set.bottom.getter();
  char v57 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v55) {
    char v57 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v58 = Edge.Set.init(rawValue:)();
  uint64_t v59 = (uint64_t)v115;
  if (v58 != v56) {
    char v57 = Edge.Set.init(rawValue:)();
  }
  uint64_t v60 = v109;
  EdgeInsets.init(_all:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v13, &qword_1009531F0);
  uint64_t v69 = &v13[*(int *)(v105 + 36)];
  char *v69 = v57;
  *((void *)v69 + 1) = v62;
  *((void *)v69 + 2) = v64;
  *((void *)v69 + 3) = v66;
  *((void *)v69 + 4) = v68;
  v69[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_1009531F0);
  uint64_t v70 = static Alignment.center.getter();
  sub_1004DCA70(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v44, 0.0, 1, 0.0, 1, v70, v71);
  sub_10008DB18((uint64_t)v13, &qword_1009531F8);
  uint64_t v72 = static Alignment.center.getter();
  uint64_t v74 = v73;
  uint64_t v75 = (char *)v60 + *(int *)(v106 + 20);
  uint64_t v76 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v77 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 104))(v75, v76, v77);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v60 = _Q0;
  id v83 = [self secondarySystemGroupedBackgroundColor];
  uint64_t v84 = Color.init(uiColor:)();
  sub_100098018((uint64_t)v60, v59, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v85 = v108;
  *(void *)(v59 + *(int *)(v108 + 52)) = v84;
  *(_WORD *)(v59 + *(int *)(v85 + 56)) = 256;
  sub_1002854A8((uint64_t)v60);
  unsigned __int8 v86 = static Edge.Set.leading.getter();
  unsigned __int8 v87 = static Edge.Set.trailing.getter();
  char v88 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v86) {
    char v88 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v87) {
    char v88 = Edge.Set.init(rawValue:)();
  }
  uint64_t v89 = v116;
  uint64_t v90 = (uint64_t)v110;
  uint64_t v91 = (uint64_t)&v110[*(int *)(v107 + 36)];
  EdgeInsets.init(_all:)();
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v100 = v114;
  sub_1000AEF2C(v59, v114, &qword_1009531D8);
  uint64_t v101 = v100 + *(int *)(v112 + 36);
  *(unsigned char *)uint64_t v101 = v88;
  *(void *)(v101 + 8) = v93;
  *(void *)(v101 + 16) = v95;
  *(void *)(v101 + 24) = v97;
  *(void *)(v101 + 32) = v99;
  *(unsigned char *)(v101 + 40) = 0;
  sub_10008DB18(v59, &qword_1009531D8);
  uint64_t v102 = v113;
  sub_1000AEEC8(v100, v113, &qword_1009531E0);
  sub_1000AEEC8(v102, v91, &qword_1009531E0);
  uint64_t v103 = (uint64_t *)(v91 + *(int *)(sub_1000AFA94(&qword_100953218) + 36));
  uint64_t *v103 = v72;
  v103[1] = v74;
  sub_1000AEEC8(v44, v90, &qword_100953200);
  sub_1000AEEC8(v90, v89, &qword_100953208);
}

uint64_t sub_1002813D0()
{
  uint64_t v2 = (int *)type metadata accessor for ScheduleDayRowView();
  uint64_t v3 = *(void **)(v0 + v2[7] + 8);
  unint64_t v4 = *(void *)(v0 + v2[6]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v6 = (char *)*(id *)(v21 + 8 * v4 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v1 = &OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType;
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id v9 = [*(id *)(v0 + v2[5]) unitManager];
  if (!v9) {
    goto LABEL_29;
  }
  uint64_t v10 = v9;
  id v11 = [v9 unitManager];

  if ((unint64_t)(v8 - 1) < 2)
  {
    uint64_t v12 = &selRef_minuteUnit;
    goto LABEL_10;
  }
  if (v8)
  {
    uint64_t v12 = &selRef_countUnit;
LABEL_10:
    uint64_t v13 = self;
    goto LABEL_12;
  }
  uint64_t v12 = &selRef_userActiveEnergyBurnedUnit;
  uint64_t v13 = v11;
LABEL_12:
  uint64_t v2 = (int *)[v13 *v12];

  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v5;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = (char *)*(id *)(v21 + 8 * v4 + 32);
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

      switch(v16)
      {
        case 0:
          goto LABEL_16;
        case 1:
          goto LABEL_23;
        case 3:
          goto LABEL_25;
        default:
          goto LABEL_24;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    JUMPOUT(0x1002816D0);
  }
LABEL_22:
  uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + *v1);
  swift_unknownObjectRelease();
  switch(v20)
  {
    case 0:
LABEL_16:
      int IsCalorieUnit = FIUIHKUnitIsCalorieUnit();

      if (IsCalorieUnit) {
        uint64_t result = 9990;
      }
      else {
        uint64_t result = 39980;
      }
      break;
    case 1:
LABEL_23:

      uint64_t result = 1000;
      break;
    case 3:
LABEL_25:

      uint64_t result = 16;
      break;
    default:
LABEL_24:

      uint64_t result = 90;
      break;
  }
  return result;
}

uint64_t sub_1002816F0@<X0>(char *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v109 = a3;
  uint64_t v113 = a4;
  uint64_t v5 = sub_1000AFA94(&qword_100953220);
  __chkstk_darwin(v5 - 8);
  uint64_t v110 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000AFA94(&qword_100953228);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v97 - v11;
  uint64_t v117 = sub_1000AFA94(&qword_100953230);
  uint64_t v13 = __chkstk_darwin(v117);
  uint64_t v103 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v101 = (char *)&v97 - v15;
  uint64_t v16 = type metadata accessor for DynamicTypeSize();
  uint64_t v17 = *(void **)(v16 - 8);
  uint64_t v115 = v16;
  uint64_t v116 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v114 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v97 - v20;
  uint64_t v102 = sub_1000AFA94(&qword_100953238);
  uint64_t v22 = __chkstk_darwin(v102);
  uint64_t v99 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v100 = (uint64_t)&v97 - v24;
  uint64_t v25 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_100953240);
  uint64_t v106 = *(void *)(v28 - 8);
  uint64_t v107 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v105 = (char *)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v98 = (char *)&v97 - v32;
  __chkstk_darwin(v31);
  uint64_t v104 = (char *)&v97 - v33;
  uint64_t v34 = type metadata accessor for ScheduleDayRowView();
  double v35 = *(void **)&a1[*(int *)(v34 + 28) + 8];
  double v36 = a1;
  unint64_t v37 = *(void *)&a1[*(int *)(v34 + 24)];
  swift_getKeyPath();
  swift_getKeyPath();
  id v38 = v35;
  static Published.subscript.getter();

  swift_release();
  uint64_t result = swift_release();
  uint64_t v111 = v12;
  uint64_t v112 = v10;
  if ((v118 & 0xC000000000000001) == 0)
  {
    if ((v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v37 < *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v40 = *(id *)(v118 + 8 * v37 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_10;
  }
  id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v41 = (uint64_t)v40;
  swift_bridgeObjectRelease();
  uint64_t v97 = v36;
  uint64_t v42 = sub_100441AE0(v41);
  uint64_t v44 = v43;

  uint64_t v118 = v42;
  uint64_t v119 = v44;
  sub_1000A06D0();
  uint64_t v45 = Text.init<A>(_:)();
  uint64_t v47 = v46;
  LOBYTE(v41) = v48 & 1;
  uint64_t v49 = enum case for Font.Design.rounded(_:);
  uint64_t v50 = type metadata accessor for Font.Design();
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v27, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v27, 0, 1, v50);
  uint64_t v52 = Text.fontDesign(_:)();
  uint64_t v54 = v53;
  char v56 = v55 & 1;
  sub_1000A06C0(v45, v47, v41);
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v27, &qword_10094C448);
  static Font.body.getter();
  uint64_t v57 = Text.font(_:)();
  uint64_t v59 = v58;
  LOBYTE(v41) = v60;
  uint64_t v62 = v61;
  swift_release();
  sub_1000A06C0(v52, v54, v56);
  swift_bridgeObjectRelease();
  uint64_t v118 = v57;
  uint64_t v119 = v59;
  char v120 = v41 & 1;
  uint64_t v121 = v62;
  uint64_t v63 = v115;
  uint64_t v64 = v116;
  uint64_t v65 = (void (*)(char *, void, uint64_t))v116[13];
  uint64_t v66 = v21;
  v65(v21, enum case for DynamicTypeSize.xSmall(_:), v115);
  uint64_t v67 = v114;
  v65(v114, enum case for DynamicTypeSize.xLarge(_:), v63);
  sub_100092F80();
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v68 = v117;
    uint64_t v69 = v101;
    uint64_t v70 = &v101[*(int *)(v117 + 48)];
    uint64_t v71 = (void (*)(char *, char *, uint64_t))v64[4];
    v71(v101, v66, v63);
    v71(v70, v67, v63);
    uint64_t v72 = v103;
    uint64_t v73 = &v103[*(int *)(v68 + 48)];
    uint64_t v74 = v63;
    uint64_t v75 = (void (*)(char *, char *, uint64_t))v64[2];
    v75(v103, v69, v63);
    v75(v73, v70, v63);
    uint64_t v76 = (uint64_t)v99;
    v71(v99, v72, v63);
    uint64_t v77 = (void (*)(char *, uint64_t))v64[1];
    v77(v73, v74);
    uint64_t v78 = &v72[*(int *)(v117 + 48)];
    v71(v72, v69, v74);
    v71(v78, v70, v74);
    v71((char *)(v76 + *(int *)(v102 + 36)), v78, v74);
    v77(v72, v74);
    uint64_t v79 = v100;
    sub_1000AEEC8(v76, v100, &qword_100953238);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    uint64_t v80 = v98;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v79, &qword_100953238);
    sub_1000A06C0(v118, v119, v120);
    swift_bridgeObjectRelease();
    uint64_t v82 = v106;
    uint64_t v81 = v107;
    id v83 = v104;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v104, v80, v107);
    uint64_t v84 = static VerticalAlignment.center.getter();
    uint64_t v85 = (uint64_t)v110;
    uint64_t *v110 = v84;
    *(void *)(v85 + 8) = 0;
    *(unsigned char *)(v85 + 16) = 1;
    uint64_t v86 = sub_1000AFA94(&qword_100953250);
    sub_1002820CC(v97, v108, v109, v85 + *(int *)(v86 + 44));
    uint64_t v87 = static Alignment.trailing.getter();
    uint64_t v88 = (uint64_t)v112;
    sub_1004DCACC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v112, 0.0, 1, 0.0, 1, v87, v89);
    sub_10008DB18(v85, &qword_100953220);
    uint64_t v90 = (uint64_t)v111;
    sub_1000AEEC8(v88, (uint64_t)v111, &qword_100953228);
    uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    uint64_t v92 = v105;
    v91(v105, v83, v81);
    sub_1000AEF2C(v90, v88, &qword_100953228);
    uint64_t v93 = v113;
    v91(v113, v92, v81);
    uint64_t v94 = sub_1000AFA94(&qword_100953258);
    uint64_t v95 = &v93[*(int *)(v94 + 48)];
    *(void *)uint64_t v95 = 0;
    v95[8] = 1;
    sub_1000AEF2C(v88, (uint64_t)&v93[*(int *)(v94 + 64)], &qword_100953228);
    sub_10008DB18(v90, &qword_100953228);
    uint64_t v96 = *(void (**)(char *, uint64_t))(v82 + 8);
    v96(v83, v81);
    sub_10008DB18(v88, &qword_100953228);
    return ((uint64_t (*)(char *, uint64_t))v96)(v92, v81);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1002820CC@<X0>(char *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v131 = a3;
  uint64_t v136 = a2;
  uint64_t v122 = a4;
  uint64_t v5 = sub_1000AFA94(&qword_100953260);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v123 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v130 = (uint64_t *)((char *)&v112 - v9);
  __chkstk_darwin(v8);
  uint64_t v132 = (char *)&v112 - v10;
  uint64_t v11 = type metadata accessor for ScheduleDayRowView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)sub_1000AFA94(&qword_100953268);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void (**)())((char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v20 = (void (**)())((char *)&v112 - v19);
  uint64_t v133 = sub_1000AFA94(&qword_100953270);
  uint64_t v21 = __chkstk_darwin(v133);
  uint64_t v116 = (uint64_t)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v112 - v23;
  uint64_t v134 = sub_1000AFA94(&qword_100953278);
  uint64_t v25 = __chkstk_darwin(v134);
  uint64_t v118 = (uint64_t)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v112 - v27;
  uint64_t v29 = sub_1000AFA94(&qword_100953280);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v120 = (uint64_t)&v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v121 = (uint64_t)&v112 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v117 = (char *)&v112 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v119 = (uint64_t)&v112 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v124 = (char *)&v112 - v39;
  __chkstk_darwin(v38);
  uint64_t v135 = (uint64_t)&v112 - v40;
  sub_100098018((uint64_t)a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduleDayRowView);
  uint64_t v41 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v42 = (v41 + 16) & ~v41;
  uint64_t v126 = v41 | 7;
  uint64_t v127 = v42 + v13;
  uint64_t v43 = swift_allocObject();
  uint64_t v128 = v42;
  uint64_t v129 = v14;
  sub_100285508((uint64_t)v14, v43 + v42);
  uint64_t v44 = v15[10];
  uint64_t v137 = 0;
  uint64_t v125 = sub_1000AFA94(&qword_100953288);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v20 + v44) = v138;
  uint64_t v45 = v15[11];
  uint64_t v137 = 1;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v20 + v45) = v138;
  *uint64_t v20 = sub_10028556C;
  v20[1] = (void (*)())v43;
  sub_1002837E0((uint64_t)v20 + v15[9]);
  uint64_t v46 = sub_1002830C8();
  uint64_t v113 = v11;
  if ((void *)v46 == v136)
  {
    uint64_t v47 = static Color.gray.getter();
    goto LABEL_9;
  }
  char v48 = *(void **)&a1[*(int *)(v11 + 28) + 8];
  unint64_t v49 = *(void *)&a1[*(int *)(v11 + 24)];
  swift_getKeyPath();
  swift_getKeyPath();
  id v50 = v48;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v138 & 0xC000000000000001) != 0)
  {
    uint64_t v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((v49 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v49 >= *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  uint64_t v51 = (char *)*(id *)(v138 + 8 * v49 + 32);
LABEL_8:
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  unint64_t v53 = *(void *)&v52[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  sub_10039EC38(v53);
LABEL_9:
  uint64_t v54 = v47;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v138 = v54;
  swift_retain();
  uint64_t v56 = AnyShapeStyle.init<A>(_:)();
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v24, &qword_100953268);
  swift_release();
  uint64_t v57 = (uint64_t *)&v24[*(int *)(v133 + 36)];
  uint64_t *v57 = KeyPath;
  v57[1] = v56;
  sub_10008DB18((uint64_t)v20, &qword_100953268);
  uint64_t v58 = sub_1002830C8();
  uint64_t v59 = v136;
  LOBYTE(KeyPath) = v58 == (void)v136;
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = swift_allocObject();
  *(unsigned char *)(v61 + 16) = KeyPath;
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v28, &qword_100953270);
  uint64_t v62 = (uint64_t *)&v28[*(int *)(v134 + 36)];
  uint64_t *v62 = v60;
  v62[1] = (uint64_t)sub_1000DBE18;
  v62[2] = v61;
  sub_10008DB18((uint64_t)v24, &qword_100953270);
  sub_100285594();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v114 = self;
  uint64_t v115 = ObjCClassFromMetadata;
  id v64 = [v114 bundleForClass:ObjCClassFromMetadata];
  NSString v65 = String._bridgeToObjectiveC()();
  NSString v66 = String._bridgeToObjectiveC()();
  id v67 = [v64 localizedStringForKey:v65 value:0 table:v66];

  uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v70 = v69;

  *(void *)&long long v138 = v68;
  *((void *)&v138 + 1) = v70;
  sub_1002855D4();
  sub_1000A06D0();
  uint64_t v71 = (uint64_t)v124;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v28, &qword_100953278);
  sub_1000AEEC8(v71, v135, &qword_100953280);
  uint64_t v72 = static Alignment.center.getter();
  uint64_t v73 = (uint64_t)v130;
  *uint64_t v130 = v72;
  *(void *)(v73 + 8) = v74;
  uint64_t v75 = sub_1000AFA94(&qword_1009532B8);
  sub_1002833E8(a1, v59, v131, (char *)(v73 + *(int *)(v75 + 44)));
  uint64_t v28 = v132;
  sub_1000AEEC8(v73, (uint64_t)v132, &qword_100953260);
  uint64_t v76 = (uint64_t)v129;
  sub_100098018((uint64_t)a1, (uint64_t)v129, (uint64_t (*)(void))type metadata accessor for ScheduleDayRowView);
  uint64_t v77 = swift_allocObject();
  sub_100285508(v76, v77 + v128);
  uint64_t v78 = v15[10];
  uint64_t v137 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v18 + v78) = v138;
  uint64_t v79 = v15[11];
  uint64_t v137 = 1;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v18 + v79) = v138;
  void *v18 = sub_10028573C;
  v18[1] = (void (*)())v77;
  sub_1002837E0((uint64_t)v18 + v15[9]);
  if ((void *)sub_1002813D0() == v59)
  {
    uint64_t v80 = static Color.gray.getter();
LABEL_16:
    uint64_t v88 = v80;
    uint64_t v89 = swift_getKeyPath();
    *(void *)&long long v138 = v88;
    swift_retain();
    uint64_t v90 = AnyShapeStyle.init<A>(_:)();
    uint64_t v91 = v116;
    sub_1000AEF2C((uint64_t)v18, v116, &qword_100953268);
    swift_release();
    uint64_t v92 = (uint64_t *)(v91 + *(int *)(v133 + 36));
    *uint64_t v92 = v89;
    v92[1] = v90;
    sub_10008DB18((uint64_t)v18, &qword_100953268);
    LOBYTE(v89) = sub_1002813D0() == (void)v136;
    uint64_t v93 = swift_getKeyPath();
    uint64_t v94 = swift_allocObject();
    *(unsigned char *)(v94 + 16) = v89;
    uint64_t v95 = v118;
    sub_1000AEF2C(v91, v118, &qword_100953270);
    uint64_t v96 = (uint64_t *)(v95 + *(int *)(v134 + 36));
    *uint64_t v96 = v93;
    v96[1] = (uint64_t)sub_100285A7C;
    v96[2] = v94;
    sub_10008DB18(v91, &qword_100953270);
    id v97 = [v114 bundleForClass:v115];
    NSString v98 = String._bridgeToObjectiveC()();
    NSString v99 = String._bridgeToObjectiveC()();
    id v100 = [v97 localizedStringForKey:v98 value:0 table:v99];

    uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v103 = v102;

    *(void *)&long long v138 = v101;
    *((void *)&v138 + 1) = v103;
    uint64_t v104 = (uint64_t)v117;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    sub_10008DB18(v95, &qword_100953278);
    uint64_t v105 = v119;
    sub_1000AEEC8(v104, v119, &qword_100953280);
    uint64_t v106 = v135;
    uint64_t v107 = v121;
    sub_1000AEF2C(v135, v121, &qword_100953280);
    uint64_t v108 = v123;
    sub_1000AEF2C((uint64_t)v28, v123, &qword_100953260);
    uint64_t v109 = v120;
    sub_1000AEF2C(v105, v120, &qword_100953280);
    uint64_t v110 = v122;
    sub_1000AEF2C(v107, v122, &qword_100953280);
    uint64_t v111 = sub_1000AFA94(&qword_1009532C0);
    sub_1000AEF2C(v108, v110 + *(int *)(v111 + 48), &qword_100953260);
    sub_1000AEF2C(v109, v110 + *(int *)(v111 + 64), &qword_100953280);
    sub_10008DB18(v105, &qword_100953280);
    sub_10008DB18((uint64_t)v28, &qword_100953260);
    sub_10008DB18(v106, &qword_100953280);
    sub_10008DB18(v109, &qword_100953280);
    sub_10008DB18(v108, &qword_100953260);
    return sub_10008DB18(v107, &qword_100953280);
  }
  uint64_t v81 = *(void **)&a1[*(int *)(v113 + 28) + 8];
  unint64_t v82 = *(void *)&a1[*(int *)(v113 + 24)];
  swift_getKeyPath();
  swift_getKeyPath();
  id v83 = v81;
  static Published.subscript.getter();

  swift_release();
  uint64_t result = swift_release();
  if ((v138 & 0xC000000000000001) != 0) {
    goto LABEL_20;
  }
  if ((v82 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v82 < *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v85 = (char *)*(id *)(v138 + 8 * v82 + 32);
LABEL_15:
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    unint64_t v87 = *(void *)&v86[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

    sub_10039EC38(v87);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_100282DB8(char a1)
{
  uint64_t v3 = (int *)type metadata accessor for ScheduleDayRowView();
  unint64_t v4 = *(void **)(v1 + v3[7] + 8);
  unint64_t v5 = *(void *)(v1 + v3[6]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = v4;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v7 = (id)v26;
  if ((v26 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v8 = (char *)*(id *)(v26 + 8 * v5 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v7 = *(id *)&v9[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];

  swift_getKeyPath();
  swift_getKeyPath();
  id v10 = v6;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v26 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v11 = (char *)*(id *)(v26 + 8 * v5 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id v14 = [*(id *)(v1 + v3[5]) unitManager];
  if (!v14)
  {
LABEL_38:
    __break(1u);
    return;
  }
  uint64_t v15 = v14;
  id v16 = [v14 unitManager];

  if ((unint64_t)(v13 - 1) < 2)
  {
    uint64_t v17 = &selRef_minuteUnit;
    goto LABEL_14;
  }
  if (v13)
  {
    uint64_t v17 = &selRef_countUnit;
LABEL_14:
    uint64_t v18 = self;
    goto LABEL_16;
  }
  uint64_t v17 = &selRef_userActiveEnergyBurnedUnit;
  uint64_t v18 = v16;
LABEL_16:
  id v19 = [v18 *v17];

  [v7 doubleValueForUnit:v19];
  double v21 = v20;

  double v22 = floor(v21);
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v23 = (uint64_t)v22;
  uint64_t v24 = sub_100284CF4();
  if ((a1 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v25 = (void *)(v23 + v24);
  if (__OFADD__(v23, v24))
  {
    __break(1u);
LABEL_23:
    uint64_t v25 = (void *)(v23 - v24);
    if (!__OFSUB__(v23, v24)) {
      goto LABEL_24;
    }
    goto LABEL_37;
  }
LABEL_24:
  if ((uint64_t)v25 >= sub_1002830C8() && sub_1002813D0() >= (uint64_t)v25) {
    sub_100285014(v25);
  }
}

uint64_t sub_1002830C8()
{
  uint64_t v2 = (int *)type metadata accessor for ScheduleDayRowView();
  uint64_t v3 = *(void **)(v0 + v2[7] + 8);
  unint64_t v4 = *(void *)(v0 + v2[6]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v6 = (char *)*(id *)(v21 + 8 * v4 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_22;
  }
  id v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  id v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v1 = &OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType;
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id v9 = [*(id *)(v0 + v2[5]) unitManager];
  if (!v9) {
    goto LABEL_29;
  }
  id v10 = v9;
  id v11 = [v9 unitManager];

  if ((unint64_t)(v8 - 1) < 2)
  {
    uint64_t v12 = &selRef_minuteUnit;
    goto LABEL_10;
  }
  if (v8)
  {
    uint64_t v12 = &selRef_countUnit;
LABEL_10:
    uint64_t v13 = self;
    goto LABEL_12;
  }
  uint64_t v12 = &selRef_userActiveEnergyBurnedUnit;
  uint64_t v13 = v11;
LABEL_12:
  uint64_t v2 = (int *)[v13 *v12];

  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v5;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = (char *)*(id *)(v21 + 8 * v4 + 32);
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

      switch(v16)
      {
        case 0:
          goto LABEL_16;
        case 1:
          goto LABEL_23;
        case 3:
          goto LABEL_25;
        default:
          goto LABEL_24;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    JUMPOUT(0x1002833C8);
  }
LABEL_22:
  uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + *v1);
  swift_unknownObjectRelease();
  switch(v20)
  {
    case 0:
LABEL_16:
      int IsCalorieUnit = FIUIHKUnitIsCalorieUnit();

      if (IsCalorieUnit) {
        uint64_t result = 10;
      }
      else {
        uint64_t result = 20;
      }
      break;
    case 1:
LABEL_23:

      uint64_t result = 10;
      break;
    case 3:
LABEL_25:

      uint64_t result = 6;
      break;
    default:
LABEL_24:

      uint64_t result = 5;
      break;
  }
  return result;
}

uint64_t sub_1002833E8@<X0>(char *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = sub_1000AFA94(&qword_1009532D8) - 8;
  uint64_t v6 = __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v33 = (uint64_t)&v29 - v9;
  uint64_t v10 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_1009532E0);
  __chkstk_darwin(v30);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_1009532E8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v29 - v20;
  *(void *)id v14 = static VerticalAlignment.firstTextBaseline.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  uint64_t v22 = sub_1000AFA94(&qword_1009532F0);
  sub_100283C1C(a2, a1, &v14[*(int *)(v22 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  sub_1000A132C(&qword_1009532F8, &qword_1009532E0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  sub_10008DB18((uint64_t)v14, &qword_1009532E0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v19, v15);
  *(void *)id v14 = static VerticalAlignment.firstTextBaseline.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  sub_100283C1C(v35, a1, &v14[*(int *)(v22 + 44)]);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v8, &qword_1009532E0);
  *(void *)&v8[*(int *)(v34 + 44)] = 0;
  sub_10008DB18((uint64_t)v14, &qword_1009532E0);
  uint64_t v23 = v33;
  sub_1000AEEC8((uint64_t)v8, v33, &qword_1009532D8);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v24(v19, v21, v15);
  sub_1000AEF2C(v23, (uint64_t)v8, &qword_1009532D8);
  uint64_t v25 = v36;
  v24(v36, v19, v15);
  uint64_t v26 = sub_1000AFA94(&qword_100953300);
  sub_1000AEF2C((uint64_t)v8, (uint64_t)&v25[*(int *)(v26 + 48)], &qword_1009532D8);
  sub_10008DB18(v23, &qword_1009532D8);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v21, v15);
  sub_10008DB18((uint64_t)v8, &qword_1009532D8);
  return ((uint64_t (*)(char *, uint64_t))v27)(v19, v15);
}

uint64_t sub_1002837E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v40 = sub_1000AFA94(&qword_100953230);
  uint64_t v1 = __chkstk_darwin(v40);
  uint64_t v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v34 - v3;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_100953238);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = Image.init(systemName:)();
  uint64_t v18 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v17;
  uint64_t v42 = KeyPath;
  uint64_t v43 = v18;
  uint64_t v20 = v6;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v6[13];
  v21(v11, enum case for DynamicTypeSize.xSmall(_:), v5);
  v21(v9, enum case for DynamicTypeSize.xLarge(_:), v5);
  sub_100092F80();
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v35 = v12;
    uint64_t v36 = v16;
    uint64_t v23 = v40;
    uint64_t v24 = &v4[*(int *)(v40 + 48)];
    uint64_t v25 = (void (*)(char *, char *, uint64_t))v20[4];
    v25(v4, v11, v5);
    uint64_t v34 = v24;
    v25(v24, v9, v5);
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = v38;
    uint64_t v28 = &v38[v26];
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v20[2];
    v29(v38, v4, v5);
    v29(v28, v24, v5);
    uint64_t v30 = (uint64_t)v37;
    v25(v37, v27, v5);
    uint64_t v31 = (void (*)(char *, uint64_t))v20[1];
    v31(v28, v5);
    uint64_t v32 = &v27[*(int *)(v40 + 48)];
    v25(v27, v4, v5);
    v25(v32, v34, v5);
    v25((char *)(v30 + *(int *)(v35 + 36)), v32, v5);
    v31(v27, v5);
    uint64_t v33 = (uint64_t)v36;
    sub_1000AEEC8(v30, (uint64_t)v36, &qword_100953238);
    sub_1000AFA94(&qword_1009532C8);
    sub_1002857C0();
    sub_1000A132C(&qword_100953248, &qword_100953238);
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v33, &qword_100953238);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100283C1C@<X0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  uint64_t v153 = a2;
  uint64_t v143 = a3;
  uint64_t v166 = sub_1000AFA94(&qword_100953230);
  uint64_t v4 = __chkstk_darwin(v166);
  uint64_t v163 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v160 = (char *)&v126 - v6;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  unint64_t v167 = *(void **)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v169 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v168 = (char *)&v126 - v10;
  uint64_t v161 = sub_1000AFA94(&qword_100953238);
  uint64_t v11 = __chkstk_darwin(v161);
  uint64_t v155 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v159 = (uint64_t)&v126 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1000AFA94(&qword_100953240);
  uint64_t v165 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v154 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1000AFA94(&qword_100953308);
  uint64_t v162 = *(void *)(v164 - 8);
  uint64_t v18 = __chkstk_darwin(v164);
  uint64_t v142 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v141 = (char *)&v126 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v157 = (char *)&v126 - v23;
  __chkstk_darwin(v22);
  uint64_t v156 = (char *)&v126 - v24;
  uint64_t v170 = a1;
  uint64_t v170 = (void *)dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v171 = v25;
  unint64_t v151 = sub_1000A06D0();
  uint64_t v26 = Text.init<A>(_:)();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t v31 = enum case for Font.Design.rounded(_:);
  uint64_t v32 = type metadata accessor for Font.Design();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void (**)(char *, void, uint64_t))(v33 + 104);
  unsigned int v148 = v31;
  uint64_t v147 = v33 + 104;
  uint64_t v146 = v34;
  v34(v16, v31, v32);
  uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56);
  uint64_t v150 = v32;
  uint64_t v149 = v33 + 56;
  uint64_t v145 = v35;
  v35((uint64_t)v16, 0, 1, v32);
  uint64_t v36 = Text.fontDesign(_:)();
  uint64_t v38 = v37;
  LOBYTE(v33) = v39 & 1;
  sub_1000A06C0(v26, v28, v30);
  swift_bridgeObjectRelease();
  uint64_t v152 = v16;
  sub_10008DB18((uint64_t)v16, &qword_10094C448);
  static Font.Weight.bold.getter();
  uint64_t v40 = Text.fontWeight(_:)();
  uint64_t v42 = v41;
  LOBYTE(v28) = v43 & 1;
  sub_1000A06C0(v36, v38, v33);
  swift_bridgeObjectRelease();
  static Font.title.getter();
  uint64_t v44 = (void *)Text.font(_:)();
  uint64_t v46 = v45;
  LOBYTE(v36) = v47;
  uint64_t v49 = v48;
  swift_release();
  uint64_t v50 = v42;
  uint64_t v51 = v167;
  sub_1000A06C0(v40, v50, v28);
  swift_bridgeObjectRelease();
  uint64_t v170 = v44;
  uint64_t v171 = v46;
  LOBYTE(v172) = v36 & 1;
  uint64_t v173 = v49;
  unsigned int v52 = enum case for DynamicTypeSize.xSmall(_:);
  unint64_t v53 = (void (*)(char *, void, uint64_t))v51[13];
  v53(v168, enum case for DynamicTypeSize.xSmall(_:), v7);
  unsigned int v54 = enum case for DynamicTypeSize.xLarge(_:);
  v53(v169, enum case for DynamicTypeSize.xLarge(_:), v7);
  unint64_t v144 = sub_100092F80();
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    unsigned int v139 = v52;
    uint64_t v56 = *(int *)(v166 + 48);
    uint64_t v57 = v166;
    unsigned int v140 = v54;
    uint64_t v58 = v160;
    long long v138 = v51 + 13;
    uint64_t v59 = &v160[v56];
    uint64_t v60 = (void (*)(char *, char *, uint64_t))v51[4];
    v60(v160, v168, v7);
    v60(v59, v169, v7);
    uint64_t v61 = *(int *)(v57 + 48);
    uint64_t v137 = v53;
    uint64_t v62 = v163;
    uint64_t v63 = &v163[v61];
    id v64 = (void (*)(char *, char *, uint64_t))v51[2];
    v64(v163, v58, v7);
    uint64_t v133 = v51 + 2;
    uint64_t v132 = v64;
    v64(v63, v59, v7);
    uint64_t v65 = (uint64_t)v155;
    v60(v155, v62, v7);
    NSString v66 = (void (*)(char *, uint64_t))v51[1];
    v66(v63, v7);
    id v67 = &v62[*(int *)(v166 + 48)];
    v60(v62, v58, v7);
    v60(v67, v59, v7);
    uint64_t v68 = v161;
    uint64_t v69 = v65 + *(int *)(v161 + 36);
    uint64_t v136 = v51 + 4;
    uint64_t v135 = v60;
    v60((char *)v69, v67, v7);
    unint64_t v167 = v51 + 1;
    uint64_t v134 = v66;
    v66(v62, v7);
    uint64_t v70 = v159;
    sub_1000AEEC8(v65, v159, &qword_100953238);
    uint64_t v71 = sub_1000A132C(&qword_100953248, &qword_100953238);
    uint64_t v72 = v154;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v70, &qword_100953238);
    sub_1000A06C0((uint64_t)v170, v171, (char)v172);
    swift_bridgeObjectRelease();
    uint64_t v170 = &type metadata for Text;
    uint64_t v171 = v68;
    uint64_t v172 = &protocol witness table for Text;
    uint64_t v173 = v71;
    uint64_t v131 = v71;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v74 = v157;
    uint64_t v75 = v158;
    uint64_t v130 = OpaqueTypeConformance2;
    View.monospacedDigit()();
    uint64_t v76 = *(void (**)(char *, uint64_t))(v165 + 8);
    v165 += 8;
    uint64_t v129 = v76;
    v76(v72, v75);
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v162 + 32);
    uint64_t v128 = v162 + 32;
    uint64_t v127 = v77;
    v77(v156, v74, v164);
    uint64_t v170 = (void *)sub_100284A94();
    uint64_t v171 = v78;
    uint64_t v79 = (void *)StringProtocol.localizedUppercase.getter();
    uint64_t v81 = v80;
    swift_bridgeObjectRelease();
    uint64_t v170 = v79;
    uint64_t v171 = v81;
    uint64_t v82 = Text.init<A>(_:)();
    uint64_t v84 = v83;
    LOBYTE(v81) = v85 & 1;
    uint64_t v86 = (uint64_t)v152;
    uint64_t v87 = v150;
    v146(v152, v148, v150);
    v145(v86, 0, 1, v87);
    uint64_t v88 = Text.fontDesign(_:)();
    uint64_t v90 = v89;
    LOBYTE(v60) = v91 & 1;
    sub_1000A06C0(v82, v84, v81);
    swift_bridgeObjectRelease();
    sub_10008DB18(v86, &qword_10094C448);
    static Font.Weight.bold.getter();
    uint64_t v92 = Text.fontWeight(_:)();
    uint64_t v94 = v93;
    LOBYTE(v81) = v95 & 1;
    sub_1000A06C0(v88, v90, (char)v60);
    swift_bridgeObjectRelease();
    static Font.title2.getter();
    uint64_t v96 = (void *)Text.font(_:)();
    uint64_t v98 = v97;
    LOBYTE(v60) = v99;
    uint64_t v101 = v100;
    swift_release();
    sub_1000A06C0(v92, v94, v81);
    swift_bridgeObjectRelease();
    uint64_t v170 = v96;
    uint64_t v171 = v98;
    LOBYTE(v172) = v60 & 1;
    uint64_t v173 = v101;
    uint64_t v102 = v137;
    v137(v168, v139, v7);
    v102(v169, v140, v7);
    uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if (result)
    {
      uint64_t v103 = v166;
      uint64_t v104 = v160;
      uint64_t v105 = &v160[*(int *)(v166 + 48)];
      uint64_t v106 = v135;
      v135(v160, v168, v7);
      uint64_t v153 = v105;
      v106(v105, v169, v7);
      uint64_t v107 = v163;
      uint64_t v108 = &v163[*(int *)(v103 + 48)];
      uint64_t v109 = v132;
      v132(v163, v104, v7);
      v109(v108, v105, v7);
      uint64_t v110 = (uint64_t)v155;
      v106(v155, v107, v7);
      uint64_t v111 = v134;
      v134(v108, v7);
      uint64_t v112 = &v107[*(int *)(v103 + 48)];
      v106(v107, v104, v7);
      v106(v112, v153, v7);
      v106((char *)(v110 + *(int *)(v161 + 36)), v112, v7);
      v111(v107, v7);
      uint64_t v113 = v159;
      sub_1000AEEC8(v110, v159, &qword_100953238);
      id v114 = v154;
      View.dynamicTypeSize<A>(_:)();
      sub_10008DB18(v113, &qword_100953238);
      sub_1000A06C0((uint64_t)v170, v171, (char)v172);
      swift_bridgeObjectRelease();
      uint64_t v115 = v141;
      uint64_t v116 = v158;
      View.monospacedDigit()();
      v129(v114, v116);
      uint64_t v117 = v157;
      uint64_t v118 = v164;
      v127(v157, v115, v164);
      uint64_t v119 = v162;
      uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
      uint64_t v121 = v156;
      v120(v115, v156, v118);
      uint64_t v122 = v142;
      v120(v142, v117, v118);
      uint64_t v123 = v143;
      v120(v143, v115, v118);
      uint64_t v124 = sub_1000AFA94(&qword_100953310);
      v120(&v123[*(int *)(v124 + 48)], v122, v118);
      uint64_t v125 = *(void (**)(char *, uint64_t))(v119 + 8);
      v125(v117, v118);
      v125(v121, v118);
      v125(v122, v118);
      return ((uint64_t (*)(char *, uint64_t))v125)(v115, v118);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100284A94()
{
  uint64_t v1 = (int *)type metadata accessor for ScheduleDayRowView();
  uint64_t v2 = *(void **)(v0 + v1[7] + 8);
  unint64_t v3 = *(void *)(v0 + v1[6]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_7:
    uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType);
    swift_unknownObjectRelease();
    switch(v8)
    {
      case 0:
        goto LABEL_5;
      case 1:
        goto LABEL_8;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_12;
      default:
        return 0;
    }
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v3 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    JUMPOUT(0x100284CD4);
  }
  uint64_t v5 = (char *)*(id *)(v11 + 8 * v3 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  switch(v6)
  {
    case 0:
LABEL_5:
      uint64_t v1 = (int *)[*(id *)(v0 + v1[5]) localizedShortActiveEnergyUnitString];
      if (v1) {
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_7;
    case 1:
LABEL_8:
      uint64_t v1 = (int *)[*(id *)(v0 + v1[5]) localizedShortBriskMinutesUnitString];
      if (v1) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_10:
      uint64_t v1 = (int *)[*(id *)(v0 + v1[5]) localizedShortBriskMinutesUnitString];
      if (!v1)
      {
        __break(1u);
LABEL_12:
        uint64_t v1 = (int *)[*(id *)(v0 + v1[5]) localizedShortActiveHoursUnitString];
        if (!v1) {
          goto LABEL_18;
        }
      }
LABEL_13:
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v9;
    case 2:
      goto LABEL_10;
    case 3:
      goto LABEL_12;
    default:
      return 0;
  }
}

uint64_t sub_100284CF4()
{
  uint64_t v2 = (int *)type metadata accessor for ScheduleDayRowView();
  unint64_t v3 = *(void **)(v0 + v2[7] + 8);
  unint64_t v4 = *(void *)(v0 + v2[6]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v6 = (char *)*(id *)(v21 + 8 * v4 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v1 = &OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType;
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id v9 = [*(id *)(v0 + v2[5]) unitManager];
  if (!v9) {
    goto LABEL_29;
  }
  uint64_t v10 = v9;
  id v11 = [v9 unitManager];

  if ((unint64_t)(v8 - 1) < 2)
  {
    uint64_t v12 = &selRef_minuteUnit;
    goto LABEL_10;
  }
  if (v8)
  {
    uint64_t v12 = &selRef_countUnit;
LABEL_10:
    uint64_t v13 = self;
    goto LABEL_12;
  }
  uint64_t v12 = &selRef_userActiveEnergyBurnedUnit;
  uint64_t v13 = v11;
LABEL_12:
  uint64_t v2 = (int *)[v13 *v12];

  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v5;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = (char *)*(id *)(v21 + 8 * v4 + 32);
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

      switch(v16)
      {
        case 0:
          goto LABEL_16;
        case 1:
          goto LABEL_23;
        case 2:
          goto LABEL_25;
        default:
          goto LABEL_24;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    JUMPOUT(0x100284FF4);
  }
LABEL_22:
  uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + *v1);
  swift_unknownObjectRelease();
  switch(v20)
  {
    case 0:
LABEL_16:
      int IsCalorieUnit = FIUIHKUnitIsCalorieUnit();

      if (IsCalorieUnit) {
        uint64_t result = 10;
      }
      else {
        uint64_t result = 20;
      }
      break;
    case 1:
LABEL_23:

      uint64_t result = 10;
      break;
    case 2:
LABEL_25:

      uint64_t result = 5;
      break;
    default:
LABEL_24:

      uint64_t result = 1;
      break;
  }
  return result;
}

id sub_100285014(id a1)
{
  unint64_t v3 = (int *)type metadata accessor for ScheduleDayRowView();
  uint64_t v4 = v3[6];
  uint64_t v5 = v1 + v3[7];
  uint64_t v6 = *(void **)(v5 + 8);
  unint64_t v7 = *(void *)(v1 + v4);
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v6;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (((unint64_t)v37 & 0xC000000000000001) == 0)
  {
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(void *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = (char *)v37[v7 + 4];
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_30;
  }
  id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

  id result = [*(id *)(v1 + v3[5]) unitManager];
  if (result)
  {
    uint64_t v13 = result;
    id v14 = [result unitManager];

    if ((unint64_t)(v11 - 1) < 2)
    {
      uint64_t v15 = &selRef_minuteUnit;
    }
    else
    {
      if (!v11)
      {
        uint64_t v15 = &selRef_userActiveEnergyBurnedUnit;
        uint64_t v16 = v14;
LABEL_12:
        id v17 = [v16 *v15];

        a1 = [self quantityWithUnit:v17 doubleValue:(double)(uint64_t)a1];
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v3 = (int *)v8;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        uint64_t v18 = v37;
        if (((unint64_t)v37 & 0xC000000000000001) == 0)
        {
          if ((v7 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v7 < *(void *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v19 = v37[v7 + 4];
            goto LABEL_16;
          }
          __break(1u);
          goto LABEL_33;
        }
LABEL_30:
        uint64_t v19 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        LOBYTE(v11) = v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_day];

        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v18 = (id *)a1;
        uint64_t v21 = v3;
        static Published.subscript.getter();

        swift_release();
        id result = (id)swift_release();
        if (((unint64_t)v37 & 0xC000000000000001) == 0)
        {
          if ((v7 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v7 < *(void *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v22 = (char *)v37[v7 + 4];
LABEL_20:
            uint64_t v23 = v22;
            swift_bridgeObjectRelease();
            uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];

            uint64_t v25 = (objc_class *)type metadata accessor for GoalDay();
            uint64_t v26 = objc_allocWithZone(v25);
            v26[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = v11;
            *(void *)&v26[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v18;
            *(void *)&v26[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v24;
            v38.receiver = v26;
            v38.super_class = v25;
            [super init];
            uint64_t v28 = *(void **)(v5 + 8);
            unint64_t v29 = *(void *)(v1 + v4);
            swift_getKeyPath();
            swift_getKeyPath();
            id v30 = v28;
            id v31 = v27;
            uint64_t v32 = (void (*)(id **, void))static Published.subscript.modify();
            uint64_t v34 = v33;
            unint64_t v35 = *v33;
            id result = (id)swift_isUniquelyReferenced_nonNull_bridgeObject();
            *uint64_t v34 = v35;
            if (!result || (v35 & 0x8000000000000000) != 0 || (v35 & 0x4000000000000000) != 0)
            {
              id result = (id)sub_1005EC1A8(v35);
              unint64_t v35 = (unint64_t)result;
              *uint64_t v34 = (unint64_t)result;
            }
            if ((v29 & 0x8000000000000000) == 0)
            {
              if (v29 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                uint64_t v36 = *(void **)((v35 & 0xFFFFFFFFFFFFFF8) + 8 * v29 + 0x20);
                *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 8 * v29 + 0x20) = v31;

                specialized Array._endMutation()();
                v32(&v37, 0);

                swift_release();
                return (id)swift_release();
              }
              goto LABEL_37;
            }
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          __break(1u);
          goto LABEL_36;
        }
LABEL_33:
        uint64_t v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_20;
      }
      uint64_t v15 = &selRef_countUnit;
    }
    uint64_t v16 = self;
    goto LABEL_12;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1002854A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100285508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleDayRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10028556C()
{
}

uint64_t sub_100285584()
{
  return swift_deallocObject();
}

unint64_t sub_100285594()
{
  unint64_t result = qword_10094C828;
  if (!qword_10094C828)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094C828);
  }
  return result;
}

unint64_t sub_1002855D4()
{
  unint64_t result = qword_100953290;
  if (!qword_100953290)
  {
    sub_1000A1370(&qword_100953278);
    sub_100285674();
    sub_1000A132C(&qword_10094C930, &qword_10094C938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953290);
  }
  return result;
}

unint64_t sub_100285674()
{
  unint64_t result = qword_100953298;
  if (!qword_100953298)
  {
    sub_1000A1370(&qword_100953270);
    sub_1000A132C(&qword_1009532A0, &qword_100953268);
    sub_1000A132C(&qword_1009532A8, &qword_1009532B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953298);
  }
  return result;
}

void sub_10028573C()
{
}

void sub_100285744(char a1)
{
}

uint64_t sub_1002857A8()
{
  return swift_deallocObject();
}

unint64_t sub_1002857C0()
{
  unint64_t result = qword_1009532D0;
  if (!qword_1009532D0)
  {
    sub_1000A1370(&qword_1009532C8);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009532D0);
  }
  return result;
}

unint64_t sub_100285864()
{
  unint64_t result = qword_100953318;
  if (!qword_100953318)
  {
    sub_1000A1370(&qword_100953208);
    sub_100285960(&qword_100953320, &qword_100953200, (void (*)(void))sub_100285930);
    sub_1000A132C(&qword_100953340, &qword_100953218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953318);
  }
  return result;
}

uint64_t sub_100285930()
{
  return sub_100285960(&qword_100953328, &qword_1009531F8, (void (*)(void))sub_1002859DC);
}

uint64_t sub_100285960(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002859DC()
{
  unint64_t result = qword_100953330;
  if (!qword_100953330)
  {
    sub_1000A1370(&qword_1009531F0);
    sub_1000A132C(&qword_100953338, &qword_1009531E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953330);
  }
  return result;
}

double sub_100285AF0()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer) frame];
  CGRectGetWidth(v21);
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  double v2 = v1;
  sub_1001C91B8(0, 7, 0);
  unint64_t v4 = _swiftEmptyArrayStorage[2];
  unint64_t v3 = _swiftEmptyArrayStorage[3];
  unint64_t v5 = v4 + 1;
  if (v4 >= v3 >> 1) {
    sub_1001C91B8(v3 > 1, v4 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v5;
  *(double *)&_swiftEmptyArrayStorage[v4 + 4] = v2 * 0.0 + 2.0;
  unint64_t v6 = _swiftEmptyArrayStorage[3];
  int64_t v7 = v4 + 2;
  if (v5 >= v6 >> 1) {
    sub_1001C91B8(v6 > 1, v7, 1);
  }
  _swiftEmptyArrayStorage[2] = v7;
  *(double *)&_swiftEmptyArrayStorage[v5 + 4] = v2 + 2.0;
  unint64_t v9 = _swiftEmptyArrayStorage[2];
  unint64_t v8 = _swiftEmptyArrayStorage[3];
  unint64_t v10 = v9 + 1;
  if (v9 >= v8 >> 1) {
    sub_1001C91B8(v8 > 1, v9 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v10;
  *(double *)&_swiftEmptyArrayStorage[v9 + 4] = v2 + v2 + 2.0;
  unint64_t v11 = _swiftEmptyArrayStorage[3];
  int64_t v12 = v9 + 2;
  if (v10 >= v11 >> 1) {
    sub_1001C91B8(v11 > 1, v12, 1);
  }
  _swiftEmptyArrayStorage[2] = v12;
  *(double *)&_swiftEmptyArrayStorage[v10 + 4] = v2 * 3.0 + 2.0;
  unint64_t v14 = _swiftEmptyArrayStorage[2];
  unint64_t v13 = _swiftEmptyArrayStorage[3];
  unint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1) {
    sub_1001C91B8(v13 > 1, v14 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v15;
  *(double *)&_swiftEmptyArrayStorage[v14 + 4] = v2 * 4.0 + 2.0;
  unint64_t v16 = _swiftEmptyArrayStorage[3];
  int64_t v17 = v14 + 2;
  if (v15 >= v16 >> 1) {
    sub_1001C91B8(v16 > 1, v17, 1);
  }
  _swiftEmptyArrayStorage[2] = v17;
  *(double *)&_swiftEmptyArrayStorage[v15 + 4] = v2 * 5.0 + 2.0;
  unint64_t v19 = _swiftEmptyArrayStorage[2];
  unint64_t v18 = _swiftEmptyArrayStorage[3];
  if (v19 >= v18 >> 1) {
    sub_1001C91B8(v18 > 1, v19 + 1, 1);
  }
  double result = v2 * 6.0 + 2.0;
  _swiftEmptyArrayStorage[2] = v19 + 1;
  *(double *)&_swiftEmptyArrayStorage[v19 + 4] = result;
  return result;
}

void sub_100285DBC()
{
  qword_1009979A0 = (uint64_t)&off_1008B2C50;
}

char *sub_100285DD0(char a1, uint64_t a2, double *a3, void *a4)
{
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  unint64_t v6 = v4;
  *(void *)&v4[v5] = sub_1005CA0D4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v6[v7] = sub_1006D13E4();
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container90;
  *(void *)&v6[v8] = sub_1006D13E4();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container365;
  *(void *)&v6[v9] = sub_1006D13E4();
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_textContainer;
  *(void *)&v6[v10] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer;
  *(void *)&v6[v11] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer90;
  *(void *)&v6[v12] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90;
  *(void *)&v6[v13] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer365;
  *(void *)&v6[v14] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365;
  *(void *)&v6[v15] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartMask;
  type metadata accessor for TrendChartMaskingView();
  *(void *)&v6[v16] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekLabels;
  id v18 = [self secondaryLabelColor];
  uint64_t v19 = sub_10028B400((uint64_t)v18);

  uint64_t v72 = v17;
  *(void *)&v6[v17] = v19;
  id v20 = sub_1005CA0D4();
  CGRect v21 = self;
  double result = (char *)[v21 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v23 = result;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_minAxisLabel;
  [v20 setFont:result];

  *(void *)&v6[v24] = v20;
  id v25 = sub_1005CA0D4();
  double result = (char *)[v21 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v26 = result;
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_midAxisLabel;
  [v25 setFont:result];

  *(void *)&v6[v27] = v25;
  id v28 = sub_1005CA0D4();
  double result = (char *)[v21 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  unint64_t v29 = result;
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel;
  [v28 setFont:result];

  *(void *)&v6[v30] = v28;
  uint64_t v31 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_div;
  *(void *)&v6[v31] = sub_1006D134C();
  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90;
  type metadata accessor for TrendsScrubberPlatterView();
  *(void *)&v6[v32] = sub_1006D13E4();
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365;
  *(void *)&v6[v33] = sub_1006D13E4();
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterLayoutGuide;
  *(void *)&v6[v34] = [objc_allocWithZone((Class)UILayoutGuide) init];
  unint64_t v35 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_title90];
  uint64_t v36 = self;
  id v37 = [v36 mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  *unint64_t v35 = v40;
  v35[1] = v42;
  char v43 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_title365];
  id v44 = [v36 mainBundle];
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v48;

  *char v43 = v47;
  v43[1] = v49;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint] = 0;
  v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type] = a1;
  uint64_t v50 = &v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90];
  double v51 = *(double *)(a2 + 112);
  long long v52 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v50 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v50 + 5) = v52;
  *((_OWORD *)v50 + 6) = *(_OWORD *)(a2 + 96);
  *((void *)v50 + 14) = *(void *)(a2 + 112);
  long long v53 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)a2;
  *((_OWORD *)v50 + 1) = v53;
  long long v54 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v50 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v50 + 3) = v54;
  char v55 = (double *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365];
  double v56 = a3[14];
  v55[14] = v56;
  long long v57 = *((_OWORD *)a3 + 6);
  long long v58 = *((_OWORD *)a3 + 4);
  *((_OWORD *)v55 + 5) = *((_OWORD *)a3 + 5);
  *((_OWORD *)v55 + 6) = v57;
  long long v59 = *((_OWORD *)a3 + 2);
  *((_OWORD *)v55 + 3) = *((_OWORD *)a3 + 3);
  *((_OWORD *)v55 + 4) = v58;
  long long v60 = *(_OWORD *)a3;
  *((_OWORD *)v55 + 1) = *((_OWORD *)a3 + 1);
  *((_OWORD *)v55 + 2) = v59;
  *(_OWORD *)char v55 = v60;
  if (v51 <= v56) {
    double v51 = v56;
  }
  *(double *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogramMaxY] = v51;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_formattingManager] = a4;
  if (*(void *)&v6[v72] >> 62)
  {
    id v70 = a4;
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v61 = a4;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  id v62 = objc_allocWithZone((Class)UIStackView);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v64 = [v62 initWithArrangedSubviews:isa];

  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekStack] = v64;
  id v65 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) init];
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_longPressRecognizer] = v65;

  v76.receiver = v6;
  v76.super_class = (Class)type metadata accessor for TrendDetailDailyAverageView();
  NSString v66 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v67 = *(void **)&v66[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_longPressRecognizer];
  uint64_t v68 = v66;
  [v67 addTarget:v68 action:"longPressWithSender:"];
  [v67 setMinimumPressDuration:0.2];
  [v68 addGestureRecognizer:v67];
  [v68 addSubview:*(void *)&v68[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer]];
  [v68 addLayoutGuide:*(void *)&v68[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_textContainer]];
  uint64_t v69 = *(void **)&v68[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekStack];
  [v69 setDistribution:1];
  [v69 setAxis:0];
  [v69 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v69 setSemanticContentAttribute:3];
  [v68 addSubview:v69];
  sub_100286E80();
  sub_100287494();
  sub_100287EC0();

  return v68;
}

id sub_100286554(id result)
{
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t)result;
  if (qword_10094A7B8 != -1) {
    double result = (id)swift_once();
  }
  if (*(void *)(qword_1009979A0 + 16) <= v3) {
    return 0;
  }
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned __int8 v4 = sub_10027C798(*(void *)(qword_1009979A0 + 8 * v3 + 32));
  if (v4 == 7) {
    return 0;
  }
  uint64_t v5 = sub_1006D4658(v4);
  if (v6) {
    return 0;
  }
  double v7 = *(double *)&v5;
  uint64_t v8 = *(char *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type);
  id v9 = sub_10008CC68(byte_100759778[v8]);
  id v10 = [self quantityWithUnit:v9 doubleValue:v7];

  if ((((_BYTE)v8 - 3) & 0xFB) != 0)
  {
    id v11 = sub_100673F98(v10, v8);
    if ((v12 & 1) == 0)
    {
      id v13 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v11];
      id v14 = [self stringWithNumber:v13 decimalPrecision:qword_100759730[v8] roundingMode:4];

      if (v14)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        sub_1000AAB04(v8, 0, v7);
        if (v18)
        {
          sub_1000A06D0();
          uint64_t v19 = StringProtocol.localizedUppercase.getter();
          uint64_t v21 = v20;
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        goto LABEL_18;
      }
    }

    return 0;
  }
  uint64_t v15 = (uint64_t)sub_100674F18(v10);
  uint64_t v17 = v22;

  if (!v17) {
    return 0;
  }
  sub_1000AAB04(v8, 0, v7);
  if (!v23)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  uint64_t v21 = 0xE000000000000000;
LABEL_16:
  double result = [self _preferredFontForTextStyle:UIFontTextStyleTitle3 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (result)
  {
    uint64_t v24 = result;
    id v25 = sub_10052463C(v15, v17, v19, v21, result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v25;
  }
LABEL_22:
  __break(1u);
  return result;
}

id sub_100286854(id result)
{
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t)result;
  if (qword_10094A7B8 != -1) {
    double result = (id)swift_once();
  }
  if (*(void *)(qword_1009979A0 + 16) <= v3) {
    return 0;
  }
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned __int8 v4 = sub_10027C798(*(void *)(qword_1009979A0 + 8 * v3 + 32));
  if (v4 == 7) {
    return 0;
  }
  uint64_t v5 = sub_1006D4658(v4);
  if (v6) {
    return 0;
  }
  double v7 = *(double *)&v5;
  uint64_t v8 = *(char *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type);
  id v9 = sub_10008CC68(byte_100759778[v8]);
  id v10 = [self quantityWithUnit:v9 doubleValue:v7];

  if ((((_BYTE)v8 - 3) & 0xFB) != 0)
  {
    id v11 = sub_100673F98(v10, v8);
    if ((v12 & 1) == 0)
    {
      id v13 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v11];
      id v14 = [self stringWithNumber:v13 decimalPrecision:qword_100759730[v8] roundingMode:4];

      if (v14)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        sub_1000AAB04(v8, 0, v7);
        if (v18)
        {
          sub_1000A06D0();
          uint64_t v19 = StringProtocol.localizedUppercase.getter();
          uint64_t v21 = v20;
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        goto LABEL_18;
      }
    }

    return 0;
  }
  uint64_t v15 = (uint64_t)sub_100674F18(v10);
  uint64_t v17 = v22;

  if (!v17) {
    return 0;
  }
  sub_1000AAB04(v8, 0, v7);
  if (!v23)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  uint64_t v21 = 0xE000000000000000;
LABEL_16:
  double result = [self _preferredFontForTextStyle:UIFontTextStyleTitle3 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (result)
  {
    uint64_t v24 = result;
    id v25 = sub_10052463C(v15, v17, v19, v21, result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v25;
  }
LABEL_22:
  __break(1u);
  return result;
}

id sub_100286B54()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel);
  uint64_t v2 = self;
  id result = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unsigned __int8 v4 = result;
  [v1 setFont:result];

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_midAxisLabel);
  id result = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char v6 = result;
  [v5 setFont:result];

  double v7 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_minAxisLabel);
  id result = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  [v7 setFont:result];

  unint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekLabels);
  if (v9 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10)
    {
LABEL_6:
      uint64_t v11 = 4;
      while (1)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v9 + 8 * v11);
        }
        id v13 = v12;
        uint64_t v14 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
        {
          __break(1u);
          goto LABEL_17;
        }
        id result = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
        if (!result) {
          break;
        }
        uint64_t v15 = result;
        [v13 setFont:result];

        ++v11;
        if (v14 == v10) {
          goto LABEL_13;
        }
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_6;
    }
  }
LABEL_13:

  return (id)swift_bridgeObjectRelease();
}

void sub_100286E80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel];
  [v1 addSubview:v2];
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleCallout];
  [v2 setFont:v3];

  unsigned __int8 v4 = self;
  id v5 = [v4 labelColor];
  [v2 setTextColor:v5];

  char v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v10];

  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel];
  [v1 addSubview:v11];
  id v44 = v4;
  id v12 = [v4 secondaryLabelColor];
  [v11 setTextColor:v12];

  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_formattingManager];
  uint64_t v14 = v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type];
  id v15 = sub_10008CC68(byte_100759778[v14]);
  double v16 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogramMaxY];
  uint64_t v17 = self;
  id v18 = [v17 quantityWithUnit:v15 doubleValue:v16];

  char v46 = (v14 - 3) & 0xFB;
  if (((v14 - 3) & 0xFB) != 0)
  {
    id v19 = [v6 mainBundle];
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100674CF4(v18, v14);
    uint64_t v23 = v22;

    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_3:
      uint64_t v24 = &selRef__presentShareSheetWithTitle_image_workoutData_;
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_100674F18(v18);
    uint64_t v27 = v26;

    if (v27) {
      goto LABEL_3;
    }
  }
  NSString v25 = 0;
  uint64_t v24 = &selRef__presentShareSheetWithTitle_image_workoutData_;
LABEL_6:
  [v11 setText:v25];

  id v28 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_midAxisLabel];
  [v1 v24[268] v28];
  id v29 = [v4 secondaryLabelColor];
  [v28 setTextColor:v29];

  id v30 = sub_10008CC68(byte_100759778[v14]);
  id v45 = [v17 quantityWithUnit:v30 doubleValue:v16 * 0.5];

  if (v46)
  {
    id v31 = [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
    if (!v31)
    {
      __break(1u);
      return;
    }
    uint64_t v32 = v31;
    id v33 = sub_1005F20F4(v31, v14);

    [v45 doubleValueForUnit:v33];
    double v35 = v34;

    id v36 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v35];
    NSString v37 = [self stringWithNumber:v36 decimalPrecision:qword_100759730[v14] roundingMode:4];

    goto LABEL_11;
  }
  sub_100674238(v45);
  if (v38)
  {
    swift_bridgeObjectRelease();
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
LABEL_11:
    [v28 setText:v37];
  }
  id v39 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_minAxisLabel];
  [v1 v24[268] v39];
  id v40 = [v44 secondaryLabelColor];
  [v39 setTextColor:v40];

  if (v46)
  {
    uint64_t v41 = self;
    id v42 = [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
    id v43 = [v41 stringWithNumber:v42 decimalPrecision:1];

    [v39 setText:v43];
  }
}

id sub_100287494()
{
  uint64_t v1 = v0;
  id v2 = [v0 layer];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer];
  [v2 addSublayer:v3];

  id v77 = self;
  id v4 = [v77 tertiaryLabelColor];
  id v5 = [v4 CGColor];

  [v3 setStrokeColor:v5];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100756B20;
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  *(NSNumber *)(v6 + 32) = NSNumber.init(floatLiteral:)(1.0);
  *(NSNumber *)(v6 + 40) = NSNumber.init(floatLiteral:)(1.0);
  uint64_t v80 = v6;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setLineDashPattern:isa];

  NSString v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer];
  id v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container365];
  [v8 addSubview:v9];
  NSString v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container90];
  [v8 addSubview:v10];
  id v11 = [v10 layer];
  id v76 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90];
  [v11 addSublayer:];

  id v12 = [v10 layer];
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer90];
  id v73 = v13;
  [v12 addSublayer:];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = objc_allocWithZone((Class)CAFilter);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithType:v15];

  [v13 setCompositingFilter:v16];
  id v17 = [v9 layer];
  id v75 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365];
  [v17 addSublayer:];

  id v18 = [v9 layer];
  id v19 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer365];
  [v18 addSublayer:v19];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v20 = objc_allocWithZone((Class)CAFilter);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithType:v21];

  [v19 setCompositingFilter:v22];
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10074E640;
  LOBYTE(v13) = v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type];
  char v74 = (char)v13;
  uint64_t v24 = (char *)sub_1005F2334((char)v13);
  NSString v25 = (char *)*(id *)&v24[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v26 = *(id *)&v25[OBJC_IVAR____TtC10FitnessApp14GradientColors_light];
  id v27 = [v26 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v29 = v28;
  *(void *)(v23 + 56) = v28;
  *(void *)(v23 + 32) = v27;
  id v30 = (char *)sub_1005F2334((char)v13);
  id v31 = (char *)*(id *)&v30[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v32 = *(id *)&v31[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark];
  id v33 = [v32 CGColor];

  *(void *)(v23 + 88) = v29;
  *(void *)(v23 + 64) = v33;
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v73 setColors:v34];

  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_10074E640;
  id v36 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.75 alpha:1.0];
  id v37 = [v36 CGColor];

  *(void *)(v35 + 56) = v29;
  *(void *)(v35 + 32) = v37;
  id v38 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.6 alpha:1.0];
  id v39 = [v38 CGColor];

  *(void *)(v35 + 88) = v29;
  *(void *)(v35 + 64) = v39;
  Class v40 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 setColors:v40];

  id v41 = [v77 blackColor];
  id v42 = [v41 CGColor];

  [v76 setStrokeColor:v42];
  [v76 setLineWidth:4.0];
  [v76 setLineCap:kCALineCapRound];
  id v43 = [v77 blackColor];
  id v44 = [v43 CGColor];

  [v75 setStrokeColor:v44];
  [v75 setLineWidth:4.0];
  [v75 setLineCap:kCALineCapRound];
  [v1 addLayoutGuide:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterLayoutGuide]];
  id v45 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90];
  [v1 addSubview:v45];
  char v46 = (char *)sub_1005F2334(v74);
  id v47 = *(id *)&v46[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  uint64_t v48 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  uint64_t v49 = *(void **)&v45[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
  *(void *)&v45[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v47;
  id v50 = v47;

  id v51 = [v45 layer];
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  if (!v52) {
    goto LABEL_4;
  }
  long long v53 = (void *)v52;
  id v54 = [*(id *)&v45[v48] CGColor];
  [v53 setFillColor:v54];

  [v45 setAlpha:0.0];
  char v55 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365];
  [v1 addSubview:v55];
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  Class v56 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  Class v57 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  long long v58 = (objc_class *)type metadata accessor for GradientColors();
  long long v59 = (char *)objc_allocWithZone(v58);
  *(void *)&v59[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v56;
  *(void *)&v59[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v57;
  v79.receiver = v59;
  v79.super_class = v58;
  [super init];
  Class v61 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  id v62 = (objc_class *)type metadata accessor for MetricColors();
  uint64_t v63 = (char *)objc_allocWithZone(v62);
  *(void *)&v63[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v60;
  *(void *)&v63[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v61;
  v78.receiver = v63;
  v78.super_class = v62;
  id v64 = [super init];
  id v65 = *(id *)&v64[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  uint64_t v66 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  id v67 = *(void **)&v55[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
  *(void *)&v55[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v65;
  id v68 = v65;

  id v51 = [v55 layer];
  self;
  uint64_t v69 = swift_dynamicCastObjCClass();
  if (v69)
  {
    id v70 = (void *)v69;
    id v71 = [*(id *)&v55[v66] CGColor];
    [v70 setFillColor:v71];

    [v55 setAlpha:0.0];
    return [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_div]];
  }
  else
  {
LABEL_4:

    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_100287EC0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel];
  id v2 = [v1 topAnchor];
  id v3 = [v0 topAnchor];
  id v210 = [v2 constraintEqualToAnchor:v3 constant:9.0];

  v213 = v1;
  id v4 = [v1 leadingAnchor];
  id v5 = [v0 leadingAnchor];
  id v208 = [v4 constraintEqualToAnchor:v5 constant:16.0];

  id v6 = [v1 trailingAnchor];
  id v7 = [v0 trailingAnchor];
  id v206 = [v6 constraintEqualToAnchor:v7 constant:-16.0];

  NSString v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer];
  id v9 = [v8 leftAnchor];
  id v10 = [v0 leftAnchor];
  id v204 = [v9 constraintEqualToAnchor:v10 constant:14.0];

  id v11 = [v8 rightAnchor];
  id v12 = [v0 rightAnchor];
  id v202 = [v11 constraintEqualToAnchor:v12 constant:-60.0];

  id v13 = [v8 heightAnchor];
  id v200 = [v13 constraintEqualToConstant:66.0];

  id v14 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container90];
  id v15 = [v14 topAnchor];
  id v16 = [v8 topAnchor];
  id v198 = [v15 constraintEqualToAnchor:v16];

  id v17 = [v14 leftAnchor];
  id v18 = [v8 leftAnchor];
  id v196 = [v17 constraintEqualToAnchor:v18];

  id v19 = [v14 rightAnchor];
  id v20 = [v8 rightAnchor];
  id v194 = [v19 constraintEqualToAnchor:v20];

  id v21 = [v14 bottomAnchor];
  id v22 = [v8 bottomAnchor];
  id v192 = [v21 constraintEqualToAnchor:v22];

  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container365];
  id v24 = [v23 topAnchor];
  id v25 = [v8 topAnchor];
  id v190 = [v24 constraintEqualToAnchor:v25];

  id v26 = [v23 leftAnchor];
  id v27 = [v8 leftAnchor];
  id v188 = [v26 constraintEqualToAnchor:v27];

  id v28 = [v23 rightAnchor];
  id v29 = [v8 rightAnchor];
  id v186 = [v28 constraintEqualToAnchor:v29];

  id v30 = [v23 bottomAnchor];
  id v31 = [v8 bottomAnchor];
  id v184 = [v30 constraintEqualToAnchor:v31];

  id v32 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_textContainer];
  id v33 = [v32 topAnchor];
  id v34 = [v8 bottomAnchor];
  id v182 = [v33 constraintEqualToAnchor:v34];

  id v35 = [v32 leftAnchor];
  id v36 = [v8 leftAnchor];
  id v180 = [v35 constraintEqualToAnchor:v36];

  id v37 = [v32 rightAnchor];
  id v38 = [v8 rightAnchor];
  id v178 = [v37 constraintEqualToAnchor:v38];

  id v39 = [v32 bottomAnchor];
  id v40 = [v0 bottomAnchor];
  id v176 = [v39 constraintEqualToAnchor:v40 constant:-10.0];

  id v41 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekStack];
  id v42 = [v41 leftAnchor];
  id v43 = [v32 leftAnchor];
  id v174 = [v42 constraintEqualToAnchor:v43 constant:2.0];

  id v44 = [v41 rightAnchor];
  id v45 = [v32 rightAnchor];
  id v172 = [v44 constraintEqualToAnchor:v45 constant:2.0];

  id v46 = [v41 topAnchor];
  id v47 = [v32 topAnchor];
  id v170 = [v46 constraintEqualToAnchor:v47];

  id v48 = [v41 bottomAnchor];
  id v49 = [v32 bottomAnchor];
  id v168 = [v48 constraintEqualToAnchor:v49];

  id v50 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel];
  id v51 = [v50 topAnchor];
  id v52 = [v213 bottomAnchor];
  id v166 = [v51 constraintEqualToAnchor:v52 constant:8.0];

  id v53 = [v50 bottomAnchor];
  id v54 = [v8 topAnchor];
  id v163 = [v53 constraintEqualToAnchor:v54 constant:-3.0];

  id v55 = [v50 rightAnchor];
  id v56 = [v0 rightAnchor];
  id v160 = [v55 constraintEqualToAnchor:v56 constant:-8.0];

  Class v57 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_minAxisLabel];
  id v58 = [v57 bottomAnchor];
  id v59 = [v8 bottomAnchor];
  id v165 = [v58 constraintEqualToAnchor:v59 constant:-3.0];

  id v60 = [v57 rightAnchor];
  id v61 = [v50 rightAnchor];
  id v162 = [v60 constraintEqualToAnchor:v61];

  id v62 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_midAxisLabel];
  id v63 = [v62 bottomAnchor];
  id v64 = [v8 centerYAnchor];
  id v159 = [v63 constraintEqualToAnchor:v64 constant:-3.0];

  id v65 = [v62 rightAnchor];
  id v66 = [v50 rightAnchor];
  id v158 = [v65 constraintEqualToAnchor:v66];

  id v67 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_div];
  id v68 = [v67 leadingAnchor];
  id v69 = [v0 leadingAnchor];
  id v152 = [v68 constraintEqualToAnchor:v69 constant:16.0];

  id v70 = [v67 trailingAnchor];
  id v71 = [v0 trailingAnchor];
  id v157 = [v70 constraintEqualToAnchor:v71];

  id v72 = [v67 heightAnchor];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v154 = [v72 constraintEqualToConstant:*(double *)&qword_100998308];

  id v73 = [v67 bottomAnchor];
  id v74 = [v0 bottomAnchor];
  id v156 = [v73 constraintEqualToAnchor:v74];

  id v75 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterLayoutGuide];
  id v76 = [v75 topAnchor];
  id v77 = [v0 topAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77 constant:2.0];

  id v79 = [v75 widthAnchor];
  id v151 = [v79 constraintEqualToConstant:7.0];

  id v80 = [v75 heightAnchor];
  uint64_t v81 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365];
  id v82 = [v81 heightAnchor];
  id v155 = [v80 constraintEqualToAnchor:v82 constant:0.0];

  id v83 = [v75 centerXAnchor];
  id v84 = [v8 leftAnchor];
  id v85 = [v83 constraintEqualToAnchor:v84 constant:0.0];

  LODWORD(v86) = 1144750080;
  [v85 setPriority:v86];
  uint64_t v87 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint] = v85;
  id v149 = v85;

  id v88 = [v81 topAnchor];
  id v89 = [v75 topAnchor];
  id v148 = [v88 constraintEqualToAnchor:v89 constant:0.0];

  id v90 = [v81 rightAnchor];
  id v91 = [v75 leftAnchor];
  id v147 = [v90 constraintEqualToAnchor:v91 constant:0.0];

  id v92 = [v81 leftAnchor];
  id v93 = [v0 leftAnchor];
  id v146 = [v92 constraintGreaterThanOrEqualToAnchor:v93 constant:7.0];

  uint64_t v94 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90];
  id v95 = [v94 topAnchor];
  id v96 = [v75 topAnchor];
  id v144 = [v95 constraintEqualToAnchor:v96 constant:0.0];

  id v97 = [v94 leftAnchor];
  id v98 = [v75 rightAnchor];
  id v99 = [v97 constraintEqualToAnchor:v98 constant:0.0];

  id v100 = [v94 rightAnchor];
  id v101 = [v0 rightAnchor];
  id v153 = [v100 constraintLessThanOrEqualToAnchor:v101 constant:-7.0];

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = xmmword_100752650;
  *(void *)(v102 + 32) = v210;
  *(void *)(v102 + 40) = v208;
  *(void *)(v102 + 48) = v206;
  specialized Array._endMutation()();
  uint64_t v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_100752650;
  *(void *)(v103 + 32) = v163;
  *(void *)(v103 + 40) = v160;
  *(void *)(v103 + 48) = v166;
  specialized Array._endMutation()();
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_100752650;
  *(void *)(v104 + 32) = v204;
  *(void *)(v104 + 40) = v202;
  *(void *)(v104 + 48) = v200;
  specialized Array._endMutation()();
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = xmmword_100751160;
  *(void *)(v105 + 32) = v198;
  *(void *)(v105 + 40) = v196;
  *(void *)(v105 + 48) = v194;
  *(void *)(v105 + 56) = v192;
  specialized Array._endMutation()();
  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_100751160;
  *(void *)(v106 + 32) = v190;
  *(void *)(v106 + 40) = v188;
  *(void *)(v106 + 48) = v186;
  *(void *)(v106 + 56) = v184;
  specialized Array._endMutation()();
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_100751160;
  *(void *)(v107 + 32) = v182;
  *(void *)(v107 + 40) = v180;
  *(void *)(v107 + 48) = v178;
  *(void *)(v107 + 56) = v176;
  specialized Array._endMutation()();
  uint64_t v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_100751160;
  *(void *)(v108 + 32) = v174;
  *(void *)(v108 + 40) = v172;
  *(void *)(v108 + 48) = v170;
  *(void *)(v108 + 56) = v168;
  specialized Array._endMutation()();
  uint64_t v109 = swift_allocObject();
  *(_OWORD *)(v109 + 16) = xmmword_100756B20;
  *(void *)(v109 + 32) = v165;
  *(void *)(v109 + 40) = v162;
  specialized Array._endMutation()();
  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_100756B20;
  *(void *)(v110 + 32) = v159;
  *(void *)(v110 + 40) = v158;
  specialized Array._endMutation()();
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_100751160;
  *(void *)(v111 + 32) = v152;
  *(void *)(v111 + 40) = v157;
  *(void *)(v111 + 48) = v154;
  *(void *)(v111 + 56) = v156;
  specialized Array._endMutation()();
  uint64_t v112 = swift_allocObject();
  *(_OWORD *)(v112 + 16) = xmmword_100751160;
  *(void *)(v112 + 32) = v78;
  *(void *)(v112 + 40) = v151;
  *(void *)(v112 + 48) = v155;
  *(void *)(v112 + 56) = v149;
  specialized Array._endMutation()();
  uint64_t v113 = swift_allocObject();
  *(_OWORD *)(v113 + 16) = xmmword_100752650;
  *(void *)(v113 + 32) = v148;
  *(void *)(v113 + 40) = v146;
  *(void *)(v113 + 48) = v147;
  specialized Array._endMutation()();
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = xmmword_100752650;
  *(void *)(v114 + 32) = v144;
  *(void *)(v114 + 40) = v99;
  *(void *)(v114 + 48) = v153;
  specialized Array._endMutation()();
  id v214 = v149;
  id v150 = v210;
  id v145 = v208;
  id v207 = v206;
  id v212 = v163;
  id v211 = v160;
  id v209 = v166;
  id v205 = v204;
  id v203 = v202;
  id v201 = v200;
  id v199 = v198;
  id v197 = v196;
  id v195 = v194;
  id v193 = v192;
  id v191 = v190;
  id v167 = v188;
  id v164 = v186;
  id v161 = v184;
  id v143 = v182;
  id v142 = v180;
  id v141 = v178;
  id v140 = v176;
  id v139 = v174;
  id v138 = v172;
  id v137 = v170;
  id v136 = v168;
  id v189 = v165;
  id v187 = v162;
  id v185 = v159;
  id v183 = v158;
  id v181 = v152;
  id v179 = v157;
  id v177 = v154;
  id v175 = v156;
  id v171 = v78;
  id v169 = v151;
  id v115 = v155;
  id v173 = v148;
  id v116 = v146;
  id v117 = v147;
  id v118 = v144;
  id v119 = v99;
  id v120 = v153;
  unint64_t v121 = swift_bridgeObjectRetain();
  sub_1001E4080(v121);
  unint64_t v122 = swift_bridgeObjectRetain();
  sub_1001E4080(v122);
  unint64_t v123 = swift_bridgeObjectRetain();
  sub_1001E4080(v123);
  unint64_t v124 = swift_bridgeObjectRetain();
  sub_1001E4080(v124);
  unint64_t v125 = swift_bridgeObjectRetain();
  sub_1001E4080(v125);
  unint64_t v126 = swift_bridgeObjectRetain();
  sub_1001E4080(v126);
  unint64_t v127 = swift_bridgeObjectRetain();
  sub_1001E4080(v127);
  unint64_t v128 = swift_bridgeObjectRetain();
  sub_1001E4080(v128);
  unint64_t v129 = swift_bridgeObjectRetain();
  sub_1001E4080(v129);
  unint64_t v130 = swift_bridgeObjectRetain();
  sub_1001E4080(v130);
  unint64_t v131 = swift_bridgeObjectRetain();
  sub_1001E4080(v131);
  unint64_t v132 = swift_bridgeObjectRetain();
  sub_1001E4080(v132);
  unint64_t v133 = swift_bridgeObjectRetain();
  sub_1001E4080(v133);
  uint64_t v134 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v134 activateConstraints:isa];

  sub_1000AFA94(&qword_100953460);
  swift_arrayDestroy();
}

id sub_10028963C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90) bounds];
  CGFloat x = v28.origin.x;
  CGFloat y = v28.origin.y;
  CGFloat width = v28.size.width;
  CGFloat height = v28.size.height;
  double v5 = CGRectGetHeight(v28);
  sub_100285AF0();
  uint64_t v7 = v6;
  int64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    sub_1001C91B8(0, v8, 0);
    uint64_t v9 = 0;
    unint64_t v10 = _swiftEmptyArrayStorage[2];
    do
    {
      double v11 = *(double *)(v7 + 8 * v9 + 32);
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v10 >= v12 >> 1) {
        sub_1001C91B8(v12 > 1, v10 + 1, 1);
      }
      ++v9;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      *(double *)&_swiftEmptyArrayStorage[v10++ + 4] = v11 + 4.0 + 5.0;
    }
    while (v8 != v9);
  }
  swift_bridgeObjectRelease();
  id v13 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90);
  if (*(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 112) > *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 112)) {
    double v14 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 112);
  }
  else {
    double v14 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 112);
  }
  id v15 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v16 = _swiftEmptyArrayStorage[2];
  if (v16)
  {
    if (qword_10094A7B8 != -1) {
      goto LABEL_24;
    }
    while (1)
    {
      uint64_t v17 = 0;
      uint64_t v18 = qword_1009979A0;
      uint64_t v19 = qword_1009979A0 + 32;
      while (v17 >= *(void *)(v18 + 16))
      {
LABEL_12:
        if (v16 == ++v17) {
          goto LABEL_22;
        }
      }
      if ((v17 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_24:
      swift_once();
    }
    unint64_t v20 = *(void *)(v19 + 8 * v17) - 1;
    if (v20 < 7 && v20 < *(void *)(*v13 + 16))
    {
      uint64_t v21 = 24 * v20;
      uint64_t v22 = *v13 + 24 * v20;
      if ((*(unsigned char *)(v22 + 48) & 1) == 0)
      {
        uint64_t v23 = v13[7];
        if (v20 < *(void *)(v23 + 16) && (*(unsigned char *)(v23 + v21 + 48) & 1) == 0)
        {
          double v24 = *(double *)(v23 + v21 + 32);
          if (v24 > 0.0)
          {
            double v25 = *(double *)&_swiftEmptyArrayStorage[v17 + 4];
            double v26 = *(double *)(v22 + 32) / v24 / v14;
            v29.origin.CGFloat x = x;
            v29.origin.CGFloat y = y;
            v29.size.CGFloat width = width;
            v29.size.CGFloat height = height;
            [v15 moveToPoint:v25, CGRectGetMaxY(v29) + -2.0];
            v30.origin.CGFloat x = x;
            v30.origin.CGFloat y = y;
            v30.size.CGFloat width = width;
            v30.size.CGFloat height = height;
            [v15 addLineToPoint:CGPointMake(v25, CGRectGetMaxY(v30) - v5 * v26 + 2.0)];
          }
        }
      }
    }
    goto LABEL_12;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100289930()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365) bounds];
  CGFloat x = v23.origin.x;
  CGFloat y = v23.origin.y;
  CGFloat width = v23.size.width;
  CGFloat height = v23.size.height;
  double v5 = CGRectGetHeight(v23);
  sub_100285AF0();
  uint64_t v7 = v6;
  int64_t v8 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365);
  if (*(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 112) > *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 112)) {
    double v9 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 112);
  }
  else {
    double v9 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 112);
  }
  id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    if (qword_10094A7B8 != -1) {
      goto LABEL_19;
    }
    while (1)
    {
      uint64_t v12 = 0;
      uint64_t v13 = qword_1009979A0;
      uint64_t v14 = qword_1009979A0 + 32;
      while (v12 >= *(void *)(v13 + 16))
      {
LABEL_7:
        if (v11 == ++v12) {
          goto LABEL_17;
        }
      }
      if ((v12 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_19:
      swift_once();
    }
    unint64_t v15 = *(void *)(v14 + 8 * v12) - 1;
    if (v15 < 7 && v15 < *(void *)(*v8 + 16))
    {
      uint64_t v16 = 24 * v15;
      uint64_t v17 = *v8 + 24 * v15;
      if ((*(unsigned char *)(v17 + 48) & 1) == 0)
      {
        uint64_t v18 = v8[7];
        if (v15 < *(void *)(v18 + 16) && (*(unsigned char *)(v18 + v16 + 48) & 1) == 0)
        {
          double v19 = *(double *)(v18 + v16 + 32);
          if (v19 > 0.0)
          {
            double v20 = *(double *)(v7 + 32 + 8 * v12);
            double v21 = *(double *)(v17 + 32) / v19 / v9;
            v24.origin.CGFloat x = x;
            v24.origin.CGFloat y = y;
            v24.size.CGFloat width = width;
            v24.size.CGFloat height = height;
            [v10 moveToPoint:v20, CGRectGetMaxY(v24) + -2.0];
            v25.origin.CGFloat x = x;
            v25.origin.CGFloat y = y;
            v25.size.CGFloat width = width;
            v25.size.CGFloat height = height;
            [v10 addLineToPoint:v20, CGRectGetMaxY(v25) - v5 * v21 + 2.0];
          }
        }
      }
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v10;
}

id sub_100289B5C()
{
  id v1 = [objc_allocWithZone((Class)UIBezierPath) init];
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer);
  [v2 bounds];
  CGRectGetHeight(v7);
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  double v4 = v3;
  [v1 moveToPoint:0.0, 0.0];
  [v2 bounds];
  [v1 addLineToPoint:CGRectGetWidth(v8), 0.0];
  [v1 moveToPoint:0.0, v4];
  [v2 bounds];
  [v1 addLineToPoint:CGRectGetMaxX(v9), v4];
  [v2 bounds];
  [v1 moveToPoint:0.0, CGRectGetMaxY(v10)];
  [v2 bounds];
  double MaxX = CGRectGetMaxX(v11);
  [v2 bounds];
  [v1 addLineToPoint:MaxX, CGRectGetMaxY(v12)];
  return v1;
}

id sub_100289CE8()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for TrendDetailDailyAverageView();
  [super layoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer];
  [v1 frame];
  double v3 = v2;
  double v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGRect v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer];
  [v0 bounds];
  CGFloat v11 = CGRectGetWidth(v20) - v3 + -9.0;
  v21.origin.CGFloat x = v3;
  v21.origin.CGFloat y = v5;
  v21.size.CGFloat width = v7;
  v21.size.CGFloat height = v9;
  [v10 setFrame:v3, v5, v11, CGRectGetHeight(v21)];
  CGRect v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer90];
  [v1 bounds];
  [v12 setFrame:];
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer365];
  [v1 bounds];
  [v13 setFrame:];
  uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90];
  [v12 bounds];
  [v14 setFrame:];
  unint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365];
  [v13 bounds];
  [v15 setFrame:];
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartMask];
  [v1 bounds];
  [v16 setFrame:];
  uint64_t v17 = self;
  [v17 begin];
  [v17 setDisableActions:1];
  sub_100289EDC((uint64_t)v0);
  return [v17 commit];
}

void sub_100289EDC(uint64_t a1)
{
  double v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90);
  id v3 = sub_10028963C();
  id v4 = [v3 CGPath];

  [v2 setPath:v4];
  double v5 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365);
  id v6 = sub_100289930();
  id v7 = [v6 CGPath];

  [v5 setPath:v7];
  double v8 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer);
  id v9 = sub_100289B5C();
  id v10 = [v9 CGPath];

  [v8 setPath:v10];
}

id sub_10028A034(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  id v3 = v1;
  id v59 = v1;
  *(void *)&v1[v2] = sub_1005CA0D4();
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  uint64_t v57 = v4;
  *(void *)&v3[v4] = sub_1006D13E4();
  uint64_t v56 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container90;
  *(void *)&v3[v56] = sub_1006D13E4();
  uint64_t v55 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_container365;
  *(void *)&v3[v55] = sub_1006D13E4();
  uint64_t v54 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_textContainer;
  *(void *)&v3[v54] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v53 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_axisLayer;
  *(void *)&v3[v53] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v52 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer90;
  *(void *)&v3[v52] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v51 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer90;
  *(void *)&v3[v51] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v50 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_gradientLayer365;
  *(void *)&v3[v50] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v49 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_barLayer365;
  *(void *)&v3[v49] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartMask;
  type metadata accessor for TrendChartMaskingView();
  uint64_t v48 = v5;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_dayOfWeekLabels;
  id v7 = [self secondaryLabelColor];
  uint64_t v8 = sub_10028B400((uint64_t)v7);

  *(void *)&v3[v6] = v8;
  id v9 = sub_1005CA0D4();
  id v10 = self;
  id result = [v10 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  CGRect v12 = result;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_minAxisLabel;
  [v9 setFont:result];

  uint64_t v46 = v13;
  *(void *)&v3[v13] = v9;
  id v14 = sub_1005CA0D4();
  id result = [v10 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v15 = result;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_midAxisLabel;
  [v14 setFont:result];

  uint64_t v45 = v16;
  *(void *)&v3[v16] = v14;
  id v17 = sub_1005CA0D4();
  id result = [v10 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (result)
  {
    uint64_t v18 = result;
    type metadata accessor for TrendDetailDailyAverageView();
    uint64_t v19 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel;
    uint64_t v44 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_maxValueLabel;
    [v17 setFont:v18];

    *(void *)&v3[v19] = v17;
    uint64_t v20 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_div;
    uint64_t v43 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_div;
    *(void *)&v3[v20] = sub_1006D134C();
    uint64_t v21 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90;
    uint64_t v47 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90;
    type metadata accessor for TrendsScrubberPlatterView();
    *(void *)&v3[v21] = sub_1006D13E4();
    uint64_t v22 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365;
    uint64_t v42 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365;
    *(void *)&v3[v22] = sub_1006D13E4();
    uint64_t v23 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterLayoutGuide;
    uint64_t v41 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterLayoutGuide;
    *(void *)&v3[v23] = [objc_allocWithZone((Class)UILayoutGuide) init];
    CGRect v24 = (uint64_t *)&v3[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_title90];
    CGRect v25 = self;
    id v26 = [v25 mainBundle];
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    *CGRect v24 = v29;
    v24[1] = v31;
    id v32 = (uint64_t *)&v3[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_title365];
    id v33 = [v25 mainBundle];
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    *id v32 = v36;
    v32[1] = v38;
    uint64_t v39 = OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint] = 0;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v40 = *(void **)&v3[v39];

    swift_deallocPartialClassInstance();
    return 0;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_10028A6B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailDailyAverageView();
  [super dealloc];
}

uint64_t type metadata accessor for TrendDetailDailyAverageView()
{
  return self;
}

void sub_10028A93C(void *a1)
{
  id v3 = &selRef_setPercentMinimized_;
  if ([a1 state] == (id)1 || objc_msgSend(a1, "state") == (id)2)
  {
    if ([a1 state] == (id)1)
    {
      uint64_t v4 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartMask];
      [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer] setMaskView:v4];
      *(void *)&v4[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedWidth] = 0x402A000000000000;
      [v4 setNeedsLayout];
      uint64_t v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      uint64_t v51 = sub_10028B9D8;
      uint64_t v52 = v6;
      uint64_t v47 = _NSConcreteStackBlock;
      uint64_t v48 = 1107296256;
      uint64_t v49 = sub_100070394;
      uint64_t v50 = &unk_1008BE7B8;
      id v7 = _Block_copy(&v47);
      uint64_t v8 = v1;
      swift_release();
      [v5 animateWithDuration:v7 animations:0.1];
      _Block_release(v7);
    }
    [a1 locationInView:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer]];
    double v10 = v9;
    sub_100285AF0();
    CGRect v12 = *(char **)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = 0;
      id v14 = 0;
      double v15 = 0.0;
      double v16 = 1.79769313e308;
      do
      {
        double v17 = vabdd_f64(v10, *(double *)(v11 + 8 * (void)v14 + 32));
        if (v17 < v16) {
          uint64_t v13 = v14;
        }
        uint64_t v18 = v14 + 1;
        if (v17 < v16) {
          double v15 = *(double *)(v11 + 8 * (void)v14 + 32);
        }
        double v16 = v17;
        ++v14;
      }
      while (v12 != v18);
      swift_bridgeObjectRelease();
      double v19 = v15 + -2.0 + 6.5;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      double v19 = 4.5;
    }
    uint64_t v20 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartMask];
    uint64_t v21 = OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX;
    *(double *)&v20[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX] = v19;
    [v20 setNeedsLayout];
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platterCenterXConstraint];
    if (v22) {
      [v22 setConstant:*(double *)&v20[v21]];
    }
    id v23 = sub_100286554(v13);
    if (v23)
    {
      CGRect v24 = v23;
      id v25 = sub_100286854(v13);
      if (v25)
      {
        id v26 = v25;
        uint64_t v27 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90];
        id v28 = *(void **)(v27 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
        NSString v29 = String._bridgeToObjectiveC()();
        [v28 setText:v29];

        [*(id *)(v27 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel) setAttributedText:v24];
        uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365];
        uint64_t v31 = *(void **)(v30 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
        NSString v32 = String._bridgeToObjectiveC()();
        [v31 setText:v32];

        id v3 = &selRef_setPercentMinimized_;
        [*(id *)(v30 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel) setAttributedText:v26];
        id v33 = self;
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v1;
        uint64_t v51 = sub_10028B968;
        uint64_t v52 = v34;
        uint64_t v47 = _NSConcreteStackBlock;
        uint64_t v48 = 1107296256;
        uint64_t v49 = sub_100070394;
        uint64_t v50 = &unk_1008BE768;
        id v35 = _Block_copy(&v47);
        uint64_t v36 = v1;
        swift_release();
        [v33 animateWithDuration:v35 animations:0.1];
        _Block_release(v35);

LABEL_24:
        if ([a1 v3[292]] == (id)1)
        {
          [v1 layoutIfNeeded];
          return;
        }
        uint64_t v37 = self;
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v1;
        uint64_t v51 = sub_10028B958;
        uint64_t v52 = v44;
        uint64_t v47 = _NSConcreteStackBlock;
        uint64_t v48 = 1107296256;
        uint64_t v39 = &unk_1008BE718;
        goto LABEL_27;
      }
    }
    id v40 = self;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v1;
    uint64_t v51 = sub_10028B950;
    uint64_t v52 = v41;
    uint64_t v47 = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_100070394;
    uint64_t v50 = &unk_1008BE6C8;
    uint64_t v42 = _Block_copy(&v47);
    uint64_t v43 = v1;
    swift_release();
    [v40 animateWithDuration:v42 animations:0.1];
    _Block_release(v42);
    goto LABEL_24;
  }
  if ([a1 state] == (id)3 || objc_msgSend(a1, "state") == (id)4)
  {
    [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_chartContainer] setMaskView:0];
    uint64_t v37 = self;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v1;
    uint64_t v51 = sub_10028B8D8;
    uint64_t v52 = v38;
    uint64_t v47 = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v39 = &unk_1008BE678;
LABEL_27:
    uint64_t v49 = sub_100070394;
    uint64_t v50 = v39;
    uint64_t v45 = _Block_copy(&v47);
    uint64_t v46 = v1;
    swift_release();
    [v37 animateWithDuration:v45 animations:v47 v48];
    _Block_release(v45);
  }
}

uint64_t sub_10028B0F8(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  if (qword_10094A7B8 != -1) {
    id result = swift_once();
  }
  if (*(void *)(qword_1009979A0 + 16) <= v3) {
    return 0;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    unsigned __int8 v4 = sub_10027C798(*(void *)(qword_1009979A0 + 8 * v3 + 32));
    if (v4 != 7)
    {
      long long v14 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 64);
      long long v15 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 80);
      long long v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 96);
      uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 112);
      long long v10 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90);
      long long v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 16);
      long long v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 32);
      long long v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram90 + 48);
      uint64_t v5 = sub_1006D4658(v4);
      if ((v6 & 1) == 0)
      {
        double v7 = *(double *)&v5;
        id v8 = sub_10008CC68(byte_100759778[*(char *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type)]);
        id v9 = [self quantityWithUnit:v8 doubleValue:v7 v10, v11, v12, v13, v14, v15, v16, v17];

        return (uint64_t)v9;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10028B27C(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  if (qword_10094A7B8 != -1) {
    id result = swift_once();
  }
  if (*(void *)(qword_1009979A0 + 16) <= v3) {
    return 0;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    unsigned __int8 v4 = sub_10027C798(*(void *)(qword_1009979A0 + 8 * v3 + 32));
    if (v4 != 7)
    {
      long long v14 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 64);
      long long v15 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 80);
      long long v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 96);
      uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 112);
      long long v10 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365);
      long long v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 16);
      long long v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 32);
      long long v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_histogram365 + 48);
      uint64_t v5 = sub_1006D4658(v4);
      if ((v6 & 1) == 0)
      {
        double v7 = *(double *)&v5;
        id v8 = sub_10008CC68(byte_100759778[*(char *)(v2 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_type)]);
        id v9 = [self quantityWithUnit:v8 doubleValue:v7 v10, v11, v12, v13, v14, v15, v16, v17];

        return (uint64_t)v9;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10028B400(uint64_t a1)
{
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v29 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  sub_10007E2D8(0, &qword_100953458);
  unsigned __int8 v4 = self;
  unint64_t v5 = 0;
  id v23 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v24 = a1;
  char v6 = &selRef_setPercentMinimized_;
  while (1)
  {
    id v8 = sub_1005CA0D4();
    id v9 = [v4 v6[360] UIFontTextStyleCaption2 1024 UIContentSizeCategoryExtraExtraExtraLarge];
    if (!v9) {
      break;
    }
    long long v10 = v9;
    [v8 setFont:v9];

    [v8 setTextAlignment:0];
    [v8 setTextColor:a1];
    if (qword_10094A7B8 != -1) {
      swift_once();
    }
    if (v5 >= *(void *)(qword_1009979A0 + 16))
    {
      NSString v7 = 0;
    }
    else
    {
      uint64_t v11 = *(void *)(qword_1009979A0 + 8 * v5 + 32);
      unsigned __int8 v12 = v11 - 1;
      if ((unint64_t)(v11 - 1) > 6)
      {
        NSString v7 = 0;
      }
      else
      {
        if (!*(void *)(sub_10052D064((uint64_t)&off_1008B2CA8) + 16)) {
          goto LABEL_18;
        }
        sub_1005293A4(v12);
        if ((v13 & 1) == 0) {
          goto LABEL_18;
        }
        swift_bridgeObjectRelease();
        long long v14 = v25;
        Date.init(timeIntervalSinceReferenceDate:)();
        if (qword_10094A7B0 != -1) {
          swift_once();
        }
        long long v15 = (void *)qword_100952E50;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        id v17 = [v15 stringFromDate:isa];

        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        (*v23)(v14, v26);
        uint64_t v27 = v18;
        uint64_t v28 = v20;
        sub_1000A06D0();
        StringProtocol.localizedUppercase.getter();
        swift_bridgeObjectRelease();
        NSString v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        a1 = v24;
      }
      char v6 = &selRef_setPercentMinimized_;
    }
    ++v5;
    [v8 setText:v7];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (v5 == 7) {
      return (uint64_t)v29;
    }
  }
  __break(1u);
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10028B7F0(id result)
{
  uint64_t v1 = (uint64_t)result;
  if (qword_10094A7B8 != -1) {
    uint64_t result = (id)swift_once();
  }
  if (*(void *)(qword_1009979A0 + 16) <= v1) {
    return 0;
  }
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v2 = sub_10027C798(*(void *)(qword_1009979A0 + 8 * v1 + 32));
    if (v2 == 7) {
      return 0;
    }
    return [objc_allocWithZone((Class)NSNumber) initWithInteger:v2 + 1];
  }
  return result;
}

uint64_t sub_10028B8A0()
{
  return swift_deallocObject();
}

id sub_10028B8D8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90) setAlpha:0.0];
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365) setAlpha:0.0];
  unsigned __int8 v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel);

  return [v2 setAlpha:1.0];
}

id sub_10028B950()
{
  return sub_10028B970(0.0);
}

id sub_10028B958()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

id sub_10028B968()
{
  return sub_10028B970(1.0);
}

id sub_10028B970(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter90) setAlpha:];
  unsigned __int8 v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_platter365);

  return [v4 setAlpha:a1];
}

id sub_10028B9D8()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp27TrendDetailDailyAverageView_titleLabel) setAlpha:0.3];
}

void destroy for IntervalsTargetView(uint64_t a1)
{
  swift_release();

  unsigned __int8 v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for IntervalsTargetView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unsigned __int8 v4 = (void *)a2[2];
  unint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for IntervalsTargetView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unsigned __int8 v4 = (void *)a2[2];
  unint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for IntervalsTargetView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  unsigned __int8 v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  unint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for IntervalsTargetView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntervalsTargetView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalsTargetView()
{
  return &type metadata for IntervalsTargetView;
}

uint64_t sub_10028BC1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10028BC38()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_1009979A8 = v1;
  return result;
}

uint64_t sub_10028BC84()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 scale];

  id v2 = [v0 mainScreen];
  [v2 nativeScale];

  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_1009979B0 = v4;
  return result;
}

uint64_t sub_10028BD48()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 scale];

  id v2 = [v0 mainScreen];
  [v2 nativeScale];

  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_1009979B8 = v4;
  return result;
}

uint64_t sub_10028BE28()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 scale];

  id v2 = [v0 mainScreen];
  [v2 nativeScale];

  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_1009979C0 = v4;
  return result;
}

uint64_t sub_10028BEEC@<X0>(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  id v166 = a2;
  uint64_t v171 = a3;
  uint64_t v4 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v4 - 8);
  id v141 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1000AFA94(&qword_10094C108);
  uint64_t v143 = *(void *)(v151 - 8);
  uint64_t v6 = __chkstk_darwin(v151);
  id v140 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v142 = (char *)&v140 - v8;
  uint64_t v147 = sub_1000AFA94(&qword_100953468);
  __chkstk_darwin(v147);
  id v148 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1000AFA94(&qword_100953470);
  __chkstk_darwin(v170);
  id v150 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1000AFA94(&qword_100953478);
  uint64_t v146 = *(void *)(v149 - 8);
  uint64_t v11 = __chkstk_darwin(v149);
  id v144 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v145 = (char *)&v140 - v13;
  id v162 = (void *)sub_1000AFA94(&qword_100953480);
  id v154 = (void *)*(v162 - 1);
  uint64_t v14 = __chkstk_darwin(v162);
  id v152 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v153 = (char *)&v140 - v16;
  uint64_t v167 = sub_1000AFA94(&qword_100953488);
  __chkstk_darwin(v167);
  uint64_t v169 = (uint64_t)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1000AFA94(&qword_100953490);
  __chkstk_darwin(v158);
  id v159 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_1000AFA94(&qword_100953498);
  __chkstk_darwin(v168);
  id v161 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v164 = *(void *)(v20 - 8);
  uint64_t v165 = v20;
  __chkstk_darwin(v20);
  id v163 = (char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1000AFA94(&qword_1009534A0);
  id v157 = *(void **)(v160 - 8);
  uint64_t v22 = __chkstk_darwin(v160);
  id v155 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v156 = (char *)&v140 - v24;
  uint64_t v25 = type metadata accessor for UUID();
  __chkstk_darwin(v25 - 8);
  uint64_t v26 = type metadata accessor for StepType();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  NSString v29 = (char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  MetricsPublisher.intervalsMetricsPublisher.getter();
  swift_release();
  uint64_t v30 = IntervalsMetricsPublisher.intervalThisStep.getter();
  swift_release();
  if (v30)
  {
    uint64_t v31 = a1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for StepType.rest(_:), v26);
    sub_1001AAF50();
    static NLSessionActivityGoal.makeOpenGoal()();
    uint64_t v31 = a1;
    id v32 = a1;
    UUID.init()();
    type metadata accessor for WorkoutStep();
    swift_allocObject();
    WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
  }
  id v33 = (void *)WorkoutStep.activeHeartRateTargetZone.getter();
  swift_release();
  if (v33)
  {
    swift_retain();
    MetricsPublisher.heartRateMetricsPublisher.getter();
    swift_release();
    type metadata accessor for HeartRateMetricsPublisher();
    sub_10028DDB4(&qword_1009535A0, (void (*)(uint64_t))&type metadata accessor for HeartRateMetricsPublisher);
    id v154 = v31;
    swift_retain();
    id v34 = v166;
    uint64_t v35 = ObservedObject.init(wrappedValue:)();
    uint64_t v37 = v36;
    char v38 = static Edge.Set.leading.getter();
    if (qword_10094AFD0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    char v47 = static Edge.Set.trailing.getter();
    char v186 = 0;
    char v183 = 1;
    if (qword_10094A7C8 != -1) {
      swift_once();
    }
    uint64_t v48 = qword_1009979B0;
    char v49 = v186;
    char v50 = v183;
    if (qword_10094A7C0 != -1) {
      swift_once();
    }
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(_DWORD *)((char *)&v175 + 1) = *(_DWORD *)v187;
    DWORD1(v175) = *(_DWORD *)&v187[3];
    *(_DWORD *)((char *)&v177 + 9) = *(_DWORD *)v185;
    HIDWORD(v177) = *(_DWORD *)&v185[3];
    *(_DWORD *)((char *)v178 + 1) = *(_DWORD *)v184;
    DWORD1(v178[0]) = *(_DWORD *)&v184[3];
    HIDWORD(v178[2]) = *(_DWORD *)&v188[3];
    *(_DWORD *)((char *)&v178[2] + 9) = *(_DWORD *)v188;
    char v192 = v208;
    char v190 = v210;
    *(void *)&long long v172 = v35;
    *((void *)&v172 + 1) = v37;
    *(void *)&long long v173 = v33;
    *((void *)&v173 + 1) = v34;
    *(void *)&long long v174 = v154;
    *((void *)&v174 + 1) = 0x4014000000000000;
    LOBYTE(v175) = v38;
    *((void *)&v175 + 1) = v40;
    *(void *)&long long v176 = v42;
    *((void *)&v176 + 1) = v44;
    *(void *)&long long v177 = v46;
    BYTE8(v177) = v49;
    LOBYTE(v178[0]) = v47;
    *(_OWORD *)((char *)&v178[1] + 8) = 0u;
    *(_OWORD *)((char *)v178 + 8) = 0u;
    BYTE8(v178[2]) = v50;
    *(void *)&long long v179 = 0;
    *((void *)&v179 + 1) = v48;
    *(void *)&long long v180 = v207;
    BYTE8(v180) = v208;
    HIDWORD(v180) = *(_DWORD *)&v191[3];
    *(_DWORD *)((char *)&v180 + 9) = *(_DWORD *)v191;
    *(void *)&long long v181 = v209;
    BYTE8(v181) = v210;
    HIDWORD(v181) = *(_DWORD *)&v189[3];
    *(_DWORD *)((char *)&v181 + 9) = *(_DWORD *)v189;
    *(_OWORD *)id v182 = v211;
    uint64_t v51 = v163;
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v52 = sub_1000AFA94(&qword_1009534F8);
    uint64_t v53 = sub_10028D880(&qword_100953500, &qword_1009534F8, (void (*)(void))sub_10028DAF0);
    uint64_t v54 = v155;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v51, v165);
    long long v203 = v180;
    long long v204 = v181;
    long long v205 = *(_OWORD *)v182;
    long long v199 = v178[0];
    long long v200 = v178[1];
    long long v201 = v178[2];
    long long v202 = v179;
    long long v195 = v174;
    long long v196 = v175;
    long long v197 = v176;
    long long v198 = v177;
    long long v193 = v172;
    long long v194 = v173;
    sub_10028DDFC((uint64_t)&v193);
    uint64_t v55 = v157;
    uint64_t v56 = (void (*)(char *, char *, uint64_t))v157[4];
    id v166 = v33;
    uint64_t v57 = v156;
    id v58 = v54;
    id v59 = (void *)v160;
    v56(v156, v58, v160);
    ((void (*)(char *, char *, void *))v55[2])(v159, v57, v59);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v172 = v52;
    *((void *)&v172 + 1) = v53;
    swift_getOpaqueTypeConformance2();
    uint64_t v60 = sub_1000A1370(&qword_100953540);
    uint64_t v61 = sub_10028D880(&qword_100953548, &qword_100953540, (void (*)(void))sub_10028DBD4);
    *(void *)&long long v172 = v60;
    *((void *)&v172 + 1) = v61;
    swift_getOpaqueTypeConformance2();
    uint64_t v62 = (uint64_t)v161;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v62, v169, &qword_100953498);
    swift_storeEnumTagMultiPayload();
    sub_10028D9B0();
    sub_10028DCB8();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    uint64_t v63 = v62;
LABEL_22:
    sub_10008DB18(v63, &qword_100953498);
    return ((uint64_t (*)(char *, void *))v55[1])(v57, v59);
  }
  swift_retain();
  MetricsPublisher.intervalsMetricsPublisher.getter();
  swift_release();
  uint64_t v64 = IntervalsMetricsPublisher.intervalThisStep.getter();
  swift_release();
  if (!v64)
  {
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for StepType.rest(_:), v26);
    sub_1001AAF50();
    static NLSessionActivityGoal.makeOpenGoal()();
    id v65 = v31;
    UUID.init()();
    type metadata accessor for WorkoutStep();
    swift_allocObject();
    WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
  }
  id v66 = (void *)WorkoutStep.activePowerZonesAlertTargetZone.getter();
  swift_release();
  if (v66)
  {
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    swift_release();
    type metadata accessor for PowerMetricsPublisher();
    sub_10028DDB4(&qword_100953598, (void (*)(uint64_t))&type metadata accessor for PowerMetricsPublisher);
    id v157 = v31;
    swift_retain();
    id v67 = v166;
    uint64_t v68 = ObservedObject.init(wrappedValue:)();
    uint64_t v70 = v69;
    char v71 = static Edge.Set.leading.getter();
    if (qword_10094AFD0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v73 = v72;
    uint64_t v75 = v74;
    uint64_t v77 = v76;
    uint64_t v79 = v78;
    char v80 = static Edge.Set.trailing.getter();
    char v186 = 0;
    char v183 = 1;
    if (qword_10094A7C8 != -1) {
      swift_once();
    }
    uint64_t v81 = qword_1009979B0;
    char v82 = v186;
    char v83 = v183;
    if (qword_10094A7C0 != -1) {
      swift_once();
    }
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(_DWORD *)((char *)&v175 + 1) = *(_DWORD *)v187;
    DWORD1(v175) = *(_DWORD *)&v187[3];
    *(_DWORD *)((char *)&v177 + 9) = *(_DWORD *)v185;
    HIDWORD(v177) = *(_DWORD *)&v185[3];
    *(_DWORD *)((char *)v178 + 1) = *(_DWORD *)v184;
    DWORD1(v178[0]) = *(_DWORD *)&v184[3];
    HIDWORD(v178[2]) = *(_DWORD *)&v188[3];
    *(_DWORD *)((char *)&v178[2] + 9) = *(_DWORD *)v188;
    char v192 = v208;
    char v190 = v210;
    *(void *)&long long v172 = v68;
    *((void *)&v172 + 1) = v70;
    *(void *)&long long v173 = v66;
    *((void *)&v173 + 1) = v67;
    *(void *)&long long v174 = v157;
    *((void *)&v174 + 1) = 0x4014000000000000;
    LOBYTE(v175) = v71;
    *((void *)&v175 + 1) = v73;
    *(void *)&long long v176 = v75;
    *((void *)&v176 + 1) = v77;
    *(void *)&long long v177 = v79;
    BYTE8(v177) = v82;
    LOBYTE(v178[0]) = v80;
    *(_OWORD *)((char *)&v178[1] + 8) = 0u;
    *(_OWORD *)((char *)v178 + 8) = 0u;
    BYTE8(v178[2]) = v83;
    *(void *)&long long v179 = 0;
    *((void *)&v179 + 1) = v81;
    *(void *)&long long v180 = v207;
    BYTE8(v180) = v208;
    HIDWORD(v180) = *(_DWORD *)&v191[3];
    *(_DWORD *)((char *)&v180 + 9) = *(_DWORD *)v191;
    *(void *)&long long v181 = v209;
    BYTE8(v181) = v210;
    HIDWORD(v181) = *(_DWORD *)&v189[3];
    *(_DWORD *)((char *)&v181 + 9) = *(_DWORD *)v189;
    *(_OWORD *)id v182 = v211;
    id v84 = v163;
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v85 = sub_1000AFA94(&qword_100953540);
    uint64_t v86 = sub_10028D880(&qword_100953548, &qword_100953540, (void (*)(void))sub_10028DBD4);
    uint64_t v87 = v152;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v84, v165);
    long long v203 = v180;
    long long v204 = v181;
    long long v205 = *(_OWORD *)v182;
    long long v199 = v178[0];
    long long v200 = v178[1];
    long long v201 = v178[2];
    long long v202 = v179;
    long long v195 = v174;
    long long v196 = v175;
    long long v197 = v176;
    long long v198 = v177;
    long long v193 = v172;
    long long v194 = v173;
    sub_10028DDFC((uint64_t)&v193);
    uint64_t v55 = v154;
    id v88 = (void (*)(char *, char *, void *))v154[4];
    id v166 = v66;
    uint64_t v57 = v153;
    id v89 = v87;
    id v59 = v162;
    v88(v153, v89, v162);
    ((void (*)(char *, char *, void *))v55[2])(v159, v57, v59);
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = sub_1000A1370(&qword_1009534F8);
    uint64_t v91 = sub_10028D880(&qword_100953500, &qword_1009534F8, (void (*)(void))sub_10028DAF0);
    *(void *)&long long v172 = v90;
    *((void *)&v172 + 1) = v91;
    swift_getOpaqueTypeConformance2();
    *(void *)&long long v172 = v85;
    *((void *)&v172 + 1) = v86;
    swift_getOpaqueTypeConformance2();
    uint64_t v92 = (uint64_t)v161;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v92, v169, &qword_100953498);
    swift_storeEnumTagMultiPayload();
    sub_10028D9B0();
    sub_10028DCB8();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    uint64_t v63 = v92;
    goto LABEL_22;
  }
  swift_retain();
  MetricsPublisher.intervalsMetricsPublisher.getter();
  swift_release();
  uint64_t v94 = IntervalsMetricsPublisher.intervalThisStep.getter();
  swift_release();
  if (v94)
  {
    id v95 = v31;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for StepType.rest(_:), v26);
    sub_1001AAF50();
    static NLSessionActivityGoal.makeOpenGoal()();
    id v95 = v31;
    id v96 = v31;
    UUID.init()();
    type metadata accessor for WorkoutStep();
    swift_allocObject();
    WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
  }
  uint64_t v97 = WorkoutStep.activeTargetZone.getter();
  swift_release();
  if (v97)
  {
    id v98 = self;
    swift_retain();
    id v162 = v95;
    swift_retain();
    id v99 = v166;
    id v100 = [v98 mainScreen];
    [v100 scale];

    id v101 = [v98 mainScreen];
    [v101 nativeScale];

    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v103 = v102;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v105 = v104;
    type metadata accessor for MetricsPublisher();
    sub_10028DDB4((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    uint64_t v106 = ObservedObject.init(wrappedValue:)();
    uint64_t v108 = v107;
    char v109 = static Edge.Set.leading.getter();
    if (qword_10094AFD0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v111 = v110;
    uint64_t v113 = v112;
    uint64_t v115 = v114;
    uint64_t v117 = v116;
    char v118 = static Edge.Set.trailing.getter();
    char v186 = 0;
    char v183 = 1;
    if (qword_10094A7C8 != -1) {
      swift_once();
    }
    uint64_t v119 = qword_1009979B0;
    char v120 = v186;
    char v121 = v183;
    if (qword_10094A7C0 != -1) {
      swift_once();
    }
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(_DWORD *)((char *)&v175 + 9) = *(_DWORD *)v187;
    HIDWORD(v175) = *(_DWORD *)&v187[3];
    *(_DWORD *)((char *)v178 + 1) = *(_DWORD *)v185;
    DWORD1(v178[0]) = *(_DWORD *)&v185[3];
    *(_DWORD *)((char *)v178 + 9) = *(_DWORD *)v184;
    HIDWORD(v178[0]) = *(_DWORD *)&v184[3];
    DWORD1(v179) = *(_DWORD *)&v188[3];
    *(_DWORD *)((char *)&v179 + 1) = *(_DWORD *)v188;
    char v192 = v208;
    char v190 = v210;
    *(void *)&long long v172 = v106;
    *((void *)&v172 + 1) = v108;
    *(void *)&long long v173 = v97;
    *((void *)&v173 + 1) = v99;
    *(void *)&long long v174 = v162;
    *((void *)&v174 + 1) = v103;
    *(void *)&long long v175 = v105;
    BYTE8(v175) = v109;
    *(void *)&long long v176 = v111;
    *((void *)&v176 + 1) = v113;
    *(void *)&long long v177 = v115;
    *((void *)&v177 + 1) = v117;
    LOBYTE(v178[0]) = v120;
    BYTE8(v178[0]) = v118;
    memset(&v178[1], 0, 32);
    LOBYTE(v179) = v121;
    *((void *)&v179 + 1) = 0;
    *(void *)&long long v180 = v119;
    *((void *)&v180 + 1) = v207;
    LOBYTE(v181) = v208;
    DWORD1(v181) = *(_DWORD *)&v191[3];
    *(_DWORD *)((char *)&v181 + 1) = *(_DWORD *)v191;
    *((void *)&v181 + 1) = v209;
    v182[0] = v210;
    *(_DWORD *)&v182[4] = *(_DWORD *)&v189[3];
    *(_DWORD *)&v182[1] = *(_DWORD *)v189;
    *(_OWORD *)&v182[8] = v211;
    unint64_t v122 = v163;
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v123 = sub_1000AFA94(&qword_1009534A8);
    uint64_t v124 = sub_10028D880(&qword_1009534B0, &qword_1009534A8, (void (*)(void))sub_10028D850);
    unint64_t v125 = v144;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v122, v165);
    long long v203 = v180;
    long long v204 = v181;
    long long v205 = *(_OWORD *)v182;
    uint64_t v206 = *(void *)&v182[16];
    long long v199 = v178[0];
    long long v200 = v178[1];
    long long v201 = v178[2];
    long long v202 = v179;
    long long v195 = v174;
    long long v196 = v175;
    long long v197 = v176;
    long long v198 = v177;
    long long v193 = v172;
    long long v194 = v173;
    sub_10028DDFC((uint64_t)&v193);
    unint64_t v127 = v145;
    uint64_t v126 = v146;
    unint64_t v128 = v125;
    uint64_t v129 = v149;
    (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v145, v128, v149);
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v148, v127, v129);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v172 = v123;
    *((void *)&v172 + 1) = v124;
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    uint64_t v130 = (uint64_t)v150;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v130, v169, &qword_100953470);
    swift_storeEnumTagMultiPayload();
    sub_10028D9B0();
    sub_10028DCB8();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    sub_10008DB18(v130, &qword_100953470);
    return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v127, v129);
  }
  else
  {
    uint64_t v131 = type metadata accessor for MetricPlatterType();
    uint64_t v132 = (uint64_t)v141;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v141, 1, 1, v131);
    swift_retain();
    unint64_t v133 = v140;
    static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
    swift_release();
    sub_10008DB18(v132, &qword_10094C100);
    uint64_t v134 = v142;
    uint64_t v135 = v143;
    uint64_t v136 = v151;
    (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v142, v133, v151);
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v148, v134, v136);
    swift_storeEnumTagMultiPayload();
    uint64_t v137 = sub_1000A1370(&qword_1009534A8);
    uint64_t v138 = sub_10028D880(&qword_1009534B0, &qword_1009534A8, (void (*)(void))sub_10028D850);
    *(void *)&long long v193 = v137;
    *((void *)&v193 + 1) = v138;
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    uint64_t v139 = (uint64_t)v150;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v139, v169, &qword_100953470);
    swift_storeEnumTagMultiPayload();
    sub_10028D9B0();
    sub_10028DCB8();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v139, &qword_100953470);
    return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v134, v136);
  }
}

uint64_t sub_10028D844@<X0>(uint64_t a1@<X8>)
{
  return sub_10028BEEC(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10028D850()
{
  return sub_10028D880(&qword_1009534B8, &qword_1009534C0, (void (*)(void))sub_10028D8FC);
}

uint64_t sub_10028D880(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10028D8FC()
{
  return sub_10028D880(&qword_1009534C8, &qword_1009534D0, (void (*)(void))sub_10028D92C);
}

uint64_t sub_10028D92C()
{
  return sub_10028D880(&qword_1009534D8, &qword_1009534E0, (void (*)(void))sub_10028D95C);
}

unint64_t sub_10028D95C()
{
  unint64_t result = qword_1009534E8;
  if (!qword_1009534E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009534E8);
  }
  return result;
}

unint64_t sub_10028D9B0()
{
  unint64_t result = qword_1009534F0;
  if (!qword_1009534F0)
  {
    sub_1000A1370(&qword_100953498);
    sub_1000A1370(&qword_1009534F8);
    sub_10028D880(&qword_100953500, &qword_1009534F8, (void (*)(void))sub_10028DAF0);
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_100953540);
    sub_10028D880(&qword_100953548, &qword_100953540, (void (*)(void))sub_10028DBD4);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009534F0);
  }
  return result;
}

uint64_t sub_10028DAF0()
{
  return sub_10028D880(&qword_100953508, &qword_100953510, (void (*)(void))sub_10028DB20);
}

uint64_t sub_10028DB20()
{
  return sub_10028D880(&qword_100953518, &qword_100953520, (void (*)(void))sub_10028DB50);
}

uint64_t sub_10028DB50()
{
  return sub_10028D880(&qword_100953528, &qword_100953530, (void (*)(void))sub_10028DB80);
}

unint64_t sub_10028DB80()
{
  unint64_t result = qword_100953538;
  if (!qword_100953538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953538);
  }
  return result;
}

uint64_t sub_10028DBD4()
{
  return sub_10028D880(&qword_100953550, &qword_100953558, (void (*)(void))sub_10028DC04);
}

uint64_t sub_10028DC04()
{
  return sub_10028D880(&qword_100953560, &qword_100953568, (void (*)(void))sub_10028DC34);
}

uint64_t sub_10028DC34()
{
  return sub_10028D880(&qword_100953570, &qword_100953578, (void (*)(void))sub_10028DC64);
}

unint64_t sub_10028DC64()
{
  unint64_t result = qword_100953580;
  if (!qword_100953580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953580);
  }
  return result;
}

unint64_t sub_10028DCB8()
{
  unint64_t result = qword_100953588;
  if (!qword_100953588)
  {
    sub_1000A1370(&qword_100953470);
    sub_1000A1370(&qword_1009534A8);
    sub_10028D880(&qword_1009534B0, &qword_1009534A8, (void (*)(void))sub_10028D850);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953588);
  }
  return result;
}

uint64_t sub_10028DDB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10028DDFC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 24);

  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_10028DE4C()
{
  unint64_t result = qword_1009535A8;
  if (!qword_1009535A8)
  {
    sub_1000A1370(&qword_1009535B0);
    sub_10028D9B0();
    sub_10028DCB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009535A8);
  }
  return result;
}

uint64_t sub_10028DEC8()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = *(void **)(v0 + 48);
  id v3 = *(id *)(v0 + 40);
  id v4 = v1;
  LODWORD(v2) = [v2 isWheelchairUser];
  int v5 = *(unsigned __int8 *)(v0 + 64);
  type metadata accessor for UnitsSettingsDataProvider();
  swift_allocObject();
  sub_10019E120(v3, v4, (int)v2, v5);
  id v6 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100953738));
  return UIHostingController.init(rootView:)();
}

char *sub_10028DF88()
{
  if ((sub_10028E1F4() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = *(void **)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 64);
  id v4 = objc_allocWithZone((Class)type metadata accessor for MoveModeSettingsViewController());
  return sub_10047C47C(v1, v2, v3);
}

uint64_t sub_10028DFF0()
{
  [v0[6] removeObserver:v0];
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10028E05C()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  swift_release();
  swift_getObjectType();
  AccountFitnessSettingsChanged.init()();
  sub_10028EE20();
  dispatch thunk of EventHubProtocol.publish<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10028E12C, 0, 0);
}

uint64_t sub_10028E12C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028E1AC()
{
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = *v0;
  return _swift_task_switch(sub_100028F1C, 0, 0);
}

uint64_t sub_10028E1F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateComponents();
  os_log_t v7 = *(os_log_t *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)v0[4];
  id v75 = 0;
  id v11 = [v10 wheelchairUseWithError:&v75];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = v75;
    id v14 = [v12 wheelchairUse];

    if (v14 == (id)2)
    {
      os_log_type_t v15 = static os_log_type_t.default.getter();
      uint64_t v16 = (void *)HKLogActivity;
      os_log_type_t v17 = v15;
      if (os_log_type_enabled(HKLogActivity, v15))
      {
        uint64_t v18 = v16;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        id v75 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v20 = _typeName(_:qualified:)();
        uint64_t v74 = sub_10008F1F4(v20, v21, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s - user is in wheelchair mode", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      return 0;
    }
  }
  else
  {
    os_log_t v72 = v7;
    uint64_t v73 = v9;
    uint64_t v23 = v2;
    id v24 = v75;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    uint64_t v26 = (void *)HKLogActivity;
    os_log_type_t v27 = v25;
    if (os_log_type_enabled(HKLogActivity, v25))
    {
      swift_errorRetain();
      swift_errorRetain();
      os_log_t v70 = v26;
      uint64_t v28 = swift_slowAlloc();
      id v75 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      v69[1] = v23;
      uint64_t v29 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10008F1F4(v29, v30, (uint64_t *)&v75);
      uint64_t v71 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v31 = Error.localizedDescription.getter();
      uint64_t v74 = sub_10008F1F4(v31, v32, (uint64_t *)&v75);
      uint64_t v6 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v33 = v70;
      _os_log_impl((void *)&_mh_execute_header, v70, v27, "%s failed to load wheelchair status with error: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    os_log_t v7 = v72;
    uint64_t v9 = v73;
  }
  if ((v1[8] & 1) != 0 || *((unsigned char *)v1 + 65) == 1)
  {
    os_log_type_t v34 = static os_log_type_t.default.getter();
    uint64_t v35 = HKLogActivity;
    swift_retain_n();
    if (os_log_type_enabled(v35, v34))
    {
      swift_retain_n();
      uint64_t v36 = v35;
      uint64_t v37 = swift_slowAlloc();
      id v75 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v38 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10008F1F4(v38, v39, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 1024;
      int v40 = *((unsigned __int8 *)v1 + 64);
      swift_release();
      LODWORD(v74) = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v37 + 18) = 1024;
      int v41 = *((unsigned __int8 *)v1 + 65);
      swift_release();
      LODWORD(v74) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v36, v34, "%s - isAppleMoveTime %{BOOL}d didSwitchMoveModeToday %{BOOL}d", (uint8_t *)v37, 0x18u);
      BOOL v22 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      return 1;
    }
  }
  else
  {
    id v75 = 0;
    id v43 = [v10 dateOfBirthComponentsWithError:&v75];
    id v44 = v75;
    if (!v43)
    {
      id v59 = v75;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      os_log_type_t v60 = static os_log_type_t.error.getter();
      uint64_t v61 = (void *)HKLogActivity;
      os_log_type_t v62 = v60;
      if (os_log_type_enabled(HKLogActivity, v60))
      {
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v63 = v61;
        uint64_t v64 = swift_slowAlloc();
        id v75 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136315394;
        uint64_t v65 = _typeName(_:qualified:)();
        uint64_t v74 = sub_10008F1F4(v65, v66, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v67 = Error.localizedDescription.getter();
        uint64_t v74 = sub_10008F1F4(v67, v68, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v62, "%s failed to load date of birth components with error: %s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
      }
      return 0;
    }
    uint64_t v45 = v43;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
    id v46 = v44;

    uint64_t v73 = v9;
    DateComponents.date.getter();
    uint64_t v47 = type metadata accessor for Date();
    uint64_t v48 = *(void *)(v47 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v5, 1, v47) != 1)
    {
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v47);
    }
    uint64_t v50 = FIAgeInYearsForDateOfBirth();

    uint64_t v51 = kActivityMoveModeMoveTimeMaximumAge;
    BOOL v22 = kActivityMoveModeMoveTimeMaximumAge >= v50;
    os_log_type_t v52 = static os_log_type_t.default.getter();
    uint64_t v53 = (void *)HKLogActivity;
    os_log_type_t v54 = v52;
    if (os_log_type_enabled(HKLogActivity, v52))
    {
      LODWORD(v70) = v51 >= v50;
      os_log_t v72 = v53;
      uint64_t v55 = swift_slowAlloc();
      id v75 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315650;
      uint64_t v56 = _typeName(_:qualified:)();
      uint64_t v74 = sub_10008F1F4(v56, v57, (uint64_t *)&v75);
      uint64_t v71 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2048;
      uint64_t v74 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v55 + 22) = 1024;
      LODWORD(v74) = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v58 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, v54, "%s ageInYears %ld shouldShowMoveModeSettings %{BOOL}d", (uint8_t *)v55, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v7[1].isa)(v73, v71);
    }
    else
    {
      ((void (*)(char *, uint64_t))v7[1].isa)(v73, v6);
    }
  }
  return v22;
}

id sub_10028EC64()
{
  uint64_t v1 = *(void *)(v0 + 56);
  id v2 = objc_allocWithZone((Class)CHASActivitySetupMetricsCollectionViewController);

  return [v2 initWithPresentationContext:6 pregnancyStateProvider:v1];
}

id sub_10028ECB0()
{
  id v0 = objc_allocWithZone((Class)CHASActivitySetupViewController);

  return [v0 initWithPresentationContext:6];
}

unint64_t sub_10028EE20()
{
  unint64_t result = qword_100953708;
  if (!qword_100953708)
  {
    type metadata accessor for AccountFitnessSettingsChanged();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953708);
  }
  return result;
}

uint64_t sub_10028EE78()
{
  uint64_t v1 = sub_1000AFA94(&qword_100953718);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10028EF18()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10028EF58()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10028EF90()
{
  return j__swift_retain_0(v0);
}

uint64_t initializeWithCopy for HistoryViewActionContext(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for HistoryViewActionContext(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for HistoryViewActionContext(uint64_t a1, uint64_t a2)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryViewActionContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryViewActionContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryViewActionContext()
{
  return &type metadata for HistoryViewActionContext;
}

uint64_t *sub_10028F0FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 3);
    swift_retain();
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 4);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = v13;
      (**(void (***)(char *, char *, uint64_t))(v12 - 8))(v10, v11, v12);
    }
    else
    {
      long long v14 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v14;
      *((void *)v10 + 4) = *((void *)v11 + 4);
    }
  }
  return a1;
}

uint64_t sub_10028F27C(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t result = a1 + *(int *)(a2 + 24);
  if (*(void *)(result + 24))
  {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  }
  return result;
}

void *sub_10028F33C(void *a1, void *a2, uint64_t a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 3);
  swift_retain();
  if (v10)
  {
    uint64_t v11 = *((void *)v9 + 4);
    *((void *)v8 + 3) = v10;
    *((void *)v8 + 4) = v11;
    (**(void (***)(char *, char *, uint64_t))(v10 - 8))(v8, v9, v10);
  }
  else
  {
    long long v12 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v12;
    *((void *)v8 + 4) = *((void *)v9 + 4);
  }
  return a1;
}

void *sub_10028F46C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 3);
  if (!*(void *)((char *)a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, char *))(v10 - 8))(v8, v9);
      return a1;
    }
LABEL_12:
    long long v11 = *(_OWORD *)v9;
    long long v12 = *((_OWORD *)v9 + 1);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    return a1;
  }
  if (!v10)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v8, (uint64_t *)v9);
  return a1;
}

char *sub_10028F5E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  return a1;
}

char *sub_10028F6D4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  if (*(void *)&a1[v8 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v8]);
  }
  long long v10 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v10;
  *((void *)v9 + 4) = *(void *)&a2[v8 + 32];
  return a1;
}

uint64_t sub_10028F7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028F808);
}

uint64_t sub_10028F808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10028F8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028F8E0);
}

uint64_t sub_10028F8E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10028F9A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10028F9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v52 = sub_1000AFA94(&qword_100953860);
  __chkstk_darwin(v52);
  uint64_t v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HistoryItemsCardView();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v45 + 64);
  __chkstk_darwin(v5);
  uint64_t v48 = sub_1000AFA94(&qword_100953828);
  __chkstk_darwin(v48);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000AFA94(&qword_100953868);
  __chkstk_darwin(v46);
  uint64_t v47 = (uint64_t)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100953800);
  uint64_t v11 = __chkstk_darwin(v10);
  char v49 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(int *)(v5 + 20);
  uint64_t v14 = *(void *)(a1 + v13);
  uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_historyItems);
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v51 = v11;
  if (v16)
  {
    sub_10008E75C(v15 + 32, (uint64_t)v79);
    if (*(unsigned char *)(v14 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size))
    {
      *(void *)uint64_t v8 = static HorizontalAlignment.leading.getter();
      *((void *)v8 + 1) = 0;
      v8[16] = 0;
      v44[1] = &v8[*(int *)(sub_1000AFA94(&qword_100953870) + 44)];
      os_log_type_t v17 = sub_100290268();
      uint64_t v18 = sub_1004F8C00((uint64_t)v17);
      swift_bridgeObjectRelease();
      *(void *)&long long v66 = v18;
      swift_getKeyPath();
      sub_100290F98(a1, (uint64_t)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v19 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v20 = swift_allocObject();
      sub_100291128((uint64_t)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_10029118C;
      *(void *)(v21 + 24) = v20;
      sub_1000AFA94(&qword_100953878);
      sub_1000AFA94(&qword_100953880);
      sub_1000A132C(&qword_100953888, &qword_100953878);
      sub_100181C98();
      sub_1000A132C(&qword_100953890, &qword_100953880);
      ForEach<>.init(_:id:content:)();
      BOOL v22 = &qword_100953828;
      sub_1000AEF2C((uint64_t)v8, v47, &qword_100953828);
      swift_storeEnumTagMultiPayload();
      sub_1000AFA94(&qword_100953810);
      sub_100290DD4(&qword_100953808, &qword_100953810, (void (*)(void))sub_100290D80);
      sub_1000A132C(&qword_100953820, &qword_100953828);
      uint64_t v23 = (uint64_t)v49;
      _ConditionalContent<>.init(storage:)();
      id v24 = (long long *)v8;
    }
    else
    {
      sub_10008E75C((uint64_t)v79, (uint64_t)&v66 + 8);
      sub_1000AEF2C(a1 + *(int *)(v5 + 24), (uint64_t)&v69, &qword_10094C750);
      *(void *)&long long v66 = v14;
      swift_retain();
      static Alignment.center.getter();
      sub_1004DCB28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v53, 0.0, 1, 0.0, 1);
      sub_10029127C((uint64_t)&v66);
      long long v76 = v63;
      long long v77 = v64;
      uint64_t v78 = v65;
      long long v72 = v59;
      long long v73 = v60;
      long long v74 = v61;
      long long v75 = v62;
      long long v68 = v55;
      long long v69 = v56;
      long long v70 = v57;
      long long v71 = v58;
      long long v66 = v53;
      long long v67 = v54;
      BOOL v22 = &qword_100953810;
      sub_1000AEF2C((uint64_t)&v66, v47, &qword_100953810);
      swift_storeEnumTagMultiPayload();
      sub_1000AFA94(&qword_100953810);
      sub_100290DD4(&qword_100953808, &qword_100953810, (void (*)(void))sub_100290D80);
      sub_1000A132C(&qword_100953820, &qword_100953828);
      uint64_t v23 = (uint64_t)v49;
      _ConditionalContent<>.init(storage:)();
      id v24 = &v66;
    }
    sub_10008DB18((uint64_t)v24, v22);
    sub_1000AEF2C(v23, (uint64_t)v4, &qword_100953800);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100953838);
    sub_100290CBC();
    sub_100290DD4(&qword_100953830, &qword_100953838, (void (*)(void))sub_100290E54);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v23, &qword_100953800);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v79);
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v25 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v48 = v25;
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v45 = static Font.footnote.getter();
    uint64_t v33 = swift_getKeyPath();
    int v34 = static HierarchicalShapeStyle.secondary.getter();
    int v35 = *(unsigned __int8 *)(*(void *)(a1 + v13) + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
    LODWORD(v49) = v35 ^ 1;
    if (v35) {
      uint64_t v36 = 0;
    }
    else {
      uint64_t v36 = 0x7FF0000000000000;
    }
    uint64_t v37 = 0x4059000000000000;
    if (!v35) {
      uint64_t v37 = 0;
    }
    uint64_t v46 = v36;
    uint64_t v47 = v37;
    *(void *)&long long v53 = v25;
    *((void *)&v53 + 1) = v27;
    LOBYTE(v54) = v31;
    *((void *)&v54 + 1) = v29;
    *(void *)&long long v55 = KeyPath;
    BYTE8(v55) = 1;
    *(void *)&long long v56 = v33;
    *((void *)&v56 + 1) = v45;
    LODWORD(v57) = v34;
    static Alignment.center.getter();
    sub_1004DCCD8(0.0, 1, 0.0, 1, INFINITY, 0, *(double *)&v47, (char)v49, (uint64_t)&v66, 0.0, 1, *(double *)&v46, v35);
    sub_1000A06C0(v48, v27, v31);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v38 = v75;
    *((_OWORD *)v4 + 8) = v74;
    *((_OWORD *)v4 + 9) = v38;
    *((_OWORD *)v4 + 10) = v76;
    *((void *)v4 + 22) = v77;
    long long v39 = v71;
    *((_OWORD *)v4 + 4) = v70;
    *((_OWORD *)v4 + 5) = v39;
    long long v40 = v73;
    *((_OWORD *)v4 + 6) = v72;
    *((_OWORD *)v4 + 7) = v40;
    long long v41 = v67;
    *(_OWORD *)uint64_t v4 = v66;
    *((_OWORD *)v4 + 1) = v41;
    long long v42 = v69;
    *((_OWORD *)v4 + 2) = v68;
    *((_OWORD *)v4 + 3) = v42;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100953838);
    sub_100290CBC();
    sub_100290DD4(&qword_100953830, &qword_100953838, (void (*)(void))sub_100290E54);
    return _ConditionalContent<>.init(storage:)();
  }
}

void *sub_100290268()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  sub_100092088((uint64_t)&v16 - v6);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for DynamicTypeSize.xxxLarge(_:), v1);
  char v8 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v1);
  v9(v7, v1);
  uint64_t v10 = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for HistoryItemsCardView() + 20))
                  + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_historyItems);
  if (v8)
  {
    swift_bridgeObjectRetain();
    return (void *)v10;
  }
  else
  {
    if (*(void *)(v10 + 16) >= 2uLL) {
      uint64_t v12 = 2;
    }
    else {
      uint64_t v12 = *(void *)(v10 + 16);
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v13 = (void *)swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = _swiftEmptyArrayStorage;
    }
    uint64_t v14 = v13[2];
    swift_release();
    if (v14 == v12)
    {
      uint64_t v11 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (!v11)
      {
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = (uint64_t)sub_10036937C(v10, v10 + 32, 0, (2 * v12) | 1);
      swift_bridgeObjectRelease();
    }
  }
  return (void *)v11;
}

uint64_t sub_100290494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v59 = a4;
  uint64_t v54 = type metadata accessor for DynamicTypeSize();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v5 = __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v50 = (uint64_t)&v47 - v7;
  uint64_t v49 = type metadata accessor for Divider();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100951728);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000AFA94(&qword_100951730);
  uint64_t v57 = *(void *)(v58 - 8);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v51 = (uint64_t)&v47 - v16;
  uint64_t v17 = sub_1000AFA94(&qword_100953898);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  BOOL v22 = (char *)&v47 - v21;
  uint64_t v23 = type metadata accessor for HistoryItemsCardView();
  uint64_t v24 = *(void *)(a3 + *(int *)(v23 + 20));
  sub_10008E75C(v55, (uint64_t)&v62);
  sub_1000AEF2C(a3 + *(int *)(v23 + 24), (uint64_t)v63, &qword_10094C750);
  uint64_t v61 = v24;
  swift_retain();
  uint64_t v25 = sub_100290268()[2];
  swift_bridgeObjectRelease();
  if (v25 - 1 == v56)
  {
    uint64_t v26 = 1;
    uint64_t v27 = v58;
  }
  else
  {
    Divider.init()();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v28 = v48;
    uint64_t v29 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v12, v9, v49);
    char v30 = &v12[*(int *)(v10 + 36)];
    long long v31 = v64;
    *(_OWORD *)char v30 = *(_OWORD *)&v63[40];
    *((_OWORD *)v30 + 1) = v31;
    *((_OWORD *)v30 + 2) = v65;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    uint64_t v32 = v50;
    sub_100092088(v50);
    uint64_t v33 = v53;
    int v34 = v52;
    uint64_t v35 = v54;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, enum case for DynamicTypeSize.xxxLarge(_:), v54);
    char v36 = static DynamicTypeSize.< infix(_:_:)();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v33 + 8);
    v37(v34, v35);
    v37((char *)v32, v35);
    if (v36) {
      uint64_t v38 = 0x4024000000000000;
    }
    else {
      uint64_t v38 = 0x4020000000000000;
    }
    if (v36) {
      uint64_t v39 = 0x404E000000000000;
    }
    else {
      uint64_t v39 = 0;
    }
    char v40 = static Edge.Set.all.getter();
    sub_1000AEF2C((uint64_t)v12, (uint64_t)v15, &qword_100951728);
    uint64_t v41 = v58;
    long long v42 = &v15[*(int *)(v58 + 36)];
    *long long v42 = v40;
    *((void *)v42 + 1) = v38;
    *((void *)v42 + 2) = v39;
    *((void *)v42 + 3) = v38;
    *((void *)v42 + 4) = 0;
    char v42[40] = 0;
    sub_10008DB18((uint64_t)v12, &qword_100951728);
    uint64_t v43 = v51;
    sub_1002912E0((uint64_t)v15, v51);
    sub_1002912E0(v43, (uint64_t)v22);
    uint64_t v26 = 0;
    uint64_t v27 = v41;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v22, v26, 1, v27);
  sub_100291348((uint64_t)&v61, (uint64_t)v60);
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v20, &qword_100953898);
  uint64_t v44 = v59;
  sub_100291348((uint64_t)v60, v59);
  uint64_t v45 = sub_1000AFA94(qword_1009538A0);
  sub_1000AEF2C((uint64_t)v20, v44 + *(int *)(v45 + 48), &qword_100953898);
  sub_10008DB18((uint64_t)v22, &qword_100953898);
  sub_10029127C((uint64_t)&v61);
  sub_10008DB18((uint64_t)v20, &qword_100953898);
  return sub_10029127C((uint64_t)v60);
}

uint64_t sub_100290A4C()
{
  uint64_t v1 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009537D8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10028F9BC(v0, (uint64_t)v7);
  static AccessibilityChildBehavior.combine.getter();
  sub_100290BA8();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v7, &qword_1009537D8);
}

unint64_t sub_100290BA8()
{
  unint64_t result = qword_1009537E0;
  if (!qword_1009537E0)
  {
    sub_1000A1370(&qword_1009537D8);
    sub_100290C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009537E0);
  }
  return result;
}

unint64_t sub_100290C1C()
{
  unint64_t result = qword_1009537E8;
  if (!qword_1009537E8)
  {
    sub_1000A1370(&qword_1009537F0);
    sub_100290CBC();
    sub_100290DD4(&qword_100953830, &qword_100953838, (void (*)(void))sub_100290E54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009537E8);
  }
  return result;
}

unint64_t sub_100290CBC()
{
  unint64_t result = qword_1009537F8;
  if (!qword_1009537F8)
  {
    sub_1000A1370(&qword_100953800);
    sub_100290DD4(&qword_100953808, &qword_100953810, (void (*)(void))sub_100290D80);
    sub_1000A132C(&qword_100953820, &qword_100953828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009537F8);
  }
  return result;
}

unint64_t sub_100290D80()
{
  unint64_t result = qword_100953818;
  if (!qword_100953818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953818);
  }
  return result;
}

uint64_t sub_100290DD4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100290E54()
{
  unint64_t result = qword_100953840;
  if (!qword_100953840)
  {
    sub_1000A1370(&qword_100953848);
    sub_100290EF4();
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953840);
  }
  return result;
}

unint64_t sub_100290EF4()
{
  unint64_t result = qword_100953850;
  if (!qword_100953850)
  {
    sub_1000A1370(&qword_100953858);
    sub_1001AD3E8();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953850);
  }
  return result;
}

uint64_t sub_100290F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoryItemsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100290FFC()
{
  uint64_t v1 = type metadata accessor for HistoryItemsCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v4 = v0 + v2 + *(int *)(v1 + 24);
  if (*(void *)(v4 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v4);
  }

  return swift_deallocObject();
}

uint64_t sub_100291128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoryItemsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029118C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for HistoryItemsCardView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100290494(a1, a2, v8, a3);
}

uint64_t sub_100291214()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10029124C(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t sub_10029127C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002912E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100951730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100291348(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1002913A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100291400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100291408(id *a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100291454(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  id v7 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1002914C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100291560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Histogram1D(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Histogram1D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingSectionView()
{
  return sub_100049E84();
}

uint64_t sub_10029167C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002916C0()
{
  sub_1000AFA94(&qword_100953950);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t sub_100291714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v4 = sub_1000A1370(&qword_100953928);
  uint64_t v64 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for Section();
  uint64_t v67 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v63 = (char *)&v45 - v6;
  sub_1000A1370(&qword_100953930);
  uint64_t v54 = v5;
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v57 = v7;
  uint64_t v65 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v45 - v8;
  unint64_t v53 = sub_100291FD4();
  uint64_t v50 = *(void *)(a1 + 24);
  unint64_t v78 = v53;
  uint64_t v79 = v50;
  char v80 = &protocol witness table for EmptyView;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v51 = WitnessTable;
  uint64_t v10 = sub_1002921D0(&qword_100953948, &qword_100953930);
  uint64_t v76 = WitnessTable;
  uint64_t v77 = v10;
  long long v66 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v56 = swift_getWitnessTable();
  *(void *)&long long v81 = v7;
  *((void *)&v81 + 1) = v56;
  uint64_t v58 = &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v61 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v49 = (char *)&v45 - v11;
  sub_1000A1370(&qword_10094D7B0);
  uint64_t v60 = type metadata accessor for ModifiedContent();
  uint64_t v62 = *(void *)(v60 - 8);
  uint64_t v12 = __chkstk_darwin(v60);
  uint64_t v48 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v55 = (uint64_t)&v45 - v14;
  uint64_t v15 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  BOOL v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v45 - v23;
  uint64_t v25 = *(void **)v2;
  int v47 = *(unsigned __int8 *)(v2 + 8);
  id v46 = v25;
  uint64_t v26 = sub_1002916C0();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  static Edge.Set.horizontal.getter();
  long long v81 = 0u;
  long long v82 = 0u;
  char v83 = 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(&v24[*(int *)(v4 + 36)], v19, v15);
  *(void *)uint64_t v24 = v46;
  v24[8] = v47;
  *((void *)v24 + 2) = v26;
  *((void *)v24 + 3) = v28;
  *((void *)v24 + 4) = v30;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  sub_1002920FC((uint64_t)v24, (uint64_t)v22);
  uint64_t v69 = v64;
  uint64_t v70 = v50;
  uint64_t v71 = v2;
  long long v31 = v63;
  Section<>.init(header:content:)();
  uint64_t v74 = static Color.clear.getter();
  uint64_t v32 = v59;
  uint64_t v33 = v54;
  View.listRowBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v33);
  static VerticalEdge.Set.all.getter();
  int v34 = v49;
  uint64_t v35 = v57;
  uint64_t v36 = v56;
  View.listRowSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v35);
  uint64_t v74 = v35;
  uint64_t v75 = v36;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = (uint64_t)v48;
  uint64_t v39 = OpaqueTypeMetadata2;
  sub_100337148();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v39);
  sub_100292170((uint64_t)v24);
  uint64_t v40 = sub_1002921D0(&qword_10094D7A8, &qword_10094D7B0);
  uint64_t v72 = OpaqueTypeConformance2;
  uint64_t v73 = v40;
  uint64_t v41 = v60;
  swift_getWitnessTable();
  uint64_t v42 = v55;
  sub_10004C704(v38, v41, v55);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v43(v38, v41);
  sub_10004C704(v42, v41, v68);
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v42, v41);
}

uint64_t sub_100291E5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(void))(v8 + 40))();
  sub_10004C704((uint64_t)v7, a1, (uint64_t)v10);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, a1);
  sub_10004C704((uint64_t)v10, a1, a2);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, a1);
}

uint64_t sub_100291F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100291714(a1, a2);
}

unint64_t sub_100291FD4()
{
  unint64_t result = qword_100953938;
  if (!qword_100953938)
  {
    sub_1000A1370(&qword_100953928);
    sub_100292050();
    sub_1002920A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953938);
  }
  return result;
}

unint64_t sub_100292050()
{
  unint64_t result = qword_100953940;
  if (!qword_100953940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953940);
  }
  return result;
}

unint64_t sub_1002920A4()
{
  unint64_t result = qword_10094D7E0;
  if (!qword_10094D7E0)
  {
    type metadata accessor for SafeAreaPaddingModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7E0);
  }
  return result;
}

uint64_t sub_1002920FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100953928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100292164@<X0>(uint64_t a1@<X8>)
{
  return sub_100291E5C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100292170(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100953928);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002921D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100292220()
{
  return swift_getWitnessTable();
}

uint64_t initializeBufferWithCopyOfBuffer for LegacyDevicesView(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for LegacyDevicesView(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for LegacyDevicesView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LegacyDevicesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LegacyDevicesView()
{
  return &type metadata for LegacyDevicesView;
}

uint64_t sub_1002924DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002924F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v156 = a3;
  uint64_t v149 = a1;
  id v154 = a4;
  uint64_t v4 = sub_1000AFA94(&qword_10094E150);
  uint64_t v147 = *(void *)(v4 - 8);
  uint64_t v148 = v4;
  __chkstk_darwin(v4);
  uint64_t v146 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100953970);
  uint64_t v152 = *(void *)(v6 - 8);
  uint64_t v153 = v6;
  __chkstk_darwin(v6);
  id v145 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100953978);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v177 = (uint64_t)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v163 = (uint64_t)&v143 - v11;
  uint64_t v176 = sub_1000AFA94(&qword_100953980);
  uint64_t v165 = *(void *)(v176 - 8);
  uint64_t v12 = __chkstk_darwin(v176);
  uint64_t v164 = (char *)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v172 = (char *)&v143 - v14;
  uint64_t v15 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Font.TextStyle();
  uint64_t v57 = *(void (***)(char *, void, uint64_t))(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_100293CF8();
  uint64_t v197 = v21;
  unint64_t v171 = sub_1000A06D0();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  v57[13](v20, enum case for Font.TextStyle.largeTitle(_:), v18);
  uint64_t v27 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v17, &qword_10094C448);
  ((void (*)(char *, uint64_t))v57[1])(v20, v18);
  Font.bold()();
  swift_release();
  uint64_t v28 = Text.font(_:)();
  uint64_t v161 = v29;
  uint64_t v162 = v28;
  LODWORD(v18) = v30;
  uint64_t v175 = v31;
  swift_release();
  uint64_t v32 = v22;
  uint64_t v33 = v149;
  sub_1000A06C0(v32, v24, v26);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v159 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  int v160 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  int v151 = v18;
  unsigned __int8 v226 = v18 & 1;
  unsigned __int8 v222 = 0;
  unsigned __int8 v219 = 0;
  uint64_t v196 = sub_100293E20();
  uint64_t v197 = v50;
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v53 = v52;
  LOBYTE(v18) = v54 & 1;
  static Font.callout.getter();
  uint64_t v174 = Text.font(_:)();
  uint64_t v178 = v55;
  LODWORD(v57) = v56;
  uint64_t v157 = v58;
  swift_release();
  sub_1000A06C0(v51, v53, v18);
  swift_bridgeObjectRelease();
  uint64_t v173 = swift_getKeyPath();
  int v150 = static HierarchicalShapeStyle.secondary.getter();
  long long v179 = v33;
  uint64_t v180 = v155;
  uint64_t v181 = v156;
  sub_1000AFA94(&qword_100953988);
  sub_100293F4C();
  List<>.init(content:)();
  uint64_t v59 = sub_1003851C8();
  uint64_t v60 = sub_100293B6C((uint64_t)v59);
  swift_bridgeObjectRelease();
  uint64_t v61 = *(void *)(v60 + 16);
  swift_bridgeObjectRelease();
  if (v61 && sub_100294014())
  {
    id v62 = [self mainBundle];
    NSString v63 = String._bridgeToObjectiveC()();
    NSString v64 = String._bridgeToObjectiveC()();
    id v65 = [v62 localizedStringForKey:v63 value:0 table:v64];

    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v67;

    uint64_t v196 = v66;
    uint64_t v197 = v68;
    uint64_t v69 = Text.init<A>(_:)();
    uint64_t v71 = v70;
    LOBYTE(v65) = v72 & 1;
    LODWORD(v196) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v73 = Text.foregroundStyle<A>(_:)();
    uint64_t v75 = v74;
    LODWORD(v144) = v57;
    uint64_t v57 = (void (**)(char *, void, uint64_t))v33;
    char v77 = v76 & 1;
    sub_1000A06C0(v69, v71, (char)v65);
    swift_bridgeObjectRelease();
    static Font.callout.getter();
    uint64_t v78 = Text.font(_:)();
    uint64_t v170 = v79;
    unint64_t v171 = v78;
    LOBYTE(v71) = v80;
    uint64_t v169 = v81;
    swift_release();
    uint64_t v168 = v71 & 1;
    char v82 = v77;
    uint64_t v33 = v57;
    LOBYTE(v57) = v144;
    sub_1000A06C0(v73, v75, v82);
    swift_bridgeObjectRelease();
    uint64_t v167 = swift_getKeyPath();
    int v166 = 1;
  }
  else
  {
    uint64_t v170 = 0;
    unint64_t v171 = 0;
    uint64_t v168 = 0;
    uint64_t v169 = 0;
    uint64_t v167 = 0;
    int v166 = 0;
  }
  uint64_t v83 = sub_100294188();
  if (v84)
  {
    uint64_t v85 = v83;
    uint64_t v86 = v84;
    uint64_t v87 = (void *)swift_allocObject();
    uint64_t v88 = v155;
    uint64_t v89 = v156;
    v87[2] = v33;
    v87[3] = v88;
    v87[4] = v89;
    __chkstk_darwin(v87);
    *(&v143 - 2) = v85;
    *(&v143 - 1) = v86;
    id v90 = v33;
    swift_retain();
    uint64_t v91 = v146;
    Button.init(action:label:)();
    swift_bridgeObjectRelease();
    LOBYTE(v86) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v144 = v41;
    uint64_t v92 = v35;
    uint64_t v93 = v43;
    uint64_t v95 = v94;
    uint64_t v155 = v37;
    uint64_t v156 = v49;
    uint64_t v96 = v45;
    uint64_t v98 = v97;
    uint64_t v149 = v39;
    uint64_t v99 = v47;
    uint64_t v101 = v100;
    uint64_t v103 = v102;
    uint64_t v105 = v147;
    uint64_t v104 = v148;
    uint64_t v106 = v145;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v145, v91, v148);
    uint64_t v107 = v153;
    uint64_t v108 = &v106[*(int *)(v153 + 36)];
    char *v108 = v86;
    *((void *)v108 + 1) = v95;
    *((void *)v108 + 2) = v98;
    uint64_t v43 = v93;
    uint64_t v35 = v92;
    uint64_t v41 = v144;
    uint64_t v45 = v96;
    *((void *)v108 + 3) = v101;
    *((void *)v108 + 4) = v103;
    uint64_t v47 = v99;
    uint64_t v39 = v149;
    uint64_t v37 = v155;
    uint64_t v49 = v156;
    v108[40] = 0;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v91, v104);
    uint64_t v109 = (uint64_t)v106;
    uint64_t v110 = v163;
    sub_1002944A4(v109, v163);
    uint64_t v111 = 0;
  }
  else
  {
    uint64_t v111 = 1;
    uint64_t v110 = v163;
    uint64_t v107 = v153;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v110, v111, 1, v107);
  LODWORD(v156) = v57 & 1;
  unsigned __int8 v112 = v226;
  LODWORD(v152) = v226;
  v187[0] = *(_DWORD *)v225;
  *(_DWORD *)((char *)v187 + 3) = *(_DWORD *)&v225[3];
  v186[0] = *(_DWORD *)v224;
  *(_DWORD *)((char *)v186 + 3) = *(_DWORD *)&v224[3];
  v185[0] = *(_DWORD *)v223;
  *(_DWORD *)((char *)v185 + 3) = *(_DWORD *)&v223[3];
  unsigned __int8 v113 = v222;
  LODWORD(v153) = v222;
  *(_DWORD *)((char *)v184 + 3) = *(_DWORD *)&v221[3];
  v184[0] = *(_DWORD *)v221;
  *(_DWORD *)((char *)v183 + 3) = *(_DWORD *)&v220[3];
  v183[0] = *(_DWORD *)v220;
  unsigned __int8 v114 = v219;
  LODWORD(v155) = v219;
  char v182 = v57 & 1;
  uint64_t v115 = v164;
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  uint64_t v117 = v176;
  v116(v164, v172, v176);
  sub_100294274(v110, v177);
  *(void *)&long long v188 = v162;
  *((void *)&v188 + 1) = v161;
  LOBYTE(v189) = v112;
  *(_DWORD *)((char *)&v189 + 1) = *(_DWORD *)v225;
  DWORD1(v189) = *(_DWORD *)&v225[3];
  *((void *)&v189 + 1) = v175;
  *(void *)&long long v190 = KeyPath;
  BYTE8(v190) = 1;
  *(_DWORD *)((char *)&v190 + 9) = *(_DWORD *)v224;
  HIDWORD(v190) = *(_DWORD *)&v224[3];
  LOBYTE(v191) = v159;
  *(_DWORD *)((char *)&v191 + 1) = *(_DWORD *)v223;
  DWORD1(v191) = *(_DWORD *)&v223[3];
  *((void *)&v191 + 1) = v35;
  *(void *)&long long v192 = v37;
  *((void *)&v192 + 1) = v39;
  *(void *)&long long v193 = v41;
  BYTE8(v193) = v113;
  *(_DWORD *)((char *)&v193 + 9) = *(_DWORD *)v221;
  HIDWORD(v193) = *(_DWORD *)&v221[3];
  LOBYTE(v194) = v160;
  DWORD1(v194) = *(_DWORD *)&v220[3];
  *(_DWORD *)((char *)&v194 + 1) = *(_DWORD *)v220;
  *((void *)&v194 + 1) = v43;
  *(void *)&v195[0] = v45;
  *((void *)&v195[0] + 1) = v47;
  *(void *)&v195[1] = v49;
  BYTE8(v195[1]) = v114;
  long long v118 = v189;
  uint64_t v119 = v154;
  _OWORD *v154 = v188;
  v119[1] = v118;
  long long v120 = v191;
  v119[2] = v190;
  v119[3] = v120;
  long long v121 = v192;
  long long v122 = v193;
  *(_OWORD *)((char *)v119 + 121) = *(_OWORD *)((char *)v195 + 9);
  long long v123 = v195[0];
  v119[6] = v194;
  v119[7] = v123;
  v119[4] = v121;
  v119[5] = v122;
  uint64_t v124 = v178;
  *((void *)v119 + 18) = v174;
  *((void *)v119 + 19) = v124;
  char v125 = v156;
  *((unsigned char *)v119 + 160) = v156;
  uint64_t v126 = v173;
  *((void *)v119 + 21) = v157;
  *((void *)v119 + 22) = v126;
  *((unsigned char *)v119 + 184) = 1;
  *((_DWORD *)v119 + 47) = v150;
  unint64_t v127 = (int *)sub_1000AFA94(&qword_1009539A0);
  v116((char *)v119 + v127[16], v115, v117);
  unint64_t v128 = (char *)v119 + v127[20];
  *(void *)unint64_t v128 = 0;
  v128[8] = 1;
  uint64_t v129 = (char *)v119 + v127[24];
  uint64_t v131 = v170;
  uint64_t v130 = v171;
  *(void *)uint64_t v129 = v171;
  *((void *)v129 + 1) = v131;
  uint64_t v170 = v131;
  unint64_t v171 = v130;
  uint64_t v133 = v168;
  uint64_t v132 = v169;
  *((void *)v129 + 2) = v168;
  *((void *)v129 + 3) = v132;
  uint64_t v168 = v133;
  uint64_t v169 = v132;
  uint64_t v134 = v167;
  *((void *)v129 + 4) = v167;
  uint64_t v167 = v134;
  LODWORD(v116) = v166;
  v129[40] = v166;
  int v166 = (int)v116;
  sub_100294274(v177, (uint64_t)v119 + v127[28]);
  sub_1002942DC((uint64_t)&v188);
  sub_1000A1750(v174, v178, v125);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10029432C(v130, v131, v133, v132);
  LODWORD(v154) = v151 & 1;
  uint64_t v136 = v161;
  uint64_t v135 = v162;
  sub_1000A1750(v162, v161, v151 & 1);
  swift_bridgeObjectRetain();
  uint64_t v137 = KeyPath;
  swift_retain();
  uint64_t v138 = v174;
  uint64_t v139 = v178;
  sub_1000A1750(v174, v178, v125);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18(v163, &qword_100953978);
  id v140 = *(void (**)(char *, uint64_t))(v165 + 8);
  v140(v172, v176);
  sub_1000A06C0(v138, v139, v156);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v135, v136, (char)v154);
  swift_release();
  uint64_t v141 = v175;
  swift_bridgeObjectRelease();
  sub_10008DB18(v177, &qword_100953978);
  sub_10029437C(v171, v170, v168, v169);
  v140(v164, v176);
  sub_1000A06C0(v138, v178, v182);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v196 = v135;
  uint64_t v197 = v136;
  char v198 = v152;
  *(_DWORD *)long long v199 = v187[0];
  *(_DWORD *)&v199[3] = *(_DWORD *)((char *)v187 + 3);
  uint64_t v200 = v141;
  uint64_t v201 = v137;
  char v202 = 1;
  *(_DWORD *)long long v203 = v186[0];
  *(_DWORD *)&v203[3] = *(_DWORD *)((char *)v186 + 3);
  char v204 = v159;
  *(_DWORD *)&v205[3] = *(_DWORD *)((char *)v185 + 3);
  *(_DWORD *)long long v205 = v185[0];
  uint64_t v206 = v35;
  uint64_t v207 = v37;
  char v208 = v39;
  uint64_t v209 = v41;
  char v210 = v153;
  *(_DWORD *)&v211[3] = *(_DWORD *)((char *)v184 + 3);
  *(_DWORD *)long long v211 = v184[0];
  char v212 = v160;
  *(_DWORD *)&v213[3] = *(_DWORD *)((char *)v183 + 3);
  *(_DWORD *)v213 = v183[0];
  uint64_t v214 = v43;
  uint64_t v215 = v45;
  uint64_t v216 = v47;
  uint64_t v217 = v49;
  char v218 = v155;
  return sub_1002943CC((uint64_t)&v196);
}

uint64_t sub_10029330C()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1002933D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 49);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(unsigned char *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 49) = v8;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100293454@<X0>(uint64_t a1@<X8>)
{
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1002934C0()
{
  uint64_t v1 = sub_1000AFA94(&qword_100953958);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  uint64_t v6 = *(void *)(v0 + 16);
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v7 = sub_1000AFA94(&qword_100953960);
  sub_1002924F8(v4, v5, v6, &v3[*(int *)(v7 + 44)]);
  static Edge.Set.all.getter();
  sub_1000A132C(&qword_100953968, &qword_100953958);
  View.scenePadding(_:)();
  return sub_10008DB18((uint64_t)v3, &qword_100953958);
}

__n128 sub_1002935DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_100293660((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  __n128 result = v9;
  long long v8 = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_100293660@<X0>(uint64_t a1@<X8>)
{
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v25 = v3;
  uint64_t v26 = v2;
  uint64_t v27 = v4;
  char v24 = v5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.footnote.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  swift_release();
  sub_1000A06C0(v6, v8, v10);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_1000A06C0(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v26;
  *(void *)(a1 + 8) = v25;
  *(unsigned char *)(a1 + 16) = v24;
  *(void *)(a1 + 24) = v27;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v18;
  *(unsigned char *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v20;
  sub_1000A1750(v26, v25, v24);
  swift_bridgeObjectRetain();
  sub_1000A1750(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v16, v18, v22);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v26, v25, v24);
  return swift_bridgeObjectRelease();
}

__n128 sub_100293844@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v7 = [self secondaryLabelColor];
  uint64_t v8 = Color.init(_:)();
  uint64_t v9 = static Alignment.center.getter();
  sub_1004DCEA4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v16, 0.0, 1, 30.0, 0, v9, v10, v6, 0, 1, 0, v8);
  swift_release();
  swift_release();
  long long v11 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v16[8];
  long long v12 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v13;
  __n128 result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100293A5C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_1000AFA94(&qword_1009539C0);
  sub_1000AFA94(&qword_1009539C8);
  sub_1000AFA94(&qword_1009539D0);
  sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
  sub_1002948B0();
  return Label.init(title:icon:)();
}

uint64_t sub_100293B6C(uint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result - 40;
LABEL_2:
  if (v3 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v3;
  }
  uint64_t v7 = v5 + 72 * v3;
  unint64_t v8 = v6 + 1;
  while (1)
  {
    if (v4 == v3) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    if (v8 == ++v3) {
      break;
    }
    uint64_t v9 = (uint64_t *)(v7 + 72);
    int v10 = *(unsigned __int8 *)(v7 + 121);
    v7 += 72;
    if (v10 == 1)
    {
      uint64_t v11 = v9[1];
      uint64_t v12 = v9[3];
      uint64_t v20 = v9[2];
      uint64_t v21 = *v9;
      uint64_t v13 = v9[5];
      uint64_t v19 = v9[4];
      char v18 = *((unsigned char *)v9 + 48);
      uint64_t v14 = v9[8];
      uint64_t v22 = v9[7];
      uint64_t v23 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __n128 result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v2;
      if ((result & 1) == 0) {
        __n128 result = sub_1001C91D8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        __n128 result = sub_1001C91D8(v15 > 1, v16 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[9 * v16];
      v17[4] = v21;
      v17[5] = v11;
      v17[6] = v20;
      v17[7] = v12;
      v17[8] = v19;
      v17[9] = v13;
      *((unsigned char *)v17 + 80) = v18;
      *((unsigned char *)v17 + 81) = 1;
      uint64_t v5 = v23;
      v17[11] = v22;
      v17[12] = v14;
      uint64_t v2 = v24;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100293CF8()
{
  uint64_t v0 = sub_1003851C8();
  sub_100293B6C((uint64_t)v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:0 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100293E20()
{
  uint64_t v0 = sub_1003851C8();
  sub_100293B6C((uint64_t)v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:0 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100293F40()
{
  return sub_10029330C();
}

unint64_t sub_100293F4C()
{
  unint64_t result = qword_100953990;
  if (!qword_100953990)
  {
    sub_1000A1370(&qword_100953988);
    sub_100293FC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953990);
  }
  return result;
}

unint64_t sub_100293FC0()
{
  unint64_t result = qword_100953998;
  if (!qword_100953998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953998);
  }
  return result;
}

BOOL sub_100294014()
{
  uint64_t v0 = sub_1003851C8();
  uint64_t v1 = v0[2];
  if (v1)
  {
    NSString v2 = v0 + 6;
    do
    {
      if ((*((unsigned char *)v2 + 33) & 1) == 0)
      {
        uint64_t v7 = *(v2 - 2);
        uint64_t v6 = *(v2 - 1);
        uint64_t v8 = v2[1];
        uint64_t v9 = v2[3];
        uint64_t v14 = v2[2];
        uint64_t v15 = *v2;
        char v13 = *((unsigned char *)v2 + 32);
        uint64_t v10 = v2[6];
        uint64_t v16 = v2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001C91D8(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v4 = _swiftEmptyArrayStorage[2];
        unint64_t v3 = _swiftEmptyArrayStorage[3];
        if (v4 >= v3 >> 1) {
          sub_1001C91D8(v3 > 1, v4 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v4 + 1;
        uint64_t v5 = &_swiftEmptyArrayStorage[9 * v4];
        v5[4] = v7;
        v5[5] = v6;
        v5[6] = v15;
        v5[7] = v8;
        v5[8] = v14;
        v5[9] = v9;
        *((unsigned char *)v5 + 80) = v13;
        *((unsigned char *)v5 + 81) = 0;
        v5[11] = v16;
        v5[12] = v10;
      }
      v2 += 9;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = _swiftEmptyArrayStorage[2];
  swift_release();
  return v11 != 0;
}

uint64_t sub_100294188()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self bundleWithIdentifier:v0];

  if (!v1) {
    return 0;
  }
  id v2 = [v1 privacyFlow];
  if (!v2)
  {
LABEL_6:

    return 0;
  }
  unint64_t v3 = v2;
  id v4 = [v2 localizedButtonTitle];
  if (!v4)
  {

    goto LABEL_6;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_100294274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100953978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002942DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10029432C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A1750(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10029437C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A06C0(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002943CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10029441C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10029445C()
{
  return (*(uint64_t (**)(unint64_t, unint64_t))(v0 + 24))(0xD00000000000001DLL, 0x80000001007BCFB0);
}

uint64_t sub_10029449C@<X0>(uint64_t a1@<X8>)
{
  return sub_100293454(a1);
}

uint64_t sub_1002944A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100953970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10029450C()
{
  unint64_t result = qword_1009539B8;
  if (!qword_1009539B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009539B8);
  }
  return result;
}

uint64_t destroy for LegacyDevice()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LegacyDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LegacyDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LegacyDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyDeviceView()
{
  return &type metadata for LegacyDeviceView;
}

uint64_t sub_100294804()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100294884()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1002948A0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1002935DC(a1).n128_u64[0];
  return result;
}

double sub_1002948A8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100293844(a1).n128_u64[0];
  return result;
}

unint64_t sub_1002948B0()
{
  unint64_t result = qword_1009539E0;
  if (!qword_1009539E0)
  {
    sub_1000A1370(&qword_1009539D0);
    sub_10029492C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009539E0);
  }
  return result;
}

unint64_t sub_10029492C()
{
  unint64_t result = qword_1009539E8;
  if (!qword_1009539E8)
  {
    sub_1000A1370(&qword_1009539F0);
    sub_1002949CC();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009539E8);
  }
  return result;
}

unint64_t sub_1002949CC()
{
  unint64_t result = qword_1009539F8;
  if (!qword_1009539F8)
  {
    sub_1000A1370(&qword_100953A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009539F8);
  }
  return result;
}

uint64_t sub_100294A40()
{
  return sub_1000A132C(&qword_100953A08, &qword_100953A10);
}

uint64_t sub_100294A84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

char *sub_100294AF8(void *a1, void *a2, void *a3)
{
  uint64_t v7 = sub_1000AFA94(&qword_100953A98);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v3[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource__metrics];
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v12 = v3;
  sub_1000AFA94(&qword_100953A88);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_hasAggregateRow] = 1;
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_dataCalculator] = a2;
  id v13 = a2;
  id v14 = [a3 fitnessUIFormattingManager];
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_formattingManager] = v14;
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_workout] = a1;
  *(void *)&v12[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_defaultColumns] = &off_1008B46F0;
  id v15 = a1;

  uint64_t v16 = (objc_class *)type metadata accessor for WorkoutDetailDownhillRunDataSource();
  v25.receiver = v12;
  v25.super_class = v16;
  uint64_t v17 = [(char *)[super init]];
  char v18 = *(void **)&v17[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_dataCalculator];
  uint64_t v19 = *(void *)&v17[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_workout];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  aBlock[4] = sub_100296DCC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10029547C;
  aBlock[3] = &unk_1008BEBF8;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v17;
  swift_release();
  [v18 downhillRunsForWorkout:v19 completion:v21];
  _Block_release(v21);

  return v22;
}

uint64_t sub_100294E00(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v10);
  id v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    uint64_t v16 = v43;
    uint64_t v17 = v44;
    *(void *)(v15 + 56) = v44;
    char v18 = sub_1000B1710((uint64_t *)(v15 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v18, v16, v17);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  if (a1)
  {
    uint64_t v40 = v12;
    uint64_t v41 = result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v42 = v7;
    if (v19)
    {
      uint64_t v39 = a3;
      aBlock[0] = _swiftEmptyArrayStorage;
      uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
      if (v19 < 0)
      {
LABEL_23:
        __break(1u);
        return result;
      }
      uint64_t v20 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v21 = *(id *)(a1 + 8 * v20 + 32);
        }
        uint64_t v22 = v21;
        ++v20;
        type metadata accessor for WorkoutDurationMetrics();
        swift_allocObject();
        sub_10043CAAC(v22);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v19 != v20);
      uint64_t v23 = (void *)aBlock[0];
      a3 = v39;
    }
    else
    {
      uint64_t v23 = _swiftEmptyArrayStorage;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    aBlock[0] = v23;
    id v24 = a3;
    static Published.subscript.setter();
    id v25 = objc_allocWithZone((Class)type metadata accessor for DownhillRunsStatsBridge());
    uint64_t v26 = (char *)sub_100330E80(a1);
    uint64_t v27 = *(void **)&v26[OBJC_IVAR___CHWorkoutDownhillRunsStats_downhillRunsStats];
    swift_retain_n();

    type metadata accessor for WorkoutDurationMetrics();
    swift_allocObject();
    uint64_t v39 = v27;
    uint64_t v28 = sub_10043CC00();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    int v30 = (void (*)(void *, void))static Published.subscript.modify();
    uint64_t v31 = *v29;
    if ((unint64_t)*v29 >> 62)
    {
      uint64_t v36 = v31 & 0xFFFFFFFFFFFFFF8;
      if (v31 < 0) {
        uint64_t v36 = *v29;
      }
      uint64_t v38 = v36;
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v38 < 0)
      {
        __break(1u);
        goto LABEL_23;
      }
    }
    sub_1001C64AC(0, 0, v28);
    v30(aBlock, 0);
    swift_release();
    swift_release();
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v32 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v24;
    aBlock[4] = sub_100296DD4;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008BEC48;
    uint64_t v34 = _Block_copy(aBlock);
    id v35 = v24;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100296DDC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v34);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v14, v41);
  }
  return result;
}

uint64_t sub_1002953F0()
{
  sub_100295758();
  type metadata accessor for WorkoutDetailDownhillRunDataSource();
  sub_100296DDC(&qword_100953A90, (void (*)(uint64_t))type metadata accessor for WorkoutDetailDownhillRunDataSource);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();

  return swift_release();
}

uint64_t sub_10029547C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for DownhillRunBridge();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_100295510(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns);
    if (*(void *)(v2 + 16) > result) {
      return sub_1002522C0(*(void **)(v1 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_formattingManager), *(unsigned char *)(v2 + result + 32));
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10029554C(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns);
  if (*(void *)(v2 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v3 = *(unsigned __int8 *)(v2 + result + 32);
  uint64_t v4 = v1 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columnSizes;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_100529A74(v3);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    else {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100295610(uint64_t result)
{
  uint64_t v2 = result;
  if (*(unsigned char *)(v1 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_hasAggregateRow) == 1)
  {
    if (!result)
    {
      id v3 = [self mainBundle];
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_6:

      return v6;
    }
LABEL_5:
    uint64_t v7 = self;
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v2];
    id v5 = [v7 localizedStringFromNumber:v8 numberStyle:0];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_6;
  }
  uint64_t v2 = result + 1;
  if (!__OFADD__(result, 1)) {
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100295758()
{
  uint64_t v1 = v0;
  uint64_t v83 = type metadata accessor for AttributedString();
  unint64_t v2 = *(void *)(v83 - 8);
  uint64_t v3 = __chkstk_darwin(v83);
  char v82 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v69 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v7 = v93;
  if (v93 >> 62) {
    goto LABEL_54;
  }
  uint64_t v8 = *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    uint64_t v9 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_defaultColumns];
    uint64_t v10 = &v1[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columnSizes];
    unint64_t v74 = v7 & 0xC000000000000001;
    uint64_t v81 = OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_workout;
    uint64_t v71 = v7 & 0xFFFFFFFFFFFFFF8;
    uint64_t v70 = (char *)(v7 + 32);
    uint64_t v80 = OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_formattingManager;
    uint64_t v79 = (void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v78 = (void (**)(char *, uint64_t))(v2 + 8);
    unint64_t v2 = 0;
    uint64_t v87 = OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_hasAggregateRow;
    id v90 = (char *)v9[2];
    uint64_t v91 = v9;
    NSAttributedStringKey v86 = NSFontAttributeName;
    long long v85 = xmmword_1007509E0;
    uint64_t v84 = (char *)&type metadata for Any + 8;
    unint64_t v76 = 0x80000001007BBF30;
    uint64_t v75 = "";
    unint64_t v73 = v7;
    uint64_t v72 = v8;
    while (1)
    {
      if (v74)
      {
        unint64_t v88 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v2 >= *(void *)(v71 + 16)) {
          goto LABEL_53;
        }
        unint64_t v88 = *(void *)&v70[8 * v2];
        swift_retain();
      }
      char v77 = (void *)(v2 + 1);
      if (__OFADD__(v2, 1)) {
        goto LABEL_52;
      }
      if (v90) {
        break;
      }
      swift_release();
LABEL_5:
      unint64_t v2 = (unint64_t)v77;
      if (v77 == (void *)v8) {
        goto LABEL_55;
      }
    }
    unint64_t v89 = v2;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = &v11[(void)v91];
      uint64_t v13 = (v11++)[(void)v91 + 32];
      switch(v12[32])
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_19;
          }
          sub_100252BD4(v88, *(void **)&v1[v81], 0, *(void **)&v1[v80], v13, (uint64_t)v6);
          sub_10007E2D8(0, (unint64_t *)&qword_10094D428);
          unint64_t v7 = (unint64_t)v82;
          uint64_t v20 = v83;
          (*v79)(v82, v6, v83);
          id v21 = (id)NSAttributedString.init(_:)();
          (*v78)(v6, v20);
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_19:
          BOOL v15 = v1[v87] == 1 && v89 == 0;
          if (v15)
          {
            id v22 = [self mainBundle];
            NSString v23 = String._bridgeToObjectiveC()();
            id v19 = [v22 localizedStringForKey:v23 value:0 table:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            if (v1[v87]) {
              uint64_t v16 = (void *)v89;
            }
            else {
              uint64_t v16 = v77;
            }
            uint64_t v17 = self;
            id v18 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v16];
            id v19 = [v17 localizedStringFromNumber:v18 numberStyle:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }

          sub_1000AFA94((uint64_t *)&unk_10095BF70);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v85;
          NSAttributedStringKey v25 = v86;
          *(void *)(inited + 32) = v86;
          uint64_t v26 = qword_10094A720;
          uint64_t v27 = v25;
          if (v26 != -1) {
            swift_once();
          }
          uint64_t v28 = (void *)qword_1009978F0;
          *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
          *(void *)(inited + 40) = v28;
          id v29 = v28;
          sub_1000DFC2C(inited);
          unint64_t v7 = (unint64_t)objc_allocWithZone((Class)NSMutableAttributedString);
          NSString v30 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          type metadata accessor for Key(0);
          sub_100296DDC((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v21 = [(id)v7 initWithString:v30 attributes:isa];

          break;
      }
      [v21 boundingRectWithSize:1 options:0 context:1.79769313e308];
      double v32 = ceil(CGRectGetWidth(v94));
      uint64_t v33 = *(void *)v10;
      if (!*(void *)(*(void *)v10 + 16)) {
        goto LABEL_37;
      }
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_100529A74(v13);
      if ((v35 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        if (v32 <= 0.0) {
          goto LABEL_15;
        }
        goto LABEL_38;
      }
      double v36 = *(double *)(*(void *)(v33 + 56) + 8 * v34);
      swift_bridgeObjectRelease();
      if (v36 >= v32) {
        goto LABEL_15;
      }
LABEL_38:
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v92 = *(void **)v10;
      unint64_t v2 = (unint64_t)v92;
      *(void *)uint64_t v10 = 0x8000000000000000;
      unint64_t v39 = sub_100529A74(v13);
      uint64_t v40 = *(void *)(v2 + 16);
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        break;
      }
      unint64_t v7 = v38;
      if (*(void *)(v2 + 24) >= v42)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v45 = v92;
          if ((v38 & 1) == 0) {
            goto LABEL_45;
          }
        }
        else
        {
          unint64_t v2 = (unint64_t)&v92;
          sub_1004F2A48();
          uint64_t v45 = v92;
          if ((v7 & 1) == 0) {
            goto LABEL_45;
          }
        }
      }
      else
      {
        sub_1004E9864(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v2 = (unint64_t)v92;
        uint64_t v43 = sub_100529A74(v13);
        if ((v7 & 1) != (v44 & 1))
        {
LABEL_76:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x100296298);
        }
        unint64_t v39 = v43;
        uint64_t v45 = v92;
        if ((v7 & 1) == 0)
        {
LABEL_45:
          v45[(v39 >> 6) + 8] |= 1 << v39;
          *(unsigned char *)(v45[6] + v39) = v13;
          *(double *)(v45[7] + 8 * v39) = v32;
          uint64_t v46 = v45[2];
          BOOL v47 = __OFADD__(v46, 1);
          uint64_t v48 = v46 + 1;
          if (v47) {
            goto LABEL_51;
          }
          v45[2] = v48;
          goto LABEL_14;
        }
      }
      *(double *)(v45[7] + 8 * v39) = v32;
LABEL_14:
      *(void *)uint64_t v10 = v45;
      swift_bridgeObjectRelease();
      swift_endAccess();
LABEL_15:

      if (v90 == v11)
      {
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v7 = v73;
        uint64_t v8 = v72;
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_55:
  swift_bridgeObjectRelease();
  unint64_t v49 = *(void *)&v1[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_defaultColumns];
  unint64_t v50 = *(void *)(v49 + 16);
  uint64_t v51 = &v1[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columnSizes];
  uint64_t v52 = v1;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  if (v50)
  {
    unint64_t v53 = 0;
    unint64_t v54 = v49 + 32;
    uint64_t v55 = _swiftEmptyArrayStorage;
    unint64_t v89 = v49;
    id v90 = v52;
    unint64_t v88 = v50;
LABEL_57:
    uint64_t v91 = v55;
    uint64_t v56 = 0;
    if (v53 <= v50) {
      unint64_t v57 = v50;
    }
    else {
      unint64_t v57 = v53;
    }
    unint64_t v58 = v53 - v57;
    unint64_t v59 = v54;
    do
    {
      if (!(v58 + v56))
      {
        __break(1u);
        goto LABEL_76;
      }
      if (*(void *)(*(void *)v51 + 16))
      {
        uint64_t v60 = *(unsigned __int8 *)(v59 + v53);
        unint64_t v61 = v54;
        swift_bridgeObjectRetain();
        sub_100529A74(v60);
        char v63 = v62;
        swift_bridgeObjectRelease();
        unint64_t v54 = v61;
        if (v63)
        {
          uint64_t v55 = v91;
          char v64 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v92 = v55;
          if ((v64 & 1) == 0)
          {
            sub_1001C91F8(0, v55[2] + 1, 1);
            uint64_t v55 = v92;
          }
          unint64_t v66 = v55[2];
          unint64_t v65 = v55[3];
          if (v66 >= v65 >> 1)
          {
            sub_1001C91F8(v65 > 1, v66 + 1, 1);
            uint64_t v55 = v92;
          }
          unint64_t v67 = v53 + 1;
          v53 += 1 + v56;
          v55[2] = v66 + 1;
          *((unsigned char *)v55 + v66 + 32) = v60;
          BOOL v15 = v67 == v50;
          uint64_t v52 = v90;
          unint64_t v50 = v88;
          unint64_t v54 = v61;
          if (v15) {
            goto LABEL_74;
          }
          goto LABEL_57;
        }
      }
      ++v56;
      ++v59;
      --v50;
    }
    while (v53 != v50);
    uint64_t v52 = v90;
    uint64_t v55 = v91;
  }
  else
  {
    uint64_t v55 = _swiftEmptyArrayStorage;
  }
LABEL_74:
  swift_bridgeObjectRelease();

  *(void *)&v52[OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns] = v55;
  return swift_bridgeObjectRelease();
}

id sub_1002962F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailDownhillRunDataSource();
  return [super dealloc];
}

uint64_t sub_100296404()
{
  return type metadata accessor for WorkoutDetailDownhillRunDataSource();
}

uint64_t type metadata accessor for WorkoutDetailDownhillRunDataSource()
{
  uint64_t result = qword_100953A70;
  if (!qword_100953A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100296458()
{
  sub_100296518();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100296518()
{
  if (!qword_100953A80)
  {
    sub_1000A1370(&qword_100953A88);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100953A80);
    }
  }
}

uint64_t sub_100296574()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns) + 16);
}

uint64_t sub_100296598()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_hasAggregateRow);
}

uint64_t sub_1002965A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailDownhillRunDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002965E8(uint64_t a1)
{
  uint64_t result = sub_100296DDC(&qword_100953A90, (void (*)(uint64_t))type metadata accessor for WorkoutDetailDownhillRunDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100296640@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002966C0(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100296738()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1002967F4(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void (***)(char *, unint64_t, uint64_t))(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (void (**)(char *, unint64_t, uint64_t))((char *)&v64 - v10);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v17 = __chkstk_darwin(v16);
  id v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_columns);
  if (*(void *)(v20 + 16) <= a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v66 = v13;
  unint64_t v67 = v19;
  uint64_t v68 = v12;
  uint64_t v69 = v17;
  int v70 = *(unsigned __int8 *)(v20 + a2 + 32);
  if (sub_100252154(v70) == 0x72656B72616DLL && v21 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  a2 = (unint64_t)v11;
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_14:
    uint64_t v71 = sub_100295610(a1);
    uint64_t v72 = v44;
    sub_1000A06D0();
    uint64_t v45 = Text.init<A>(_:)();
    uint64_t v47 = v46;
    char v49 = v48 & 1;
    static Font.body.getter();
    uint64_t v50 = Text.font(_:)();
    uint64_t v52 = v51;
    char v54 = v53;
    swift_release();
    sub_1000A06C0(v45, v47, v49);
    swift_bridgeObjectRelease();
    sub_1002528C4(v70);
    uint64_t v55 = Text.foregroundColor(_:)();
    unint64_t v57 = v56;
    char v59 = v58;
    uint64_t v61 = v60;
    swift_release();
    sub_1000A06C0(v50, v52, v54 & 1);
    swift_bridgeObjectRelease();
    uint64_t v71 = v55;
    uint64_t v72 = v57;
    char v73 = v59 & 1;
    uint64_t v74 = v61;
    uint64_t v62 = v66;
    uint64_t v63 = v68;
    (*(void (**)(char *, void, uint64_t))(v66 + 104))(v15, enum case for DynamicTypeSize.large(_:), v68);
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v63);
    sub_1000A06C0(v71, (uint64_t)v72, v73);
    swift_bridgeObjectRelease();
    uint64_t v71 = (uint64_t)&type metadata for Text;
    uint64_t v72 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    return AnyView.init<A>(_:)();
  }
  uint64_t v11 = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v71 & 0xC000000000000001) != 0)
  {
LABEL_18:
    uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v25 = *(void *)(v71 + 8 * a1 + 32);
    swift_retain();
LABEL_12:
    uint64_t v68 = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_workout);
    uint64_t v27 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailDownhillRunDataSource_formattingManager);
    unint64_t v28 = a2;
    uint64_t v29 = a2;
    unint64_t v65 = a2;
    char v30 = v70;
    sub_100252BD4(v25, v26, 0, v27, v70, v29);
    v11[2](v9, v28, v5);
    uint64_t v31 = Text.init(_:)();
    uint64_t v33 = v32;
    uint64_t v69 = v5;
    char v35 = v34 & 1;
    sub_1002528C4(v30);
    uint64_t v36 = Text.foregroundColor(_:)();
    unint64_t v38 = v37;
    char v40 = v39;
    uint64_t v42 = v41;
    swift_release();
    sub_1000A06C0(v31, v33, v35);
    swift_bridgeObjectRelease();
    uint64_t v71 = v36;
    uint64_t v72 = v38;
    char v73 = v40 & 1;
    uint64_t v74 = v42;
    uint64_t v43 = AnyView.init<A>(_:)();
    swift_release();
    ((void (*)(unint64_t, uint64_t))v11[1])(v65, v69);
    return v43;
  }
  __break(1u);
  return result;
}

uint64_t sub_100296D94()
{
  return swift_deallocObject();
}

uint64_t sub_100296DCC(unint64_t a1, uint64_t a2)
{
  return sub_100294E00(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100296DD4()
{
  return sub_1002953F0();
}

uint64_t sub_100296DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NSString sub_100296E2C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1009979D8 = (uint64_t)result;
  return result;
}

NSString sub_100296E64()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1009979E0 = (uint64_t)result;
  return result;
}

void sub_100296F4C(void *a1, uint64_t a2)
{
}

void sub_100296F90(void *a1, uint64_t a2)
{
}

void sub_100296FBC(void *a1, uint64_t a2, uint64_t *a3, void *a4, void *a5)
{
  uint64_t v10 = *a3;
  unsigned __int8 v11 = [*(id *)(v5 + *a3) isEqualToDate:a1];
  uint64_t v12 = *(void **)(v5 + v10);
  *(void *)(v5 + v10) = a1;
  id v13 = a1;

  if ((v11 & 1) == 0)
  {
    id v14 = [self defaultCenter];
    id v15 = v14;
    if (*a4 != -1)
    {
      swift_once();
      id v14 = v15;
    }
    [v14 postNotificationName:*a5 object:a2];
  }
}

void sub_1002970E8(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(v8, a4);

  swift_unknownObjectRelease();
}

id sub_1002971BC()
{
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_dateCache] removeObserver:v0];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDateCache();
  return [super dealloc];
}

uint64_t sub_1002974A4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DF004();
  id v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100297960;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008BEC98;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100297724()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10029775C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentDeviceDate;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    char v7 = Calendar.isDateInToday(_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if ((v7 & 1) == 0)
    {
      id v8 = [objc_allocWithZone((Class)NSDate) init];
      uint64_t v9 = *(void **)&v5[v6];
      uint64_t v10 = v5;
      LOBYTE(v9) = [v9 isEqualToDate:v8];
      unsigned __int8 v11 = *(void **)&v5[v6];
      *(void *)&v5[v6] = v8;
      uint64_t v12 = (char *)v8;

      if (v9)
      {
        uint64_t v5 = v10;
      }
      else
      {
        uint64_t v5 = (char *)[self defaultCenter];
        if (qword_10094A7E0 != -1) {
          swift_once();
        }
        [v5 postNotificationName:qword_1009979D8 object:v10];

        uint64_t v12 = v10;
      }
    }
  }
}

void sub_100297960()
{
}

ValueMetadata *type metadata accessor for ActivitySharingFriendListCompetitionViewRepresentable()
{
  return &type metadata for ActivitySharingFriendListCompetitionViewRepresentable;
}

char *sub_10029797C(uint64_t a1, void *a2)
{
  type metadata accessor for ActivitySharingFriendListCompetitionView();
  id v3 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend];
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend] = a2;
  id v5 = a2;

  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView];
  id v7 = [v5 currentCompetition];
  [v6 setFriend:v5 competition:v7];

  id v8 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel];
  id v9 = [v5 as_competitionStageString];
  [v8 setText:v9];

  return v3;
}

char *sub_100297A68(uint64_t a1)
{
  return sub_10029797C(a1, *v1);
}

uint64_t sub_100297A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100297B60();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100297AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100297B60();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100297B38()
{
}

unint64_t sub_100297B60()
{
  unint64_t result = qword_100953B70;
  if (!qword_100953B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953B70);
  }
  return result;
}

uint64_t sub_100297BB4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v31 = a5;
  int v30 = a2 & 1;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t)&v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  id v15 = &v29[-v14];
  uint64_t v16 = (int *)type metadata accessor for MetricDetailChartView();
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
  sub_1000AEF2C((uint64_t)v15, v13, (uint64_t *)&unk_10095B890);
  State.init(wrappedValue:)();
  sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
  uint64_t v18 = &a6[v16[12]];
  char v35 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v19 = v37;
  long long v20 = v38;
  char *v18 = v36;
  *((void *)v18 + 1) = v19;
  *((_OWORD *)v18 + 1) = v20;
  *a6 = a1;
  a6[1] = v30;
  sub_1002A2FEC(a3, (uint64_t)&a6[v16[6]], (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  sub_1002A2FEC(a4, (uint64_t)&a6[v16[7]], (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  uint64_t v21 = v31;
  sub_1000AEF2C(v31, (uint64_t)&a6[v16[8]], &qword_10094C3D0);
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v33 = a4;
  char v34 = a1;
  swift_bridgeObjectRetain();
  char v23 = sub_1000C2A00((void (*)(uint64_t *__return_ptr, uint64_t))sub_100297EE4, (uint64_t)v32, v22);
  swift_bridgeObjectRelease();
  *(double *)&uint64_t v24 = COERCE_DOUBLE(sub_1000C2B68((uint64_t)v23));
  LOBYTE(v13) = v25;
  swift_bridgeObjectRelease();
  double v26 = *(double *)&v24;
  if (v13) {
    double v26 = 0.0;
  }
  *(double *)&a6[v16[10]] = v26;
  double v27 = sub_100534444(a1, v26 * 1.05263158);
  sub_10008DB18(v21, &qword_10094C3D0);
  sub_10006A3F8(a3, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t result = sub_10006A3F8(a4, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  *(double *)&a6[v16[11]] = v27;
  return result;
}

uint64_t type metadata accessor for MetricDetailChartView()
{
  uint64_t result = qword_100953BE8;
  if (!qword_100953BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100297EE4(void *a1@<X0>, void *a2@<X8>)
{
  unsigned __int8 v4 = *(unsigned char *)(v2 + 24);
  [*(id *)((char *)a1 + *(int *)(type metadata accessor for MetricChartData() + 24)) doubleValueForUnit:*a1];
  sub_100534258(v4, v5);
  *a2 = v6;
}

uint64_t sub_100297F58(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    uint64_t v19 = v18 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
    uint64_t v4 = a3[6];
    uint64_t v5 = a1 + v4;
    uint64_t v6 = (uint64_t)a2 + v4;
    id v7 = *(void **)((char *)a2 + v4);
    id v8 = *(void **)((char *)a2 + v4 + 8);
    *(void *)uint64_t v5 = v7;
    *(void *)(v5 + 8) = v8;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v4 + 24);
    *(void *)(v5 + 16) = *(uint64_t *)((char *)a2 + v4 + 16);
    *(void *)(v5 + 24) = v9;
    *(unsigned char *)(v5 + 40) = *((unsigned char *)a2 + v4 + 40);
    *(void *)(v5 + 32) = *(uint64_t *)((char *)a2 + v4 + 32);
    uint64_t v10 = type metadata accessor for MetricDetailViewModel();
    uint64_t v11 = *(int *)(v10 + 36);
    __dst = (void *)(v5 + v11);
    uint64_t v74 = v10;
    uint64_t v12 = (const void *)(v6 + v11);
    uint64_t v13 = type metadata accessor for DateInterval();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v71 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    id v15 = v7;
    id v16 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v71(v12, 1, v13))
    {
      uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    *(unsigned char *)(v5 + *(int *)(v74 + 40)) = *(unsigned char *)(v6 + *(int *)(v74 + 40));
    uint64_t v20 = *(int *)(v74 + 44);
    uint64_t v21 = v5 + v20;
    uint64_t v22 = v6 + v20;
    __dsta = (void *)type metadata accessor for Date();
    uint64_t v75 = *(__dsta - 1);
    int v70 = *(void (**)(uint64_t, uint64_t))(v75 + 16);
    v70(v21, v22);
    uint64_t v23 = a3[7];
    uint64_t v24 = a1 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    double v26 = *(void **)((char *)a2 + v23);
    *(void *)(a1 + v23) = v26;
    uint64_t v27 = type metadata accessor for MetricFormattingHelper();
    uint64_t v28 = *(int *)(v27 + 20);
    uint64_t v68 = v25 + v28;
    uint64_t v69 = v24 + v28;
    uint64_t v29 = type metadata accessor for AttributedString();
    int v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
    id v31 = v26;
    v30(v69, v68, v29);
    uint64_t v32 = *(int *)(v27 + 24);
    uint64_t v33 = *(void **)(v25 + v32);
    *(void *)(v24 + v32) = v33;
    uint64_t v34 = a3[8];
    char v35 = (void *)(a1 + v34);
    uint64_t v36 = (uint64_t)a2 + v34;
    uint64_t v37 = *(uint64_t *)((char *)a2 + v34 + 8);
    *char v35 = *(uint64_t *)((char *)a2 + v34);
    v35[1] = v37;
    id v38 = v33;
    swift_retain();
    swift_retain();
    uint64_t v39 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
    char v40 = (void **)((char *)v35 + v39);
    uint64_t v41 = (void **)(v36 + v39);
    uint64_t v42 = type metadata accessor for MetricChartData();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      uint64_t v44 = sub_1000AFA94(&qword_10094C1E8);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      uint64_t v45 = __dsta;
      uint64_t v46 = v70;
    }
    else
    {
      uint64_t v47 = *v41;
      *char v40 = *v41;
      uint64_t v48 = *(int *)(v42 + 20);
      char v49 = (char *)v40 + v48;
      uint64_t v50 = (char *)v41 + v48;
      id v51 = v47;
      uint64_t v52 = v50;
      uint64_t v45 = __dsta;
      uint64_t v46 = v70;
      ((void (*)(char *, char *, void *))v70)(v49, v52, __dsta);
      uint64_t v53 = *(int *)(v42 + 24);
      char v54 = *(void **)((char *)v41 + v53);
      *(void **)((char *)v40 + v53) = v54;
      uint64_t v55 = *(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56);
      id v56 = v54;
      v55(v40, 0, 1, v42);
    }
    uint64_t v57 = a3[9];
    uint64_t v19 = a1;
    char v58 = (char *)(a1 + v57);
    char v59 = (char *)a2 + v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v75 + 48))((uint64_t)a2 + v57, 1, v45))
    {
      uint64_t v60 = sub_1000AFA94((uint64_t *)&unk_10095B890);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, void *))v46)(v58, v59, v45);
      (*(void (**)(char *, void, uint64_t, void *))(v75 + 56))(v58, 0, 1, v45);
    }
    uint64_t v61 = sub_1000AFA94(&qword_100953B88);
    *(void *)&v58[*(int *)(v61 + 28)] = *(void *)&v59[*(int *)(v61 + 28)];
    uint64_t v62 = a3[11];
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)(a1 + v62) = *(uint64_t *)((char *)a2 + v62);
    uint64_t v63 = a3[12];
    uint64_t v64 = a1 + v63;
    uint64_t v65 = (uint64_t)a2 + v63;
    *(unsigned char *)uint64_t v64 = *(unsigned char *)v65;
    uint64_t v66 = *(void *)(v65 + 24);
    *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
    *(void *)(v64 + 24) = v66;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v19;
}

uint64_t sub_10029847C(uint64_t a1, int *a2)
{
  uint64_t v4 = (id *)(a1 + a2[6]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 36);
  uint64_t v7 = type metadata accessor for DateInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = (char *)v4 + *(int *)(v5 + 44);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v11 + 8);
  v12(v9, v10);
  uint64_t v13 = (id *)(a1 + a2[7]);

  uint64_t v14 = type metadata accessor for MetricFormattingHelper();
  id v15 = (char *)v13 + *(int *)(v14 + 20);
  uint64_t v16 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);

  uint64_t v17 = a1 + a2[8];
  swift_release();
  swift_release();
  uint64_t v18 = (id *)(v17 + *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32));
  uint64_t v19 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
  {

    v12((char *)v18 + *(int *)(v19 + 20), v10);
  }
  uint64_t v20 = (char *)(a1 + a2[9]);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v20, 1, v10)) {
    v12(v20, v10);
  }
  sub_1000AFA94(&qword_100953B88);
  swift_release();
  swift_release();

  return swift_release();
}

unsigned char *sub_10029875C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a3[6];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v7 = *(void **)&a2[v3];
  uint64_t v6 = *(void **)&a2[v3 + 8];
  *(void *)uint64_t v4 = v7;
  *((void *)v4 + 1) = v6;
  uint64_t v8 = *(void *)&a2[v3 + 24];
  *((void *)v4 + 2) = *(void *)&a2[v3 + 16];
  *((void *)v4 + 3) = v8;
  v4[40] = a2[v3 + 40];
  *((void *)v4 + 4) = *(void *)&a2[v3 + 32];
  uint64_t v9 = type metadata accessor for MetricDetailViewModel();
  uint64_t v10 = *(int *)(v9 + 36);
  __dst = &v4[v10];
  uint64_t v68 = v9;
  uint64_t v11 = &v5[v10];
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v65 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  id v14 = v7;
  id v15 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v65(v11, 1, v12))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v4[*(int *)(v68 + 40)] = v5[*(int *)(v68 + 40)];
  uint64_t v17 = *(int *)(v68 + 44);
  uint64_t v18 = &v4[v17];
  uint64_t v19 = &v5[v17];
  __dsta = (void *)type metadata accessor for Date();
  uint64_t v69 = *(__dsta - 1);
  uint64_t v64 = *(void (**)(char *, char *, void *))(v69 + 16);
  ((void (*)(unsigned char *, unsigned char *))v64)(v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void **)&a2[v20];
  *(void *)&a1[v20] = v23;
  uint64_t v24 = type metadata accessor for MetricFormattingHelper();
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v62 = &v22[v25];
  uint64_t v63 = &v21[v25];
  uint64_t v26 = type metadata accessor for AttributedString();
  uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16);
  id v28 = v23;
  v27(v63, v62, v26);
  uint64_t v29 = *(int *)(v24 + 24);
  int v30 = *(void **)&v22[v29];
  *(void *)&v21[v29] = v30;
  uint64_t v31 = a3[8];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)&a2[v31 + 8];
  *uint64_t v32 = *(void *)&a2[v31];
  v32[1] = v34;
  id v35 = v30;
  swift_retain();
  swift_retain();
  uint64_t v36 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v37 = (void **)((char *)v32 + v36);
  id v38 = (void **)&v33[v36];
  uint64_t v39 = type metadata accessor for MetricChartData();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = *v38;
    *uint64_t v37 = *v38;
    uint64_t v43 = *(int *)(v39 + 20);
    uint64_t v44 = (char *)v37 + v43;
    uint64_t v45 = (char *)v38 + v43;
    id v46 = v42;
    v64(v44, v45, __dsta);
    uint64_t v47 = *(int *)(v39 + 24);
    uint64_t v48 = *(void **)((char *)v38 + v47);
    *(void **)((char *)v37 + v47) = v48;
    char v49 = *(void (**)(void **, void, uint64_t, uint64_t))(v40 + 56);
    id v50 = v48;
    v49(v37, 0, 1, v39);
  }
  uint64_t v51 = a3[9];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, void *))(v69 + 48))(&a2[v51], 1, __dsta))
  {
    uint64_t v54 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    v64(v52, v53, __dsta);
    (*(void (**)(char *, void, uint64_t, void *))(v69 + 56))(v52, 0, 1, __dsta);
  }
  uint64_t v55 = sub_1000AFA94(&qword_100953B88);
  *(void *)&v52[*(int *)(v55 + 28)] = *(void *)&v53[*(int *)(v55 + 28)];
  uint64_t v56 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v56] = *(void *)&a2[v56];
  uint64_t v57 = a3[12];
  char v58 = &a1[v57];
  char v59 = &a2[v57];
  *char v58 = *v59;
  uint64_t v60 = *((void *)v59 + 3);
  *(_OWORD *)(v58 + 8) = *(_OWORD *)(v59 + 8);
  *((void *)v58 + 3) = v60;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unsigned char *sub_100298C4C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a3[6];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void **)&a2[v3];
  uint64_t v7 = *(void **)v4;
  *(void *)uint64_t v4 = v6;
  id v8 = v6;

  uint64_t v9 = (void *)*((void *)v5 + 1);
  uint64_t v10 = (void *)*((void *)v4 + 1);
  *((void *)v4 + 1) = v9;
  id v11 = v9;

  *((void *)v4 + 2) = *((void *)v5 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 3) = *((void *)v5 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v5 + 4);
  v4[40] = v5[40];
  *((void *)v4 + 4) = v12;
  uint64_t v13 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v14 = v13[9];
  id v15 = &v4[v14];
  uint64_t v16 = &v5[v14];
  uint64_t v17 = type metadata accessor for DateInterval();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v4[v13[10]] = v5[v13[10]];
  uint64_t v23 = v13[11];
  uint64_t v24 = &v4[v23];
  uint64_t v25 = &v5[v23];
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v26 - 8);
  long long v85 = *(void (**)(char *, char *, uint64_t))(v27 + 24);
  v85(v24, v25, v26);
  uint64_t v28 = a3[7];
  uint64_t v29 = (void **)&a1[v28];
  int v30 = &a2[v28];
  uint64_t v31 = *(void **)&a2[v28];
  uint64_t v32 = *v29;
  *uint64_t v29 = v31;
  id v33 = v31;

  uint64_t v34 = type metadata accessor for MetricFormattingHelper();
  uint64_t v35 = *(int *)(v34 + 20);
  uint64_t v36 = (char *)v29 + v35;
  uint64_t v37 = &v30[v35];
  uint64_t v38 = type metadata accessor for AttributedString();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = *(int *)(v34 + 24);
  uint64_t v40 = *(void **)&v30[v39];
  uint64_t v41 = *(void **)((char *)v29 + v39);
  *(void **)((char *)v29 + v39) = v40;
  id v42 = v40;

  uint64_t v43 = a3[8];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  swift_retain();
  swift_release();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  uint64_t v46 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v47 = (void **)&v44[v46];
  uint64_t v48 = (void **)&v45[v46];
  uint64_t v49 = type metadata accessor for MetricChartData();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      uint64_t v54 = *v48;
      *uint64_t v47 = *v48;
      uint64_t v55 = *(int *)(v49 + 20);
      uint64_t v56 = (char *)v47 + v55;
      uint64_t v57 = (char *)v48 + v55;
      char v58 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      id v59 = v54;
      v58(v56, v57, v26);
      uint64_t v60 = *(int *)(v49 + 24);
      uint64_t v61 = *(void **)((char *)v48 + v60);
      *(void **)((char *)v47 + v60) = v61;
      uint64_t v62 = *(void (**)(void **, void, uint64_t, uint64_t))(v50 + 56);
      id v63 = v61;
      v62(v47, 0, 1, v49);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v53)
  {
    sub_10006A3F8((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for MetricChartData);
LABEL_12:
    uint64_t v64 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v47, v48, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v78 = *v48;
  uint64_t v79 = *v47;
  *uint64_t v47 = *v48;
  id v80 = v78;

  v85((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v26);
  uint64_t v81 = *(int *)(v49 + 24);
  char v82 = *(void **)((char *)v48 + v81);
  uint64_t v83 = *(void **)((char *)v47 + v81);
  *(void **)((char *)v47 + v81) = v82;
  id v84 = v82;

LABEL_13:
  uint64_t v65 = a3[9];
  uint64_t v66 = &a1[v65];
  unint64_t v67 = &a2[v65];
  uint64_t v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v69 = v68(&a1[v65], 1, v26);
  int v70 = v68(v67, 1, v26);
  if (!v69)
  {
    if (!v70)
    {
      v85(v66, v67, v26);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v66, v26);
    goto LABEL_18;
  }
  if (v70)
  {
LABEL_18:
    uint64_t v71 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v66, v67, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v66, 0, 1, v26);
LABEL_19:
  uint64_t v72 = sub_1000AFA94(&qword_100953B88);
  *(void *)&v66[*(int *)(v72 + 28)] = *(void *)&v67[*(int *)(v72 + 28)];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v73 = a3[12];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &a2[v73];
  *uint64_t v74 = a2[v73];
  *((void *)v74 + 1) = *(void *)&a2[v73 + 8];
  swift_retain();
  swift_release();
  uint64_t v76 = *((void *)v75 + 3);
  *((void *)v74 + 2) = *((void *)v75 + 2);
  *((void *)v74 + 3) = v76;
  swift_retain();
  swift_release();
  return a1;
}

unsigned char *sub_1002992D4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  long long v9 = *(_OWORD *)&a2[v6 + 16];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  *((_OWORD *)v7 + 1) = v9;
  v7[40] = a2[v6 + 40];
  *((void *)v7 + 4) = *(void *)&a2[v6 + 32];
  uint64_t v10 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v11 = v10[9];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for DateInterval();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v7[v10[10]] = v8[v10[10]];
  uint64_t v17 = v10[11];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
  uint64_t v52 = *(void *)(v20 - 8);
  v51(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v24 = type metadata accessor for MetricFormattingHelper();
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  uint64_t v28 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(void *)&v22[*(int *)(v24 + 24)] = *(void *)&v23[*(int *)(v24 + 24)];
  uint64_t v29 = a3[8];
  int v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(void *)&a2[v29 + 8];
  *int v30 = *(void *)&a2[v29];
  v30[1] = v32;
  uint64_t v33 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v34 = (void *)((char *)v30 + v33);
  uint64_t v35 = &v31[v33];
  uint64_t v36 = type metadata accessor for MetricChartData();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    uint64_t v39 = v51;
  }
  else
  {
    *uint64_t v34 = *v35;
    uint64_t v39 = v51;
    v51((char *)v34 + *(int *)(v36 + 20), (char *)v35 + *(int *)(v36 + 20), v20);
    *(void *)((char *)v34 + *(int *)(v36 + 24)) = *(void *)((char *)v35 + *(int *)(v36 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v40 = a3[9];
  uint64_t v41 = &a1[v40];
  id v42 = &a2[v40];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48))(&a2[v40], 1, v20))
  {
    uint64_t v43 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v39(v41, v42, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v41, 0, 1, v20);
  }
  uint64_t v44 = sub_1000AFA94(&qword_100953B88);
  *(void *)&v41[*(int *)(v44 + 28)] = *(void *)&v42[*(int *)(v44 + 28)];
  uint64_t v45 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v45] = *(void *)&a2[v45];
  uint64_t v46 = a3[12];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  long long v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  return a1;
}

unsigned char *sub_100299710(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a3[6];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void **)&a1[v3];
  *(void *)&a1[v3] = *(void *)&a2[v3];

  uint64_t v7 = (void *)*((void *)v4 + 1);
  *((void *)v4 + 1) = *((void *)v5 + 1);

  *((void *)v4 + 2) = *((void *)v5 + 2);
  swift_bridgeObjectRelease();
  *((void *)v4 + 3) = *((void *)v5 + 3);
  swift_bridgeObjectRelease();
  *((void *)v4 + 4) = *((void *)v5 + 4);
  v4[40] = v5[40];
  id v8 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v9 = v8[9];
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v4[v8[10]] = v5[v8[10]];
  uint64_t v18 = v8[11];
  uint64_t v19 = &v4[v18];
  uint64_t v20 = &v5[v18];
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v22 + 40);
  v62(v19, v20, v21);
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  uint64_t v27 = type metadata accessor for MetricFormattingHelper();
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = &v24[v28];
  int v30 = &v25[v28];
  uint64_t v31 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = *(int *)(v27 + 24);
  uint64_t v33 = *(void **)&v24[v32];
  *(void *)&v24[v32] = *(void *)&v25[v32];

  uint64_t v34 = a3[8];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *(void *)&a1[v34] = *(void *)&a2[v34];
  swift_release();
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_release();
  uint64_t v37 = *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32);
  uint64_t v38 = (void **)&v35[v37];
  uint64_t v39 = (void **)&v36[v37];
  uint64_t v40 = type metadata accessor for MetricChartData();
  uint64_t v41 = *(void *)(v40 - 8);
  id v42 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      *uint64_t v38 = *v39;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v38 + *(int *)(v40 + 20), (char *)v39 + *(int *)(v40 + 20), v21);
      *(void **)((char *)v38 + *(int *)(v40 + 24)) = *(void **)((char *)v39 + *(int *)(v40 + 24));
      (*(void (**)(void **, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    sub_10006A3F8((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MetricChartData);
LABEL_12:
    uint64_t v45 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  id v59 = *v38;
  *uint64_t v38 = *v39;

  v62((char *)v38 + *(int *)(v40 + 20), (char *)v39 + *(int *)(v40 + 20), v21);
  uint64_t v60 = *(int *)(v40 + 24);
  uint64_t v61 = *(void **)((char *)v38 + v60);
  *(void **)((char *)v38 + v60) = *(void **)((char *)v39 + v60);

LABEL_13:
  uint64_t v46 = a3[9];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  long long v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v50 = v49(&a1[v46], 1, v21);
  int v51 = v49(v48, 1, v21);
  if (!v50)
  {
    if (!v51)
    {
      v62(v47, v48, v21);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v21);
    goto LABEL_18;
  }
  if (v51)
  {
LABEL_18:
    uint64_t v52 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v47, v48, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v47, 0, 1, v21);
LABEL_19:
  uint64_t v53 = sub_1000AFA94(&qword_100953B88);
  *(void *)&v47[*(int *)(v53 + 28)] = *(void *)&v48[*(int *)(v53 + 28)];
  swift_release();
  uint64_t v54 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v54] = *(void *)&a2[v54];
  uint64_t v55 = a3[12];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  unsigned char *v56 = a2[v55];
  *((void *)v56 + 1) = *(void *)&a2[v55 + 8];
  swift_release();
  *((_OWORD *)v56 + 1) = *((_OWORD *)v57 + 1);
  swift_release();
  return a1;
}

uint64_t sub_100299D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100299D48);
}

uint64_t sub_100299D48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MetricDetailViewModel();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_9;
  }
  uint64_t v11 = sub_1000AFA94(&qword_10094C3D0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_9;
  }
  uint64_t v12 = sub_1000AFA94(&qword_100953B88);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_9;
  }
  unint64_t v15 = *(void *)(a1 + a3[12] + 16);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t sub_100299EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100299F10);
}

uint64_t sub_100299F10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for MetricDetailViewModel();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t v12 = type metadata accessor for MetricFormattingHelper();
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[7];
    }
    else
    {
      uint64_t v13 = sub_1000AFA94(&qword_10094C3D0);
      if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
      {
        uint64_t v9 = v13;
        uint64_t v10 = *(void *)(v13 - 8);
        uint64_t v11 = a4[8];
      }
      else
      {
        uint64_t result = sub_1000AFA94(&qword_100953B88);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[12] + 16) = (a2 - 1);
          return result;
        }
        uint64_t v9 = result;
        uint64_t v10 = *(void *)(result - 8);
        uint64_t v11 = a4[9];
      }
    }
  }
  unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v15(a1 + v11, a2, a2, v9);
}

void sub_10029A0C0()
{
  type metadata accessor for MetricDetailViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricFormattingHelper();
    if (v1 <= 0x3F)
    {
      sub_10029A274(319, (unint64_t *)&qword_100953BF8, &qword_10094C1E8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
      if (v2 <= 0x3F)
      {
        sub_10029A274(319, (unint64_t *)&unk_100953C00, (uint64_t *)&unk_10095B890, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10029A274(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_1000A1370(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10029A2D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029A2F0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.title(_:), v3);
  uint64_t v7 = enum case for Font.Design.rounded(_:);
  uint64_t v8 = type metadata accessor for Font.Design();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  static Font.Weight.semibold.getter();
  uint64_t v10 = static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v2, &qword_10094C448);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_100997A00 = v10;
  return result;
}

double sub_10029A4E0()
{
  double result = 4.0;
  xmmword_100997A10 = xmmword_100759E20;
  *(_OWORD *)&qword_100997A20 = xmmword_100759E20;
  return result;
}

uint64_t sub_10029A4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v60 - v8;
  uint64_t v67 = sub_1000AFA94(&qword_100953C60);
  __chkstk_darwin(v67);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100953C68);
  __chkstk_darwin(v12);
  uint64_t v66 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000AFA94(&qword_100953C70);
  uint64_t v14 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  int v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for MetricDetailChartView() + 24);
  if (*(unsigned char *)(v17 + *(int *)(type metadata accessor for MetricDetailViewModel() + 40)) == 1)
  {
    sub_10029AE38((uint64_t)v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v66, v16, v69);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = sub_1000A1370(&qword_100953C88);
    uint64_t v64 = sub_1000A1370(&qword_100953070);
    uint64_t v63 = sub_1000A1370(&qword_100953C90);
    uint64_t v62 = sub_1000A1370(&qword_100953C98);
    uint64_t v61 = sub_1000A1370(&qword_100953CA0);
    uint64_t v60 = sub_1000A1370(&qword_100953CA8);
    uint64_t v18 = sub_1000A1370(&qword_100953CB0);
    uint64_t v19 = sub_1000A1370(&qword_100951F78);
    uint64_t v20 = sub_1000A1370(&qword_100953CB8);
    uint64_t v21 = sub_1000A1370((uint64_t *)&unk_10095B890);
    uint64_t v22 = sub_1000A1370(&qword_100953CC0);
    uint64_t v23 = type metadata accessor for Date();
    uint64_t v24 = sub_1000A132C(&qword_100953CC8, &qword_100953CC0);
    uint64_t v70 = v22;
    uint64_t v71 = v23;
    uint64_t v72 = v24;
    uint64_t v73 = &protocol witness table for Date;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v26 = sub_1002A1B40();
    uint64_t v70 = v20;
    uint64_t v71 = v21;
    uint64_t v72 = OpaqueTypeConformance2;
    uint64_t v73 = (void *)v26;
    uint64_t v27 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = sub_1000C29A0((unint64_t *)&qword_100951F80, &qword_100951F78);
    uint64_t v70 = v18;
    uint64_t v71 = v19;
    uint64_t v72 = v27;
    uint64_t v73 = (void *)v28;
    uint64_t v29 = swift_getOpaqueTypeConformance2();
    uint64_t v30 = sub_1000A132C(&qword_100953CD8, &qword_100953CA8);
    uint64_t v70 = v61;
    uint64_t v71 = v60;
    uint64_t v72 = v29;
    uint64_t v73 = (void *)v30;
    uint64_t v31 = swift_getOpaqueTypeConformance2();
    unint64_t v32 = sub_1002A1BE4();
    uint64_t v70 = v63;
    uint64_t v71 = v62;
    uint64_t v72 = v31;
    uint64_t v73 = (void *)v32;
    uint64_t v33 = swift_getOpaqueTypeConformance2();
    uint64_t v34 = sub_1000C29A0(&qword_100953078, &qword_100953070);
    uint64_t v70 = v65;
    uint64_t v71 = v64;
    uint64_t v72 = v33;
    uint64_t v73 = (void *)v34;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100953CF8, &qword_100953C60);
    uint64_t v35 = v69;
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v35);
  }
  else
  {
    *(void *)uint64_t v11 = static VerticalAlignment.center.getter();
    *((void *)v11 + 1) = 0;
    v11[16] = 1;
    uint64_t v37 = &v11[*(int *)(sub_1000AFA94(&qword_100953C78) + 44)];
    ProgressView<>.init<>()();
    uint64_t v38 = (uint64_t)v11;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v39(v7, v9, v3);
    *(void *)uint64_t v37 = 0;
    v37[8] = 1;
    uint64_t v40 = sub_1000AFA94(&qword_100953C80);
    v39(&v37[*(int *)(v40 + 48)], v7, v3);
    uint64_t v41 = &v37[*(int *)(v40 + 64)];
    *(void *)uint64_t v41 = 0;
    v41[8] = 1;
    id v42 = *(void (**)(char *, uint64_t))(v4 + 8);
    v42(v9, v3);
    v42(v7, v3);
    sub_1000AEF2C(v38, v66, &qword_100953C60);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = sub_1000A1370(&qword_100953C88);
    uint64_t v64 = sub_1000A1370(&qword_100953070);
    uint64_t v63 = sub_1000A1370(&qword_100953C90);
    uint64_t v62 = sub_1000A1370(&qword_100953C98);
    uint64_t v61 = sub_1000A1370(&qword_100953CA0);
    uint64_t v60 = sub_1000A1370(&qword_100953CA8);
    uint64_t v43 = sub_1000A1370(&qword_100953CB0);
    uint64_t v44 = sub_1000A1370(&qword_100951F78);
    uint64_t v45 = sub_1000A1370(&qword_100953CB8);
    uint64_t v46 = sub_1000A1370((uint64_t *)&unk_10095B890);
    uint64_t v47 = sub_1000A1370(&qword_100953CC0);
    uint64_t v48 = type metadata accessor for Date();
    uint64_t v49 = sub_1000A132C(&qword_100953CC8, &qword_100953CC0);
    uint64_t v70 = v47;
    uint64_t v71 = v48;
    uint64_t v72 = v49;
    uint64_t v73 = &protocol witness table for Date;
    uint64_t v50 = swift_getOpaqueTypeConformance2();
    unint64_t v51 = sub_1002A1B40();
    uint64_t v70 = v45;
    uint64_t v71 = v46;
    uint64_t v72 = v50;
    uint64_t v73 = (void *)v51;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    uint64_t v53 = sub_1000C29A0((unint64_t *)&qword_100951F80, &qword_100951F78);
    uint64_t v70 = v43;
    uint64_t v71 = v44;
    uint64_t v72 = v52;
    uint64_t v73 = (void *)v53;
    uint64_t v54 = swift_getOpaqueTypeConformance2();
    uint64_t v55 = sub_1000A132C(&qword_100953CD8, &qword_100953CA8);
    uint64_t v70 = v61;
    uint64_t v71 = v60;
    uint64_t v72 = v54;
    uint64_t v73 = (void *)v55;
    uint64_t v56 = swift_getOpaqueTypeConformance2();
    unint64_t v57 = sub_1002A1BE4();
    uint64_t v70 = v63;
    uint64_t v71 = v62;
    uint64_t v72 = v56;
    uint64_t v73 = (void *)v57;
    uint64_t v58 = swift_getOpaqueTypeConformance2();
    uint64_t v59 = sub_1000C29A0(&qword_100953078, &qword_100953070);
    uint64_t v70 = v65;
    uint64_t v71 = v64;
    uint64_t v72 = v58;
    uint64_t v73 = (void *)v59;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100953CF8, &qword_100953C60);
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v38, &qword_100953C60);
  }
}

uint64_t sub_10029AE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v85 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100951EE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v106);
  uint64_t v98 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000AFA94(&qword_100953D00);
  __chkstk_darwin(v7 - 8);
  uint64_t v96 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000AFA94(&qword_100953CC0);
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000AFA94(&qword_100953CB8);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  CGRect v94 = (char *)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000AFA94(&qword_100953CB0);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v101 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_100953CA0);
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v103 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100953C90);
  uint64_t v109 = *(void *)(v14 - 8);
  uint64_t v110 = v14;
  __chkstk_darwin(v14);
  uint64_t v107 = (char *)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_100953C88);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v111 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MetricDetailChartView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Calendar.Component();
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v17;
  uint64_t v27 = v2 + *(int *)(v17 + 24);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 32);
  int v29 = *(unsigned __int8 *)(v27 + 40);
  unsigned __int8 v112 = v5;
  if (v29 == 1) {
    uint64_t v30 = (unsigned int *)*(&off_1008BEDD0 + (void)v28);
  }
  else {
    uint64_t v30 = (unsigned int *)&enum case for Calendar.Component.month(_:);
  }
  uint64_t v31 = *v30;
  unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 104);
  uint64_t v82 = v22;
  uint64_t v81 = v23;
  v32(v25, v31, v22);
  uint64_t v33 = sub_1000C2EAC(v28, v29);
  uint64_t v34 = _swiftEmptyArrayStorage;
  if (v33) {
    uint64_t v34 = (void *)v33;
  }
  unsigned __int8 v113 = v34;
  uint64_t v91 = type metadata accessor for MetricDetailChartView;
  sub_1002A2FEC(v2, (uint64_t)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  uint64_t v35 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v89 = ((v35 + 16) & ~v35) + v19;
  uint64_t v36 = (v35 + 16) & ~v35;
  uint64_t v90 = v36;
  uint64_t v88 = v35 | 7;
  uint64_t v37 = swift_allocObject();
  uint64_t v87 = type metadata accessor for MetricDetailChartView;
  uint64_t v38 = sub_1002A2A0C((uint64_t)v20, v37 + v36, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  v80[2] = v80;
  __chkstk_darwin(v38);
  v80[-4] = v2;
  v80[-3] = v25;
  v80[-2] = sub_1002A1CA8;
  v80[-1] = v37;
  v80[1] = v37;
  sub_1000AFA94(&qword_100953D08);
  sub_1002A1D24();
  uint64_t v39 = v10;
  Chart.init(content:)();
  uint64_t v93 = v26;
  sub_1000AFA94(&qword_100953B88);
  NSAttributedStringKey v86 = v20;
  uint64_t v92 = v2;
  uint64_t v40 = (uint64_t)v96;
  State.projectedValue.getter();
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v42 = sub_1000A132C(&qword_100953CC8, &qword_100953CC0);
  v80[0] = v25;
  uint64_t v43 = v42;
  uint64_t v44 = v94;
  uint64_t v45 = v97;
  View.chartXSelection<A>(value:)();
  sub_10008DB18(v40, &qword_100953D00);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v39, v45);
  uint64_t v46 = (uint64_t)v98;
  State.wrappedValue.getter();
  uint64_t v47 = (uint64_t)v86;
  sub_1002A2FEC(v2, (uint64_t)v86, (uint64_t (*)(void))v91);
  uint64_t v48 = swift_allocObject();
  sub_1002A2A0C(v47, v48 + v90, (uint64_t (*)(void))v87);
  uint64_t v117 = v45;
  uint64_t v118 = v41;
  uint64_t v119 = v43;
  long long v120 = &protocol witness table for Date;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v50 = sub_1002A1B40();
  uint64_t v52 = v100;
  unint64_t v51 = v101;
  uint64_t v53 = v106;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10008DB18(v46, (uint64_t *)&unk_10095B890);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v44, v52);
  uint64_t v116 = v113;
  uint64_t v54 = type metadata accessor for ScaleType();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v57 = (uint64_t)v112;
  uint64_t v99 = v54;
  uint64_t v98 = v56;
  uint64_t v97 = v55 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v56)(v112, 1, 1);
  uint64_t v58 = sub_1000AFA94(&qword_100951F78);
  uint64_t v117 = v52;
  uint64_t v118 = v53;
  uint64_t v119 = OpaqueTypeConformance2;
  long long v120 = (void *)v50;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = sub_1000C29A0((unint64_t *)&qword_100951F80, &qword_100951F78);
  uint64_t v62 = v103;
  uint64_t v61 = v104;
  View.chartXScale<A>(domain:type:)();
  sub_10008DB18(v57, &qword_100951EE0);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v51, v61);
  uint64_t v63 = swift_bridgeObjectRelease();
  __chkstk_darwin(v63);
  uint64_t v64 = v92;
  v80[-2] = v92;
  uint64_t v65 = sub_1000AFA94(&qword_100953CA8);
  uint64_t v117 = v61;
  uint64_t v118 = v58;
  uint64_t v119 = v59;
  long long v120 = (void *)v60;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = sub_1000A132C(&qword_100953CD8, &qword_100953CA8);
  uint64_t v69 = v107;
  uint64_t v68 = v108;
  View.chartXAxis<A>(content:)();
  uint64_t v70 = (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v62, v68);
  __chkstk_darwin(v70);
  v80[-2] = v64;
  uint64_t v71 = sub_1000AFA94(&qword_100953C98);
  uint64_t v117 = v68;
  uint64_t v118 = v65;
  uint64_t v119 = v66;
  long long v120 = (void *)v67;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  unint64_t v73 = sub_1002A1BE4();
  uint64_t v75 = v110;
  uint64_t v74 = v111;
  View.chartYAxis<A>(content:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v69, v75);
  double v77 = *(double *)(v64 + *(int *)(v93 + 44));
  if (v77 < 0.0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v114 = 0;
    double v115 = v77;
    uint64_t v78 = (uint64_t)v112;
    v98(v112, 1, 1, v99);
    sub_1000AFA94(&qword_100953070);
    uint64_t v117 = v75;
    uint64_t v118 = v71;
    uint64_t v119 = v72;
    long long v120 = (void *)v73;
    swift_getOpaqueTypeConformance2();
    sub_1000C29A0(&qword_100953078, &qword_100953070);
    uint64_t v79 = v84;
    View.chartYScale<A>(domain:type:)();
    swift_release();
    sub_10008DB18(v78, &qword_100951EE0);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v74, v79);
    return (*(uint64_t (**)(void, uint64_t))(v81 + 8))(v80[0], v82);
  }
  return result;
}

uint64_t sub_10029BB80(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = (char *)a1;
  unint64_t v32 = (char *)sub_1000AFA94(&qword_100953EB8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094C1E8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v33 = (uint64_t)&v31 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for MetricDetailChartView();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MetricChartData();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v31 - v20;
  int v22 = *(unsigned __int8 *)(a2 + 1);
  sub_1002A2FEC((uint64_t)v34, (uint64_t)&v31 - v20, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  sub_1002A2FEC(a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  if (v22 != 1)
  {
    sub_10006A3F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
    sub_10006A3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MetricChartData);
LABEL_9:
    char v27 = 0;
    return v27 & 1;
  }
  uint64_t v34 = v19;
  sub_1002A2FEC((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  uint64_t v23 = v31;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v12, 0, 1, v16);
  sub_1000AFA94(&qword_10094C3D0);
  uint64_t v24 = v33;
  Binding.wrappedValue.getter();
  uint64_t v25 = (uint64_t)&v4[*((int *)v32 + 12)];
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v4, &qword_10094C1E8);
  sub_1000AEF2C(v24, v25, &qword_10094C1E8);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v26((uint64_t)v4, 1, v16) == 1)
  {
    sub_10008DB18(v33, &qword_10094C1E8);
    sub_10008DB18((uint64_t)v12, &qword_10094C1E8);
    sub_10006A3F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
    sub_10006A3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    if (v26(v25, 1, v16) == 1)
    {
      sub_10008DB18((uint64_t)v4, &qword_10094C1E8);
      char v27 = 1;
      return v27 & 1;
    }
    goto LABEL_8;
  }
  unint64_t v32 = v15;
  uint64_t v28 = v33;
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v8, &qword_10094C1E8);
  if (v26(v25, 1, v16) == 1)
  {
    sub_10008DB18(v28, &qword_10094C1E8);
    sub_10008DB18((uint64_t)v12, &qword_10094C1E8);
    sub_10006A3F8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
    sub_10006A3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    sub_10006A3F8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricChartData);
LABEL_8:
    sub_10008DB18((uint64_t)v4, &qword_100953EB8);
    goto LABEL_9;
  }
  uint64_t v30 = (uint64_t)v34;
  sub_1002A2A0C(v25, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  sub_1000A88A4();
  if (static NSObject.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)()) {
    char v27 = static NSObject.== infix(_:_:)();
  }
  else {
    char v27 = 0;
  }
  sub_10006A3F8(v30, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  sub_10008DB18(v28, &qword_10094C1E8);
  sub_10008DB18((uint64_t)v12, &qword_10094C1E8);
  sub_10006A3F8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  sub_10006A3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  sub_10006A3F8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  sub_10008DB18((uint64_t)v4, &qword_10094C1E8);
  return v27 & 1;
}

uint64_t sub_10029C120@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v111 = a3;
  uint64_t v112 = a4;
  uint64_t v122 = a5;
  long long v123 = a2;
  uint64_t v121 = sub_1000AFA94(&qword_100953E88);
  __chkstk_darwin(v121);
  long long v120 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for AnnotationOverflowResolution.Boundary();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AnnotationOverflowResolution.Strategy();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v96 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v95 = (char *)&v81 - v11;
  uint64_t v105 = type metadata accessor for AnnotationOverflowResolution();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for AnnotationPosition();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v100 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for RuleMark();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_100953DA8);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v82 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000AFA94(&qword_100953DA0);
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  NSAttributedStringKey v86 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000AFA94(&qword_100953D90);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100953E90);
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18);
  uint64_t v91 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v20 - 8);
  uint64_t v108 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for MetricChartData();
  uint64_t v109 = *(void *)(v22 - 8);
  uint64_t v110 = v22;
  __chkstk_darwin(v22);
  uint64_t v89 = (uint64_t *)((char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = sub_1000AFA94(&qword_100953D88);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v119 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v116 = (char *)&v81 - v27;
  uint64_t v28 = type metadata accessor for Calendar.Component();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for MetricDetailChartView();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void *)(v33 + 64);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100953D20);
  uint64_t v114 = *(void *)(v36 - 8);
  uint64_t v115 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  unsigned __int8 v113 = (char *)&v81 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v124 = (char *)&v81 - v39;
  uint64_t v40 = *(int *)(v32 + 24);
  uint64_t v106 = (char *)a1;
  uint64_t v125 = *(void *)(a1 + v40 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1002A2FEC(a1, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  uint64_t v41 = v28;
  (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 16))(v31, v123, v28);
  unint64_t v42 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v43 = (v34 + *(unsigned __int8 *)(v29 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v44 = (v30 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  sub_1002A2A0C((uint64_t)v35, v45 + v42, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v45 + v43, v31, v41);
  uint64_t v46 = (void *)(v45 + v44);
  uint64_t v47 = v112;
  *uint64_t v46 = v111;
  v46[1] = v47;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000AFA94(&qword_100953120);
  sub_1000AFA94(&qword_100953D30);
  sub_1000A132C(&qword_100953128, &qword_100953120);
  sub_1002A2F9C((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1002A1DE0();
  uint64_t v48 = (uint64_t)v108;
  uint64_t v49 = v106;
  ForEach<>.init(_:id:content:)();
  sub_1000AFA94(&qword_10094C3D0);
  Binding.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v48, 1, v110) == 1)
  {
    sub_10008DB18(v48, &qword_10094C1E8);
    uint64_t v50 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v116, 1, 1, v118);
  }
  else
  {
    unint64_t v51 = v89;
    sub_1002A2A0C(v48, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    uint64_t v52 = v81;
    sub_10029E160(v51, v81, *(double *)&v49[*(int *)(v32 + 44)]);
    uint64_t v53 = v82;
    uint64_t v54 = v84;
    ChartContent.zIndex(_:)();
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v52, v54);
    uint64_t v125 = v54;
    uint64_t v126 = &protocol witness table for RuleMark;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v56 = v86;
    uint64_t v57 = v87;
    ChartContent.offset(x:yStart:yEnd:)();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v57);
    sub_1000A3E18(*v49);
    uint64_t v129 = Color.init(uiColor:)();
    uint64_t v125 = v57;
    uint64_t v126 = (void *)OpaqueTypeConformance2;
    uint64_t v58 = swift_getOpaqueTypeConformance2();
    uint64_t v59 = v92;
    uint64_t v60 = v90;
    ChartContent.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v56, v60);
    uint64_t v61 = v100;
    static AnnotationPosition.top.getter();
    uint64_t v62 = v97;
    static AnnotationOverflowResolution.Boundary.chart.getter();
    static AnnotationOverflowResolution.Strategy.fit(to:)();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v62, v99);
    static AnnotationOverflowResolution.Strategy.disabled.getter();
    uint64_t v63 = v102;
    uint64_t v64 = AnnotationOverflowResolution.init(x:y:)();
    long long v123 = &v81;
    __chkstk_darwin(v64);
    static Alignment.center.getter();
    sub_1000AFA94(&qword_100953D98);
    uint64_t v125 = v60;
    uint64_t v126 = &type metadata for Color;
    uint64_t v127 = v58;
    unint64_t v128 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    sub_1002A2220();
    uint64_t v65 = v94;
    uint64_t v66 = v91;
    ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v63, v105);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v103);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v59, v65);
    uint64_t v50 = (uint64_t)v116;
    uint64_t v67 = v117;
    uint64_t v68 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v66, v118);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v50, 0, 1, v68);
    sub_10006A3F8((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  }
  uint64_t v70 = v113;
  uint64_t v69 = v114;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  uint64_t v72 = v124;
  uint64_t v73 = v115;
  v71(v113, v124, v115);
  uint64_t v74 = v119;
  sub_1000AEF2C(v50, v119, &qword_100953D88);
  sub_1002A1E1C(&qword_100953D18, &qword_100953D20, (void (*)(void))sub_1002A1DE0);
  uint64_t v75 = v120;
  v71(v120, v70, v73);
  sub_1002A20A0();
  uint64_t v76 = v121;
  uint64_t v77 = (uint64_t)&v75[*(int *)(v121 + 48)];
  sub_1000AEF2C(v74, v77, &qword_100953D88);
  uint64_t v78 = v122;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v122, v75, v73);
  sub_1000AEEC8(v77, v78 + *(int *)(v76 + 48), &qword_100953D88);
  sub_10008DB18(v50, &qword_100953D88);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v69 + 8);
  v79(v72, v73);
  sub_10008DB18(v74, &qword_100953D88);
  return ((uint64_t (*)(char *, uint64_t))v79)(v70, v73);
}

uint64_t sub_10029D0DC@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v116 = a5;
  uint64_t v113 = a3;
  uint64_t v94 = type metadata accessor for BarMark();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000AFA94(&qword_100953E98);
  uint64_t v89 = *(void *)(v95 - 8);
  uint64_t v11 = __chkstk_darwin(v95);
  uint64_t v90 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v92 = (char *)&v87 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094C1E8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v88 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v112 = (char *)&v87 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_100953EA0);
  __chkstk_darwin(v18 - 8);
  uint64_t v103 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100952050);
  __chkstk_darwin(v20 - 8);
  uint64_t v115 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v25 - 8);
  uint64_t v114 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for LineMark();
  uint64_t v102 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v101 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_100953D48);
  uint64_t v108 = *(void *)(v28 - 8);
  uint64_t v109 = v28;
  __chkstk_darwin(v28);
  uint64_t v106 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_100953EA8);
  uint64_t v110 = *(void *)(v30 - 8);
  uint64_t v111 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v104 = (char *)&v87 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v107 = (char *)&v87 - v33;
  uint64_t v34 = sub_1000AFA94(&qword_100953D40);
  uint64_t v117 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v87 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for MetricChartData();
  uint64_t v38 = *(int *)(v37 + 24);
  [*(id *)((char *)a1 + v38) doubleValueForUnit:*a1];
  if ((v39 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    uint64_t v97 = a4;
    uint64_t v98 = v36;
    uint64_t v99 = v34;
    uint64_t v100 = a6;
    unsigned int v40 = *a2;
    uint64_t v96 = v37;
    if (v40 <= 0x11 && ((1 << v40) & 0x21D00) != 0)
    {
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v41 = type metadata accessor for Calendar();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v24, 1, 1, v41);
      static PlottableValue.value<>(_:_:unit:calendar:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10008DB18((uint64_t)v24, (uint64_t *)&unk_1009546C0);
      char v42 = *a2;
      uint64_t v118 = sub_10007DA24(*a2);
      uint64_t v119 = v43;
      [*(id *)((char *)a1 + v38) doubleValueForUnit:*a1];
      double v45 = v44;
      uint64_t v113 = type metadata accessor for MetricDetailChartView();
      sub_100534258(v42, v45);
      uint64_t v122 = v46;
      sub_1000A06D0();
      static PlottableValue.value<A>(_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v118 = sub_10007DA24(v42);
      uint64_t v119 = v47;
      uint64_t v122 = 0x65756C6176;
      unint64_t v123 = 0xE500000000000000;
      static PlottableValue.value<A>(_:_:)();
      swift_bridgeObjectRelease();
      type metadata accessor for Date();
      uint64_t v48 = v101;
      uint64_t v49 = LineMark.init<A, B, C>(x:y:series:)();
      __chkstk_darwin(v49);
      uint64_t v50 = v97;
      NSAttributedStringKey v86 = a1;
      uint64_t v51 = sub_1000AFA94(&qword_100953D58);
      uint64_t v115 = (char *)sub_1002A2000();
      uint64_t v53 = v105;
      uint64_t v52 = v106;
      ChartContent.symbol<A>(symbol:)();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v53);
      unsigned __int8 v54 = v50(v86);
      sub_1000A3E18(*a2);
      Color.init(uiColor:)();
      uint64_t v55 = Color.gradient.getter();
      swift_release();
      sub_1000AFA94(&qword_10094C3D0);
      uint64_t v56 = (uint64_t)v112;
      Binding.wrappedValue.getter();
      BOOL v57 = (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v56, 1) == 1;
      sub_10008DB18(v56, &qword_10094C1E8);
      float v58 = 0.4;
      if ((v57 | v54)) {
        float v58 = 1.0;
      }
      uint64_t v122 = v55;
      *(float *)&unint64_t v123 = v58;
      sub_1000AFA94(&qword_100953D50);
      uint64_t v118 = v53;
      uint64_t v119 = v51;
      long long v120 = &protocol witness table for LineMark;
      uint64_t v121 = v115;
      swift_getOpaqueTypeConformance2();
      sub_1000A132C(&qword_100953D78, &qword_100953D50);
      uint64_t v59 = v104;
      uint64_t v60 = v109;
      ChartContent.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v52, v60);
      uint64_t v62 = v110;
      uint64_t v61 = v111;
      uint64_t v63 = v107;
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v107, v59, v111);
      uint64_t v64 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v98, v63, v61);
      sub_1000AFA94(&qword_100953EB0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
    }
    else
    {
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v69 = type metadata accessor for Calendar();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v24, 1, 1, v69);
      static PlottableValue.value<>(_:_:unit:calendar:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10008DB18((uint64_t)v24, (uint64_t *)&unk_1009546C0);
      char v70 = *a2;
      uint64_t v118 = sub_10007DA24(*a2);
      uint64_t v119 = v71;
      [*(id *)((char *)a1 + v38) doubleValueForUnit:*a1];
      double v73 = v72;
      type metadata accessor for MetricDetailChartView();
      sub_100534258(v70, v73);
      uint64_t v122 = v74;
      sub_1000A06D0();
      static PlottableValue.value<A>(_:_:)();
      swift_bridgeObjectRelease();
      type metadata accessor for Date();
      uint64_t v75 = v91;
      BarMark.init<A, B>(x:y:width:height:stacking:)();
      unsigned __int8 v76 = v97(a1);
      sub_1000A3E18(v70);
      Color.init(uiColor:)();
      uint64_t v77 = Color.gradient.getter();
      swift_release();
      sub_1000AFA94(&qword_10094C3D0);
      uint64_t v78 = (uint64_t)v88;
      Binding.wrappedValue.getter();
      BOOL v79 = (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v78, 1) == 1;
      sub_10008DB18(v78, &qword_10094C1E8);
      float v80 = 0.4;
      if ((v79 | v76)) {
        float v80 = 1.0;
      }
      uint64_t v118 = v77;
      *(float *)&uint64_t v119 = v80;
      sub_1000AFA94(&qword_100953D50);
      sub_1000A132C(&qword_100953D78, &qword_100953D50);
      uint64_t v81 = v90;
      uint64_t v82 = v94;
      ChartContent.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v75, v82);
      uint64_t v83 = v89;
      uint64_t v84 = v92;
      uint64_t v85 = v95;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v92, v81, v95);
      uint64_t v64 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v98, v84, v85);
      sub_1000AFA94(&qword_100953EB0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
    }
    uint64_t v65 = v64;
    uint64_t v66 = v100;
    sub_1000AEEC8(v65, v100, &qword_100953D40);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v117 + 56))(v66, 0, 1, v99);
  }
  else
  {
    uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
    return v68(a6, 1, 1, v34);
  }
}

double sub_10029DF9C@<D0>(char *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = a2(a3);
  sub_1000A3E18(*a1);
  Color.init(uiColor:)();
  uint64_t v11 = Color.gradient.getter();
  swift_release();
  type metadata accessor for MetricDetailChartView();
  sub_1000AFA94(&qword_10094C3D0);
  Binding.wrappedValue.getter();
  uint64_t v12 = type metadata accessor for MetricChartData();
  LOBYTE(a3) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) == 1;
  sub_10008DB18((uint64_t)v10, &qword_10094C1E8);
  if ((a3 | a2)) {
    float v13 = 1.0;
  }
  else {
    float v13 = 0.4;
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v14 = v19;
  char v15 = v20;
  uint64_t v16 = v21;
  char v17 = v22;
  *(void *)a4 = v11;
  *(float *)(a4 + 8) = v13;
  *(_WORD *)(a4 + 12) = 256;
  *(void *)(a4 + 16) = v14;
  *(unsigned char *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = v16;
  *(unsigned char *)(a4 + 40) = v17;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 48) = v23;
  return result;
}

uint64_t sub_10029E160@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v7 = sub_1000AFA94(&qword_100952050);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v12 - 8);
  unsigned int v13 = *v3;
  if (v13 <= 0x11 && ((1 << v13) & 0x21D00) != 0)
  {
    LocalizedStringKey.init(stringLiteral:)();
    type metadata accessor for MetricChartData();
    uint64_t v14 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    static PlottableValue.value<>(_:_:unit:calendar:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_1009546C0);
    type metadata accessor for Date();
    return RuleMark.init<A>(x:yStart:yEnd:)();
  }
  else
  {
    uint64_t v18 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v19 = type metadata accessor for MetricChartData();
    uint64_t v20 = a2;
    uint64_t v16 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
    static PlottableValue.value<>(_:_:unit:calendar:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_1009546C0);
    LocalizedStringKey.init(stringLiteral:)();
    [*(id *)((char *)a1 + *(int *)(v19 + 24)) doubleValueForUnit:*a1];
    double v21 = v17;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    double v21 = a3;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Date();
    return RuleMark.init<A, B>(x:yStart:yEnd:)();
  }
}

uint64_t sub_10029E574@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v59 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_1009531D8);
  __chkstk_darwin(v61);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for MetricDetailHeaderView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_10094C3E8);
  __chkstk_darwin(v57);
  uint64_t v60 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000AFA94(&qword_100953DC0);
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v14 = (unsigned __int8 *)&a1[*(int *)(type metadata accessor for MetricDetailChartView() + 24)];
  sub_10029EB34();
  uint64_t v63 = a1;
  uint64_t v15 = type metadata accessor for MetricChartData();
  uint64_t v16 = *(void **)(a2 + *(int *)(v15 + 24));
  if (qword_10094A7F0 != -1) {
    swift_once();
  }
  sub_1000A18EC(v16, v13, qword_100997A00, 0, 0, 0, 0, (uint64_t)&v10[v8[7]]);
  uint64_t v17 = *((void *)v14 + 4);
  char v18 = v14[40];
  uint64_t v19 = sub_10050E3B4(a2 + *(int *)(v15 + 20), v17, v18);
  uint64_t v21 = v20;
  *(void *)&long long v67 = v17;
  BYTE8(v67) = v18;
  static Binding.constant(_:)();
  long long v56 = v69;
  uint64_t v22 = v70;
  char v23 = v71;
  uint64_t v66 = 0;
  static Binding.constant(_:)();
  long long v55 = v67;
  uint64_t v24 = v68;
  uint64_t v25 = &v10[v8[11]];
  uint64_t v26 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *uint64_t v10 = v13;
  *(void *)&v10[v8[6]] = 0x3FE0000000000000;
  uint64_t v27 = (uint64_t *)&v10[v8[8]];
  *uint64_t v27 = v19;
  v27[1] = v21;
  uint64_t v28 = &v10[v8[9]];
  *(_OWORD *)uint64_t v28 = v56;
  *((void *)v28 + 2) = v22;
  v28[24] = v23;
  uint64_t v29 = &v10[v8[10]];
  *(_OWORD *)uint64_t v29 = v55;
  *((void *)v29 + 2) = v24;
  if (qword_10094A7F8 != -1) {
    swift_once();
  }
  long long v56 = xmmword_100997A10;
  uint64_t v30 = qword_100997A20;
  uint64_t v31 = unk_100997A28;
  char v32 = static Edge.Set.all.getter();
  uint64_t v33 = v60;
  sub_1002A2FEC((uint64_t)v10, v60, (uint64_t (*)(void))type metadata accessor for MetricDetailHeaderView);
  uint64_t v34 = v33 + *(int *)(v57 + 36);
  *(unsigned char *)uint64_t v34 = v32;
  *(_OWORD *)(v34 + 8) = v56;
  *(void *)(v34 + 24) = v30;
  *(void *)(v34 + 32) = v31;
  *(unsigned char *)(v34 + 40) = 0;
  sub_10006A3F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricDetailHeaderView);
  uint64_t v35 = v64;
  uint64_t v36 = &v64[*(int *)(v59 + 20)];
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v35 = _Q0;
  sub_1000A3E18(*v63);
  uint64_t v44 = Color.init(uiColor:)();
  sub_1002A2FEC((uint64_t)v35, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v45 = v61;
  *(void *)&v7[*(int *)(v61 + 52)] = v44;
  *(_WORD *)&v7[*(int *)(v45 + 56)] = 256;
  sub_10006A3F8((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v46 = static Alignment.center.getter();
  uint64_t v48 = v47;
  uint64_t v49 = (uint64_t)v62;
  uint64_t v50 = (uint64_t)&v62[*(int *)(v58 + 36)];
  sub_1000AEF2C((uint64_t)v7, v50, &qword_1009531D8);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(sub_1000AFA94(&qword_100953DE0) + 36));
  uint64_t *v51 = v46;
  v51[1] = v48;
  sub_1000AEF2C(v33, v49, &qword_10094C3E8);
  sub_10008DB18((uint64_t)v7, &qword_1009531D8);
  sub_10008DB18(v33, &qword_10094C3E8);
  uint64_t v52 = static Color.black.getter();
  uint64_t v53 = v65;
  sub_1000AEF2C(v49, v65, &qword_100953DC0);
  *(void *)(v53 + *(int *)(sub_1000AFA94(&qword_100953D98) + 36)) = v52;
  return sub_10008DB18(v49, &qword_100953DC0);
}

uint64_t sub_10029EB34()
{
  uint64_t v14 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v8 - 8);
  type metadata accessor for MetricDetailChartView();
  uint64_t v16 = sub_10053466C(*v0);
  uint64_t v17 = v9;
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.caption2(_:), v4);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = v14;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v14);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v10);
  uint64_t v16 = v11;
  sub_1000AA6A0();
  return AttributedString.subscript.setter();
}

uint64_t sub_10029EE10()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetricDetailChartView();
  sub_1000AFA94(&qword_100953B88);
  State.wrappedValue.getter();
  sub_10029EEC4((uint64_t)v2);
  return sub_10008DB18((uint64_t)v2, (uint64_t *)&unk_10095B890);
}

uint64_t sub_10029EEC4(uint64_t a1)
{
  uint64_t v63 = (char *)a1;
  uint64_t v64 = type metadata accessor for DateComponents();
  uint64_t v62 = *(void *)(v64 - 8);
  uint64_t v1 = __chkstk_darwin(v64);
  uint64_t v3 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)v53 - v4;
  uint64_t v65 = type metadata accessor for MetricChartData();
  uint64_t v60 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094C1E8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v59 = (uint64_t)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v53 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v53 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)v53 - v17;
  uint64_t v19 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v26;
  sub_1000AEF2C((uint64_t)v63, (uint64_t)v21, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v27) == 1)
  {
    sub_10008DB18((uint64_t)v21, (uint64_t *)&unk_10095B890);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v13, 1, 1, v65);
    type metadata accessor for MetricDetailChartView();
    sub_1000AEF2C((uint64_t)v13, v59, &qword_10094C1E8);
    sub_1000AFA94(&qword_10094C3D0);
    Binding.wrappedValue.setter();
    return sub_10008DB18((uint64_t)v13, &qword_10094C1E8);
  }
  unsigned __int8 v54 = v16;
  uint64_t v55 = v23;
  uint64_t v57 = v18;
  uint64_t v58 = v13;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v63 = v25;
  uint64_t v56 = v27;
  v29(v25, v21, v27);
  v53[0] = type metadata accessor for MetricDetailChartView();
  uint64_t v30 = v61 + *(int *)(v53[0] + 24);
  uint64_t v31 = *(void *)(v30 + 16);
  uint64_t v32 = *(void *)(v31 + 16);
  v53[1] = v31;
  if (v32)
  {
    uint64_t v33 = v31 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    uint64_t v34 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v62 = *(void *)(v60 + 72);
    swift_bridgeObjectRetain();
    uint64_t v35 = v64;
    while (1)
    {
      sub_1002A2FEC(v33, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      uint64_t v36 = *(void *)(v30 + 32);
      char v37 = *(unsigned char *)(v30 + 40);
      sub_1000C64AC((uint64_t)v63, v36, v37, (uint64_t)v5);
      sub_1000C64AC((uint64_t)&v7[*(int *)(v65 + 20)], v36, v37, (uint64_t)v3);
      LOBYTE(v36) = static DateComponents.== infix(_:_:)();
      uint64_t v38 = *v34;
      (*v34)(v3, v35);
      v38(v5, v35);
      if (v36) {
        break;
      }
      sub_10006A3F8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      v33 += v62;
      if (!--v32) {
        goto LABEL_9;
      }
    }
    uint64_t v41 = (uint64_t)v57;
    sub_1002A2A0C((uint64_t)v7, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    uint64_t v39 = v60;
    unsigned int v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    uint64_t v42 = v41;
    uint64_t v43 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v39 = v60;
    unsigned int v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    uint64_t v41 = (uint64_t)v57;
    uint64_t v42 = (uint64_t)v57;
    uint64_t v43 = 1;
  }
  uint64_t v44 = v65;
  v40(v42, v43, 1, v65);
  swift_bridgeObjectRelease();
  uint64_t v45 = v54;
  sub_1000AEF2C(v41, (uint64_t)v54, &qword_10094C1E8);
  int v46 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48))(v45, 1, v44);
  uint64_t v47 = (uint64_t)v58;
  uint64_t v48 = v59;
  uint64_t v49 = v55;
  uint64_t v50 = (uint64_t)v63;
  if (v46 == 1)
  {
    sub_10008DB18((uint64_t)v45, &qword_10094C1E8);
LABEL_15:
    v40(v47, 1, 1, v44);
    goto LABEL_16;
  }
  [*(id *)((char *)v45 + *(int *)(v44 + 24)) doubleValueForUnit:*v45];
  uint64_t v52 = v51;
  sub_10006A3F8((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  if ((v52 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    goto LABEL_15;
  }
  sub_1000AEF2C(v41, v47, &qword_10094C1E8);
LABEL_16:
  sub_1000AEF2C(v47, v48, &qword_10094C1E8);
  sub_1000AFA94(&qword_10094C3D0);
  Binding.wrappedValue.setter();
  sub_10008DB18(v47, &qword_10094C1E8);
  sub_10008DB18(v41, &qword_10094C1E8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v50, v56);
}

uint64_t sub_10029F57C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MetricDetailChartView();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  uint64_t v8 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v8 - 8);
  sub_1000A4D98(*(void *)(a1 + *(int *)(v5 + 32) + 32), *(unsigned char *)(a1 + *(int *)(v5 + 32) + 40));
  sub_1002A2FEC(a1, (uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1002A2A0C((uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_100953E18);
  sub_1002A25F4();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_10029F7D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _OWORD v48[2] = a1;
  uint64_t v58 = a2;
  uint64_t v2 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v2 - 8);
  uint64_t v52 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for AxisTick();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v55 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)v48 - v6;
  uint64_t v54 = type metadata accessor for AxisGridLine();
  uint64_t v50 = *(void *)(v54 - 8);
  uint64_t v7 = __chkstk_darwin(v54);
  uint64_t v51 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v48 - v9;
  uint64_t v11 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100953E30);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v48 - v24;
  AxisValue.as<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
    uint64_t v26 = sub_1000AFA94(&qword_100953E40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  else
  {
    uint64_t v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v48[1] = v48;
    __chkstk_darwin(v27);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v46 = sub_1000AFA94(&qword_100953E48);
    unint64_t v47 = sub_1002A2728();
    uint64_t v44 = sub_1002A271C;
    uint64_t v45 = &v42;
    char v43 = 1;
    uint64_t v42 = 0;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    uint64_t v28 = sub_1000AFA94(&qword_100953E40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 0, 1, v28);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v69 = v60;
  long long v70 = v61;
  uint64_t v71 = v62;
  uint64_t v29 = v10;
  uint64_t v49 = v10;
  AxisGridLine.init(centered:stroke:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v66 = v63;
  long long v67 = v64;
  uint64_t v68 = v65;
  static AxisTick.Length.automatic.getter();
  uint64_t v30 = v53;
  AxisTick.init(centered:length:stroke:)();
  uint64_t v31 = (uint64_t)v25;
  uint64_t v32 = (uint64_t)v23;
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v23, &qword_100953E30);
  v59[0] = (uint64_t)v23;
  uint64_t v33 = v50;
  uint64_t v34 = (uint64_t)v51;
  uint64_t v35 = v54;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v51, v29, v54);
  v59[1] = v34;
  uint64_t v36 = v56;
  uint64_t v37 = (uint64_t)v55;
  uint64_t v38 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v30, v57);
  v59[2] = v37;
  sub_1006CD944(v59, v58);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
  v39(v30, v38);
  unsigned int v40 = *(void (**)(char *, uint64_t))(v33 + 8);
  v40(v49, v35);
  sub_10008DB18(v31, &qword_100953E30);
  v39((char *)v37, v38);
  v40((char *)v34, v35);
  return sub_10008DB18(v32, &qword_100953E30);
}

__n128 sub_10029FF6C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v5 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Calendar();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = a1 + *(int *)(type metadata accessor for MetricDetailChartView() + 24);
  if (*(unsigned char *)(v14 + 40) != 1)
  {
    if (qword_10094A800 != -1) {
      swift_once();
    }
    id v20 = (id)qword_100953B78;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v22 = [v20 stringFromDate:isa];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)&long long v64 = v23;
    *((void *)&v64 + 1) = v25;
    sub_1000A06D0();
    uint64_t v26 = Text.init<A>(_:)();
    uint64_t v16 = v26;
    uint64_t v17 = v27;
    *(void *)&long long v60 = v26;
    *((void *)&v60 + 1) = v27;
    char v18 = v28 & 1;
    v61.n128_u64[0] = v28 & 1;
    v61.n128_u64[1] = v29;
    LOBYTE(v62) = 0;
    goto LABEL_14;
  }
  uint64_t v15 = *(void *)(v14 + 32);
  if (v15)
  {
    if (v15 == 1)
    {
      sub_1002A0710(a2, (uint64_t *)&v64);
      uint64_t v17 = *((void *)&v64 + 1);
      uint64_t v16 = v64;
      char v18 = v65.n128_u8[0];
      long long v60 = v64;
      v61.n128_u64[0] = v65.n128_u8[0];
      v61.n128_u64[1] = v65.n128_u64[1];
      __int16 v62 = 0;
      sub_1000A1750(v64, *((uint64_t *)&v64 + 1), v65.n128_i8[0]);
      swift_bridgeObjectRetain();
      sub_1000AFA94(&qword_100953E80);
      sub_1002A2850(&qword_100953E78, &qword_100953E80);
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v66)) {
        __int16 v19 = 256;
      }
      else {
        __int16 v19 = 0;
      }
      long long v60 = v64;
      __n128 v61 = v65;
      __int16 v62 = v19 | v66;
      char v63 = 1;
      goto LABEL_15;
    }
    static Calendar.current.getter();
    (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, enum case for Calendar.Component.day(_:), v6);
    uint64_t v30 = Calendar.component(_:from:)();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v31);
    *(void *)&long long v64 = v30;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v26 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v16 = v26;
    uint64_t v17 = v27;
    *(void *)&long long v60 = v26;
    *((void *)&v60 + 1) = v27;
    char v18 = v33 & 1;
    v61.n128_u64[0] = v33 & 1;
    v61.n128_u64[1] = v34;
    LOBYTE(v62) = 1;
LABEL_14:
    sub_1000A1750(v26, v27, v18);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v60 = v64;
    __n128 v61 = v65;
    __int16 v62 = v66;
    char v63 = 0;
LABEL_15:
    sub_1000AFA94(&qword_100953E60);
    sub_1000AFA94(&qword_100953E70);
    sub_1002A2850((unint64_t *)&qword_100953E58, &qword_100953E60);
    sub_1002A27BC();
    _ConditionalContent<>.init(storage:)();
    sub_1000A06C0(v16, v17, v18);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (AxisValue.index.getter() == 4)
  {
    LOBYTE(v62) = 0;
    long long v60 = 0u;
    __n128 v61 = 0u;
  }
  else
  {
    if (qword_10094A808 != -1) {
      swift_once();
    }
    id v39 = (id)qword_100953B80;
    Class v40 = Date._bridgeToObjectiveC()().super.isa;
    id v41 = [v39 stringFromDate:v40];

    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    *(void *)&long long v64 = v42;
    *((void *)&v64 + 1) = v44;
    sub_1000A06D0();
    *(void *)&long long v60 = Text.init<A>(_:)();
    *((void *)&v60 + 1) = v46;
    v61.n128_u64[0] = v45 & 1;
    v61.n128_u64[1] = v47;
    LOBYTE(v62) = 1;
  }
  _ConditionalContent<>.init(storage:)();
  uint64_t v48 = *((void *)&v64 + 1);
  unint64_t v57 = v65.n128_u64[0];
  uint64_t v58 = v64;
  long long v60 = v64;
  __n128 v61 = v65;
  LOBYTE(v62) = v66;
  HIBYTE(v62) = 1;
  uint64_t v56 = v65.n128_i64[1];
  int v55 = v66;
  sub_1002A28BC(v64, *((uint64_t *)&v64 + 1), v65.n128_i8[0], v65.n128_i64[1], v66);
  sub_1000AFA94(&qword_100953E80);
  sub_1002A2850(&qword_100953E78, &qword_100953E80);
  _ConditionalContent<>.init(storage:)();
  long long v49 = v64;
  __n128 v50 = v65;
  char v51 = HIBYTE(v66);
  char v52 = v66;
  if (HIBYTE(v66)) {
    __int16 v53 = 256;
  }
  else {
    __int16 v53 = 0;
  }
  long long v60 = v64;
  __n128 v61 = v65;
  __int16 v62 = v53 | v66;
  char v63 = 1;
  sub_1002A2900(v64, *((uint64_t *)&v64 + 1), v65.n128_i8[0], v65.n128_i64[1], v66, SHIBYTE(v66));
  sub_1000AFA94(&qword_100953E60);
  sub_1000AFA94(&qword_100953E70);
  sub_1002A2850((unint64_t *)&qword_100953E58, &qword_100953E60);
  sub_1002A27BC();
  _ConditionalContent<>.init(storage:)();
  sub_1002A2964(v58, v48, v57, v56, v55);
  sub_1002A29A8(v49, *((uint64_t *)&v49 + 1), v50.n128_i8[0], v50.n128_i64[1], v52, v51);
LABEL_16:
  __n128 result = v65;
  unsigned __int16 v36 = v66;
  unsigned __int8 v37 = v67;
  uint64_t v38 = v59;
  *uint64_t v59 = (__n128)v64;
  v38[1] = result;
  v38[2].n128_u16[0] = v36;
  v38[2].n128_u8[2] = v37;
  return result;
}

uint64_t sub_1002A0710@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v2 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  unint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for TimeZone();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for Calendar();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000AFA94(&qword_100952F40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100952F48);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date.FormatStyle();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  char v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v33 - v19;
  uint64_t v21 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
  uint64_t v22 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  uint64_t v23 = v34;
  static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
  Date.FormatStyle.weekday(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  sub_1002A2F9C(&qword_100953118, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v18, v14);
  uint64_t v39 = v41;
  uint64_t v40 = v42;
  sub_1000A06D0();
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v27 = v26;
  LOBYTE(v18) = v28;
  uint64_t v30 = v29;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v20, v14);
  Swift::String v32 = v38;
  *uint64_t v38 = v25;
  v32[1] = v27;
  *((unsigned char *)v32 + 16) = v18 & 1;
  v32[3] = v30;
  return result;
}

uint64_t sub_1002A0BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for MetricDetailChartView();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v23 + 64);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_1000AFA94(&qword_100953CF0);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v24 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AFA94(&qword_1009530A8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(void *)(a1 + *(int *)(v3 + 40)) & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    sub_1000AFA94(&qword_10094E7C8);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100752410;
    *(void *)(v14 + 32) = 0;
    double v15 = *(double *)(a1 + *(int *)(v3 + 44));
    *(double *)(v14 + 40) = v15 * 0.5;
    *(double *)(v14 + 48) = v15;
    sub_1002A2FEC(a1, (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
    unint64_t v16 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v17 = swift_allocObject();
    sub_1002A2A0C((uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    sub_1000AFA94(&qword_100953DE8);
    sub_1002A1E1C(&qword_100953DF0, &qword_100953DE8, (void (*)(void))sub_1002A249C);
    char v18 = v24;
    AxisMarks.init<A>(preset:position:values:content:)();
    uint64_t v20 = v25;
    uint64_t v19 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v27, v18, v26);
    sub_1000AFA94(&qword_100953E08);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  }
  else
  {
    static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)();
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    type metadata accessor for AxisGridLine();
    AxisMarks.init(preset:position:values:content:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v27, v13, v10);
    sub_1000AFA94(&qword_100953E08);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1002A10B8()
{
  return AxisGridLine.init(centered:stroke:)();
}

uint64_t sub_1002A10EC@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v43 = sub_1000AFA94(&qword_100953E10);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100953DE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for AxisGridLine();
  uint64_t v6 = *(void *)(v41 - 8);
  uint64_t v7 = __chkstk_darwin(v41);
  char v45 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000AFA94(&qword_100951FB8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  AxisValue.as<A>(_:)();
  if (BYTE8(v47))
  {
    uint64_t v20 = sub_1000AFA94(&qword_100953E00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v46, 1, 1, v20);
  }
  else
  {
    double v22 = *(double *)&v47;
    type metadata accessor for MetricDetailChartView();
    *(void *)&long long v47 = sub_100534974(*a1, v22);
    *((void *)&v47 + 1) = v23;
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    sub_1000A06D0();
    uint64_t v24 = v19;
    uint64_t v40 = v19;
    AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v49 = 0;
    uint64_t v38 = v10;
    AxisGridLine.init(centered:stroke:)();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v26 = v17;
    uint64_t v39 = v17;
    v25(v17, v24, v13);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v28 = v41;
    v27(v45, v10, v41);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    uint64_t v29 = v42;
    v25(v42, v26, v13);
    uint64_t v30 = v43;
    Swift::String v31 = &v29[*(int *)(v43 + 48)];
    Swift::String v32 = v45;
    v27(v31, v45, v28);
    uint64_t v33 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v44, v29, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v33 + *(int *)(v30 + 48), v31, v28);
    unint64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34(v38, v28);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35(v40, v13);
    v34(v32, v28);
    v35(v39, v13);
    uint64_t v36 = sub_1000AFA94(&qword_100953E00);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v33, 0, 1, v36);
    return sub_1000AEEC8(v33, v46, &qword_100953DE8);
  }
}

void sub_1002A1688()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setDateFormat:v1];

  qword_100953B78 = (uint64_t)v0;
}

id sub_1002A16F8()
{
  id result = sub_1002A1718();
  qword_100953B80 = (uint64_t)result;
  return result;
}

id sub_1002A1718()
{
  uint64_t v0 = type metadata accessor for Locale.Language();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100952F38);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.current.getter();
  Locale.language.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Locale.Language.languageCode.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v12 = type metadata accessor for Locale.LanguageCode();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_10008DB18((uint64_t)v10, &qword_100952F38);
  }
  else
  {
    uint64_t v14 = Locale.LanguageCode.identifier.getter();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    uint64_t v21 = v14;
    uint64_t v22 = v16;
    uint64_t v19 = 26746;
    unint64_t v20 = 0xE200000000000000;
    sub_1000A06D0();
    if (StringProtocol.contains<A>(_:)())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = v14;
      uint64_t v22 = v16;
      uint64_t v19 = 24938;
      unint64_t v20 = 0xE200000000000000;
      StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
    }
  }
  NSString v17 = String._bridgeToObjectiveC()();
  [v11 setLocalizedDateFormatFromTemplate:v17];

  return v11;
}

uint64_t sub_1002A1A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100953C50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10029A4F8(v1, (uint64_t)v5);
  Hasher.init(_seed:)();
  sub_1000A8040((uint64_t)v12);
  Hasher._finalize()();
  uint64_t v6 = Int.entityIdentifierString.getter();
  uint64_t v8 = v7;
  sub_1000AEF2C((uint64_t)v5, a1, &qword_100953C50);
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(sub_1000AFA94(&qword_100953C58) + 52));
  *uint64_t v9 = v6;
  v9[1] = v8;
  return sub_10008DB18((uint64_t)v5, &qword_100953C50);
}

unint64_t sub_1002A1B40()
{
  unint64_t result = qword_100953CD0;
  if (!qword_100953CD0)
  {
    sub_1000A1370((uint64_t *)&unk_10095B890);
    sub_1002A2F9C((unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953CD0);
  }
  return result;
}

unint64_t sub_1002A1BE4()
{
  unint64_t result = qword_100953CE0;
  if (!qword_100953CE0)
  {
    sub_1000A1370(&qword_100953C98);
    sub_1000A132C(&qword_1009530A0, &qword_1009530A8);
    sub_1000A132C(&qword_100953CE8, &qword_100953CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953CE0);
  }
  return result;
}

uint64_t sub_1002A1CA8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MetricDetailChartView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10029BB80(a1, v4);
}

uint64_t sub_1002A1D18@<X0>(uint64_t a1@<X8>)
{
  return sub_10029C120(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_1002A1D24()
{
  unint64_t result = qword_100953D10;
  if (!qword_100953D10)
  {
    sub_1000A1370(&qword_100953D08);
    sub_1002A1E1C(&qword_100953D18, &qword_100953D20, (void (*)(void))sub_1002A1DE0);
    sub_1002A20A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953D10);
  }
  return result;
}

uint64_t sub_1002A1DE0()
{
  return sub_1002A1E1C(&qword_100953D28, &qword_100953D30, (void (*)(void))sub_1002A1E88);
}

uint64_t sub_1002A1E1C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002A1E88()
{
  unint64_t result = qword_100953D38;
  if (!qword_100953D38)
  {
    sub_1000A1370(&qword_100953D40);
    sub_1000A1370(&qword_100953D48);
    sub_1000A1370(&qword_100953D50);
    type metadata accessor for LineMark();
    sub_1000A1370(&qword_100953D58);
    sub_1002A2000();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100953D78, &qword_100953D50);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for BarMark();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953D38);
  }
  return result;
}

unint64_t sub_1002A2000()
{
  unint64_t result = qword_100953D60;
  if (!qword_100953D60)
  {
    sub_1000A1370(&qword_100953D58);
    sub_1000A132C(&qword_100953D68, &qword_100953D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953D60);
  }
  return result;
}

unint64_t sub_1002A20A0()
{
  unint64_t result = qword_100953D80;
  if (!qword_100953D80)
  {
    sub_1000A1370(&qword_100953D88);
    sub_1000A1370(&qword_100953D90);
    sub_1000A1370(&qword_100953D98);
    sub_1000A1370(&qword_100953DA0);
    sub_1000A1370(&qword_100953DA8);
    type metadata accessor for RuleMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1002A2220();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953D80);
  }
  return result;
}

unint64_t sub_1002A2220()
{
  unint64_t result = qword_100953DB0;
  if (!qword_100953DB0)
  {
    sub_1000A1370(&qword_100953D98);
    sub_1002A22C0();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953DB0);
  }
  return result;
}

unint64_t sub_1002A22C0()
{
  unint64_t result = qword_100953DB8;
  if (!qword_100953DB8)
  {
    sub_1000A1370(&qword_100953DC0);
    sub_1002A2360();
    sub_1000A132C(&qword_100953DD8, &qword_100953DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953DB8);
  }
  return result;
}

unint64_t sub_1002A2360()
{
  unint64_t result = qword_100953DC8;
  if (!qword_100953DC8)
  {
    sub_1000A1370(&qword_10094C3E8);
    sub_1002A2F9C(&qword_100953DD0, (void (*)(uint64_t))type metadata accessor for MetricDetailHeaderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953DC8);
  }
  return result;
}

uint64_t sub_1002A2410()
{
  type metadata accessor for MetricDetailChartView();

  return sub_10029EE10();
}

uint64_t sub_1002A2470()
{
  return sub_10029F57C(*(void *)(v0 + 16));
}

uint64_t sub_1002A2478@<X0>(uint64_t a1@<X8>)
{
  return sub_1002A0BB8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002A2484(uint64_t a1)
{
  return sub_1002A2560(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002A10EC);
}

unint64_t sub_1002A249C()
{
  unint64_t result = qword_100953DF8;
  if (!qword_100953DF8)
  {
    sub_1000A1370(&qword_100953E00);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953DF8);
  }
  return result;
}

uint64_t sub_1002A2548(uint64_t a1)
{
  return sub_1002A2560(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10029F7D8);
}

uint64_t sub_1002A2560(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricDetailChartView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_1002A25F4()
{
  unint64_t result = qword_100953E20;
  if (!qword_100953E20)
  {
    sub_1000A1370(&qword_100953E18);
    sub_1002A2684();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953E20);
  }
  return result;
}

unint64_t sub_1002A2684()
{
  unint64_t result = qword_100953E28;
  if (!qword_100953E28)
  {
    sub_1000A1370(&qword_100953E30);
    sub_1000A132C(&qword_100953E38, &qword_100953E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953E28);
  }
  return result;
}

double sub_1002A271C@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_10029FF6C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1).n128_u64[0];
  return result;
}

unint64_t sub_1002A2728()
{
  unint64_t result = qword_100953E50;
  if (!qword_100953E50)
  {
    sub_1000A1370(&qword_100953E48);
    sub_1002A2850((unint64_t *)&qword_100953E58, &qword_100953E60);
    sub_1002A27BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953E50);
  }
  return result;
}

unint64_t sub_1002A27BC()
{
  unint64_t result = qword_100953E68;
  if (!qword_100953E68)
  {
    sub_1000A1370(&qword_100953E70);
    sub_1002A2850(&qword_100953E78, &qword_100953E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953E68);
  }
  return result;
}

uint64_t sub_1002A2850(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A28BC(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_1000A1750(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1002A2900(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  if (a6)
  {
    char v6 = a5 & 1;
    return sub_1002A28BC(a1, a2, a3, a4, v6);
  }
  else
  {
    sub_1000A1750(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1002A2964(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_1000A06C0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002A29A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  if (a6)
  {
    char v6 = a5 & 1;
    return sub_1002A2964(a1, a2, a3, a4, v6);
  }
  else
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002A2A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002A2A74()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailChartView();
  uint64_t v25 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v23 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v26 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v26 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v27 = v0;
  uint64_t v24 = (v25 + 16) & ~v25;
  uint64_t v3 = v0 + v24;
  uint64_t v4 = (id *)(v0 + v24 + v1[6]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  char v6 = (char *)v4 + *(int *)(v5 + 36);
  uint64_t v7 = type metadata accessor for DateInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = (char *)v4 + *(int *)(v5 + 44);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v11 + 8);
  v12(v9, v10);
  uint64_t v13 = (id *)(v3 + v1[7]);

  uint64_t v14 = type metadata accessor for MetricFormattingHelper();
  uint64_t v15 = (char *)v13 + *(int *)(v14 + 20);
  uint64_t v16 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);

  uint64_t v17 = v3 + v1[8];
  swift_release();
  swift_release();
  uint64_t v18 = (id *)(v17 + *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32));
  uint64_t v19 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
  {

    v12((char *)v18 + *(int *)(v19 + 20), v10);
  }
  unint64_t v20 = (char *)(v3 + v1[9]);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v20, 1, v10)) {
    v12(v20, v10);
  }
  sub_1000AFA94(&qword_100953B88);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v27 + ((v24 + v23 + v22) & ~v22), v26);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002A2E88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MetricDetailChartView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for Calendar.Component() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(uint64_t (**)(void *))(v2 + v10);
  uint64_t v12 = *(void *)(v2 + v10 + 8);

  return sub_10029D0DC(a1, (char *)(v2 + v6), v2 + v9, v11, v12, a2);
}

uint64_t sub_1002A2F9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A2FE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10029E574(*(char **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1002A2FEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002A3060()
{
  return 8;
}

uint64_t sub_1002A306C()
{
  return swift_release();
}

uint64_t sub_1002A3074(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1002A3088(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

double sub_1002A3094@<D0>(uint64_t a1@<X8>)
{
  return sub_10029DF9C(*(char **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 40), a1);
}

uint64_t sub_1002A30A0()
{
  return sub_1000A132C(&qword_100953EC0, &qword_100953C58);
}

uint64_t sub_1002A30DC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  *a9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (int *)type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v18 = v17[10];
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = 1;
  *(void *)(v19 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v20 = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)a9 + v18) = v19;
  *(void *)(v19 + 32) = v20;
  uint64_t v21 = (char *)a9 + v17[15];
  uint64_t v22 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);
  v24(v21, v22, v23);
  v24((char *)a9 + v17[16], enum case for DynamicTypeSize.xLarge(_:), v23);
  *((unsigned char *)a9 + v17[5]) = a1;
  uint64_t result = sub_1000AEEC8(a2, (uint64_t)a9 + v17[6], &qword_10094CEF0);
  *(uint64_t *)((char *)a9 + v17[7]) = a3;
  *(uint64_t *)((char *)a9 + v17[8]) = a5;
  *(uint64_t *)((char *)a9 + v17[9]) = a6;
  uint64_t v26 = (char *)a9 + v17[11];
  *(void *)uint64_t v26 = a7;
  v26[8] = a8 & 1;
  uint64_t v27 = (char *)a9 + v17[12];
  *(void *)uint64_t v27 = a10;
  v27[8] = a11 & 1;
  uint64_t v28 = (uint64_t *)((char *)a9 + v17[13]);
  *uint64_t v28 = a12;
  v28[1] = a13;
  uint64_t v29 = (uint64_t *)((char *)a9 + v17[14]);
  *uint64_t v29 = a4;
  v29[1] = 0;
  return result;
}

uint64_t type metadata accessor for CardTypeConfigurationRoomView()
{
  uint64_t result = qword_100953F20;
  if (!qword_100953F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_1002A3348()
{
  double result = 0.0;
  xmmword_100997A30 = xmmword_100759F80;
  *(_OWORD *)&qword_100997A40 = xmmword_100759F80;
  return result;
}

double sub_1002A3360()
{
  double result = 20.0;
  xmmword_100997A50 = xmmword_100752FC0;
  *(_OWORD *)&qword_100997A60 = xmmword_100752FB0;
  return result;
}

void sub_1002A3380(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v241 = a2;
  uint64_t v264 = type metadata accessor for ControlSize();
  uint64_t v263 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  v262 = (char *)&v234 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v258 = *(void *)(v259 - 8);
  __chkstk_darwin(v259);
  v257 = (char *)&v234 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v275 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v276 = v10;
  uint64_t v277 = (uint64_t)&v234 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = sub_1000AFA94(&qword_100953FA0);
  uint64_t v279 = *(void *)(v280 - 8);
  __chkstk_darwin(v280);
  v278 = (char *)&v234 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_1000AFA94(&qword_100953FA8);
  __chkstk_darwin(v245);
  v307 = (char *)&v234 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_1000AFA94(&qword_100953FB0);
  uint64_t v248 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  v247 = (char *)&v234 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = sub_1000AFA94(&qword_100953FB8);
  __chkstk_darwin(v246);
  v250 = (char *)&v234 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = sub_1000AFA94(&qword_100953FC0);
  __chkstk_darwin(v252);
  uint64_t v253 = (uint64_t)&v234 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = sub_1000AFA94(&qword_100953FC8);
  uint64_t v255 = *(void *)(v256 - 8);
  __chkstk_darwin(v256);
  v254 = (char *)&v234 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_1000AFA94(&qword_100953FD0);
  __chkstk_darwin(v251);
  v260 = (char *)&v234 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1000AFA94(&qword_100953FD8);
  __chkstk_darwin(v236);
  v261 = (char *)&v234 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_1000AFA94(&qword_100953FE0);
  uint64_t v19 = __chkstk_darwin(v238);
  uint64_t v21 = (char *)&v234 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v237 = (uint64_t)&v234 - v23;
  __chkstk_darwin(v22);
  uint64_t v240 = (uint64_t)&v234 - v24;
  uint64_t v25 = type metadata accessor for PageTabViewStyle.IndexDisplayMode();
  __chkstk_darwin(v25 - 8);
  v269 = (char *)&v234 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = type metadata accessor for PageTabViewStyle();
  uint64_t v273 = *(void *)(v274 - 8);
  __chkstk_darwin(v274);
  v272 = (char *)&v234 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_1000AFA94(&qword_100953FE8);
  uint64_t v270 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  v268 = (char *)&v234 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = sub_1000AFA94(&qword_100953FF0);
  uint64_t v305 = *(void *)(v306 - 8);
  uint64_t v29 = __chkstk_darwin(v306);
  v239 = (char *)&v234 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  v267 = (char *)&v234 - v32;
  __chkstk_darwin(v31);
  v319 = (char *)&v234 - v33;
  uint64_t v34 = sub_1000AFA94(&qword_100953FF8);
  uint64_t v266 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  v265 = (char *)&v234 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100954000);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v318 = (uint64_t)&v234 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v317 = (uint64_t)&v234 - v39;
  uint64_t v295 = type metadata accessor for Font.Leading();
  uint64_t v297 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  uint64_t v296 = (uint64_t)&v234 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = type metadata accessor for Font.TextStyle();
  uint64_t v293 = *(void *)(v294 - 8);
  __chkstk_darwin(v294);
  v292 = (char *)&v234 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_1000AFA94(&qword_100953230);
  uint64_t v42 = __chkstk_darwin(v326);
  v321 = (char *)&v234 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v323 = (char *)&v234 - v44;
  uint64_t v45 = type metadata accessor for DynamicTypeSize();
  uint64_t v46 = *(void **)(v45 - 8);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v234 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  char v51 = (char *)&v234 - v50;
  uint64_t v324 = sub_1000AFA94(&qword_100953238);
  uint64_t v52 = __chkstk_darwin(v324);
  v311 = (char *)&v234 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v322 = (uint64_t)&v234 - v54;
  uint64_t v284 = sub_1000AFA94(&qword_100953240);
  uint64_t v283 = *(void *)(v284 - 8);
  __chkstk_darwin(v284);
  v282 = (char *)&v234 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = sub_1000AFA94(&qword_100954008);
  __chkstk_darwin(v281);
  v290 = (char *)&v234 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_1000AFA94(&qword_100954010);
  __chkstk_darwin(v285);
  uint64_t v291 = (uint64_t)&v234 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = sub_1000AFA94(&qword_100954018);
  uint64_t v58 = __chkstk_darwin(v289);
  uint64_t v298 = (uint64_t)&v234 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v288 = (uint64_t)&v234 - v61;
  __chkstk_darwin(v60);
  v320 = (uint64_t *)((char *)&v234 - v62);
  uint64_t v316 = v9;
  uint64_t v63 = *(int *)(v9 + 20);
  uint64_t v325 = a1;
  uint64_t v286 = v63;
  uint64_t v329 = sub_10007CE70(*(unsigned char *)(a1 + v63));
  uint64_t v330 = v64;
  unint64_t v287 = sub_1000A06D0();
  uint64_t v329 = Text.init<A>(_:)();
  uint64_t v330 = v65;
  LOBYTE(v331) = v66 & 1;
  uint64_t v332 = v67;
  uint64_t v68 = (uint64_t)(v46 + 13);
  long long v69 = (void (*)(void))v46[13];
  unsigned int v314 = enum case for DynamicTypeSize.xSmall(_:);
  v69(v51);
  unsigned int v313 = enum case for DynamicTypeSize.xxxLarge(_:);
  v315 = (void (*)(void, void, void))v69;
  v69(v49);
  long long v70 = (uint64_t *)v51;
  uint64_t v312 = sub_1000A3A88((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v243 = v36;
  uint64_t v244 = v34;
  v235 = v21;
  uint64_t v71 = v326;
  double v72 = v323;
  double v73 = &v323[*(int *)(v326 + 48)];
  *(void *)&long long v327 = v45;
  uint64_t v74 = (void (*)(void, void, void))v46[4];
  v309 = v70;
  v74(v323, v70, v327);
  v310 = v49;
  v74(v73, v49, v327);
  uint64_t v75 = *(int *)(v71 + 48);
  v308 = v46 + 13;
  unsigned __int8 v76 = v321;
  uint64_t v77 = &v321[v75];
  uint64_t v78 = (void (*)(void, void, void))v46[2];
  v78(v321, v72, v327);
  v301 = v46 + 2;
  v300 = v78;
  v78(v77, v73, v327);
  uint64_t v79 = (uint64_t)v311;
  v74(v311, v76, v327);
  float v80 = (void (*)(void, void))v46[1];
  v80(v77, v327);
  uint64_t v81 = &v76[*(int *)(v71 + 48)];
  v74(v76, v72, v327);
  v74(v81, v73, v327);
  uint64_t v82 = v79 + *(int *)(v324 + 36);
  v242 = v46 + 4;
  v303 = v74;
  v74(v82, v81, v327);
  v304 = v46 + 1;
  v302 = v80;
  v80(v76, v327);
  uint64_t v83 = v322;
  sub_1000AEEC8(v79, v322, &qword_100953238);
  uint64_t v84 = sub_1000A132C(&qword_100953248, &qword_100953238);
  uint64_t v85 = v282;
  uint64_t v299 = v84;
  View.dynamicTypeSize<A>(_:)();
  sub_10008DB18(v83, &qword_100953238);
  sub_1000A06C0(v329, v330, v331);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v87 = v283;
  uint64_t v88 = (uint64_t)v290;
  uint64_t v89 = v284;
  (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v290, v85, v284);
  uint64_t v90 = v88 + *(int *)(v281 + 36);
  *(void *)uint64_t v90 = KeyPath;
  *(unsigned char *)(v90 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v85, v89);
  uint64_t v91 = v293;
  uint64_t v92 = v292;
  uint64_t v93 = v294;
  (*(void (**)(char *, void, uint64_t))(v293 + 104))(v292, enum case for Font.TextStyle.title(_:), v294);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
  LODWORD(v294) = enum case for Font.Leading.tight(_:);
  uint64_t v94 = v297;
  uint64_t v293 = *(void *)(v297 + 104);
  uint64_t v95 = v296;
  uint64_t v96 = v295;
  ((void (*)(uint64_t))v293)(v296);
  uint64_t v97 = Font.leading(_:)();
  swift_release();
  uint64_t v297 = *(void *)(v94 + 8);
  ((void (*)(uint64_t, uint64_t))v297)(v95, v96);
  uint64_t v98 = swift_getKeyPath();
  uint64_t v99 = v291;
  sub_1000AEF2C(v88, v291, &qword_100954008);
  uint64_t v100 = (uint64_t *)(v99 + *(int *)(v285 + 36));
  *uint64_t v100 = v98;
  v100[1] = v97;
  sub_10008DB18(v88, &qword_100954008);
  uint64_t v101 = v325;
  uint64_t v102 = v325 + *(int *)(v316 + 48);
  if (*(unsigned char *)(v102 + 8)) {
    double v103 = 54.0;
  }
  else {
    double v103 = *(double *)v102 * 0.09;
  }
  char v104 = static Edge.Set.all.getter();
  uint64_t v105 = v288;
  sub_1000AEF2C(v99, v288, &qword_100954010);
  uint64_t v106 = v105 + *(int *)(v289 + 36);
  *(unsigned char *)uint64_t v106 = v104;
  *(double *)(v106 + 8) = v103;
  *(_OWORD *)(v106 + 16) = xmmword_100759F90;
  *(void *)(v106 + 32) = 0x404E000000000000;
  *(unsigned char *)(v106 + 40) = 0;
  sub_10008DB18(v99, &qword_100954010);
  sub_1000AEEC8(v105, (uint64_t)v320, &qword_100954018);
  uint64_t v329 = sub_1001C6148(*(unsigned char *)(v101 + v286));
  uint64_t v330 = v107;
  uint64_t v108 = Text.init<A>(_:)();
  uint64_t v110 = v109;
  char v112 = v111;
  uint64_t v114 = v113;
  long long v70 = (uint64_t *)swift_getKeyPath();
  static Font.body.getter();
  ((void (*)(uint64_t, void, uint64_t))v293)(v95, v294, v96);
  uint64_t v115 = Font.leading(_:)();
  swift_release();
  uint64_t v116 = v96;
  uint64_t v117 = v327;
  ((void (*)(uint64_t, uint64_t))v297)(v95, v116);
  uint64_t v118 = swift_getKeyPath();
  int v119 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v329 = v108;
  uint64_t v330 = v110;
  LOBYTE(v331) = v112 & 1;
  uint64_t v332 = v114;
  v333 = v70;
  char v334 = 1;
  uint64_t v335 = v118;
  uint64_t v336 = v115;
  int v337 = v119;
  long long v120 = v309;
  uint64_t v121 = v315;
  v315(v309, v314, v117);
  uint64_t v68 = (uint64_t)v310;
  v121(v310, v313, v117);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v122 = v120;
  uint64_t v123 = v326;
  uint64_t v124 = v323;
  uint64_t v125 = &v323[*(int *)(v326 + 48)];
  uint64_t v126 = v117;
  uint64_t v127 = v303;
  v303(v323, v122, v126);
  v127(v125, v68, v327);
  unint64_t v128 = v321;
  uint64_t v129 = &v321[*(int *)(v123 + 48)];
  uint64_t v130 = v300;
  v300(v321, v124, v327);
  v130(v129, v125, v327);
  uint64_t v131 = (uint64_t)v311;
  v127(v311, v128, v327);
  uint64_t v132 = v302;
  v302(v129, v327);
  uint64_t v133 = &v128[*(int *)(v123 + 48)];
  v127(v128, v124, v327);
  v127(v133, v125, v327);
  v127(v131 + *(int *)(v324 + 36), v133, v327);
  uint64_t v134 = v327;
  v132(v128, v327);
  uint64_t v135 = v131;
  uint64_t v136 = v322;
  sub_1000AEEC8(v131, v322, &qword_100953238);
  sub_1000AFA94(&qword_100953848);
  sub_100290E54();
  uint64_t v137 = v265;
  View.dynamicTypeSize<A>(_:)();
  sub_10008DB18(v136, &qword_100953238);
  sub_1000A06C0(v329, v330, v331);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v125) = static Edge.Set.all.getter();
  uint64_t v138 = v266;
  uint64_t v139 = v318;
  uint64_t v140 = v244;
  (*(void (**)(uint64_t, char *, uint64_t))(v266 + 16))(v318, v137, v244);
  uint64_t v141 = v139 + *(int *)(v243 + 36);
  *(unsigned char *)uint64_t v141 = (_BYTE)v125;
  *(_OWORD *)(v141 + 8) = xmmword_100752FB0;
  *(_OWORD *)(v141 + 24) = xmmword_100752FB0;
  *(unsigned char *)(v141 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v140);
  sub_1000AEEC8(v139, v317, &qword_100954000);
  uint64_t v142 = v325;
  long long v328 = *(_OWORD *)(v325 + *(int *)(v316 + 56));
  sub_1000AFA94(&qword_10094C330);
  uint64_t v143 = State.projectedValue.getter();
  __chkstk_darwin(v143);
  *(&v234 - 2) = v142;
  sub_1000AFA94(&qword_100954020);
  sub_1002A990C();
  uint64_t v144 = v268;
  TabView.init(selection:content:)();
  static PageTabViewStyle.IndexDisplayMode.automatic.getter();
  id v145 = v272;
  PageTabViewStyle.init(indexDisplayMode:)();
  sub_1000A132C(&qword_100954050, &qword_100953FE8);
  uint64_t v146 = v267;
  uint64_t v147 = v271;
  uint64_t v148 = v274;
  View.tabViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v273 + 8))(v145, v148);
  (*(void (**)(char *, uint64_t))(v270 + 8))(v144, v147);
  (*(void (**)(char *, char *, uint64_t))(v305 + 32))(v319, v146, v306);
  uint64_t v149 = v142;
  uint64_t v150 = v135;
  if (sub_1002A70A4())
  {
    id v151 = [self mainBundle];
    NSString v152 = String._bridgeToObjectiveC()();
    id v153 = [v151 localizedStringForKey:v152 value:0 table:0];

    uint64_t v316 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v155 = v154;

    LOBYTE(v151) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v2 = v156;
    uint64_t v3 = v157;
    uint64_t v4 = v158;
    uint64_t v5 = v159;
    uint64_t v297 = v151;
    uint64_t v296 = 1;
  }
  else
  {
    uint64_t v296 = 0;
    uint64_t v316 = 0;
    uint64_t v155 = 0;
    uint64_t v297 = 0;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v160 = v277;
  sub_1002AA198(v149, v277, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  unint64_t v161 = (*(unsigned __int8 *)(v275 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v275 + 80);
  uint64_t v162 = swift_allocObject();
  uint64_t v163 = sub_1002AA06C(v160, v162 + v161, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  long long v70 = &v234;
  __chkstk_darwin(v163);
  *(&v234 - 2) = v149;
  uint64_t v68 = sub_1000AFA94(&qword_100954058);
  sub_1000A132C(&qword_100954060, &qword_100954058);
  uint64_t v164 = v278;
  Button.init(action:label:)();
  static FitnessAccessibilityIdentifier.CardTypeConfigurationRoomView.addOrSwapButton.getter();
  sub_1000A132C(&qword_100954068, &qword_100953FA0);
  uint64_t v165 = v280;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v279 + 8))(v164, v165);
  int v166 = v309;
  uint64_t v167 = v315;
  v315(v309, v314, v134);
  uint64_t v168 = v310;
  v167(v310, v313, v134);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0) {
    goto LABEL_22;
  }
  v315 = v155;
  uint64_t v169 = v326;
  uint64_t v170 = v323;
  unint64_t v171 = &v323[*(int *)(v326 + 48)];
  long long v172 = v303;
  v303(v323, v166, v134);
  v172(v171, v168, v134);
  uint64_t v173 = v321;
  uint64_t v174 = &v321[*(int *)(v169 + 48)];
  uint64_t v175 = v300;
  v300(v321, v170, v134);
  v175(v174, v171, v134);
  v172(v150, v173, v134);
  uint64_t v176 = v302;
  v302(v174, v134);
  uint64_t v177 = &v173[*(int *)(v326 + 48)];
  v172(v173, v170, v134);
  v172(v177, v171, v134);
  v172(v150 + *(int *)(v324 + 36), v177, v134);
  v176(v173, v134);
  uint64_t v178 = v322;
  sub_1000AEEC8(v150, v322, &qword_100953238);
  sub_1002A9A8C();
  long long v179 = v247;
  uint64_t v180 = (uint64_t)v307;
  View.dynamicTypeSize<A>(_:)();
  sub_10008DB18(v178, &qword_100953238);
  sub_10008DB18(v180, &qword_100953FA8);
  if (sub_1002A7308())
  {
    id v181 = [self tertiaryLabelColor];
    uint64_t v182 = Color.init(_:)();
  }
  else
  {
    id v183 = sub_10005DB50();
    uint64_t v182 = Color.init(uiColor:)();
  }
  uint64_t v184 = v182;
  uint64_t v185 = v264;
  uint64_t v186 = (uint64_t)v260;
  uint64_t v187 = v248;
  uint64_t v188 = (uint64_t)v250;
  uint64_t v189 = v249;
  (*(void (**)(char *, char *, uint64_t))(v248 + 16))(v250, v179, v249);
  *(void *)(v188 + *(int *)(v246 + 36)) = v184;
  (*(void (**)(char *, uint64_t))(v187 + 8))(v179, v189);
  LOBYTE(v184) = sub_1002A7308();
  uint64_t v190 = swift_getKeyPath();
  uint64_t v191 = swift_allocObject();
  *(unsigned char *)(v191 + 16) = v184 & 1;
  uint64_t v192 = v253;
  sub_1000AEF2C(v188, v253, &qword_100953FB8);
  long long v193 = (uint64_t *)(v192 + *(int *)(v252 + 36));
  *long long v193 = v190;
  v193[1] = (uint64_t)sub_1000DBE18;
  v193[2] = v191;
  sub_10008DB18(v188, &qword_100953FB8);
  long long v194 = v257;
  BorderedProminentButtonStyle.init()();
  sub_1002A9B74();
  sub_1000A3A88((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  long long v195 = v254;
  uint64_t v196 = v259;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v258 + 8))(v194, v196);
  sub_10008DB18(v192, &qword_100953FC0);
  uint64_t v197 = v263;
  char v198 = v262;
  (*(void (**)(char *, void, uint64_t))(v263 + 104))(v262, enum case for ControlSize.large(_:), v185);
  uint64_t v199 = swift_getKeyPath();
  uint64_t v200 = (uint64_t *)(v186 + *(int *)(v251 + 36));
  uint64_t v201 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, uint64_t))(v197 + 16))((char *)v200 + *(int *)(v201 + 28), v198, v185);
  *uint64_t v200 = v199;
  uint64_t v202 = v255;
  uint64_t v203 = v256;
  (*(void (**)(uint64_t, char *, uint64_t))(v255 + 16))(v186, v195, v256);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v198, v185);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v195, v203);
  if (sub_1002A7308())
  {
    id v204 = sub_10005DB50();
    uint64_t v205 = Color.init(uiColor:)();
    uint64_t v68 = (uint64_t)v261;
    long long v70 = v320;
    goto LABEL_18;
  }
  id v206 = [self keyColors];
  uint64_t v68 = (uint64_t)v261;
  long long v70 = v320;
  if (v206)
  {
    uint64_t v207 = v206;
    id v208 = [v206 nonGradientTextColor];

    if (v208)
    {
      uint64_t v205 = Color.init(uiColor:)();
LABEL_18:
      uint64_t v209 = swift_getKeyPath();
      *(void *)&long long v328 = v205;
      swift_retain();
      uint64_t v210 = AnyShapeStyle.init<A>(_:)();
      sub_1000AEF2C(v186, v68, &qword_100953FD0);
      swift_release();
      long long v211 = (uint64_t *)(v68 + *(int *)(v236 + 36));
      *long long v211 = v209;
      v211[1] = v210;
      sub_10008DB18(v186, &qword_100953FD0);
      if (qword_10094A810 == -1)
      {
LABEL_19:
        long long v327 = xmmword_100997A30;
        uint64_t v212 = qword_100997A40;
        uint64_t v213 = unk_100997A48;
        char v214 = static Edge.Set.all.getter();
        uint64_t v215 = v237;
        sub_1000AEF2C(v68, v237, &qword_100953FD8);
        uint64_t v216 = v215 + *(int *)(v238 + 36);
        *(unsigned char *)uint64_t v216 = v214;
        *(_OWORD *)(v216 + 8) = v327;
        *(void *)(v216 + 24) = v212;
        *(void *)(v216 + 32) = v213;
        *(unsigned char *)(v216 + 40) = 0;
        sub_10008DB18(v68, &qword_100953FD8);
        uint64_t v217 = v215;
        uint64_t v218 = v240;
        sub_1000AEEC8(v217, v240, &qword_100953FE0);
        uint64_t v219 = v298;
        sub_1000AEF2C((uint64_t)v70, v298, &qword_100954018);
        uint64_t v220 = v318;
        sub_1000AEF2C(v317, v318, &qword_100954000);
        uint64_t v221 = v305;
        unsigned __int8 v222 = *(void (**)(void, void, void))(v305 + 16);
        v223 = v239;
        uint64_t v224 = v306;
        v222(v239, v319, v306);
        uint64_t v225 = (uint64_t)v235;
        sub_1000AEF2C(v218, (uint64_t)v235, &qword_100953FE0);
        uint64_t v226 = v241;
        sub_1000AEF2C(v219, v241, &qword_100954018);
        v227 = (int *)sub_1000AFA94(&qword_100954088);
        sub_1000AEF2C(v220, v226 + v227[12], &qword_100954000);
        uint64_t v228 = v226 + v227[16];
        *(void *)uint64_t v228 = 0;
        *(unsigned char *)(v228 + 8) = 0;
        v222(v226 + v227[20], v223, v224);
        uint64_t v229 = v226 + v227[24];
        *(void *)uint64_t v229 = 0;
        *(unsigned char *)(v229 + 8) = 0;
        uint64_t v230 = v226 + v227[28];
        uint64_t v231 = v296;
        *(void *)uint64_t v230 = 0;
        *(void *)(v230 + 8) = v231;
        v232 = v315;
        *(void *)(v230 + 16) = v316;
        *(void *)(v230 + 24) = v232;
        *(void *)(v230 + 32) = v297;
        *(void *)(v230 + 40) = v2;
        *(void *)(v230 + 48) = v3;
        *(void *)(v230 + 56) = v4;
        *(void *)(v230 + 64) = v5;
        *(unsigned char *)(v230 + 72) = 0;
        sub_1000AEF2C(v225, v226 + v227[32], &qword_100953FE0);
        swift_bridgeObjectRetain();
        sub_10008DB18(v218, &qword_100953FE0);
        v233 = *(void (**)(void, void))(v221 + 8);
        v233(v319, v224);
        sub_10008DB18(v317, &qword_100954000);
        sub_10008DB18((uint64_t)v320, &qword_100954018);
        sub_10008DB18(v225, &qword_100953FE0);
        swift_bridgeObjectRelease();
        v233(v223, v224);
        sub_10008DB18(v318, &qword_100954000);
        sub_10008DB18(v298, &qword_100954018);
        return;
      }
LABEL_23:
      swift_once();
      goto LABEL_19;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002A5894(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1004F8C20(v5);
  swift_bridgeObjectRelease();
  v11[1] = v6;
  swift_getKeyPath();
  sub_1002AA198(a1, (uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1002AA06C((uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1002AA0D8;
  *(void *)(v9 + 24) = v8;
  sub_1000AFA94(&qword_100954110);
  sub_1000AFA94(&qword_100954038);
  sub_1000A132C(&qword_100954118, &qword_100954110);
  sub_1002A9980();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1002A5AA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000AFA94(&qword_100954048);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v11 = sub_1000AFA94(&qword_100954120);
  sub_1002A5BAC(a2, a3, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  LOBYTE(a3) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v10, a4, &qword_100954048);
  uint64_t v12 = a4 + *(int *)(sub_1000AFA94(&qword_100954038) + 36);
  *(unsigned char *)uint64_t v12 = (_BYTE)a3;
  *(_OWORD *)(v12 + 8) = xmmword_100759FA0;
  *(_OWORD *)(v12 + 24) = xmmword_100759FA0;
  *(unsigned char *)(v12 + 40) = 0;
  return sub_10008DB18((uint64_t)v10, &qword_100954048);
}

uint64_t sub_1002A5BAC@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v145 = a3;
  id v153 = a2;
  uint64_t v136 = a1;
  uint64_t v135 = a4;
  uint64_t v127 = sub_1000AFA94(&qword_100953230);
  uint64_t v5 = __chkstk_darwin(v127);
  unint64_t v128 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v124 = (char *)&v122 - v7;
  uint64_t v131 = sub_1000AFA94(&qword_100953238);
  uint64_t v8 = __chkstk_darwin(v131);
  uint64_t v125 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v129 = (uint64_t)&v122 - v10;
  *(void *)&long long v148 = type metadata accessor for Font.Leading();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1000AFA94(&qword_100954128);
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v12 = __chkstk_darwin(v134);
  uint64_t v132 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v126 = (char *)&v122 - v15;
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v122 - v16;
  uint64_t v144 = sub_1000AFA94(&qword_100954130) - 8;
  __chkstk_darwin(v144);
  uint64_t v143 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DynamicTypeSize();
  uint64_t v152 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v149 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v151 = (char *)&v122 - v21;
  uint64_t v22 = type metadata accessor for RoundedRectangle();
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (_OWORD *)((char *)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = type metadata accessor for DashboardCardView();
  uint64_t v27 = (int *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v122 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10094E440);
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1000AFA94(&qword_10094E448);
  __chkstk_darwin(v137);
  uint64_t v35 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_1000AFA94(&qword_100954138);
  uint64_t v140 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v138 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000AFA94(&qword_100954140);
  uint64_t v38 = v37 - 8;
  __chkstk_darwin(v37);
  uint64_t v139 = (uint64_t)&v122 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1000AFA94(&qword_100954148) - 8;
  uint64_t v40 = __chkstk_darwin(v141);
  uint64_t v123 = (uint64_t)&v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v150 = (uint64_t)&v122 - v42;
  sub_10008E75C((uint64_t)a1, (uint64_t)&v154);
  uint64_t v43 = type metadata accessor for CardTypeConfigurationRoomView();
  memset(v163, 0, sizeof(v163));
  uint64_t v164 = 0;
  uint64_t v44 = *(void *)&v153[*(int *)(v43 + 40)];
  *(void *)uint64_t v29 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  sub_100093E60(&v154, v29 + v27[7]);
  sub_1000AEEC8((uint64_t)v163, v29 + v27[8], &qword_10094C750);
  *(void *)(v29 + v27[9]) = v44;
  *(unsigned char *)(v29 + v27[10]) = 1;
  *(unsigned char *)(v29 + v27[11]) = 0;
  sub_1002AA198(v29, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  v33[*(int *)(v31 + 44)] = 0;
  swift_retain();
  sub_1002AA200(v29, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  uint64_t v45 = (char *)v25 + *(int *)(v23 + 28);
  uint64_t v46 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v47 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v45, v46, v47);
  __asm { FMOV            V0.2D, #20.0 }
  *uint64_t v25 = _Q0;
  uint64_t v53 = (uint64_t)&v35[*(int *)(v137 + 36)];
  sub_1002AA198((uint64_t)v25, v53, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v53 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v33, (uint64_t)v35, &qword_10094E440);
  sub_1002AA200((uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v33, &qword_10094E440);
  uint64_t v54 = v136;
  uint64_t v55 = v136[3];
  uint64_t v56 = v136[4];
  sub_10007E4EC(v136, v55);
  char v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 24))(v55, v56);
  uint64_t v58 = v151;
  sub_1002A6B48(v57 & 1, v151);
  sub_1002AA260();
  uint64_t v59 = v138;
  View.dynamicTypeSize(_:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v152 + 8);
  uint64_t v137 = v152 + 8;
  uint64_t v122 = v60;
  v60(v58, v18);
  sub_10008DB18((uint64_t)v35, &qword_10094E448);
  uint64_t v61 = v140;
  uint64_t v62 = (uint64_t)v143;
  uint64_t v63 = v142;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v143, v59, v142);
  uint64_t v64 = v62 + *(int *)(v144 + 44);
  uint64_t v65 = v145;
  *(void *)uint64_t v64 = v145;
  *(unsigned char *)(v64 + 8) = 0;
  uint64_t v66 = v139;
  sub_1000AEF2C(v62, v139, &qword_100954130);
  uint64_t v67 = v66 + *(int *)(v38 + 44);
  *(void *)uint64_t v67 = v65;
  *(_WORD *)(v67 + 8) = 0;
  sub_10008DB18(v62, &qword_100954130);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v63);
  uint64_t v68 = v54[3];
  uint64_t v69 = v54[4];
  sub_10007E4EC(v54, v68);
  uint64_t v70 = v150;
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v69);
  sub_1000AEEC8(v66, v70, &qword_100954140);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v71 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v73 = v72;
  LOBYTE(v70) = v74 & 1;
  static Font.footnote.getter();
  uint64_t v75 = v147;
  unsigned __int8 v76 = v146;
  uint64_t v77 = v148;
  (*(void (**)(char *, void, void))(v147 + 104))(v146, enum case for Font.Leading.tight(_:), v148);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  uint64_t v78 = Text.font(_:)();
  uint64_t v80 = v79;
  LOBYTE(v29) = v81;
  swift_release();
  LOBYTE(v54) = v29 & 1;
  sub_1000A06C0(v71, v73, v70);
  swift_bridgeObjectRelease();
  LODWORD(v154) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v82 = Text.foregroundStyle<A>(_:)();
  uint64_t v84 = v83;
  char v86 = v85;
  uint64_t v88 = v87;
  sub_1000A06C0(v78, v80, (char)v54);
  swift_bridgeObjectRelease();
  if (qword_10094A818 != -1) {
    swift_once();
  }
  long long v148 = xmmword_100997A50;
  uint64_t v89 = qword_100997A60;
  uint64_t v90 = unk_100997A68;
  char v91 = static Edge.Set.all.getter();
  char v92 = sub_1002A6D00();
  double v93 = 0.0;
  if (v92) {
    double v93 = 1.0;
  }
  *(void *)&long long v154 = v82;
  *((void *)&v154 + 1) = v84;
  char v155 = v86 & 1;
  uint64_t v156 = v88;
  char v157 = v91;
  long long v158 = v148;
  uint64_t v159 = v89;
  uint64_t v160 = v90;
  char v161 = 0;
  double v162 = v93;
  uint64_t v94 = v151;
  uint64_t v95 = v152;
  uint64_t v96 = *(void (**)(char *, void, uint64_t))(v152 + 104);
  v96(v151, enum case for DynamicTypeSize.xSmall(_:), v18);
  uint64_t v97 = v149;
  v96(v149, enum case for DynamicTypeSize.xxxLarge(_:), v18);
  sub_1000A3A88((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v99 = v94;
    uint64_t v100 = v127;
    uint64_t v101 = v124;
    uint64_t v102 = &v124[*(int *)(v127 + 48)];
    double v103 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
    v103(v124, v99, v18);
    id v153 = v102;
    v103(v102, v97, v18);
    char v104 = v128;
    uint64_t v105 = &v128[*(int *)(v100 + 48)];
    uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v106(v128, v101, v18);
    v106(v105, v102, v18);
    uint64_t v107 = (uint64_t)v125;
    v103(v125, v104, v18);
    uint64_t v108 = v122;
    v122(v105, v18);
    uint64_t v109 = &v104[*(int *)(v100 + 48)];
    v103(v104, v101, v18);
    v103(v109, v153, v18);
    v103((char *)(v107 + *(int *)(v131 + 36)), v109, v18);
    v108(v104, v18);
    uint64_t v110 = v129;
    sub_1000AEEC8(v107, v129, &qword_100953238);
    sub_1000AFA94(&qword_100954170);
    sub_1002AA400();
    sub_1000A132C(&qword_100953248, &qword_100953238);
    char v111 = v126;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v110, &qword_100953238);
    sub_1000A06C0(v154, *((uint64_t *)&v154 + 1), v155);
    swift_bridgeObjectRelease();
    uint64_t v112 = v133;
    uint64_t v113 = v130;
    uint64_t v114 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v130, v111, v134);
    uint64_t v115 = v150;
    uint64_t v116 = v123;
    sub_1000AEF2C(v150, v123, &qword_100954148);
    uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    uint64_t v118 = v132;
    v117(v132, v113, v114);
    uint64_t v119 = v135;
    sub_1000AEF2C(v116, v135, &qword_100954148);
    uint64_t v120 = sub_1000AFA94(&qword_100954180);
    v117((char *)(v119 + *(int *)(v120 + 48)), v118, v114);
    uint64_t v121 = *(void (**)(char *, uint64_t))(v112 + 8);
    v121(v113, v114);
    sub_10008DB18(v115, &qword_100954148);
    v121(v118, v114);
    return sub_10008DB18(v116, &qword_100954148);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A6B48@<X0>(char a1@<W0>, char *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  sub_100092088((uint64_t)&v18 - v10);
  uint64_t v12 = type metadata accessor for CardTypeConfigurationRoomView();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v14 = 64;
  if ((a1 & 1) == 0) {
    uint64_t v14 = 60;
  }
  v13(v9, v2 + *(int *)(v12 + v14), v5);
  sub_1000A3A88((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if (dispatch thunk of static Comparable.< infix(_:_:)()) {
    uint64_t v15 = v9;
  }
  else {
    uint64_t v15 = v11;
  }
  v13(a2, (uint64_t)v15, v5);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
}

uint64_t sub_1002A6D00()
{
  sub_1002A76BC((uint64_t)&v23);
  if (!v24)
  {
    sub_10008DB18((uint64_t)&v23, &qword_10094CEF0);
    return 0;
  }
  sub_100093E60(&v23, (uint64_t)v26);
  type metadata accessor for CardTypeConfigurationRoomView();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v23 + 16);
  if (!v0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  uint64_t v1 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 49);
  while (2)
  {
    uint64_t v22 = v0;
    uint64_t v2 = *(void *)(v1 - 17);
    uint64_t v3 = *(void *)(v1 - 9);
    uint64_t v4 = *(v1 - 1);
    int v5 = *v1;
    uint64_t v7 = v27;
    uint64_t v6 = v28;
    sub_10007E4EC(v26, v27);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
    sub_100091494(v2, v3, v4);
    LODWORD(v6) = (v8(v7, v6) & 1) == 0;
    sub_10008E75C((uint64_t)v26, (uint64_t)&v23);
    if (v5 == v6) {
      goto LABEL_51;
    }
    uint64_t v9 = v24;
    uint64_t v10 = v25;
    sub_10007E4EC(&v23, v24);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    switch(v4)
    {
      case 1:
        if (v13 != 1) {
          goto LABEL_50;
        }
        if (v2 == v11 && v3 == v12)
        {
          sub_1000917F8(v2, v3, 1);
          goto LABEL_57;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1000917F8(v14, v15, 1);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v23);
        sub_1000917F8(v2, v3, 1);
        if ((v17 & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_58;
      case 2:
        if (v13 == 2) {
          goto LABEL_16;
        }
        goto LABEL_50;
      case 3:
        switch(v2)
        {
          case 1:
            BOOL v19 = v13 == 3 && v11 == 1;
            break;
          case 2:
            BOOL v19 = v13 == 3 && v11 == 2;
            break;
          case 3:
            BOOL v19 = v13 == 3 && v11 == 3;
            break;
          case 4:
            BOOL v19 = v13 == 3 && v11 == 4;
            break;
          case 5:
            BOOL v19 = v13 == 3 && v11 == 5;
            break;
          case 6:
            BOOL v19 = v13 == 3 && v11 == 6;
            break;
          case 7:
            BOOL v19 = v13 == 3 && v11 == 7;
            break;
          default:
            if (v13 != 3 || (v11 | v12) != 0) {
              goto LABEL_50;
            }
            goto LABEL_57;
        }
        if (!v19 || v12 != 0) {
          goto LABEL_50;
        }
        goto LABEL_57;
      default:
        if (v13)
        {
LABEL_50:
          sub_1000917F8(v11, v12, v13);
LABEL_51:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v23);
          sub_1000917F8(v2, v3, v4);
LABEL_52:
          v1 += 24;
          uint64_t v0 = v22 - 1;
          if (v22 == 1)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_59;
          }
          continue;
        }
LABEL_16:
        if (v11 != v2) {
          goto LABEL_51;
        }
LABEL_57:
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v23);
        sub_1000917F8(v2, v3, v4);
LABEL_58:
        swift_bridgeObjectRelease_n();
        uint64_t v0 = 1;
LABEL_59:
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v26);
        return v0;
    }
  }
}

BOOL sub_1002A70A4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D1B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v3 = type metadata accessor for FriendsHighlightCard();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v15[-v8 - 8];
  sub_1002A76BC((uint64_t)v15);
  if (!v16)
  {
    sub_10008DB18((uint64_t)v15, &qword_10094CEF0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_7;
  }
  sub_1000AFA94(&qword_10094D218);
  int v10 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, v10 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_7:
    sub_10008DB18((uint64_t)v2, &qword_10094D1B0);
    return 0;
  }
  sub_1002AA06C((uint64_t)v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
  char v11 = v9[*(int *)(v3 + 44)];
  sub_1002AA06C((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
  if (v11)
  {
    char v12 = v7[*(int *)(v3 + 48)];
    sub_1002AA200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
    return (v12 & 1) == 0;
  }
  sub_1002AA200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
  return 1;
}

BOOL sub_1002A7308()
{
  sub_1002A76BC((uint64_t)&v24);
  if (!v25)
  {
    sub_10008DB18((uint64_t)&v24, &qword_10094CEF0);
    return sub_1002A70A4();
  }
  sub_100093E60(&v24, (uint64_t)v27);
  type metadata accessor for CardTypeConfigurationRoomView();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v24 + 16);
  if (!v0)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
    return sub_1002A70A4();
  }
  uint64_t v1 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 49);
  while (2)
  {
    uint64_t v23 = v0;
    uint64_t v2 = *(void *)(v1 - 17);
    uint64_t v3 = *(void *)(v1 - 9);
    uint64_t v4 = *(v1 - 1);
    int v5 = *v1;
    uint64_t v7 = v28;
    uint64_t v6 = v29;
    sub_10007E4EC(v27, v28);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
    sub_100091494(v2, v3, v4);
    LODWORD(v6) = (v8(v7, v6) & 1) == 0;
    sub_10008E75C((uint64_t)v27, (uint64_t)&v24);
    if (v5 == v6) {
      goto LABEL_51;
    }
    uint64_t v9 = v25;
    uint64_t v10 = v26;
    sub_10007E4EC(&v24, v25);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    switch(v4)
    {
      case 1:
        if (v13 != 1) {
          goto LABEL_50;
        }
        if (v2 == v11 && v3 == v12)
        {
          sub_1000917F8(v2, v3, 1);
          goto LABEL_60;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1000917F8(v14, v15, 1);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v24);
        sub_1000917F8(v2, v3, 1);
        if ((v17 & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_61;
      case 2:
        if (v13 == 2) {
          goto LABEL_16;
        }
        goto LABEL_50;
      case 3:
        switch(v2)
        {
          case 1:
            BOOL v19 = v13 == 3 && v11 == 1;
            break;
          case 2:
            BOOL v19 = v13 == 3 && v11 == 2;
            break;
          case 3:
            BOOL v19 = v13 == 3 && v11 == 3;
            break;
          case 4:
            BOOL v19 = v13 == 3 && v11 == 4;
            break;
          case 5:
            BOOL v19 = v13 == 3 && v11 == 5;
            break;
          case 6:
            BOOL v19 = v13 == 3 && v11 == 6;
            break;
          case 7:
            BOOL v19 = v13 == 3 && v11 == 7;
            break;
          default:
            if (v13 != 3 || (v11 | v12) != 0) {
              goto LABEL_50;
            }
            goto LABEL_60;
        }
        if (!v19 || v12 != 0) {
          goto LABEL_50;
        }
        goto LABEL_60;
      default:
        if (v13)
        {
LABEL_50:
          sub_1000917F8(v11, v12, v13);
LABEL_51:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v24);
          sub_1000917F8(v2, v3, v4);
LABEL_52:
          v1 += 24;
          uint64_t v0 = v23 - 1;
          if (v23 == 1)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_56;
          }
          continue;
        }
LABEL_16:
        if (v11 != v2) {
          goto LABEL_51;
        }
LABEL_60:
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v24);
        sub_1000917F8(v2, v3, v4);
LABEL_61:
        swift_bridgeObjectRelease_n();
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
        return 1;
    }
  }
}

uint64_t sub_1002A76BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CardTypeConfigurationRoomView();
  sub_1000AFA94(&qword_10094C330);
  uint64_t result = State.wrappedValue.getter();
  uint64_t v5 = *(void *)(v1 + *(int *)(v3 + 28));
  if ((int64_t)v6 >= *(void *)(v5 + 16))
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    uint64_t result = State.wrappedValue.getter();
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)(v5 + 16))
    {
      return sub_10008E75C(v5 + 40 * v6 + 32, a1);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A77A4(uint64_t a1)
{
  sub_1002A76BC((uint64_t)&v37);
  if (!v38)
  {
    sub_10008DB18((uint64_t)&v37, &qword_10094CEF0);
    goto LABEL_57;
  }
  sub_100093E60(&v37, (uint64_t)&v40);
  type metadata accessor for CardTypeConfigurationRoomView();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v37 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  uint64_t v33 = a1;
  uint64_t v3 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 49);
  while (1)
  {
    uint64_t v34 = v2;
    uint64_t v4 = *(void *)(v3 - 17);
    uint64_t v5 = *(void *)(v3 - 9);
    uint64_t v6 = *(v3 - 1);
    int v7 = *v3;
    uint64_t v9 = v42;
    uint64_t v8 = v43;
    sub_10007E4EC(&v40, v42);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 24);
    sub_100091494(v4, v5, v6);
    LODWORD(v8) = (v10(v9, v8) & 1) == 0;
    sub_10008E75C((uint64_t)&v40, (uint64_t)&v37);
    if (v7 != v8) {
      break;
    }
LABEL_51:
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v37);
    sub_1000917F8(v4, v5, v6);
LABEL_52:
    v3 += 24;
    uint64_t v2 = v34 - 1;
    if (v34 == 1)
    {
      swift_bridgeObjectRelease_n();
      a1 = v33;
LABEL_56:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v40);
LABEL_57:
      uint64_t v23 = (int *)type metadata accessor for CardTypeConfigurationRoomView();
      sub_1000AEF2C(a1 + v23[6], (uint64_t)&v37, &qword_10094CEF0);
      if (v38)
      {
        sub_100093E60(&v37, (uint64_t)&v40);
        long long v24 = (uint64_t *)(a1 + v23[14]);
        uint64_t v25 = *v24;
        uint64_t v26 = v24[1];
        *(void *)&long long v37 = *v24;
        *((void *)&v37 + 1) = v26;
        sub_1000AFA94(&qword_10094C330);
        State.wrappedValue.getter();
        uint64_t v27 = *(void *)(a1 + v23[7]);
        if (*(uint64_t *)&v35[0] >= *(void *)(v27 + 16)) {
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v40);
        }
        *(void *)&long long v37 = v25;
        *((void *)&v37 + 1) = v26;
        State.wrappedValue.getter();
        if ((*(void *)&v35[0] & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)&v35[0] < *(void *)(v27 + 16))
        {
          sub_10008E75C(v27 + 40 * *(void *)&v35[0] + 32, (uint64_t)&v37);
          sub_100447748((uint64_t)&v40, (uint64_t)&v37);
          (*(void (**)(void))(a1 + v23[13]))(0);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v37);
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v40);
        }
        __break(1u);
      }
      else
      {
        sub_10008DB18((uint64_t)&v37, &qword_10094CEF0);
        uint64_t v28 = (uint64_t *)(a1 + v23[14]);
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        uint64_t v40 = *v28;
        uint64_t v41 = v30;
        sub_1000AFA94(&qword_10094C330);
        uint64_t result = State.wrappedValue.getter();
        uint64_t v32 = *(void *)(a1 + v23[7]);
        if ((uint64_t)v37 >= *(void *)(v32 + 16)) {
          return result;
        }
        uint64_t v40 = v29;
        uint64_t v41 = v30;
        State.wrappedValue.getter();
        if ((v37 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v37 < *(void *)(v32 + 16))
          {
            sub_10008E75C(v32 + 40 * v37 + 32, (uint64_t)&v40);
            sub_10008E75C((uint64_t)&v40, (uint64_t)&v37);
            uint64_t v36 = 0;
            memset(v35, 0, sizeof(v35));
            swift_beginAccess();
            sub_1006A9D64(0, (uint64_t)&v37, (uint64_t)v35);
            sub_10008DB18((uint64_t)v35, &qword_10094CEF0);
            sub_10008DB18((uint64_t)&v37, &qword_10094CEF0);
            sub_100448CB4((uint64_t)&v40, 0, 1);
            (*(void (**)(uint64_t))(a1 + v23[13]))(1);
            return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v40);
          }
LABEL_74:
          __break(1u);
          JUMPOUT(0x1002A7D58);
        }
      }
      __break(1u);
      goto LABEL_74;
    }
  }
  uint64_t v11 = v38;
  uint64_t v12 = v39;
  sub_10007E4EC(&v37, v38);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  uint64_t v16 = v13;
  uint64_t v17 = v14;
  switch(v6)
  {
    case 1:
      if (v15 != 1) {
        goto LABEL_50;
      }
      if (v4 != v13 || v5 != v14)
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1000917F8(v16, v17, 1);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v37);
        sub_1000917F8(v4, v5, 1);
        if (v19) {
          goto LABEL_68;
        }
        goto LABEL_52;
      }
      sub_1000917F8(v4, v5, 1);
LABEL_67:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v37);
      sub_1000917F8(v4, v5, v6);
LABEL_68:
      swift_bridgeObjectRelease_n();
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v40);
    case 2:
      if (v15 == 2) {
        goto LABEL_16;
      }
      goto LABEL_50;
    case 3:
      switch(v4)
      {
        case 1:
          BOOL v21 = v15 == 3 && v13 == 1;
          goto LABEL_46;
        case 2:
          BOOL v21 = v15 == 3 && v13 == 2;
          goto LABEL_46;
        case 3:
          BOOL v21 = v15 == 3 && v13 == 3;
          goto LABEL_46;
        case 4:
          BOOL v21 = v15 == 3 && v13 == 4;
          goto LABEL_46;
        case 5:
          BOOL v21 = v15 == 3 && v13 == 5;
          goto LABEL_46;
        case 6:
          BOOL v21 = v15 == 3 && v13 == 6;
          goto LABEL_46;
        case 7:
          BOOL v21 = v15 == 3 && v13 == 7;
LABEL_46:
          if (!v21 || v14 != 0) {
            goto LABEL_50;
          }
          goto LABEL_67;
        default:
          if (v15 != 3 || (v13 | v14) != 0) {
            goto LABEL_50;
          }
          goto LABEL_67;
      }
    default:
      if (v15)
      {
LABEL_50:
        sub_1000917F8(v13, v14, v15);
      }
      else
      {
LABEL_16:
        if (v13 == v4) {
          goto LABEL_67;
        }
      }
      goto LABEL_51;
  }
}

uint64_t sub_1002A7D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_1000AFA94(&qword_100954090);
  return sub_1002A7DD8(a1, (void *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_1002A7DD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v69 = sub_1000AFA94(&qword_100954098);
  uint64_t v59 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v58 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_1009540A0);
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_1009540A8);
  uint64_t v5 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  int v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000AFA94(&qword_1009540B0);
  __chkstk_darwin(v60);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_1009540B8);
  __chkstk_darwin(v63);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_1009540C0);
  uint64_t v12 = *(void *)(v67 - 8);
  uint64_t v13 = __chkstk_darwin(v67);
  char v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v62 = (char *)&v58 - v16;
  uint64_t v17 = type metadata accessor for CardTypeConfigurationRoomView();
  __chkstk_darwin(v17);
  char v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_1009540C8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v65 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v64 = (char *)&v58 - v23;
  char v24 = sub_1002A6D00();
  sub_1002AA198(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  if (v24)
  {
    sub_1002AA200((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
LABEL_5:
    LocalizedStringKey.init(stringLiteral:)();
    Label<>.init(_:systemImage:)();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v43 = v61;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v61);
    uint64_t v44 = &v9[*(int *)(v60 + 36)];
    *(void *)uint64_t v44 = KeyPath;
    *((void *)v44 + 1) = 2;
    v44[16] = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v43);
    uint64_t v45 = swift_getKeyPath();
    sub_1000AEF2C((uint64_t)v9, (uint64_t)v11, &qword_1009540B0);
    uint64_t v46 = v63;
    uint64_t v47 = (uint64_t *)&v11[*(int *)(v63 + 36)];
    *uint64_t v47 = v45;
    v47[1] = 0x3FE999999999999ALL;
    sub_10008DB18((uint64_t)v9, &qword_1009540B0);
    static Font.Weight.semibold.getter();
    unint64_t v48 = sub_1002A9DAC();
    View.fontWeight(_:)();
    sub_10008DB18((uint64_t)v11, &qword_1009540B8);
    uint64_t v49 = v62;
    uint64_t v50 = v67;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v62, v15, v67);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v68, v49, v50);
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = v46;
    unint64_t v72 = v48;
    swift_getOpaqueTypeConformance2();
    uint64_t v51 = sub_1000A1370(&qword_1009540F8);
    unint64_t v52 = sub_1002A9F10();
    uint64_t v71 = v51;
    unint64_t v72 = v52;
    swift_getOpaqueTypeConformance2();
    uint64_t v41 = (uint64_t)v64;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v50);
    goto LABEL_6;
  }
  sub_1000AEF2C((uint64_t)&v19[*(int *)(v17 + 24)], (uint64_t)&v71, &qword_10094CEF0);
  sub_1002AA200((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CardTypeConfigurationRoomView);
  uint64_t v25 = v74;
  sub_10008DB18((uint64_t)&v71, &qword_10094CEF0);
  if (!v25) {
    goto LABEL_5;
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v26 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v62 = v29;
  char v32 = v31 & 1;
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v71 = v26;
  unint64_t v72 = v28;
  char v73 = v32;
  char v74 = v30;
  uint64_t v75 = v33;
  uint64_t v76 = 2;
  char v77 = 0;
  uint64_t v78 = v34;
  uint64_t v79 = 0x3FE999999999999ALL;
  static Font.Weight.semibold.getter();
  uint64_t v35 = sub_1000AFA94(&qword_1009540F8);
  unint64_t v36 = sub_1002A9F10();
  long long v37 = v58;
  View.fontWeight(_:)();
  sub_1000A06C0(v26, v28, v32);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v59;
  uint64_t v39 = v69;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v68, v37, v69);
  swift_storeEnumTagMultiPayload();
  unint64_t v40 = sub_1002A9DAC();
  uint64_t v71 = v63;
  unint64_t v72 = v40;
  swift_getOpaqueTypeConformance2();
  uint64_t v71 = v35;
  unint64_t v72 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = (uint64_t)v64;
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
LABEL_6:
  uint64_t v53 = v65;
  sub_1000AEF2C(v41, v65, &qword_1009540C8);
  uint64_t v54 = v70;
  *uint64_t v70 = 0;
  *((unsigned char *)v54 + 8) = 0;
  uint64_t v55 = sub_1000AFA94(&qword_100954108);
  sub_1000AEF2C(v53, (uint64_t)v54 + *(int *)(v55 + 48), &qword_1009540C8);
  uint64_t v56 = (char *)v54 + *(int *)(v55 + 64);
  *(void *)uint64_t v56 = 0;
  v56[8] = 0;
  sub_10008DB18(v41, &qword_1009540C8);
  return sub_10008DB18(v53, &qword_1009540C8);
}

uint64_t sub_1002A8678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100953F88);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_1000AFA94(&qword_100953F90);
  sub_1002A3380(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = static Edge.Set.top.getter();
  uint64_t v8 = static SafeAreaRegions.all.getter();
  sub_1000AEF2C((uint64_t)v6, a1, &qword_100953F88);
  uint64_t v9 = a1 + *(int *)(sub_1000AFA94(&qword_100953F98) + 36);
  *(void *)uint64_t v9 = v8;
  *(unsigned char *)(v9 + 8) = v2;
  return sub_10008DB18((uint64_t)v6, &qword_100953F88);
}

uint64_t sub_1002A876C@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1002A8798()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

void *sub_1002A87C0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)((char *)a2 + v9 + 24);
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 4);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = v13;
      (**(void (***)(void))(v12 - 8))();
    }
    else
    {
      long long v14 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v14;
      *((void *)v10 + 4) = *((void *)v11 + 4);
    }
    uint64_t v15 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v41 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v41;
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = *(void **)((char *)a2 + v16);
    *(void *)((char *)a1 + v16) = v18;
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v19 = a3[11];
    uint64_t v20 = a3[12];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = (char *)a1 + v20;
    char v24 = (char *)a2 + v20;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = a3[13];
    uint64_t v26 = a3[14];
    uint64_t v27 = (void *)((char *)a1 + v25);
    uint64_t v28 = (void *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = (void *)((char *)a1 + v26);
    char v31 = (void *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[15];
    uint64_t v39 = (char *)a2 + v33;
    unint64_t v40 = (char *)a1 + v33;
    uint64_t v34 = type metadata accessor for DynamicTypeSize();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    id v36 = v41;
    id v37 = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    v35(v40, v39, v34);
    v35((char *)a1 + a3[16], (char *)a2 + a3[16], v34);
  }
  return a1;
}

uint64_t sub_1002A8A6C(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[6];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + a2[15];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = a1 + a2[16];

  return v10(v8, v7);
}

void *sub_1002A8BDC(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *((void *)v9 + 4);
    *((void *)v8 + 3) = v10;
    *((void *)v8 + 4) = v11;
    (**(void (***)(void))(v10 - 8))();
  }
  else
  {
    long long v12 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v12;
    *((void *)v8 + 4) = *((void *)v9 + 4);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v39 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v39;
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[13];
  uint64_t v24 = a3[14];
  uint64_t v25 = (void *)((char *)a1 + v23);
  uint64_t v26 = (void *)((char *)a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)((char *)a1 + v24);
  uint64_t v29 = (void *)((char *)a2 + v24);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[15];
  id v37 = (char *)a2 + v31;
  uint64_t v38 = (char *)a1 + v31;
  uint64_t v32 = type metadata accessor for DynamicTypeSize();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  id v34 = v39;
  id v35 = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  v33(v38, v37, v32);
  v33((char *)a1 + a3[16], (char *)a2 + a3[16], v32);
  return a1;
}

void *sub_1002A8E38(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 24);
  if (!*(void *)((char *)a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, char *))(v10 - 8))(v8, v9);
      goto LABEL_13;
    }
LABEL_12:
    long long v11 = *(_OWORD *)v9;
    long long v12 = *((_OWORD *)v9 + 1);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    goto LABEL_13;
  }
  if (!v10)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v8, (uint64_t *)v9);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)((char *)a2 + v17);
  uint64_t v19 = *(void **)((char *)a1 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v20 = v18;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  swift_retain();
  swift_release();
  uint64_t v33 = a3[14];
  id v34 = (void *)((char *)a1 + v33);
  id v35 = (void *)((char *)a2 + v33);
  *id v34 = *v35;
  v34[1] = v35[1];
  swift_retain();
  swift_release();
  uint64_t v36 = a3[15];
  id v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for DynamicTypeSize();
  unint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24);
  v40(v37, v38, v39);
  v40((char *)a1 + a3[16], (char *)a2 + a3[16], v39);
  return a1;
}

char *sub_1002A910C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[11];
  uint64_t v15 = a3[12];
  id v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)id v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  uint64_t v21 = a3[15];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v24 = type metadata accessor for DynamicTypeSize();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(&a1[a3[16]], &a2[a3[16]], v24);
  return a1;
}

char *sub_1002A92E0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v9 = &a1[v8];
  if (*(void *)&a1[v8 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v8]);
  }
  long long v10 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v10;
  *((void *)v9 + 4) = *(void *)&a2[v8 + 32];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = *(void **)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];

  uint64_t v13 = a3[9];
  uint64_t v14 = *(void **)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];

  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_release();
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = &a1[v16];
  uint64_t v20 = &a2[v16];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  swift_release();
  uint64_t v21 = a3[14];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_release();
  uint64_t v26 = a3[15];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for DynamicTypeSize();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40);
  v30(v27, v28, v29);
  v30(&a1[a3[16]], &a2[a3[16]], v29);
  return a1;
}

uint64_t sub_1002A9524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A9538);
}

uint64_t sub_1002A9538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 60);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1002A9668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A967C);
}

uint64_t sub_1002A967C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 60);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1002A97AC()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DynamicTypeSize();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1002A98D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002A9904()
{
  return sub_1002A5894(*(void *)(v0 + 16));
}

unint64_t sub_1002A990C()
{
  unint64_t result = qword_100954028;
  if (!qword_100954028)
  {
    sub_1000A1370(&qword_100954020);
    sub_1002A9980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954028);
  }
  return result;
}

unint64_t sub_1002A9980()
{
  unint64_t result = qword_100954030;
  if (!qword_100954030)
  {
    sub_1000A1370(&qword_100954038);
    sub_1000A132C(&qword_100954040, &qword_100954048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954030);
  }
  return result;
}

uint64_t sub_1002A9A24()
{
  uint64_t v1 = *(void *)(type metadata accessor for CardTypeConfigurationRoomView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1002A77A4(v2);
}

uint64_t sub_1002A9A84@<X0>(uint64_t a1@<X8>)
{
  return sub_1002A7D88(*(void *)(v1 + 16), a1);
}

unint64_t sub_1002A9A8C()
{
  unint64_t result = qword_100954070;
  if (!qword_100954070)
  {
    sub_1000A1370(&qword_100953FA8);
    sub_1000A132C(&qword_100954068, &qword_100953FA0);
    sub_1000A3A88((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954070);
  }
  return result;
}

uint64_t sub_1002A9B64()
{
  return swift_deallocObject();
}

unint64_t sub_1002A9B74()
{
  unint64_t result = qword_100954078;
  if (!qword_100954078)
  {
    sub_1000A1370(&qword_100953FC0);
    sub_1002A9C14();
    sub_1000A132C(&qword_10094C930, &qword_10094C938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954078);
  }
  return result;
}

unint64_t sub_1002A9C14()
{
  unint64_t result = qword_100954080;
  if (!qword_100954080)
  {
    sub_1000A1370(&qword_100953FB8);
    sub_1000A1370(&qword_100953FA8);
    sub_1000A1370(&qword_100953238);
    sub_1002A9A8C();
    sub_1000A132C(&qword_100953248, &qword_100953238);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954080);
  }
  return result;
}

uint64_t sub_1002A9D58@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1002A9D84()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

unint64_t sub_1002A9DAC()
{
  unint64_t result = qword_1009540D0;
  if (!qword_1009540D0)
  {
    sub_1000A1370(&qword_1009540B8);
    sub_1002A9E4C();
    sub_1000A132C(&qword_1009540E8, &qword_1009540F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009540D0);
  }
  return result;
}

unint64_t sub_1002A9E4C()
{
  unint64_t result = qword_1009540D8;
  if (!qword_1009540D8)
  {
    sub_1000A1370(&qword_1009540B0);
    sub_1000A132C(&qword_1009540E0, &qword_1009540A8);
    sub_1000A132C(&qword_100952828, &qword_100952830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009540D8);
  }
  return result;
}

unint64_t sub_1002A9F10()
{
  unint64_t result = qword_100954100;
  if (!qword_100954100)
  {
    sub_1000A1370(&qword_1009540F8);
    sub_1002A9FD0((unint64_t *)&qword_100952820, &qword_100952818, &qword_100952828, &qword_100952830);
    sub_1000A132C(&qword_1009540E8, &qword_1009540F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954100);
  }
  return result;
}

uint64_t sub_1002A9FD0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002AA06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002AA0D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for CardTypeConfigurationRoomView() - 8);
  uint64_t v8 = (char *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_1002A5AA0(a1, a2, v8, a3);
}

uint64_t sub_1002AA160()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002AA198(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002AA200(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1002AA260()
{
  unint64_t result = qword_100954150;
  if (!qword_100954150)
  {
    sub_1000A1370(&qword_10094E448);
    sub_1002AA300();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954150);
  }
  return result;
}

unint64_t sub_1002AA300()
{
  unint64_t result = qword_100954158;
  if (!qword_100954158)
  {
    sub_1000A1370(&qword_10094E440);
    sub_1000A3A88(&qword_100954160, (void (*)(uint64_t))type metadata accessor for DashboardCardView);
    sub_1002AA3AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954158);
  }
  return result;
}

unint64_t sub_1002AA3AC()
{
  unint64_t result = qword_100954168;
  if (!qword_100954168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954168);
  }
  return result;
}

unint64_t sub_1002AA400()
{
  unint64_t result = qword_100954178;
  if (!qword_100954178)
  {
    sub_1000A1370(&qword_100954170);
    sub_10023A81C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954178);
  }
  return result;
}

unint64_t sub_1002AA480()
{
  unint64_t result = qword_100954188;
  if (!qword_100954188)
  {
    sub_1000A1370(&qword_100953F98);
    sub_1000A132C(&qword_100954190, &qword_100953F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954188);
  }
  return result;
}

char *sub_1002AA520(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrow;
  type metadata accessor for TrendArrowIndicatorView();
  unint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1006D13E4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v10[v11] = sub_1005CA0D4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel;
  *(void *)&v10[v12] = sub_1005CA0D4();
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_divider;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v10[v13] = sub_1006D134C();
  v10[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection] = 1;

  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for TrendDetailSummaryView();
  uint64_t v14 = (char *)[super initWithFrame:a1 a2, a3, a4];
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrow];
  uint64_t v16 = v14;
  [v16 addSubview:v15];
  [v16 addSubview:*(void *)&v16[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel]];
  [v16 addSubview:*(void *)&v16[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel]];
  [v16 addSubview:*(void *)&v16[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_divider]];
  sub_1002AA84C();
  sub_1002AA990();

  return v16;
}

void sub_1002AA6D8(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrow);
  uint64_t v13 = (char *)sub_1005F2334(a1);
  id v14 = *(id *)&v13[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  uint64_t v15 = *(void **)(v12 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors);
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors) = v14;
  id v16 = v14;

  sub_100579074();
  *(unsigned char *)(v7 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection) = (_BYTE)a2;
  sub_100579EA0(a2, a6);
  uint64_t v17 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel);
  [v17 setAttributedText:a3];
  objc_super v18 = (char *)sub_1005F2334(a1);
  id v19 = *(id *)&v18[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  [v17 setTextColor:v19];
  uint64_t v20 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel);
  id v21 = String._bridgeToObjectiveC()();
  [v20 setText:v21];
}

void sub_1002AA84C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel);
  uint64_t v2 = self;
  id v3 = [v2 labelColor];
  [v1 setTextColor:v3];

  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel);
  id v5 = [v2 secondaryLabelColor];
  [v4 setTextColor:v5];

  [v4 setNumberOfLines:0];
  uint64_t v6 = (void *)sub_1006758D8();
  [v1 setFont:v6];

  id v7 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v4 setFont:v7];
}

void sub_1002AA990()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel];
  id v2 = [v1 leadingAnchor];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrow];
  id v4 = [v3 trailingAnchor];
  id v58 = [v2 constraintEqualToAnchor:v4 constant:8.0];

  id v5 = [v1 trailingAnchor];
  id v6 = [v0 trailingAnchor];
  id v57 = [v5 constraintEqualToAnchor:v6 constant:-16.0];

  id v7 = [v1 topAnchor];
  id v8 = [v0 topAnchor];
  id v56 = [v7 constraintEqualToAnchor:v8 constant:11.0];

  id v9 = [v3 leadingAnchor];
  id v10 = [v0 leadingAnchor];
  id v54 = [v9 constraintEqualToAnchor:v10 constant:16.0];

  id v11 = [v3 widthAnchor];
  id v52 = [v11 constraintEqualToConstant:60.0];

  id v12 = [v3 heightAnchor];
  id v50 = [v12 constraintEqualToConstant:60.0];

  id v13 = [v3 topAnchor];
  id v14 = [v1 topAnchor];
  [v1 _capOffsetFromBoundsTop];
  id v48 = [v13 constraintEqualToAnchor:v14 constant:-v15];

  id v16 = [v3 bottomAnchor];
  id v17 = [v0 bottomAnchor];
  id v46 = [v16 constraintLessThanOrEqualToAnchor:v17 constant:-11.0];

  objc_super v18 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel];
  id v19 = [v18 leadingAnchor];
  id v20 = [v1 leadingAnchor];
  id v68 = [v19 constraintEqualToAnchor:v20];

  id v21 = [v18 trailingAnchor];
  id v22 = [v1 trailingAnchor];
  id v66 = [v21 constraintEqualToAnchor:v22];

  id v23 = [v18 topAnchor];
  id v24 = [v1 bottomAnchor];
  id v64 = [v23 constraintEqualToAnchor:v24];

  id v25 = [v18 bottomAnchor];
  id v26 = [v0 bottomAnchor];
  id v63 = [v25 constraintLessThanOrEqualToAnchor:v26 constant:-11.0];

  uint64_t v27 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_divider];
  id v28 = [v27 leadingAnchor];
  id v29 = [v0 leadingAnchor];
  id v62 = [v28 constraintEqualToAnchor:v29 constant:16.0];

  id v30 = [v27 trailingAnchor];
  id v31 = [v0 trailingAnchor];
  id v61 = [v30 constraintEqualToAnchor:v31];

  id v32 = [v27 heightAnchor];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v60 = [v32 constraintEqualToConstant:*(double *)&qword_100998308];

  id v33 = [v27 bottomAnchor];
  id v34 = [v0 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  id v45 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100754590;
  *(void *)(v36 + 32) = v54;
  *(void *)(v36 + 40) = v52;
  *(void *)(v36 + 48) = v50;
  *(void *)(v36 + 56) = v48;
  *(void *)(v36 + 64) = v46;
  *(void *)(v36 + 72) = v58;
  *(void *)(v36 + 80) = v57;
  *(void *)(v36 + 88) = v56;
  *(void *)(v36 + 96) = v68;
  *(void *)(v36 + 104) = v66;
  *(void *)(v36 + 112) = v64;
  *(void *)(v36 + 120) = v63;
  *(void *)(v36 + 128) = v62;
  *(void *)(v36 + 136) = v61;
  *(void *)(v36 + 144) = v60;
  *(void *)(v36 + 152) = v35;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v55 = v54;
  id v53 = v52;
  id v51 = v50;
  id v49 = v48;
  id v47 = v46;
  id v37 = v58;
  id v38 = v57;
  id v39 = v56;
  id v59 = v68;
  id v67 = v66;
  id v65 = v64;
  id v40 = v63;
  id v41 = v62;
  id v42 = v61;
  id v43 = v60;
  id v44 = v35;
  v69.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v45 activateConstraints:v69.super.isa];
}

uint64_t sub_1002AB198(void *a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrow;
  type metadata accessor for TrendArrowIndicatorView();
  id v5 = v1;
  *(void *)&v1[v4] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_valueLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v5[v6] = sub_1005CA0D4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_coachingLabel;
  *(void *)&v5[v7] = sub_1005CA0D4();
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_divider;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  id v9 = sub_1006D134C();

  *(void *)&v5[v8] = v9;
  v5[OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection] = 1;

  id v10 = *(void **)&v5[v8];
  type metadata accessor for TrendDetailSummaryView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1002AB2E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailSummaryView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendDetailSummaryView()
{
  return self;
}

void sub_1002AB3A8()
{
  uint64_t v1 = (void *)*(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection);
  if (v1 == 1) {
    sub_100579EA0(v1, 0);
  }
  else {
    sub_10057A828(v1);
  }
}

void sub_1002AB3F8()
{
  sub_100579EA0((void *)*(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection), *(unsigned char *)(*v0 + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection) != 1);
}

char *sub_1002AB448(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = _swiftEmptyArrayStorage;
  id v5 = &v2[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType];
  *(void *)id v5 = 0;
  *((_WORD *)v5 + 4) = 512;
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterViewController] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame];
  uint64_t v7 = self;
  uint64_t v8 = v2;
  id v9 = [v7 mainScreen];
  [v9 bounds];
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;

  v24.origin.CGFloat x = v11;
  v24.origin.CGFloat y = v13;
  v24.size.CGFloat width = v15;
  v24.size.CGFloat height = v17;
  CGFloat Width = CGRectGetWidth(v24);
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *((CGFloat *)v6 + 2) = Width;
  *((void *)v6 + 3) = 0x404F000000000000;
  id v19 = &v8[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_action];
  *(void *)id v19 = a1;
  *((void *)v19 + 1) = a2;
  swift_retain();

  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for HistoryFilterUIViewController();
  id v20 = [super initWithNibName:0 bundle:0];
  unint64_t result = (char *)[v20 view];
  if (result)
  {
    id v22 = result;
    [result setFrame:*(double *)&v20[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame], *(double *)&v20[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 8], *(double *)&v20[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 16], *(double *)&v20[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 24]];

    sub_1002AB5F0();
    swift_release();
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002AB5F0()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2) {
    goto LABEL_18;
  }
  id v3 = v2;
  id v4 = [v2 subviews];

  sub_1002ABA64();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_11;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    id v9 = v8;
    [v8 removeFromSuperview];
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  State.init(wrappedValue:)();
  id v10 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100954238));
  uint64_t v11 = UIHostingController.init(rootView:)();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterViewController;
  CGFloat v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterViewController];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterViewController] = v11;

  double v14 = *(void **)&v1[v12];
  if (!v14) {
    return;
  }
  id v15 = v14;
  id v16 = [v15 view];
  if (v16)
  {
    CGFloat v17 = v16;
    [v16 setFrame:*(double *)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame], *(double *)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 8], *(double *)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 16], *(double *)&v1[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame + 24]];
    id v18 = [v1 view];
    if (v18)
    {
      id v19 = v18;
      [v18 addSubview:v17];

      id v15 = v19;
      goto LABEL_15;
    }
LABEL_19:
    __break(1u);
    return;
  }
LABEL_15:
}

void sub_1002AB87C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(Strong
                                                 + OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_action);
    swift_retain();

    v6(a1, a2);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v7 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    id v8 = &v7[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType];
    *(void *)id v8 = a1;
    *((_WORD *)v8 + 4) = a2;
  }
}

id sub_1002AB9AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HistoryFilterUIViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for HistoryFilterUIViewController()
{
  return self;
}

unint64_t sub_1002ABA64()
{
  unint64_t result = qword_10094E530;
  if (!qword_10094E530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094E530);
  }
  return result;
}

uint64_t sub_1002ABAA4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002ABADC(uint64_t a1, uint64_t a2)
{
}

void sub_1002ABAE4()
{
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType];
  *(void *)uint64_t v1 = 0;
  *((_WORD *)v1 + 4) = 512;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterViewController] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_filterFrame];
  id v3 = [self mainScreen];
  [v3 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v13.origin.CGFloat x = v5;
  v13.origin.CGFloat y = v7;
  v13.size.CGFloat width = v9;
  v13.size.CGFloat height = v11;
  CGFloat Width = CGRectGetWidth(v13);
  *(void *)objc_super v2 = 0;
  *((void *)v2 + 1) = 0;
  *((CGFloat *)v2 + 2) = Width;
  *((void *)v2 + 3) = 0x404F000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1002ABC04(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DailyGoalChartPoint(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for DailyGoalChartPoint(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyGoalChartPoint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyGoalChartPoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyGoalChartPoint()
{
  return &type metadata for DailyGoalChartPoint;
}

ValueMetadata *type metadata accessor for FriendCardActionContext()
{
  return &type metadata for FriendCardActionContext;
}

void *sub_1002ABD7C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    a1 = (void *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    double v8 = (int *)type metadata accessor for FriendCard();
    uint64_t v9 = v8[5];
    double v10 = (char *)a1 + v9;
    CGFloat v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    sub_100091494(*(void *)v11, v13, v14);
    *(void *)double v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
    *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    uint64_t v15 = v8[9];
    id v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v16;
    uint64_t v17 = v8[10];
    id v18 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v18;
    uint64_t v19 = v8[11];
    id v20 = *(void **)((char *)a2 + v19);
    *(void *)((char *)a1 + v19) = v20;
    uint64_t v21 = v8[12];
    id v22 = *(void **)((char *)a2 + v21);
    *(void *)((char *)a1 + v21) = v22;
    uint64_t v23 = v8[13];
    CGRect v24 = *(void **)((char *)a2 + v23);
    *(void *)((char *)a1 + v23) = v24;
    uint64_t v25 = *(int *)(a3 + 20);
    id v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *((void *)v27 + 3);
    id v29 = v16;
    id v30 = v18;
    id v31 = v20;
    id v32 = v22;
    id v33 = v24;
    if (v28)
    {
      uint64_t v34 = *((void *)v27 + 4);
      *((void *)v26 + 3) = v28;
      *((void *)v26 + 4) = v34;
      (**(void (***)(char *, char *, uint64_t))(v28 - 8))(v26, v27, v28);
    }
    else
    {
      long long v36 = *((_OWORD *)v27 + 1);
      *(_OWORD *)id v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v36;
      *((void *)v26 + 4) = *((void *)v27 + 4);
    }
  }
  return a1;
}

uint64_t sub_1002ABF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (int *)type metadata accessor for FriendCard();
  sub_1000917F8(*(void *)(a1 + v5[5]), *(void *)(a1 + v5[5] + 8), *(unsigned char *)(a1 + v5[5] + 16));

  uint64_t result = a1 + *(int *)(a2 + 20);
  if (*(void *)(result + 24))
  {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  }
  return result;
}

uint64_t sub_1002AC04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for FriendCard();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  sub_100091494(*(void *)v10, v12, v13);
  *(void *)uint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(unsigned char *)(v9 + 16) = v13;
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  uint64_t v14 = v7[9];
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  uint64_t v16 = v7[10];
  uint64_t v17 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v17;
  uint64_t v18 = v7[11];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  uint64_t v20 = v7[12];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v21;
  uint64_t v22 = v7[13];
  uint64_t v23 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v23;
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(v26 + 24);
  id v28 = v15;
  id v29 = v17;
  id v30 = v19;
  id v31 = v21;
  id v32 = v23;
  if (v27)
  {
    uint64_t v33 = *(void *)(v26 + 32);
    *(void *)(v25 + 24) = v27;
    *(void *)(v25 + 32) = v33;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(v25, v26, v27);
  }
  else
  {
    long long v34 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v34;
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
  }
  return a1;
}

uint64_t sub_1002AC1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for FriendCard();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  sub_100091494(*(void *)v10, v12, v13);
  uint64_t v14 = *(void *)v9;
  uint64_t v15 = *(void *)(v9 + 8);
  *(void *)uint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  char v16 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v13;
  sub_1000917F8(v14, v15, v16);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  uint64_t v17 = v7[9];
  uint64_t v18 = *(void **)(a1 + v17);
  uint64_t v19 = *(void **)(a2 + v17);
  *(void *)(a1 + v17) = v19;
  id v20 = v19;

  uint64_t v21 = v7[10];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  uint64_t v25 = v7[11];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  uint64_t v29 = v7[12];
  id v30 = *(void **)(a1 + v29);
  id v31 = *(void **)(a2 + v29);
  *(void *)(a1 + v29) = v31;
  id v32 = v31;

  uint64_t v33 = v7[13];
  long long v34 = *(void **)(a2 + v33);
  uint64_t v35 = *(void **)(a1 + v33);
  *(void *)(a1 + v33) = v34;
  id v36 = v34;

  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = a1 + v37;
  id v39 = (long long *)(a2 + v37);
  uint64_t v40 = *((void *)v39 + 3);
  if (!*(void *)(a1 + v37 + 24))
  {
    if (v40)
    {
      *(void *)(v38 + 24) = v40;
      *(void *)(v38 + 32) = *((void *)v39 + 4);
      (**(void (***)(uint64_t, long long *))(v40 - 8))(v38, v39);
      return a1;
    }
LABEL_7:
    long long v41 = *v39;
    long long v42 = v39[1];
    *(void *)(v38 + 32) = *((void *)v39 + 4);
    *(_OWORD *)uint64_t v38 = v41;
    *(_OWORD *)(v38 + 16) = v42;
    return a1;
  }
  if (!v40)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
    goto LABEL_7;
  }
  sub_10009EDF0((uint64_t *)v38, (uint64_t *)v39);
  return a1;
}

uint64_t sub_1002AC3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for FriendCard();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *(void *)(a1 + v7[10]) = *(void *)(a2 + v7[10]);
  *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t sub_1002AC4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for FriendCard();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  char v14 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v11;
  sub_1000917F8(v12, v13, v14);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  uint64_t v15 = v7[9];
  char v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  uint64_t v17 = v7[10];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = v7[11];
  id v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = v7[12];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  uint64_t v23 = v7[13];
  id v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = a1 + v25;
  if (*(void *)(a1 + v25 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + v25);
  }
  long long v27 = *(_OWORD *)(a2 + v25 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)(a2 + v25);
  *(_OWORD *)(v26 + 16) = v27;
  *(void *)(v26 + 32) = *(void *)(a2 + v25 + 32);
  return a1;
}

uint64_t sub_1002AC62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AC640);
}

uint64_t sub_1002AC640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FriendCard();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1002AC710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AC724);
}

uint64_t sub_1002AC724(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FriendCard();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
  return result;
}

uint64_t sub_1002AC7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002AC800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v32 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_1009542D0);
  uint64_t v5 = __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_1000AFA94(&qword_1009542D8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009542E0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v1 + *(int *)(type metadata accessor for FriendCard() + 40));
  if (v17)
  {
    id v18 = v17;
    sub_1002ACC44(v18, (uint64_t)v16);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v16, v13);
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = sub_1000A1370(&qword_1009542E8);
    uint64_t v20 = sub_1000A1370(&qword_1009542F0);
    unint64_t v21 = sub_1002AD6A4();
    uint64_t v35 = v20;
    unint64_t v36 = v21;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v35 = v19;
    unint64_t v36 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1000E2118();
    _ConditionalContent<>.init(storage:)();

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    ProgressView<>.init<>()();
    uint64_t v24 = static Alignment.center.getter();
    double v26 = sub_1004DD0F0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v7, 0.0, 1, INFINITY, 0, v24, v25);
    (*(void (**)(char *, uint64_t, double))(v32 + 8))(v4, v2, v26);
    sub_1002AD63C((uint64_t)v7, (uint64_t)v9);
    sub_1000AEF2C((uint64_t)v9, (uint64_t)v12, &qword_1009542D0);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = sub_1000A1370(&qword_1009542E8);
    uint64_t v28 = sub_1000A1370(&qword_1009542F0);
    unint64_t v29 = sub_1002AD6A4();
    uint64_t v35 = v28;
    unint64_t v36 = v29;
    uint64_t v30 = swift_getOpaqueTypeConformance2();
    uint64_t v35 = v27;
    unint64_t v36 = v30;
    swift_getOpaqueTypeConformance2();
    sub_1000E2118();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18((uint64_t)v9, &qword_1009542D0);
  }
}

uint64_t sub_1002ACC44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a1;
  uint64_t v40 = a2;
  uint64_t v4 = type metadata accessor for FriendCardView();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v38 = *(void *)(v39 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v33 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100954318);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100954308);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_1009542F0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000AFA94(&qword_1009542E8);
  uint64_t v18 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v3;
  uint64_t v22 = v34;
  sub_1002AD0BC(v21, v34, (uint64_t)v10);
  sub_1000AEF2C((uint64_t)v10, (uint64_t)v14, &qword_100954318);
  v14[*(int *)(v12 + 44)] = 0;
  sub_10008DB18((uint64_t)v10, &qword_100954318);
  uint64_t v23 = static Alignment.center.getter();
  sub_1004DD094(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, INFINITY, 0, v23, v24);
  sub_10008DB18((uint64_t)v14, &qword_100954308);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v25 = sub_1002AD6A4();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v36);
  sub_10008DB18((uint64_t)v17, &qword_1009542F0);
  uint64_t v26 = v37;
  sub_1002ADB88(v32[1], v37, (uint64_t (*)(void))type metadata accessor for FriendCardView);
  unint64_t v27 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v22;
  sub_1002ADB20(v26, v28 + v27, (uint64_t (*)(void))type metadata accessor for FriendCardView);
  id v29 = v22;
  uint64_t v41 = v15;
  unint64_t v42 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v35;
  View.onTapGesture(count:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v30);
}

uint64_t sub_1002AD0BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v50 = a2;
  uint64_t v5 = (int *)type metadata accessor for FriendCardRingsView();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)&v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v45[-v9];
  uint64_t v49 = sub_1000AFA94(&qword_100954348);
  __chkstk_darwin(v49);
  uint64_t v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = type metadata accessor for FriendCompetitionView();
  uint64_t v13 = __chkstk_darwin(v51);
  uint64_t v15 = (uint64_t *)&v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v45[-v16];
  uint64_t v18 = (int *)type metadata accessor for FriendCard();
  uint64_t v19 = *(void **)(a1 + v18[12]);
  if (!v19) {
    goto LABEL_6;
  }
  id v20 = v19;
  if (![v20 stage] || !*(void *)(a1 + v18[9]))
  {

LABEL_6:
    uint64_t v31 = v18[11];
    uint64_t v48 = a3;
    uint64_t v32 = *(void **)(a1 + v31);
    uint64_t v33 = *(void **)(a1 + v18[13]);
    uint64_t v34 = a1 + v18[5];
    uint64_t v36 = *(void *)v34;
    uint64_t v35 = *(void *)(v34 + 8);
    unsigned __int8 v37 = *(unsigned char *)(v34 + 16);
    LODWORD(v47) = v37;
    *uint64_t v8 = swift_getKeyPath();
    sub_1000AFA94(&qword_10094C578);
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = v10;
    uint64_t v38 = (uint64_t)v12;
    uint64_t v39 = v50;
    *(uint64_t *)((char *)v8 + v5[5]) = (uint64_t)v50;
    *(uint64_t *)((char *)v8 + v5[6]) = (uint64_t)v32;
    *(uint64_t *)((char *)v8 + v5[7]) = (uint64_t)v33;
    uint64_t v40 = (char *)v8 + v5[8];
    *(void *)uint64_t v40 = v36;
    *((void *)v40 + 1) = v35;
    v40[16] = v37;
    sub_1002ADB20((uint64_t)v8, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FriendCardRingsView);
    sub_1002ADB88((uint64_t)v17, v38, (uint64_t (*)(void))type metadata accessor for FriendCardRingsView);
    swift_storeEnumTagMultiPayload();
    id v41 = v32;
    id v42 = v33;
    id v43 = v39;
    sub_100091494(v36, v35, (char)v47);
    sub_1002AD910(&qword_100954330, (void (*)(uint64_t))type metadata accessor for FriendCompetitionView);
    sub_1002AD910(&qword_100954338, (void (*)(uint64_t))type metadata accessor for FriendCardRingsView);
    _ConditionalContent<>.init(storage:)();
    uint64_t v30 = type metadata accessor for FriendCardRingsView;
    return sub_1002ADBF0((uint64_t)v17, (uint64_t (*)(void))v30);
  }
  id v47 = *(id *)(a1 + v18[9]);
  uint64_t v21 = (uint64_t)v47;
  uint64_t v22 = a1 + v18[5];
  uint64_t v23 = *(void *)v22;
  uint64_t v48 = *(void *)(v22 + 8);
  uint64_t v24 = v48;
  int v46 = *(unsigned __int8 *)(v22 + 16);
  *uint64_t v15 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  unint64_t v25 = (int *)v51;
  *(uint64_t *)((char *)v15 + *(int *)(v51 + 20)) = v21;
  uint64_t v26 = v50;
  *(uint64_t *)((char *)v15 + v25[6]) = (uint64_t)v50;
  *(uint64_t *)((char *)v15 + v25[7]) = (uint64_t)v20;
  unint64_t v27 = (char *)v15 + v25[8];
  *(void *)unint64_t v27 = v23;
  *((void *)v27 + 1) = v24;
  LOBYTE(v24) = v46;
  v27[16] = v46;
  sub_1002ADB20((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FriendCompetitionView);
  sub_1002ADB88((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FriendCompetitionView);
  swift_storeEnumTagMultiPayload();
  id v28 = v47;
  id v29 = v26;
  sub_100091494(v23, v48, v24);
  sub_1002AD910(&qword_100954330, (void (*)(uint64_t))type metadata accessor for FriendCompetitionView);
  sub_1002AD910(&qword_100954338, (void (*)(uint64_t))type metadata accessor for FriendCardRingsView);
  _ConditionalContent<>.init(storage:)();
  uint64_t v30 = type metadata accessor for FriendCompetitionView;
  return sub_1002ADBF0((uint64_t)v17, (uint64_t (*)(void))v30);
}

uint64_t sub_1002AD580(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FriendCardView();
  sub_1000AEF2C(a2 + *(int *)(v4 + 20), (uint64_t)v9, &qword_10094C750);
  if (!v10) {
    return sub_10008DB18((uint64_t)v9, &qword_10094C750);
  }
  uint64_t v8[3] = &type metadata for FriendCardActionContext;
  v8[0] = a1;
  uint64_t v5 = (char *)*sub_10007E4EC(v9, v10);
  id v6 = a1;
  sub_1004F9178(a2, (uint64_t)v8, v5);
  sub_10008DB18((uint64_t)v8, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v9);
}

uint64_t sub_1002AD63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009542D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002AD6A4()
{
  unint64_t result = qword_1009542F8;
  if (!qword_1009542F8)
  {
    sub_1000A1370(&qword_1009542F0);
    sub_1002AD720();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009542F8);
  }
  return result;
}

unint64_t sub_1002AD720()
{
  unint64_t result = qword_100954300;
  if (!qword_100954300)
  {
    sub_1000A1370(&qword_100954308);
    sub_1002AD7C0();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954300);
  }
  return result;
}

unint64_t sub_1002AD7C0()
{
  unint64_t result = qword_100954310;
  if (!qword_100954310)
  {
    sub_1000A1370(&qword_100954318);
    sub_1002AD834();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954310);
  }
  return result;
}

unint64_t sub_1002AD834()
{
  unint64_t result = qword_100954320;
  if (!qword_100954320)
  {
    sub_1000A1370(&qword_100954328);
    sub_1002AD910(&qword_100954330, (void (*)(uint64_t))type metadata accessor for FriendCompetitionView);
    sub_1002AD910(&qword_100954338, (void (*)(uint64_t))type metadata accessor for FriendCardRingsView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954320);
  }
  return result;
}

uint64_t sub_1002AD910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002AD958()
{
  uint64_t v1 = (int *)(type metadata accessor for FriendCardView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  uint64_t v4 = (int *)type metadata accessor for FriendCard();
  sub_1000917F8(*(void *)(v0 + v2 + v4[5]), *(void *)(v0 + v2 + v4[5] + 8), *(unsigned char *)(v0 + v2 + v4[5] + 16));

  uint64_t v5 = v0 + v2 + v1[7];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }

  return swift_deallocObject();
}

uint64_t sub_1002ADAB4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FriendCardView() - 8);
  unint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1002AD580(v2, v3);
}

uint64_t sub_1002ADB20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002ADB88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002ADBF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1002ADC54()
{
  unint64_t result = qword_100954350;
  if (!qword_100954350)
  {
    sub_1000A1370(&qword_100954358);
    sub_1000A1370(&qword_1009542E8);
    sub_1000A1370(&qword_1009542F0);
    sub_1002AD6A4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000E2118();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954350);
  }
  return result;
}

char *sub_1002ADD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_insetContentView;
  id v7 = objc_allocWithZone((Class)UIView);
  uint64_t v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view;
  type metadata accessor for TrendListMetricView();
  *(void *)&v8[v10] = sub_1006D13E4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v8[v11] = sub_1005CA0D4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_button;
  id v13 = [self buttonWithType:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v12] = v13;
  uint64_t v14 = &v8[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction];
  *(void *)uint64_t v14 = ASFriendListDisplayMode.id.getter;
  *((void *)v14 + 1) = 0;
  v8[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_arrowDirection] = 1;
  uint64_t v15 = &v8[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric];
  uint64_t v16 = type metadata accessor for TrendListMetric();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);

  if (a3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  v40.receiver = v8;
  v40.super_class = (Class)type metadata accessor for TrendingDownTableViewCell();
  uint64_t v18 = (char *)[super initWithStyle:a1 reuseIdentifier:v17];

  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_insetContentView;
  id v20 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_insetContentView];
  uint64_t v21 = v18;
  id v22 = v20;
  id v23 = sub_10049E184();
  [v22 setBackgroundColor:v23];

  id v24 = [*(id *)&v18[v19] layer];
  [v24 setCornerRadius:sub_10049E1B0()];

  unint64_t v25 = *(void **)&v18[v19];
  uint64_t v26 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_button];
  [v25 addSubview:v26];
  [v26 addTarget:v21 action:"selectionButtonTappedWithSender:" forControlEvents:64];
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view;
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view]];
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel;
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel]];
  id v29 = [v21 contentView];
  [v29 addSubview:v25];

  [*(id *)&v21[v27] setUserInteractionEnabled:0];
  uint64_t v30 = *(void **)&v21[v28];
  [v30 setUserInteractionEnabled:0];
  sub_1002AE254();
  uint64_t v31 = self;
  id v32 = v30;
  id v33 = [v31 _preferredFontForTextStyle:UIFontTextStyleCaption1 variant:256];
  [v32 setFont:v33];

  uint64_t v34 = *(void **)&v21[v28];
  uint64_t v35 = self;
  id v36 = v34;
  id v37 = [v35 secondaryLabelColor];
  [v36 setTextColor:v37];

  id v38 = *(id *)&v21[v28];
  [v38 setNumberOfLines:0];

  return v21;
}

void sub_1002AE254()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_insetContentView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 topAnchor];

  id v69 = [v3 constraintEqualToAnchor:v5 constant:sub_10049E1C0()];
  id v6 = [v2 leadingAnchor];
  id v7 = [v0 contentView];
  id v8 = [v7 leadingAnchor];

  sub_10049E1C0();
  id v67 = [v6 constraintEqualToAnchor:v8 constant:v9];

  id v10 = [v2 trailingAnchor];
  id v11 = [v0 contentView];
  id v12 = [v11 trailingAnchor];

  sub_10049E1C0();
  id v65 = [v10 constraintEqualToAnchor:v12 constant:-v13];

  id v14 = [v2 bottomAnchor];
  id v15 = [v0 contentView];
  id v16 = [v15 bottomAnchor];

  sub_10049E1C0();
  id v63 = [v14 constraintEqualToAnchor:v16 constant:-v17];

  uint64_t v18 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view];
  id v19 = [v18 leadingAnchor];
  id v20 = [v2 leadingAnchor];
  id v61 = [v19 constraintEqualToAnchor:v20];

  id v21 = [v18 trailingAnchor];
  id v22 = [v2 trailingAnchor];
  id v59 = [v21 constraintEqualToAnchor:v22];

  id v23 = [v18 topAnchor];
  id v24 = [v2 topAnchor];
  id v57 = [v23 constraintEqualToAnchor:v24];

  unint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel];
  id v26 = [v25 topAnchor];
  id v27 = [v18 bottomAnchor];
  id v56 = [v26 constraintEqualToAnchor:v27 constant:-14.0];

  id v28 = [v25 leadingAnchor];
  id v29 = [*(id *)&v18[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel] leadingAnchor];
  id v75 = [v28 constraintEqualToAnchor:v29];

  id v30 = [v25 trailingAnchor];
  id v31 = [v2 trailingAnchor];
  id v76 = [v30 constraintEqualToAnchor:v31 constant:-16.0];

  id v32 = [v25 bottomAnchor];
  id v33 = [v2 bottomAnchor];
  id v74 = [v32 constraintEqualToAnchor:v33 constant:-14.0];

  LODWORD(v34) = 1148846080;
  [v25 setContentHuggingPriority:1 forAxis:v34];
  LODWORD(v35) = 1148846080;
  [v25 setContentCompressionResistancePriority:1 forAxis:v35];
  id v36 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_button];
  id v37 = [v36 leadingAnchor];
  id v38 = [v2 leadingAnchor];
  id v73 = [v37 constraintEqualToAnchor:v38];

  id v39 = [v36 trailingAnchor];
  id v40 = [v2 trailingAnchor];
  id v72 = [v39 constraintEqualToAnchor:v40];

  id v41 = [v36 topAnchor];
  id v42 = [v2 topAnchor];
  id v71 = [v41 constraintEqualToAnchor:v42];

  id v43 = [v36 bottomAnchor];
  id v44 = [v2 bottomAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  id v55 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_10075A430;
  *(void *)(v46 + 32) = v69;
  *(void *)(v46 + 40) = v67;
  *(void *)(v46 + 48) = v65;
  *(void *)(v46 + 56) = v63;
  *(void *)(v46 + 64) = v61;
  *(void *)(v46 + 72) = v59;
  *(void *)(v46 + 80) = v57;
  *(void *)(v46 + 88) = v56;
  *(void *)(v46 + 96) = v75;
  *(void *)(v46 + 104) = v76;
  *(void *)(v46 + 112) = v74;
  *(void *)(v46 + 120) = v73;
  *(void *)(v46 + 128) = v72;
  *(void *)(v46 + 136) = v71;
  *(void *)(v46 + 144) = v45;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v70 = v69;
  id v68 = v67;
  id v66 = v65;
  id v64 = v63;
  id v62 = v61;
  id v60 = v59;
  id v58 = v57;
  id v47 = v56;
  id v48 = v75;
  id v49 = v76;
  id v50 = v74;
  id v51 = v73;
  id v52 = v72;
  id v53 = v71;
  id v54 = v45;
  v77.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v55 activateConstraints:v77.super.isa];
}

uint64_t sub_1002AEADC(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_insetContentView;
  id v5 = objc_allocWithZone((Class)UIView);
  id v6 = v2;
  id v7 = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v2[v4] = v7;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view;
  type metadata accessor for TrendListMetricView();
  *(void *)&v6[v8] = sub_1006D13E4();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v6[v9] = sub_1005CA0D4();
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_button;
  id v11 = [self buttonWithType:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];

  *(void *)&v6[v10] = v11;
  id v12 = &v6[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction];
  *(void *)id v12 = ASFriendListDisplayMode.id.getter;
  *((void *)v12 + 1) = 0;
  v6[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_arrowDirection] = 1;
  uint64_t v13 = (uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric];
  uint64_t v14 = type metadata accessor for TrendListMetric();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);

  swift_release();
  sub_1002AF0BC(v13);

  type metadata accessor for TrendingDownTableViewCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1002AED34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendingDownTableViewCell();
  return [super dealloc];
}

uint64_t sub_1002AEDFC()
{
  return type metadata accessor for TrendingDownTableViewCell();
}

uint64_t type metadata accessor for TrendingDownTableViewCell()
{
  uint64_t result = qword_1009543B8;
  if (!qword_1009543B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002AEE50()
{
  sub_1002AEF0C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002AEF0C()
{
  if (!qword_1009543C8)
  {
    type metadata accessor for TrendListMetric();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009543C8);
    }
  }
}

id sub_1002AEF64()
{
  id result = (id)*(unsigned __int8 *)(*(void *)(*v0 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view)
                                  + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
  if (result != 1) {
    return sub_10057A828(result);
  }
  return result;
}

uint64_t sub_1002AEFB8()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_view);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  sub_1001FAB90((uint64_t)sub_1002AF094, v2);

  return swift_release();
}

uint64_t sub_1002AF05C()
{
  return swift_deallocObject();
}

void sub_1002AF094()
{
  sub_1005AF774(*(void *)(v0 + 16));
}

uint64_t sub_1002AF09C()
{
  return 0x676E69646E657254;
}

uint64_t sub_1002AF0BC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095BFB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002AF11C()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TrendListMetric();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric;
  swift_beginAccess();
  sub_1002AF2AC(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1002AF0BC((uint64_t)v3);
  }
  sub_1000AB590((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = *(void (**)(char *))(v0 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction);
  swift_retain();
  v10(v7);
  swift_release();
  return sub_1000AB854((uint64_t)v7);
}

uint64_t sub_1002AF2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095BFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AF314()
{
  sub_1002B0F38(v0, (uint64_t)&v5);
  uint64_t v1 = v5;
  sub_1002B0F38(v0, (uint64_t)v6);
  if (v7 < 0)
  {
    v7 &= ~0x80u;
    id v3 = v1;
    NSObject.hash(into:)();
    return sub_1002B1370(v0, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF90C);
  }
  else
  {
    uint64_t v2 = v6[5];
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v2)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_bridgeObjectRetain();
    String.hash(into:)();
    return swift_bridgeObjectRelease();
  }
}

Swift::Int sub_1002AF46C()
{
  sub_1002B0F38(v0, (uint64_t)&v5);
  uint64_t v1 = v5;
  Hasher.init(_seed:)();
  sub_1002B0F38(v0, (uint64_t)v6);
  if (v7 < 0)
  {
    v7 &= ~0x80u;
    id v3 = v1;
    NSObject.hash(into:)();
    sub_1002B1370(v0, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF90C);
  }
  else
  {
    uint64_t v2 = v6[5];
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v2)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  return Hasher._finalize()();
}

Swift::Int sub_1002AF5D0()
{
  sub_1002B0F38(v0, (uint64_t)v2);
  return sub_1002AF46C();
}

uint64_t sub_1002AF608()
{
  sub_1002B0F38(v0, (uint64_t)v2);
  return sub_1002AF314();
}

Swift::Int sub_1002AF648()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  int v9 = *(char *)(v0 + 64);
  Hasher.init(_seed:)();
  if (v9 < 0)
  {
    id v10 = v2;
    NSObject.hash(into:)();
    sub_1002AF90C(v2, v1, v4, v3, v6, v5, v8, v7, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v5)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  return Hasher._finalize()();
}

uint64_t sub_1002AF78C(uint64_t a1, uint64_t a2)
{
  sub_1002B0F38(a1, (uint64_t)v4);
  sub_1002B0F38(a2, (uint64_t)v5);
  return sub_1002B1150((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1002AF7D8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel()
{
  return self;
}

ValueMetadata *type metadata accessor for WorkoutDetailMapAndWeatherView()
{
  return &type metadata for WorkoutDetailMapAndWeatherView;
}

id sub_1002AF84C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 < 0)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

void destroy for WeatherItem(uint64_t a1)
{
}

void sub_1002AF90C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 < 0)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for WeatherItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1002AF84C(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for WeatherItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1002AF84C(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  id v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1002AF90C(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 initializeWithTake for WorkoutDetailWeatherElementView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for WeatherItem(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  long long v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1002AF90C(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 64) & 0x7E | (*(unsigned __int8 *)(a1 + 64) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for WeatherItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 64) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1002AFC30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64) >> 7;
}

uint64_t sub_1002AFC3C(uint64_t result)
{
  *(unsigned char *)(result + 64) &= ~0x80u;
  return result;
}

uint64_t sub_1002AFC4C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = *(unsigned char *)(result + 64) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for WeatherItem()
{
  return &type metadata for WeatherItem;
}

uint64_t sub_1002AFC70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002AFC8C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_1002AFCC8()
{
  qword_1009543D0 = sub_1000FC040();
}

uint64_t sub_1002AFCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v65 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_1009544A0);
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v64 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v63 = (char *)&v59 - v8;
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10) {
    int64_t v11 = ((unint64_t)(v10 - 1) >> 1) + 1;
  }
  else {
    int64_t v11 = 0;
  }
  id v73 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_1001C9220(0, v11, 0);
  char v12 = v73;
  if (v10)
  {
    uint64_t v61 = a1;
    uint64_t v62 = a2;
    a2 = 0;
    uint64_t v13 = 0;
    unint64_t v14 = 0;
    unint64_t v68 = (v10 + 1) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v69 = v10;
    a1 = 2;
    uint64_t v15 = 32;
    uint64_t v72 = v9;
    do
    {
      if (v10 >= a1) {
        uint64_t v16 = a1;
      }
      else {
        uint64_t v16 = v10;
      }
      if (v68 == v14)
      {
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      uint64_t v17 = v12;
      if (v10 >= (uint64_t)(v14 + 2)) {
        char v12 = (void *)(v14 + 2);
      }
      else {
        char v12 = (void *)v10;
      }
      if ((unint64_t)v12 < v14) {
        goto LABEL_74;
      }
      unint64_t v18 = *(void *)(v9 + 16);
      if (v18 < v14 || v18 < (unint64_t)v12) {
        goto LABEL_75;
      }
      uint64_t v70 = v15;
      uint64_t v71 = v13;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = (void *)swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = _swiftEmptyArrayStorage;
      }
      uint64_t v20 = v19[2];
      swift_release();
      if (v16 + a2 == v20)
      {
        id v21 = (void *)swift_dynamicCastClass();
        char v12 = v17;
        uint64_t v22 = v70;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          id v21 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        uint64_t v60 = v16 + a2;
        uint64_t v26 = v72;
        swift_bridgeObjectRelease();
        id v21 = _swiftEmptyArrayStorage;
        BOOL v27 = v14 == (void)v12;
        char v12 = v17;
        uint64_t v22 = v70;
        if (!v27)
        {
          uint64_t v28 = v60;
          if (v60 < 1)
          {
            if (v60 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            sub_1000AFA94(&qword_10094F358);
            id v21 = (void *)swift_allocObject();
            size_t v29 = j__malloc_size(v21);
            uint64_t v28 = v60;
            void v21[2] = v60;
            v21[3] = 2 * ((uint64_t)(v29 - 32) / 72);
          }
          if (v26 + v71 + 32 < (unint64_t)&v21[9 * v28 + 4]
            && (unint64_t)(v21 + 4) < v26 + v71 + v22 + 72 * v16)
          {
LABEL_79:
            uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      id v73 = v12;
      unint64_t v24 = v12[2];
      unint64_t v23 = v12[3];
      if (v24 >= v23 >> 1)
      {
        sub_1001C9220(v23 > 1, v24 + 1, 1);
        char v12 = v73;
      }
      v12[2] = v24 + 1;
      unint64_t v25 = &v12[v24];
      uint64_t v9 = v72;
      uint64_t v13 = v71 + 144;
      v25[4] = v21;
      a1 += 2;
      a2 -= 2;
      uint64_t v15 = v22 - 144;
      v14 += 2;
      --v11;
      uint64_t v10 = v69;
    }
    while (v11);
    if (v14 >= v69)
    {
LABEL_61:
      uint64_t v15 = (uint64_t)v12;
      swift_bridgeObjectRelease();
      a1 = v61;
      a2 = v62;
      goto LABEL_63;
    }
    unint64_t v30 = v9 + v13 + 32;
    int64_t v31 = v14 + 2;
    a2 = -(uint64_t)v14;
    while (1)
    {
      a1 = (uint64_t)v12;
      char v12 = (void *)(v10 >= v31 ? v31 : v10);
      uint64_t v15 = v14 + 2;
      uint64_t v32 = v10 >= (uint64_t)(v14 + 2) ? v14 + 2 : v10;
      if (v32 < (uint64_t)v14) {
        break;
      }
      uint64_t v33 = *(void *)(v9 + 16);
      if (v33 < v14 || v33 < v32) {
        goto LABEL_77;
      }
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      double v35 = (void *)swift_dynamicCastClass();
      if (!v35)
      {
        swift_bridgeObjectRelease();
        double v35 = _swiftEmptyArrayStorage;
      }
      uint64_t v36 = (uint64_t)v12 + a2;
      uint64_t v37 = v35[2];
      swift_release();
      if (v36 == v37)
      {
        uint64_t v9 = v72;
        id v38 = (void *)swift_dynamicCastClass();
        if (!v38)
        {
          swift_bridgeObjectRelease();
          id v38 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        uint64_t v9 = v72;
        swift_bridgeObjectRelease();
        id v38 = _swiftEmptyArrayStorage;
        if (v14 != v32)
        {
          if (v36 < 1)
          {
            if (v36 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            sub_1000AFA94(&qword_10094F358);
            id v38 = (void *)swift_allocObject();
            size_t v41 = j__malloc_size(v38);
            v38[2] = v36;
            v38[3] = 2 * ((uint64_t)(v41 - 32) / 72);
          }
          if (v30 < (unint64_t)&v38[9 * v36 + 4] && (unint64_t)(v38 + 4) < v30 + 72 * v36) {
            goto LABEL_79;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      char v12 = (void *)a1;
      id v73 = (void *)a1;
      unint64_t v40 = *(void *)(a1 + 16);
      unint64_t v39 = *(void *)(a1 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1001C9220(v39 > 1, v40 + 1, 1);
        char v12 = v73;
      }
      v31 += 2;
      v12[2] = v40 + 1;
      v12[v40 + 4] = v38;
      a2 -= 2;
      v30 += 144;
      unint64_t v14 = v15;
      uint64_t v10 = v69;
      if (v15 >= v69) {
        goto LABEL_61;
      }
    }
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v15 = (uint64_t)v73;
  swift_bridgeObjectRelease();
LABEL_63:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v42 = v73;
  swift_release();
  if (v42)
  {
    swift_release();
    goto LABEL_66;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v73 == 1)
  {
LABEL_66:
    type metadata accessor for WorkoutDetailMapView.ViewModel();
    sub_1002B1420();
    swift_retain();
    uint64_t v72 = ObservedObject.init(wrappedValue:)();
    char v12 = v43;
    if (qword_10094A820 == -1)
    {
LABEL_67:
      uint64_t v44 = qword_1009543D0;
      if (*(void *)(v15 + 16)) {
        uint64_t v45 = 0;
      }
      else {
        uint64_t v45 = qword_1009543D0;
      }
      uint64_t v71 = v45;
      uint64_t v46 = static Edge.Set.all.getter();
      goto LABEL_71;
    }
LABEL_78:
    swift_once();
    goto LABEL_67;
  }
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  char v12 = 0;
  uint64_t v46 = 0;
  uint64_t v44 = 0;
LABEL_71:
  uint64_t v47 = *(void *)(v15 + 16);
  id v73 = 0;
  uint64_t v74 = v47;
  swift_getKeyPath();
  id v48 = (void *)swift_allocObject();
  _OWORD v48[2] = v15;
  void v48[3] = a1;
  v48[4] = a2;
  swift_retain();
  sub_1000AFA94(&qword_10094E360);
  sub_1000AFA94(&qword_1009544A8);
  sub_1001C5704();
  sub_1000A132C(&qword_1009544B0, &qword_1009544A8);
  id v49 = v63;
  ForEach<>.init(_:id:content:)();
  uint64_t v51 = v66;
  uint64_t v50 = v67;
  id v52 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  id v53 = v64;
  v52(v64, v49, v67);
  id v54 = v65;
  *id v65 = v72;
  v54[1] = (uint64_t)v12;
  v54[2] = v46;
  v54[3] = v44;
  uint64_t v55 = v71;
  unsigned char v54[4] = 0;
  v54[5] = v55;
  v54[6] = 0;
  *((unsigned char *)v54 + 56) = 0;
  uint64_t v56 = sub_1000AFA94(&qword_1009544B8);
  v52((char *)v54 + *(int *)(v56 + 48), v53, v50);
  id v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  swift_retain();
  v57(v49, v50);
  v57(v53, v50);
  return swift_release();
}

uint64_t sub_1002B05CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v9 = sub_1000AFA94(&qword_1009544C8);
  __chkstk_darwin(v9 - 8);
  int64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_1009544D0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_1000AFA94(&qword_1009544D8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  id v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v37 - v22;
  uint64_t v24 = *a1;
  if (v24 < 1)
  {
    uint64_t v26 = type metadata accessor for Divider();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 1, 1, v26);
    if (v24 < 0)
    {
      __break(1u);
      goto LABEL_8;
    }
  }
  else
  {
    Divider.init()();
    uint64_t v25 = type metadata accessor for Divider();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
  }
  if ((unint64_t)v24 >= *(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v37 = v12;
  id v38 = v21;
  unint64_t v39 = v17;
  uint64_t v40 = a5;
  uint64_t v27 = *(void *)(a2 + 8 * v24 + 32);
  swift_bridgeObjectRetain();
  *(void *)int64_t v11 = static VerticalAlignment.bottom.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  sub_1000AFA94(&qword_1009544E0);
  uint64_t v42 = v27;
  swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v41;
  *(void *)(v28 + 24) = a4;
  swift_retain();
  sub_1000AFA94(&qword_10094E768);
  sub_1000AFA94(&qword_1009544E8);
  sub_1000A132C(&qword_1009544F0, &qword_10094E768);
  sub_1002B14B8();
  sub_1002B150C();
  ForEach<>.init(_:id:content:)();
  if (qword_10094A820 != -1) {
LABEL_9:
  }
    swift_once();
  uint64_t v29 = qword_1009543D0;
  char v30 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_1009544C8);
  int64_t v31 = &v15[*(int *)(v37 + 36)];
  *int64_t v31 = v30;
  *((void *)v31 + 1) = v29;
  *((void *)v31 + 2) = 0;
  *((void *)v31 + 3) = v29;
  *((void *)v31 + 4) = 0;
  v31[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_1009544C8);
  uint64_t v32 = (uint64_t)v39;
  sub_1000AEEC8((uint64_t)v15, (uint64_t)v39, &qword_1009544D0);
  uint64_t v33 = (uint64_t)v38;
  sub_1000AEF2C((uint64_t)v23, (uint64_t)v38, &qword_1009544D8);
  sub_1000AEF2C(v32, (uint64_t)v15, &qword_1009544D0);
  uint64_t v34 = v40;
  sub_1000AEF2C(v33, v40, &qword_1009544D8);
  uint64_t v35 = sub_1000AFA94(&qword_100954548);
  sub_1000AEF2C((uint64_t)v15, v34 + *(int *)(v35 + 48), &qword_1009544D0);
  sub_10008DB18(v32, &qword_1009544D0);
  sub_10008DB18((uint64_t)v23, &qword_1009544D8);
  sub_10008DB18((uint64_t)v15, &qword_1009544D0);
  return sub_10008DB18(v33, &qword_1009544D8);
}

double sub_1002B0A2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  int v11 = *(char *)(a1 + 64);
  char v28 = *(unsigned char *)(a1 + 64);
  if (v11 < 0)
  {
    uint64_t v27 = *(void **)a1;
    id v13 = v4;
    uint64_t v14 = v3;
    uint64_t v26 = v3;
    uint64_t v15 = static HorizontalAlignment.center.getter();
    id v16 = v13;
    uint64_t v17 = static Alignment.leading.getter();
    sub_1004DD314(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v31, 0.0, 1, 0.0, 1, v17, v18, v15, 0, 0, v16);
    sub_1002AF90C(v27, v14, v6, v5, v7, v8, v10, v9, v28);
    v40[6] = v37;
    v40[7] = v38;
    v40[8] = v39;
    v40[2] = v33;
    v40[3] = v34;
    v40[4] = v35;
    v40[5] = v36;
    v40[0] = v31;
    v40[1] = v32;
    sub_1002B16C8((uint64_t)v40);
    sub_1000AEEC8((uint64_t)v40, (uint64_t)&v41, &qword_100954550);
    sub_1002B16D4((uint64_t)&v31);
    sub_1002B16D4((uint64_t)&v31);
    sub_1000AFA94(&qword_100954510);
    sub_1000AFA94(&qword_100954530);
    sub_1002B1588();
    sub_1002B1628();
    _ConditionalContent<>.init(storage:)();
    sub_1002AF90C(v27, v26, v6, v5, v7, v8, v10, v9, v28);
    sub_1002B1700((uint64_t)&v31);
    sub_1002B1700((uint64_t)&v31);
    long long v51 = v29[10];
    long long v52 = v29[11];
    long long v53 = v29[12];
    char v54 = v30;
    long long v47 = v29[6];
    long long v48 = v29[7];
    long long v49 = v29[8];
    long long v50 = v29[9];
    long long v43 = v29[2];
    long long v44 = v29[3];
    long long v45 = v29[4];
    long long v46 = v29[5];
    long long v41 = v29[0];
    long long v42 = v29[1];
  }
  else
  {
    char v12 = v11 & 1;
    long long v31 = (unint64_t)static HorizontalAlignment.center.getter();
    LOBYTE(v32) = 0;
    *((void *)&v32 + 1) = v4;
    *(void *)&long long v33 = v3;
    *((void *)&v33 + 1) = v6;
    *(void *)&long long v34 = v5;
    *((void *)&v34 + 1) = v7;
    *(void *)&long long v35 = v8;
    *((void *)&v35 + 1) = v10;
    *(void *)&long long v36 = v9;
    BYTE8(v36) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static Alignment.leading.getter();
    sub_1004DD14C(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 1, v40, 0.0, 1, 0.0, 1);
    sub_1002AF90C(v4, v3, v6, v5, v7, v8, v10, v9, v28);
    sub_1002B172C((uint64_t)v40);
    sub_1000AEEC8((uint64_t)v40, (uint64_t)v29, &qword_100954550);
    sub_1000AFA94(&qword_100954510);
    sub_1000AFA94(&qword_100954530);
    sub_1002B1588();
    sub_1002B1628();
    _ConditionalContent<>.init(storage:)();
  }
  long long v19 = v52;
  *(_OWORD *)(a2 + 160) = v51;
  *(_OWORD *)(a2 + 176) = v19;
  *(_OWORD *)(a2 + 192) = v53;
  *(unsigned char *)(a2 + 208) = v54;
  long long v20 = v48;
  *(_OWORD *)(a2 + 96) = v47;
  *(_OWORD *)(a2 + 112) = v20;
  long long v21 = v50;
  *(_OWORD *)(a2 + 128) = v49;
  *(_OWORD *)(a2 + 144) = v21;
  long long v22 = v44;
  *(_OWORD *)(a2 + 32) = v43;
  *(_OWORD *)(a2 + 48) = v22;
  long long v23 = v46;
  *(_OWORD *)(a2 + 64) = v45;
  *(_OWORD *)(a2 + 80) = v23;
  double result = *(double *)&v41;
  long long v25 = v42;
  *(_OWORD *)a2 = v41;
  *(_OWORD *)(a2 + 16) = v25;
  return result;
}

uint64_t sub_1002B0DAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100954488);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v8 = sub_1000AFA94(&qword_100954490);
  sub_1002AFCE8(v7, v6, (uint64_t *)&v5[*(int *)(v8 + 44)]);
  if (qword_10094A820 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1009543D0;
  char v10 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v5, a1, &qword_100954488);
  uint64_t v11 = a1 + *(int *)(sub_1000AFA94(&qword_100954498) + 36);
  *(unsigned char *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = 0;
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(unsigned char *)(v11 + 40) = 0;
  return sub_10008DB18((uint64_t)v5, &qword_100954488);
}

unint64_t sub_1002B0EE4()
{
  unint64_t result = qword_100954480;
  if (!qword_100954480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954480);
  }
  return result;
}

uint64_t sub_1002B0F38(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_1002B0F60@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B0FE0()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002B1054@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B10D4()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002B1150(uint64_t a1, uint64_t a2)
{
  sub_1002B0F38(a1, (uint64_t)v23);
  if (v24 < 0)
  {
    v24 &= ~0x80u;
    sub_1002B0F38(a2, (uint64_t)v21);
    if (v22 < 0)
    {
      v22 &= ~0x80u;
      sub_1000A88A4();
      sub_1002B1370(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF84C);
      sub_1002B1370(a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF84C);
      char v15 = static NSObject.== infix(_:_:)();
      sub_1002B1370(a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF90C);
      sub_1002B1370(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_1002AF90C);
      return v15 & 1;
    }
    goto LABEL_16;
  }
  uint64_t v5 = v23[0];
  uint64_t v4 = v23[1];
  uint64_t v6 = v23[2];
  uint64_t v7 = v23[3];
  uint64_t v9 = v23[4];
  uint64_t v8 = v23[5];
  uint64_t v10 = v23[6];
  uint64_t v11 = v23[7];
  sub_1002B0F38(a2, (uint64_t)v21);
  if (v22 < 0)
  {
LABEL_16:
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v19 = v11;
  uint64_t v13 = v21[2];
  uint64_t v12 = v21[3];
  uint64_t v14 = v21[5];
  uint64_t v20 = v21[4];
  uint64_t v17 = v21[7];
  uint64_t v18 = v21[6];
  if (v5 == v21[0] && v4 == v21[1] || (char v15 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (v6 == v13 && v7 == v12 || (char v15 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      if (v8)
      {
        if (v14)
        {
          if (v9 != v20 || v8 != v14)
          {
            char v15 = 0;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              return v15 & 1;
            }
          }
LABEL_19:
          if (v10 == v18 && v19 == v17) {
            char v15 = 1;
          }
          else {
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          return v15 & 1;
        }
      }
      else if (!v14)
      {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
  }
  return v15 & 1;
}

uint64_t sub_1002B1370(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_1002B13D4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002B1414@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B05CC(a1, v2[2], v2[3], v2[4], a2);
}

unint64_t sub_1002B1420()
{
  unint64_t result = qword_1009544C0;
  if (!qword_1009544C0)
  {
    type metadata accessor for WorkoutDetailMapView.ViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009544C0);
  }
  return result;
}

uint64_t sub_1002B1478()
{
  swift_release();

  return swift_deallocObject();
}

double sub_1002B14B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B0A2C(a1, a2);
}

unint64_t sub_1002B14B8()
{
  unint64_t result = qword_1009544F8;
  if (!qword_1009544F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009544F8);
  }
  return result;
}

unint64_t sub_1002B150C()
{
  unint64_t result = qword_100954500;
  if (!qword_100954500)
  {
    sub_1000A1370(&qword_1009544E8);
    sub_1002B1588();
    sub_1002B1628();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954500);
  }
  return result;
}

unint64_t sub_1002B1588()
{
  unint64_t result = qword_100954508;
  if (!qword_100954508)
  {
    sub_1000A1370(&qword_100954510);
    sub_1000A132C(&qword_100954518, &qword_100954520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954508);
  }
  return result;
}

unint64_t sub_1002B1628()
{
  unint64_t result = qword_100954528;
  if (!qword_100954528)
  {
    sub_1000A1370(&qword_100954530);
    sub_1000A132C(&qword_100954538, &qword_100954540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954528);
  }
  return result;
}

uint64_t sub_1002B16C8(uint64_t result)
{
  *(unsigned char *)(result + 208) = 1;
  return result;
}

uint64_t sub_1002B16D4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 24);
  return a1;
}

uint64_t sub_1002B1700(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002B172C(uint64_t result)
{
  *(unsigned char *)(result + 208) = 0;
  return result;
}

unint64_t sub_1002B1738()
{
  unint64_t result = qword_100954558;
  if (!qword_100954558)
  {
    sub_1000A1370(&qword_100954498);
    sub_1000A132C((unint64_t *)&unk_100954560, &qword_100954488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954558);
  }
  return result;
}

uint64_t sub_1002B17D8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1002B1820()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002B1858(uint64_t a1, uint64_t a2)
{
  return sub_100415E9C(a1, a2, v2);
}

uint64_t sub_1002B1860()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1002B18C4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  uint64_t v7 = v6 + v5;
  unint64_t v8 = (v6 + v5 + 23) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v6, v1);
  if (*(void *)(v0 + v8 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002B1A38(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10007E2D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002B1A88()
{
  unint64_t result = qword_1009546E8;
  if (!qword_1009546E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009546E8);
  }
  return result;
}

uint64_t sub_1002B1ADC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;

  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002B1BE4()
{
  swift_release();

  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for ActivityStatisticsBuilder.BuilderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1002B1CB8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityStatisticsBuilder.BuilderError()
{
  return &type metadata for ActivityStatisticsBuilder.BuilderError;
}

unint64_t sub_1002B1CF4()
{
  unint64_t result = qword_100954758;
  if (!qword_100954758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954758);
  }
  return result;
}

uint64_t sub_1002B1D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v47 = a8;
  uint64_t v46 = a7;
  uint64_t v45 = a6;
  uint64_t v44 = a5;
  uint64_t v43 = a4;
  int v42 = a3;
  uint64_t v41 = a2;
  uint64_t v40 = a1;
  uint64_t v11 = type metadata accessor for Reply();
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v48 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v39 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  State.init(wrappedValue:)();
  uint64_t v15 = v52;
  *(_OWORD *)(a9 + 56) = v51;
  *(void *)(a9 + 72) = v15;
  *(unsigned char *)(a9 + 80) = FocusState.init<>()() & 1;
  *(void *)(a9 + 88) = v16;
  *(unsigned char *)(a9 + 96) = v17 & 1;
  uint64_t v18 = (int *)type metadata accessor for ActivitySharingReplyEditView(0);
  uint64_t v19 = (void *)(a9 + v18[11]);
  uint64_t v20 = (_OWORD *)ReplyLayoutValues.phoneValues.unsafeMutableAddressor();
  swift_beginAccess();
  long long v51 = *v20;
  long long v21 = v20[1];
  long long v22 = v20[2];
  long long v23 = v20[4];
  long long v54 = v20[3];
  long long v55 = v23;
  long long v53 = v22;
  long long v52 = v21;
  long long v24 = v20[5];
  long long v25 = v20[6];
  long long v26 = v20[8];
  long long v58 = v20[7];
  long long v59 = v26;
  long long v56 = v24;
  long long v57 = v25;
  long long v27 = v20[9];
  long long v28 = v20[10];
  long long v29 = v20[11];
  char v63 = *((unsigned char *)v20 + 192);
  long long v61 = v28;
  long long v62 = v29;
  long long v60 = v27;
  memmove(v19, v20, 0xC1uLL);
  uint64_t v30 = v41;
  *(void *)a9 = v40;
  *(void *)(a9 + 8) = v30;
  *(unsigned char *)(a9 + 16) = v42;
  uint64_t v31 = v44;
  *(void *)(a9 + 24) = v43;
  *(void *)(a9 + 32) = v31;
  uint64_t v32 = v46;
  *(void *)(a9 + 40) = v45;
  *(void *)(a9 + 48) = v32;
  sub_1000AEF2C(v47, a9 + v18[9], (uint64_t *)&unk_10094B790);
  sub_1002B759C(a10, a9 + v18[10], (uint64_t (*)(void))&type metadata accessor for Reply);
  uint64_t v33 = v47;
  sub_1000AEF2C(v47, (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_10094B790);
  sub_1002B759C(a10, (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for Reply);
  unint64_t v34 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v35 = (v14 + *(unsigned __int8 *)(v48 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1000AEEC8((uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v34, (uint64_t *)&unk_10094B790);
  sub_1002B7C3C((uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, (uint64_t (*)(void))&type metadata accessor for Reply);
  sub_1002B7D74((uint64_t)&v51);
  sub_1002B7604(a10, (uint64_t (*)(void))&type metadata accessor for Reply);
  uint64_t result = sub_10008DB18(v33, (uint64_t *)&unk_10094B790);
  *(void *)(a9 + 104) = sub_1002B7CA4;
  *(void *)(a9 + 112) = v36;
  *(unsigned char *)(a9 + 120) = 0;
  return result;
}

uint64_t sub_1002B2130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Reply();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AEF2C(a1, (uint64_t)v9, (uint64_t *)&unk_10094B790);
  sub_1002B759C(a2, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for Reply);
  type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
  uint64_t v10 = swift_allocObject();
  sub_1002B4A68((uint64_t)v9, (uint64_t)v6);
  return v10;
}

uint64_t sub_1002B2250@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v69 = a2;
  uint64_t v68 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  long long v58 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100954A30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_100954A38) - 8;
  __chkstk_darwin(v56);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_100954A40) - 8;
  __chkstk_darwin(v59);
  long long v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100954A48) - 8;
  uint64_t v10 = __chkstk_darwin(v66);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v65 = (uint64_t)&v55 - v13;
  uint64_t v14 = type metadata accessor for ActivitySharingReplyEditView(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = sub_1000AFA94(&qword_100954A50);
  uint64_t v63 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  long long v61 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v21 = (char *)&v55 - v20;
  uint64_t v22 = static Color.clear.getter();
  uint64_t v23 = static SafeAreaRegions.all.getter();
  unsigned __int8 v24 = static Edge.Set.all.getter();
  *(void *)&long long v70 = v22;
  *((void *)&v70 + 1) = v23;
  LOWORD(v71) = v24;
  uint64_t v25 = v55;
  sub_1002B759C(v55, (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivitySharingReplyEditView);
  unint64_t v26 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v27 = swift_allocObject();
  sub_1002B7C3C((uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for ActivitySharingReplyEditView);
  sub_1000AFA94(&qword_100954A58);
  sub_1002B7488();
  long long v28 = v21;
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v29 = sub_1000AFA94(&qword_100954A78);
  sub_1002B29F4(v25, (uint64_t)&v6[*(int *)(v29 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v58, enum case for Color.RGBColorSpace.sRGB(_:), v62);
  uint64_t v30 = Color.init(_:white:opacity:)();
  LOBYTE(v16) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v8, &qword_100954A30);
  uint64_t v31 = &v8[*(int *)(v56 + 44)];
  *(void *)uint64_t v31 = v30;
  v31[8] = v16;
  sub_10008DB18((uint64_t)v6, &qword_100954A30);
  uint64_t v32 = v67;
  uint64_t v33 = &v67[*(int *)(v68 + 28)];
  uint64_t v34 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v35 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
  __asm { FMOV            V0.2D, #12.0 }
  uint64_t v41 = (uint64_t)v32;
  *uint64_t v32 = _Q0;
  uint64_t v42 = (uint64_t)v57;
  uint64_t v43 = (uint64_t)&v57[*(int *)(v59 + 44)];
  sub_1002B759C(v41, v43, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v43 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v8, v42, &qword_100954A38);
  sub_1002B7604(v41, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v8, &qword_100954A38);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C(v42, (uint64_t)v12, &qword_100954A40);
  uint64_t v44 = &v12[*(int *)(v66 + 44)];
  long long v45 = v71;
  *(_OWORD *)uint64_t v44 = v70;
  *((_OWORD *)v44 + 1) = v45;
  *((_OWORD *)v44 + 2) = v72;
  sub_10008DB18(v42, &qword_100954A40);
  uint64_t v46 = v65;
  sub_1000AEEC8((uint64_t)v12, v65, &qword_100954A48);
  uint64_t v48 = v63;
  uint64_t v47 = v64;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  unint64_t v50 = v61;
  v49(v61, v28, v64);
  sub_1000AEF2C(v46, (uint64_t)v12, &qword_100954A48);
  long long v51 = v69;
  v49(v69, v50, v47);
  uint64_t v52 = sub_1000AFA94(&qword_100954A80);
  sub_1000AEF2C((uint64_t)v12, (uint64_t)&v51[*(int *)(v52 + 48)], &qword_100954A48);
  sub_10008DB18(v46, &qword_100954A48);
  long long v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v28, v47);
  sub_10008DB18((uint64_t)v12, &qword_100954A48);
  return ((uint64_t (*)(char *, uint64_t))v53)(v50, v47);
}

uint64_t sub_1002B29A0()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_1002B29F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100954A88);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v103 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v102 = (uint64_t *)((char *)&v89 - v6);
  uint64_t v99 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Divider();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v90 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_100951728);
  __chkstk_darwin(v89);
  uint64_t v95 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000AFA94(&qword_100954A90);
  __chkstk_darwin(v91);
  uint64_t v96 = (uint64_t)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000AFA94(&qword_100954A98);
  uint64_t v11 = __chkstk_darwin(v92);
  uint64_t v101 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v100 = (uint64_t)&v89 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_100954AA0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v119 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v118 = (uint64_t)&v89 - v17;
  uint64_t v117 = type metadata accessor for ActivitySharingReplyEditView(0);
  uint64_t v111 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v106 = v18;
  uint64_t v116 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100954AA8);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = (uint64_t (*)(void))sub_1000AFA94(&qword_100954AB0);
  __chkstk_darwin(v105);
  unsigned __int8 v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000AFA94(&qword_100954AB8);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1000AFA94(&qword_100954AC0);
  __chkstk_darwin(v121);
  uint64_t v112 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000AFA94(&qword_100954AC8);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v113 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000AFA94(&qword_100954AD0);
  uint64_t v28 = __chkstk_darwin(v110);
  uint64_t v123 = (uint64_t)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v122 = (uint64_t)&v89 - v30;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = a1;
  uint64_t v32 = *(void *)(a1 + 72);
  long long v124 = *(_OWORD *)(a1 + 56);
  *(void *)&long long v125 = v32;
  sub_1000AFA94(&qword_100954AD8);
  State.projectedValue.getter();
  TextField<>.init(_:text:onEditingChanged:onCommit:)();
  if (qword_10094A828 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_100997A78;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v22, v19);
  uint64_t v35 = (uint64_t *)&v24[*((int *)v105 + 9)];
  *uint64_t v35 = KeyPath;
  v35[1] = v33;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v20 + 8);
  swift_retain();
  v36(v22, v19);
  uint64_t v37 = *(void *)(v31 + 88);
  char v38 = *(unsigned char *)(v31 + 96);
  LOBYTE(v124) = *(unsigned char *)(v31 + 80);
  *((void *)&v124 + 1) = v37;
  LOBYTE(v125) = v38;
  uint64_t v104 = sub_1000AFA94(&qword_100954AE0);
  FocusState.projectedValue.getter();
  sub_1002B766C();
  uint64_t v39 = v107;
  View.focused(_:)();
  swift_release();
  swift_release();
  sub_10008DB18((uint64_t)v24, &qword_100954AB0);
  uint64_t v105 = type metadata accessor for ActivitySharingReplyEditView;
  uint64_t v40 = v116;
  sub_1002B759C(v31, v116, type metadata accessor for ActivitySharingReplyEditView);
  uint64_t v41 = *(unsigned __int8 *)(v111 + 80);
  uint64_t v42 = (v41 + 16) & ~v41;
  uint64_t v111 = v41 | 7;
  uint64_t v43 = swift_allocObject();
  sub_1002B7C3C(v40, v43 + v42, type metadata accessor for ActivitySharingReplyEditView);
  uint64_t v44 = v108;
  uint64_t v45 = (uint64_t)v112;
  uint64_t v46 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v39, v109);
  uint64_t v47 = (uint64_t (**)())(v45 + *(int *)(v121 + 36));
  *uint64_t v47 = sub_1002B7734;
  v47[1] = (uint64_t (*)())v43;
  v47[2] = 0;
  v47[3] = 0;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v46);
  uint64_t v48 = *(void *)(v31 + 88);
  char v49 = *(unsigned char *)(v31 + 96);
  LOBYTE(v127) = *(unsigned char *)(v31 + 80);
  uint64_t v128 = v48;
  LOBYTE(v129) = v49;
  FocusState.wrappedValue.getter();
  LOBYTE(v127) = v124;
  sub_1002B759C(v31, v40, v105);
  uint64_t v50 = swift_allocObject();
  sub_1002B7C3C(v40, v50 + v42, type metadata accessor for ActivitySharingReplyEditView);
  sub_1002B7844();
  long long v51 = v113;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10008DB18(v45, &qword_100954AC0);
  uint64_t v52 = v31 + *(int *)(v117 + 44);
  uint64_t v53 = *(void *)(v52 + 24);
  LOBYTE(v46) = static Edge.Set.all.getter();
  uint64_t v54 = v114;
  uint64_t v55 = v123;
  uint64_t v56 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v123, v51, v115);
  uint64_t v57 = v55 + *(int *)(v110 + 36);
  *(unsigned char *)uint64_t v57 = v46;
  *(void *)(v57 + 8) = 0x4028000000000000;
  *(void *)(v57 + 16) = v53;
  *(void *)(v57 + 24) = 0;
  *(void *)(v57 + 32) = v53;
  *(unsigned char *)(v57 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v56);
  sub_1000AEEC8(v55, v122, &qword_100954AD0);
  type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
  sub_1002B78F4(&qword_100954A28, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v127 == 1)
  {
    long long v58 = v90;
    Divider.init()();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v59 = v93;
    uint64_t v60 = (uint64_t)v95;
    uint64_t v61 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v95, v58, v94);
    uint64_t v62 = (_OWORD *)(v60 + *(int *)(v89 + 36));
    long long v63 = v125;
    _OWORD *v62 = v124;
    v62[1] = v63;
    v62[2] = v126;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, enum case for Color.RGBColorSpace.sRGB(_:), v99);
    uint64_t v64 = Color.init(_:white:opacity:)();
    LOBYTE(v59) = static Edge.Set.all.getter();
    uint64_t v65 = v96;
    sub_1000AEF2C(v60, v96, &qword_100951728);
    uint64_t v66 = v65 + *(int *)(v91 + 36);
    *(void *)uint64_t v66 = v64;
    *(unsigned char *)(v66 + 8) = v59;
    sub_10008DB18(v60, &qword_100951728);
    uint64_t v67 = *(void *)(v52 + 56);
    LOBYTE(v64) = static Edge.Set.all.getter();
    uint64_t v68 = v101;
    sub_1000AEF2C(v65, v101, &qword_100954A90);
    uint64_t v69 = v68 + *(int *)(v92 + 36);
    *(unsigned char *)uint64_t v69 = v64;
    *(void *)(v69 + 8) = 0x4020000000000000;
    *(void *)(v69 + 16) = v67;
    *(void *)(v69 + 24) = 0x4028000000000000;
    *(void *)(v69 + 32) = v67;
    *(unsigned char *)(v69 + 40) = 0;
    sub_10008DB18(v65, &qword_100954A90);
    uint64_t v70 = v100;
    sub_1000AEEC8(v68, v100, &qword_100954A98);
    uint64_t v71 = static VerticalAlignment.center.getter();
    uint64_t v72 = (uint64_t)v102;
    uint64_t *v102 = v71;
    *(void *)(v72 + 8) = 0;
    *(unsigned char *)(v72 + 16) = 0;
    uint64_t v73 = sub_1000AFA94(&qword_100954B10);
    sub_1002B3BC0(v31, v72 + *(int *)(v73 + 44));
    sub_1000AEF2C(v70, v68, &qword_100954A98);
    uint64_t v74 = v103;
    sub_1000AEF2C(v72, v103, &qword_100954A88);
    uint64_t v75 = v119;
    sub_1000AEF2C(v68, v119, &qword_100954A98);
    uint64_t v76 = sub_1000AFA94(&qword_100954B18);
    sub_1000AEF2C(v74, v75 + *(int *)(v76 + 48), &qword_100954A88);
    sub_10008DB18(v72, &qword_100954A88);
    sub_10008DB18(v70, &qword_100954A98);
    sub_10008DB18(v74, &qword_100954A88);
    sub_10008DB18(v68, &qword_100954A98);
    uint64_t v77 = sub_1000AFA94(&qword_100954B00);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 0, 1, v77);
    uint64_t v78 = v118;
    sub_1000AEEC8(v75, v118, &qword_100954AA0);
  }
  else
  {
    uint64_t v79 = sub_1000AFA94(&qword_100954B00);
    uint64_t v78 = v118;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v118, 1, 1, v79);
    uint64_t v75 = v119;
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v121 = v127;
  LODWORD(v119) = v128;
  uint64_t v118 = v129;
  LODWORD(v117) = v130;
  uint64_t v80 = v131;
  uint64_t v81 = v132;
  uint64_t v83 = v122;
  uint64_t v82 = v123;
  sub_1000AEF2C(v122, v123, &qword_100954AD0);
  sub_1000AEF2C(v78, v75, &qword_100954AA0);
  uint64_t v84 = v120;
  sub_1000AEF2C(v82, v120, &qword_100954AD0);
  uint64_t v85 = v75;
  uint64_t v86 = sub_1000AFA94(&qword_100954B08);
  sub_1000AEF2C(v85, v84 + *(int *)(v86 + 48), &qword_100954AA0);
  uint64_t v87 = v84 + *(int *)(v86 + 64);
  *(void *)uint64_t v87 = 0;
  *(unsigned char *)(v87 + 8) = 1;
  *(void *)(v87 + 16) = v121;
  *(unsigned char *)(v87 + 24) = v119;
  *(void *)(v87 + 32) = v118;
  *(unsigned char *)(v87 + 40) = v117;
  *(void *)(v87 + 48) = v80;
  *(void *)(v87 + 56) = v81;
  sub_10008DB18(v78, &qword_100954AA0);
  sub_10008DB18(v83, &qword_100954AD0);
  sub_10008DB18(v85, &qword_100954AA0);
  return sub_10008DB18(v82, &qword_100954AD0);
}

uint64_t sub_1002B3A24()
{
  return FocusState.wrappedValue.setter();
}

uint64_t sub_1002B3A84(uint64_t a1, unsigned char *a2)
{
  if ((*a2 & 1) == 0)
  {
    sub_1000AFA94(&qword_100954AD8);
    State.wrappedValue.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v3 = *(void *)v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v3)
    {
      sub_1000AFA94(&qword_10094E168);
      uint64_t result = Binding.wrappedValue.getter();
      if (v4[0] == 1)
      {
        State.wrappedValue.getter();
        sub_1000AFA94((uint64_t *)&unk_10094F630);
        Binding.wrappedValue.setter();
        return Binding.wrappedValue.setter();
      }
    }
  }
  return result;
}

uint64_t sub_1002B3BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100954B20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000AFA94(&qword_100954B28);
  uint64_t v7 = __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
  sub_1002B78F4(&qword_100954A28, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v35)
  {
    id v12 = v35;
    uint64_t v13 = Image.init(uiImage:)();
    unsigned __int8 v14 = static Edge.Set.leading.getter();
    type metadata accessor for ActivitySharingReplyEditView(0);
    EdgeInsets.init(_all:)();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;

    uint64_t v33 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v33 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_1000AFA94(&qword_100954B30);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_1000AFA94((uint64_t *)&unk_1009547E8);
  sub_1000A132C(&qword_100954B38, (uint64_t *)&unk_1009547E8);
  sub_1002B78F4(&qword_100954B40, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  ForEach<>.init(_:id:content:)();
  uint64_t v23 = a1 + *(int *)(type metadata accessor for ActivitySharingReplyEditView(0) + 44);
  uint64_t v24 = *(void *)(v23 + 104);
  uint64_t v25 = *(void *)(v23 + 112);
  char v26 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_100954B20);
  uint64_t v27 = &v9[*(int *)(v34 + 36)];
  *uint64_t v27 = v26;
  *((void *)v27 + 1) = 0;
  *((void *)v27 + 2) = v24;
  *((void *)v27 + 3) = 0;
  *((void *)v27 + 4) = v25;
  v27[40] = 0;
  sub_10008DB18((uint64_t)v6, &qword_100954B20);
  sub_1000AEEC8((uint64_t)v9, (uint64_t)v11, &qword_100954B28);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v9, &qword_100954B28);
  uint64_t v28 = v33;
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v28;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v29 = sub_1000AFA94(&qword_100954B48);
  sub_1000AEF2C((uint64_t)v9, a2 + *(int *)(v29 + 48), &qword_100954B28);
  uint64_t v30 = a2 + *(int *)(v29 + 64);
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  swift_retain();
  sub_10008DB18((uint64_t)v11, &qword_100954B28);
  sub_10008DB18((uint64_t)v9, &qword_100954B28);
  return swift_release();
}

uint64_t sub_1002B4048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t result = Text.init(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v9 & 1;
  *(void *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_1002B4120(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_1002B41B8, v3, v2);
}

uint64_t sub_1002B41B8()
{
  type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
  sub_1002B78F4(&qword_100954A28, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel);
  *(void *)(v0 + 48) = StateObject.wrappedValue.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002B42B8;
  return sub_1002B4D5C();
}

uint64_t sub_1002B42B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_1000E837C, v3, v2);
}

uint64_t sub_1002B43FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1002B4470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v8);
  uint64_t v13 = sub_1000AFA94(&qword_100954A00);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v15 = static Alignment.center.getter();
  v15[1] = v16;
  uint64_t v17 = sub_1000AFA94(&qword_100954A08);
  sub_1002B2250(v4, (char *)v15 + *(int *)(v17 + 44));
  sub_1002B759C(v4, (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivitySharingReplyEditView);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1002B7C3C((uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for ActivitySharingReplyEditView);
  static TaskPriority.userInitiated.getter();
  uint64_t v20 = (char *)(a2 + *(int *)(sub_1000AFA94(&qword_100954A20) + 36));
  uint64_t v21 = type metadata accessor for _TaskModifier();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v20[*(int *)(v21 + 20)], v10, v6);
  *(void *)uint64_t v20 = &unk_100954A18;
  *((void *)v20 + 1) = v19;
  sub_1000AEF2C((uint64_t)v15, a2, &qword_100954A00);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return sub_10008DB18((uint64_t)v15, &qword_100954A00);
}

uint64_t sub_1002B4700()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  uint64_t v11 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v12 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100997A78 = v12;
  return result;
}

uint64_t sub_1002B4980()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1002B49F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1002B4A68(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v19 = sub_1000AFA94(&qword_1009687D0);
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100954950);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100954948);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__iconImage;
  uint64_t v22 = 0;
  sub_1000AFA94(&qword_1009547D8);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  uint64_t v15 = v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__labels;
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1000AFA94((uint64_t *)&unk_1009547E8);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15, v9, v6);
  uint64_t v16 = v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__isLoaded;
  LOBYTE(v22) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v16, v5, v19);
  uint64_t v17 = v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_renderer;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(void *)(v17 + 32) = 0;
  sub_1000AEEC8(v20, v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_payload, (uint64_t *)&unk_10094B790);
  sub_1002B7C3C(v21, v2 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_reply, (uint64_t (*)(void))&type metadata accessor for Reply);
  return v2;
}

uint64_t sub_1002B4D5C()
{
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for AttributedString();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v1[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[19] = v3;
  v1[20] = *(void *)(v3 - 8);
  v1[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[22] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[23] = v5;
  v1[24] = v4;
  return _swift_task_switch(sub_1002B4EDC, v5, v4);
}

uint64_t sub_1002B4EDC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  sub_1000AEF2C(v0[14] + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_payload, v3, (uint64_t *)&unk_10094B790);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[18];
    swift_release();
    sub_10008DB18(v4, (uint64_t *)&unk_10094B790);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[14];
    (*(void (**)(void, void, void))(v0[20] + 32))(v0[21], v0[18], v0[19]);
    uint64_t v8 = v7 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_reply;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[25] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1002B5068;
    uint64_t v10 = v0[21];
    return static ActivityRendererFactory.activityRenderer(for:payload:)(v0 + 7, v8, v10);
  }
}

uint64_t sub_1002B5068()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_1002B5188, v3, v2);
}

uint64_t sub_1002B5188()
{
  swift_release();
  if (*(void *)(v0 + 80))
  {
    sub_100093E60((long long *)(v0 + 56), v0 + 16);
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    sub_10007E4EC((void *)(v0 + 16), v1);
    uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    id v4 = [v3 image];

    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 96) = v4;
    swift_retain();
    static Published.subscript.setter();
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    sub_10007E4EC((void *)(v0 + 16), v5);
    unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    unint64_t v8 = v7;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v9 = result;
      if (!result) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_17;
      }
    }
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_34;
    }
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      id v14 = [v12 attributedText];

      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_19:
        uint64_t result = sub_1001C9250(0, v15 & ~(v15 >> 63), 0);
        if ((v15 & 0x8000000000000000) == 0)
        {
          uint64_t v16 = 0;
          uint64_t v17 = *(void *)(v0 + 128);
          do
          {
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = (id)_swiftEmptyArrayStorage[v16 + 4];
            }
            AttributedString.init(_:)();
            unint64_t v20 = _swiftEmptyArrayStorage[2];
            unint64_t v19 = _swiftEmptyArrayStorage[3];
            if (v20 >= v19 >> 1) {
              sub_1001C9250(v19 > 1, v20 + 1, 1);
            }
            uint64_t v21 = *(void *)(v0 + 136);
            uint64_t v22 = *(void *)(v0 + 120);
            ++v16;
            _swiftEmptyArrayStorage[2] = v20 + 1;
            (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v20, v21, v22);
          }
          while (v15 != v16);
          goto LABEL_29;
        }
LABEL_34:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15) {
        goto LABEL_19;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 152);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 104) = _swiftEmptyArrayStorage;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 208) = 1;
    swift_retain();
    static Published.subscript.setter();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
    goto LABEL_30;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
  sub_10008DB18(v0 + 56, &qword_100954940);
LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1002B5664()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__iconImage;
  uint64_t v2 = sub_1000AFA94(&qword_100954948);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__labels;
  uint64_t v4 = sub_1000AFA94(&qword_100954950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel__isLoaded;
  uint64_t v6 = sub_1000AFA94(&qword_1009687D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_10008DB18(v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_payload, (uint64_t *)&unk_10094B790);
  sub_1002B7604(v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_reply, (uint64_t (*)(void))&type metadata accessor for Reply);
  sub_10008DB18(v0 + OBJC_IVAR____TtCV10FitnessApp28ActivitySharingReplyEditView33ActivitySharingReplyEditViewModel_renderer, &qword_100954940);

  return swift_deallocClassInstance();
}

uint64_t sub_1002B57EC()
{
  return type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
}

uint64_t type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_1009547B8);
}

void sub_1002B5814()
{
  sub_100181968(319, &qword_1009547D0, &qword_1009547D8);
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_1009547E0, (uint64_t *)&unk_1009547E8);
    if (v1 <= 0x3F)
    {
      sub_1000E24B8();
      if (v2 <= 0x3F)
      {
        sub_1001F7DF0();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Reply();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_1002B59B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingReplyEditView.ActivitySharingReplyEditViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002B59F8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B5A7C(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1002B5AF8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B5B78()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002B5BF4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002B5C74()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002B5CF8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v10 = a2[13];
    uint64_t v47 = a2[14];
    char v46 = *((unsigned char *)a2 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1002B606C();
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = v47;
    *(unsigned char *)(a1 + 120) = v46;
    uint64_t v11 = a3[9];
    id v12 = (void *)(a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for URL();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10094B790);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[10];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    *(void *)uint64_t v18 = *(uint64_t *)((char *)a2 + v17);
    *(void *)(v18 + 8) = v20;
    *(unsigned char *)(v18 + 16) = *((unsigned char *)a2 + v17 + 16);
    uint64_t v21 = (int *)type metadata accessor for Reply();
    uint64_t v22 = v21[6];
    uint64_t v48 = v18 + v22;
    uint64_t v23 = v19 + v22;
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v48, v23, v24);
    uint64_t v26 = v21[7];
    uint64_t v27 = (void *)(v18 + v26);
    uint64_t v28 = (void *)(v19 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v21[8];
    uint64_t v31 = v18 + v30;
    uint64_t v32 = v19 + v30;
    uint64_t v33 = type metadata accessor for Date();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    v34(v31, v32, v33);
    uint64_t v35 = a3[11];
    uint64_t v36 = a1 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    long long v38 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v38;
    long long v39 = *(_OWORD *)(v37 + 48);
    *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
    *(_OWORD *)(v36 + 48) = v39;
    long long v40 = *(_OWORD *)(v37 + 80);
    *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
    *(_OWORD *)(v36 + 80) = v40;
    long long v41 = *(_OWORD *)(v37 + 112);
    *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
    *(_OWORD *)(v36 + 112) = v41;
    *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
    uint64_t v42 = *(void **)(v37 + 144);
    *(void *)(v36 + 144) = v42;
    *(unsigned char *)(v36 + 152) = *(unsigned char *)(v37 + 152);
    long long v43 = *(_OWORD *)(v37 + 176);
    *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
    *(_OWORD *)(v36 + 176) = v43;
    *(unsigned char *)(v36 + 192) = *(unsigned char *)(v37 + 192);
    id v44 = v42;
  }
  return a1;
}

uint64_t sub_1002B606C()
{
  return swift_retain();
}

void sub_1002B6074(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1002B6238();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[10];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Reply();
  uint64_t v9 = v7 + *(int *)(v8 + 24);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v7 + *(int *)(v8 + 32);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = *(void **)(a1 + a2[11] + 144);
}

uint64_t sub_1002B6238()
{
  return swift_release();
}

uint64_t sub_1002B6240(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v46 = *(void *)(a2 + 112);
  char v45 = *(unsigned char *)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1002B606C();
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v46;
  *(unsigned char *)(a1 + 120) = v45;
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(a2 + v16 + 16);
  uint64_t v20 = (int *)type metadata accessor for Reply();
  uint64_t v21 = v20[6];
  uint64_t v47 = v17 + v21;
  uint64_t v22 = v18 + v21;
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v47, v22, v23);
  uint64_t v25 = v20[7];
  uint64_t v26 = (void *)(v17 + v25);
  uint64_t v27 = (void *)(v18 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = v20[8];
  uint64_t v30 = v17 + v29;
  uint64_t v31 = v18 + v29;
  uint64_t v32 = type metadata accessor for Date();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  long long v38 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v38;
  long long v39 = *(_OWORD *)(v36 + 80);
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
  *(_OWORD *)(v35 + 80) = v39;
  long long v40 = *(_OWORD *)(v36 + 112);
  *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
  *(_OWORD *)(v35 + 112) = v40;
  *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
  long long v41 = *(void **)(v36 + 144);
  *(void *)(v35 + 144) = v41;
  *(unsigned char *)(v35 + 152) = *(unsigned char *)(v36 + 152);
  long long v42 = *(_OWORD *)(v36 + 176);
  *(_OWORD *)(v35 + 160) = *(_OWORD *)(v36 + 160);
  *(_OWORD *)(v35 + 176) = v42;
  *(unsigned char *)(v35 + 192) = *(unsigned char *)(v36 + 192);
  id v43 = v41;
  return a1;
}

uint64_t sub_1002B656C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 112);
  char v8 = *(unsigned char *)(a2 + 120);
  sub_1002B606C();
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 120) = v8;
  sub_1002B6238();
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = (int *)type metadata accessor for Reply();
  uint64_t v22 = v21[6];
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = v21[7];
  uint64_t v27 = (void *)(v19 + v26);
  uint64_t v28 = (void *)(v20 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v21[8];
  uint64_t v30 = v19 + v29;
  uint64_t v31 = v20 + v29;
  uint64_t v32 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = *(void *)(v35 + 40);
  *(void *)(v34 + 48) = *(void *)(v35 + 48);
  *(void *)(v34 + 56) = *(void *)(v35 + 56);
  *(void *)(v34 + 64) = *(void *)(v35 + 64);
  *(void *)(v34 + 72) = *(void *)(v35 + 72);
  *(void *)(v34 + 80) = *(void *)(v35 + 80);
  *(void *)(v34 + 88) = *(void *)(v35 + 88);
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  *(void *)(v34 + 104) = *(void *)(v35 + 104);
  *(void *)(v34 + 112) = *(void *)(v35 + 112);
  *(void *)(v34 + 120) = *(void *)(v35 + 120);
  *(void *)(v34 + 128) = *(void *)(v35 + 128);
  *(void *)(v34 + 136) = *(void *)(v35 + 136);
  uint64_t v36 = *(void **)(v35 + 144);
  long long v37 = *(void **)(v34 + 144);
  *(void *)(v34 + 144) = v36;
  id v38 = v36;

  *(unsigned char *)(v34 + 152) = *(unsigned char *)(v35 + 152);
  *(void *)(v34 + 160) = *(void *)(v35 + 160);
  *(void *)(v34 + 168) = *(void *)(v35 + 168);
  *(void *)(v34 + 176) = *(void *)(v35 + 176);
  *(void *)(v34 + 184) = *(void *)(v35 + 184);
  *(unsigned char *)(v34 + 192) = *(unsigned char *)(v35 + 192);
  return a1;
}

uint64_t sub_1002B69DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v7 = a3[9];
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 104) = v6;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(a2 + v13 + 16);
  int v16 = (int *)type metadata accessor for Reply();
  uint64_t v17 = v16[6];
  uint64_t v18 = v14 + v17;
  uint64_t v19 = v15 + v17;
  uint64_t v20 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(_OWORD *)(v14 + v16[7]) = *(_OWORD *)(v15 + v16[7]);
  uint64_t v21 = v16[8];
  uint64_t v22 = v14 + v21;
  uint64_t v23 = v15 + v21;
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 176);
  *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
  *(_OWORD *)(v26 + 176) = v28;
  *(unsigned char *)(v26 + 192) = *(unsigned char *)(v27 + 192);
  long long v29 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v29;
  long long v30 = *(_OWORD *)(v27 + 144);
  *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
  *(_OWORD *)(v26 + 144) = v30;
  long long v31 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v31;
  long long v32 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v32;
  long long v33 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v33;
  return a1;
}

uint64_t sub_1002B6C50(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  char v8 = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = v8;
  sub_1002B6238();
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v22 = (int *)type metadata accessor for Reply();
  uint64_t v23 = v22[6];
  uint64_t v24 = v19 + v23;
  uint64_t v25 = v20 + v23;
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = v22[7];
  long long v28 = (void *)(v19 + v27);
  long long v29 = (uint64_t *)(v20 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *long long v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v22[8];
  uint64_t v33 = v19 + v32;
  uint64_t v34 = v20 + v32;
  uint64_t v35 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  *(void *)(v37 + 40) = *(void *)(v38 + 40);
  long long v40 = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 48) = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 64) = v40;
  long long v41 = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 80) = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 96) = v41;
  long long v42 = *(_OWORD *)(v38 + 128);
  *(_OWORD *)(v37 + 112) = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 128) = v42;
  id v43 = *(void **)(a1 + v36 + 144);
  *(void *)(v37 + 144) = *(void *)(v38 + 144);

  *(unsigned char *)(v37 + 152) = *(unsigned char *)(v38 + 152);
  *(void *)(v37 + 160) = *(void *)(v38 + 160);
  *(_OWORD *)(v37 + 168) = *(_OWORD *)(v38 + 168);
  *(void *)(v37 + 184) = *(void *)(v38 + 184);
  *(unsigned char *)(v37 + 192) = *(unsigned char *)(v38 + 192);
  return a1;
}

uint64_t sub_1002B6FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B6FE8);
}

uint64_t sub_1002B6FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Reply();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1002B7118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B712C);
}

uint64_t sub_1002B712C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10094B790);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Reply();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingReplyEditView(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_1009549B0);
}

void sub_1002B727C()
{
  sub_1001F7DF0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Reply();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1002B7380()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B73A0()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingReplyEditView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_10005DB5C;
  return sub_1002B4120(v3);
}

uint64_t sub_1002B7470()
{
  return sub_1002B774C((uint64_t (*)(uint64_t))sub_1002B29A0);
}

unint64_t sub_1002B7488()
{
  unint64_t result = qword_100954A60;
  if (!qword_100954A60)
  {
    sub_1000A1370(&qword_100954A58);
    sub_1002B7528();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954A60);
  }
  return result;
}

unint64_t sub_1002B7528()
{
  unint64_t result = qword_100954A68;
  if (!qword_100954A68)
  {
    sub_1000A1370(&qword_100954A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954A68);
  }
  return result;
}

uint64_t sub_1002B759C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002B7604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1002B766C()
{
  unint64_t result = qword_100954AE8;
  if (!qword_100954AE8)
  {
    sub_1000A1370(&qword_100954AB0);
    sub_1000A132C(&qword_100954AF0, &qword_100954AA8);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954AE8);
  }
  return result;
}

uint64_t sub_1002B7734()
{
  return sub_1002B774C((uint64_t (*)(uint64_t))sub_1002B3A24);
}

uint64_t sub_1002B774C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingReplyEditView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1002B77C4(uint64_t a1, unsigned char *a2)
{
  type metadata accessor for ActivitySharingReplyEditView(0);

  return sub_1002B3A84(a1, a2);
}

unint64_t sub_1002B7844()
{
  unint64_t result = qword_100954AF8;
  if (!qword_100954AF8)
  {
    sub_1000A1370(&qword_100954AC0);
    sub_1000A1370(&qword_100954AB0);
    sub_1002B766C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954AF8);
  }
  return result;
}

uint64_t sub_1002B78F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002B7940()
{
  unint64_t result = qword_100954B50;
  if (!qword_100954B50)
  {
    sub_1000A1370(&qword_100954A20);
    sub_1000A132C(&qword_100954B58, &qword_100954A00);
    sub_1002B78F4((unint64_t *)&qword_100950478, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954B50);
  }
  return result;
}

uint64_t sub_1002B7A10()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for Reply();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v2, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v2, v6);
  }
  uint64_t v8 = v0 + ((v2 + v3 + v5) & ~v5);
  swift_bridgeObjectRelease();
  uint64_t v9 = v8 + *(int *)(v4 + 24);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v8 + *(int *)(v4 + 32);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return swift_deallocObject();
}

uint64_t sub_1002B7C3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002B7CA4()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Reply() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1002B2130(v0 + v2, v5);
}

uint64_t sub_1002B7D74(uint64_t a1)
{
  id v2 = *(id *)(a1 + 144);
  return a1;
}

id sub_1002B80E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for OnboardingNavigationController()
{
  return self;
}

uint64_t sub_1002B82C8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for PickerLabelStyle()
{
  return &type metadata for PickerLabelStyle;
}

uint64_t sub_1002B8310()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B832C()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  uint64_t v11 = enum case for Font.Design.default(_:);
  uint64_t v12 = type metadata accessor for Font.Design();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v6, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  static Font.Weight.semibold.getter();
  static Font.system(_:design:weight:)();
  sub_1000AAAA4((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v14 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100997A80 = v14;
  return result;
}

uint64_t sub_1002B85EC()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.caption2(_:), v4);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v8 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100997A88 = v8;
  return result;
}

id sub_1002B87C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100954C10);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100954C18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*((void *)v1 + 3) + 16);
  uint64_t v42 = v3;
  uint64_t v43 = a1;
  if (v11 < 2)
  {
    uint64_t v17 = (void *)*((void *)v1 + 5);
    long long v44 = *v1;
    uint64_t v45 = *((void *)v1 + 2);
    sub_1000AFA94(&qword_1009510D8);
    Binding.wrappedValue.getter();
    id result = [v17 stringFromInteger:v47];
    if (result)
    {
      uint64_t v18 = result;
      long long v41 = (uint64_t *)v6;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      *(void *)&long long v44 = v19;
      *((void *)&v44 + 1) = v21;
      sub_1000A06D0();
      uint64_t v22 = Text.init<A>(_:)();
      uint64_t v24 = v23;
      char v26 = v25;
      if (qword_10094A830 != -1) {
        swift_once();
      }
      char v27 = v26 & 1;
      uint64_t v28 = Text.font(_:)();
      uint64_t v30 = v29;
      char v32 = v31 & 1;
      sub_1000A06C0(v22, v24, v27);
      swift_bridgeObjectRelease();
      static Color.secondary.getter();
      uint64_t v33 = Text.foregroundColor(_:)();
      uint64_t v35 = v34;
      char v37 = v36;
      uint64_t v39 = v38;
      swift_release();
      sub_1000A06C0(v28, v30, v32);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v5 = v33;
      *((void *)v5 + 1) = v35;
      v5[16] = v37 & 1;
      *((void *)v5 + 3) = v39;
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_100954C20, &qword_100954C18);
      return (id)_ConditionalContent<>.init(storage:)();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    long long v41 = &v40;
    uint64_t v12 = __chkstk_darwin(v8);
    *(&v40 - 2) = (uint64_t)v1;
    __chkstk_darwin(v12);
    *(&v40 - 2) = (uint64_t)v1;
    sub_1000AFA94(&qword_100954C28);
    sub_1000AFA94(&qword_100954C30);
    uint64_t v13 = sub_1000A1370(&qword_100954C38);
    uint64_t v14 = sub_1000A132C(&qword_100954C40, &qword_100954C38);
    unint64_t v15 = sub_1002B9910();
    *(void *)&long long v44 = v13;
    *((void *)&v44 + 1) = &type metadata for PickerLabelStyle;
    uint64_t v45 = v14;
    unint64_t v46 = v15;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100954C50, &qword_100954C30);
    Menu.init(content:label:)();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v10, v6);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100954C20, &qword_100954C18);
    _ConditionalContent<>.init(storage:)();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_1002B8CA4()
{
  return Picker<>.init(_:selection:content:)();
}

uint64_t sub_1002B8DA0(uint64_t *a1)
{
  uint64_t v10 = a1[3];
  swift_getKeyPath();
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[5];
  uint64_t v8 = a1[4];
  uint64_t v9 = v2;
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *((_OWORD *)a1 + 1);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v5;
  v4[3] = *((_OWORD *)a1 + 2);
  swift_bridgeObjectRetain();
  sub_1001CE648((uint64_t)&v10);
  sub_1001A91A8((uint64_t)&v9);
  swift_retain();
  sub_1001A91A8((uint64_t)&v8);
  id v6 = v3;
  sub_1000AFA94(&qword_100954CC8);
  sub_1000AFA94(&qword_100954C90);
  sub_1000A132C(&qword_100954CD0, &qword_100954CC8);
  sub_1002B9C40();
  sub_1002B9AA0();
  return ForEach<>.init(_:id:content:)();
}

id sub_1002B8EF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  id result = [*(id *)(a2 + 40) stringFromInteger:*a1];
  if (result)
  {
    id v6 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A06D0();
    id result = (id)Text.init<A>(_:)();
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v7;
    *(unsigned char *)(a3 + 16) = v8 & 1;
    *(void *)(a3 + 24) = v9;
    *(void *)(a3 + 32) = v4;
    *(unsigned char *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = v4;
    *(_WORD *)(a3 + 56) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B8FA0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100954C38);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a1;
  uint64_t v8 = a1;
  sub_1000AFA94(&qword_100954C58);
  sub_1002B9974();
  Label.init(title:icon:)();
  sub_1000A132C(&qword_100954C40, &qword_100954C38);
  sub_1002B9910();
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1002B912C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 40);
  sub_1000AFA94(&qword_1009510D8);
  Binding.wrappedValue.getter();
  id result = [v3 stringFromInteger:v23];
  if (result)
  {
    long long v5 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A06D0();
    uint64_t v6 = Text.init<A>(_:)();
    uint64_t v8 = v7;
    char v10 = v9;
    if (qword_10094A830 != -1) {
      swift_once();
    }
    uint64_t v11 = Text.font(_:)();
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    sub_1000A06C0(v6, v8, v10 & 1);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v16 = Text.foregroundColor(_:)();
    uint64_t v18 = v17;
    char v20 = v19;
    uint64_t v22 = v21;
    swift_release();
    sub_1000A06C0(v11, v13, v15);
    id result = (id)swift_bridgeObjectRelease();
    *(void *)a2 = v16;
    *(void *)(a2 + 8) = v18;
    *(unsigned char *)(a2 + 16) = v20 & 1;
    *(void *)(a2 + 24) = v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B92D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = Image.init(systemName:)();
  if (qword_10094A838 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_100997A88;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = swift_getKeyPath();
  *a2 = v4;
  a2[1] = KeyPath;
  a2[2] = v5;
  a2[3] = v8;
  a2[4] = v7;
  swift_retain();

  return swift_retain();
}

id sub_1002B93AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B87C4(a1);
}

uint64_t sub_1002B93E8@<X0>(char *a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = v27;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v25 - v13;
  LabelStyleConfiguration.title.getter();
  LabelStyleConfiguration.icon.getter();
  char v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v12, v14, v8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v5, v7, v1);
  uint64_t v17 = v28;
  v15(v28, v12, v8);
  uint64_t v18 = sub_1000AFA94(&qword_100954BF8);
  uint64_t v19 = v25;
  v16(&v17[*(int *)(v18 + 48)], v5, v25);
  char v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v7;
  uint64_t v22 = v19;
  v20(v21, v19);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v14, v8);
  v20(v5, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v8);
}

uint64_t sub_1002B966C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = sub_1000AFA94(&qword_100954BF0);
  return sub_1002B93E8((char *)(a1 + *(int *)(v2 + 44)));
}

void destroy for YearlyDropdownMenu(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for YearlyDropdownMenu(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for YearlyDropdownMenu(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for YearlyDropdownMenu(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for YearlyDropdownMenu()
{
  return &type metadata for YearlyDropdownMenu;
}

uint64_t sub_1002B98A8()
{
  return sub_1000A132C(&qword_100954C00, &qword_100954C08);
}

uint64_t sub_1002B98E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B9900()
{
  return sub_1002B8CA4();
}

uint64_t sub_1002B9908()
{
  return sub_1002B8FA0(*(void *)(v0 + 16));
}

unint64_t sub_1002B9910()
{
  unint64_t result = qword_100954C48;
  if (!qword_100954C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954C48);
  }
  return result;
}

id sub_1002B9964@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B912C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002B996C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002B92D8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1002B9974()
{
  unint64_t result = qword_100954C60;
  if (!qword_100954C60)
  {
    sub_1000A1370(&qword_100954C58);
    sub_1002857C0();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954C60);
  }
  return result;
}

uint64_t sub_1002B9A24()
{
  return sub_1002B8DA0(*(uint64_t **)(v0 + 16));
}

unint64_t sub_1002B9A2C()
{
  unint64_t result = qword_100954C80;
  if (!qword_100954C80)
  {
    sub_1000A1370(&qword_100954C78);
    sub_1002B9AA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954C80);
  }
  return result;
}

unint64_t sub_1002B9AA0()
{
  unint64_t result = qword_100954C88;
  if (!qword_100954C88)
  {
    sub_1000A1370(&qword_100954C90);
    sub_1002B9B40();
    sub_1000A132C(&qword_100954CB8, &qword_100954CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954C88);
  }
  return result;
}

unint64_t sub_1002B9B40()
{
  unint64_t result = qword_100954C98;
  if (!qword_100954C98)
  {
    sub_1000A1370(&qword_100954CA0);
    sub_1000A132C(&qword_100954CA8, &qword_100954CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954C98);
  }
  return result;
}

uint64_t sub_1002B9BE0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

id sub_1002B9C38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B8EF4(a1, v2 + 16, a2);
}

unint64_t sub_1002B9C40()
{
  unint64_t result = qword_100954CD8;
  if (!qword_100954CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954CD8);
  }
  return result;
}

unint64_t sub_1002B9C98()
{
  unint64_t result = qword_100954CE0;
  if (!qword_100954CE0)
  {
    sub_1000A1370(&qword_100954CE8);
    sub_1000A132C(&qword_100954C20, &qword_100954C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954CE0);
  }
  return result;
}

uint64_t sub_1002B9D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [self localTimeZone];
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  Date.init()();
  uint64_t v16 = TimeZone.secondsFromGMT(for:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v10, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (__OFSUB__(0, v16))
  {
    __break(1u);
  }
  else
  {
    id v18 = [v25 _startDate];
    if (v18)
    {
      uint64_t v19 = v18;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      char v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v20(v3, 0, 1, v7);
    }
    else
    {
      char v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v20(v3, 1, 1, v7);
    }
    sub_1000CBFEC((uint64_t)v3, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      sub_10023636C((uint64_t)v6);
      uint64_t v21 = 1;
      uint64_t v22 = v26;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v6, v7);
      sub_10023636C((uint64_t)v6);
      uint64_t v22 = v26;
      Date.addingTimeInterval(_:)();
      v24(v10, v7);
      uint64_t v21 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v22, v21, 1, v7);
  }
  return result;
}

id sub_1002BA088(char a1, char a2)
{
  id v4 = [objc_allocWithZone((Class)HKActivitySummary) init];
  [v4 setActivityMoveMode:1];
  uint64_t v5 = self;
  id v6 = [v5 kilocalorieUnit];
  uint64_t v7 = self;
  id v8 = [v7 quantityWithUnit:v6 doubleValue:100.0];

  [v4 setActiveEnergyBurned:v8];
  id v9 = [v5 kilocalorieUnit];
  id v10 = [v7 quantityWithUnit:v9 doubleValue:100.0];

  [v4 setActiveEnergyBurnedGoal:v10];
  [v4 setDeprecatedPauseForInternalSwiftClient:a2 & 1];
  if ((a1 & 1) == 0)
  {
    id v11 = [v5 minuteUnit];
    id v12 = [v7 quantityWithUnit:v11 doubleValue:30.0];

    [v4 setAppleExerciseTime:v12];
    id v13 = [v5 minuteUnit];
    id v14 = [v7 quantityWithUnit:v13 doubleValue:30.0];

    [v4 setExerciseTimeGoal:v14];
    id v15 = [v5 countUnit];
    id v16 = [v7 quantityWithUnit:v15 doubleValue:12.0];

    [v4 setStandHoursGoal:v16];
    id v17 = [v5 countUnit];
    id v18 = [v7 quantityWithUnit:v17 doubleValue:12.0];

    [v4 setAppleStandHours:v18];
  }
  return v4;
}

unint64_t sub_1002BA348()
{
  unint64_t result = qword_100954CF0;
  if (!qword_100954CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954CF0);
  }
  return result;
}

unint64_t sub_1002BA3A0()
{
  unint64_t result = qword_100954CF8;
  if (!qword_100954CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954CF8);
  }
  return result;
}

uint64_t sub_1002BA3F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002BA410()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002BA460()
{
  unint64_t result = qword_100954D00;
  if (!qword_100954D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D00);
  }
  return result;
}

uint64_t sub_1002BA4B4(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997A90);
}

uint64_t sub_1002BA4E0(uint64_t a1)
{
  v1[15] = a1;
  uint64_t v2 = type metadata accessor for URLComponents();
  v1[16] = v2;
  v1[17] = *(void *)(v2 - 8);
  v1[18] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v1[19] = swift_task_alloc();
  sub_1000AFA94(&qword_10094DD20);
  v1[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[22] = v4;
  v1[23] = v3;
  return _swift_task_switch(sub_1002BA634, v4, v3);
}

uint64_t sub_1002BA634()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  URLComponents.init(string:)();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(v1, 1, v2))
  {
    sub_1000AFA94(&qword_10095B800);
    type metadata accessor for URLQueryItem();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    URLQueryItem.init(name:value:)();
    URLComponents.queryItems.setter();
  }
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[16];
  id v7 = [self sharedApplication];
  v0[24] = v7;
  if (v4(v5, 1, v6))
  {
    uint64_t v8 = v0[19];
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = v0[19];
    uint64_t v13 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v14 = v0[16];
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 16))(v12, v0[20], v14);
    URLComponents.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v15 = type metadata accessor for URL();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v10 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
    {
      uint64_t v18 = v0[19];
      URL._bridgeToObjectiveC()(v17);
      uint64_t v10 = v19;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  v0[25] = v10;
  v0[2] = v0;
  v0[7] = v0 + 26;
  v0[3] = sub_1002BA9D4;
  uint64_t v20 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1003F7064;
  v0[13] = &unk_1008BF5F0;
  v0[14] = v20;
  [v7 openURL:v10 withCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002BA9D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  uint64_t v2 = *(void *)(*(void *)v0 + 176);
  return _swift_task_switch(sub_1002BAADC, v2, v1);
}

uint64_t sub_1002BAADC()
{
  uint64_t v2 = (void *)v0[24];
  uint64_t v1 = (void *)v0[25];
  uint64_t v3 = v0[20];
  swift_release();

  static IntentResult.result<>()();
  sub_1001B6614(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002BAB8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094A840, (uint64_t)qword_100997A90, a1);
}

uint64_t sub_1002BABB0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  return sub_1002BA4E0(a1);
}

uint64_t sub_1002BAC48(uint64_t a1)
{
  unint64_t v2 = sub_1002BA460();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002BAC88()
{
  unint64_t result = qword_100954D10;
  if (!qword_100954D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D10);
  }
  return result;
}

unint64_t sub_1002BACE0()
{
  unint64_t result = qword_100954D18;
  if (!qword_100954D18)
  {
    type metadata accessor for StringSearchCriteria();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D18);
  }
  return result;
}

uint64_t sub_1002BAD38(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997AA8);
}

uint64_t sub_1002BAD64()
{
  sub_1000AFA94(&qword_100954D78);
  uint64_t v0 = type metadata accessor for StringSearchScope();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1007509E0;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for StringSearchScope.general(_:), v0);
  qword_100997AC0 = v3;
  return result;
}

uint64_t sub_1002BAE40()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1002BAE64(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for URLComponents();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v2[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StringSearchCriteria();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  sub_1000AFA94(&qword_10094DD20);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_1002BAFE0, 0, 0);
}

uint64_t sub_1002BAFE0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  URLComponents.init(string:)();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[25] = v4;
  v0[26] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (!v4(v1, 1, v2))
  {
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[21];
    uint64_t v7 = v0[22];
    sub_1000AFA94(&qword_10095B800);
    type metadata accessor for URLQueryItem();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    IntentParameter.wrappedValue.getter();
    StringSearchCriteria.term.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    URLComponents.queryItems.setter();
  }
  v0[27] = self;
  type metadata accessor for MainActor();
  v0[28] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002BB20C, v9, v8);
}

uint64_t sub_1002BB20C()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();
  *(void *)(v0 + 232) = [v1 sharedApplication];
  return _swift_task_switch(sub_1002BB290, 0, 0);
}

uint64_t sub_1002BB290()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 136);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 200))(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 160);
  if (v3)
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v1, v2);
    URLComponents.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v2);
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v6 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) != 1)
    {
      uint64_t v12 = *(void *)(v0 + 160);
      URL._bridgeToObjectiveC()(v11);
      uint64_t v6 = v13;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  *(void *)(v0 + 240) = v6;
  uint64_t v14 = *(void **)(v0 + 232);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 248;
  *(void *)(v0 + 24) = sub_1002BB4DC;
  uint64_t v15 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1003F7064;
  *(void *)(v0 + 104) = &unk_1008BF5D8;
  *(void *)(v0 + 112) = v15;
  [v14 openURL:v6 withCompletionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1002BB4DC()
{
  return _swift_task_switch(sub_1002BB5BC, 0, 0);
}

uint64_t sub_1002BB5BC()
{
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 192);

  static IntentResult.result<>()();
  sub_1001B6614(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002BB670@<X0>(void *a1@<X8>)
{
  if (qword_10094A850 != -1) {
    swift_once();
  }
  *a1 = qword_100997AC0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002BB6DC()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1002BB700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

unint64_t sub_1002BB7F4()
{
  unint64_t result = qword_100954D20;
  if (!qword_100954D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D20);
  }
  return result;
}

unint64_t sub_1002BB84C()
{
  unint64_t result = qword_100954D28;
  if (!qword_100954D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D28);
  }
  return result;
}

unint64_t sub_1002BB8A4()
{
  unint64_t result = qword_100954D30;
  if (!qword_100954D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D30);
  }
  return result;
}

uint64_t sub_1002BB8F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002BB914()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002BB930@<X0>(uint64_t a1@<X8>)
{
  return sub_1002603A8(&qword_10094A848, (uint64_t)qword_100997AA8, a1);
}

uint64_t sub_1002BB954()
{
  uint64_t v0 = sub_1000AFA94(&qword_100954D60);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_100954D68);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x20686372616553;
  v2._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100954D70);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002BBAD8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  return sub_1002BAE64(a1, v4);
}

uint64_t sub_1002BBB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002BBC74();
  *a1 = result;
  return result;
}

uint64_t sub_1002BBBA0(uint64_t a1)
{
  unint64_t v2 = sub_1002BB7F4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SearchFitnessPlusIntent()
{
  return &type metadata for SearchFitnessPlusIntent;
}

ValueMetadata *type metadata accessor for OpenFitnessPlusForYouIntent()
{
  return &type metadata for OpenFitnessPlusForYouIntent;
}

uint64_t sub_1002BBBFC()
{
  return sub_1000A132C(&qword_100954D40, &qword_100954D48);
}

uint64_t sub_1002BBC38()
{
  return sub_1000A132C((unint64_t *)&qword_10094E580, &qword_10094E588);
}

uint64_t sub_1002BBC74()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_1000AFA94(&qword_100954D50);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  uint64_t v12 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_1002BBF14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002BBF40()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  qword_100997AC8 = v0;
  unk_100997AD0 = result;
  return result;
}

uint64_t sub_1002BBFF0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_100997AD8);
  sub_1000876DC(v5, (uint64_t)qword_100997AD8);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1002BC15C(char *a1, char *a2)
{
  return sub_10047E954(*a1, *a2);
}

unint64_t sub_1002BC16C()
{
  unint64_t result = qword_100954D88;
  if (!qword_100954D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D88);
  }
  return result;
}

Swift::Int sub_1002BC1C0()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BC240()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002BC2AC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BC328@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B48F8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1002BC388(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x647261646E617473;
  if (*v1) {
    uint64_t v2 = 0x6D6F74737563;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1002BC3C8()
{
  unint64_t result = qword_100954D90;
  if (!qword_100954D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D90);
  }
  return result;
}

unint64_t sub_1002BC420()
{
  unint64_t result = qword_100954D98;
  if (!qword_100954D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954D98);
  }
  return result;
}

unint64_t sub_1002BC478()
{
  unint64_t result = qword_100954DA0;
  if (!qword_100954DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DA0);
  }
  return result;
}

uint64_t sub_1002BC4CC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002BC52C()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1002BC580()
{
  unint64_t result = qword_100954DA8;
  if (!qword_100954DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DA8);
  }
  return result;
}

unint64_t sub_1002BC5D8()
{
  unint64_t result = qword_100954DB0;
  if (!qword_100954DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DB0);
  }
  return result;
}

unint64_t sub_1002BC630()
{
  unint64_t result = qword_100954DB8;
  if (!qword_100954DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DB8);
  }
  return result;
}

unint64_t sub_1002BC688()
{
  unint64_t result = qword_100954DC0;
  if (!qword_100954DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DC0);
  }
  return result;
}

uint64_t sub_1002BC6DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BD684(&qword_10094A860, (uint64_t)qword_100997AD8, a1);
}

uint64_t sub_1002BC700()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002BC750()
{
  unint64_t result = qword_100954DC8;
  if (!qword_100954DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DC8);
  }
  return result;
}

uint64_t sub_1002BC7A4(uint64_t a1)
{
  unint64_t v2 = sub_1002BC750();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002BC7F4()
{
  unint64_t result = qword_100954DD0;
  if (!qword_100954DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DD0);
  }
  return result;
}

unint64_t sub_1002BC84C()
{
  unint64_t result = qword_100954DD8;
  if (!qword_100954DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DD8);
  }
  return result;
}

unint64_t sub_1002BC8A4()
{
  unint64_t result = qword_100954DE0;
  if (!qword_100954DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DE0);
  }
  return result;
}

uint64_t sub_1002BC8FC(uint64_t a1)
{
  unint64_t v2 = sub_1002BC688();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002BC948()
{
  return sub_1000A132C(&qword_100954DE8, &qword_100954DF0);
}

void sub_1002BC984(void *a1@<X8>)
{
  *a1 = &off_1008B4948;
}

unint64_t sub_1002BC998()
{
  unint64_t result = qword_100954DF8;
  if (!qword_100954DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954DF8);
  }
  return result;
}

unint64_t sub_1002BC9F0()
{
  unint64_t result = qword_100954E00;
  if (!qword_100954E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E00);
  }
  return result;
}

unint64_t sub_1002BCA48()
{
  unint64_t result = qword_100954E08;
  if (!qword_100954E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E08);
  }
  return result;
}

unint64_t sub_1002BCAA0()
{
  unint64_t result = qword_100954E10;
  if (!qword_100954E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E10);
  }
  return result;
}

uint64_t sub_1002BCAF4(uint64_t a1, uint64_t a2)
{
  return sub_1002BFBF0(&qword_100954E18, a2, (void (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier);
}

uint64_t type metadata accessor for WorkoutSplitIdentifier()
{
  return self;
}

uint64_t sub_1002BCB60()
{
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v0, qword_100997AF0);
  sub_1000876DC(v0, (uint64_t)qword_100997AF0);
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_1002BCBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  __chkstk_darwin(v9);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  v19._countAndFlagsBits = 0x2074696C7053;
  v19._object = (void *)0xE600000000000000;
  uint64_t result = EntityProperty.wrappedValue.getter();
  if (__OFADD__(v18, 1))
  {
    __break(1u);
  }
  else
  {
    ++v18;
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v17 = a1;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v19);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
    LocalizedStringResource.init(stringInterpolation:)();
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    v15._countAndFlagsBits = sub_1002BCEE4();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
    LocalizedStringResource.init(stringInterpolation:)();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    swift_bridgeObjectRetain();
    DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
    return DisplayRepresentation.init(title:subtitle:image:)();
  }
  return result;
}

uint64_t sub_1002BCEE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094F098);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094F070);
  uint64_t v58 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v16 = v15;

  uint64_t v56 = v1[6];
  AppDependency.wrappedValue.getter();
  uint64_t v17 = v60;
  uint64_t v54 = v1[2];
  EntityProperty.wrappedValue.getter();
  Measurement.value.getter();
  double v19 = v18;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v8 + 8);
  v53(v10, v7);
  id v20 = [v17 stringWithDuration:3 durationFormat:v19];

  uint64_t v52 = v14;
  uint64_t v57 = v16;
  if (v20)
  {
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = v16;
    uint64_t v21 = v14;
  }
  uint64_t v24 = v58;
  EntityProperty.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v4, &qword_10094F098);
  }
  else
  {
    uint64_t v51 = v21;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v59, v4, v5);
    id v25 = [self meterUnit];
    uint64_t v55 = v5;
    Measurement.value.getter();
    id v27 = [self quantityWithUnit:v25 doubleValue:v26];

    uint64_t v28 = v1[5];
    uint64_t v29 = FIUIPaceFormatForDistanceType();
    AppDependency.wrappedValue.getter();
    uint64_t v30 = v60;
    id v31 = v27;
    EntityProperty.wrappedValue.getter();
    Measurement.value.getter();
    double v33 = v32;
    v53(v10, v7);
    id v34 = [v30 localizedPaceStringWithDistance:v31 overDuration:v29 paceFormat:v28 distanceType:v33];

    if (v34)
    {
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v37 = v36;

      uint64_t v38 = v57;
    }
    else
    {
      uint64_t v38 = v57;
      swift_bridgeObjectRetain();
      uint64_t v35 = v52;
      char v37 = v38;
    }
    AppDependency.wrappedValue.getter();
    uint64_t v39 = v60;
    Measurement.value.getter();
    id v40 = [v39 localizedStringWithDistanceInMeters:v28 distanceType:1 unitStyle:];

    uint64_t v41 = v58;
    if (v40)
    {
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v44 = v43;
      swift_bridgeObjectRelease();

      uint64_t v38 = v44;
    }
    else
    {
      uint64_t v42 = v52;
    }
    uint64_t v60 = (void *)v42;
    uint64_t v61 = v38;
    v45._countAndFlagsBits = 548913696;
    v45._object = (void *)0xA400000000000000;
    String.append(_:)(v45);
    v46._countAndFlagsBits = v51;
    v46._object = v23;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    v47._countAndFlagsBits = 548913696;
    v47._object = (void *)0xA400000000000000;
    String.append(_:)(v47);
    v48._countAndFlagsBits = v35;
    v48._object = v37;
    String.append(_:)(v48);

    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v59, v55);
  }
  return v21;
}

uint64_t sub_1002BD434@<X0>(void *a1@<X8>)
{
  if (qword_10094A858 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_100997AD0;
  *a1 = qword_100997AC8;
  a1[1] = v2;
  swift_retain();

  return swift_retain();
}

unint64_t sub_1002BD4B0()
{
  unint64_t result = qword_100954E20;
  if (!qword_100954E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E20);
  }
  return result;
}

unint64_t sub_1002BD508()
{
  unint64_t result = qword_100954E28;
  if (!qword_100954E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E28);
  }
  return result;
}

unint64_t sub_1002BD560()
{
  unint64_t result = qword_100954E30;
  if (!qword_100954E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E30);
  }
  return result;
}

unint64_t sub_1002BD5B8()
{
  unint64_t result = qword_100954E38;
  if (!qword_100954E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E38);
  }
  return result;
}

uint64_t sub_1002BD60C(uint64_t a1, uint64_t a2)
{
  return sub_1002BFBF0(&qword_100954E40, a2, (void (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier);
}

uint64_t sub_1002BD654@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1002BD660@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BD684(&qword_10094A868, (uint64_t)qword_100997AF0, a1);
}

uint64_t sub_1002BD684@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v6 = sub_1000876DC(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1002BD720()
{
  return sub_1000A132C(&qword_100954E48, &qword_100954E50);
}

uint64_t sub_1002BD75C(uint64_t a1)
{
  unint64_t v2 = sub_1002BFD88();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002BD7AC()
{
  unint64_t result = qword_100954E58;
  if (!qword_100954E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954E58);
  }
  return result;
}

uint64_t sub_1002BD804(uint64_t a1)
{
  unint64_t v2 = sub_1002BD5B8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002BD850(unsigned __int8 *a1, char *a2)
{
  return sub_10047E9F8(*a1, *a2);
}

Swift::Int sub_1002BD85C()
{
  return sub_100480444();
}

uint64_t sub_1002BD864()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002BD924()
{
  return sub_100480FB0();
}

unint64_t sub_1002BD92C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002C0114(*a1);
  *a2 = result;
  return result;
}

void sub_1002BD95C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x4974756F6B726F77;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701869940;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000011;
      a1[1] = 0x80000001007B5720;
      break;
    case 3:
      *a1 = 0x7865646E69;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1002BD9F4()
{
  unint64_t result = 0x4974756F6B726F77;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7865646E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002BDA80@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002C0114(a1);
  *a2 = result;
  return result;
}

void sub_1002BDAA8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1002BDAB4(uint64_t a1)
{
  unint64_t v2 = sub_1002BFC8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002BDAF0(uint64_t a1)
{
  unint64_t v2 = sub_1002BFC8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002BDB2C()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1002BFBF0(&qword_100954F30, v1, (void (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier);
  uint64_t v6 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v8 = v7;
  static String.Encoding.utf8.getter();
  uint64_t v9 = String.init(data:encoding:)();
  if (v10)
  {
    uint64_t v11 = v9;
    sub_1000939A4(v6, v8);
  }
  else
  {
    sub_1002BFC38();
    swift_allocError();
    swift_willThrow();
    sub_1000939A4(v6, v8);
    static os_log_type_t.error.getter();
    unint64_t v2 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10074E640;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_1000AA64C();
    *(void *)(v3 + 32) = 0xD000000000000016;
    *(void *)(v3 + 40) = 0x80000001007BDC60;
    id v4 = v2;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v3 + 96) = sub_1002BFBB0();
    *(void *)(v3 + 104) = sub_1002BFBF0((unint64_t *)&qword_100955F20, 255, (void (*)(uint64_t))sub_1002BFBB0);
    *(void *)(v3 + 72) = v5;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v11 = 0;
  }
  swift_release();
  return v11;
}

void sub_1002BDDD8()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v0 + 40));
  Hasher._combine(_:)(*(void *)(v0 + 48));
}

uint64_t sub_1002BDE80(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v14 = sub_1000AFA94(&qword_100954F58);
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_1002BFC8C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    char v19 = 0;
    uint64_t v9 = v14;
    *(void *)(v1 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v1 + 24) = v10;
    char v17 = 1;
    sub_1002BFD34();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(unsigned char *)(v1 + 32) = v18;
    char v16 = 2;
    *(void *)(v1 + 40) = KeyedDecodingContainer.decode(_:forKey:)();
    char v15 = 3;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(void *)(v3 + 48) = v12;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1002BE0F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000AFA94(&qword_100954F40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10007E4EC(a1, a1[3]);
  sub_1002BFC8C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + 32);
    v10[13] = 1;
    sub_1002BFCE0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[12] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[11] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002BE2C0()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v4 = String.data(using:allowLossyConversion:)();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1002BFBF0(&qword_100954F28, v7, (void (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_100182378(v4, v6);
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {
      swift_release();
      return 0;
    }
  }
  return result;
}

Swift::Int sub_1002BE5F0()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BE650()
{
  return String.hash(into:)();
}

Swift::Int sub_1002BE674()
{
  return Hasher._finalize()();
}

uint64_t sub_1002BE6D0@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B49F0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1002BE724(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1002BE74C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Int sub_1002BE784()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v0 + 40));
  Hasher._combine(_:)(*(void *)(v0 + 48));
  return Hasher._finalize()();
}

uint64_t sub_1002BE850@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1002BDE80(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1002BE8A8(void *a1)
{
  return sub_1002BE0F8(a1);
}

uint64_t sub_1002BE8CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002BDB2C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002BE8F8()
{
  return sub_1002BDB2C();
}

uint64_t sub_1002BE91C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002BE2C0();
  *a1 = result;
  return result;
}

uint64_t sub_1002BE944(uint64_t a1, uint64_t a2)
{
  return sub_1002BFBF0(&qword_100954E60, a2, (void (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier);
}

Swift::Int sub_1002BE98C()
{
  return sub_1002BE784();
}

void sub_1002BE9B0()
{
}

Swift::Int sub_1002BE9D4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v1 + 40));
  Hasher._combine(_:)(*(void *)(v1 + 48));
  return Hasher._finalize()();
}

BOOL sub_1002BEA98(uint64_t *a1, uint64_t *a2)
{
  return sub_1002BEEBC(*a1, *a2);
}

uint64_t destroy for WorkoutSplitEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WorkoutSplitEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WorkoutSplitEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WorkoutSplitEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsCardFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitEntity()
{
  return &type metadata for WorkoutSplitEntity;
}

unsigned char *storeEnumTagSinglePayload for WorkoutSplitEntity.SplitType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002BEE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitEntity.SplitType()
{
  return &type metadata for WorkoutSplitEntity.SplitType;
}

BOOL sub_1002BEEBC(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v5 & 1) != 0))
  {
    if (*(unsigned char *)(a1 + 32)) {
      uint64_t v7 = 0x6D6F74737563;
    }
    else {
      uint64_t v7 = 0x647261646E617473;
    }
    if (*(unsigned char *)(a1 + 32)) {
      unint64_t v8 = 0xE600000000000000;
    }
    else {
      unint64_t v8 = 0xE800000000000000;
    }
    if (*(unsigned char *)(a2 + 32)) {
      uint64_t v9 = 0x6D6F74737563;
    }
    else {
      uint64_t v9 = 0x647261646E617473;
    }
    if (*(unsigned char *)(a2 + 32)) {
      unint64_t v10 = 0xE600000000000000;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
    if (v7 == v9 && v8 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
    return *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
  }
  return result;
}

unint64_t sub_1002BEFD0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  v13[1] = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v2 - 8);
  BOOL v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000AFA94(&qword_100954F70);
  uint64_t v7 = (int *)(sub_1000AFA94(&qword_100954F78) - 8);
  uint64_t v8 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10074E640;
  v13[0] = v10 + v9 + v7[14];
  *(unsigned char *)(v10 + v9) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v10 + v9 + v8) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_100523574(v10);
}

uint64_t sub_1002BF2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>, uint64_t a10)
{
  LODWORD(v83) = a8;
  unint64_t v73 = a7;
  uint64_t v76 = a9;
  uint64_t v77 = a5;
  uint64_t v80 = a4;
  uint64_t v81 = a3;
  uint64_t v82 = a2;
  uint64_t v68 = a10;
  uint64_t v12 = sub_1000AFA94(&qword_10094F078);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v75 = (uint64_t)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v65 - v15;
  uint64_t v16 = sub_1000AFA94(&qword_10094F098);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v72 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v71 = (char *)&v65 - v19;
  uint64_t v20 = sub_1000AFA94(&qword_10094F0A0);
  uint64_t v84 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v70 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v79 = (char *)&v65 - v23;
  uint64_t v24 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v24 - 8);
  sub_1000AFA94(&qword_10094F0A8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v25 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B0);
  uint64_t v26 = v25;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v27 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0B8);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094F0E0);
  uint64_t v29 = v28;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094D340);
  type metadata accessor for AppDependencyManager();
  long long v85 = 0u;
  long long v86 = 0u;
  uint64_t v87 = 0;
  swift_retain();
  static AppDependencyManager.shared.getter();
  uint64_t v31 = AppDependency.__allocating_init(key:manager:)();
  type metadata accessor for WorkoutSplitIdentifier();
  uint64_t v32 = swift_allocObject();
  unint64_t v33 = v73;
  *(void *)(v32 + 16) = a6;
  *(void *)(v32 + 24) = v33;
  BOOL v34 = (v83 & 1) == 0;
  *(unsigned char *)(v32 + 32) = v83 & 1;
  *(void *)(v32 + 40) = v68;
  *(void *)(v32 + 48) = a1;
  unint64_t v35 = 0xD000000000000013;
  if (!v34) {
    unint64_t v35 = 0xD000000000000018;
  }
  unint64_t v73 = v35;
  if (v34) {
    unint64_t v36 = 0x80000001007BDB60;
  }
  else {
    unint64_t v36 = 0x80000001007BDB40;
  }
  unint64_t v83 = v36;
  *(void *)&long long v85 = a1;
  uint64_t v67 = v31;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v66 = v30;
  swift_retain();
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v78 = v26;
  swift_release();
  uint64_t v37 = v84;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  uint64_t v39 = v79;
  v38(v79, v82, v20);
  uint64_t v69 = v20;
  v38(v70, (uint64_t)v39, v20);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v40 = v29;
  swift_retain();
  uint64_t v41 = v66;
  swift_retain();
  uint64_t v42 = v67;
  swift_retain();
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v43 = *(char **)(v37 + 8);
  uint64_t v84 = v37 + 8;
  uint64_t v70 = v43;
  ((void (*)(char *, uint64_t))v43)(v79, v20);
  swift_bridgeObjectRelease();
  uint64_t v44 = v42;
  swift_release();
  uint64_t v45 = v41;
  swift_release();
  swift_release();
  uint64_t v46 = v27;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v47 = sub_1000AFA94(&qword_10094F070);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v68 = v48;
  char v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  uint64_t v50 = (uint64_t)v71;
  uint64_t v79 = (char *)v47;
  v49(v71, v81, v47);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v47);
  sub_1000AEF2C(v50, v72, &qword_10094F098);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v51 = v40;
  EntityProperty.wrappedValue.setter();
  sub_10008DB18(v50, &qword_10094F098);
  swift_bridgeObjectRelease();
  uint64_t v52 = v44;
  swift_release();
  uint64_t v53 = v45;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = sub_1000AFA94(&qword_10094F110);
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v74, v80, v54);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v54);
  sub_1000AEF2C(v56, v75, &qword_10094F078);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v57 = v53;
  swift_retain();
  uint64_t v58 = v52;
  swift_retain();
  unint64_t v59 = v83;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18(v56, &qword_10094F078);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v60 = v78;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v80, v54);
  (*(void (**)(uint64_t, char *))(v68 + 8))(v81, v79);
  ((void (*)(uint64_t, uint64_t))v70)(v82, v69);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  long long v63 = v76;
  uint64_t v62 = v77;
  *uint64_t v76 = v32;
  v63[1] = v60;
  v63[2] = v46;
  v63[3] = v51;
  v63[4] = v57;
  v63[5] = v62;
  unint64_t v64 = v73;
  v63[6] = v58;
  v63[7] = v64;
  v63[8] = v59;
  return result;
}

unint64_t sub_1002BFBB0()
{
  unint64_t result = qword_100954710;
  if (!qword_100954710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100954710);
  }
  return result;
}

uint64_t sub_1002BFBF0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002BFC38()
{
  unint64_t result = qword_100954F38;
  if (!qword_100954F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F38);
  }
  return result;
}

unint64_t sub_1002BFC8C()
{
  unint64_t result = qword_100954F48;
  if (!qword_100954F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F48);
  }
  return result;
}

unint64_t sub_1002BFCE0()
{
  unint64_t result = qword_100954F50;
  if (!qword_100954F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F50);
  }
  return result;
}

unint64_t sub_1002BFD34()
{
  unint64_t result = qword_100954F60;
  if (!qword_100954F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F60);
  }
  return result;
}

unint64_t sub_1002BFD88()
{
  unint64_t result = qword_100954F68;
  if (!qword_100954F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WorkoutSplitIdentifier.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002BFEA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitIdentifier.Key()
{
  return &type metadata for WorkoutSplitIdentifier.Key;
}

unsigned char *storeEnumTagSinglePayload for WorkoutSplitIdentifier.JSONError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1002BFF7CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitIdentifier.JSONError()
{
  return &type metadata for WorkoutSplitIdentifier.JSONError;
}

unint64_t sub_1002BFFB8()
{
  unint64_t result = qword_100954F80;
  if (!qword_100954F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F80);
  }
  return result;
}

unint64_t sub_1002C0010()
{
  unint64_t result = qword_100954F88;
  if (!qword_100954F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F88);
  }
  return result;
}

unint64_t sub_1002C0068()
{
  unint64_t result = qword_100954F90;
  if (!qword_100954F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F90);
  }
  return result;
}

unint64_t sub_1002C00C0()
{
  unint64_t result = qword_100954F98;
  if (!qword_100954F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954F98);
  }
  return result;
}

unint64_t sub_1002C0114(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4970, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1002C0160()
{
  return swift_deallocClassInstance();
}

uint64_t assignWithTake for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(_WORD *)(a1 + 27) = *(_WORD *)(a2 + 27);
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsViewRepresentable(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRingsViewRepresentable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void sub_1002C02F0()
{
}

unsigned char *storeEnumTagSinglePayload for ActivityRingsViewRepresentable.SpriteSheetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C03E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_1002C0410()
{
  unint64_t result = qword_100955078;
  if (!qword_100955078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955078);
  }
  return result;
}

uint64_t sub_1002C0464()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

char *sub_1002C049C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v27 = &a1[v8];
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = type metadata accessor for AttributedString();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v13 = v4;
    swift_retain();
    v12(v27, v9, v10);
    v12(&v7[a3[7]], (uint64_t)a2 + a3[7], v10);
    uint64_t v14 = a3[8];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
    {
      uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v12(v15, (uint64_t)v16, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
    }
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = *(char **)((char *)a2 + v18);
    *(void *)&v7[v18] = v20;
    v7[v19] = *((unsigned char *)a2 + v19);
    uint64_t v21 = a3[11];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = (char **)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *(void *)uint64_t v22 = *v23;
    *((void *)v22 + 1) = v24;
    id v25 = v20;
    swift_bridgeObjectRetain();
  }
  return v7;
}

char *sub_1002C06A8(char *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v8 = a3[6];
  uint64_t v27 = &a1[v8];
  uint64_t v9 = a2 + v8;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  id v13 = v7;
  swift_retain();
  v12(v27, v9, v10);
  v12(&a1[a3[7]], a2 + a3[7], v10);
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, (uint64_t)v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)&a1[v18] = v20;
  a1[v19] = *(unsigned char *)(a2 + v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v24;
  id v25 = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1002C0860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  v14(a1 + a3[7], a2 + a3[7], v12);
  uint64_t v30 = a3;
  uint64_t v15 = a3[8];
  uint64_t v16 = (const void *)(a2 + v15);
  uint64_t v17 = *(uint64_t (**)(void))(v13 + 48);
  uint64_t v29 = (void *)(a1 + v15);
  LODWORD(a3) = v17();
  int v18 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v17)(v16, 1, v12);
  if (a3)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v29, v16, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v12);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v29;
  }
  else
  {
    if (!v18)
    {
      v14((uint64_t)v29, (uint64_t)v16, v12);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v29, v12);
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v29;
  }
  memcpy(v20, v16, v19);
LABEL_9:
  uint64_t v21 = v30[9];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  *(unsigned char *)(a1 + v30[10]) = *(unsigned char *)(a2 + v30[10]);
  uint64_t v25 = v30[11];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1002C0ADC(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v16] = a2[v16];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

uint64_t sub_1002C0C68(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(a1 + a3[7], &a2[a3[7]], v10);
  uint64_t v28 = a3;
  uint64_t v13 = a3[8];
  uint64_t v14 = &a2[v13];
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v27 = (void *)(a1 + v13);
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v27, v14, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    int v18 = v27;
  }
  else
  {
    if (!v16)
    {
      v12((uint64_t)v27, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v27, v10);
    size_t v17 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    int v18 = v27;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  uint64_t v19 = v28[9];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)&a2[v19];

  uint64_t v21 = v28[11];
  *(unsigned char *)(a1 + v28[10]) = a2[v28[10]];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002C0EC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

void *sub_1002C0FF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1002C1120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *v1;
  if ([*v1 isMe])
  {
    if (qword_10094A870 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1000876DC(v3, (uint64_t)qword_100955130);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    return v11(a1, v10, v3);
  }
  else
  {
    id v13 = [v9 UUID];
    if (v13)
    {
      uint64_t v14 = v13;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v15(v8, v5, v3);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v3);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v3);
      if (result != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v8, v3);
      }
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v8, 1, 1, v3);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C138C()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_1000258C4(v0, qword_100955130);
  sub_1000876DC(v0, (uint64_t)qword_100955130);
  return UUID.init()();
}

void *sub_1002C13DC()
{
  return &protocol witness table for Double;
}

char *sub_1002C13E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider] = 0;
  id v6 = objc_allocWithZone((Class)type metadata accessor for PaletteViewControllerSizingDelegate());
  uint64_t v7 = v3;
  uint64_t v8 = (char *)[v6 init];
  type metadata accessor for ActivitySharingFriendDetailPaletteDateProvider();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = [objc_allocWithZone((Class)NSDate) init];
  uint64_t result = (char *)[objc_allocWithZone((Class)PaletteViewController) initWithSizingDelegate:v8 dateProvider:v9];
  if (result)
  {
    *(void *)&v7[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController] = result;

    if (a3)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    v24.receiver = v7;
    v24.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell();
    id v12 = [super initWithStyle:a1 reuseIdentifier:v11];

    id v13 = (char *)v12;
    id v14 = [v13 contentView];
    uint64_t v15 = *(void **)&v8[OBJC_IVAR___CHPaletteViewControllerSizingDelegate_view];
    *(void *)&v8[OBJC_IVAR___CHPaletteViewControllerSizingDelegate_view] = v14;

    id v16 = [v13 contentView];
    uint64_t result = (char *)[*(id *)&v13[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController] view];
    if (result)
    {
      uint64_t v17 = result;
      [v16 addSubview:result];

      int v18 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_100751040;
      id v20 = [v13 contentView];
      id v21 = [v20 heightAnchor];

      id v22 = [v21 constraintEqualToConstant:70.0];
      *(void *)(v19 + 32) = v22;
      specialized Array._endMutation()();
      sub_1001ABF94();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 activateConstraints:isa];

      swift_release();
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1002C16F0(void *a1, void *a2)
{
  uint64_t v5 = (objc_class *)type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider();
  id v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend] = a1;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_pauseRingsCoordinator] = a2;
  v14.receiver = v6;
  v14.super_class = v5;
  id v7 = a1;
  id v8 = a2;
  id v9 = [super init];
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider;
  NSString v11 = *(void **)(v2
                 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider);
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider) = v9;

  if (objc_msgSend(v7, "isMe", v14.receiver, v14.super_class)) {
    [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController) setPauseRingsCoordinator:v8];
  }
  id v12 = *(void **)(v2
                 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController);
  [v12 setActivitySummaryProvider:*(void *)(v2 + v10)];
  return [v12 setIsUserInteractionEnabled:0];
}

id sub_1002C1860()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell()
{
  return self;
}

unint64_t sub_1002C1904()
{
  return 0xD00000000000002FLL;
}

void sub_1002C1920()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for WorkoutActivityEntity(0);
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v25 - v7;
  id v9 = [v0 workoutActivity];
  if (!v9) {
    goto LABEL_11;
  }
  id v10 = v9;
  id v11 = [v0 workout];
  id v26 = v10;
  sub_1001DDF38(v10, 0, 0, v11, (uint64_t)v8);
  sub_1002C1E90((uint64_t)v8, (uint64_t)v6);
  *(void *)&v43[0] = _swiftEmptyArrayStorage;
  sub_1002C1EF4((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1001B5C10();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v12 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_1002C1EF4(&qword_10094EE70, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
  id v13 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  id v14 = [v0 view];
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = [v14 subviews];

    sub_1002ABA64();
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v18)
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        id v19 = *(id *)(v17 + 32);
      }
      id v20 = v19;
      swift_bridgeObjectRelease();
      UIView.annotate(with:)();

      sub_1002C1F3C((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1002C1F3C((uint64_t)v8);
    }
LABEL_11:
    sub_10020F97C([v1 workout], objc_msgSend(v1, "workoutFormattingManager"), v43);
    *(void *)&long long v27 = _swiftEmptyArrayStorage;
    sub_1001B5A54((uint64_t)v43);
    sub_1002C1EF4((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
    sub_1000AFA94((uint64_t *)&unk_10096AA80);
    sub_1001B5C10();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    long long v39 = v43[12];
    long long v40 = v43[13];
    long long v41 = v43[14];
    long long v42 = v43[15];
    long long v35 = v43[8];
    long long v36 = v43[9];
    long long v37 = v43[10];
    long long v38 = v43[11];
    long long v31 = v43[4];
    long long v32 = v43[5];
    long long v33 = v43[6];
    long long v34 = v43[7];
    long long v27 = v43[0];
    long long v28 = v43[1];
    long long v29 = v43[2];
    long long v30 = v43[3];
    id v21 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
    sub_1001B5C6C();
    id v22 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
    id v23 = [v1 view];
    if (v23)
    {
      objc_super v24 = v23;
      UIView.annotate(with:)();

      sub_1001B5CC0((uint64_t)v43);
      return;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_1002C1E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C1EF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002C1F3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1002C1F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  uint64_t v7 = v3;
  *(void *)&v3[v6] = sub_1006D134C();
  id v8 = [objc_allocWithZone((Class)type metadata accessor for DayViewTitleAndValueLabelPair()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v9 = self;
  id v10 = [v9 labelColor];
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  id v12 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v10;
  id v13 = v10;

  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v8[v11]];

  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  v15.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  unint64_t v17 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v15;
  uint64_t v18 = v15.super.isa;

  [*(id *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v8[v16]];
  id v19 = [self mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  uint64_t v25 = (uint64_t *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  *uint64_t v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v26 = *(void **)&v8[v14];
  if (v25[1])
  {
    swift_bridgeObjectRetain();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v27 = 0;
  }
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair;
  [v26 setText:v27];
  swift_bridgeObjectRelease();

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v28] = v8;

  if (a3)
  {
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  v36.receiver = v7;
  v36.super_class = (Class)type metadata accessor for DayViewFlightsTableViewCell();
  id v30 = [super initWithStyle:a1 reuseIdentifier:v29];

  long long v31 = (char *)v30;
  id v32 = [v9 systemBackgroundColor];
  [v31 setBackgroundColor:v32];

  id v33 = [v31 contentView];
  [v33 addSubview:*(void *)&v31[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair]];

  id v34 = [v31 contentView];
  [v34 addSubview:*(void *)&v31[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div]];

  sub_1002C23C4();
  return v31;
}

void sub_1002C23C4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div];
  id v2 = [v1 topAnchor];
  id v3 = [v0 contentView];
  id v4 = [v3 topAnchor];

  id v41 = [v2 constraintEqualToAnchor:v4];
  id v5 = [v1 leadingAnchor];
  id v6 = [v0 contentView];
  id v7 = [v6 leadingAnchor];

  id v39 = [v5 constraintEqualToAnchor:v7 constant:16.0];
  id v8 = [v1 trailingAnchor];
  id v9 = [v0 contentView];
  id v10 = [v9 trailingAnchor];

  id v38 = [v8 constraintEqualToAnchor:v10];
  id v11 = [v1 heightAnchor];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v36 = [v11 constraintEqualToConstant:*(double *)&qword_100998308];

  id v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair];
  id v13 = [v12 leadingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 leadingAnchor];

  id v37 = [v13 constraintEqualToAnchor:v15 constant:16.0];
  id v16 = [v12 trailingAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 trailingAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:-16.0];
  id v20 = [v12 topAnchor];
  id v21 = [v1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:16.0];

  id v23 = [v12 bottomAnchor];
  id v24 = [v0 contentView];
  id v25 = [v24 bottomAnchor];

  id v33 = [v23 constraintEqualToAnchor:v25];
  id v35 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100752640;
  *(void *)(v26 + 32) = v41;
  *(void *)(v26 + 40) = v39;
  *(void *)(v26 + 48) = v38;
  *(void *)(v26 + 56) = v36;
  *(void *)(v26 + 64) = v37;
  *(void *)(v26 + 72) = v19;
  *(void *)(v26 + 80) = v22;
  *(void *)(v26 + 88) = v33;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v34 = v41;
  id v40 = v39;
  id v27 = v38;
  id v28 = v36;
  id v29 = v37;
  id v30 = v19;
  id v31 = v22;
  id v32 = v33;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];
}

uint64_t sub_1002C28DC(void *a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  id v5 = v1;
  *(void *)&v1[v4] = sub_1006D134C();
  id v6 = [(char *)[objc_allocWithZone((Class)type metadata accessor for DayViewTitleAndValueLabelPair()) initWithFrame:0.0, 0.0, 0.0, 0.0]];
  id v7 = [self labelColor];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  id v9 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v7;
  id v10 = v7;

  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v6[v8]];

  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  v12.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  id v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v12;
  id v15 = v12.super.isa;

  [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v6[v13]];
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  id v22 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  *id v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v23 = *(void **)&v6[v11];
  if (v22[1])
  {
    swift_bridgeObjectRetain();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair;
  [v23 setText:v24];
  swift_bridgeObjectRelease();

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v25] = v6;

  uint64_t v26 = *(void **)&v5[v25];
  type metadata accessor for DayViewFlightsTableViewCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1002C2C04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewFlightsTableViewCell();
  [super dealloc];
}

uint64_t type metadata accessor for DayViewFlightsTableViewCell()
{
  return self;
}

void sub_1002C2CA8(void *a1)
{
  id v3 = self;
  id v4 = [self countUnit];
  [a1 doubleValueForUnit:v4];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v6 = [v3 stringWithNumber:isa decimalPrecision:1];

  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair);
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
  id v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                              + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
  if (!v12)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  id v14 = sub_10052463C(v7, v9, 0, 0xE000000000000000, v12);
  swift_bridgeObjectRelease();

  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText;
  id v16 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText);
  *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText) = v14;
  id v18 = v14;

  NSString v17 = *(void **)(v10 + v11);
  [v17 setText:0];
  [v17 setAttributedText:*(void *)(v10 + v15)];
}

char *sub_1002C2E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = self;
  uint64_t v7 = v3;
  uint64_t result = (char *)[v6 companionTotalScoreFriendDetailConfiguration];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = result;
  [result setNameBaselineOffset:25.0];
  [v9 setPrimaryScoreBaselineOffset:12.0];
  uint64_t result = (char *)[objc_allocWithZone((Class)ASCompetitionScoreView) initWithConfiguration:v9];
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  *(void *)&v7[v11] = v10;
  if (a3)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }
  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v12];

  id v14 = (char *)v13;
  id v15 = [v14 contentView];
  [v15 addSubview:*(void *)&v14[OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView]];

  id v16 = self;
  id v17 = [v14 contentView];
  UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)();

  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 activateConstraints:isa];

  return v14;
}

id sub_1002C30FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell()
{
  return self;
}

unint64_t sub_1002C3164()
{
  return 0xD000000000000038;
}

void sub_1002C3180()
{
  id v1 = [self companionTotalScoreFriendDetailConfiguration];
  if (!v1) {
    __break(1u);
  }
  objc_super v2 = v1;
  [v1 setNameBaselineOffset:25.0];
  [v2 setPrimaryScoreBaselineOffset:12.0];
  id v3 = [objc_allocWithZone((Class)ASCompetitionScoreView) initWithConfiguration:v2];
  if (!v3) {
    __break(1u);
  }
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView;
  id v5 = v3;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

  *(void *)&v0[v4] = v5;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *initializeBufferWithCopyOfBuffer for WorkoutDetailSwimmingView(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for WorkoutDetailSwimmingView(uint64_t a1)
{
}

void *assignWithCopy for WorkoutDetailSwimmingView(void *a1, void *a2)
{
  *a1 = *a2;
  id v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for WorkoutDetailSwimmingView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for WorkoutDetailSwimmingView()
{
  return &type metadata for WorkoutDetailSwimmingView;
}

uint64_t sub_1002C333C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002C3358(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v125 = a3;
  uint64_t v122 = sub_1000AFA94(&qword_1009552B0);
  uint64_t v5 = __chkstk_darwin(v122);
  long long v126 = (void *)((char *)v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v124 = (uint64_t)v120 - v7;
  uint64_t v140 = type metadata accessor for DynamicTypeSize();
  uint64_t v147 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v139 = (char *)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v142 = *(void *)(v143 - 8);
  uint64_t v9 = __chkstk_darwin(v143);
  uint64_t v123 = (char *)v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v121 = (char *)v120 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v144 = (char *)v120 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v141 = (char *)v120 - v16;
  __chkstk_darwin(v15);
  uint64_t v146 = (char *)v120 - v17;
  uint64_t v135 = type metadata accessor for SegmentedPickerStyle();
  uint64_t v136 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  objc_super v19 = (char *)v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1000AFA94(&qword_1009552B8);
  uint64_t v133 = *(void (***)(char *, uint64_t))(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v21 = (char *)v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = (void *)sub_1000AFA94(&qword_1009552C0);
  uint64_t v132 = *(v134 - 1);
  __chkstk_darwin(v134);
  id v23 = (char *)v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_1009552C8);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = __chkstk_darwin(v24);
  id v28 = (char *)v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v145 = (uint64_t)v120 - v29;
  uint64_t v130 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v129 = v30;
  int v127 = v31;
  uint64_t v128 = v32;
  uint64_t v33 = type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  unint64_t v34 = sub_1002C4518();
  uint64_t v137 = a2;
  v120[2] = v33;
  id v35 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  v120[1] = v34;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  long long v152 = v150;
  uint64_t v153 = v151;
  uint64_t v148 = a1;
  uint64_t v149 = a2;
  sub_1000AFA94(&qword_1009552D8);
  sub_1002C4580();
  Picker<>.init(_:selection:content:)();
  SegmentedPickerStyle.init()();
  sub_1000A132C(&qword_1009552E8, &qword_1009552B8);
  uint64_t v36 = v131;
  uint64_t v37 = v135;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v19, v37);
  v133[1](v21, v36);
  LOBYTE(v37) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = v132;
  uint64_t v47 = v134;
  (*(void (**)(char *, char *, void *))(v132 + 16))(v28, v23, v134);
  uint64_t v48 = &v28[*(int *)(v25 + 44)];
  *uint64_t v48 = v37;
  *((void *)v48 + 1) = v39;
  *((void *)v48 + 2) = v41;
  *((void *)v48 + 3) = v43;
  *((void *)v48 + 4) = v45;
  v48[40] = 0;
  (*(void (**)(char *, void *))(v46 + 8))(v23, v47);
  uint64_t v138 = v28;
  sub_1000AEEC8((uint64_t)v28, v145, &qword_1009552C8);
  id v49 = [self mainBundle];
  NSString v50 = String._bridgeToObjectiveC()();
  id v51 = [v49 localizedStringForKey:v50 value:0 table:0];

  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v53;

  *(void *)&long long v150 = v52;
  *((void *)&v150 + 1) = v54;
  sub_1000A06D0();
  uint64_t v55 = Text.init<A>(_:)();
  uint64_t v57 = v56;
  LOBYTE(v25) = v58 & 1;
  static Font.headline.getter();
  uint64_t v59 = Text.font(_:)();
  uint64_t v61 = v60;
  LOBYTE(a2) = v62;
  uint64_t v64 = v63;
  swift_release();
  sub_1000A06C0(v55, v57, v25);
  swift_bridgeObjectRelease();
  *(void *)&long long v150 = v59;
  *((void *)&v150 + 1) = v61;
  LOBYTE(v151) = a2 & 1;
  *((void *)&v151 + 1) = v64;
  uint64_t v65 = v147;
  uint64_t v66 = *(void (**)(void))(v147 + 104);
  uint64_t v67 = v139;
  LODWORD(v135) = enum case for DynamicTypeSize.large(_:);
  uint64_t v68 = v140;
  uint64_t v136 = v147 + 104;
  uint64_t v134 = v66;
  v66(v139);
  uint64_t v69 = v141;
  View.dynamicTypeSize(_:)();
  uint64_t v70 = *(void (***)(char *, uint64_t))(v65 + 8);
  uint64_t v147 = v65 + 8;
  uint64_t v133 = v70;
  ((void (*)(char *, uint64_t))v70)(v67, v68);
  sub_1000A06C0(v150, *((uint64_t *)&v150 + 1), v151);
  swift_bridgeObjectRelease();
  uint64_t v132 = *(void *)(v142 + 32);
  ((void (*)(char *, char *, uint64_t))v132)(v146, v69, v143);
  uint64_t v71 = *(uint64_t (**)(void))((swift_isaMask & *v137) + 0x188);
  uint64_t v72 = v137;
  uint64_t v73 = v71();
  uint64_t v75 = v74;
  uint64_t v137 = v72;

  *(void *)&long long v150 = v73;
  *((void *)&v150 + 1) = v75;
  uint64_t v76 = Text.init<A>(_:)();
  uint64_t v78 = v77;
  LOBYTE(a2) = v79 & 1;
  static Font.largeTitle.getter();
  uint64_t v80 = Text.font(_:)();
  uint64_t v82 = v81;
  char v84 = v83;
  swift_release();
  sub_1000A06C0(v76, v78, (char)a2);
  swift_bridgeObjectRelease();
  id v85 = [self paceColors];
  if (v85)
  {
    long long v86 = v85;
    id v87 = [v85 nonGradientTextColor];

    if (v87)
    {
      char v88 = v84 & 1;
      Color.init(_:)();
      uint64_t v89 = Text.foregroundColor(_:)();
      uint64_t v91 = v90;
      char v93 = v92;
      uint64_t v95 = v94;
      swift_release();
      sub_1000A06C0(v80, v82, v88);
      swift_bridgeObjectRelease();
      *(void *)&long long v150 = v89;
      *((void *)&v150 + 1) = v91;
      LOBYTE(v151) = v93 & 1;
      *((void *)&v151 + 1) = v95;
      uint64_t v96 = v139;
      uint64_t v97 = v140;
      ((void (*)(char *, void, uint64_t))v134)(v139, v135, v140);
      uint64_t v98 = v121;
      View.dynamicTypeSize(_:)();
      ((void (*)(char *, uint64_t))v133)(v96, v97);
      sub_1000A06C0(v150, *((uint64_t *)&v150 + 1), v151);
      swift_bridgeObjectRelease();
      uint64_t v99 = v143;
      ((void (*)(char *, char *, uint64_t))v132)(v144, v98, v143);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v101 = (uint64_t)v126;
      *long long v126 = KeyPath;
      sub_1000AFA94(&qword_100968CD0);
      swift_storeEnumTagMultiPayload();
      uint64_t v102 = (int *)v122;
      uint64_t v103 = (uint64_t *)(v101 + *(int *)(v122 + 36));
      uint64_t v104 = v137;
      uint64_t *v103 = ObservedObject.init(wrappedValue:)();
      v103[1] = v105;
      *(void *)(v101 + v102[10]) = 0x4040000000000000;
      *(void *)(v101 + v102[11]) = 0x4010000000000000;
      *(void *)(v101 + v102[12]) = 0x4020000000000000;
      uint64_t v106 = v101 + v102[13];
      *(void *)&long long v152 = 0;
      GestureState.init(wrappedValue:)();
      uint64_t v107 = *((void *)&v150 + 1);
      long long v108 = v151;
      *(void *)uint64_t v106 = v150;
      *(void *)(v106 + 8) = v107;
      *(_OWORD *)(v106 + 16) = v108;
      uint64_t v109 = (void *)(v101 + v102[14]);
      *(void *)&long long v152 = 0;
      State.init(wrappedValue:)();
      uint64_t v110 = *((void *)&v150 + 1);
      *uint64_t v109 = v150;
      v109[1] = v110;
      uint64_t v111 = v124;
      sub_1000AEEC8(v101, v124, &qword_1009552B0);
      uint64_t v112 = (uint64_t)v138;
      sub_1000AEF2C(v145, (uint64_t)v138, &qword_1009552C8);
      uint64_t v113 = v142;
      uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
      uint64_t v115 = v141;
      v114(v141, v146, v99);
      uint64_t v116 = v123;
      v114(v123, v144, v99);
      sub_1000AEF2C(v111, v101, &qword_1009552B0);
      uint64_t v117 = v125;
      sub_1000AEF2C(v112, v125, &qword_1009552C8);
      uint64_t v118 = (int *)sub_1000AFA94(&qword_1009552F0);
      v114((char *)(v117 + v118[12]), v115, v99);
      v114((char *)(v117 + v118[16]), v116, v99);
      sub_1000AEF2C(v101, v117 + v118[20], &qword_1009552B0);
      sub_10008DB18(v111, &qword_1009552B0);
      uint64_t v119 = *(void (**)(char *, uint64_t))(v113 + 8);
      v119(v144, v99);
      v119(v146, v99);
      sub_10008DB18(v145, &qword_1009552C8);
      sub_10008DB18(v101, &qword_1009552B0);
      v119(v116, v99);
      v119(v115, v99);
      sub_10008DB18((uint64_t)v138, &qword_1009552C8);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002C417C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002C41FC(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1002C426C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  id v5 = a2;
  sub_1000AFA94(&qword_1009552F8);
  sub_1000AFA94(&qword_100954C90);
  sub_1000A132C(&qword_100955300, &qword_1009552F8);
  sub_1002B9AA0();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1002C4388@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = a2;
  sub_1002DEF74(v4);

  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = v8 & 1;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v4;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = v4;
  *(_WORD *)(a3 + 56) = 0;
  return result;
}

uint64_t sub_1002C4418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100955298);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = (void *)v1[1];
  *(void *)id v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v8 = sub_1000AFA94(&qword_1009552A0);
  sub_1002C3358(v7, v6, (uint64_t)&v5[*(int *)(v8 + 44)]);
  LOBYTE(v6) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v5, a1, &qword_100955298);
  uint64_t v9 = a1 + *(int *)(sub_1000AFA94(&qword_1009552A8) + 36);
  *(unsigned char *)uint64_t v9 = (_BYTE)v6;
  *(_OWORD *)(v9 + 8) = xmmword_100752B90;
  *(_OWORD *)(v9 + 24) = xmmword_100752B90;
  *(unsigned char *)(v9 + 40) = 0;
  return sub_10008DB18((uint64_t)v5, &qword_100955298);
}

unint64_t sub_1002C4518()
{
  unint64_t result = qword_1009552D0;
  if (!qword_1009552D0)
  {
    type metadata accessor for WorkoutDetailSwimmingSplitDataSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009552D0);
  }
  return result;
}

uint64_t sub_1002C4578()
{
  return sub_1002C426C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1002C4580()
{
  unint64_t result = qword_1009552E0;
  if (!qword_1009552E0)
  {
    sub_1000A1370(&qword_1009552D8);
    sub_1002B9AA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009552E0);
  }
  return result;
}

void *sub_1002C45FC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002C4608()
{
  return swift_deallocObject();
}

uint64_t sub_1002C4640@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002C4388(a1, *(void **)(v2 + 24), a2);
}

unint64_t sub_1002C4654()
{
  unint64_t result = qword_100955308;
  if (!qword_100955308)
  {
    sub_1000A1370(&qword_1009552A8);
    sub_1000A132C((unint64_t *)&unk_100955310, &qword_100955298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955308);
  }
  return result;
}

uint64_t sub_1002C46F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10008DB18(a1, &qword_10094B7A0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
  return swift_task_create();
}

char *sub_1002C49B4(void *a1, void *a2, void *a3, char *a4, char *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  id v118 = a8;
  id v116 = a7;
  id v115 = a6;
  uint64_t v113 = a4;
  id v123 = a15;
  id v119 = a13;
  id v120 = a14;
  id v117 = a12;
  id v121 = a10;
  id v114 = a9;
  uint64_t v20 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v20 - 8);
  uint64_t v112 = (char *)v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker;
  type metadata accessor for ActivityTileImpressionsTracker();
  id v23 = (void *)swift_allocObject();
  type metadata accessor for BasicImpressionsTracker();
  uint64_t v24 = v15;
  v23[2] = BasicImpressionsTracker.__allocating_init(threshold:)();
  _OWORD v23[3] = &protocol witness table for BasicImpressionsTracker;
  v23[4] = 0;
  v23[5] = sub_10052D13C((uint64_t)_swiftEmptyArrayStorage);
  v23[6] = sub_1000DFC54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v15[v22] = v23;
  uint64_t v25 = &v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets];
  *(double *)uint64_t v25 = sub_1001784A0();
  *((void *)v25 + 1) = v26;
  *((void *)v25 + 2) = v27;
  *((void *)v25 + 3) = v28;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = 0;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController] = 0;
  v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility] = 0;
  uint64_t v29 = &v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  *(void *)uint64_t v29 = 0;
  v29[8] = 1;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver] = 0;
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_accountButton;
  type metadata accessor for AccountButton();
  *(void *)&v24[v30] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore] = a1;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext] = a2;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider] = a3;
  int v31 = v113;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator] = v113;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider] = a5;
  uint64_t v32 = *(void **)&a5[OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider];
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider] = v32;
  id v33 = objc_allocWithZone((Class)FIMindfulnessSessionDataProvider);
  id v34 = a1;
  uint64_t v122 = a2;
  uint64_t v111 = a3;
  uint64_t v110 = v31;
  uint64_t v109 = a5;
  uint64_t v113 = v32;
  id v35 = [v33 initWithHealthStore:v34];
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionDataProvider] = v35;
  id v36 = v115;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementsDataProvider] = v115;
  id v38 = v116;
  id v37 = v117;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider] = v116;
  id v39 = v118;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel] = v118;
  id v40 = v114;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory] = v114;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager] = a11;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager] = v37;
  uint64_t v41 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
  uint64_t v42 = (char *)objc_allocWithZone(v41);
  *(void *)&v42[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = a11;
  *(void *)&v42[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v34;
  v128.receiver = v42;
  v128.super_class = v41;
  id v43 = a11;
  id v44 = v34;
  id v45 = v43;
  id v115 = v36;
  id v108 = v38;
  id v116 = v39;
  id v114 = v40;
  id v118 = v37;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager] = [v128 init];
  uint64_t v46 = (objc_class *)type metadata accessor for StackFormattingManager();
  uint64_t v47 = (char *)objc_allocWithZone(v46);
  *(void *)&v47[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager] = v45;
  *(void *)&v47[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_healthStore] = v44;
  v127.receiver = v47;
  v127.super_class = v46;
  id v48 = v44;
  id v49 = v45;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager] = [v127 init];
  id v51 = v119;
  id v50 = v120;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDateCache] = v119;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsAvailabilityManager] = v50;
  id v52 = v123;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache] = v123;
  id v53 = v121;
  *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager] = v121;
  uint64_t v54 = self;
  id v119 = v51;
  id v120 = v50;
  id v123 = v52;
  id v121 = v53;
  id v55 = [v54 sharedInstance];
  uint64_t v56 = v113;
  unint64_t result = (char *)[v49 unitManager];
  if (result)
  {
    char v58 = result;
    uint64_t v59 = v122;
    uint64_t v60 = *(void **)&v122[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
    uint64_t v61 = (char *)objc_allocWithZone((Class)type metadata accessor for TrendsDataProvider());
    id v62 = v48;
    uint64_t v113 = v111;
    uint64_t v63 = sub_100042D78(v62, v55, v56, v58, v113, v60, v61);
    uint64_t v64 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider;
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider] = v63;
    uint64_t v65 = (objc_class *)type metadata accessor for TrendsFormattingManager();
    uint64_t v66 = (char *)objc_allocWithZone(v65);
    *(void *)&v66[OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter] = v49;
    v126.receiver = v66;
    v126.super_class = v65;
    id v117 = v49;
    id v67 = [super init];
    uint64_t v68 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager;
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager] = v67;
    unsigned int v106 = [v123 isWheelchairUser];
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies] = *(void *)&v59[OBJC_IVAR___CHFitnessAppContext_dependencies];
    swift_retain_n();
    sub_1000AFA94(&qword_100955708);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
    swift_release();
    sub_100093E60(v125, (uint64_t)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider]);
    swift_retain();
    sub_1000AFA94(&qword_100955710);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
    swift_release();
    uint64_t v69 = *((void *)&v125[0] + 1);
    uint64_t v70 = &v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_eventHub];
    *(void *)uint64_t v70 = *(void *)&v125[0];
    *((void *)v70 + 1) = v69;
    type metadata accessor for SubscriptionToken();
    swift_allocObject();
    swift_unknownObjectRetain();
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_subscriptionToken] = SubscriptionToken.init(eventHub:)();
    id v71 = [objc_allocWithZone((Class)AAUIAchievementResourceProvider) init];
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider] = v71;
    uint64_t v72 = type metadata accessor for AAUIAwardsDataProvider();
    id v73 = v62;
    uint64_t v74 = AAUIAwardsDataProvider.__allocating_init(healthStore:layoutMode:)();
    uint64_t v75 = (uint64_t *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider];
    v75[3] = v72;
    v75[4] = (uint64_t)&protocol witness table for AAUIAwardsDataProvider;
    *uint64_t v75 = v74;
    uint64_t v76 = *(void **)&v24[v64];
    uint64_t v77 = *(void **)&v24[v68];
    sub_10008E75C((uint64_t)v75, (uint64_t)v125);
    type metadata accessor for ActivityTileViewDataModel();
    v105[1] = swift_allocObject();
    id v78 = v73;
    id v107 = v78;
    char v79 = v113;
    uint64_t v111 = v79;
    uint64_t v80 = v109;
    uint64_t v113 = v80;
    id v81 = v108;
    id v82 = v120;
    id v83 = v76;
    id v84 = v77;
    swift_retain();
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel] = sub_10069B1C4(v78, v79, v80, v82, v83, v84, (uint64_t)v125, v81, v106);
    sub_10008E75C((uint64_t)v75, (uint64_t)v125);
    id v85 = (objc_class *)type metadata accessor for TrophyCasePrefetcher();
    id v86 = objc_allocWithZone(v85);
    id v87 = v114;
    id v88 = sub_1003DF114((uint64_t)v125, v87);

    uint64_t v89 = &v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher];
    *((void *)v89 + 3) = v85;
    *((void *)v89 + 4) = &off_1008C4E90;
    *(void *)uint64_t v89 = v88;
    type metadata accessor for SummaryBannerActionPresenter();
    swift_allocObject();
    swift_retain();
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_summaryBannerActionPresenter] = SummaryBannerActionPresenter.init(dependencies:placement:)();
    id v90 = objc_allocWithZone((Class)type metadata accessor for MarketingPaletteBannerPresenter());
    swift_retain();
    *(void *)&v24[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter] = MarketingPaletteBannerPresenter.init(dependencies:placement:)();

    uint64_t v91 = (objc_class *)type metadata accessor for ActivityTileViewController();
    v124.receiver = v24;
    v124.super_class = v91;
    [super initWithNibName:0 bundle:0];
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v93 = v92;
    swift_retain();
    swift_retain();
    dispatch thunk of SummaryBannerActionPresenter.onNavigateToURLAction.setter();
    swift_release();
    swift_release();
    uint64_t v94 = type metadata accessor for TaskPriority();
    uint64_t v95 = (uint64_t)v112;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v112, 1, 1, v94);
    type metadata accessor for MainActor();
    uint64_t v96 = (char *)v93;
    uint64_t v97 = static MainActor.shared.getter();
    uint64_t v98 = (void *)swift_allocObject();
    v98[2] = v97;
    v98[3] = &protocol witness table for MainActor;
    v98[4] = v96;
    sub_1000713D0(v95, (uint64_t)&unk_100955720, (uint64_t)v98);
    swift_release();
    uint64_t v99 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter;
    uint64_t v100 = *(void **)&v96[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter];
    sub_1002D3A70(&qword_100955728, v101, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
    uint64_t v102 = v96;
    id v103 = v100;
    dispatch thunk of MarketingPaletteBannerPresenter.display.setter();

    id v104 = *(id *)&v96[v99];
    dispatch thunk of MarketingPaletteBannerPresenter.activate()();

    return v102;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C54C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      if ([v6 navigateToSeymourTab])
      {
        static Log.default.getter();
        v7._countAndFlagsBits = 0xD000000000000059;
        v7._object = (void *)0x80000001007BEBD0;
        v8._object = (void *)0x80000001007BEC30;
        v8._countAndFlagsBits = 0xD000000000000027;
        Logger.trace(file:function:)(v7, v8);
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        sub_10064EE84(1);
      }

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1002C5788()
{
  uint64_t v1 = v0;
  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for ActivityTileViewController();
  [super viewDidLoad];
  id v2 = [v0 navigationController];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 navigationBar];

    [v4 setPrefersLargeTitles:1];
  }
  id v5 = [v1 navigationItem];
  id v6 = [self mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 localizedStringForKey:v7 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setTitle:v9];

  sub_1002C915C();
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_accountButton];
  [v10 setFrame:0.0, 0.0, 34.0, 34.0];
  id result = [self keyColors];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = result;
  id v13 = [result nonGradientTextColor];

  [v10 setTintColor:v13];
  [v10 addTarget:v1 action:"accountButtonTapped:" forControlEvents:64];
  id v14 = [v1 navigationItem];
  [v14 _setLargeTitleAccessoryView:v10 alignToBaseline:0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v15 = result;
  [result setEstimatedRowHeight:100.0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v16 = result;
  [result setEstimatedSectionHeaderHeight:100.0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v17 = result;
  [result setSectionHeaderTopPadding:0.0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v18 = result;
  [result setSeparatorStyle:0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_super v19 = result;

  id result = [v1 tableView];
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v20 = result;
  [result contentInset];
  [v20 setContentInset:-13.0];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v21 = result;
  [result contentInset];
  [v21 setContentInset:];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v22 = result;
  type metadata accessor for ActivityTileSectionHeader();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v24 = String._bridgeToObjectiveC()();
  [v22 registerClass:ObjCClassFromMetadata forHeaderFooterViewReuseIdentifier:v24];

  uint64_t v25 = sub_100183058();
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v27 = (uint64_t *)(v25 + 40);
    while (1)
    {
      uint64_t v28 = *(v27 - 1);
      uint64_t v29 = *v27;
      id result = [v1 tableView];
      if (!result) {
        break;
      }
      uint64_t v30 = result;
      uint64_t v31 = swift_getObjCClassFromMetadata();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 registerClass:v31 forCellReuseIdentifier:v32];

      v27 += 2;
      if (!--v26) {
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel];
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v35 = *(void *)(v33 + 56);
  *(void *)(v33 + 56) = sub_1002D58F0;
  *(void *)(v33 + 64) = v34;
  sub_10005E5F8(v35);
  [*(id *)(*(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v1];
  sub_1002C72B4();
  id result = [v1 tableView];
  if (result)
  {
    v38[0] = result;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v36 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_100751040;
    *(void *)(v37 + 32) = v36;
    v38[0] = (id)v37;
    specialized Array._endMutation()();
    *(id *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_keyValueObservers] = v38[0];
    swift_bridgeObjectRelease();
    swift_getObjectType();
    type metadata accessor for AvatarSettingsChanged();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1002D3A70((unint64_t *)&unk_1009556F0, 255, (void (*)(uint64_t))&type metadata accessor for AvatarSettingsChanged);
    swift_retain();
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
    swift_release();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v38);
    return (id)swift_release();
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002C5F14()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong tableView];

    if (v2)
    {
      IndexSet._bridgeToObjectiveC()(v3);
      id v5 = v4;
      [v2 reloadSections:v4 withRowAnimation:100];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002C5FB8()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F710);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    sub_10007E4EC((void *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider), *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider + 24));
    dispatch thunk of AvatarSettingsCoordinating.fetchAvatarSettings()();
    uint64_t v5 = type metadata accessor for AvatarSettings();
    uint64_t v6 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
    {
      sub_10008DB18((uint64_t)v2, &qword_10095F710);
      NSString v7 = 0;
    }
    else
    {
      NSString v7 = (void *)AvatarSettings.contact.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    dispatch thunk of AccountButton.updateContact(_:)();
  }
}

id sub_1002C6198()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers];
  id v2 = self;
  swift_bridgeObjectRetain();
  id v3 = [v2 defaultCenter];
  id v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = v1 + 32;
    swift_bridgeObjectRetain();
    id v7 = v4;
    do
    {
      sub_10008F484(v6, (uint64_t)v10);
      sub_10007E4EC(v10, v10[3]);
      [v7 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v10);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  [*(id *)(*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) removeObject:v0];
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ActivityTileViewController();
  return [super dealloc];
}

uint64_t sub_1002C65D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  uint64_t v5 = type metadata accessor for Date();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_100955730);
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ServiceSubscription();
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ServiceSubscriptionRequest();
  v4[19] = v8;
  v4[20] = *(void *)(v8 - 8);
  v4[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[22] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[23] = v10;
  v4[24] = v9;
  return _swift_task_switch(sub_1002C67DC, v10, v9);
}

uint64_t sub_1002C67DC()
{
  sub_1000AFA94(&qword_100951570);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  ServiceSubscriptionRequest.init(authenticationBehavior:cacheBehavior:)();
  sub_10007E4EC((void *)(v0 + 16), *(void *)(v0 + 40));
  dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)();
  return _swift_task_switch(sub_1002C68C0, 0, 0);
}

uint64_t sub_1002C68C0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = swift_task_alloc();
  v0[25] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Tab/ActivityTileViewController.swift";
  *(void *)(v2 + 24) = 107;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 247;
  *(void *)(v2 + 48) = v1;
  id v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  *id v3 = v0;
  v3[1] = sub_1002C69C8;
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E3614, v2, v5);
}

uint64_t sub_1002C69C8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1002C6E38;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = v2[14];
    uint64_t v6 = v2[15];
    uint64_t v8 = v2[13];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = v2[23];
    uint64_t v5 = v2[24];
    id v3 = sub_1002C6B14;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1002C6B14()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();
  Date.init()();
  ServiceSubscription.isSubscribed(date:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 2));
  uint64_t v10 = v0[27];
  uint64_t v11 = v0[9];
  uint64_t v12 = sub_10007E4EC((void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher), *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher + 24));
  sub_10007E4EC((void *)(*v12 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider), *(void *)(*v12 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider + 24));
  sub_1002D3A70(&qword_100955740, 255, (void (*)(uint64_t))type metadata accessor for TrophyCasePrefetcher);
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();
  sub_1003DDA20();
  sub_10007E4EC((void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider), *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 24));
  dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)();
  if (v10)
  {
    os_log_type_t v13 = static os_log_type_t.error.getter();
    id v14 = (void *)HKLogActivity;
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(HKLogActivity, v13))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v16 = v14;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[7] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v18 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v15, "Failed to activate AwardsDataProvider: %@", v17, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1002C6E38()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[24];
  return _swift_task_switch(sub_1002C6EC4, v4, v5);
}

uint64_t sub_1002C6EC4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 2));
  os_log_type_t v4 = static os_log_type_t.error.getter();
  uint64_t v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = v5;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v6, "Failed to fetch F+ subscription status, assuming not subscribed: %@", v8, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v11 = v0[9];
  uint64_t v12 = sub_10007E4EC((void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher), *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher + 24));
  sub_10007E4EC((void *)(*v12 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider), *(void *)(*v12 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider + 24));
  sub_1002D3A70(&qword_100955740, 255, (void (*)(uint64_t))type metadata accessor for TrophyCasePrefetcher);
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();
  sub_1003DDA20();
  sub_10007E4EC((void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider), *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 24));
  dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1002C72B4()
{
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    uint64_t v2 = self;
    id v3 = [v2 defaultCenter];
    os_log_type_t v4 = self;
    id v5 = [v4 mainQueue];
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = sub_1002D58C8;
    uint64_t v31 = v6;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1000711BC;
    uint64_t v29 = &unk_1008C0058;
    uint64_t v7 = _Block_copy(&aBlock);
    swift_release();
    id v25 = [v3 addObserverForName:UIApplicationDidBecomeActiveNotification object:0 queue:v5 usingBlock:v7];
    _Block_release(v7);

    id v8 = [v2 defaultCenter];
    id v9 = [v4 mainQueue];
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = sub_1002D58D0;
    uint64_t v31 = v10;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1000711BC;
    uint64_t v29 = &unk_1008C0080;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_release();
    id v12 = [v8 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v9 usingBlock:v11];
    _Block_release(v11);

    id v13 = [v2 defaultCenter];
    id v14 = [v4 mainQueue];
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = sub_1002D58D8;
    uint64_t v31 = v15;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1000711BC;
    uint64_t v29 = &unk_1008C00A8;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    id v17 = [v13 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v14 usingBlock:v16];
    _Block_release(v16);

    id v18 = [v2 defaultCenter];
    if (qword_10094A6E0 != -1) {
      swift_once();
    }
    id v19 = (id)qword_100997870;
    id v20 = [v4 mainQueue];
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = sub_1002D58E0;
    uint64_t v31 = v21;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1000711BC;
    uint64_t v29 = &unk_1008C00D0;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_release();
    id v23 = [v18 addObserverForName:v19 object:0 queue:v20 usingBlock:v22];
    _Block_release(v22);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1007526C0;
    *(void *)(v24 + 56) = swift_getObjectType();
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 88) = swift_getObjectType();
    *(void *)(v24 + 64) = v12;
    *(void *)(v24 + 120) = swift_getObjectType();
    *(void *)(v24 + 96) = v17;
    *(void *)(v24 + 152) = swift_getObjectType();
    *(void *)(v24 + 128) = v23;
    *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers) = v24;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1002C77F0(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = type metadata accessor for IndexPath();
  uint64_t v62 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v69 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_1009556D0);
  __chkstk_darwin(v4 - 8);
  id v67 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  id v13 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (void *)Strong;
    id v16 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionDataProvider));

    [v16 startMindfulnessSessionQueryIfNeeded];
  }
  swift_beginAccess();
  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (v17
    && (id v18 = (void *)v17,
        id v19 = objc_retain(*(id *)(v17
                                + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider)),
        v18,
        id v20 = [v19 name],
        v19,
        v20))
  {
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v65 = (void (**)(void, void, void, void))static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_1002D58E8;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008C00F8;
    uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))_Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002D3A70((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    uint64_t v21 = v68;
    uint64_t v63 = v9;
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v23 = v64;
    uint64_t v22 = v65;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v63);
  }
  swift_beginAccess();
  uint64_t v24 = (void *)swift_unknownObjectWeakLoadStrong();
  id v25 = v24;
  if (v24)
  {
    id v26 = [v24 navigationController];

    id v25 = [v26 visibleViewController];
  }
  swift_beginAccess();
  uint64_t v27 = swift_unknownObjectWeakLoadStrong();
  id v28 = (id)v27;
  if (!v25)
  {
    if (!v27) {
      goto LABEL_14;
    }
LABEL_19:

    goto LABEL_20;
  }
  if (!v27)
  {
    id v28 = v25;
    goto LABEL_19;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  id v29 = v25;
  char v30 = static NSObject.== infix(_:_:)();

  if ((v30 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  static os_log_type_t.info.getter();
  id v31 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t v32 = swift_unknownObjectWeakLoadStrong();
  if (v32)
  {
    uint64_t v33 = (void *)v32;
    id v28 = [self defaultCenter];
    if (qword_10094A878 != -1) {
      swift_once();
    }
    [v28 postNotificationName:qword_100997B08 object:v33];

    goto LABEL_19;
  }
LABEL_20:
  swift_beginAccess();
  uint64_t v34 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (v34)
  {
    int v35 = v34[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility];

    if (v35 == 2)
    {
      swift_beginAccess();
      uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v36)
      {
        uint64_t v37 = v36;
        id v38 = [v36 tableView];

        if (v38)
        {
          swift_beginAccess();
          uint64_t v39 = swift_unknownObjectWeakLoadStrong();
          if (v39)
          {
            id v40 = (void *)v39;
            uint64_t v41 = *(void *)(v39 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker);
            swift_retain();

            swift_beginAccess();
            *(void *)(v41 + 40) = _swiftEmptyDictionarySingleton;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            *(void *)(v41 + 48) = _swiftEmptyDictionarySingleton;
            swift_bridgeObjectRelease();
            sub_10055C168();
            ImpressionsCalculator.removeAllElements()();
            swift_release();
            id v42 = [v38 indexPathsForVisibleRows];
            if (v42)
            {
              id v43 = v42;
              uint64_t v60 = v41;
              uint64_t v44 = v66;
              uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v46 = *(void *)(v45 + 16);
              uint64_t v59 = v45;
              if (v46)
              {
                uint64_t v47 = v62 + 16;
                uint64_t v68 = *(char **)(v62 + 16);
                unint64_t v48 = v45
                    + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
                uint64_t v63 = *(void *)(v62 + 72);
                uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
                uint64_t v61 = (void (**)(uint64_t, uint64_t))(v62 + 8);
                v62 += 32;
                swift_bridgeObjectRetain();
                uint64_t v65 = (void (**)(void, void, void, void))(v47 + 40);
                unint64_t v58 = (v47 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
                id v49 = v67;
                while (1)
                {
                  ((void (*)(char *, unint64_t, uint64_t))v68)(v49, v48, v44);
                  id v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v65;
                  (*v65)(v49, 0, 1, v44);
                  if ((*v64)(v49, 1, v44) == 1) {
                    break;
                  }
                  (*(void (**)(uint64_t, char *, uint64_t))v62)(v69, v49, v44);
                  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
                  id v52 = [v38 cellForRowAtIndexPath:isa v58 v59];

                  if (v52)
                  {
                    swift_getObjectType();
                    uint64_t v53 = swift_conformsToProtocol2();
                    if (v53) {
                      uint64_t v54 = v53;
                    }
                    else {
                      uint64_t v54 = 0;
                    }
                    if (v53) {
                      uint64_t v55 = (uint64_t)v52;
                    }
                    else {
                      uint64_t v55 = 0;
                    }
                    if (v55)
                    {
                      unint64_t v56 = IndexPath.section.getter();
                      if (v56 <= 5) {
                        sub_10055B6D0(v55, v54, v56, v69, v38);
                      }
                    }
                  }
                  uint64_t v44 = v66;
                  (*v61)(v69, v66);
                  v48 += v63;
                  --v46;
                  id v49 = v67;
                  if (!v46)
                  {
                    v50(v67, 1, 1, v44);
                    break;
                  }
                }
              }
              else
              {
                uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
                swift_bridgeObjectRetain();
                v57(v67, 1, 1, v44);
              }
              swift_bridgeObjectRelease_n();
            }
            swift_release();
          }
        }
      }
    }
  }
}

void sub_1002C81AC()
{
  static os_log_type_t.info.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider));

    id v4 = (id)FIUICopyUserFirstNameFromAddressBook();
    [v3 setName:v4];
  }
}

void sub_1002C8290()
{
  static os_log_type_t.info.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = [self defaultCenter];
    if (qword_10094A880 != -1) {
      swift_once();
    }
    [v3 postNotificationName:qword_100997B10 object:v2];
  }
}

void sub_1002C83A8()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_1002C915C();
  }
}

void sub_1002C8450()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v8), (v3 & 1) != 0))
    {
      sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v9);
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v8);
    if (*((void *)&v10 + 1))
    {
      if (swift_dynamicCast())
      {
        static os_log_type_t.default.getter();
        id v4 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v6 = (void *)Strong;
          id v7 = objc_retain(*(id *)(Strong
                                 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider));

          [v7 setWheelchairUser:16];
        }
      }
    }
    else
    {
      sub_10008DB18((uint64_t)&v9, &qword_100955A00);
    }
  }
}

uint64_t sub_1002C85F4()
{
  sub_1000AFA94(&qword_10095F800);
  NSKeyValueObservedChange.oldValue.getter();
  uint64_t result = NSKeyValueObservedChange.newValue.getter();
  if (v12)
  {
    if (v9) {
      return result;
    }
    goto LABEL_9;
  }
  if ((v9 & 1) != 0 || (v10 == v7 ? (BOOL v1 = v11 == v8) : (BOOL v1 = 0), !v1))
  {
LABEL_9:
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      unint64_t v2 = (void *)result;
      swift_retain();

      uint64_t v3 = swift_beginAccess();
      __chkstk_darwin(v3);
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1002D3CC8(v4, (void (*)(uint64_t, char *))sub_1002D5950);
      swift_bridgeObjectRelease();
      uint64_t v5 = swift_beginAccess();
      __chkstk_darwin(v5);
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_10006E0F0(v6, (void (*)(char *, char *))sub_1002D5958);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1002C87B8(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_10095F710);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = (objc_class *)type metadata accessor for ActivityTileViewController();
  v15.receiver = v2;
  v15.super_class = v7;
  [super viewWillAppear:a1 & 1];
  id v8 = [v2 navigationController];
  if (v8)
  {
    char v9 = v8;
    self;
    double v10 = (void *)swift_dynamicCastObjCClass();
    if (!v10) {

    }
    [v10 detachPalette];
  }
  sub_10007E4EC(&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider], *(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider + 24]);
  dispatch thunk of AvatarSettingsCoordinating.fetchAvatarSettings()();
  uint64_t v11 = type metadata accessor for AvatarSettings();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_10008DB18((uint64_t)v6, &qword_10095F710);
    id v13 = 0;
  }
  else
  {
    id v13 = (void *)AvatarSettings.contact.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  dispatch thunk of AccountButton.updateContact(_:)();

  id v14 = [self defaultCenter];
  if (qword_10094A878 != -1) {
    swift_once();
  }
  [v14 postNotificationName:qword_100997B08 object:v2];
}

uint64_t sub_1002C8A64(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for ActivityTileViewController();
  [super viewDidAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 setDelegate:v1];
  }
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = 0;

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController] = 0;

  v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility] = 2;
  if (v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation + 8])
  {
    static os_log_type_t.default.getter();
    id v7 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    [v1 presentAppSettingsShowingPane:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation]];
  }
  sub_1002D3A70(&qword_1009556D8, v8, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
  sub_1002D3A70((unint64_t *)&unk_1009556E0, v9, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
  MetricResignActiveObserving<>.addResignActiveObserver()();
  return dispatch thunk of MarketingPaletteBannerPresenter.onAppear()();
}

void sub_1002C8C6C(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for ActivityTileViewController();
  v13.receiver = v2;
  v13.super_class = v8;
  [super viewWillDisappear:a1 & 1];
  id v9 = [self defaultCenter];
  if (qword_10094A880 != -1) {
    swift_once();
  }
  [v9 postNotificationName:qword_100997B10 object:v2];

  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility;
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility) == 2)
  {
    v12[1] = v2;
    Date.init()();
    sub_1002D3A70(&qword_1009556D8, v11, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
    MetricImpressionPublishing.publishImpressions(on:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((unsigned char *)v2 + v10) = 1;
}

void sub_1002C8F6C()
{
  BOOL v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 tableView];
  if (!v6)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v7 = v6;
  uint64_t v8 = (uint64_t)[v6 numberOfSections];

  if (v8 < 1) {
    return;
  }
  id v9 = [v1 tableView];
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t)[v9 numberOfRowsInSection:0];

  if (v11 < 1) {
    return;
  }
  IndexPath.init(row:section:)();
  id v12 = [v1 tableView];
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  objc_super v13 = v12;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v13 scrollToRowAtIndexPath:isa atScrollPosition:1 animated:1];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1002C915C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v8 setFormattingContext:2];
  id v9 = self;
  NSString v10 = String._bridgeToObjectiveC()();
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v12 = [v9 dateFormatFromTemplate:v10 options:0 locale:isa];

  [v8 setDateFormat:v12];
  Date.init()();
  id v13 = [v17[1] navigationItem];
  Class v14 = Date._bridgeToObjectiveC()().super.isa;
  NSString v15 = [v8 stringFromDate:v14];

  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v13 _setWeeTitle:v15];

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1002C9404()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexSet();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v15 = (char *)&v27 - v14;
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  id v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v17 = [*(id *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
  if (v17)
  {
    id v18 = v17;
    id v19 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
    id v20 = [v19 activityMoveMode];
    if (v20 == [v18 activityMoveMode])
    {
      v16(v15, v9);

      return;
    }
    [v19 setActivityMoveMode:[v18 activityMoveMode]];
    id v21 = [v1 tableView];
    if (!v21)
    {
      __break(1u);
      return;
    }
    uint64_t v22 = v21;
    char v30 = &off_1008B4B40;
    sub_1002D3A70((unint64_t *)&qword_100955538, 255, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    sub_1000AFA94(&qword_100955540);
    sub_1002D54D8((unint64_t *)&qword_100955548, &qword_100955540);
    uint64_t v23 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    IndexSet._bridgeToObjectiveC()(v24);
    id v26 = v25;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v23);
    [v22 reloadSections:v26 withRowAnimation:100];
  }
  v16(v15, v9);
}

uint64_t type metadata accessor for ActivityTileViewController()
{
  return self;
}

id sub_1002C98EC(void *a1)
{
  id v134 = a1;
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_100955690);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v128 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095BFA0);
  uint64_t v130 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v128 = (uint64_t)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v129 = (uint64_t)&v128 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_1009556A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CatalogTipSection();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FitnessPlusStackViewModel();
  __chkstk_darwin(v18);
  id v20 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = IndexPath.section.getter();
  unint64_t v133 = sub_100183140(v21);
  switch((char)v133)
  {
    case 1:
      uint64_t v69 = *(void *)&v132[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel];
      uint64_t v70 = IndexPath.row.getter();
      uint64_t v71 = *(void *)(*(void *)(v69 + 24) + 24);
      if (v70 >= *(void *)(v71 + 16))
      {
        NSString v89 = String._bridgeToObjectiveC()();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v91 = [v134 dequeueReusableCellWithIdentifier:v89 forIndexPath:isa];
      }
      else
      {
        if (v70 < 0)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          v137[0] = 0;
          v137[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(30);
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        sub_10008E75C(v71 + 40 * v70 + 32, (uint64_t)v137);
        sub_10008E75C((uint64_t)v137, (uint64_t)v136);
        sub_1000AFA94((uint64_t *)&unk_100955630);
        sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
        if (swift_dynamicCast()
          || (sub_10008E75C((uint64_t)v137, (uint64_t)v136),
              type metadata accessor for MindfulnessSessionViewModel(),
              swift_dynamicCast()))
        {
        }
        else
        {
          sub_10008E75C((uint64_t)v137, (uint64_t)v136);
          if (!swift_dynamicCast())
          {
            while (1)
            {
              v136[0] = 0;
              v136[1] = 0xE000000000000000;
              _StringGuts.grow(_:)(45);
              swift_bridgeObjectRelease();
LABEL_49:
              _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
            }
          }
          sub_1002D56BC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
        }
        NSString v125 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class v126 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v127 = [v134 dequeueReusableCellWithIdentifier:v125 forIndexPath:v126];

        id v24 = v127;
        sub_1002CAA90((uint64_t)v137, v24);

        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v137);
LABEL_40:
        char v119 = v133;
LABEL_41:
        id v91 = v24;
        uint64_t v122 = IndexPath.row.getter();
        sub_100182F18(v122, v119);
        NSString v123 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v91 setAccessibilityIdentifier:v123];
      }
      [v91 setSelectionStyle:0];
      return v91;
    case 2:
      NSString v57 = String._bridgeToObjectiveC()();
      Class v58 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v134 dequeueReusableCellWithIdentifier:v57 forIndexPath:v58];

      type metadata accessor for CatalogTipActivityTile();
      uint64_t v59 = swift_dynamicCastClass();
      if (v59)
      {
        uint64_t v60 = v59;
        id v61 = v132;
        uint64_t v62 = *(void *)(*(void *)&v132[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                        + 48)
            + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
        swift_beginAccess();
        sub_1000AEF2C(v62, (uint64_t)v13, (uint64_t *)&unk_100955650);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
        {
          sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_100955650);
        }
        else
        {
          sub_1002D5654((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          sub_1002D3A70(&qword_1009556A8, v101, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
          id v134 = (id)OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_catalogTipView;
          id v24 = v24;
          id v102 = v61;
          dispatch thunk of CatalogTipPlainView.delegate.setter();
          sub_1002D5748((uint64_t)&v17[*(int *)(v14 + 36)], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
          uint64_t v103 = type metadata accessor for CatalogTipSectionItem();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v10, 0, 1, v103);
          uint64_t v104 = v60 + OBJC_IVAR____TtC10FitnessApp22CatalogTipActivityTile_tipSectionItem;
          swift_beginAccess();
          sub_1002D57B0((uint64_t)v10, v104);
          swift_endAccess();
          dispatch thunk of CatalogTipPlainView.configure(attributedTagStrings:artwork:artworkCropCode:)();

          sub_1002D56BC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
        }
      }
      goto LABEL_40;
    case 3:
      NSString v63 = String._bridgeToObjectiveC()();
      Class v64 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v134 dequeueReusableCellWithIdentifier:v63 forIndexPath:v64];

      type metadata accessor for TrendsOnBoardingActivityTile();
      if (!swift_dynamicCastClass()) {
        goto LABEL_40;
      }
      uint64_t v65 = *(void *)&v132[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel];
      uint64_t v66 = swift_allocObject();
      swift_unknownObjectWeakInit();
      if (*(unsigned __int8 *)(*(void *)(v65 + 32) + 96) - 2 >= 2)
      {
        if (*(unsigned char *)(*(void *)(v65 + 32) + 96))
        {
          id v121 = v24;
          swift_release();
          uint64_t v66 = 0;
          uint64_t v68 = 2;
        }
        else
        {
          id v105 = v24;
          uint64_t v68 = (uint64_t)sub_1002D572C;
        }
      }
      else
      {
        id v67 = v24;
        swift_release();
        uint64_t v66 = 0;
        uint64_t v68 = 1;
      }
      sub_100317790(v68, v66);
      sub_1002D5734(v68);
      goto LABEL_39;
    case 4:
      NSString v36 = String._bridgeToObjectiveC()();
      Class v37 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v38 = [v134 dequeueReusableCellWithIdentifier:v36 forIndexPath:v37];

      id v24 = v38;
      id v39 = [v132 view];
      if (!v39) {
        goto LABEL_47;
      }
      id v40 = v39;
      [v39 bounds];
      CGFloat v42 = v41;
      CGFloat v44 = v43;
      CGFloat v46 = v45;
      CGFloat v48 = v47;

      v138.origin.CGFloat x = v42;
      v138.origin.CGFloat y = v44;
      v138.size.CGFloat width = v46;
      v138.size.CGFloat height = v48;
      double Width = CGRectGetWidth(v138);
      id v50 = self;
      id v51 = [v50 literUnitWithMetricPrefix:4];
      id v52 = [v50 gramUnitWithMetricPrefix:9];
      id v53 = [v50 minuteUnit];
      id v54 = [v51 unitDividedByUnit:v52];
      id v55 = [v54 unitDividedByUnit:v53];

      id v56 = [self quantityWithUnit:v55 doubleValue:99.99];
      id v93 = (void *)sub_1006744D0(v56, 4u);

      double v94 = Width * 0.5 + -16.0 + -8.0 + -40.0 + -12.0;
      [v93 boundingRectWithSize:3 options:0 context:1.79769313e308];
      double v96 = v95;

      type metadata accessor for TrendPairTableViewCell(0);
      uint64_t v97 = swift_dynamicCastClass();
      if (!v97) {
        goto LABEL_39;
      }
      uint64_t v98 = v97;
      unint64_t v99 = IndexPath.row.getter();
      sub_10069B850(v99, v96 < v94, (uint64_t)v3);
      uint64_t v100 = v131;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v3, 1, v131) == 1)
      {

        sub_10008DB18((uint64_t)v3, (uint64_t *)&unk_100955690);
        goto LABEL_40;
      }
      uint64_t v106 = *(int *)(v100 + 48);
      uint64_t v107 = v129;
      uint64_t v108 = v100;
      uint64_t v109 = v129 + v106;
      uint64_t v110 = (uint64_t)&v3[v106];
      sub_1002D5654((uint64_t)v3, v129, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_1002D5654(v110, v109, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
      uint64_t v111 = *(int *)(v108 + 48);
      uint64_t v112 = v128;
      uint64_t v113 = v128 + v111;
      sub_1002D5748(v107, v128, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_1002D5748(v109, v113, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
      sub_100609C9C(v112, v113);
      sub_1002D56BC(v113, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
      sub_1002D56BC(v112, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      uint64_t v114 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v115 = (void (**)(uint64_t))(v98 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
      char *v115 = sub_1002D571C;
      v115[1] = (void (*)(uint64_t))v114;
      swift_release();
      uint64_t v116 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
      id v117 = (void *)*(unsigned __int8 *)(*(void *)(v98
                                                    + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView)
                                        + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
      if (v117 != 1)
      {
        sub_10057A828(v117);
        uint64_t v116 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
      }
      id v118 = (void *)*(unsigned __int8 *)(*(void *)(v98
                                                    + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView)
                                        + v116);
      char v119 = v133;
      if (v118 != 1) {
        sub_10057A828(v118);
      }
      uint64_t v120 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_1001FAB90((uint64_t)sub_1002D5724, v120);

      swift_release();
      sub_10008DB18(v107, (uint64_t *)&unk_10095BFA0);
      swift_release();
      goto LABEL_41;
    case 5:
      NSString v72 = String._bridgeToObjectiveC()();
      Class v73 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v134 dequeueReusableCellWithIdentifier:v72 forIndexPath:v73];

      type metadata accessor for AwardsActivityTile();
      uint64_t v74 = swift_dynamicCastClass();
      if (!v74) {
        goto LABEL_40;
      }
      uint64_t v75 = v74;
      uint64_t v76 = swift_allocObject();
      id v77 = v132;
      *(void *)(v76 + 16) = v132;
      id v78 = (uint64_t (**)(void *, void *, CGFloat, CGFloat, CGFloat, CGFloat))(v75
                                                                                        + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_onDidTapAchievement);
      uint64_t v79 = *(void *)(v75 + OBJC_IVAR____TtC10FitnessApp18AwardsActivityTile_onDidTapAchievement);
      *id v78 = sub_1002D55E0;
      v78[1] = (uint64_t (*)(void *, void *, CGFloat, CGFloat, CGFloat, CGFloat))v76;
      uint64_t v80 = (char *)v77;
      id v24 = v24;
      sub_10005E5F8(v79);
      uint64_t v81 = *(void *)(*(void *)&v80[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                      + 40)
          + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards;
      id v82 = *(void **)v81;
      if (*(void *)v81)
      {
        id v84 = *(void **)(v81 + 8);
        id v83 = *(void **)(v81 + 16);
        uint64_t v85 = *(void *)&v80[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
        id v86 = *(void **)&v80[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
        sub_1002D5604(v82, v84, v83);
        id v87 = v84;
        id v88 = v83;
        sub_1003907D0(v82, (objc_class *)v84, v83, v85, v86, 0);
      }
      goto LABEL_39;
    case 6:
      goto LABEL_48;
    default:
      NSString v22 = String._bridgeToObjectiveC()();
      Class v23 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v134 dequeueReusableCellWithIdentifier:v22 forIndexPath:v23];

      type metadata accessor for TodayActivityTile();
      uint64_t v25 = swift_dynamicCastClass();
      if (!v25) {
        goto LABEL_40;
      }
      id v26 = v132;
      uint64_t v27 = *(void **)&v132[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
      uint64_t v28 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp17TodayActivityTile_formattingManager);
      *(void *)(v25 + OBJC_IVAR____TtC10FitnessApp17TodayActivityTile_formattingManager) = v27;
      id v24 = v24;
      id v29 = v27;

      uint64_t v30 = *(void *)(*(void *)&v26[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                      + 16);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong
        && (uint64_t v32 = (void *)Strong,
            id v33 = v24,
            id v34 = v32,
            char v35 = static NSObject.== infix(_:_:)(),
            v34,
            v34,
            v33,
            (v35 & 1) != 0))
      {

        id v24 = v33;
      }
      else
      {
        swift_unknownObjectWeakAssign();
        id v92 = *(void **)(v30 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary);
        *(void *)(v30 + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary) = 0;

        sub_1001FF420(*(unsigned char *)(*(void *)(v30
                                           + OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider)
                               + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser));
        sub_1003926B0();
LABEL_39:
      }
      goto LABEL_40;
  }
}

void sub_1002CAA90(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FitnessPlusStackViewModel();
  id v38 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008E75C(a1, (uint64_t)v41);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (swift_dynamicCast())
  {

    type metadata accessor for WorkoutsListTableViewCell();
    if (swift_dynamicCastClass())
    {
      sub_10008E75C(a1, (uint64_t)v41);
      uint64_t v16 = a2;
      if (swift_dynamicCast())
      {
        id v38 = v16;
        uint64_t v17 = v39;
        id v18 = v40;
        uint64_t v19 = *(void *)(v39 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel);
        id v20 = [v40 UUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        UUID.uuidString.getter();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        sub_10007E4EC((void *)(*(void *)(v19 + 40)+ OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider), *(void *)(*(void *)(v19 + 40)+ OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider+ 24));
        unint64_t v21 = dispatch thunk of AAUIAwardsDataProviding.achievements(forWorkoutIdentifier:)();
        swift_bridgeObjectRelease();
        NSString v22 = *(void **)(v17 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
        Class v23 = *(void **)(v17 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager);
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        sub_1001B430C(v18, v22, v23, v24, 1, 0, 0);
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10008E75C(a1, (uint64_t)v41);
    type metadata accessor for MindfulnessSessionViewModel();
    if (swift_dynamicCast())
    {

      type metadata accessor for MindfulnessSessionListTableViewCell();
      if (swift_dynamicCastClass())
      {
        sub_10008E75C(a1, (uint64_t)v41);
        id v25 = a2;
        if (swift_dynamicCast())
        {
          id v26 = v40;
          uint64_t v27 = *(char **)(v39 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
          uint64_t v28 = *(void **)(v39
                         + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager);
          uint64_t v29 = swift_allocObject();
          swift_unknownObjectWeakInit();
          swift_retain();
          sub_100536384(v26, v27, v28, (uint64_t)sub_1001D7D10, v29);

          swift_release_n();
        }
        else
        {
        }
      }
    }
    else
    {
      sub_10008E75C(a1, (uint64_t)v41);
      if (swift_dynamicCast())
      {
        sub_1002D56BC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
        type metadata accessor for StackListTableViewCell();
        if (swift_dynamicCastClass())
        {
          sub_10008E75C(a1, (uint64_t)v41);
          id v30 = a2;
          char v31 = swift_dynamicCast();
          uint64_t v32 = v38[7];
          if (v31)
          {
            v32(v6, 0, 1, v7);
            uint64_t v33 = v37;
            sub_1002D5654((uint64_t)v6, v37, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
            id v34 = *(void **)(v39 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
            uint64_t v35 = swift_allocObject();
            swift_unknownObjectWeakInit();
            swift_retain();
            sub_10038EDD4(v33, v34, (uint64_t)sub_1002D5818, v35);

            swift_release_n();
            sub_1002D56BC(v33, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
          }
          else
          {
            v32(v6, 1, 1, v7);

            sub_10008DB18((uint64_t)v6, &qword_100950DA8);
          }
        }
      }
    }
  }
}

void sub_1002CB0D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsAvailabilityManager);
    id v3 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
    id v4 = sub_10020AD40(v2);
    [v1 presentViewController:v4 animated:1 completion:0];
  }
}

void sub_1002CB178(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_1002CB1D4(a1);
  }
}

void sub_1002CB1D4(uint64_t a1)
{
  [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache] isWheelchairUser];
  id v3 = [v1 navigationController];
  if (!v3) {
    return;
  }
  id v4 = v3;
  id v5 = [v3 viewControllers];

  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      unint64_t v8 = v7 - 1;
      if (__OFSUB__(v7, 1))
      {
        __break(1u);
      }
      else if ((v6 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v9 = *(id *)(v6 + 8 * v8 + 32);
LABEL_9:
          uint64_t v10 = v9;
          swift_bridgeObjectRelease();
          uint64_t v11 = v1;
          id v12 = v10;
          char v13 = static NSObject.== infix(_:_:)();

          if (v13)
          {
            uint64_t v14 = sub_1003A7800(a1);
            if (v14)
            {
              uint64_t v17 = v14;
              id v15 = [v11 navigationController];
              if (v15)
              {
                uint64_t v16 = v15;
                [v15 pushViewController:v17 animated:1];
              }
            }
          }
          return;
        }
        __break(1u);
        return;
      }
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_1002CB454()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (char *)result;
    uint64_t v2 = *(void **)(result + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    id v4 = v2;
    sub_1001FAB90((uint64_t)sub_1002AF094, v3);
    swift_release();
    id v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    id v7 = v5;
    sub_1001FAB90((uint64_t)sub_1002D5BC4, v6);

    return swift_release();
  }
  return result;
}

uint64_t sub_1002CB58C(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  static os_log_type_t.default.getter();
  id v12 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100752410;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000AA64C();
  *(void *)(v13 + 64) = v14;
  *(void *)(v13 + 32) = 0xD000000000000038;
  *(void *)(v13 + 40) = 0x80000001007BE890;
  *(void *)(v13 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
  *(void *)(v13 + 104) = sub_1002D5820();
  *(void *)(v13 + 72) = a1;
  id v15 = v12;
  id v16 = a1;
  v69.origin.CGFloat x = a3;
  v69.origin.CGFloat y = a4;
  v69.size.CGFloat width = a5;
  v69.size.CGFloat height = a6;
  uint64_t v17 = NSStringFromRect(v69);
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v14;
  *(void *)(v13 + 112) = v18;
  *(void *)(v13 + 120) = v20;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  unsigned int v62 = [v16 unearned] ^ 1;
  if (AAUIShouldUseNewTrophyCase())
  {
    id v59 = (id)type metadata accessor for TrophyCaseAwardDetailViewController();
    unint64_t v21 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
    NSString v22 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
    sub_10008E75C((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)&aBlock);
    Class v23 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
    uint64_t v24 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
    id v25 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
    id v26 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
    uint64_t v27 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
    id v51 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
    id v52 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
    uint64_t v28 = (uint64_t)v66;
    id v54 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
    uint64_t v55 = (uint64_t)v67;
    uint64_t v57 = sub_1000DDC00((uint64_t)&aBlock, (uint64_t)v66);
    id v56 = v16;
    id v53 = v21;
    id v50 = v22;
    id v29 = v23;
    id v30 = v24;
    id v31 = v25;
    id v32 = v26;
    *(void *)&long long v49 = v27;
    *((void *)&v49 + 1) = v51;
    id v33 = sub_1006C8960(v56, v53, v50, v57, v29, v30, v31, v32, v49, v52, v54, 0, 0, v62, 1, 0, (uint64_t)v59, v28, v55);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
  }
  else
  {
    id v33 = [objc_allocWithZone((Class)CHAchievementDetailViewController) initWithAchievement:v16 locProvider:*(void *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider] formatsForFriend:0 forDayView:1 forModalPresentation:0 shouldShowCelebration:0];
  }
  self;
  uint64_t v34 = swift_dynamicCastObjCClass();
  if (v34)
  {
    uint64_t v58 = v34;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a2;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a2;
    id v60 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
    id v67 = sub_1002D5888;
    uint64_t v68 = v35;
    aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_100070394;
    uint64_t v66 = &unk_1008C0008;
    uint64_t v37 = _Block_copy(&aBlock);
    id v38 = a2;
    swift_unknownObjectRetain_n();
    id v39 = v38;
    swift_retain();
    swift_retain();
    id v40 = v6;
    swift_release();
    id v67 = sub_1002D58A8;
    uint64_t v68 = v36;
    aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_100070394;
    uint64_t v66 = &unk_1008C0030;
    double v41 = _Block_copy(&aBlock);
    swift_release();
    id v42 = [v60 initWithPresentingViewController:v40 detailViewController:v33 shouldPlayFlipInAnimation:v62 initialBadgeFrame:v39 conversionView:v37 didStartAnimationBlock:a3 didFinishAnimationBlock:a4];

    swift_unknownObjectRelease();
    _Block_release(v41);
    _Block_release(v37);
    uint64_t v43 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator;
    CGFloat v44 = *(void **)&v40[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator];
    *(void *)&v40[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = v42;

    double v45 = *(void **)&v40[v43];
    if (v45) {
      [v45 setShouldAdjustForInset:1];
    }
    id v46 = [v40 navigationController];
    if (v46)
    {
      double v47 = v46;
      [v46 pushViewController:v58 animated:1];
    }
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1002CBC48(void *a1, unint64_t a2)
{
  char v3 = sub_100183140(a2);
  if (v3 == 6)
  {
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    char v4 = v3;
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v5];

    if (v6)
    {
      id v7 = v6;
      sub_100182E0C(v4);
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v7 setAccessibilityIdentifier:v8];
    }
    uint64_t v9 = sub_100182B64(v4);
    uint64_t v11 = v10;
    id v12 = sub_1002CBE44(v4);
    uint64_t v13 = (uint64_t)v12;
    uint64_t v15 = v14;
    if (v6)
    {
      type metadata accessor for ActivityTileSectionHeader();
      if (swift_dynamicCastClass())
      {
        id v16 = v6;
        sub_100570074(v9, v11, 0, 0, v13, v15, 18.0);
        sub_10005E5F8(v13);
      }
      else
      {
        id v17 = v6;
        sub_10005E5F8(v13);
      }
    }
    else
    {
      sub_10005E5F8((uint64_t)v12);
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  return result;
}

void *sub_1002CBE44(char a1)
{
  uint64_t v2 = sub_1002D55C8;
  uint64_t v3 = 0;
  switch(a1)
  {
    case 1:
      goto LABEL_6;
    case 3:
      if (*(unsigned char *)(*(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                                + 32)
                    + 96) != 1)
        return 0;
      uint64_t v2 = sub_1002D55B0;
LABEL_6:
      *(void *)(swift_allocObject() + 16) = v1;
      char v4 = v1;
      return v2;
    case 4:
      uint64_t v2 = sub_1002D5B4C;
      goto LABEL_6;
    case 5:
      uint64_t v2 = sub_1002D5560;
      goto LABEL_6;
    default:
      return (void *)v3;
  }
}

uint64_t sub_1002CC058(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                              + 24)
                  + 24);
  if (*(void *)(v12 + 16) > a1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_10008E75C(v12 + 40 * a1 + 32, (uint64_t)v27);
      sub_10008E75C((uint64_t)v27, (uint64_t)v26);
      sub_1000AFA94((uint64_t *)&unk_100955630);
      sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      if (swift_dynamicCast())
      {
        uint64_t v13 = v25;
        sub_1002CF618(v25, 0, 0, 0);
      }
      else
      {
        sub_10008E75C((uint64_t)v27, (uint64_t)v26);
        type metadata accessor for MindfulnessSessionViewModel();
        if (swift_dynamicCast())
        {
          uint64_t v14 = v25;
          uint64_t v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
          id v16 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
          id v17 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
          id v18 = v14;
          uint64_t v19 = sub_10039EDA8(v18, v15, v16);
          id v20 = [v2 navigationController];
          if (v20)
          {
            unint64_t v21 = v20;
            [v20 pushViewController:v19 animated:1];
          }
          else
          {
          }
        }
        else
        {
          sub_10008E75C((uint64_t)v27, (uint64_t)v26);
          char v22 = swift_dynamicCast();
          Class v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
          if ((v22 & 1) == 0)
          {
            v23(v6, 1, 1, v7);
            _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
            return sub_10008DB18((uint64_t)v6, &qword_100950DA8);
          }
          v23(v6, 0, 1, v7);
          sub_1002D5654((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
          sub_1002CFC14((uint64_t)v11);
          sub_1002D56BC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
        }
      }
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
    }
  }
  return result;
}

uint64_t sub_1002CC3A4(uint64_t a1)
{
  uint64_t v71 = a1;
  uint64_t v70 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v3 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Date();
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  id v78 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v5 - 8);
  Class v73 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095F630);
  __chkstk_darwin(v7 - 8);
  NSString v72 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for MetricPage();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  id v77 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B7B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v76 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for MetricClickAction();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  id v87 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MetricClickElement();
  uint64_t v83 = *(void *)(v13 - 8);
  uint64_t v84 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MetricLocation();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v20 = (char *)&v66 - v19;
  uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v21 - 8);
  Class v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CatalogTipSection();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v1;
  uint64_t v28 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel)
                  + 48)
      + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  swift_beginAccess();
  sub_1000AEF2C(v28, (uint64_t)v23, (uint64_t *)&unk_100955650);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v29 = v69;
    uint64_t v30 = v70;
    sub_10008DB18((uint64_t)v23, (uint64_t *)&unk_100955650);
    static Log.default.getter();
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "[ActivityTileViewController] tip row selected with no tip section", v33, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v3, v30);
  }
  else
  {
    id v67 = v27;
    sub_1002D5654((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    sub_100182B64(2);
    uint64_t v35 = *(void (**)(char *, void))(v83 + 104);
    uint64_t v36 = v84;
    v35(v15, enum case for MetricClickElement.shelf(_:));
    sub_1004E7AF8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v68 = v20;
    MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)();
    uint64_t v37 = &v27[*(int *)(v24 + 36)];
    id v38 = (uint64_t *)&v37[*(int *)(type metadata accessor for CatalogTipSectionItem() + 28)];
    uint64_t v39 = v38[1];
    uint64_t v70 = *v38;
    swift_bridgeObjectRetain();
    id v40 = (void *)ShelfLockupAttributedTagStrings.detail.getter();
    id v41 = [v40 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = enum case for MetricClickElement.button(_:);
    ((void (*)(char *, void, uint64_t))v35)(v15, enum case for MetricClickElement.button(_:), v36);
    sub_1004E7AF8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v43 = v85;
    uint64_t v69 = v39;
    MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)();
    uint64_t v91 = v89;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v87, enum case for MetricClickAction.navigate(_:), v88);
    ((void (*)(char *, uint64_t, uint64_t))v35)(v15, v42, v36);
    uint64_t v44 = enum case for MetricClickDestination.trainerTip(_:);
    uint64_t v45 = type metadata accessor for MetricClickDestination();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v76, v44, v45);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
    uint64_t v48 = enum case for MetricPageCategory.summary(_:);
    uint64_t v49 = type metadata accessor for MetricPageCategory();
    uint64_t v50 = *(void *)(v49 - 8);
    id v51 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v72, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    uint64_t v52 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v73, 1, 1, v52);
    swift_bridgeObjectRetain();
    id v53 = v77;
    MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)();
    sub_1000AFA94(&qword_100955680);
    uint64_t v54 = v74;
    uint64_t v55 = *(void *)(v74 + 72);
    unint64_t v56 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_10074E640;
    unint64_t v58 = v57 + v56;
    id v59 = *(void (**)(unint64_t, char *, uint64_t))(v54 + 16);
    id v60 = v43;
    uint64_t v61 = v75;
    v59(v58, v60, v75);
    v59(v58 + v55, v68, v61);
    uint64_t v90 = *(void *)(v89 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker);
    swift_retain();
    unsigned int v62 = v78;
    Date.init()();
    type metadata accessor for ActivityTileImpressionsTracker();
    sub_1002D3A70(&qword_100955560, 255, (void (*)(uint64_t))type metadata accessor for ActivityTileImpressionsTracker);
    MetricImpressionConsuming.snapshotOnScreenImpressions(on:)();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v62, v82);
    swift_release();
    type metadata accessor for ActivityTileViewController();
    sub_1002D3A70(&qword_100955688, v63, (void (*)(uint64_t))type metadata accessor for ActivityTileViewController);
    uint64_t v64 = v87;
    MetricClickPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:metricPage:locations:impressions:topicRoutingBehavior:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v81);
    sub_10008DB18(v47, (uint64_t *)&unk_10095B7B0);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v15, v84);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v88);
    uint64_t v65 = *(void (**)(char *, uint64_t))(v54 + 8);
    v65(v85, v61);
    v65(v68, v61);
    return sub_1002D56BC((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
  }
}

uint64_t sub_1002CCFB4()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  __chkstk_darwin(v1);
  uint64_t v52 = (char *)v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_100955640);
  __chkstk_darwin(v3 - 8);
  uint64_t v61 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5);
  id v59 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v7 - 8);
  uint64_t v58 = (uint64_t)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CatalogTipPlayerOptions();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v63 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for CatalogTipSummaryNavigationHandlers();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CatalogTipSection();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v20 = (char *)v47 - v19;
  uint64_t v21 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                  + 48)
      + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  swift_beginAccess();
  sub_1000AEF2C(v21, (uint64_t)v13, (uint64_t *)&unk_100955650);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v54 = v14;
  if (v22(v13, 1, v14) == 1)
  {
    uint64_t v24 = v50;
    uint64_t v23 = v51;
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_100955650);
    uint64_t v25 = v52;
    static Log.default.getter();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[ActivityTileViewController] tip row selected with no tip section", v28, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v25, v23);
  }
  else
  {
    uint64_t v30 = (uint64_t)v20;
    sub_1002D5654((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = swift_allocObject();
    id v49 = v0;
    swift_unknownObjectWeakInit();
    uint64_t v48 = v30;
    sub_1002D5748(v30, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    unint64_t v33 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v32;
    uint64_t v52 = (char *)v34;
    sub_1002D5654((uint64_t)v18, v34 + v33, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    uint64_t v51 = v31;
    swift_retain();
    swift_retain();
    uint64_t v35 = v64;
    CatalogTipSummaryNavigationHandlers.init(onLearnMoreTapped:onSeeMoreTipsTapped:)();
    uint64_t v50 = type metadata accessor for CatalogTipPlayerPresenter();
    v47[1] = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies];
    sub_1000AFA94((uint64_t *)&unk_10095B7D0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10074E640;
    swift_retain();
    static CatalogTipPlayerOptions.summary.getter();
    static CatalogTipPlayerOptions.catalogSync.getter();
    uint64_t v65 = v36;
    sub_1002D3A70((unint64_t *)&unk_100955660, 255, (void (*)(uint64_t))&type metadata accessor for CatalogTipPlayerOptions);
    sub_1000AFA94(&qword_10095B7E0);
    sub_1002D54D8((unint64_t *)&unk_100955670, &qword_10095B7E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v37 = v30 + *(int *)(v54 + 36);
    id v38 = (int *)type metadata accessor for CatalogTipSectionItem();
    sub_1000AEF2C(v37 + v38[8], v58, &qword_1009512E8);
    uint64_t v39 = *(void *)(v37 + v38[9]);
    uint64_t v54 = *(void *)(v37 + v38[10]);
    uint64_t v55 = v39;
    uint64_t v40 = v38[12];
    uint64_t v53 = *(void *)(v37 + v38[11]);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v37 + v40, v57);
    uint64_t v42 = v60;
    id v41 = v61;
    uint64_t v43 = v35;
    uint64_t v44 = v62;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v61, v43, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v41, 0, 1, v44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    CatalogTipPlayerPresenter.__allocating_init(dependencies:metricTopicRoutingBehavior:options:pageContext:streamingArtwork:streamingArtworkCropCode:streamingSubtitle:streamingTitle:streamingURL:summaryNavigationHandlers:tipIdentifier:)();
    id v45 = objc_allocWithZone((Class)type metadata accessor for CatalogTipPlayerViewController());
    swift_retain();
    uint64_t v46 = (void *)CatalogTipPlayerViewController.init(presenter:)();
    [v49 presentViewController:v46 animated:1 completion:0];
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v64, v44);
    return sub_1002D56BC(v48, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
  }
}

void sub_1002CD970(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = IndexPath.section.getter();
  unsigned __int8 v7 = sub_100183140(v6);
  if (v7 == 6
    || ((unsigned __int8 v8 = v7, swift_getObjectType(), (v9 = swift_conformsToProtocol2()) != 0) ? (v10 = v9) : (v10 = 0),
        v9 ? (uint64_t v11 = (uint64_t)a2) : (uint64_t v11 = 0),
        !v11))
  {
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v12 = a2;
    sub_10055B6D0(v11, v10, v8, a3, a1);
  }
}

void sub_1002CDD98(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  if (v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility])
  {
    uint64_t v4 = v1;
    *(void *)uint64_t v3 = 0;
    v3[8] = 1;
    id v5 = objc_allocWithZone((Class)type metadata accessor for AccountViewController());
    swift_retain();
    swift_unknownObjectRetain();
    unint64_t v6 = (void *)AccountViewController.init(dependencies:fitnessSettingsProvider:)();
    id v10 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v6];
    switch(a1)
    {
      case 0:
        goto LABEL_10;
      case 1:
        id v7 = objc_allocWithZone((Class)type metadata accessor for NotificationSettingsViewController());
        swift_retain();
        id v8 = (id)NotificationSettingsViewController.init(dependencies:)();
        goto LABEL_9;
      case 2:
        id v8 = [objc_allocWithZone((Class)CHASActivitySetupMetricsCollectionViewController) initWithPresentationContext:6];
        goto LABEL_9;
      case 3:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v9 = dispatch thunk of AccountFitnessSettingsProviding.makeChangeGoalsViewController()();
        goto LABEL_8;
      case 4:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v9 = dispatch thunk of AccountFitnessSettingsProviding.makeUnitsViewController()();
LABEL_8:
        id v8 = (id)v9;
        swift_unknownObjectRelease();
        if (v8)
        {
LABEL_9:
          [v10 pushViewController:v8 animated:0];
        }
LABEL_10:
        [v4 presentViewController:v10 animated:1 completion:0 v10];

        break;
      default:
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x1002CDFECLL);
    }
  }
  else
  {
    *(void *)uint64_t v3 = a1;
    v3[8] = 0;
  }
}

void sub_1002CE054(char a1, uint64_t a2)
{
  if (a2 && (a1 & 1) == 0)
  {
    swift_errorRetain();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    uint64_t v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      swift_errorRetain();
      swift_errorRetain();
      id v5 = v3;
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      id v7 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v6 = 138412290;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v7 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v4, "presentWorkoutStructureData failed with error: %@", v6, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
}

void sub_1002CE328()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);

    sub_10064B5F8();
  }
}

void sub_1002CE394(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);

    sub_10064D1F4(a2);
  }
}

id sub_1002CE414(void *a1, int a2, int a3, char a4, uint64_t a5, char a6)
{
  uint64_t v99 = a5;
  int v84 = a3;
  int v100 = a2;
  LODWORD(v102) = a4 & 1;
  int v98 = a6 & 1;
  uint64_t v83 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v80 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for DispatchQoS();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  id v78 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for DispatchTime();
  uint64_t v77 = *(void *)(v101 - 8);
  uint64_t v11 = __chkstk_darwin(v101);
  uint64_t v75 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v75 - v13;
  if (a4) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1002CEF34();
  }
  LODWORD(v96) = static os_log_type_t.default.getter();
  uint64_t v15 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100752410;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v17 = sub_1000AA64C();
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 32) = 0xD000000000000050;
  *(void *)(v16 + 40) = 0x80000001007BE520;
  id v18 = v15;
  id v19 = a1;
  id v20 = [v19 description];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v17;
  *(void *)(v16 + 72) = v21;
  *(void *)(v16 + 80) = v23;
  int v97 = v14 & 1;
  LOBYTE(aBlock[0]) = v14 & 1;
  BYTE1(aBlock[0]) = (_BYTE)v102;
  uint64_t v24 = String.init<A>(describing:)();
  *(void *)(v16 + 136) = &type metadata for String;
  *(void *)(v16 + 144) = v17;
  *(void *)(v16 + 112) = v24;
  *(void *)(v16 + 120) = v25;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v26 = *(char **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDateCache];
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  LOBYTE(v18) = [*(id *)&v26[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate] isEqualToDate:v19];
  uint64_t v28 = *(void **)&v26[v27];
  *(void *)&v26[v27] = v19;
  id v29 = v19;

  if ((v18 & 1) == 0)
  {
    id v30 = [self defaultCenter];
    if (qword_10094A7E8 != -1) {
      swift_once();
    }
    [v30 postNotificationName:qword_1009979E0 object:v6];
  }
  uint64_t v31 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
  uint64_t v32 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  unint64_t v33 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionDataProvider];
  uint64_t v34 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v91 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  id v89 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_10008E75C((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)aBlock);
  uint64_t v35 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  uint64_t v36 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  id v90 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  uint64_t v37 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  id v93 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  id v94 = v37;
  double v95 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  id v92 = (char *)objc_allocWithZone((Class)type metadata accessor for HistoryPagingViewController());
  uint64_t v38 = (uint64_t)v104;
  uint64_t v88 = v105;
  uint64_t v39 = sub_1000DDC00((uint64_t)aBlock, (uint64_t)v104);
  double v96 = &v75;
  __chkstk_darwin(v39);
  id v41 = (char *)&v75 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  v97 |= v102 << 8;
  id v102 = v31;
  id v87 = v26;
  id v86 = v32;
  id v85 = v33;
  id v43 = v34;
  uint64_t v91 = v91;
  id v44 = v89;
  id v45 = v35;
  id v46 = v36;
  id v89 = v46;
  id v47 = v90;
  id v90 = v47;
  id v48 = v93;
  id v93 = v48;
  id v49 = v94;
  id v94 = v49;
  double v95 = v95;
  uint64_t v74 = v38;
  Class v73 = v49;
  uint64_t v71 = v47;
  NSString v72 = v48;
  uint64_t v69 = v45;
  uint64_t v70 = v46;
  uint64_t v50 = v45;
  uint64_t v51 = v102;
  uint64_t v52 = v87;
  uint64_t v53 = v86;
  uint64_t v54 = v85;
  uint64_t v55 = v91;
  id v56 = sub_1002DA218(v102, v87, v86, v85, v43, v91, v44, (uint64_t)v41, v69, v70, v71, v72, v73, v95, v97, v99, v98, 0, v92,
          v74,
          (uint64_t)v88);

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)aBlock);
  swift_unknownObjectWeakAssign();
  id v57 = [v6 navigationController];
  if (v57)
  {
    uint64_t v58 = v57;
    [v57 pushViewController:v56 animated:v84 & 1];
  }
  if (v100)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v59 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v60 = v75;
    static DispatchTime.now()();
    uint64_t v61 = v76;
    + infix(_:_:)();
    id v102 = *(id *)(v77 + 8);
    ((void (*)(char *, uint64_t))v102)(v60, v101);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v56;
    id v105 = sub_1002D51E4;
    uint64_t v106 = v62;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    uint64_t v104 = &unk_1008BFDB0;
    uint64_t v63 = _Block_copy(aBlock);
    id v64 = v56;
    swift_release();
    uint64_t v65 = v78;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002D3A70((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    uint64_t v66 = v80;
    uint64_t v67 = v83;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v67);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v81);
    ((void (*)(char *, uint64_t))v102)(v61, v101);
  }
  return v56;
}

uint64_t sub_1002CEF34()
{
  uint64_t v0 = type metadata accessor for Calendar();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v59 = v0;
  uint64_t v60 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v53 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = self;
  id v17 = [v16 standardUserDefaults];
  NSString v18 = String._bridgeToObjectiveC()();
  unsigned int v19 = [v17 BOOLForKey:v18];

  if (!v19) {
    goto LABEL_15;
  }
  uint64_t v55 = v16;
  id v56 = v10;
  uint64_t v53 = v13;
  uint64_t v54 = v6;
  id v57 = v3;
  uint64_t v58 = v7;
  Date.init()();
  id v20 = [*(id *)(*(void *)(v62 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
  if (!v20) {
    goto LABEL_14;
  }
  uint64_t v21 = v20;
  if (([v20 _isStandalonePhoneSummary] & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v58);

LABEL_15:
    char v51 = 0;
    return v51 & 1;
  }
  if ([v21 activityMoveMode] == (id)2)
  {
    id v22 = [v21 appleMoveTime];
    uint64_t v23 = self;
    id v24 = [v23 minuteUnit];
    [v22 doubleValueForUnit:v24];
    double v26 = v25;

    id v27 = [v21 appleMoveTimeGoal];
    id v28 = [v23 minuteUnit];
  }
  else
  {
    id v29 = [v21 activeEnergyBurned];
    id v30 = self;
    id v31 = [v30 kilocalorieUnit];
    [v29 doubleValueForUnit:v31];
    double v26 = v32;

    id v27 = [v21 activeEnergyBurnedGoal];
    id v28 = [v30 kilocalorieUnit];
  }
  id v33 = v28;
  [v27 doubleValueForUnit:v33];
  double v35 = v34;
  uint64_t v36 = v60;
  uint64_t v37 = v56;
  uint64_t v38 = v57;
  uint64_t v39 = v55;

  if (v35 <= 0.0 || v35 > v26)
  {

LABEL_14:
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v58);
    goto LABEL_15;
  }
  id v40 = [v39 standardUserDefaults];
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v40 hk_dateForKey:v41];

  if (!v42)
  {
    uint64_t v43 = v61;
    uint64_t v45 = (uint64_t)v54;
    uint64_t v47 = v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v54, 1, 1, v58);
    goto LABEL_18;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v43 = v61;
  id v44 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v45 = (uint64_t)v54;
  id v46 = v37;
  uint64_t v47 = v58;
  v44(v54, v46, v58);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v45, 0, 1, v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v47) == 1)
  {
LABEL_18:

    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v47);
    sub_10008DB18(v45, (uint64_t *)&unk_10095B890);
    char v51 = 1;
    return v51 & 1;
  }
  id v48 = v53;
  v44(v53, (char *)v45, v47);
  static Calendar.current.getter();
  char v49 = Calendar.isDate(_:inSameDayAs:)();

  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v59);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v43 + 8);
  v50(v48, v47);
  v50(v15, v47);
  char v51 = v49 ^ 1;
  return v51 & 1;
}

void sub_1002CF570(uint64_t a1)
{
  id v2 = [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController) currentlyDisplayedViewController];
  type metadata accessor for HistoryDayViewController();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    if (*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary)) {
      sub_100576944();
    }
    else {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 1;
    }
  }
}

void sub_1002CF618(void *a1, void *a2, uint64_t a3, void *a4)
{
  unint64_t v6 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  uint64_t v8 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  uint64_t v10 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  uint64_t v52 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v55 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  uint64_t v58 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  id v61 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  id v64 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  uint64_t v43 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider];
  sub_10008E75C((uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v76);
  uint64_t v12 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v13 = objc_allocWithZone(v12);
  sub_10008E75C((uint64_t)v76, (uint64_t)v13 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v75.receiver = v13;
  v75.super_class = v12;
  id v44 = v12;
  id v72 = a1;
  uint64_t v14 = v6;
  id v68 = v7;
  id v70 = v8;
  id v66 = v9;
  id v15 = v10;
  id v53 = v52;
  id v56 = v55;
  id v59 = v58;
  id v16 = v61;
  id v17 = v11;
  id v18 = v64;
  id v62 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v76);
  LOBYTE(v39) = 1;
  id v65 = [objc_allocWithZone((Class)CHWorkoutDetailViewController) initWithWorkout:v72 workoutActivity:0 healthStore:v14 model:v68 fitnessAppContext:v70 workoutFormattingManager:v66 workoutDataProvider:v15 badgeImageFactory:v53 friendListManager:v56 achievementLocalizationProvider:v59 pauseRingsCoordinator:v16 achievementResourceProvider:v17 formattingManager:v18 awardsDataProvider:v62 shouldExposeDeepLinkToTrainingLoadFromEffort:v39];

  uint64_t v50 = v14;
  id v42 = v16;

  NSString v41 = v17;
  unsigned int v19 = v18;

  id v20 = v65;
  if (v65)
  {
    id v21 = [v4 navigationController];
    id v22 = a4;
    if (v21)
    {
      uint64_t v23 = v21;
      [v21 pushViewController:v65 animated:a4 == 0];
    }
    if (a2)
    {
      id v63 = v4;
      id v24 = a2;
      if ([v72 isMultiSportWorkout])
      {
        sub_10008E75C(v43, (uint64_t)v76);
        id v25 = objc_allocWithZone(v44);
        sub_10008E75C((uint64_t)v76, (uint64_t)v25 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
        v74.receiver = v25;
        v74.super_class = v44;
        id v26 = v72;
        Class v73 = v50;
        id v69 = v68;
        id v71 = v70;
        id v67 = v66;
        id v27 = v15;
        id v28 = v53;
        id v29 = v56;
        id string_8a = v59;
        char v51 = v42;
        id v54 = v41;
        id v57 = v19;
        Class v45 = v24;
        id v30 = v24;
        [super init];
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v76);
        LOBYTE(v40) = 1;
        id v31 = [objc_allocWithZone((Class)CHWorkoutDetailViewController) initWithWorkout:v26 workoutActivity:v30 healthStore:v73 model:v69 fitnessAppContext:v71 workoutFormattingManager:v67 workoutDataProvider:v27 badgeImageFactory:v28 friendListManager:v29 achievementLocalizationProvider:string_8a pauseRingsCoordinator:v51 achievementResourceProvider:v54 formattingManager:v57 awardsDataProvider:v60 shouldExposeDeepLinkToTrainingLoadFromEffort:v40];

        if (v31)
        {
          id v32 = v31;
          id v33 = [v63 navigationController];
          id v22 = a4;
          if (v33)
          {
            double v34 = v33;
            [v33 pushViewController:v32 animated:a4 == 0];
          }
          double v35 = v32;
          id v20 = v65;
        }
        else
        {
          double v35 = 0;
          id v20 = v65;
          id v32 = v65;
          id v22 = a4;
        }
        id v24 = v45;
      }
      else
      {
        double v35 = 0;
        id v32 = v65;
      }
    }
    else
    {
      double v35 = 0;
      id v32 = v65;
    }
    id v36 = v32;
    if (v22)
    {
      swift_bridgeObjectRetain();
      v77._countAndFlagsBits = a3;
      v77._object = v22;
      char v37 = sub_10046FC4C(v77);
      uint64_t v38 = 1;
      switch(v37)
      {
        case 1:
          uint64_t v38 = 8;
          goto LABEL_26;
        case 2:
          uint64_t v38 = 10;
          goto LABEL_26;
        case 3:
          uint64_t v38 = 5;
          goto LABEL_26;
        case 4:
          uint64_t v38 = 12;
          goto LABEL_26;
        case 5:
          uint64_t v38 = 13;
          goto LABEL_26;
        case 6:
          uint64_t v38 = 9;
          goto LABEL_26;
        case 7:
          uint64_t v38 = 6;
          goto LABEL_26;
        case 8:
          uint64_t v38 = 7;
          goto LABEL_26;
        case 9:
          uint64_t v38 = 14;
          goto LABEL_26;
        case 10:
          break;
        default:
LABEL_26:
          [v36 navigateToSection:v38];
          break;
      }
    }
  }
}

void sub_1002CFC14(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for FitnessPlusStackViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v41 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D5748(a1, v41, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
  unint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  id v13 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  id v34 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  id v31 = v13;
  id v32 = v14;
  sub_10008E75C((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v43);
  id v15 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v16 = objc_allocWithZone(v15);
  sub_10008E75C((uint64_t)v43, (uint64_t)v16 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v42.receiver = v16;
  v42.super_class = v15;
  id v40 = v6;
  id v39 = v7;
  id v38 = v8;
  id v37 = v9;
  id v36 = v10;
  id v35 = v11;
  id v33 = v12;
  id v17 = v31;
  id v18 = v34;
  id v19 = v32;
  id v20 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v43);
  id v21 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  id v22 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  id v24 = objc_allocWithZone((Class)type metadata accessor for StackDetailViewController());
  id v25 = v21;
  id v26 = v22;
  id v27 = v23;
  id v28 = sub_1002F5640(v41, v40, v39, v38, v37, v36, v35, v33, v17, v18, v19, v20, v25, v26, v27);
  id v29 = [v2 navigationController];
  if (v29)
  {
    id v30 = v29;
    [v29 pushViewController:v28 animated:1];
  }
}

void sub_1002CFEBC(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  unint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  id v31 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  id v32 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  id v36 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  id v34 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  id v35 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_10008E75C((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v43);
  uint64_t v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v11 = objc_allocWithZone(v10);
  sub_10008E75C((uint64_t)v43, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v42.receiver = v11;
  v42.super_class = v10;
  id v40 = v4;
  id v39 = v5;
  id v38 = v6;
  id v37 = v7;
  id v33 = v8;
  id v30 = v9;
  id v12 = v31;
  id v13 = v32;
  id v14 = v34;
  id v15 = v36;
  id v16 = v35;
  id v17 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v43);
  id v18 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  id v19 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  id v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_100612FC8(v40, v39, v38, v37, v33, v30, v12, v13, v14, v15, v16, v17, v18, v19);
  id v22 = v21;
  if (a1)
  {
    id v23 = a1;
    if ([v23 effectiveTypeIdentifier] == (id)84)
    {
      id v24 = 0;
      __int16 v25 = 1024;
    }
    else
    {
      if ([self historyFilterDisambiguatesLocationForActivityType:[v23 identifier]]) unsigned __int16 v26 = (unsigned __int16)[v23 isIndoor]; {
      else
      }
        unsigned __int16 v26 = 2;
      id v24 = [v23 identifier];
      __int16 v25 = v26;
    }
    sub_10061406C((uint64_t)v24, v25);
  }
  else
  {
    sub_10061406C(0, 768);
  }
  id v27 = [v3 navigationController];
  if (v27)
  {
    id v28 = v27;
    [v27 pushViewController:v22 animated:a2 & 1];
  }
}

void sub_1002D022C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v26 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = self;
  sub_1000AFA94((uint64_t *)&unk_1009555B0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v13 + v12, a1, v10);
  sub_1002F1454(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1002D3A70((unint64_t *)&qword_10095B840, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v9 predicateForObjectsWithUUIDs:isa];

  sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
  id v16 = [(id)swift_getObjCClassFromMetadata() workoutType];
  sub_1000AEF2C(v27, (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1009555F0);
  unint64_t v17 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  sub_1002D5014((uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v17);
  *(void *)(v19 + v18) = v4;
  id v20 = (void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v20 = v28;
  v20[1] = a4;
  id v21 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_1002D507C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000696FC;
  void aBlock[3] = &unk_1008BFD10;
  id v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v23 = v4;
  id v24 = [v21 initWithSampleType:v16 predicate:v15 limit:1 sortDescriptors:0 resultsHandler:v22];

  _Block_release(v22);
  swift_release();
  [*(id *)&v23[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore] executeQuery:v24];
}

void sub_1002D05E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return;
  }
  uint64_t v41 = a6;
  objc_super v42 = a5;
  uint64_t v43 = v17;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_16;
  }
LABEL_4:
  uint64_t v40 = v13;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v21 = *(id *)(a2 + 32);
  }
  id v44 = v21;
  swift_bridgeObjectRelease();
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    id v23 = (void *)v22;
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(a4, 1, v24) != 1)
    {
      id v26 = [v23 workoutActivities];
      sub_10007E2D8(0, (unint64_t *)&qword_100955600);
      unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v39 = &v38;
      __chkstk_darwin(v28);
      *(&v38 - 2) = a4;
      uint64_t v25 = sub_1004823BC(sub_1002D51C4, (uint64_t)(&v38 - 4), v27);
      swift_bridgeObjectRelease();
    }
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v39 = (uint64_t *)static OS_dispatch_queue.main.getter();
    id v29 = (void *)swift_allocObject();
    uint64_t v30 = v41;
    id v31 = v42;
    v29[2] = v42;
    v29[3] = v23;
    unsigned char v29[4] = v25;
    v29[5] = v30;
    v29[6] = a7;
    aBlock[4] = sub_1002D5194;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008BFD60;
    id v32 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v33 = v31;
    id v34 = v44;
    id v35 = v25;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002D3A70((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v36 = v39;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v16);
  }
  else
  {
    id v37 = v44;
  }
}

uint64_t sub_1002D0AF4(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B870);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v26 - v15;
  id v17 = [*a1 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  uint64_t v18 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1009555F0);
  sub_1000AEF2C(a2, v18, (uint64_t *)&unk_1009555F0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_1009555F0);
    int v20 = v19(v18, 1, v4);
    if (v20 == 1) {
      id v21 = (uint64_t *)&unk_1009555F0;
    }
    else {
      id v21 = (uint64_t *)&unk_10095B870;
    }
    if (v20 == 1) {
      char v22 = -1;
    }
    else {
      char v22 = 0;
    }
  }
  else
  {
    sub_1000AEF2C((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1009555F0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_1009555F0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      char v22 = 0;
      id v21 = (uint64_t *)&unk_10095B870;
    }
    else
    {
      id v23 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v27, v18, v4);
      sub_1002D3A70((unint64_t *)&unk_100955610, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v23, v4);
      id v21 = (uint64_t *)&unk_1009555F0;
      sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_1009555F0);
      v24(v14, v4);
    }
  }
  sub_10008DB18((uint64_t)v10, v21);
  return v22 & 1;
}

void sub_1002D1040(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = self;
  sub_1000AFA94((uint64_t *)&unk_1009555B0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v8 + v7, a1, v5);
  sub_1002F1454(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1002D3A70((unint64_t *)&qword_10095B840, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v4 predicateForObjectsWithUUIDs:isa];

  sub_10007E2D8(0, (unint64_t *)&unk_1009555C0);
  Class v11 = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  id v13 = objc_allocWithZone((Class)HKSampleQuery);
  v17[4] = sub_1002D4E74;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  id v17[2] = sub_1000696FC;
  v17[3] = &unk_1008BFC70;
  uint64_t v14 = _Block_copy(v17);
  uint64_t v15 = v2;
  id v16 = [v13 initWithSampleType:v11 predicate:v10 limit:1 sortDescriptors:0 resultsHandler:v14];

  _Block_release(v14);
  swift_release();
  [*(id *)&v15[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore] executeQuery:v16];
}

void sub_1002D1318(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v41 = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  __chkstk_darwin(v14);
  uint64_t v15 = type metadata accessor for UUID();
  __chkstk_darwin(v15 - 8);
  if (!a2) {
    return;
  }
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_16;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v17 = *(id *)(a2 + 32);
  }
  id v40 = v17;
  swift_bridgeObjectRelease();
  self;
  uint64_t v18 = (void *)swift_dynamicCastObjCClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v37 = v6;
    id v20 = [v18 UUID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    id v21 = [v19 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v22 = [v19 endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v23 = [v19 metadata];
    if (v23)
    {
      uint64_t v24 = v23;
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    id v26 = [v19 sourceRevision];
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_100751040;
    *(void *)(v27 + 32) = v19;
    aBlock[0] = v27;
    specialized Array._endMutation()();
    id v28 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel());
    id v40 = v40;
    id v29 = (void *)MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)();
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    id v32 = v41;
    *(void *)(v31 + 16) = v41;
    *(void *)(v31 + 24) = v29;
    aBlock[4] = sub_1002D4EBC;
    aBlock[5] = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008BFCC0;
    id v33 = _Block_copy(aBlock);
    id v34 = v32;
    id v35 = v29;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002D3A70((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  }
  else
  {
    id v25 = v40;
  }
}

void sub_1002D1914(char *a1, void *a2)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  id v6 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
  uint64_t v9 = sub_10039EDA8(a2, v4, v5);
  id v7 = [a1 navigationController];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 pushViewController:v9 animated:1];
  }
}

void sub_1002D1AD4(char a1)
{
  id v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  id v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  id v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  id v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_10008E75C((uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v37);
  uint64_t v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v11 = objc_allocWithZone(v10);
  sub_10008E75C((uint64_t)v37, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v36.receiver = v11;
  v36.super_class = v10;
  id v35 = v3;
  id v34 = v4;
  id v33 = v5;
  id v32 = v6;
  id v28 = v7;
  id v26 = v8;
  id v12 = v9;
  id v13 = v27;
  id v14 = v29;
  id v15 = v31;
  id v16 = v30;
  id v17 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v37);
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  uint64_t v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  id v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_100612FC8(v35, v34, v33, v32, v28, v26, v12, v13, v14, v15, v16, v17, v18, v19);
  id v22 = v21;
  id v23 = [v2 navigationController];
  if (v23)
  {
    uint64_t v24 = v23;
    [v23 pushViewController:v22 animated:a1 & 1];
  }
}

void sub_1002D1D70(char a1)
{
  id v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  id v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  id v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  id v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_10008E75C((uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v37);
  uint64_t v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v11 = objc_allocWithZone(v10);
  sub_10008E75C((uint64_t)v37, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v36.receiver = v11;
  v36.super_class = v10;
  id v35 = v3;
  id v34 = v4;
  id v33 = v5;
  id v32 = v6;
  id v28 = v7;
  id v26 = v8;
  id v12 = v9;
  id v13 = v27;
  id v14 = v29;
  id v15 = v31;
  id v16 = v30;
  id v17 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v37);
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  uint64_t v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  id v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_100612FC8(v35, v34, v33, v32, v28, v26, v12, v13, v14, v15, v16, v17, v18, v19);
  id v22 = v21;
  sub_10061406C(0, 1280);
  id v23 = [v2 navigationController];
  if (v23)
  {
    uint64_t v24 = v23;
    [v23 pushViewController:v22 animated:a1 & 1];
  }
}

void sub_1002D2018(char a1)
{
  id v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  uint64_t v4 = self;
  id v28 = v3;
  id v27 = [v4 sharedInstance];
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  id v6 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider];
  id v7 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager];
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
  uint64_t v9 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                 + 32);
  id v26 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  id v25 = v5;
  id v24 = v6;
  id v10 = v7;
  id v11 = v8;
  uint64_t v12 = sub_100328CC4();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = *(void *)(v9 + 72);
  char v17 = *(unsigned char *)(v9 + 80);
  uint64_t v18 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext]
                 + OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider);
  uint64_t v19 = objc_allocWithZone((Class)type metadata accessor for TrendsListViewController());
  id v20 = v18;
  id v29 = sub_10040134C(v28, v27, v26, v25, v24, v10, v11, v12, v14, v15, v16, v17, v18, v19);
  id v21 = [v2 navigationController];
  if (v21)
  {
    id v22 = v21;
    [v21 pushViewController:v29 animated:a1 & 1];
  }
}

void sub_1002D2230(unint64_t a1, char a2)
{
  uint64_t v3 = v2;
  unsigned __int8 v5 = sub_1005F3E54(a1);
  if (v5 != 9)
  {
    unsigned __int8 v6 = v5;
    char v26 = a2;
    id v7 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
    uint64_t v8 = self;
    id v32 = v7;
    id v31 = [v8 sharedInstance];
    uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
    id v10 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider];
    id v11 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager];
    uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
    uint64_t v13 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                    + 32);
    id v30 = *(id *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
    id v29 = v9;
    id v28 = v10;
    id v27 = v11;
    uint64_t v14 = v12;
    uint64_t v15 = sub_100328CC4();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v13 + 64);
    uint64_t v19 = *(void *)(v13 + 72);
    char v20 = *(unsigned char *)(v13 + 80);
    id v21 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext]
                   + OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider);
    id v22 = objc_allocWithZone((Class)type metadata accessor for TrendsListViewController());
    id v23 = v21;
    id v33 = sub_10040134C(v32, v31, v30, v29, v28, v27, v14, v15, v17, v18, v19, v20, v21, v22);
    id v24 = [v3 navigationController];
    if (v24)
    {
      id v25 = v24;
      [v24 pushViewController:v33 animated:v26 & 1];
    }
    sub_10041C978(v6);
  }
}

id sub_1002D2494(uint64_t a1, char a2)
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    return [result setBadgeHidden:a2 & 1];
  }
  return result;
}

id sub_1002D24FC(int a1, void *a2, int a3, int a4)
{
  int v44 = a4;
  int v45 = a3;
  objc_super v36 = a2;
  HIDWORD(v32) = a1;
  unsigned __int8 v6 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  id v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  sub_10008E75C((uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v46);
  uint64_t v8 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  id v10 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  id v11 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  id v38 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  id v39 = v12;
  uint64_t v13 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  id v41 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  id v42 = v13;
  id v43 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache];
  id v40 = objc_allocWithZone((Class)type metadata accessor for TrophyCaseViewController());
  uint64_t v14 = v47;
  uint64_t v37 = v48;
  uint64_t v15 = sub_1000DDC00((uint64_t)v46, v47);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  id v19 = a2;
  id v35 = v6;
  id v34 = v7;
  id v33 = v8;
  id v20 = v9;
  id v21 = v10;
  id v22 = v11;
  id v23 = v38;
  id v24 = v39;
  id v25 = v41;
  id v26 = v42;
  id v27 = v43;
  id v28 = sub_10035DB54(v35, v34, (uint64_t)v17, v33, v20, v21, v22, v23, v24, v25, v26, v27, v36, v45, v44, v40, v14, v37);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v46);
  swift_unknownObjectWeakAssign();
  id v29 = [v4 navigationController];
  if (v29)
  {
    id v30 = v29;
    [v29 pushViewController:v28 animated:BYTE4(v32) & 1];
  }
  return v28;
}

uint64_t sub_1002D2A90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 96) = a5;
  *(unsigned char *)(v5 + 136) = a4;
  uint64_t v6 = type metadata accessor for IndexSet();
  *(void *)(v5 + 104) = v6;
  *(void *)(v5 + 112) = *(void *)(v6 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 128) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002D2B88, v8, v7);
}

void sub_1002D2B88()
{
  int v1 = *(unsigned __int8 *)(v0 + 136);
  swift_release();
  if (v1 != 1) {
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  id v4 = [Strong tableView];

  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v5 = [v4 window];

  if (!v5)
  {
LABEL_8:
    swift_beginAccess();
    uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v15) {
      goto LABEL_12;
    }
    uint64_t v16 = v15;
    id v8 = [v15 tableView];

    if (v8)
    {
      [v8 reloadData];
      goto LABEL_11;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_beginAccess();
  uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 tableView];

    if (v8)
    {
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v11 = *(void *)(v0 + 104);
      *(void *)(v0 + 88) = &off_1008B4B90;
      sub_1002D3A70((unint64_t *)&qword_100955538, 255, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      sub_1000AFA94(&qword_100955540);
      sub_1002D54D8((unint64_t *)&qword_100955548, &qword_100955540);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      IndexSet._bridgeToObjectiveC()(v12);
      uint64_t v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      [v8 reloadSections:v14 withRowAnimation:100];

LABEL_11:
      goto LABEL_12;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_12:
  swift_task_dealloc();
  uint64_t v17 = *(void (**)(void))(v0 + 8);
  v17();
}

uint64_t sub_1002D2E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v13 + 32) = a6;
  *(void *)(v13 + 40) = v11;
  swift_release();
  sub_1000713D0((uint64_t)v9, (uint64_t)&unk_100955520, v13);
  return swift_release();
}

uint64_t sub_1002D2F68@<X0>(uint64_t a1@<X8>)
{
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_10007E4EC(v4, v4[3]);
  dispatch thunk of ArtworkImageLoading.fetchRequest(_:priority:)();
  uint64_t v2 = sub_1000AFA94(&qword_10094F3C8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v4);
}

uint64_t sub_1002D3048@<X0>(uint64_t a1@<X8>)
{
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_10007E4EC(v4, v4[3]);
  dispatch thunk of ArtworkImageLoading.fetchFallbackArtwork(for:)();
  uint64_t v2 = sub_1000AFA94(&qword_10094F3C8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v4);
}

double sub_1002D312C()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets);
}

void *sub_1002D3144()
{
  int v1 = (void **)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1002D3194(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1002D31E8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002D3244()
{
  return swift_retain();
}

uint64_t sub_1002D3254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10005DB5C;
  return MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)(a1, a2, a3);
}

uint64_t sub_1002D330C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker);
  a1[3] = type metadata accessor for ActivityTileImpressionsTracker();
  a1[4] = sub_1002D3A70(&qword_100955560, 255, (void (*)(uint64_t))type metadata accessor for ActivityTileImpressionsTracker);
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_1002D339C()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095F630);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = enum case for MetricPageCategory.summary(_:);
  uint64_t v7 = type metadata accessor for MetricPageCategory();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)();
}

uint64_t sub_1002D3554()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1002D358C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1002D35D8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1002D362C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1002D3688()
{
  swift_getWitnessTable();

  return MetricResignActiveObserving<>.addResignActiveObserver()();
}

uint64_t sub_1002D36EC()
{
  swift_getWitnessTable();

  return MetricResignActiveObserving<>.removeResignActiveObserver()();
}

ValueMetadata *type metadata accessor for ActivityTileViewController.InitialPresentation()
{
  return &type metadata for ActivityTileViewController.InitialPresentation;
}

unsigned char *storeEnumTagSinglePayload for ActivityTileViewController.Visibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D3834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityTileViewController.Visibility()
{
  return &type metadata for ActivityTileViewController.Visibility;
}

unint64_t sub_1002D3870()
{
  unint64_t result = qword_100955500[0];
  if (!qword_100955500[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100955500);
  }
  return result;
}

uint64_t sub_1002D38C4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002D38FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002D393C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_1002D2A90(a1, v4, v5, v6, v7);
}

NSString sub_1002D3A00()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997B08 = (uint64_t)result;
  return result;
}

NSString sub_1002D3A38()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997B10 = (uint64_t)result;
  return result;
}

uint64_t sub_1002D3A70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D3AB8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *int v3 = v2;
  v3[1] = sub_1002D3B98;
  return v5(v2 + 16);
}

uint64_t sub_1002D3B98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  int v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1002D3CC8(uint64_t a1, void (*a2)(uint64_t, char *))
{
  id v26 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100955700);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v24 + 8 * v11);
      if (!v21)
      {
        int64_t v11 = v20 + 2;
        if (v20 + 2 >= v25) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v24 + 8 * v11);
        if (!v21)
        {
          int64_t v11 = v20 + 3;
          if (v20 + 3 >= v25) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v24 + 8 * v11);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v21 - 1) & v21;
    unint64_t v13 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
    uint64_t v16 = type metadata accessor for ImpressionMetrics();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = v14 + *(void *)(v17 + 72) * v13;
    id v19 = (char *)v5 + *(int *)(v3 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v18, v16);
    *uint64_t v5 = v15;
    v26(v15, v19);
    uint64_t result = sub_10008DB18((uint64_t)v5, &qword_100955700);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v25) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1002D3F30()
{
  uint64_t v1 = v0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker;
  type metadata accessor for ActivityTileImpressionsTracker();
  uint64_t v3 = (void *)swift_allocObject();
  type metadata accessor for BasicImpressionsTracker();
  v3[2] = BasicImpressionsTracker.__allocating_init(threshold:)();
  v3[3] = &protocol witness table for BasicImpressionsTracker;
  v3[4] = 0;
  v3[5] = sub_10052D13C((uint64_t)_swiftEmptyArrayStorage);
  v3[6] = sub_1000DFC54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[v2] = v3;
  uint64_t v4 = &v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets];
  *(double *)uint64_t v4 = sub_1001784A0();
  *((void *)v4 + 1) = v5;
  *((void *)v4 + 2) = v6;
  *((void *)v4 + 3) = v7;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility] = 0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver] = 0;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_accountButton;
  type metadata accessor for AccountButton();
  *(void *)&v1[v9] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1002D40C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = 1;
  switch(a1)
  {
    case 0:
      return v7;
    case 1:
      return *(void *)(*(void *)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                                               + 24)
                                   + 24)
                       + 16);
    case 2:
      uint64_t v26 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                      + 48)
          + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
      swift_beginAccess();
      sub_1000AEF2C(v26, (uint64_t)v6, (uint64_t *)&unk_100955650);
      uint64_t v27 = type metadata accessor for CatalogTipSection();
      uint64_t v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v6, 1, v27) != 1;
      sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_100955650);
      return v7;
    case 3:
      return *(unsigned __int8 *)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                                            + 32)
                                + 96) < 2u;
    case 4:
      id v8 = [v2 view];
      if (!v8)
      {
        __break(1u);
LABEL_14:
        v34[0] = 0;
        v34[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(30);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1002D4528);
      }
      uint64_t v9 = v8;
      [v8 bounds];
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      CGFloat v17 = v16;

      v35.origin.CGFloat x = v11;
      v35.origin.CGFloat y = v13;
      v35.size.CGFloat width = v15;
      v35.size.CGFloat height = v17;
      double Width = CGRectGetWidth(v35);
      id v19 = self;
      id v20 = [v19 literUnitWithMetricPrefix:4];
      id v21 = [v19 gramUnitWithMetricPrefix:9];
      id v22 = [v19 minuteUnit];
      id v23 = [v20 unitDividedByUnit:v21];
      id v24 = [v23 unitDividedByUnit:v22];

      id v25 = [self quantityWithUnit:v24 doubleValue:99.99];
      id v28 = (void *)sub_1006744D0(v25, 4u);

      double v29 = Width * 0.5 + -16.0 + -8.0 + -40.0 + -12.0;
      [v28 boundingRectWithSize:3 options:0 context:1.79769313e308];
      double v31 = v30;

      uint64_t v32 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                      + 32);
      if (*(unsigned char *)(v32 + 96) != 2) {
        return 0;
      }
      uint64_t v7 = *(void *)(*(void *)(v32 + 88) + 16);
      if (v31 < v29) {
        return (*(void *)(*(void *)(v32 + 88) + 16) & 1) + (*(void *)(*(void *)(v32 + 88) + 16) >> 1);
      }
      return v7;
    case 5:
      return *(void *)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                                   + 40)
                       + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_keyAwards) != 0;
    default:
      goto LABEL_14;
  }
}

void sub_1002D4540()
{
  switch(IndexPath.section.getter())
  {
    case 0:
      id v2 = [v0 showTodayAndShareImmediately:0 animated:1 forGoalCompleteNotification:0 goalRecommendation:0];

      break;
    case 1:
      uint64_t v3 = IndexPath.row.getter();
      sub_1002CC058(v3);
      break;
    case 2:
      uint64_t v1 = IndexPath.row.getter();
      sub_1002CC3A4(v1);
      sub_1002CCFB4();
      break;
    case 3:
    case 4:
    case 5:
      return;
    default:
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1002D469CLL);
  }
}

void sub_1002D46B4(void *a1, uint64_t a2)
{
  unint64_t v4 = IndexPath.section.getter();
  if (sub_100183140(v4) == 6
    || ((swift_getObjectType(), swift_conformsToProtocol2()) ? (uint64_t v5 = a1) : (uint64_t v5 = 0), !v5))
  {
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v6 = a1;
    sub_10055C600(a2);
  }
}

void sub_1002D47C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v35 = a3;
  uint64_t v9 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v9 - 8);
  CGFloat v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  double v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v34 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v34 - v20;
  swift_bridgeObjectRetain();
  char v22 = sub_10005A234(a1, a2);
  if (v22 == 8) {
    goto LABEL_13;
  }
  sub_100645494(v22, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10008DB18((uint64_t)v11, &qword_1009555A0);
LABEL_13:

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v11, v12);
  id v23 = [v5 navigateToTrophyCaseAnimated:0 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:0];
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    goto LABEL_13;
  }
  id v24 = v23;
  if (!a4) {
    goto LABEL_11;
  }
  if (qword_10094ADC8 != -1) {
    swift_once();
  }
  id v25 = sub_1005107C0(v35, a4);
  if (v25)
  {
    uint64_t v26 = v25;
    unsigned __int8 v27 = [v25 unearned];
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v21, v12);
    if (v27)
    {
      id v28 = *(void (**)(char *, uint64_t))(v13 + 8);
      v28(v19, v12);
      char v29 = 0;
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v12);
      sub_1002D3A70(&qword_1009555A8, 255, (void (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v28 = *(void (**)(char *, uint64_t))(v13 + 8);
      v28(v16, v12);
      v28(v19, v12);
      char v29 = v30 ^ 1;
    }
    id v31 = sub_10035B5B8(v26, v29 & 1, 1u, 0);
    id v32 = [v24 navigationController];
    if (v32)
    {
      id v33 = v32;
      [v32 pushViewController:v31 animated:0];

      v28(v21, v12);
    }
    else
    {
      v28(v21, v12);
    }
  }
  else
  {
LABEL_11:
    sub_100359628((uint64_t)v21);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  }
}

void *sub_1002D4C40(void *a1, void *a2, void *a3)
{
  unint64_t v4 = a1;
  if (!a1) {
    return v4;
  }
  uint64_t v5 = v3;
  if (a1 == (void *)2)
  {
    uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController);
    if (v10)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
      id v11 = a3;
      id v12 = v10;
      char v13 = static NSObject.== infix(_:_:)();

      unint64_t v4 = 0;
      if ((v13 & 1) == 0) {
        return v4;
      }
      goto LABEL_9;
    }
    return 0;
  }
  if (a1 != (void *)1)
  {
    os_log_type_t v15 = static os_log_type_t.fault.getter();
    double v16 = (void *)HKLogActivity;
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(HKLogActivity, v15))
    {
      uint64_t v18 = v16;
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)id v19 = 136315138;
      sub_10008F1F4(0xD000000000000037, 0x80000001007BE490, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s found unexpected UINavigationController.Operation; skipping transition",
        v19,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return 0;
  }
  type metadata accessor for TrophyCaseAwardDetailViewController();
  unint64_t v4 = 0;
  if (![a3 isKindOfClass:swift_getObjCClassFromMetadata()]) {
    return v4;
  }
  type metadata accessor for ActivityTileViewController();
  if (![a2 isKindOfClass:swift_getObjCClassFromMetadata()]) {
    return 0;
  }
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController);
  *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController) = a2;
  id v9 = a2;

LABEL_9:
  unint64_t v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator);
  if (v4) {
    id v14 = v4;
  }
  return v4;
}

void sub_1002D4E74(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1002D1318(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1002D4E7C()
{
  return swift_deallocObject();
}

void sub_1002D4EBC()
{
  sub_1002D1914(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002D4EC4()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_1009555F0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002D5014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002D507C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1000AFA94((uint64_t *)&unk_1009555F0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v3 + v8;
  id v11 = *(void **)(v3 + v9);
  id v12 = (uint64_t *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  sub_1002D05E0(a1, a2, a3, v10, v11, v13, v14);
}

uint64_t sub_1002D5144()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002D5194()
{
  sub_1002CF618(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1002D51C4(id *a1)
{
  return sub_1002D0AF4(a1, *(void *)(v1 + 16)) & 1;
}

void sub_1002D51E4()
{
  sub_1002CF570(*(void *)(v0 + 16));
}

void sub_1002D51EC()
{
}

uint64_t sub_1002D51F4()
{
  uint64_t v1 = type metadata accessor for CatalogTipSection();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();

  unint64_t v3 = v0 + v2 + *(int *)(v1 + 36);
  uint64_t v4 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (int *)type metadata accessor for CatalogTipSectionItem();
  unint64_t v6 = v3 + v5[5];
  uint64_t v7 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v3 + v5[8];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = v3 + v5[12];
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002D5474()
{
  uint64_t v1 = *(void *)(type metadata accessor for CatalogTipSection() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1002CE394(v2, v3);
}

uint64_t sub_1002D54D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D5528()
{
  return swift_deallocObject();
}

void sub_1002D5560(char a1)
{
  id v2 = [*(id *)(v1 + 16) navigateToTrophyCaseAnimated:a1 & 1 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:0];
}

id sub_1002D55B0(char a1)
{
  return [*(id *)(v1 + 16) showAllTrendsAnimated:a1 & 1];
}

id sub_1002D55C8(char a1)
{
  return [*(id *)(v1 + 16) navigateToHistoryAnimated:a1 & 1];
}

uint64_t sub_1002D55E0(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  return sub_1002CB58C(a1, a2, a3, a4, a5, a6);
}

id sub_1002D5604(id result, void *a2, void *a3)
{
  if (result)
  {
    id v4 = result;
    id v5 = a2;
    return a3;
  }
  return result;
}

uint64_t sub_1002D5654(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002D56BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1002D571C(uint64_t a1)
{
}

uint64_t sub_1002D5724()
{
  return sub_1002CB454();
}

void sub_1002D572C()
{
}

uint64_t sub_1002D5734(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return sub_10005E5F8(result);
  }
  return result;
}

uint64_t sub_1002D5748(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002D57B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009556A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1002D5818()
{
}

unint64_t sub_1002D5820()
{
  unint64_t result = qword_1009556B8;
  if (!qword_1009556B8)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_1009556B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009556B8);
  }
  return result;
}

id sub_1002D5888()
{
  return sub_1002D2494(*(void *)(v0 + 16), 1);
}

id sub_1002D58A8()
{
  return sub_1002D2494(*(void *)(v0 + 16), 0);
}

void sub_1002D58C8(uint64_t a1)
{
  sub_1002C77F0(a1, v1);
}

void sub_1002D58D0()
{
}

void sub_1002D58D8()
{
}

void sub_1002D58E0()
{
}

void sub_1002D58E8()
{
}

void sub_1002D58F0()
{
}

id sub_1002D58F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1002D592C(double *a1, id *a2)
{
  return [*a2 setContentSize:*a1 a1[1]];
}

uint64_t sub_1002D5940()
{
  return sub_1002C85F4();
}

void sub_1002D5948()
{
}

uint64_t sub_1002D5950(uint64_t a1, uint64_t a2)
{
  return sub_10055C2BC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002D5958(uint64_t a1, uint64_t a2)
{
  return sub_10055C440(a1, a2, *(void **)(v2 + 16));
}

void sub_1002D5960()
{
}

uint64_t sub_1002D5968()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002D59A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1002C65D0(a1, v4, v5, v6);
}

uint64_t sub_1002D5A5C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002D5A94(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100955748 + dword_100955748);
  return v6(a1, v4);
}

void sub_1002D5BF4()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  if (qword_10094A7E0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1009979D8;
  uint64_t v4 = self;
  id v5 = [v4 mainQueue];
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v22 = sub_1002DBD28;
  uint64_t v23 = v6;
  aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_1000711BC;
  ObjectType = &unk_1008C0258;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v8 = (void **)[v2 addObserverForName:v3 object:0 queue:v5 usingBlock:v7];
  _Block_release(v7);

  ObjectType = (void *)swift_getObjectType();
  aBlock = v8;
  uint64_t v9 = v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)&aBlock, v9);
  swift_endAccess();
  id v10 = [v1 defaultCenter];
  if (qword_10094A7E8 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1009979E0;
  id v12 = [v4 mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v22 = sub_1002DBD30;
  uint64_t v23 = v13;
  aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_1000711BC;
  ObjectType = &unk_1008C0280;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  os_log_type_t v15 = (void **)[v10 addObserverForName:v11 object:0 queue:v12 usingBlock:v14];
  _Block_release(v14);

  ObjectType = (void *)swift_getObjectType();
  aBlock = v15;
  uint64_t v16 = v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)&aBlock, v16);
  swift_endAccess();
  id v17 = [v1 defaultCenter];
  [v17 addObserver:v0 selector:"checkFlightsClimbedEnabled" name:UIApplicationDidBecomeActiveNotification object:0];
}

void sub_1002D5F88()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (v12)
  {
    type metadata accessor for HistoryPagingViewController();
    if (swift_dynamicCast())
    {

      return;
    }
  }
  else
  {
    sub_10008DB18((uint64_t)v11, &qword_100955A00);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (char *)Strong;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1002D74D8();
    [*(id *)&v5[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController] reloadData];
    sub_1002D7848((uint64_t)v3, 1);
    id v6 = [v5 navigationItem];
    uint64_t v7 = self;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v9 = [v7 stringWithDayNameAndShortMonthFromDate:isa];

    [v6 setTitle:v9];
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_1002D61A8()
{
  Notification.object.getter();
  if (v4)
  {
    type metadata accessor for HistoryPagingViewController();
    if (swift_dynamicCast())
    {

      return;
    }
  }
  else
  {
    sub_10008DB18((uint64_t)v3, &qword_100955A00);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    Notification.object.getter();
    sub_1002D6454((uint64_t)v3);

    sub_10008DB18((uint64_t)v3, &qword_100955A00);
  }
}

void sub_1002D627C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled) & 1) == 0)
  {
    uint64_t v2 = self;
    unsigned int v3 = [v2 anyPairedWatchHasFlightsClimbedCapability];
    id v4 = [v2 sharedBehavior];
    if (v4)
    {
      id v5 = v4;
      unsigned int v6 = [v4 isStandalonePhoneFitnessMode];

      if ((v3 | v6) == 1)
      {
        static os_log_type_t.default.getter();
        id v7 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        *(unsigned char *)(v0 + v1) = 1;
        id v8 = [self standardUserDefaults];
        NSString v9 = String._bridgeToObjectiveC()();
        [v8 setBool:1 forKey:v9];

        id v10 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController);
        [v10 reloadData];
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1002D6454(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AEF2C(a1, (uint64_t)v15, &qword_100955A00);
  if (!v16)
  {
    sub_10008DB18((uint64_t)v15, &qword_100955A00);
    goto LABEL_5;
  }
  sub_10007E2D8(0, &qword_100955A08);
  if (!swift_dynamicCast())
  {
LABEL_5:
    id v7 = 0;
    goto LABEL_6;
  }
  id v7 = (void *)v14[1];
LABEL_6:
  char v8 = v7 == 0;

  sub_1002D7848((uint64_t)v6, v8);
  id v9 = [v1 navigationItem];
  id v10 = self;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v12 = [v10 stringWithDayNameAndShortMonthFromDate:isa];

  [v9 setTitle:v12];
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1002D6644()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  swift_beginAccess();
  sub_1000AEF2C(v1, (uint64_t)&v5, &qword_100955A00);
  if (v6)
  {
    sub_10005C2B0(&v5, &v7);
    id v2 = [self defaultCenter];
    sub_10007E4EC(&v7, v8);
    [v2 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v7);
  }
  else
  {
    sub_10008DB18((uint64_t)&v5, &qword_100955A00);
  }
  [*(id *)(*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) removeObject:v0];
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for HistoryPagingViewController();
  return [super dealloc];
}

uint64_t sub_1002D69A0()
{
  return type metadata accessor for HistoryPagingViewController();
}

uint64_t type metadata accessor for HistoryPagingViewController()
{
  uint64_t result = qword_1009558E0;
  if (!qword_1009558E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002D69F4(void *a1)
{
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate];
  swift_unknownObjectWeakInit();
  objc_super v4 = &v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  *(_OWORD *)objc_super v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  long long v5 = &v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener];
  *(_OWORD *)long long v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  long long v7 = self;
  uint64_t v8 = v1;
  id v9 = [v7 standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned __int8 v11 = [v9 BOOLForKey:v10];

  v1[v6] = v11;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_initialLoad] = 1;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController;
  *(void *)&v8[v12] = [objc_allocWithZone((Class)FIUIPageViewController) init];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages] = 0;
  uint64_t v13 = &v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014];
  sub_1002D7128((uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014]);

  sub_10019B9F8(v3);
  sub_10008DB18((uint64_t)v4, &qword_100955A00);
  sub_10008DB18((uint64_t)v5, &qword_100955A00);

  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  type metadata accessor for HistoryPagingViewController();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1002D6C4C()
{
  sub_1002D74D8();
  id v1 = [objc_allocWithZone((Class)UIView) init];
  [v0 setView:v1];

  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = [self systemBackgroundColor];
  [v3 setBackgroundColor:v4];

  long long v5 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController];
  [v5 willMoveToParentViewController:v0];
  [v0 addChildViewController:v5];
  id v6 = [v0 view];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v7 = v6;
  id v8 = [v5 view];
  if (!v8)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v9 = v8;
  [v7 addSubview:v8];

  [v5 setDataSource:v0];
  [v5 setDelegate:v0];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  id v12 = [objc_allocWithZone((Class)UIBarButtonItem) initWithImage:v11 style:0 target:v0 action:"showHistoryMonthView"];
  id v13 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:9 target:v0 action:"shareImmediatelyWithSender:"];
  id v14 = [v0 navigationItem];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100756B20;
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v12;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&unk_10095C090);
  id v16 = v13;
  id v17 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 setRightBarButtonItems:isa animated:0];
}

id sub_1002D6F98()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for HistoryPagingViewController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  [v1 setLargeTitleDisplayMode:2];

  return [*(id *)(*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v0];
}

uint64_t sub_1002D7128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v5 - 8);
  long long v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Calendar();
  sub_1000876DC(v15, (uint64_t)qword_100997610);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v14, v17);
  }
  Date.init(timeIntervalSinceReferenceDate:)();
  return sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095B890);
}

uint64_t sub_1002D74D8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v20 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache)+ OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar, v4);
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, enum case for Calendar.Component.day(_:), v11);
  sub_1000C6A18(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v15 = v0;
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  uint64_t v16 = DateComponents.day.getter();
  LOBYTE(v12) = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  if (v12) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v16;
  }
  *(void *)(v15 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages) = v19;
  return result;
}

id sub_1002D7848(uint64_t a1, char a2)
{
  static os_log_type_t.default.getter();
  char v30 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1007509E0;
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
  id v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
  v28(v8 + v7, a1, v5);
  uint64_t v9 = sub_1000AFA94(&qword_100951F78);
  *(void *)(v4 + 56) = v9;
  uint64_t v10 = sub_1000A132C((unint64_t *)&unk_1009559E0, &qword_100951F78);
  *(void *)(v4 + 64) = v10;
  *(void *)(v4 + 32) = v8;
  id v11 = v30;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1002D8C94(a1);
  if (v13)
  {
    static os_log_type_t.default.getter();
    id v24 = (void *)HKLogActivity;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1007509E0;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1007509E0;
    v28(v26 + v7, a1, v5);
    *(void *)(v25 + 56) = v9;
    *(void *)(v25 + 64) = v10;
    *(void *)(v25 + 32) = v26;
    id v27 = v24;
    os_log(_:dso:log:_:_:)();

    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v15 = self;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    *(void *)(v16 + 24) = v14;
    *(unsigned char *)(v16 + 32) = a2 & 1;
    aBlock[4] = sub_1002DBCD0;
    aBlock[5] = (id)v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008C0208;
    char v17 = _Block_copy(aBlock);
    v2;
    swift_release();
    aBlock[0] = 0;
    LOBYTE(v15) = [(id)v15 tryClosure:v17 error:aBlock];
    _Block_release(v17);
    id result = aBlock[0];
    if ((v15 & 1) == 0)
    {
      uint64_t v19 = result;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static os_log_type_t.default.getter();
      uint64_t v20 = (void *)HKLogActivity;
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1007509E0;
      id v22 = v20;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      *(void *)(v21 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100950770);
      *(void *)(v21 + 64) = sub_1000DEEEC();
      *(void *)(v21 + 32) = isa;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      sub_1002DA91C();
      return (id)swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_1002D7CF4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (objc_class *)type metadata accessor for HistoryPagingViewController();
  v58.receiver = v2;
  v58.super_class = v14;
  [super viewWillAppear:a1 & 1];
  id v15 = [v2 navigationController];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v50 = v4;
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      id v19 = [v2 transitionCoordinator];
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = [v19 viewControllerForKey:UITransitionContextFromViewControllerKey];
        id v22 = v21;
        if (!v21) {
          goto LABEL_11;
        }
        char v51 = &OBJC_PROTOCOL___AnimatorDetailViewController;
        uint64_t v47 = v13;
        uint64_t v23 = v5;
        id v24 = v10;
        uint64_t v25 = v8;
        uint64_t v26 = v11;
        id v27 = v21;
        uint64_t v28 = swift_dynamicCastObjCProtocolConditional();
        id v22 = v27;
        uint64_t v29 = v26;
        uint64_t v30 = v25;
        id v31 = v24;
        uint64_t v5 = v23;
        id v32 = v47;
        if (v28)
        {
          id v45 = v27;
          uint64_t v46 = v29;
          sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
          uint64_t v44 = static OS_dispatch_queue.main.getter();
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v20;
          *(void *)(v33 + 24) = v18;
          id v56 = sub_1002DBD8C;
          uint64_t v57 = v33;
          aBlock = _NSConcreteStackBlock;
          uint64_t v53 = 1107296256;
          id v54 = sub_100070394;
          uint64_t v55 = &unk_1008C0320;
          id v42 = _Block_copy(&aBlock);
          swift_unknownObjectRetain();
          id v43 = v16;
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock = (void **)_swiftEmptyArrayStorage;
          sub_100075B54();
          sub_1000AFA94((uint64_t *)&unk_1009555E0);
          sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v34 = v42;
          uint64_t v35 = (void *)v44;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v34);

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v30);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v46);
        }
        else
        {
LABEL_11:
          uint64_t v37 = v22;
          if ([v20 isCancelled])
          {
            [v18 reattachPaletteIfNeededExpanded:1];
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = v18;
            id v56 = sub_1002DBD38;
            uint64_t v57 = v38;
            aBlock = _NSConcreteStackBlock;
            uint64_t v53 = 1107296256;
            id v54 = sub_1002D83B0;
            uint64_t v55 = &unk_1008C02D0;
            id v39 = v20;
            id v40 = _Block_copy(&aBlock);
            id v41 = v16;
            swift_release();
            [v39 animateAlongsideTransition:v40 completion:0];

            _Block_release(v40);
            swift_unknownObjectRelease();
          }
        }
        goto LABEL_9;
      }
      [v18 attachPaletteWithHeight:70.0];
    }

LABEL_9:
    uint64_t v4 = v50;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1002D7848((uint64_t)v7, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1002D82D0(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  void v7[4] = sub_1002DBD94;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1002D83B0;
  v7[3] = &unk_1008C0370;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [a1 animateAlongsideTransition:v5 completion:0];
  _Block_release(v5);
}

uint64_t sub_1002D83B0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1002D8560()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator];
  id v4 = [objc_allocWithZone((Class)CHActivityHistoryNavigationController) initWithDateCache:v2 pauseRingsCoordinator:v3];
  if (!v4) {
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = [objc_allocWithZone((Class)MonthViewController) initWithDataProvider:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider] activityDateCache:v2 badgeImageFactory:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory] pauseRingsCoordinator:v3 workoutFormattingManager:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager]];
  if (!v6)
  {

LABEL_9:
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  unint64_t v7 = v6;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100751040;
  *(void *)(v8 + 32) = v7;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  id v12 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setViewControllers:isa animated:0];

  id v10 = [v1 navigationController];
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 presentViewController:v5 animated:1 completion:0];
  }
}

void sub_1002D8830()
{
  if ((v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 1;
    type metadata accessor for RingCelebrationViewController();
    id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v7 setModalPresentationStyle:5];
    [v7 setModalPresentationCapturesStatusBarAppearance:1];
    *((unsigned char *)v7 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade) = (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext + 1] & 1) == 0;
    static os_log_type_t.default.getter();
    id v1 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    id v2 = [v0 navigationController];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v0;
      aBlock[4] = sub_1002DBC90;
      aBlock[5] = v4;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      void aBlock[3] = &unk_1008C01B8;
      uint64_t v5 = _Block_copy(aBlock);
      id v6 = v0;
      swift_release();
      [v3 presentViewController:v7 animated:0 completion:v5];
      _Block_release(v5);
    }
    else
    {
    }
  }
}

void sub_1002D8A30(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v6 = static os_log_type_t.error.getter();
  id v7 = (void *)HKLogActivity;
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(HKLogActivity, v6))
  {
    id v9 = a1;
    uint64_t v18 = v2;
    id v10 = v9;
    uint64_t v11 = v7;
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v12 = 67109120;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();

    swift_unknownObjectRelease();
    BOOL v19 = Strong == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v18;
    _os_log_impl((void *)&_mh_execute_header, v11, v8, "Calling back delegate for ringCelebrationDidBegin, delegate == nil ? %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }
  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v14)
  {
    [v14 ringCelebrationDidBegin];
    swift_unknownObjectRelease();
  }
  id v15 = [self standardUserDefaults];
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  NSString v17 = String._bridgeToObjectiveC()();
  [v15 setObject:isa forKey:v17];
}

uint64_t sub_1002D8C94(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache)+ OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar, v4);
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, enum case for Calendar.Component.day(_:), v11);
  sub_1000C6A18(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v29);
  uint64_t v15 = v4;
  uint64_t v16 = v25[1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  uint64_t v17 = DateComponents.day.getter();
  LOBYTE(v12) = v18;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  if (v12) {
    return 0;
  }
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages;
  uint64_t v21 = *(void *)(v16 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v24 = v23 - v17;
  if (__OFSUB__(v23, v17))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (FIUILocaleIsRightToLeft()) {
    uint64_t result = v17;
  }
  else {
    uint64_t result = v24;
  }
  if (result < 0 || result >= *(void *)(v16 + v20)) {
    return 0;
  }
  return result;
}

uint64_t sub_1002D9078()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1002D936C()
{
  if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_goalRecommendation + 8])
  {
    if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext] == 1)
    {
      sub_1002D8830();
      return;
    }
    if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsEditing] != 1) {
      return;
    }
    id v11 = [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController] currentlyDisplayedViewController];
    type metadata accessor for HistoryDayViewController();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      id v7 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
      char v8 = *(unsigned char *)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
      char v9 = *(unsigned char *)(*(void *)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                    + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
      objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
      id v10 = sub_10042DC30(v7, v8, v9, 1);
      [v6 presentViewController:v10 animated:1 completion:0];

      uint64_t v4 = v10;
      goto LABEL_12;
    }
  }
  else
  {
    if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete]) {
      return;
    }
    v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 1;
    id v1 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:6];
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    static os_log_type_t.default.getter();
    id v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    [v1 setRecommendedMoveGoal:isa];
    id v11 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v1];
    [v0 presentViewController:v11 animated:1 completion:0];
  }
  uint64_t v4 = (char *)v11;
LABEL_12:
}

char *sub_1002D9604(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, char a15, uint64_t a16, uint64_t a17, unsigned char *a18)
{
  id v87 = a8;
  id v84 = a7;
  uint64_t v82 = a6;
  id v81 = a5;
  id v80 = a4;
  id v79 = a3;
  id v86 = a14;
  id v89 = a12;
  uint64_t v90 = a13;
  id v88 = a11;
  id v85 = a10;
  id v83 = a9;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96[3] = type metadata accessor for AppRecommendationDataProvider();
  v96[4] = &off_1008CFB48;
  v96[0] = a16;
  id v94 = &type metadata for WalkSuggestionDataProvider;
  double v95 = &off_1008D2D18;
  v92[3] = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
  v92[4] = &off_1008B9478;
  v92[0] = a17;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription] = 0;
  uint64_t v24 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  *uint64_t v24 = 0u;
  v24[1] = 0u;
  uint64_t v25 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  *uint64_t v25 = 0u;
  v25[1] = 0u;
  uint64_t v26 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  *uint64_t v26 = 0u;
  v26[1] = 0u;
  uint64_t v27 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  *uint64_t v27 = 0u;
  v27[1] = 0u;
  uint64_t v28 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  *uint64_t v28 = 0u;
  v28[1] = 0u;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery] = 0;
  uint64_t v29 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  *uint64_t v29 = 0u;
  v29[1] = 0u;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards] = _swiftEmptyArrayStorage;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage] = 0;
  uint64_t v30 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText];
  *uint64_t v30 = 0;
  v30[1] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = 0;
  *(void *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsClimbedEnabled] = a15;
  uint64_t v31 = qword_10094A5F8;
  id v32 = a18;
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Calendar();
  uint64_t v34 = sub_1000876DC(v33, (uint64_t)qword_100997640);
  uint64_t v78 = a1;
  v75[1] = v34;
  Calendar.startOfDay(for:)();
  uint64_t v35 = &v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
  (*(void (**)(unsigned char *, char *, uint64_t))(v21 + 32))(&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v23, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v35, v20);
  uint64_t v36 = sub_1000CBADC();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v76 = v20;
  Swift::String v77 = v37;
  v75[2] = v21 + 8;
  v37((uint64_t)v23, v20);
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex] = v36;
  id v38 = objc_allocWithZone((Class)type metadata accessor for ActivityDataProvider());
  id v39 = a2;
  id v40 = sub_10023F300((uint64_t)v39);

  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider] = v40;
  id v41 = v79;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator] = v79;
  id v42 = v80;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider] = v80;
  id v43 = v81;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager] = v81;
  uint64_t v44 = v82;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider] = v82;
  id v45 = v84;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionFormattingManager] = v84;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager] = v87;
  id v46 = v83;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory] = v83;
  id v47 = v85;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager] = v85;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider] = v88;
  uint64_t v48 = v90;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider] = v89;
  sub_10008E75C(v48, (uint64_t)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider]);
  id v49 = v86;
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext] = v86;
  sub_10008E75C((uint64_t)v96, (uint64_t)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_appRecommendationDataProvider]);
  sub_10008E75C((uint64_t)v93, (uint64_t)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_walkSuggestionDataProvider]);
  sub_10008E75C((uint64_t)v92, (uint64_t)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_seymourRecommendationDataProvider]);
  id v79 = v41;
  id v80 = v42;
  id v81 = v43;
  id v50 = v44;
  id v51 = v45;
  id v87 = v87;
  id v52 = v46;
  uint64_t v53 = v39;
  id v83 = v52;
  id v54 = v47;
  id v55 = v88;
  id v89 = v89;
  id v56 = v49;
  uint64_t v57 = v78;
  id v58 = [*(id *)&v53[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache] activitySummaryForCacheIndex:sub_1000CBADC()];
  id v59 = v58;
  uint64_t v60 = v90;
  id v84 = v51;
  id v85 = v54;
  id v88 = v55;
  id v86 = v56;
  if (v58)
  {
    unsigned __int8 v61 = [v58 _isStandalonePhoneSummary];
LABEL_7:
    uint64_t v66 = v76;
    id v67 = v79;
    v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary] = v61;
    v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday] = Calendar.isDateInToday(_:)() & 1;
    id v68 = [objc_allocWithZone((Class)UITableView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    *(void *)&v32[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView] = v68;

    id v69 = (objc_class *)type metadata accessor for HistoryDayViewController();
    v91.receiver = v32;
    v91.super_class = v69;
    id v70 = [super initWithNibName:0 bundle:0];
    uint64_t v71 = v57;
    id v72 = *(void **)&v70[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary];
    *(void *)&v70[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = v59;
    Class v73 = v70;
    id v74 = v59;

    sub_10057595C();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v92);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v93);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v96);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v60);
    v77(v71, v66);
    return v73;
  }
  uint64_t v62 = v90;
  uint64_t v63 = v57;
  uint64_t result = (char *)[self sharedBehavior];
  if (result)
  {
    id v65 = result;
    unsigned __int8 v61 = [result isStandalonePhoneFitnessMode];

    uint64_t v57 = v63;
    uint64_t v60 = v62;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

char *sub_1002D9F0C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, long long a9, long long a10, uint64_t a11, void *a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v33 = a4;
  long long v32 = a9;
  long long v31 = a10;
  uint64_t v45 = type metadata accessor for AppRecommendationDataProvider();
  id v46 = &off_1008CFB48;
  v44[0] = a14;
  id v42 = &type metadata for WalkSuggestionDataProvider;
  id v43 = &off_1008D2D18;
  uint64_t v39 = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
  id v40 = &off_1008B9478;
  v38[0] = a15;
  char v18 = objc_allocWithZone((Class)type metadata accessor for HistoryDayViewController());
  uint64_t v19 = sub_1000DDC00((uint64_t)v44, v45);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = sub_1000DDC00((uint64_t)v41, (uint64_t)v42);
  __chkstk_darwin(v23);
  (*(void (**)(void))(v24 + 16))();
  uint64_t v25 = sub_1000DDC00((uint64_t)v38, v39);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_1002D9604(a1, a2, a3, v33, v34, v35, v36, v37, (void *)v32, *((void **)&v32 + 1), (void *)v31, *((void **)&v31 + 1), a11, a12, a13, *v21, *v27, v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v38);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v41);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v44);
  return v29;
}

id sub_1002DA218(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, unsigned __int16 a15, uint64_t a16, unsigned __int8 a17, unsigned __int8 a18, char *a19, uint64_t a20,uint64_t a21)
{
  id v93 = a7;
  id v102 = a6;
  id v89 = a5;
  id v88 = a4;
  id v87 = a3;
  uint64_t v90 = a2;
  int v100 = a17;
  LODWORD(v101) = a18;
  uint64_t v99 = a16;
  int v98 = a15;
  int v97 = a14;
  double v96 = a13;
  double v95 = a12;
  id v94 = a11;
  id v92 = a10;
  objc_super v91 = a9;
  v108[3] = a20;
  v108[4] = a21;
  uint64_t v26 = sub_1000B1710(v108);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(v26, a8, a20);
  swift_unknownObjectWeakInit();
  uint64_t v27 = &a19[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  *(_OWORD *)uint64_t v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  uint64_t v28 = &a19[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener];
  *(_OWORD *)uint64_t v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  uint64_t v30 = self;
  long long v31 = a19;
  id v32 = [v30 standardUserDefaults];
  NSString v33 = String._bridgeToObjectiveC()();
  unsigned __int8 v34 = [v32 BOOLForKey:v33];

  a19[v29] = v34;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 0;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 0;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_initialLoad] = 1;
  uint64_t v35 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController;
  *(void *)&v31[v35] = [objc_allocWithZone((Class)FIUIPageViewController) init];
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages] = 0;
  sub_1002D7128((uint64_t)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014]);
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider] = a1;
  uint64_t v36 = v90;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache] = v90;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator] = a3;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionDataProvider] = a4;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory] = a5;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_friendListManager] = v102;
  uint64_t v37 = v93;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementResourceProvider] = v93;
  sub_10008E75C((uint64_t)v108, (uint64_t)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_awardsDataProvider]);
  id v38 = v91;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager] = v91;
  uint64_t v39 = v92;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutDataProvider] = v92;
  id v40 = v94;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionFormattingManager] = v94;
  id v41 = v95;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fiuiFormattingManager] = v95;
  id v42 = v96;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementLocalizationProvider] = v96;
  id v43 = v97;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fitnessAppContext] = v97;
  uint64_t v44 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext];
  char v45 = BYTE1(v98);
  *uint64_t v44 = v98 & 1;
  v44[1] = v45 & 1;
  id v46 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_goalRecommendation];
  *(void *)id v46 = v99;
  v46[8] = v100 & 1;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsEditing] = (char)v101;
  id v101 = self;
  id v47 = a1;
  id v48 = v36;
  id v49 = v87;
  id v50 = v88;
  id v51 = v89;
  id v52 = v102;
  id v53 = v37;
  id v54 = v38;
  id v55 = v39;
  id v56 = v40;
  id v57 = v41;
  id v58 = v42;
  id v59 = v43;
  id result = [v101 sharedBehavior];
  if (result)
  {
    unsigned __int8 v61 = result;
    unsigned __int8 v62 = [result isStandalonePhoneFitnessMode];

    uint64_t v63 = type metadata accessor for AppStoreQuery();
    swift_allocObject();
    uint64_t v64 = sub_1002556B0();
    id v65 = (uint64_t *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appStoreQuery];
    v65[3] = v63;
    v65[4] = (uint64_t)&off_1008BD978;
    *id v65 = v64;
    uint64_t v66 = *(void **)&v47[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider];
    id v67 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_recentWorkoutAppQuery];
    *((void *)v67 + 3) = &type metadata for RecentWorkoutAppQuery;
    *((void *)v67 + 4) = &off_1008D2DF8;
    *(void *)id v67 = v66;
    sub_10008E75C((uint64_t)v65, (uint64_t)v106);
    sub_10008E75C((uint64_t)v67, (uint64_t)v104);
    uint64_t v68 = sub_1000DDC00((uint64_t)v106, v107);
    __chkstk_darwin(v68);
    id v70 = (uint64_t *)((char *)&v87 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v71 + 16))(v70);
    uint64_t v72 = sub_1000DDC00((uint64_t)v104, v105);
    __chkstk_darwin(v72);
    id v74 = (uint64_t *)((char *)&v87 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v75 + 16))(v74);
    uint64_t v76 = *v70;
    uint64_t v77 = *v74;
    id v78 = v66;
    uint64_t v79 = sub_10040115C(v76, v77, (uint64_t)&off_1008B4B68, v62 ^ 1u);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v104);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v106);
    id v80 = (uint64_t *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appRecommendationDataProvider];
    void v80[3] = type metadata accessor for AppRecommendationDataProvider();
    v80[4] = (uint64_t)&off_1008CFB48;
    uint64_t *v80 = v79;
    uint64_t v81 = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
    swift_allocObject();
    uint64_t v82 = sub_1001AD490(v59);
    id v83 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_seymourWorkoutRecommendationDataProvider];
    *((void *)v83 + 3) = v81;
    *((void *)v83 + 4) = &off_1008B9478;
    *(void *)id v83 = v82;
    id v84 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_walkSuggestionDataProvider];
    *((void *)v84 + 3) = &type metadata for WalkSuggestionDataProvider;
    *((void *)v84 + 4) = &off_1008D2D18;

    id v85 = (objc_class *)type metadata accessor for HistoryPagingViewController();
    v103.receiver = v31;
    v103.super_class = v85;
    [super initWithNibName:0 bundle:0];
    sub_1002D5BF4();

    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v108);
    return v86;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DA91C()
{
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 46;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  static os_log_type_t.default.getter();
  id v3 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10074E640;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA64C();
  *(void *)(v4 + 32) = 0xD000000000000029;
  *(void *)(v4 + 40) = 0x80000001007BF1B0;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = 0xD000000000000018;
  *(void *)(v4 + 80) = 0x80000001007BF1E0;
  id v6 = v3;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

void sub_1002DAAE4()
{
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController) currentlyDisplayedViewController];
  type metadata accessor for HistoryDayViewController();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    if (*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary)) {
      sub_100576944();
    }
    else {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 1;
    }
  }
}

uint64_t sub_1002DAB8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v65 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v83 = (uint64_t)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v85 = (uint64_t)&v65 - v22;
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v84 = v12;
  uint64_t v26 = v25 - a1;
  if (__OFSUB__(v25, a1))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v26 = a1;
  }
  Date.init()();
  Calendar.startOfDay(for:)();
  uint64_t v82 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v9;
  uint64_t v27 = v9 + 8;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v29 = v15;
  uint64_t v30 = v27;
  v28(v29, v8);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Component.day(_:), v4);
  if (__OFSUB__(0, v26)) {
    goto LABEL_12;
  }
  uint64_t v31 = v85;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v28(v17, v8);
  id v32 = v84;
  Date.init()();
  uint64_t v33 = v83;
  sub_1000AEF2C(v31, v83, (uint64_t *)&unk_10095B890);
  uint64_t v34 = (uint64_t)v82;
  int v35 = v82[6](v33, 1, v8);
  uint64_t v81 = v30;
  id v80 = v28;
  if (v35 == 1)
  {
    sub_10008DB18(v33, (uint64_t *)&unk_10095B890);
  }
  else
  {
    v28(v32, v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v33, v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v17, v32, v8);
  uint64_t v36 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider);
  uint64_t v37 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator);
  uint64_t v83 = v8;
  id v38 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionDataProvider);
  uint64_t v39 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager);
  uint64_t v82 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v17;
  id v40 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutDataProvider);
  id v41 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionFormattingManager);
  id v72 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fiuiFormattingManager);
  id v74 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory);
  id v76 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_friendListManager);
  id v79 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementLocalizationProvider);
  id v77 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementResourceProvider);
  sub_10008E75C(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_awardsDataProvider, (uint64_t)v92);
  id v73 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fitnessAppContext);
  int v78 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled);
  sub_10008E75C(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appRecommendationDataProvider, (uint64_t)v90);
  sub_10008E75C(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_walkSuggestionDataProvider, (uint64_t)v88);
  sub_10008E75C(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_seymourWorkoutRecommendationDataProvider, (uint64_t)v86);
  uint64_t v42 = sub_1000DDC00((uint64_t)v90, v91);
  uint64_t v75 = &v65;
  __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t *)((char *)&v65 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  uint64_t v46 = sub_1000DDC00((uint64_t)v88, v89);
  uint64_t v71 = &v65;
  __chkstk_darwin(v46);
  (*(void (**)(void))(v47 + 16))();
  uint64_t v48 = sub_1000DDC00((uint64_t)v86, v87);
  id v70 = &v65;
  __chkstk_darwin(v48);
  id v50 = (uint64_t *)((char *)&v65 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v51 + 16))(v50);
  uint64_t v68 = *v44;
  uint64_t v66 = *v50;
  id v69 = v36;
  id v67 = v37;
  id v52 = v38;
  id v53 = v39;
  id v54 = v40;
  id v55 = v41;
  id v56 = v72;
  id v57 = v74;
  id v58 = v76;
  id v59 = v79;
  id v60 = v77;
  id v61 = v73;
  *(void *)&long long v64 = v59;
  *((void *)&v64 + 1) = v60;
  *(void *)&long long v63 = v57;
  *((void *)&v63 + 1) = v58;
  unsigned __int8 v62 = sub_1002D9F0C((uint64_t)v82, v69, v67, v52, v53, v54, v55, v56, v63, v64, (uint64_t)v92, v61, v78, v68, v66);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v86);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v88);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v90);
  *(void *)&v62[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate + 8] = &off_1008C0170;
  swift_unknownObjectWeakAssign();
  v80(v84, v83);
  sub_10008DB18(v85, (uint64_t *)&unk_10095B890);
  return (uint64_t)v62;
}

uint64_t sub_1002DB438(objc_class *a1)
{
  uint64_t v3 = type metadata accessor for Calendar.Component();
  uint64_t v4 = *(char **)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v42 - 8);
  uint64_t v11 = __chkstk_darwin(v42);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v38 - v15;
  __chkstk_darwin(v14);
  id v40 = (char *)&v38 - v17;
  id v18 = [*(id *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController) currentlyDisplayedViewController];
  type metadata accessor for HistoryDayViewController();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19) {
    [(objc_class *)v1 setContentScrollView:*(void *)(v19 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView) forEdge:15];
  }

  uint64_t v20 = *(void *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_22;
  }
  Class v43 = v1;
  Class v1 = a1;
  BOOL v21 = __OFSUB__(v22, a1);
  a1 = (objc_class *)(v22 - (void)a1);
  if (v21)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_14;
  }
  id v41 = v9;
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v9 = (char *)v1;
  }
  else {
    uint64_t v9 = (char *)a1;
  }
  uint64_t v39 = *(void *)((char *)v43 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache);
  Class v1 = (Class)(v39 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar);
  Date.init()();
  Calendar.startOfDay(for:)();
  a1 = (objc_class *)v6;
  id v18 = *(id *)(v10 + 8);
  uint64_t v23 = v13;
  uint64_t v13 = (char *)v42;
  ((void (*)(char *, uint64_t))v18)(v23, v42);
  (*((void (**)(char *, void, uint64_t))v4 + 13))(v6, enum case for Calendar.Component.day(_:), v3);
  if (__OFSUB__(0, v9)) {
    goto LABEL_23;
  }
  uint64_t v24 = (uint64_t)v41;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*((void (**)(char *, uint64_t))v4 + 1))(v6, v3);
  ((void (*)(char *, char *))v18)(v16, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v10 + 48))(v24, 1, v13) == 1) {
    return sub_10008DB18(v24, (uint64_t *)&unk_10095B890);
  }
  uint64_t v4 = v40;
  (*(void (**)(char *, uint64_t, char *))(v10 + 32))(v40, v24, v13);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  uint64_t v28 = v39;
  unsigned __int8 v29 = [*(id *)(v39 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate) isEqualToDate:isa];
  uint64_t v30 = *(void **)(v28 + v27);
  *(void *)(v28 + v27) = isa;
  Class v1 = isa;

  if (v29)
  {
    uint64_t v9 = (char *)v1;
    a1 = v43;
    goto LABEL_15;
  }
  uint64_t v9 = (char *)[self defaultCenter];
  a1 = v43;
  if (qword_10094A7E8 != -1) {
    goto LABEL_24;
  }
LABEL_14:
  [v9 postNotificationName:qword_1009979E0 object:a1];

LABEL_15:
  id v31 = [(objc_class *)a1 navigationItem];
  id v32 = self;
  Class v33 = Date._bridgeToObjectiveC()().super.isa;
  id v34 = [v32 stringWithDayNameAndShortMonthFromDate:v33];

  [v31 setTitle:v34];
  id v35 = [*(id *)(*(void *)((char *)a1+ OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];

  id v36 = [(objc_class *)a1 navigationItem];
  id v37 = [v36 rightBarButtonItem];

  if (!v35)
  {
    [v37 setEnabled:0];
    goto LABEL_19;
  }
  if (v37)
  {
    [v37 setEnabled:1];
LABEL_19:
  }
  return ((uint64_t (*)(char *, char *))v18)(v4, v13);
}

uint64_t sub_1002DB9DC()
{
  Class v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    id v12 = [v1 navigationItem];
    id v13 = [v12 rightBarButtonItem];

    if (v13)
    {
      id v14 = [*(id *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
      id v15 = v14;
      if (v14) {

      }
      [v13 setEnabled:v15 != 0];
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DBC58()
{
  return swift_deallocObject();
}

void sub_1002DBC90()
{
  sub_1002D8A30(*(void **)(v0 + 16));
}

uint64_t sub_1002DBC98()
{
  return swift_deallocObject();
}

id sub_1002DBCD0()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController) setCurrentlyDisplayedIndex:*(void *)(v0 + 24) animated:*(unsigned __int8 *)(v0 + 32)];
}

uint64_t sub_1002DBCF0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002DBD28()
{
}

void sub_1002DBD30()
{
}

id sub_1002DBD38()
{
  return [*(id *)(v0 + 16) reattachPaletteIfNeededExpanded:1];
}

uint64_t sub_1002DBD4C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1002DBD8C()
{
  sub_1002D82D0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002DBDC4(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *a1;
  id v6 = [*(id *)(a2 + 24) me];
  if (v6)
  {
    uint64_t v7 = v6;
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    id v8 = v5;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10) {
      return 0;
    }
  }
  uint64_t result = (uint64_t)[v5 friendAchievements];
  if (!result) {
    return result;
  }
  id v12 = (void *)result;
  uint64_t v61 = a2;
  id v59 = a3;
  id v60 = v5;
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  sub_1000AFA94(&qword_1009507B0);
  sub_1000CD998((unint64_t *)&qword_100955BF0, (unint64_t *)&qword_100955BE0);
  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = v13 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  uint64_t v17 = v16 & *(void *)(v13 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v20 = &_swiftEmptySetSingleton;
  unint64_t v21 = (unint64_t)&unk_100955C10;
  while (1)
  {
    if (v17)
    {
      v17 &= v17 - 1;
      goto LABEL_9;
    }
    int64_t v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_45:
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (v28) {
        goto LABEL_32;
      }
LABEL_46:
      swift_release();
      uint64_t v30 = _swiftEmptyArrayStorage;
      goto LABEL_47;
    }
    if (v25 >= v18) {
      goto LABEL_29;
    }
    uint64_t v26 = *(void *)(v14 + 8 * v25);
    ++v19;
    if (!v26)
    {
      int64_t v19 = v25 + 1;
      if (v25 + 1 >= v18) {
        goto LABEL_29;
      }
      uint64_t v26 = *(void *)(v14 + 8 * v19);
      if (!v26)
      {
        int64_t v19 = v25 + 2;
        if (v25 + 2 >= v18) {
          goto LABEL_29;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v19);
        if (!v26)
        {
          int64_t v19 = v25 + 3;
          if (v25 + 3 >= v18) {
            goto LABEL_29;
          }
          uint64_t v26 = *(void *)(v14 + 8 * v19);
          if (!v26)
          {
            int64_t v19 = v25 + 4;
            if (v25 + 4 >= v18) {
              goto LABEL_29;
            }
            uint64_t v26 = *(void *)(v14 + 8 * v19);
            if (!v26) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v17 = (v26 - 1) & v26;
LABEL_9:
    swift_bridgeObjectRetain();
    unint64_t v22 = swift_bridgeObjectRetain();
    sub_1000DF484(v22, v20, (unint64_t *)&unk_100955C10, (uint64_t)_HKFitnessFriendAchievement_ptr, &qword_1009507B8, (void (*)(id *, id))sub_1001E9804);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v20 = v24;
  }
  int64_t v27 = v25 + 5;
  if (v27 < v18)
  {
    uint64_t v26 = *(void *)(v14 + 8 * v27);
    if (!v26)
    {
      while (1)
      {
        int64_t v19 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          break;
        }
        if (v19 >= v18) {
          goto LABEL_29;
        }
        uint64_t v26 = *(void *)(v14 + 8 * v19);
        ++v27;
        if (v26) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_71:
      __break(1u);
    }
    int64_t v19 = v27;
    goto LABEL_28;
  }
LABEL_29:
  swift_release();
  unint64_t v21 = (unint64_t)sub_100369B00((uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0) {
    goto LABEL_45;
  }
  uint64_t v28 = *(void *)(v21 + 16);
  if (!v28) {
    goto LABEL_46;
  }
LABEL_32:
  unsigned __int8 v62 = _swiftEmptyArrayStorage;
  sub_1001C92BC(0, v28 & ~(v28 >> 63), 0);
  if (v28 < 0) {
    goto LABEL_71;
  }
  uint64_t v29 = 0;
  uint64_t v30 = v62;
  do
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v31 = *(id *)(v21 + 8 * v29 + 32);
    }
    id v32 = v31;
    id v33 = [v31 templateUniqueName];
    if (v33)
    {
      id v34 = v33;
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;
    }
    else
    {

      uint64_t v35 = 0;
      uint64_t v37 = 0;
    }
    unsigned __int8 v62 = v30;
    unint64_t v39 = v30[2];
    unint64_t v38 = v30[3];
    if (v39 >= v38 >> 1)
    {
      sub_1001C92BC(v38 > 1, v39 + 1, 1);
      uint64_t v30 = v62;
    }
    ++v29;
    v30[2] = v39 + 1;
    id v40 = &v30[2 * v39];
    v40[4] = v35;
    v40[5] = v37;
  }
  while (v28 != v29);
  swift_release();
LABEL_47:
  id v41 = [*(id *)(v61 + 16) template];
  id v42 = [v41 uniqueName];

  if (v42)
  {
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    uint64_t v46 = v30[2];
    if (!v46) {
      goto LABEL_66;
    }
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = v30[2];
    if (!v46)
    {
LABEL_66:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v47 = v30 + 5;
  while (2)
  {
    if (!*v47)
    {
      if (!v45) {
        goto LABEL_62;
      }
      goto LABEL_53;
    }
    if (!v45
      || (*(v47 - 1) == v43 ? (BOOL v48 = *v47 == v45) : (BOOL v48 = 0),
          !v48 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
    {
LABEL_53:
      v47 += 2;
      if (!--v46) {
        goto LABEL_66;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t)[v60 contact];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v49 = (void *)result;
  id v50 = [(id)result linkedContactStoreIdentifier];

  if (!v50)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_100752650;
  *(void *)(v51 + 32) = CNContactThumbnailImageDataKey;
  *(void *)(v51 + 40) = CNContactGivenNameKey;
  *(void *)(v51 + 48) = CNContactNicknameKey;
  specialized Array._endMutation()();
  id v52 = CNContactThumbnailImageDataKey;
  id v53 = CNContactGivenNameKey;
  id v54 = CNContactNicknameKey;
  sub_1000AFA94((uint64_t *)&unk_100955C00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unsigned __int8 v62 = 0;
  id v56 = [v59 unifiedContactWithIdentifier:v50 keysToFetch:isa error:&v62];

  if (v56)
  {
    id v57 = v62;

    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    id v58 = v62;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
}

uint64_t sub_1002DC484()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FriendsAchievementDataProvider()
{
  return self;
}

char *sub_1002DC4E8(char *a1, char **a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v23[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v8;
    uint64_t v9 = a3[5];
    char v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v7;
    v13(v10, v11, v12);
    uint64_t v15 = a3[6];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    unint64_t v21 = *(char **)((char *)a2 + v19);
    *(void *)&v4[v19] = v21;
    *(void *)&v4[v20] = *(char **)((char *)a2 + v20);
    id v22 = v21;
  }
  return v4;
}

void sub_1002DC644(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  id v6 = (char *)a1 + a2[6];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  char v8 = *(id *)((char *)a1 + a2[7]);
}

uint64_t sub_1002DC710(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v20;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  id v21 = v20;
  return a1;
}

uint64_t sub_1002DC81C(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = a3[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)(a2 + v18);
  uint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1002DC928(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_1002DCA18(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1002DCB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002DCB30);
}

uint64_t sub_1002DCB30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1002DCC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002DCC54);
}

uint64_t sub_1002DCC54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = type metadata accessor for Date();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_1002DCD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1002DCDD0()
{
  return Date.isAfter(date:)() & 1;
}

BOOL sub_1002DCE00()
{
  return (Date.isAfter(date:)() & 1) == 0;
}

BOOL sub_1002DCE34()
{
  return (Date.isAfter(date:)() & 1) == 0;
}

uint64_t sub_1002DCE68()
{
  return Date.isAfter(date:)() & 1;
}

uint64_t sub_1002DCE98()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1002DCEA8()
{
  return sub_1002DCF38(&qword_100955CC8, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlight);
}

uint64_t sub_1002DCEF0()
{
  return sub_1002DCF38((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1002DCF38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for ActivitySharingHighlight.HighlightType(id *a1)
{
}

uint64_t assignWithCopy for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlight.HighlightType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlight.HighlightType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1002DD0C8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlight.HighlightType()
{
  return &type metadata for ActivitySharingHighlight.HighlightType;
}

uint64_t sub_1002DD0E8()
{
  return MindfulnessSessionViewModel.metadata.getter();
}

uint64_t sub_1002DD10C()
{
  id v1 = [*v0 description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_1002DD164()
{
  id v1 = [*v0 metadata];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1002DD368(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - v10;
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v30 - v12;
  v32[3] = type metadata accessor for MindfulnessSessionViewModel();
  v32[4] = &off_1008C0428;
  v32[0] = a1;
  id v14 = a1;
  uint64_t v15 = MindfulnessSessionViewModel.metadata.getter();
  if (!v15)
  {
    long long v30 = 0u;
    long long v31 = 0u;
    goto LABEL_9;
  }
  uint64_t v16 = v15;
  uint64_t v17 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  if (!*(void *)(v16 + 16) || (unint64_t v19 = sub_1000DA1C0(v17, v18), (v20 & 1) == 0))
  {
    long long v30 = 0u;
    long long v31 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
LABEL_9:
    sub_100074898((uint64_t)&v30);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
  }
  if (swift_dynamicCast())
  {
    sub_10007E4EC((void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient), *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient + 24));
    dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)();
    swift_bridgeObjectRelease();
    sub_10008E75C((uint64_t)v32, (uint64_t)&v30);
    uint64_t v21 = swift_allocObject();
    sub_100093E60(&v30, v21 + 16);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1002DDC98;
    *(void *)(v22 + 24) = v21;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v23, v8, v4);
    int64_t v25 = (void *)(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
    *int64_t v25 = sub_1001B3D88;
    v25[1] = v22;
    Promise.init(asyncOperation:)();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v11, v4);
    int64_t v27 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    v27(sub_10006D36C, v28);
    swift_release();
    swift_release();
    v26(v13, v4);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
}

uint64_t sub_1002DD720(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - v10;
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v30 - v12;
  v32[3] = sub_1002DDB04();
  v32[4] = &off_1008C0440;
  v32[0] = a1;
  id v14 = [a1 metadata];
  if (!v14)
  {
    long long v30 = 0u;
    long long v31 = 0u;
    goto LABEL_9;
  }
  uint64_t v15 = v14;
  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  if (!*(void *)(v16 + 16) || (unint64_t v19 = sub_1000DA1C0(v17, v18), (v20 & 1) == 0))
  {
    long long v30 = 0u;
    long long v31 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
LABEL_9:
    sub_100074898((uint64_t)&v30);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
  }
  if (swift_dynamicCast())
  {
    sub_10007E4EC((void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient), *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient + 24));
    dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)();
    swift_bridgeObjectRelease();
    sub_10008E75C((uint64_t)v32, (uint64_t)&v30);
    uint64_t v21 = swift_allocObject();
    sub_100093E60(&v30, v21 + 16);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1002DDB7C;
    *(void *)(v22 + 24) = v21;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v23, v8, v4);
    int64_t v25 = (uint64_t (**)(uint64_t))(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
    *int64_t v25 = sub_1001B36B8;
    v25[1] = (uint64_t (*)(uint64_t))v22;
    Promise.init(asyncOperation:)();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v11, v4);
    int64_t v27 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    v27(sub_10006D8B4, v28);
    swift_release();
    swift_release();
    v26(v13, v4);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v32);
}

unint64_t sub_1002DDB04()
{
  unint64_t result = qword_10095E770;
  if (!qword_10095E770)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10095E770);
  }
  return result;
}

uint64_t sub_1002DDB44()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1002DDB7C(uint64_t a1)
{
  return sub_100487E08(a1, (void *)(v1 + 16));
}

uint64_t sub_1002DDBA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DDBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94((uint64_t *)&unk_1009633D0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10006CE48(a1, a2, v7, v9, v10);
}

uint64_t sub_1002DDC98(uint64_t a1)
{
  return sub_1002DDB7C(a1);
}

unint64_t sub_1002DDCB8()
{
  unint64_t result = qword_100955CD0;
  if (!qword_100955CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CD0);
  }
  return result;
}

unint64_t sub_1002DDD10()
{
  unint64_t result = qword_100955CD8;
  if (!qword_100955CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CD8);
  }
  return result;
}

unint64_t sub_1002DDD68()
{
  unint64_t result = qword_100955CE0;
  if (!qword_100955CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CE0);
  }
  return result;
}

unint64_t sub_1002DDDC0()
{
  unint64_t result = qword_100955CE8;
  if (!qword_100955CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CE8);
  }
  return result;
}

void *sub_1002DDE14()
{
  return &protocol witness table for UUID;
}

uint64_t sub_1002DDE20()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  qword_100997B28 = result;
  return result;
}

uint64_t sub_1002DDE88()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_100997B30);
  sub_1000876DC(v5, (uint64_t)qword_100997B30);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1002DDFF4()
{
  uint64_t v0 = sub_1000AFA94(&qword_100955D50);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100955D58);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100955D48);
  sub_1000258C4(v5, qword_100997B48);
  sub_1000876DC(v5, (uint64_t)qword_100997B48);
  sub_1002DE698();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007BF350;
  v6._countAndFlagsBits = 0xD000000000000021;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

void sub_1002DE1E0()
{
  id v0 = [objc_allocWithZone((Class)HKHealthStore) init];
  id v1 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v0];
  id v2 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v1];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    *(void *)&v5[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = v3;
    *(void *)&v5[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v0;
    v7.receiver = v5;
    v7.super_class = v4;
    [super init];

    qword_100997B60 = (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002DE2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v3 - 8);
  v23[0] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v5 - 8);
  objc_super v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  if (qword_10094A8A0 != -1) {
    swift_once();
  }
  unint64_t v13 = (void *)qword_100997B60;
  uint64_t v14 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
  id v15 = v13;
  id v16 = sub_1005CBFB4(a1, (uint64_t)v10);

  sub_1002DEE4C((uint64_t)v10);
  id v17 = [v16 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v18 = (id)qword_100997B60;
  id v19 = sub_1005CC8F0();

  id v20 = [v19 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  id v21 = (id)qword_100997B60;
  sub_1005CCDAC();

  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_1002DE628@<X0>(void *a1@<X8>)
{
  if (qword_10094A888 != -1) {
    swift_once();
  }
  *a1 = qword_100997B28;

  return swift_retain();
}

unint64_t sub_1002DE698()
{
  unint64_t result = qword_100955CF0;
  if (!qword_100955CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CF0);
  }
  return result;
}

unint64_t sub_1002DE6F0()
{
  unint64_t result = qword_100955CF8;
  if (!qword_100955CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955CF8);
  }
  return result;
}

uint64_t sub_1002DE744@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A898 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_100955D48);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997B48);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1002DE7F4()
{
  unint64_t result = qword_100955D00;
  if (!qword_100955D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D00);
  }
  return result;
}

unint64_t sub_1002DE84C()
{
  unint64_t result = qword_100955D08;
  if (!qword_100955D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D08);
  }
  return result;
}

unint64_t sub_1002DE8A4()
{
  unint64_t result = qword_100955D10;
  if (!qword_100955D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D10);
  }
  return result;
}

unint64_t sub_1002DE8FC()
{
  unint64_t result = qword_100955D18;
  if (!qword_100955D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D18);
  }
  return result;
}

uint64_t sub_1002DE950()
{
  return MindfulnessSessionViewModel.uuid.getter();
}

uint64_t sub_1002DE974()
{
  sub_1002DEEAC();
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_1002DEA08@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A890 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100997B30);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1002DEAB4()
{
  unint64_t result = qword_100955D28;
  if (!qword_100955D28)
  {
    sub_1000A1370(&qword_100955D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D28);
  }
  return result;
}

uint64_t sub_1002DEB10(uint64_t a1)
{
  unint64_t v2 = sub_1002DE698();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002DEB60()
{
  unint64_t result = qword_100955D38;
  if (!qword_100955D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D38);
  }
  return result;
}

uint64_t sub_1002DEBB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002DE2C0(*v1, a1);
}

uint64_t sub_1002DEBBC(uint64_t a1)
{
  unint64_t v2 = sub_1002DE8FC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for MindfulnessSessionEntity()
{
  return &type metadata for MindfulnessSessionEntity;
}

uint64_t sub_1002DEC18(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = [a1 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v7 = [a1 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = [a1 metadata];
  if (v8)
  {
    uint64_t v9 = v8;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v10 = [a1 sourceRevision];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100751040;
  *(void *)(v11 + 32) = a1;
  specialized Array._endMutation()();
  id v12 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel());
  return MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)();
}

uint64_t sub_1002DEE4C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100950BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002DEEAC()
{
  unint64_t result = qword_100955D40;
  if (!qword_100955D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955D40);
  }
  return result;
}

uint64_t sub_1002DEF00()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1002DEF74(uint64_t a1)
{
  uint64_t v3 = self;
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  id v5 = [v3 stringWithNumber:v4 decimalPrecision:1];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0;
  }
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
  id v10 = [v9 fitnessUIFormattingManager];
  id v11 = [v10 unitManager];

  if (!v11)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_13;
  }
  id v12 = [v11 userDistanceUnitForDistanceType:3];

  id v13 = [v9 fitnessUIFormattingManager];
  id v14 = [v13 localizedShortUnitStringForDistanceUnit:v12];

  if (!v14)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  sub_1000A06D0();
  uint64_t v18 = StringProtocol.localizedUppercase.getter();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  id v21 = [self mainBundle:v15, v17];
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10074E640;
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v25 = sub_1000AA64C();
  if (v8) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = 0;
  }
  unint64_t v27 = 0xE000000000000000;
  if (v8) {
    unint64_t v27 = v8;
  }
  *(void *)(v24 + 32) = v26;
  *(void *)(v24 + 40) = v27;
  *(void *)(v24 + 96) = &type metadata for String;
  *(void *)(v24 + 104) = v25;
  *(void *)(v24 + 64) = v25;
  *(void *)(v24 + 72) = v18;
  *(void *)(v24 + 80) = v20;
  uint64_t v28 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v28;
}

void *sub_1002DF234(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = sub_1000AFA94(&qword_10094BDC8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_supportedPaceDistances] = &off_1008B3698;
  id v13 = &v4[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource__paceDistance];
  uint64_t v26 = 100;
  id v14 = v4;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(void *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_dataCalculator] = a3;
  *(void *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager] = a4;
  *(void *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout] = a1;
  *(void *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workoutActivity] = a2;
  id v15 = a2;
  id v16 = a3;
  id v17 = a4;
  id v18 = a1;

  uint64_t v19 = (objc_class *)type metadata accessor for WorkoutDetailSwimmingActivityDataSource();
  v25.receiver = v14;
  v25.super_class = v19;
  uint64_t v20 = [super init];
  id v21 = *(void (**)(void))((swift_isaMask & *v20) + 0xC0);
  NSString v22 = v20;
  v21();

  return v22;
}

void sub_1002DF494()
{
}

id sub_1002DF520()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSwimmingActivityDataSource();
  return [super dealloc];
}

uint64_t sub_1002DF61C()
{
  return type metadata accessor for WorkoutDetailSwimmingActivityDataSource();
}

uint64_t type metadata accessor for WorkoutDetailSwimmingActivityDataSource()
{
  uint64_t result = qword_100955DB8;
  if (!qword_100955DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002DF670()
{
  sub_1002DF72C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002DF72C()
{
  if (!qword_10094BB18)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094BB18);
    }
  }
}

id sub_1002DF78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.distantPast.getter();
  static Date.distantFuture.getter();
  DateInterval.init(start:end:)();
  uint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutChartedDistancePathRenderer());
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals] = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v10[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval], v9, v6);
  *(void *)&v10[v11] = 0;
  id v12 = v10;
  swift_bridgeObjectRelease();
  v12[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode] = 0;

  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  id v13 = (objc_class *)type metadata accessor for WorkoutOverlayPathRenderer();
  v16.receiver = v12;
  v16.super_class = v13;
  [super initWithOverlay:a1];
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

void sub_1002DF990(CGContext *a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  uint64_t v7 = v6;
  v97.size.CGFloat height = a5;
  v97.size.CGFloat width = a4;
  v97.origin.CGFloat y = a3;
  v97.origin.CGFloat x = a2;
  uint64_t v119 = type metadata accessor for DateInterval();
  uint64_t v90 = *(void *)(v119 - 8);
  uint64_t v10 = __chkstk_darwin(v119);
  id v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v110 = (char *)&v84 - v13;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v111 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  id v17 = *(char **)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v116 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v21 = (char *)&v84 - v20;
  objc_msgSend(objc_msgSend(v6, "overlay"), "boundingMapRect");
  double v103 = v22;
  double v102 = v23;
  swift_unknownObjectRelease();
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  uint64_t v89 = a1;
  MKZoomScale v104 = a6;
  [v6 applyStrokePropertiesToContext:a1 atZoomScale:a6];
  uint64_t v24 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings];
  id v25 = [v24 workout];
  id v26 = [v25 workoutActivityType];

  double v27 = 5.0;
  if (v26 == (id)46) {
    double v27 = 15.0;
  }
  double v88 = v27;
  id v105 = v24;
  id v28 = [v24 allValidLocations];
  sub_1002E0AE0();
  unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v29 >> 62) {
    goto LABEL_54;
  }
  if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    while (1)
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        long long v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        long long v30 = v111;
      }
      else
      {
        long long v30 = v111;
        if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          return;
        }
        long long v31 = (char *)*(id *)(v29 + 32);
      }
      swift_bridgeObjectRelease();
      unint64_t v29 = (unint64_t)[v105 inOrderLocationArrays];
      sub_1000AFA94((uint64_t *)&unk_100955E00);
      uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v33 = v32;
      id v86 = *(id **)(v32 + 16);
      if (!v86) {
        break;
      }
      unint64_t v34 = 0;
      id v101 = &v7[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval];
      uint64_t v98 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
      uint64_t v85 = v32 + 32;
      uint64_t v35 = (void (**)(char *, uint64_t))(v17 + 8);
      uint64_t v113 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56);
      uint64_t v112 = (unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      uint64_t v109 = (void (**)(char *, char *, uint64_t))(v90 + 32);
      id v117 = (void (**)(char *, uint64_t))(v90 + 8);
      id v118 = (void (**)(char *, char *, uint64_t))(v90 + 16);
      id v17 = v31;
      double v95 = v7;
      id v94 = v12;
      uint64_t v93 = v16;
      id v92 = v21;
      uint64_t v84 = v33;
      while (v34 < *(void *)(v33 + 16))
      {
        unint64_t v87 = v34;
        unint64_t v36 = *(void *)(v85 + 8 * v34);
        swift_bridgeObjectRetain();
        uint64_t v37 = v17;
        id v38 = [v17 timestamp];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        Date.timeIntervalSinceReferenceDate.getter();
        double v40 = v39;
        id v115 = *v35;
        v115(v21, v16);
        unint64_t v100 = v36;
        if (v36 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          unint64_t v36 = v100;
          id v17 = v37;
          if (v29)
          {
LABEL_15:
            id v41 = 0;
            unint64_t v107 = v36 & 0xC000000000000001;
            unint64_t v96 = v36 + 32;
            uint64_t v106 = (id *)v29;
            while (1)
            {
              id v44 = v107
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                  : *(id *)(v96 + 8 * (void)v41);
              uint64_t v45 = v44;
              BOOL v46 = __OFADD__(v41, 1);
              uint64_t v47 = (id *)((char *)v41 + 1);
              if (v46) {
                break;
              }
              id v48 = [v44 timestamp];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v50 = v49;
              v115(v21, v16);
              if (v50 < v40)
              {

                goto LABEL_11;
              }
              uint64_t v108 = v47;
              [v17 coordinate];
              MKMapPoint v51 = MKMapPointForCoordinate(v121);
              id v114 = v45;
              [v45 coordinate];
              MKMapPoint v52 = MKMapPointForCoordinate(v122);
              double v53 = MKRoadWidthAtZoomScale(v104);
              id v54 = [self distanceColors];
              if (!v54) {
                goto LABEL_60;
              }
              id v55 = v54;
              id v56 = v35;
              id v57 = [v54 nonGradientTextColor];

              if (!v57) {
                goto LABEL_61;
              }
              id v58 = [v105 workout];
              id v59 = [v58 workoutActivityType];

              if ((v59 == (id)67 || v59 == (id)61) && (uint64_t v60 = *(void *)&v7[v98]) != 0)
              {
                uint64_t v99 = v17;
                swift_bridgeObjectRetain();
                id v61 = [v114 timestamp];
                static Date._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v62 = *(void *)(v60 + 16);
                if (v62)
                {
                  unint64_t v91 = (unint64_t)v113 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
                  uint64_t v63 = v60
                      + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
                  uint64_t v64 = *(void *)(v90 + 72);
                  uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v66 = v119;
                  while (1)
                  {
                    v65(v30, v63, v66);
                    id v67 = *v113;
                    (*v113)(v30, 0, 1, v66);
                    if ((*v112)(v30, 1, v66) == 1) {
                      break;
                    }
                    uint64_t v68 = v110;
                    (*v109)(v110, v30, v119);
                    char v69 = DateInterval.contains(_:)();
                    id v70 = v68;
                    uint64_t v66 = v119;
                    (*v117)(v70, v119);
                    if (v69)
                    {
                      swift_bridgeObjectRelease_n();
                      uint64_t v16 = v93;
                      uint64_t v35 = v56;
                      v115(v116, v93);
                      uint64_t v7 = v95;
                      id v12 = v94;
                      long long v30 = v111;
                      id v21 = v92;
                      id v17 = v99;
                      goto LABEL_41;
                    }
                    v63 += v64;
                    --v62;
                    long long v30 = v111;
                    if (!v62) {
                      goto LABEL_36;
                    }
                  }
                }
                else
                {
                  id v67 = *v113;
                  swift_bridgeObjectRetain();
                  uint64_t v66 = v119;
LABEL_36:
                  v67(v30, 1, 1, v66);
                }
                swift_bridgeObjectRelease_n();
                uint64_t v16 = v93;
                uint64_t v35 = v56;
                v115(v116, v93);
                uint64_t v7 = v95;
                id v12 = v94;
                id v21 = v92;
                id v17 = v99;
                if (qword_10094AEB0 != -1) {
                  swift_once();
                }
                id v71 = (id)qword_100998538;

                id v57 = v71;
              }
              else
              {
                uint64_t v35 = v56;
              }
              uint64_t v66 = v119;
LABEL_41:
              id v72 = v114;
              double v73 = v53 * 0.666666667;
              (*v118)(v12, v101, v66);
              id v74 = [v72 timestamp];
              uint64_t v75 = v66;
              id v76 = v74;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              LOBYTE(v76) = DateInterval.contains(_:)();
              v115(v21, v16);
              (*v117)(v12, v75);
              if ((v76 & 1) == 0)
              {
                double v73 = v73 * 0.5;
                id v77 = [v57 colorWithAlphaComponent:];

                id v57 = v77;
              }
              double v78 = v51.x - v103;
              double v79 = v51.y - v102;
              double v80 = v52.x - v103;
              double v81 = v52.y - v102;
              id v82 = v114;
              if (v73 * v73 <= (v80 - v78) * (v80 - v78) + (v81 - v79) * (v81 - v79))
              {
                v123.origin.CGFloat x = fmin(v51.x, v52.x) - v73 * 0.5;
                v123.origin.CGFloat y = fmin(v51.y, v52.y) - v73 * 0.5;
                v123.size.CGFloat width = vabdd_f64(v51.x, v52.x) + v73;
                v123.size.CGFloat height = vabdd_f64(v51.y, v52.y) + v73;
                if (MKMapRectIntersectsRect(v97, v123)) {
                  sub_1002E0680(v89, v88 < v50 - v40, v57, v78, v79, v80, v81, v73);
                }

                id v17 = (char *)v82;
              }
              id v42 = [v82 timestamp:v84];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v40 = v43;

              v115(v21, v16);
              unint64_t v29 = (unint64_t)v106;
              id v41 = v108;
              if (v108 == v106) {
                goto LABEL_11;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          unint64_t v29 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v17 = v37;
          if (v29) {
            goto LABEL_15;
          }
        }
LABEL_11:
        unint64_t v29 = v87 + 1;
        swift_bridgeObjectRelease();
        unint64_t v34 = v29;
        uint64_t v33 = v84;
        if ((id *)v29 == v86)
        {
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
      }
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v83) {
        goto LABEL_55;
      }
    }
    swift_bridgeObjectRelease();
    id v17 = v31;
LABEL_51:
  }
  else
  {
LABEL_55:
    swift_bridgeObjectRelease();
  }
}

void sub_1002E0680(CGContext *a1, char a2, void *a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  uint64_t v9 = v8;
  CGMutablePathRef Mutable = CGPathCreateMutable();
  CGMutablePathRef.move(to:transform:)();
  CGMutablePathRef.addLine(to:transform:)();
  if (a2)
  {
    sub_1000AFA94(&qword_10094E770);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10074E640;
    *(void *)(v14 + 32) = 0;
    *(CGFloat *)(v14 + 40) = a8 + a8;
    uint64_t v15 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v15);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    if (*(unsigned char *)(v9 + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode) == 1)
    {
      uint64_t v16 = (CGColor *)[a3 CGColor];
    }
    else
    {
      id v18 = [self grayColor];
      uint64_t v16 = (CGColor *)[v18 CGColor];
    }
    CGContextSetStrokeColorWithColor(a1, v16);
    CGPathDrawingMode v17 = kCGPathStroke;
  }
  else
  {
    uint64_t v15 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
    CGContextAddPath(a1, v15);
    uint64_t v16 = (CGColor *)[a3 CGColor];
    CGContextSetFillColorWithColor(a1, v16);
    CGPathDrawingMode v17 = kCGPathFill;
  }

  CGContextDrawPath(a1, v17);
}

uint64_t sub_1002E08B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval;
  uint64_t v2 = type metadata accessor for DateInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_1002E0930()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutChartedDistancePathRenderer();
  return [super dealloc];
}

uint64_t sub_1002E09E8()
{
  return type metadata accessor for WorkoutChartedDistancePathRenderer();
}

uint64_t type metadata accessor for WorkoutChartedDistancePathRenderer()
{
  uint64_t result = qword_100955DF0;
  if (!qword_100955DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002E0A3C()
{
  uint64_t result = type metadata accessor for DateInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1002E0AE0()
{
  unint64_t result = qword_100957EE0;
  if (!qword_100957EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100957EE0);
  }
  return result;
}

uint64_t sub_1002E0B20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers);
  swift_beginAccess();
  unint64_t v4 = sub_100005758(a1);
  if (v5)
  {
    unint64_t v6 = v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t v10 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1004F2BDC();
      uint64_t v8 = v10;
    }
    sub_1005DCA20(v6, v8);
    *uint64_t v3 = v8;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_1002E0BE8()
{
  uint64_t v1 = v0;
  uint64_t result = Notification.userInfo.getter();
  if (result)
  {
    uint64_t v3 = result;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1000DE24C((uint64_t)v6), (v5 & 1) != 0))
    {
      sub_10008F484(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v6);
    if (*((void *)&v8 + 1))
    {
      uint64_t result = swift_dynamicCast();
      if ((result & 1) != 0
        && *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue) != 16)
      {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue) = 16;
        return sub_10003102C();
      }
    }
    else
    {
      return sub_10008DB18((uint64_t)&v7, &qword_100955A00);
    }
  }
  return result;
}

id sub_1002E0E18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsDataProvider();
  return [super dealloc];
}

uint64_t sub_1002E1004()
{
  return type metadata accessor for TrendsDataProvider();
}

uint64_t sub_1002E100C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t sub_1002E10E4()
{
  unint64_t result = qword_100955F20;
  if (!qword_100955F20)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_100954710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955F20);
  }
  return result;
}

uint64_t sub_1002E114C()
{
  return swift_deallocObject();
}

uint64_t sub_1002E1184()
{
  return sub_10003102C();
}

uint64_t sub_1002E11A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v19 = a1;
  uint64_t v7 = v6;
  uint64_t v8 = a1;
  int64_t v9 = a5 >> 1;
  uint64_t v10 = (a5 >> 1) - a4;
  if (a5 >> 1 == a4)
  {
    swift_bridgeObjectRetain();
    return v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v15 = 0;
    while (a4 + v15 < v9)
    {
      if (__OFADD__(v15, 1)) {
        goto LABEL_11;
      }
      uint64_t v17 = v15;
      long long v18 = *(_OWORD *)(a3 + 16 * a4 + 16 * v15);
      sub_10058995C(&v19, (double *)&v17, a6, &v16);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v7)
      {
        uint64_t v8 = v16;
        uint64_t v19 = v16;
        if (v10 != ++v15) {
          continue;
        }
      }
      swift_unknownObjectRelease();
      return v8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E12B4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002E1358(uint64_t a1)
{
  return a1;
}

id sub_1002E188C()
{
  return sub_1002E5440(type metadata accessor for ShowAllButton);
}

uint64_t type metadata accessor for ShowAllButton()
{
  return self;
}

uint64_t sub_1002E18C8()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  qword_100955F40 = result;
  return result;
}

id sub_1002E1948(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleFootnote, &qword_100955F48);
}

id sub_1002E195C()
{
  id result = [self _preferredFontForTextStyle:UIFontTextStyleFootnote variant:256];
  qword_100955F50 = (uint64_t)result;
  return result;
}

id sub_1002E19A8(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleFootnote, &qword_100955F58);
}

void sub_1002E19BC()
{
  id v0 = [self briskColors];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 nonGradientTextColor];

    if (v2)
    {
      qword_100955F60 = (uint64_t)v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1002E1A30(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleFootnote, &qword_100955F68);
}

id sub_1002E1A44(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleSubheadline, &qword_100955F70);
}

id sub_1002E1A58(uint64_t a1, void *a2, void *a3)
{
  id result = [self preferredFontForTextStyle:*a2];
  *a3 = result;
  return result;
}

char *sub_1002E1AA4(double a1, double a2, double a3, double a4)
{
  int64_t v9 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement];
  *(void *)int64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView;
  id v13 = objc_allocWithZone((Class)UIView);
  uint64_t v14 = v4;
  id v15 = [v13 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v16 = [v15 layer];
  [v16 setCornerRadius:15.0];

  [v15 setClipsToBounds:1];
  id v17 = sub_10005DB50();
  [v15 setBackgroundColor:v17];

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v12] = v15;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setLineBreakMode:0];
  [v19 setNumberOfLines:0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel;
  id v21 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  double v22 = (void *)UILabel.textAlignment(_:)();

  [v22 setLineBreakMode:0];
  [v22 setNumberOfLines:0];
  double v23 = (void *)UILabel.withLineBreakMode(_:)();

  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v20] = v23;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView;
  id v25 = [objc_allocWithZone((Class)CHPillLabelView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v24] = v25;
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  id v27 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v28 = (void *)UIView.withContentMode(_:)();

  [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v26] = v28;
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  id v30 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  long long v31 = (void *)UIView.withContentMode(_:)();

  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v29] = v31;
  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  id v33 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v33 setLineBreakMode:0];
  [v33 setNumberOfLines:0];
  if (qword_10094A8C0 != -1) {
    swift_once();
  }
  unint64_t v34 = (void *)UILabel.withFont(_:)();

  uint64_t v35 = (void *)UILabel.withLineBreakMode(_:)();
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v32] = v35;
  uint64_t v36 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  type metadata accessor for ShowAllButton();
  id v37 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (qword_10094A8B8 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_100955F50;
  id v39 = [v37 titleLabel];
  [v39 setFont:v38];

  if (qword_10094A8C8 != -1) {
    swift_once();
  }
  double v40 = (void *)UIButton.withTitleTextColor(_:for:)();

  id v41 = [self mainBundle];
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v41 localizedStringForKey:v42 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v44 = String._bridgeToObjectiveC()();
  [v40 setTitle:v44 forState:[v40 state]];
  swift_bridgeObjectRelease();

  id v45 = [v40 titleLabel];
  [v45 setLineBreakMode:0];

  id v46 = [v40 titleLabel];
  [v46 setLineBreakMode:0];

  id v47 = [v40 titleLabel];
  [v47 setNumberOfLines:0];

  [v40 setContentHorizontalAlignment:2];
  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v36] = v40;
  uint64_t v48 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel;
  id v49 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v49 setLineBreakMode:0];
  [v49 setNumberOfLines:0];
  [v49 setTextAlignment:1];
  double v50 = (void *)UILabel.withLineBreakMode(_:)();

  id v51 = [self secondaryLabelColor];
  MKMapPoint v52 = (void *)UILabel.withTextColor(_:)();

  if (qword_10094A8B0 != -1) {
    swift_once();
  }
  double v53 = (void *)UILabel.withFont(_:)();

  [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v14[v48] = v53;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;

  v72.receiver = v14;
  v72.super_class = (Class)type metadata accessor for TrophyCaseSectionCell();
  id v54 = [super initWithFrame:a1, a2, a3, a4];
  id v55 = objc_allocWithZone((Class)UITapGestureRecognizer);
  id v56 = (char *)v54;
  id v57 = [v55 initWithTarget:v56 action:"didTapBadgeImageView:"];
  uint64_t v58 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  id v59 = *(void **)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  [v59 addGestureRecognizer:v57];
  id v60 = v59;

  uint64_t v61 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  [*(id *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton] addTarget:v56 action:"didTapShowAllButton:" forControlEvents:64];
  uint64_t v62 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  id v63 = *(id *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = 2;
  }
  [v63 setTextAlignment:v64];

  id v65 = *(id *)&v56[v61];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v66 = 1;
  }
  else {
    uint64_t v66 = 2;
  }
  [v65 setContentHorizontalAlignment:v66];

  uint64_t v67 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  id v68 = *(id *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
  if (FIUILocaleIsRightToLeft()) {
    uint64_t v69 = 8;
  }
  else {
    uint64_t v69 = 7;
  }
  [v68 setContentMode:v69];

  id v70 = *(void **)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView];
  [v70 addSubview:*(void *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel]];
  [v70 addSubview:*(void *)&v56[v58]];
  [v70 addSubview:*(void *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel]];
  [v70 addSubview:*(void *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel]];
  [v70 addSubview:*(void *)&v56[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView]];
  [v70 addSubview:*(void *)&v56[v67]];
  [v70 addSubview:*(void *)&v56[v61]];
  [v70 addSubview:*(void *)&v56[v62]];
  [v56 addSubview:v70];
  sub_1002E24C4();

  return v56;
}

void sub_1002E24C4()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  id v3 = [v2 topAnchor];
  unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView];
  id v5 = [v4 topAnchor];
  id v139 = [v3 constraintEqualToAnchor:v5 constant:85.0];

  LODWORD(v6) = 1132068864;
  [v139 setPriority:v6];
  id v7 = [v2 widthAnchor];
  id v8 = [v4 widthAnchor];
  id v138 = [v7 constraintEqualToAnchor:v8 multiplier:0.6];

  int64_t v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
  id v10 = [v9 heightAnchor];
  id v137 = [v10 constraintEqualToConstant:38.0];

  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel];
  id v12 = [v11 topAnchor];
  id v13 = [v2 bottomAnchor];
  id v136 = [v12 constraintEqualToAnchor:v13 constant:20.0];

  id v122 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel];
  id v14 = [v122 topAnchor];
  id v15 = [v2 bottomAnchor];
  id v127 = [v14 constraintEqualToAnchor:v15 constant:20.0];

  id v133 = v9;
  id v16 = [v9 topAnchor];
  id v121 = v11;
  id v17 = [v11 bottomAnchor];
  id v129 = [v16 constraintGreaterThanOrEqualToAnchor:v17 constant:16.0];

  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel];
  id v134 = v18;
  id v19 = [v18 topAnchor];
  id v20 = [v11 bottomAnchor];
  id v124 = [v19 constraintGreaterThanOrEqualToAnchor:v20 constant:16.0];

  id v21 = [v9 topAnchor];
  double v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView];
  id v23 = [v22 bottomAnchor];
  id v131 = [v21 constraintGreaterThanOrEqualToAnchor:v23 constant:16.0];

  id v24 = [v18 topAnchor];
  id v25 = [v22 bottomAnchor];
  id v126 = [v24 constraintGreaterThanOrEqualToAnchor:v25 constant:16.0];

  id v135 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10075C670;
  id v27 = [v4 topAnchor];
  id v28 = [v1 topAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v26 + 32) = v29;
  id v30 = [v4 bottomAnchor];
  id v31 = [v1 bottomAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v26 + 40) = v32;
  id v33 = [v4 leadingAnchor];
  id v34 = [v1 leadingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v26 + 48) = v35;
  id v36 = [v4 trailingAnchor];
  id v37 = [v1 trailingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v26 + 56) = v38;
  id v39 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel];
  id v40 = [v39 topAnchor];
  id v41 = [v4 topAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:16.0];

  *(void *)(v26 + 64) = v42;
  id v43 = [v39 leadingAnchor];
  id v44 = [v4 leadingAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:16.0];

  *(void *)(v26 + 72) = v45;
  id v46 = [v39 trailingAnchor];
  id v47 = [v4 trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-16.0];

  *(void *)(v26 + 80) = v48;
  id v49 = [v2 topAnchor];
  id v50 = [v39 bottomAnchor];
  id v51 = [v49 constraintGreaterThanOrEqualToAnchor:v50 constant:16.0];

  *(void *)(v26 + 88) = v51;
  id v52 = [v2 centerXAnchor];
  id v53 = [v4 centerXAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  *(void *)(v26 + 96) = v54;
  id v55 = [v2 heightAnchor];
  id v56 = [v2 widthAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  *(void *)(v26 + 104) = v57;
  *(void *)(v26 + 112) = v127;
  id v128 = v127;
  id v58 = [v122 leadingAnchor];
  id v59 = [v4 leadingAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:16.0];

  *(void *)(v26 + 120) = v60;
  id v61 = [v122 trailingAnchor];
  id v62 = [v4 trailingAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 constant:-16.0];

  *(void *)(v26 + 128) = v63;
  id v64 = [v121 leadingAnchor];
  id v65 = [v4 leadingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65 constant:16.0];

  *(void *)(v26 + 136) = v66;
  id v67 = [v121 trailingAnchor];
  id v68 = [v4 trailingAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:-16.0];

  *(void *)(v26 + 144) = v69;
  *(void *)(v26 + 152) = v129;
  *(void *)(v26 + 160) = v124;
  id v123 = v129;
  id v130 = v124;
  id v70 = [v22 centerXAnchor];
  id v71 = [v4 centerXAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  *(void *)(v26 + 168) = v72;
  id v73 = [v22 topAnchor];
  id v74 = [v121 bottomAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74 constant:5.0];

  *(void *)(v26 + 176) = v75;
  *(void *)(v26 + 184) = v131;
  *(void *)(v26 + 192) = v126;
  id v125 = v131;
  id v132 = v126;
  id v76 = [v133 leadingAnchor];
  id v77 = [v4 leadingAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77 constant:16.0];

  *(void *)(v26 + 200) = v78;
  id v79 = [v133 trailingAnchor];
  id v80 = [v4 centerXAnchor];
  id v81 = [v79 constraintEqualToAnchor:v80 constant:-5.0];

  *(void *)(v26 + 208) = v81;
  id v82 = [v133 bottomAnchor];
  id v83 = [v4 bottomAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83 constant:-16.0];

  *(void *)(v26 + 216) = v84;
  id v85 = [v134 leadingAnchor];
  id v86 = [v4 leadingAnchor];
  id v87 = [v85 constraintEqualToAnchor:v86 constant:16.0];

  *(void *)(v26 + 224) = v87;
  id v88 = [v134 trailingAnchor];
  id v89 = [v4 trailingAnchor];
  id v90 = [v88 constraintEqualToAnchor:v89 constant:-16.0];

  *(void *)(v26 + 232) = v90;
  unint64_t v91 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton];
  id v92 = [v91 topAnchor];
  id v93 = [v134 bottomAnchor];
  id v94 = [v92 constraintEqualToAnchor:v93];

  *(void *)(v26 + 240) = v94;
  id v95 = [v91 leadingAnchor];
  id v96 = [v4 centerXAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96 constant:16.0];

  *(void *)(v26 + 248) = v97;
  id v98 = [v91 trailingAnchor];
  id v99 = [v4 trailingAnchor];
  id v100 = [v98 constraintEqualToAnchor:v99 constant:-16.0];

  *(void *)(v26 + 256) = v100;
  id v101 = [v91 bottomAnchor];
  id v102 = [v4 bottomAnchor];
  id v103 = [v101 constraintEqualToAnchor:v102 constant:-22.0];

  *(void *)(v26 + 264) = v103;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v135 activateConstraints:isa];

  id v105 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = v139;
  id v106 = v139;

  unint64_t v107 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = v138;
  id v108 = v138;

  uint64_t v109 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = v137;
  id v110 = v137;

  uint64_t v111 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = v136;
  id v112 = v136;

  uint64_t v113 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = v128;
  id v114 = v128;

  id v115 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = v123;
  id v116 = v123;

  id v117 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = v130;
  id v118 = v130;

  uint64_t v119 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = v125;
  id v120 = v125;

  uint64_t v140 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = v132;
}

void sub_1002E348C(char a1, double a2)
{
  uint64_t v3 = v2;
  double v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView);
  id v7 = [v6 topAnchor];
  id v8 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView);
  id v9 = [v8 topAnchor];
  id v10 = [v7 constraintEqualToAnchor:v9 constant:a2];

  if (a1)
  {
    id v12 = [v6 widthAnchor];
    id v53 = [v12 constraintEqualToConstant:126.0];

    id v13 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView) heightAnchor];
    id v52 = [v13 constraintEqualToConstant:38.0];

    id v14 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel) topAnchor];
    id v15 = [v6 bottomAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15 constant:16.0];

    id v17 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel) topAnchor];
    id v18 = [v6 bottomAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18 constant:30.0];
  }
  else
  {
    LODWORD(v11) = 1132068864;
    [v10 setPriority:v11];
    id v20 = [v6 widthAnchor];
    id v21 = [v8 widthAnchor];
    id v53 = [v20 constraintEqualToAnchor:v21 multiplier:0.6];

    id v22 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView) heightAnchor];
    id v52 = [v22 constraintEqualToConstant:41.0];

    id v23 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel) topAnchor];
    id v24 = [v6 bottomAnchor];
    id v16 = [v23 constraintEqualToAnchor:v24 constant:20.0];

    id v17 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel) topAnchor];
    id v18 = [v6 bottomAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18 constant:20.0];
  }
  id v25 = v19;

  uint64_t v51 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint;
  uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint);
  if (v26) {
    [v26 setActive:0];
  }
  uint64_t v50 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint;
  id v27 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint);
  if (v27) {
    [v27 setActive:0];
  }
  uint64_t v49 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint;
  id v28 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint);
  if (v28) {
    [v28 setActive:0];
  }
  uint64_t v48 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin;
  id v29 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin);
  if (v29) {
    [v29 setActive:0];
  }
  uint64_t v30 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin;
  id v31 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin);
  if (v31) {
    [v31 setActive:0];
  }
  id v47 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10075C680;
  *(void *)(v32 + 32) = v10;
  *(void *)(v32 + 40) = v53;
  *(void *)(v32 + 48) = v52;
  *(void *)(v32 + 56) = v16;
  *(void *)(v32 + 64) = v25;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v33 = v10;
  id v34 = v53;
  id v35 = v52;
  id v36 = v16;
  id v37 = v25;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v47 activateConstraints:isa];

  id v39 = *(void **)(v3 + v51);
  *(void *)(v3 + v51) = v33;
  id v40 = v33;

  id v41 = *(void **)(v3 + v50);
  *(void *)(v3 + v50) = v34;
  id v42 = v34;

  id v43 = *(void **)(v3 + v49);
  *(void *)(v3 + v49) = v35;
  id v44 = v35;

  id v45 = *(void **)(v3 + v48);
  *(void *)(v3 + v48) = v36;
  id v46 = v36;

  id v54 = *(id *)(v3 + v30);
  *(void *)(v3 + v30) = v37;
}

void sub_1002E3A40(char *a1, uint64_t a2, void *a3, void *a4)
{
  unint64_t v4 = *(void (**)(uint64_t))&a1[*a4];
  if (v4)
  {
    id v6 = a3;
    id v8 = a1;
    uint64_t v7 = sub_10008A670((uint64_t)v4);
    v4(v7);
    sub_10005E5F8((uint64_t)v4);
  }
}

void sub_1002E3AE4(void *a1, char a2, void *a3)
{
  unint64_t v4 = v3;
  id v52 = a3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v46 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  __chkstk_darwin(v10);
  id v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v13);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v14 - 8);
  sub_1002E5EB8(a2);
  double v16 = v15;
  double v18 = v17;
  id v19 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v20 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v21 = EntityProperty<>.init(title:)();
  id v22 = v20;
  swift_retain();
  LOBYTE(aBlock) = [v22 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  swift_release();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10008F734((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  aBlock = (void **)v21;
  uint64_t v55 = (uint64_t)v22;
  id v23 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_1000818CC();
  id v24 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  id v25 = [v22 template];
  id v26 = [v25 uniqueName];

  if (v26)
  {
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  uint64_t v30 = (uint64_t *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  *uint64_t v30 = v27;
  v30[1] = v29;
  swift_bridgeObjectRelease();
  id v31 = v52;
  if (objc_msgSend(v52, "hasCachedThumbnailImageForAchievement:size:", v22, v16, v18))
  {
    id v32 = [v31 thumbnailImageForAchievement:v22 size:v16, v18];
    [v19 setImage:v32];
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v34 = v44;
    uint64_t v33 = v45;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v12, enum case for DispatchQoS.QoSClass.userInitiated(_:), v45);
    id v35 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v33);
    id v36 = (double *)swift_allocObject();
    *((void *)v36 + 2) = v31;
    *((void *)v36 + 3) = v22;
    v36[4] = v16;
    v36[5] = v18;
    *((void *)v36 + 6) = v4;
    id v58 = sub_1002E84D4;
    id v59 = v36;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    id v56 = sub_100070394;
    id v57 = &unk_1008C07E8;
    id v37 = _Block_copy(&aBlock);
    id v38 = v22;
    id v39 = v31;
    id v40 = v4;
    id v41 = v46;
    static DispatchQoS.unspecified.getter();
    id v53 = _swiftEmptyArrayStorage;
    sub_10008F734((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    id v42 = v48;
    uint64_t v43 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v49);
    swift_release();
  }
}

uint64_t sub_1002E4174(void *a1, void *a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 thumbnailImageForAchievement:a2 size:a3];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  double v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v17 = (void *)swift_allocObject();
  id v17[2] = v16;
  v17[3] = a2;
  v17[4] = v14;
  aBlock[4] = sub_1002E852C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008C0838;
  double v18 = _Block_copy(aBlock);
  id v19 = a2;
  id v20 = v14;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008F734((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v22);
}

void sub_1002E44B8(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName);
    uint64_t v7 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  id v9 = [a2 template];
  id v10 = [v9 uniqueName];

  if (!v10)
  {
    if (!v7) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (!v7)
  {
    if (!v13) {
      goto LABEL_18;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v13) {
    goto LABEL_16;
  }
  if (v8 == v11 && v7 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return;
    }
  }
LABEL_18:
  swift_beginAccess();
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    double v17 = (void *)v16;
    id v18 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView);

    [v18 setImage:a3];
  }
}

void sub_1002E4668(unint64_t a1, char a2, void *a3, uint64_t a4)
{
  id v59 = a3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v53 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v51 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = sub_1002E5FD8(a2);
  double v19 = v18;
  unsigned int IsRightToLeft = FIUILocaleIsRightToLeft();
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v56 = v12;
    uint64_t v57 = v9;
    uint64_t v54 = v13;
    uint64_t v55 = v11;
    uint64_t v52 = v15;
    if (!v20) {
      break;
    }
    uint64_t v49 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    unint64_t v4 = aBlock;
    sub_1000ABAB8(0, v20 & ~(v20 >> 63), 0);
    if (v20 < 0)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    uint64_t v48 = v8;
    uint64_t v13 = 0;
    uint64_t v11 = (char *)aBlock[0];
    id v60 = (id)(a1 & 0xC000000000000001);
    uint64_t v12 = a1;
    uint64_t v15 = a4;
    while (v20 != v13)
    {
      if (v60) {
        uint64_t v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v21 = *(id *)(a1 + 8 * v13 + 32);
      }
      unint64_t v4 = v21;
      id v22 = [v21 template];
      id v23 = [v22 uniqueName];

      if (!v23) {
        goto LABEL_24;
      }
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v24;

      aBlock[0] = v11;
      unint64_t v26 = *((void *)v11 + 2);
      unint64_t v25 = *((void *)v11 + 3);
      a4 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        unint64_t v4 = aBlock;
        sub_1000ABAB8(v25 > 1, v26 + 1, 1);
        uint64_t v11 = (char *)aBlock[0];
      }
      ++v13;
      *((void *)v11 + 2) = a4;
      uint64_t v27 = &v11[16 * v26];
      *((void *)v27 + 4) = v9;
      *((void *)v27 + 5) = v8;
      a1 = v12;
      if (v20 == v13)
      {
        a4 = v15;
        uint64_t v8 = v48;
        unint64_t v4 = v49;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_16:
  *(void *)((char *)v4 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames) = v11;
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
  uint64_t v28 = (char *)v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v30 = v59;
  uint64_t v31 = IsRightToLeft;
  unsigned __int8 v32 = [v59 hasCachedThumbnailImageForAchievements:isa IsRightToLeft:a4 size:v17 alignment:v19];

  if (v32)
  {
    uint64_t v33 = *(void **)&v28[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
    Class v34 = Array._bridgeToObjectiveC()().super.isa;
    id v60 = [v30 thumbnailImageForAchievements:v34 size:v31 alignment:a4 stackType:v17];

    [v33 setImage:v60];
    id v35 = v60;
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v37 = v50;
    uint64_t v36 = v51;
    uint64_t v38 = v52;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v50, enum case for DispatchQoS.QoSClass.userInitiated(_:), v52);
    id v60 = (id)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v30;
    *(void *)(v39 + 24) = a1;
    *(double *)(v39 + 32) = v17;
    *(double *)(v39 + 40) = v19;
    *(_DWORD *)(v39 + 48) = v31;
    *(_DWORD *)(v39 + 52) = a4;
    *(void *)(v39 + 56) = v28;
    aBlock[4] = sub_1002E83EC;
    aBlock[5] = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008C0720;
    id v40 = v30;
    id v41 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v42 = v40;
    uint64_t v43 = v28;
    uint64_t v44 = v53;
    static DispatchQoS.unspecified.getter();
    id v61 = _swiftEmptyArrayStorage;
    sub_10008F734((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    uint64_t v45 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v46 = v60;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v8);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v56);
    swift_release();
  }
}

uint64_t sub_1002E4CF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  double v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v19 = [a1 thumbnailImageForAchievements:isa a3 a4 a5 a6];

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v22 = (void *)swift_allocObject();
  v22[2] = v21;
  v22[3] = a2;
  v22[4] = v19;
  aBlock[4] = sub_1002E8480;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008C0798;
  id v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v24 = v19;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008F734((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v26);
}

void sub_1002E507C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames);
    swift_bridgeObjectRetain();

    if (!(a2 >> 62))
    {
LABEL_3:
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    id v6 = 0;
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v7)
  {
    sub_1000ABAB8(0, v7 & ~(v7 >> 63), 0);
    if ((v7 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      while (v7 != v8)
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(a2 + 8 * v8 + 32);
        }
        uint64_t v10 = v9;
        id v11 = [v9 template];
        id v12 = [v11 uniqueName];

        if (!v12) {
          goto LABEL_25;
        }
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        unint64_t v17 = _swiftEmptyArrayStorage[2];
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        if (v17 >= v16 >> 1) {
          sub_1000ABAB8(v16 > 1, v17 + 1, 1);
        }
        ++v8;
        _swiftEmptyArrayStorage[2] = v17 + 1;
        double v18 = &_swiftEmptyArrayStorage[2 * v17];
        v18[4] = v13;
        v18[5] = v15;
        if (v7 == v8) {
          goto LABEL_15;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (v6)
    {
      char v19 = sub_1003756B8(v6, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
        swift_beginAccess();
        uint64_t v20 = swift_unknownObjectWeakLoadStrong();
        if (v20)
        {
          uint64_t v21 = (void *)v20;
          id v22 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView);

          [v22 setImage:a3];
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002E52EC()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TrophyCaseSectionCell();
  [super prepareForReuse];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel] setAttributedText:0];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel] setText:0];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel] setText:0];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel] setText:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;

  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;

  unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;
}

id sub_1002E5428()
{
  return sub_1002E5440(type metadata accessor for TrophyCaseSectionCell);
}

id sub_1002E5440(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseSectionCell()
{
  return self;
}

id sub_1002E5634(char a1)
{
  return [*(id *)(*v1 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView) setHidden:a1 & 1];
}

double sub_1002E5658()
{
  [*(id *)(*v0 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView) frame];
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  UIEdgeInsets.init(uniform:)();

  return sub_1002E8388(v2, v4, v6, v8, v9, v10);
}

void sub_1002E56E0(uint64_t a1, void *a2, unint64_t a3, char *a4, char *a5, void *a6, unsigned int a7, char a8, double a9, double a10, uint64_t a11, void *a12, void *a13, uint64_t a14)
{
}

void sub_1002E5720()
{
  double v1 = v0;
  double v2 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement];
  *(void *)double v2 = 0;
  *((void *)v2 + 1) = 0;
  double v3 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements];
  *(void *)double v3 = 0;
  *((void *)v3 + 1) = 0;
  double v4 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  *(void *)double v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView;
  id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v7 = [v6 layer];
  [v7 setCornerRadius:15.0];

  [v6 setClipsToBounds:1];
  id v8 = sub_10005DB50();
  [v6 setBackgroundColor:v8];

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v5] = v6;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setLineBreakMode:0];
  [v10 setNumberOfLines:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v9] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel;
  id v12 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = (void *)UILabel.textAlignment(_:)();

  [v13 setLineBreakMode:0];
  [v13 setNumberOfLines:0];
  uint64_t v14 = (void *)UILabel.withLineBreakMode(_:)();

  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v11] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView;
  id v16 = [objc_allocWithZone((Class)CHPillLabelView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v15] = v16;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  id v18 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  char v19 = (void *)UIView.withContentMode(_:)();

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v17] = v19;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  id v21 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v22 = (void *)UIView.withContentMode(_:)();

  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v20] = v22;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  id v24 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v24 setLineBreakMode:0];
  [v24 setNumberOfLines:0];
  if (qword_10094A8C0 != -1) {
    swift_once();
  }
  unint64_t v25 = (void *)UILabel.withFont(_:)();

  uint64_t v26 = (void *)UILabel.withLineBreakMode(_:)();
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v23] = v26;
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  type metadata accessor for ShowAllButton();
  id v28 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (qword_10094A8B8 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_100955F50;
  id v30 = [v28 titleLabel];
  [v30 setFont:v29];

  if (qword_10094A8C8 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)UIButton.withTitleTextColor(_:for:)();

  id v32 = [self mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v35 = String._bridgeToObjectiveC()();
  [v31 setTitle:v35 forState:[v31 state]];
  swift_bridgeObjectRelease();

  id v36 = [v31 titleLabel];
  [v36 setLineBreakMode:0];

  id v37 = [v31 titleLabel];
  [v37 setLineBreakMode:0];

  id v38 = [v31 titleLabel];
  [v38 setNumberOfLines:0];

  [v31 setContentHorizontalAlignment:2];
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v27] = v31;
  uint64_t v39 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel;
  id v40 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v40 setLineBreakMode:0];
  [v40 setNumberOfLines:0];
  [v40 setTextAlignment:1];
  id v41 = (void *)UILabel.withLineBreakMode(_:)();

  id v42 = [self secondaryLabelColor];
  uint64_t v43 = (void *)UILabel.withTextColor(_:)();

  if (qword_10094A8B0 != -1) {
    swift_once();
  }
  uint64_t v44 = (void *)UILabel.withFont(_:)();

  [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v39] = v44;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002E5EB8(char a1)
{
  id v2 = [self mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v13.origin.CGFloat x = v4;
  v13.origin.CGFloat y = v6;
  v13.size.CGFloat width = v8;
  v13.size.CGFloat height = v10;
  CGRectGetWidth(v13);
  if (a1)
  {
    id v11 = [self sharedApplication];
    id v12 = [v11 preferredContentSizeCategory];

    UIContentSizeCategory.isAccessibilityCategory.getter();
  }
}

double sub_1002E5FD8(char a1)
{
  id v2 = [self mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v15.origin.CGFloat x = v4;
  v15.origin.CGFloat y = v6;
  v15.size.CGFloat width = v8;
  v15.size.CGFloat height = v10;
  double v11 = CGRectGetWidth(v15) + -20.0;
  if (a1)
  {
    id v12 = [self sharedApplication];
    id v13 = [v12 preferredContentSizeCategory];

    LOBYTE(v12) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if ((v12 & 1) == 0) {
      double v11 = (v11 + -10.0) * 0.5;
    }
  }
  return v11 * 0.5 + -16.0 + -5.0;
}

id sub_1002E6114(void *a1, void *a2, void *a3)
{
  uint64_t v80 = type metadata accessor for Calendar();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  double v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  id v79 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v82 = (NSString *)type metadata accessor for Date();
  id v81 = (unsigned int (**)(void, uint64_t, NSString *))*(v82 - 1);
  __chkstk_darwin(v82);
  id v77 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v76 - v15;
  uint64_t v17 = type metadata accessor for DateComponents();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v83 = (NSString *)((char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = self;
  id v21 = [v20 labelColor];
  id v85 = [v20 secondaryLabelColor];
  uint64_t v87 = (uint64_t)a3;
  id v22 = [a3 titleForAchievement:a1];
  if (v22
    || (id v23 = v21,
        id v24 = a2,
        id v25 = [a1 template],
        id v22 = [v25 uniqueName],
        v25,
        a2 = v24,
        id v21 = v23,
        v22))
  {
    id v86 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)&long long v84 = v26;
  }
  else
  {
    id v86 = 0;
    *(void *)&long long v84 = 0xE000000000000000;
  }
  id v27 = [a1 relevantEarnedInstance];
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_10:
    id v32 = &qword_10094E8A8;
    uint64_t v33 = (uint64_t)v16;
    goto LABEL_11;
  }
  id v28 = v27;
  id v29 = v21;
  id v30 = a2;
  id v31 = [v27 earnedDateComponents];

  if (v31)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, 1, 1, v17);
  }
  a2 = v30;
  sub_1000ACADC((uint64_t)v13, (uint64_t)v16);
  id v21 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    goto LABEL_10;
  }
  id v40 = v83;
  (*(void (**)(void))(v18 + 32))();
  id v41 = [self hk_gregorianCalendar];
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  id v42 = v79;
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v80);
  uint64_t v43 = v81;
  uint64_t v44 = v82;
  if (((unsigned int (**)(char *, uint64_t, NSString *))v81)[6](v42, 1, v82) != 1)
  {
    uint64_t v45 = v77;
    ((unsigned int (**)(char *, uint64_t, NSString *))v43)[4](v77, (uint64_t)v42, v44);
    id v46 = self;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v48 = [v46 formattedListStringForDate:isa font:a2];

    id v49 = [v48 string];
    uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v50;

    ((void (*)(char *, NSString *))v43[1])(v45, v44);
    (*(void (**)(NSString *, uint64_t))(v18 + 8))(v83, v17);
    goto LABEL_23;
  }
  (*(void (**)(NSString *, uint64_t))(v18 + 8))(v40, v17);
  id v32 = (uint64_t *)&unk_10095B890;
  uint64_t v33 = (uint64_t)v42;
LABEL_11:
  sub_10008DB18(v33, v32);
  id v34 = [(id)v87 unachievedShortDescriptionForAchievement:a1];
  if (!v34)
  {
LABEL_15:
    uint64_t v87 = 0;
    unint64_t v39 = 0xE000000000000000;
    goto LABEL_23;
  }
  NSString v35 = v34;
  id v36 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v38 = v37;

  if (v36 == (void *)0xD000000000000028 && v38 == 0x80000001007B6350)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = 0;
    unint64_t v39 = 0xE000000000000000;
  }
  else
  {
    unint64_t v39 = v38;
    uint64_t v87 = (uint64_t)v36;
  }
LABEL_23:
  sub_1000AFA94(&qword_100956078);
  uint64_t inited = swift_initStackObject();
  long long v84 = xmmword_10074E640;
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = a2;
  *(void *)(inited + 48) = NSForegroundColorAttributeName;
  *(void *)(inited + 56) = v21;
  id v83 = NSFontAttributeName;
  id v81 = a2;
  id v82 = NSForegroundColorAttributeName;
  id v86 = v21;
  unint64_t v52 = sub_1005236CC(inited);
  sub_1003D7B04(v52);
  id v53 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F734((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v56 = [v53 initWithString:v54 attributes:v55];

  unint64_t v57 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0) {
    unint64_t v57 = v87 & 0xFFFFFFFFFFFFLL;
  }
  if (v57)
  {
    uint64_t v58 = swift_initStackObject();
    *(_OWORD *)(v58 + 16) = v84;
    id v59 = v83;
    id v60 = v81;
    *(void *)(v58 + 32) = v83;
    *(void *)(v58 + 40) = v60;
    id v61 = v82;
    id v62 = v85;
    *(void *)(v58 + 48) = v82;
    *(void *)(v58 + 56) = v62;
    id v63 = v60;
    id v64 = v59;
    id v65 = v61;
    id v85 = v62;
    unint64_t v66 = sub_1005236CC(v58);
    sub_1003D7B04(v52);
    swift_bridgeObjectRelease();
    id v67 = objc_allocWithZone((Class)NSAttributedString);
    NSString v68 = String._bridgeToObjectiveC()();
    Class v69 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v70 = [v67 initWithString:v68 attributes:v69];

    sub_1003D7B04(v66);
    swift_bridgeObjectRelease();
    id v71 = objc_allocWithZone((Class)NSAttributedString);
    NSString v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v73 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v74 = [v71 initWithString:v72 attributes:v73];

    [v56 appendAttributedString:v70];
    [v56 appendAttributedString:v74];
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  return v56;
}

id sub_1002E6B24()
{
  id v0 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  LODWORD(v1) = 1036831949;
  [v0 setHyphenationFactor:v1];
  AAUIAwardsDataProviderSection.localized()();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSParagraphStyleAttributeName;
  uint64_t v3 = sub_10007E2D8(0, &qword_100956080);
  *(void *)(inited + 40) = v0;
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v4 = qword_10094A8A8;
  double v5 = NSParagraphStyleAttributeName;
  id v6 = v0;
  double v7 = NSFontAttributeName;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_100955F40;
  *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 80) = v8;
  id v9 = v8;
  sub_1000DFC2C(inited);
  id v10 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F734((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithString:v11 attributes:isa];

  return v13;
}

double sub_1002E6D38(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)UILabel) init];
  [v8 setLineBreakMode:0];
  [v8 setNumberOfLines:0];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    double v10 = a2 + -32.0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v42 = *(void *)(v11 + 56);
    uint64_t v43 = v12;
    NSAttributedStringKey v41 = NSParagraphStyleAttributeName;
    NSAttributedStringKey v39 = NSFontAttributeName;
    unint64_t v38 = (void (**)(char *, uint64_t))(v11 - 8);
    v34[1] = a1;
    swift_bridgeObjectRetain();
    double v14 = 0.0;
    long long v37 = xmmword_10074E640;
    id v36 = (char *)&type metadata for Any + 8;
    uint64_t v44 = v11;
    id v40 = v8;
    uint64_t v35 = v4;
    do
    {
      v43(v7, v13, v4);
      id v15 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
      LODWORD(v16) = 1036831949;
      [v15 setHyphenationFactor:v16];
      AAUIAwardsDataProviderSection.localized()();
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v37;
      NSAttributedStringKey v18 = v41;
      *(void *)(inited + 32) = v41;
      uint64_t v19 = sub_10007E2D8(0, &qword_100956080);
      *(void *)(inited + 40) = v15;
      NSAttributedStringKey v20 = v39;
      *(void *)(inited + 64) = v19;
      *(void *)(inited + 72) = v20;
      uint64_t v21 = qword_10094A8A8;
      id v22 = v18;
      id v23 = v15;
      id v24 = v20;
      if (v21 != -1) {
        swift_once();
      }
      id v25 = (void *)qword_100955F40;
      *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
      *(void *)(inited + 80) = v25;
      id v26 = v25;
      sub_1000DFC2C(inited);
      id v27 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10008F734((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v30 = [v27 initWithString:v28 attributes:isa];

      id v31 = v40;
      [v40 setAttributedText:v30];

      [v31 sizeThatFits:v10, 1.79769313e308];
      if (v32 + 16.0 > v14) {
        double v14 = v32 + 16.0;
      }
      uint64_t v4 = v35;
      (*v38)(v7, v35);
      v13 += v42;
      --v9;
    }
    while (v9);

    swift_bridgeObjectRelease();
  }
  else
  {

    return 0.0;
  }
  return v14;
}

void sub_1002E7190(int a1, id a2, double a3, double a4, uint64_t a5, void *a6, char a7)
{
  double v11 = a4 + -32.0;
  if ([a2 unearned])
  {
    id v12 = [objc_allocWithZone((Class)UILabel) init];
    [v12 setLineBreakMode:0];
    [v12 setNumberOfLines:0];
    [v12 setTextAlignment:1];
    uint64_t v13 = (void *)UILabel.withLineBreakMode(_:)();

    if (qword_10094A8B0 != -1) {
      swift_once();
    }
    double v14 = (void *)UILabel.withFont(_:)();

    _StringGuts.grow(_:)(38);
    uint64_t v15 = AAUIAwardsDataProviderSection.rawValue.getter();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v18._object = (void *)0x80000001007BFB00;
    v18._countAndFlagsBits = 0xD000000000000024;
    String.append(_:)(v18);
    id v19 = [self mainBundle:v15, v17];
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v14 setText:v22];

    [v14 sizeThatFits:v11];
  }
  else
  {
    if (a7)
    {
      if (qword_10094A8D0 != -1) {
        swift_once();
      }
      id v23 = &qword_100955F68;
    }
    else
    {
      if (qword_10094A8D8 != -1) {
        swift_once();
      }
      id v23 = &qword_100955F70;
    }
    id v24 = (void *)*v23;
    id v25 = objc_allocWithZone((Class)UILabel);
    id v26 = v24;
    id v27 = [v25 init];
    [v27 setLineBreakMode:0];
    [v27 setNumberOfLines:0];
    NSString v28 = (void *)UILabel.withFont(_:)();

    id v29 = sub_1002E6114(a2, v26, a6);
    NSString v30 = [v29 string];

    if (!v30)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v28 setText:v30];

    [v28 sizeThatFits:v11];
    id v31 = [a2 template];
    unsigned int v32 = [v31 displaysEarnedInstanceCount];

    if (v32) {
      [a2 earnedInstanceCount];
    }
    id v33 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v33 setLineBreakMode:0];
    [v33 setNumberOfLines:0];
    if (qword_10094A8C0 != -1) {
      swift_once();
    }
    id v34 = (void *)UILabel.withFont(_:)();

    uint64_t v35 = (void *)UILabel.withLineBreakMode(_:)();
    [v35 setTextAlignment:2];
    id v36 = [self mainBundle];
    if (a5 == 1)
    {
      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [v36 localizedStringForKey:v37 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v39 = String._bridgeToObjectiveC()();
    }
    else
    {
      NSString v40 = String._bridgeToObjectiveC()();
      id v41 = [v36 localizedStringForKey:v40 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1007509E0;
      if (__OFSUB__(a5, 1))
      {
        __break(1u);
        return;
      }
      *(void *)(v42 + 56) = &type metadata for Int;
      *(void *)(v42 + 64) = &protocol witness table for Int;
      *(void *)(v42 + 32) = a5 - 1;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      NSString v39 = String._bridgeToObjectiveC()();
    }
    swift_bridgeObjectRelease();
    [v35 setText:v39];

    [v35 sizeThatFits:v11 * 0.5, 1.79769313e308];
    id v43 = [self buttonWithType:1];
    if (qword_10094A8B8 != -1) {
      swift_once();
    }
    uint64_t v44 = qword_100955F50;
    id v45 = [v43 titleLabel];
    [v45 setFont:v44];

    if (qword_10094A8C8 != -1) {
      swift_once();
    }
    id v46 = (void *)UIButton.withTitleTextColor(_:for:)();

    id v47 = [self mainBundle];
    NSString v48 = String._bridgeToObjectiveC()();
    id v49 = [v47 localizedStringForKey:v48 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v50 = String._bridgeToObjectiveC()();
    [v46 setTitle:v50 forState:[v46 state]];
    swift_bridgeObjectRelease();

    id v51 = [v46 titleLabel];
    [v51 setLineBreakMode:0];

    id v52 = [v46 titleLabel];
    [v52 setLineBreakMode:0];

    id v53 = [v46 titleLabel];
    [v53 setNumberOfLines:0];

    [v46 setContentVerticalAlignment:2];
    [v46 setContentHorizontalAlignment:2];
    [v46 sizeThatFits:v11 * 0.5, 1.79769313e308];
  }
}

void sub_1002E7B94(uint64_t a1, void *a2, unint64_t a3, char *a4, char *a5, void *a6, unsigned int a7, char a8, double a9, uint64_t a10, void *a11, void *a12, uint64_t a13)
{
  id v56 = a6;
  id v60 = a12;
  Swift::String v18 = a11;
  id v19 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel);
  id v20 = sub_1002E6B24();
  [v19 setAttributedText:v20];

  double v21 = fmax(a9 + 16.0, 80.0);
  if (a8) {
    double v22 = v21;
  }
  else {
    double v22 = 85.0;
  }
  if (!a2) {
    goto LABEL_14;
  }
  id v23 = a2;
  id v24 = [v23 template];
  unsigned int v25 = [v24 displaysEarnedInstanceCount];

  if (!v25 || ![v23 earnedInstanceCount])
  {

LABEL_14:
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView) setHidden:1 a1, v56];
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint) setActive:1];
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint) setActive:1];
    unsigned int v32 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint);
    if (v32) {
      [v32 setActive:0];
    }
    id v33 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint);
    if (v33) {
      [v33 setActive:0];
    }
    goto LABEL_18;
  }
  id v26 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView);
  id v27 = [self grayColor];
  [v26 setPillBackgroundColor:v27];

  unint64_t v28 = (unint64_t)[v23 earnedInstanceCount];
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  [v26 setIntegerValue:v28];
  [v26 setHidden:0];
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint) setActive:0];
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint) setActive:0];
  id v29 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint);
  if (v29) {
    [v29 setActive:1];
  }
  NSString v30 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint);
  if (v30)
  {
    id v31 = v30;
    [v31 setActive:1];
  }
LABEL_18:
  sub_1002E348C(a8 & 1, v22);
  id v34 = (void *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement);
  uint64_t v35 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement);
  *id v34 = a10;
  v34[1] = a11;
  swift_retain();
  sub_10005E5F8(v35);
  id v36 = (void *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements);
  uint64_t v37 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements);
  *id v36 = a12;
  v36[1] = a13;
  swift_retain();
  sub_10005E5F8(v37);
  if (!a2) {
    return;
  }
  id v60 = a2;
  sub_1002E3AE4(v60, a8 & 1, a5);
  sub_1002E4668(a3, a8 & 1, a5, a7);
  unsigned int v38 = [v60 unearned];
  id v23 = *(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel);
  if (!v38)
  {
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel) setHidden:0];
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton) setHidden:0];
    Swift::String v18 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel);
    [v18 setHidden:0];
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView) setHidden:0];
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel) setHidden:1];
    if ((a8 & 1) == 0)
    {
      a5 = a4;
      if (qword_10094A8D8 != -1) {
        swift_once();
      }
      id v45 = &qword_100955F70;
      goto LABEL_28;
    }
    a5 = a4;
    if (qword_10094A8D0 == -1)
    {
LABEL_24:
      id v45 = &qword_100955F68;
LABEL_28:
      id v46 = (id)*v45;
      id v47 = sub_1002E6114(v60, v46, v56);
      [v23 setAttributedText:v47];

      id v48 = [self mainBundle];
      if (a5 == (char *)1)
      {
        NSString v49 = String._bridgeToObjectiveC()();
        id v50 = [v48 localizedStringForKey:v49 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v51 = String._bridgeToObjectiveC()();
      }
      else
      {
        NSString v52 = String._bridgeToObjectiveC()();
        id v53 = [v48 localizedStringForKey:v52 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_1007509E0;
        if (__OFSUB__(a5, 1))
        {
          __break(1u);
          return;
        }
        *(void *)(v54 + 56) = &type metadata for Int;
        *(void *)(v54 + 64) = &protocol witness table for Int;
        *(void *)(v54 + 32) = a5 - 1;
        String.init(format:_:)();
        swift_bridgeObjectRelease();
        NSString v51 = String._bridgeToObjectiveC()();
      }
      swift_bridgeObjectRelease();
      [v18 setText:v51];

      NSString v44 = v60;
      id v60 = v46;
      goto LABEL_33;
    }
LABEL_37:
    swift_once();
    goto LABEL_24;
  }
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel) setHidden:1];
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton) setHidden:1];
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel) setHidden:1];
  [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView) setHidden:1];
  NSString v39 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel);
  [v39 setHidden:0];
  _StringGuts.grow(_:)(38);
  AAUIAwardsDataProviderSection.rawValue.getter();
  swift_bridgeObjectRelease();
  v40._object = (void *)0x80000001007BFB00;
  v40._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v40);
  id v41 = [self mainBundle];
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v41 localizedStringForKey:v42 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setText:v44];
LABEL_33:
}

double sub_1002E8388(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_1002E83A4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002E83EC()
{
  return sub_1002E4CF8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned int *)(v0 + 48), *(unsigned int *)(v0 + 52), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1002E8400()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002E8438()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002E8480()
{
  sub_1002E507C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1002E848C()
{
  return swift_deallocObject();
}

uint64_t sub_1002E84D4()
{
  return sub_1002E4174(*(void **)(v0 + 16), *(void **)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1002E84E4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002E852C()
{
  sub_1002E44B8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

id sub_1002E8544(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleSubheadline, &qword_100956088);
}

id sub_1002E8558(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleTitle2, &qword_100956090);
}

id sub_1002E856C(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleTitle2, &qword_100956098);
}

id sub_1002E8580(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleCaption1, &qword_1009560A0);
}

id sub_1002E8594(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleSubheadline, &qword_1009560A8);
}

char *sub_1002E85A8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView;
  id v10 = objc_allocWithZone((Class)UIView);
  double v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v13 = sub_10005DB50();
  [v12 setBackgroundColor:v13];

  id v14 = [v12 layer];
  [v14 setCornerRadius:12.0];

  [v12 setClipsToBounds:1];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v12;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094A900 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)UILabel.withFont(_:)();

  id v18 = [self secondaryLabelColor];
  id v19 = (void *)UILabel.withTextColor(_:)();

  [v19 setLineBreakMode:0];
  [v19 setNumberOfLines:0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v15] = v19;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend] = 0;
  id result = (char *)[self companionFriendListConfiguration];
  if (result)
  {
    double v21 = result;
    uint64_t v22 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration;
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration] = result;
    [result setDivision:1];
    [v21 setMinimumMiddleMargin:0.0];
    uint64_t v23 = qword_10094A8E0;
    id v24 = v21;
    if (v23 != -1) {
      swift_once();
    }
    [v24 setNameFont:qword_100956088];

    uint64_t v25 = qword_10094A8E8;
    id v26 = *(id *)&v11[v22];
    if (v25 != -1) {
      swift_once();
    }
    [v26 setPrimaryScoreFont:qword_100956090];

    uint64_t v27 = qword_10094A8F0;
    id v28 = *(id *)&v11[v22];
    if (v27 != -1) {
      swift_once();
    }
    [v28 setPrimaryScoreUnitFont:qword_100956098];

    uint64_t v29 = qword_10094A8F8;
    id v30 = *(id *)&v11[v22];
    if (v29 != -1) {
      swift_once();
    }
    [v30 setSecondaryScoreFont:qword_1009560A0];

    id result = (char *)[objc_allocWithZone((Class)ASCompetitionScoreView) initWithConfiguration:*(void *)&v11[v22]];
    if (result)
    {
      id v31 = result;
      [result setTranslatesAutoresizingMaskIntoConstraints:0];
      *(void *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView] = v31;

      v35.receiver = v11;
      v35.super_class = (Class)type metadata accessor for ActivitySharingFriendListCompetitionView();
      unsigned int v32 = (char *)[super initWithFrame:a1, a2, a3, a4];
      id v33 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView];
      id v34 = v32;
      [v34 addSubview:v33];
      [v33 addSubview:*(void *)&v34[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView]];
      [v33 addSubview:*(void *)&v34[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel]];
      sub_1002E8A78();

      return v34;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002E8A78()
{
  uint64_t v1 = v0;
  id v31 = self;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView);
  UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)();
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100754580;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView);
  id v5 = [v4 topAnchor];
  id v6 = [v2 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(inited + 32) = v7;
  id v8 = [v4 leadingAnchor];
  id v9 = [v2 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(inited + 40) = v10;
  id v11 = [v4 trailingAnchor];
  id v12 = [v2 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(inited + 48) = v13;
  id v14 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel);
  id v15 = [v14 topAnchor];
  id v16 = [v4 bottomAnchor];
  uint64_t v17 = *(void **)(v1
                 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration);
  [v17 bottomMargin];
  id v19 = [v15 constraintEqualToAnchor:v16 constant:10.0 - v18];

  *(void *)(inited + 56) = v19;
  id v20 = [v14 leadingAnchor];
  id v21 = [v2 leadingAnchor];
  [v17 sideMargin];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(inited + 64) = v22;
  id v23 = [v14 trailingAnchor];
  id v24 = [v2 trailingAnchor];
  [v17 sideMargin];
  id v26 = [v23 constraintEqualToAnchor:v24 constant:-v25];

  *(void *)(inited + 72) = v26;
  id v27 = [v14 bottomAnchor];
  id v28 = [v2 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:-16.0];

  *(void *)(inited + 80) = v29;
  specialized Array._endMutation()();
  sub_1001E4080(inited);
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v31 activateConstraints:isa];
}

double sub_1002E8EC4()
{
  uint64_t v1 = self;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration];
  [v1 preferredHeightForConfiguration:v2 friend:*(void *)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend]];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel] intrinsicContentSize];
  [v2 bottomMargin];
  [v0 bounds];
  return v3;
}

id sub_1002E8FAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendListCompetitionView();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendListCompetitionView()
{
  return self;
}

void sub_1002E9080()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView;
  id v3 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v4 = sub_10005DB50();
  [v3 setBackgroundColor:v4];

  id v5 = [v3 layer];
  [v5 setCornerRadius:12.0];

  [v3 setClipsToBounds:1];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v3;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel;
  id v7 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094A900 != -1) {
    swift_once();
  }
  id v8 = (void *)UILabel.withFont(_:)();

  id v9 = [self secondaryLabelColor];
  id v10 = (void *)UILabel.withTextColor(_:)();

  [v10 setLineBreakMode:0];
  [v10 setNumberOfLines:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v6] = v10;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1002E92A8(unsigned char *a1, void *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    id v8 = &a1[v7];
    id v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for AttributedString();
    id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    id v13 = (char *)v4 + v12;
    id v14 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    v11(v13, v14, v10);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (void *)((char *)v4 + v15);
    double v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    LOBYTE(v18) = *((unsigned char *)a2 + v16);
    *uint64_t v17 = v19;
    v17[1] = v20;
    *((unsigned char *)v4 + v16) = (_BYTE)v18;
    uint64_t v21 = a3[10];
    id v22 = (char *)v4 + v21;
    id v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for WorkoutEffort();
    double v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    uint64_t v26 = a3[11];
    id v27 = (void *)((char *)v4 + v26);
    id v28 = (void *)((char *)a2 + v26);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *id v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1002E94D0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(a1 + a2[7], v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[11];
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *sub_1002E9650(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v12 = &a1[v11];
  id v13 = &a2[v11];
  swift_bridgeObjectRetain();
  v10(v12, v13, v9);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  LOBYTE(v17) = a2[v15];
  *uint64_t v16 = v18;
  v16[1] = v19;
  a1[v15] = (_BYTE)v17;
  uint64_t v20 = a3[10];
  uint64_t v21 = &a1[v20];
  id v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for WorkoutEffort();
  uint64_t v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  uint64_t v25 = a3[11];
  uint64_t v26 = &a1[v25];
  id v27 = &a2[v25];
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_1002E9820(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  id v13 = &a2[v11];
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  uint64_t v14 = a3[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for WorkoutEffort();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[11];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    sub_10008DB18((uint64_t)&a1[v18], &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1002E9A18(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  v10(&a1[v11], &a2[v11], v9);
  uint64_t v12 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for WorkoutEffort();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1002E9BD0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for WorkoutEffort();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[11];
    uint64_t v21 = &a1[v20];
    id v22 = &a2[v20];
    sub_10008DB18((uint64_t)&a1[v20], &qword_10094C578);
    uint64_t v23 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002E9DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E9DD0);
}

uint64_t sub_1002E9DD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + a3[6]);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v12 = type metadata accessor for WorkoutEffort();
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = *(void *)(v12 - 8);
      uint64_t v9 = a3[10];
      goto LABEL_9;
    }
    uint64_t v14 = sub_1000AFA94(&qword_10094C590);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[11];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_1002E9F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E9F64);
}

uint64_t sub_1002E9F64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for AttributedString();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
    return result;
  }
  uint64_t v12 = type metadata accessor for WorkoutEffort();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000AFA94(&qword_10094C590);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for WorkloadListItemStack()
{
  uint64_t result = qword_100956158;
  if (!qword_100956158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002EA130()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WorkoutEffort();
    if (v1 <= 0x3F)
    {
      sub_100008C84();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1002EA25C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1002EA278()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - v5;
  type metadata accessor for WorkloadListItemStack();
  sub_100092088((uint64_t)v6);
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v7(v3, enum case for DynamicTypeSize.accessibility1(_:), v0);
  sub_1000A3AD0((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v8 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  double result = 10.0;
  if (v8)
  {
    sub_100092088((uint64_t)v6);
    v7(v3, enum case for DynamicTypeSize.xLarge(_:), v0);
    char v11 = dispatch thunk of static Comparable.< infix(_:_:)();
    v9(v3, v0);
    v9(v6, v0);
    double result = 15.0;
    if (v11) {
      return 11.0;
    }
  }
  return result;
}

uint64_t sub_1002EA49C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v61 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v61);
  id v60 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_1009561A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009561B0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009561B8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009561C0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000AFA94(&qword_1009561C8);
  __chkstk_darwin(v62);
  id v59 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_1009561D0);
  __chkstk_darwin(v64);
  uint64_t v63 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002EAA1C(v1, (uint64_t)v8);
  char v18 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v12, &qword_1009561B0);
  id v27 = &v12[*(int *)(v10 + 44)];
  *id v27 = v18;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  unsigned char v27[40] = 0;
  sub_10008DB18((uint64_t)v8, &qword_1009561B0);
  type metadata accessor for WorkloadListItemStack();
  if (WorkoutEffort.itemHasEffort.getter())
  {
    id v28 = [self secondarySystemBackgroundColor];
    uint64_t v29 = Color.init(_:)();
  }
  else
  {
    uint64_t v29 = static Color.clear.getter();
  }
  uint64_t v30 = v29;
  char v31 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v15, &qword_1009561B8);
  unsigned int v32 = &v15[*(int *)(v13 + 36)];
  *(void *)unsigned int v32 = v30;
  v32[8] = v31;
  sub_10008DB18((uint64_t)v12, &qword_1009561B8);
  id v33 = v60;
  id v34 = &v60[*(int *)(v61 + 20)];
  uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v36 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #14.0 }
  *id v33 = _Q0;
  id v42 = [self tertiarySystemBackgroundColor];
  uint64_t v43 = Color.init(_:)();
  WorkoutEffort.itemHasEffort.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_100098080((uint64_t)v33, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  NSString v44 = &v5[*(int *)(sub_1000AFA94(&qword_1009561D8) + 36)];
  long long v45 = v67;
  *(_OWORD *)NSString v44 = v66;
  *((_OWORD *)v44 + 1) = v45;
  *((void *)v44 + 4) = v68;
  uint64_t v46 = sub_1000AFA94(&qword_1009561E0);
  *(void *)&v5[*(int *)(v46 + 52)] = v43;
  *(_WORD *)&v5[*(int *)(v46 + 56)] = 256;
  uint64_t v47 = static Alignment.center.getter();
  uint64_t v49 = v48;
  id v50 = (uint64_t *)&v5[*(int *)(sub_1000AFA94(&qword_1009561E8) + 36)];
  *id v50 = v47;
  v50[1] = v49;
  sub_100097CB0((uint64_t)v33, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t)v59;
  uint64_t v55 = (uint64_t)&v59[*(int *)(v62 + 36)];
  sub_1000AEF2C((uint64_t)v5, v55, &qword_1009561A8);
  id v56 = (uint64_t *)(v55 + *(int *)(sub_1000AFA94(&qword_1009561F0) + 36));
  uint64_t *v56 = v51;
  v56[1] = v53;
  sub_1000AEF2C((uint64_t)v15, v54, &qword_1009561C0);
  sub_10008DB18((uint64_t)v5, &qword_1009561A8);
  sub_10008DB18((uint64_t)v15, &qword_1009561C0);
  uint64_t v57 = v63;
  sub_1000AEF2C(v54, v63, &qword_1009561C8);
  *(unsigned char *)(v57 + *(int *)(v64 + 36)) = 0;
  sub_10008DB18(v54, &qword_1009561C8);
  return sub_1000AEEC8(v57, v65, &qword_1009561D0);
}

uint64_t sub_1002EAA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v62 = sub_1000AFA94(&qword_1009561F8);
  __chkstk_darwin(v62);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_100956200);
  __chkstk_darwin(v59);
  uint64_t v60 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100956208);
  __chkstk_darwin(v6 - 8);
  char v8 = (double *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_1000AFA94(&qword_100956210);
  __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000AFA94(&qword_100956218);
  __chkstk_darwin(v58);
  uint64_t v55 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v51 - v12;
  uint64_t v13 = type metadata accessor for DynamicTypeSize();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = a1;
  uint64_t v53 = a1 + *(int *)(type metadata accessor for WorkloadListItemStack() + 44);
  sub_100092088((uint64_t)v19);
  uint64_t v52 = *(void (**)(char *, void, uint64_t))(v14 + 104);
  v52(v16, enum case for DynamicTypeSize.accessibility1(_:), v13);
  uint64_t v51 = sub_1000A3AD0((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v16, v13);
  v21(v19, v13);
  if (a1)
  {
    *(void *)uint64_t v4 = static VerticalAlignment.center.getter();
    *((void *)v4 + 1) = 0x4020000000000000;
    v4[16] = 0;
    uint64_t v22 = sub_1000AFA94(&qword_100956248);
    sub_1002EC1C0(v20, (uint64_t)&v4[*(int *)(v22 + 44)]);
    uint64_t v23 = &qword_1009561F8;
    sub_1000AEF2C((uint64_t)v4, v60, &qword_1009561F8);
    swift_storeEnumTagMultiPayload();
    sub_1002EDE48(&qword_100956228, &qword_100956218, (void (*)(void))sub_1002ED7F0);
    sub_1000A132C(&qword_100956240, &qword_1009561F8);
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = (uint64_t)v4;
  }
  else
  {
    double v25 = sub_1002EA278();
    *(void *)char v8 = static HorizontalAlignment.center.getter();
    v8[1] = v25;
    *((unsigned char *)v8 + 16) = 0;
    uint64_t v26 = sub_1000AFA94(&qword_100956220);
    sub_1002EB094(v20, (uint64_t)v8 + *(int *)(v26 + 44));
    char v27 = static Edge.Set.top.getter();
    sub_1002EA278();
    EdgeInsets.init(_all:)();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v36 = v56;
    sub_1000AEF2C((uint64_t)v8, v56, &qword_100956208);
    uint64_t v37 = v36 + *(int *)(v54 + 36);
    *(unsigned char *)uint64_t v37 = v27;
    *(void *)(v37 + 8) = v29;
    *(void *)(v37 + 16) = v31;
    *(void *)(v37 + 24) = v33;
    *(void *)(v37 + 32) = v35;
    *(unsigned char *)(v37 + 40) = 0;
    sub_10008DB18((uint64_t)v8, &qword_100956208);
    char v38 = static Edge.Set.bottom.getter();
    sub_100092088((uint64_t)v19);
    v52(v16, enum case for DynamicTypeSize.xLarge(_:), v13);
    dispatch thunk of static Comparable.< infix(_:_:)();
    v21(v16, v13);
    v21(v19, v13);
    EdgeInsets.init(_all:)();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v47 = v55;
    sub_1000AEF2C(v36, v55, &qword_100956210);
    uint64_t v48 = v47 + *(int *)(v58 + 36);
    *(unsigned char *)uint64_t v48 = v38;
    *(void *)(v48 + 8) = v40;
    *(void *)(v48 + 16) = v42;
    *(void *)(v48 + 24) = v44;
    *(void *)(v48 + 32) = v46;
    *(unsigned char *)(v48 + 40) = 0;
    sub_10008DB18(v36, &qword_100956210);
    uint64_t v23 = &qword_100956218;
    uint64_t v49 = v57;
    sub_1000AEEC8(v47, v57, &qword_100956218);
    sub_1000AEF2C(v49, v60, &qword_100956218);
    swift_storeEnumTagMultiPayload();
    sub_1002EDE48(&qword_100956228, &qword_100956218, (void (*)(void))sub_1002ED7F0);
    sub_1000A132C(&qword_100956240, &qword_1009561F8);
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = v49;
  }
  return sub_10008DB18(v24, v23);
}

uint64_t sub_1002EB094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009562F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_1000AFA94(&qword_1009562F8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = static VerticalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = sub_1000AFA94(&qword_100956300);
  sub_1002EB280(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v17 = sub_1000AFA94(&qword_100956308);
  sub_1002EB890(a1, (uint64_t *)&v9[*(int *)(v17 + 44)]);
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v12, &qword_1009562F8);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v6, &qword_1009562F0);
  sub_1000AEF2C((uint64_t)v12, a2, &qword_1009562F8);
  uint64_t v18 = sub_1000AFA94(&qword_100956310);
  sub_1000AEF2C((uint64_t)v6, a2 + *(int *)(v18 + 48), &qword_1009562F0);
  sub_10008DB18((uint64_t)v9, &qword_1009562F0);
  sub_10008DB18((uint64_t)v15, &qword_1009562F8);
  sub_10008DB18((uint64_t)v6, &qword_1009562F0);
  return sub_10008DB18((uint64_t)v12, &qword_1009562F8);
}

uint64_t sub_1002EB280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for WorkloadListItemStack();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v6 - 8);
  uint64_t v68 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for EffortMiniGraph();
  uint64_t v67 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000AFA94(&qword_100956268);
  __chkstk_darwin(v70);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_100956270);
  __chkstk_darwin(v71);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AFA94(&qword_100956278);
  __chkstk_darwin(v72);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_100956280);
  __chkstk_darwin(v74);
  uint64_t v76 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v66 - v18;
  __chkstk_darwin(v20);
  uint64_t v75 = (uint64_t)&v66 - v21;
  LOBYTE(v3) = WorkoutEffort.allSubWorkoutsHaveEffort.getter();
  sub_100098080(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
  if ((v3 & 1) == 0)
  {
    sub_100097CB0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
    uint64_t v23 = v68;
    uint64_t v24 = v69;
    uint64_t v25 = (uint64_t)v19;
    uint64_t v26 = v67;
    goto LABEL_5;
  }
  char v22 = WorkoutEffort.allSubWorkoutsAreSkipped.getter();
  sub_100097CB0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
  uint64_t v23 = v68;
  uint64_t v24 = v69;
  uint64_t v25 = (uint64_t)v19;
  uint64_t v26 = v67;
  if (v22)
  {
LABEL_5:
    uint64_t v27 = type metadata accessor for AppleExertionScale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 1, 1, v27);
    goto LABEL_6;
  }
  WorkoutEffort.highestSubWorkoutEffort.getter();
LABEL_6:
  EffortMiniGraph.init(effort:)();
  char v28 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v73;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v9, v73);
  char v38 = &v11[*(int *)(v70 + 36)];
  *char v38 = v28;
  *((void *)v38 + 1) = v30;
  *((void *)v38 + 2) = v32;
  *((void *)v38 + 3) = v34;
  *((void *)v38 + 4) = v36;
  v38[40] = 0;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v37);
  char v39 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v13, &qword_100956268);
  uint64_t v48 = &v13[*(int *)(v71 + 36)];
  *uint64_t v48 = v39;
  *((void *)v48 + 1) = v41;
  *((void *)v48 + 2) = v43;
  *((void *)v48 + 3) = v45;
  *((void *)v48 + 4) = v47;
  v48[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_100956268);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v15, &qword_100956270);
  uint64_t v49 = &v15[*(int *)(v72 + 36)];
  long long v50 = v78;
  *(_OWORD *)uint64_t v49 = v77;
  *((_OWORD *)v49 + 1) = v50;
  *((_OWORD *)v49 + 2) = v79;
  sub_10008DB18((uint64_t)v13, &qword_100956270);
  char v51 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  sub_1000AEF2C((uint64_t)v15, v25, &qword_100956278);
  uint64_t v60 = v25 + *(int *)(v74 + 36);
  *(unsigned char *)uint64_t v60 = v51;
  *(void *)(v60 + 8) = v53;
  *(void *)(v60 + 16) = v55;
  *(void *)(v60 + 24) = v57;
  *(void *)(v60 + 32) = v59;
  *(unsigned char *)(v60 + 40) = 0;
  sub_10008DB18((uint64_t)v15, &qword_100956278);
  uint64_t v61 = v25;
  uint64_t v62 = v75;
  sub_1000AEEC8(v61, v75, &qword_100956280);
  uint64_t v63 = v76;
  sub_1000AEF2C(v62, v76, &qword_100956280);
  sub_1000AEF2C(v63, v24, &qword_100956280);
  uint64_t v64 = v24 + *(int *)(sub_1000AFA94(&qword_100956360) + 48);
  *(void *)uint64_t v64 = 0;
  *(unsigned char *)(v64 + 8) = 1;
  sub_10008DB18(v62, &qword_100956280);
  return sub_10008DB18(v63, &qword_100956280);
}

uint64_t sub_1002EB890@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  uint64_t v60 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100956318);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100956320);
  __chkstk_darwin(v8 - 8);
  uint64_t v65 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v59 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)type metadata accessor for WorkloadListItemStack();
  uint64_t v21 = a1 + v20[5];
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v59(v19, v21, v16);
  uint64_t v22 = Text.init(_:)();
  uint64_t v62 = v23;
  uint64_t v63 = v22;
  int v61 = v24;
  uint64_t v69 = v25;
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  uint64_t v26 = sub_1000AFA94(&qword_100956328);
  sub_1002EBDD4(a1, &v7[*(int *)(v26 + 44)]);
  uint64_t v27 = static Alignment.center.getter();
  sub_1004DD4F8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v27, v28);
  sub_10008DB18((uint64_t)v7, &qword_100956318);
  uint64_t v68 = v15;
  sub_1000AEEC8((uint64_t)v12, (uint64_t)v15, &qword_100956320);
  uint64_t v67 = a1;
  char v29 = WorkoutEffort.itemHasEffort.getter();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v66 = 0;
  uint64_t v32 = 0;
  if (v29)
  {
    v59(v19, v67 + v20[7], v16);
    uint64_t v33 = Text.init(_:)();
    uint64_t v35 = v34;
    char v37 = v36 & 1;
    uint64_t v38 = enum case for Font.Design.rounded(_:);
    uint64_t v39 = type metadata accessor for Font.Design();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v60, v38, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    uint64_t v30 = Text.fontDesign(_:)();
    uint64_t v31 = v42;
    uint64_t v32 = v43;
    uint64_t v66 = v44 & 1;
    sub_1000A06C0(v33, v35, v37);
    swift_bridgeObjectRelease();
    sub_10008DB18(v41, &qword_10094C448);
  }
  v61 &= 1u;
  char v45 = v61;
  uint64_t v46 = (uint64_t *)(v67 + v20[8]);
  uint64_t v47 = v46[1];
  uint64_t v67 = *v46;
  uint64_t v48 = v65;
  sub_1000AEF2C((uint64_t)v68, v65, &qword_100956320);
  uint64_t v49 = v32;
  uint64_t v50 = v63;
  char v51 = v64;
  uint64_t v52 = v62;
  *uint64_t v64 = v63;
  v51[1] = v52;
  *((unsigned char *)v51 + 16) = v45;
  v51[3] = v69;
  uint64_t v53 = (int *)sub_1000AFA94(&qword_100956330);
  sub_1000AEF2C(v48, (uint64_t)v51 + v53[12], &qword_100956320);
  uint64_t v54 = (uint64_t *)((char *)v51 + v53[16]);
  uint64_t *v54 = v30;
  v54[1] = v31;
  char v55 = v66;
  v54[2] = v66;
  v54[3] = v49;
  uint64_t v56 = (char *)v51 + v53[20];
  *(void *)uint64_t v56 = 0;
  v56[8] = 1;
  uint64_t v57 = (uint64_t *)((char *)v51 + v53[24]);
  uint64_t *v57 = v67;
  v57[1] = v47;
  LOBYTE(v51) = v61;
  sub_1000A1750(v50, v52, v61);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v30, v31, v55, v49);
  swift_bridgeObjectRetain_n();
  sub_10008DB18((uint64_t)v68, &qword_100956320);
  swift_bridgeObjectRelease();
  sub_1000A1760(v30, v31, v55, v49);
  sub_10008DB18(v48, &qword_100956320);
  sub_1000A06C0(v50, v52, (char)v51);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002EBDD4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WorkoutItemEffortLabelView();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100956338);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100956340);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v32 = (char *)&v32 - v17;
  uint64_t v18 = a1 + *(int *)(type metadata accessor for WorkloadListItemStack() + 40);
  uint64_t v19 = type metadata accessor for WorkoutEffort();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v18, v19);
  static Font.body.getter();
  static Font.Weight.medium.getter();
  uint64_t v20 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100098080((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WorkoutItemEffortLabelView);
  uint64_t v22 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  sub_100097CB0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WorkoutItemEffortLabelView);
  uint64_t v23 = enum case for Font.Design.rounded(_:);
  uint64_t v24 = type metadata accessor for Font.Design();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v5, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v5, 0, 1, v24);
  sub_1002EDB70();
  View.fontDesign(_:)();
  sub_10008DB18((uint64_t)v5, &qword_10094C448);
  sub_10008DB18((uint64_t)v11, &qword_100956338);
  uint64_t v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v32, v15, v12);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v27(v15, v26, v12);
  uint64_t v28 = v33;
  v27(v33, v15, v12);
  char v29 = &v28[*(int *)(sub_1000AFA94(&qword_100956358) + 48)];
  *(void *)char v29 = 0;
  v29[8] = 1;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v26, v12);
  return ((uint64_t (*)(char *, uint64_t))v30)(v15, v12);
}

uint64_t sub_1002EC1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = a2;
  uint64_t v129 = type metadata accessor for DynamicTypeSize();
  uint64_t v127 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  id v126 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v125 = (uint64_t)&v108 - v5;
  uint64_t v6 = sub_1000AFA94(&qword_100956250);
  __chkstk_darwin(v6 - 8);
  id v120 = (uint64_t *)((char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_1000AFA94(&qword_100956258);
  __chkstk_darwin(v119);
  uint64_t v123 = (uint64_t)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000AFA94(&qword_100956260);
  __chkstk_darwin(v122);
  uint64_t v128 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v121 = (uint64_t)&v108 - v11;
  __chkstk_darwin(v12);
  uint64_t v124 = (uint64_t)&v108 - v13;
  uint64_t v14 = type metadata accessor for WorkloadListItemStack();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v17 - 8);
  id v112 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for EffortMiniGraph();
  uint64_t v115 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v20 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000AFA94(&qword_100956268);
  __chkstk_darwin(v111);
  uint64_t v22 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000AFA94(&qword_100956270);
  __chkstk_darwin(v113);
  uint64_t v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000AFA94(&qword_100956278);
  __chkstk_darwin(v114);
  uint64_t v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000AFA94(&qword_100956280);
  __chkstk_darwin(v110);
  uint64_t v117 = (uint64_t)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v108 - v29;
  __chkstk_darwin(v31);
  uint64_t v116 = (uint64_t)&v108 - v32;
  char v33 = WorkoutEffort.allSubWorkoutsHaveEffort.getter();
  sub_100098080(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
  uint64_t v118 = v14;
  if ((v33 & 1) == 0)
  {
    sub_100097CB0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
    uint64_t v35 = v110;
    uint64_t v36 = v109;
    goto LABEL_5;
  }
  char v34 = WorkoutEffort.allSubWorkoutsAreSkipped.getter();
  sub_100097CB0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
  uint64_t v35 = v110;
  uint64_t v36 = v109;
  if (v34)
  {
LABEL_5:
    uint64_t v37 = type metadata accessor for AppleExertionScale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v112, 1, 1, v37);
    goto LABEL_6;
  }
  uint64_t v108 = a1;
  WorkoutEffort.highestSubWorkoutEffort.getter();
  a1 = v108;
LABEL_6:
  EffortMiniGraph.init(effort:)();
  char v38 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = v115;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v22, v20, v36);
  uint64_t v48 = &v22[*(int *)(v111 + 36)];
  *uint64_t v48 = v38;
  *((void *)v48 + 1) = v40;
  *((void *)v48 + 2) = v42;
  *((void *)v48 + 3) = v44;
  *((void *)v48 + 4) = v46;
  v48[40] = 0;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v36);
  char v49 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v24, &qword_100956268);
  uint64_t v58 = &v24[*(int *)(v113 + 36)];
  *uint64_t v58 = v49;
  *((void *)v58 + 1) = v51;
  *((void *)v58 + 2) = v53;
  *((void *)v58 + 3) = v55;
  *((void *)v58 + 4) = v57;
  v58[40] = 0;
  sub_10008DB18((uint64_t)v22, &qword_100956268);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v26, &qword_100956270);
  uint64_t v59 = &v26[*(int *)(v114 + 36)];
  long long v60 = v132;
  *(_OWORD *)uint64_t v59 = v131;
  *((_OWORD *)v59 + 1) = v60;
  *((_OWORD *)v59 + 2) = v133;
  sub_10008DB18((uint64_t)v24, &qword_100956270);
  char v61 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  sub_1000AEF2C((uint64_t)v26, (uint64_t)v30, &qword_100956278);
  uint64_t v70 = &v30[*(int *)(v35 + 36)];
  *uint64_t v70 = v61;
  *((void *)v70 + 1) = v63;
  *((void *)v70 + 2) = v65;
  *((void *)v70 + 3) = v67;
  *((void *)v70 + 4) = v69;
  v70[40] = 0;
  sub_10008DB18((uint64_t)v26, &qword_100956278);
  uint64_t v71 = v116;
  sub_1000AEEC8((uint64_t)v30, v116, &qword_100956280);
  uint64_t v72 = static HorizontalAlignment.leading.getter();
  uint64_t v73 = (uint64_t)v120;
  *id v120 = v72;
  *(void *)(v73 + 8) = 0;
  *(unsigned char *)(v73 + 16) = 0;
  uint64_t v74 = sub_1000AFA94(&qword_100956288);
  sub_1002ECC54(a1, (uint64_t *)(v73 + *(int *)(v74 + 44)));
  char v75 = static Edge.Set.top.getter();
  sub_1002EA278();
  EdgeInsets.init(_all:)();
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v84 = v123;
  sub_1000AEF2C(v73, v123, &qword_100956250);
  uint64_t v85 = v84 + *(int *)(v119 + 36);
  *(unsigned char *)uint64_t v85 = v75;
  *(void *)(v85 + 8) = v77;
  *(void *)(v85 + 16) = v79;
  *(void *)(v85 + 24) = v81;
  *(void *)(v85 + 32) = v83;
  *(unsigned char *)(v85 + 40) = 0;
  sub_10008DB18(v73, &qword_100956250);
  char v86 = static Edge.Set.bottom.getter();
  uint64_t v87 = v125;
  sub_100092088(v125);
  id v89 = v126;
  uint64_t v88 = v127;
  uint64_t v90 = v129;
  (*(void (**)(char *, void, uint64_t))(v127 + 104))(v126, enum case for DynamicTypeSize.xLarge(_:), v129);
  sub_1000A3AD0((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  dispatch thunk of static Comparable.< infix(_:_:)();
  unint64_t v91 = *(void (**)(char *, uint64_t))(v88 + 8);
  v91(v89, v90);
  v91((char *)v87, v90);
  EdgeInsets.init(_all:)();
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v100 = v121;
  sub_1000AEF2C(v84, v121, &qword_100956258);
  uint64_t v101 = v100 + *(int *)(v122 + 36);
  *(unsigned char *)uint64_t v101 = v86;
  *(void *)(v101 + 8) = v93;
  *(void *)(v101 + 16) = v95;
  *(void *)(v101 + 24) = v97;
  *(void *)(v101 + 32) = v99;
  *(unsigned char *)(v101 + 40) = 0;
  sub_10008DB18(v84, &qword_100956258);
  uint64_t v102 = v124;
  sub_1000AEEC8(v100, v124, &qword_100956260);
  uint64_t v103 = v117;
  sub_1000AEF2C(v71, v117, &qword_100956280);
  uint64_t v104 = v128;
  sub_1000AEF2C(v102, v128, &qword_100956260);
  uint64_t v105 = v130;
  sub_1000AEF2C(v103, v130, &qword_100956280);
  uint64_t v106 = sub_1000AFA94(&qword_100956290);
  sub_1000AEF2C(v104, v105 + *(int *)(v106 + 48), &qword_100956260);
  sub_10008DB18(v102, &qword_100956260);
  sub_10008DB18(v71, &qword_100956280);
  sub_10008DB18(v104, &qword_100956260);
  return sub_10008DB18(v103, &qword_100956280);
}

uint64_t sub_1002ECC54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v3 = (int *)type metadata accessor for WorkloadListItemStack();
  uint64_t v57 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v58 = v4;
  uint64_t v59 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_100956298);
  __chkstk_darwin(v63);
  uint64_t v70 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = type metadata accessor for EffortGoalAndDate(0);
  __chkstk_darwin(v68);
  long long v60 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v61 = (uint64_t)&v56 - v8;
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_1009562A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v69 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v67 = (char *)&v56 - v19;
  uint64_t v20 = type metadata accessor for AttributedString();
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v22 = __chkstk_darwin(v20);
  uint64_t v24 = a1 + v3[5];
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16);
  v56((char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v20, v22);
  uint64_t v25 = Text.init(_:)();
  uint64_t v64 = v26;
  uint64_t v65 = v25;
  int v62 = v27;
  uint64_t v66 = v28;
  uint64_t v29 = a1;
  sub_100092088((uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DynamicTypeSize.xLarge(_:), v9);
  sub_1000A3AD0((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v30 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v12, v9);
  v31(v15, v9);
  if (v30)
  {
    uint64_t v32 = v59;
    sub_100098080(a1, v59, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
    unint64_t v33 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v34 = swift_allocObject();
    sub_1002EDA70(v32, v34 + v33, (uint64_t (*)(void))type metadata accessor for WorkloadListItemStack);
    uint64_t v35 = v70;
    *uint64_t v70 = sub_1002EDAD8;
    v35[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v34;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_1009562A8);
    sub_1000A3AD0(&qword_1009562B0, (void (*)(uint64_t))type metadata accessor for EffortGoalAndDate);
    sub_1000A132C(&qword_1009562B8, &qword_1009562A8);
    uint64_t v36 = (uint64_t)v67;
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v37 = a1 + v3[10];
    uint64_t v38 = type metadata accessor for WorkoutEffort();
    uint64_t v39 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v60, v37, v38);
    uint64_t v40 = (int *)v68;
    ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v39 + *(int *)(v68 + 20), v29 + v3[7], v20);
    uint64_t v41 = (uint64_t *)(v29 + v3[8]);
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    LOBYTE(v41) = *(unsigned char *)(v29 + v3[9]);
    uint64_t v44 = (void *)(v39 + v40[6]);
    *uint64_t v44 = v42;
    v44[1] = v43;
    uint64_t v45 = v39 + v40[7];
    *(void *)uint64_t v45 = 0;
    *(unsigned char *)(v45 + 8) = 1;
    *(unsigned char *)(v39 + v40[8]) = (_BYTE)v41;
    uint64_t v46 = (uint64_t *)(v39 + v40[9]);
    *uint64_t v46 = swift_getKeyPath();
    sub_1000AFA94(&qword_10094C578);
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = v61;
    sub_1002EDA70(v39, v61, type metadata accessor for EffortGoalAndDate);
    sub_100098080(v47, (uint64_t)v70, type metadata accessor for EffortGoalAndDate);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_1009562A8);
    sub_1000A3AD0(&qword_1009562B0, (void (*)(uint64_t))type metadata accessor for EffortGoalAndDate);
    sub_1000A132C(&qword_1009562B8, &qword_1009562A8);
    uint64_t v36 = (uint64_t)v67;
    _ConditionalContent<>.init(storage:)();
    sub_100097CB0(v47, type metadata accessor for EffortGoalAndDate);
  }
  char v48 = v62 & 1;
  uint64_t v49 = v69;
  sub_1000AEF2C(v36, v69, &qword_1009562A0);
  uint64_t v50 = v71;
  uint64_t v52 = v64;
  uint64_t v51 = v65;
  *uint64_t v71 = v65;
  v50[1] = v52;
  *((unsigned char *)v50 + 16) = v48;
  _OWORD v50[3] = v66;
  uint64_t v53 = sub_1000AFA94(&qword_1009562C0);
  sub_1000AEF2C(v49, (uint64_t)v50 + *(int *)(v53 + 48), &qword_1009562A0);
  uint64_t v54 = (char *)v50 + *(int *)(v53 + 64);
  *(void *)uint64_t v54 = 0;
  v54[8] = 0;
  sub_1000A1750(v51, v52, v48);
  swift_bridgeObjectRetain();
  sub_10008DB18(v36, &qword_1009562A0);
  sub_10008DB18(v49, &qword_1009562A0);
  sub_1000A06C0(v51, v52, v48);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002ED414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v40[1] = a1;
  uint64_t v42 = a3;
  uint64_t v4 = type metadata accessor for EffortGoalAndDate(0);
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009562C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009562D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v41 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009562D8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.lastTextBaseline.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  v40[0] = (uint64_t)&v10[*(int *)(sub_1000AFA94(&qword_1009562E0) + 44)];
  uint64_t v17 = (int *)type metadata accessor for WorkloadListItemStack();
  uint64_t v18 = a2 + v17[10];
  uint64_t v19 = type metadata accessor for WorkoutEffort();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v18, v19);
  uint64_t v20 = a2 + v17[7];
  uint64_t v21 = &v7[v5[7]];
  uint64_t v22 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v20, v22);
  uint64_t v23 = (uint64_t *)(a2 + v17[8]);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  swift_bridgeObjectRetain();
  GeometryProxy.size.getter();
  char v26 = *(unsigned char *)(a2 + v17[9]);
  int v27 = &v7[v5[8]];
  *(void *)int v27 = v25;
  *((void *)v27 + 1) = v24;
  uint64_t v28 = &v7[v5[9]];
  *(void *)uint64_t v28 = v29;
  v28[8] = 0;
  v7[v5[10]] = v26;
  char v30 = (uint64_t *)&v7[v5[11]];
  *char v30 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  sub_1002EDA70((uint64_t)v7, v40[0], type metadata accessor for EffortGoalAndDate);
  uint64_t v31 = static Alignment.center.getter();
  uint64_t v32 = v41;
  sub_1004DD554(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v41, 0.0, 1, INFINITY, 0, v31, v33);
  sub_10008DB18((uint64_t)v10, &qword_1009562C8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C(v32, (uint64_t)v16, &qword_1009562D0);
  uint64_t v35 = &v16[*(int *)(v14 + 44)];
  *(void *)uint64_t v35 = KeyPath;
  *((void *)v35 + 1) = 1;
  v35[16] = 0;
  sub_10008DB18(v32, &qword_1009562D0);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = v42;
  sub_1000AEF2C((uint64_t)v16, v42, &qword_1009562D8);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(sub_1000AFA94(&qword_1009562E8) + 36));
  *uint64_t v38 = v36;
  v38[1] = 0x3FE8000000000000;
  return sub_10008DB18((uint64_t)v16, &qword_1009562D8);
}

unint64_t sub_1002ED7F0()
{
  unint64_t result = qword_100956230;
  if (!qword_100956230)
  {
    sub_1000A1370(&qword_100956210);
    sub_1000A132C(&qword_100956238, &qword_100956208);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956230);
  }
  return result;
}

uint64_t sub_1002ED898()
{
  uint64_t v1 = type metadata accessor for WorkloadListItemStack();
  uint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v4 = v3 + *(int *)(v1 + 20);
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(v3 + v2[9], v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v3 + v2[12];
  uint64_t v8 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v3 + v2[13];
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1002EDA70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002EDAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WorkloadListItemStack() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1002ED414(a1, v6, a2);
}

unint64_t sub_1002EDB70()
{
  unint64_t result = qword_100956348;
  if (!qword_100956348)
  {
    sub_1000A1370(&qword_100956338);
    sub_1000A3AD0(&qword_100956350, (void (*)(uint64_t))type metadata accessor for WorkoutItemEffortLabelView);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956348);
  }
  return result;
}

unint64_t sub_1002EDC44()
{
  unint64_t result = qword_100956368;
  if (!qword_100956368)
  {
    sub_1000A1370(&qword_1009561D0);
    sub_1002EDCE4();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956368);
  }
  return result;
}

unint64_t sub_1002EDCE4()
{
  unint64_t result = qword_100956370;
  if (!qword_100956370)
  {
    sub_1000A1370(&qword_1009561C8);
    sub_1002EDD84();
    sub_1000A132C(&qword_1009563A0, &qword_1009561F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956370);
  }
  return result;
}

unint64_t sub_1002EDD84()
{
  unint64_t result = qword_100956378;
  if (!qword_100956378)
  {
    sub_1000A1370(&qword_1009561C0);
    sub_1002EDE48(&qword_100956380, &qword_1009561B8, (void (*)(void))sub_1002EDEC8);
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956378);
  }
  return result;
}

uint64_t sub_1002EDE48(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002EDEC8()
{
  unint64_t result = qword_100956388;
  if (!qword_100956388)
  {
    sub_1000A1370(&qword_1009561B0);
    sub_1002EDF3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956388);
  }
  return result;
}

unint64_t sub_1002EDF3C()
{
  unint64_t result = qword_100956390;
  if (!qword_100956390)
  {
    sub_1000A1370(&qword_100956398);
    sub_1002EDE48(&qword_100956228, &qword_100956218, (void (*)(void))sub_1002ED7F0);
    sub_1000A132C(&qword_100956240, &qword_1009561F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956390);
  }
  return result;
}

char *sub_1002EE000(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1005CA0D4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90;
  *(void *)&v10[v11] = sub_1005CA0D4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365;
  *(void *)&v10[v12] = sub_1005CA0D4();

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for TrendDetailRingClosureView();
  uint64_t v13 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel];
  uint64_t v15 = v13;
  [v15 addSubview:v14];
  [v15 addSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90]];
  [v15 addSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365]];
  sub_1002EE154();
  sub_1002EE3F8();

  return v15;
}

void sub_1002EE154()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel);
  uint64_t v3 = self;
  id v4 = [v3 labelColor];
  [v2 setTextColor:v4];

  id v5 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v2 setFont:v5];

  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90);
  uint64_t v7 = (void *)sub_1006758D8();
  [v6 setFont:v7];

  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
  Class v9 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
  uint64_t v10 = (objc_class *)type metadata accessor for GradientColors();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v9;
  v22.receiver = v11;
  v22.super_class = v10;
  [super init];
  Class v13 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
  uint64_t v14 = (objc_class *)type metadata accessor for MetricColors();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v12;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v13;
  v21.receiver = v15;
  v21.super_class = v14;
  uint64_t v16 = (char *)[super init];
  id v17 = *(id *)&v16[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  [v6 setTextColor:v17];
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365);
  uint64_t v19 = (void *)sub_1006758D8();
  [v18 setFont:v19];

  id v20 = [v3 secondaryLabelColor];
  [v18 setTextColor:v20];
}

void sub_1002EE3F8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel];
  id v2 = [v1 topAnchor];
  id v3 = [v0 topAnchor];
  id v43 = [v2 constraintEqualToAnchor:v3 constant:11.0];

  id v4 = [v1 leadingAnchor];
  id v5 = [v0 leadingAnchor];
  id v41 = [v4 constraintEqualToAnchor:v5 constant:16.0];

  id v6 = [v1 trailingAnchor];
  id v7 = [v0 trailingAnchor];
  id v40 = [v6 constraintEqualToAnchor:v7 constant:-16.0];

  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365];
  id v9 = [v8 topAnchor];
  id v10 = [v1 bottomAnchor];
  id v39 = [v9 constraintEqualToAnchor:v10];

  id v11 = [v8 leadingAnchor];
  id v12 = [v1 leadingAnchor];
  id v38 = [v11 constraintEqualToAnchor:v12];

  id v13 = [v8 trailingAnchor];
  id v14 = [v1 trailingAnchor];
  id v37 = [v13 constraintEqualToAnchor:v14];

  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90];
  id v16 = [v15 topAnchor];
  id v17 = [v8 bottomAnchor];
  id v36 = [v16 constraintEqualToAnchor:v17];

  id v18 = [v15 leadingAnchor];
  id v19 = [v1 leadingAnchor];
  id v35 = [v18 constraintEqualToAnchor:v19];

  id v20 = [v15 trailingAnchor];
  id v21 = [v1 trailingAnchor];
  id v45 = [v20 constraintEqualToAnchor:v21];

  id v22 = [v15 bottomAnchor];
  id v23 = [v0 bottomAnchor];
  id v33 = [v22 constraintEqualToAnchor:v23 constant:5.0];

  id v34 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10075C8A0;
  *(void *)(v24 + 32) = v43;
  *(void *)(v24 + 40) = v41;
  *(void *)(v24 + 48) = v40;
  *(void *)(v24 + 56) = v39;
  *(void *)(v24 + 64) = v38;
  *(void *)(v24 + 72) = v37;
  *(void *)(v24 + 80) = v36;
  *(void *)(v24 + 88) = v35;
  *(void *)(v24 + 96) = v45;
  *(void *)(v24 + 104) = v33;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v44 = v43;
  id v42 = v41;
  id v25 = v40;
  id v26 = v39;
  id v27 = v38;
  id v28 = v37;
  id v29 = v36;
  id v30 = v35;
  id v31 = v45;
  id v32 = v33;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:isa];
}

uint64_t sub_1002EE930(void *a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  id v5 = v1;
  *(void *)&v1[v4] = sub_1005CA0D4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90;
  *(void *)&v5[v6] = sub_1005CA0D4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365;
  id v8 = sub_1005CA0D4();

  *(void *)&v5[v7] = v8;
  id v9 = *(void **)&v5[v7];

  type metadata accessor for TrendDetailRingClosureView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1002EEA2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailRingClosureView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendDetailRingClosureView()
{
  return self;
}

void sub_1002EEAE0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel);
  sub_1005F2E20(a4, a1);
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [v8 setText:v10];

  id v11 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90);
  id v12 = (char *)sub_1005F2334(a1);
  id v13 = *(id *)&v12[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  [v11 setTextColor:v13];
  id v14 = (void *)sub_100675A64(a2, 90);
  [v11 setAttributedText:v14];

  uint64_t v15 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365);
  id v16 = [self secondaryLabelColor];
  [v15 setTextColor:v16];

  id v17 = (id)sub_100675A64(a3, 365);
  [v15 setAttributedText:v17];
}

uint64_t sub_1002EECD8@<X0>(unsigned __int8 a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v115 = a3;
  unsigned int v5 = a1;
  uint64_t v110 = type metadata accessor for Calendar.Component();
  uint64_t v116 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v101 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v121 = *(void **)(v7 - 8);
  uint64_t v122 = v7;
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v96 - v10;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  uint64_t v98 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v100 = (char *)&v96 - v14;
  __chkstk_darwin(v15);
  uint64_t v105 = (char *)&v96 - v16;
  uint64_t v17 = type metadata accessor for Calendar();
  uint64_t v113 = *(void *)(v17 - 8);
  uint64_t v114 = v17;
  __chkstk_darwin(v17);
  id v120 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v117 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v97 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v106 = (char *)&v96 - v22;
  __chkstk_darwin(v23);
  uint64_t v99 = (char *)&v96 - v24;
  __chkstk_darwin(v25);
  uint64_t v119 = (char *)&v96 - v26;
  uint64_t v27 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v27 - 8);
  id v29 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DateInterval();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v107 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v33 - 8);
  uint64_t v103 = (uint64_t)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  id v37 = (char *)&v96 - v36;
  *(void *)&double v39 = __chkstk_darwin(v38).n128_u64[0];
  uint64_t v123 = (uint64_t)&v96 - v40;
  BOOL v41 = v5 > 3;
  uint64_t v42 = 3;
  if (((1 << a1) & 0x28000000) == 0) {
    uint64_t v42 = 1;
  }
  if (((1 << a1) & 0x12000) != 0) {
    uint64_t v42 = 2;
  }
  if (((1 << a1) & 0x1102208040) != 0) {
    uint64_t v42 = 5;
  }
  if (v5 <= 0x24) {
    uint64_t v43 = v42;
  }
  else {
    uint64_t v43 = 1;
  }
  [a2 userDistanceUnitForDistanceType:v43 v39];
  int IsMetric = FIUIDistanceUnitIsMetric();
  uint64_t v112 = v19;
  if (IsMetric)
  {
    id v118 = sub_1002EFAB0(a1);
    double v46 = sub_1002F00A8(a1);
  }
  else
  {
    id v118 = sub_1002EFD70(a1);
    double v46 = sub_1002F00C8(a1);
  }
  double v47 = v46;
  uint64_t v48 = v45;
  unint64_t v109 = 0x2224471F80uLL >> a1;
  uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v121[7];
  v49(v123, 1, 1, v122);
  sub_1000C3140((unsigned int (*)(char *, uint64_t, uint64_t))(v5 > 3), 1, (uint64_t)v29);
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
  uint64_t v111 = (unsigned int (*)(char *, uint64_t, uint64_t))(v5 > 3);
  if (v50 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v29, (uint64_t *)&unk_1009546B0);
    uint64_t v108 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v51 = (uint64_t)v107;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v107, v29, v30);
    uint64_t v52 = 1;
    uint64_t v53 = sub_1000C576C(v51, v41, 1);
    uint64_t v54 = (uint64_t)v53;
    if (v53[2] >= 6uLL)
    {
      ((void (*)(char *, unint64_t, uint64_t))v121[2])(v37, (unint64_t)v53+ 4 * v121[9]+ ((*((unsigned __int8 *)v121 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v121 + 80)), v122);
      uint64_t v52 = 0;
    }
    uint64_t v55 = v123;
    sub_10008DB18(v123, &qword_10094E8A8);
    v49((uint64_t)v37, v52, 1, v122);
    uint64_t v56 = sub_1000ACADC((uint64_t)v37, v55);
    __chkstk_darwin(v56);
    *(&v96 - 2) = (uint64_t)v118;
    uint64_t v108 = sub_1002F0450(v54, v48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1002F0A34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v107, v30);
  }
  uint64_t v57 = v119;
  Date.init()();
  static Calendar.current.getter();
  uint64_t v58 = v116;
  uint64_t v59 = v117;
  long long v60 = v121;
  uint64_t v61 = v110;
  if (a1 <= 3u)
  {
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v67 = *(void *)(v58 + 72);
    unint64_t v68 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1007526C0;
    uint64_t v70 = *(void (**)(unint64_t, void, uint64_t))(v58 + 104);
    v70(v69 + v68, enum case for Calendar.Component.era(_:), v61);
    v70(v69 + v68 + v67, enum case for Calendar.Component.year(_:), v61);
    v70(v69 + v68 + 2 * v67, enum case for Calendar.Component.month(_:), v61);
    v70(v69 + v68 + 3 * v67, enum case for Calendar.Component.day(_:), v61);
    sub_1000C6A18(v69);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v71 = v106;
    Date.init()();
    uint64_t v72 = v104;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v73 = v71;
    uint64_t v64 = v112;
    unint64_t v107 = *(char **)(v59 + 8);
    ((void (*)(char *, uint64_t))v107)(v73, v112);
    uint64_t v74 = (uint64_t)v105;
    Calendar.date(from:)();
    ((void (*)(char *, uint64_t))v60[1])(v72, v122);
    char v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    if (v75(v74, 1, v64) == 1)
    {
      sub_10008DB18(v74, (uint64_t *)&unk_10095B890);
    }
    else
    {
      uint64_t v78 = v59 + 32;
      uint64_t v79 = *(void **)(v59 + 32);
      uint64_t v80 = v99;
      uint64_t v121 = v79;
      uint64_t v122 = v78;
      ((void (*)(char *, uint64_t, uint64_t))v79)(v99, v74, v64);
      uint64_t v81 = v101;
      v70((unint64_t)v101, enum case for Calendar.Component.hour(_:), v61);
      uint64_t v82 = (uint64_t)v100;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v81, v61);
      uint64_t v83 = v107;
      ((void (*)(char *, uint64_t))v107)(v80, v64);
      if (v75(v82, 1, v64) != 1)
      {
        uint64_t v57 = v119;
        ((void (*)(char *, uint64_t))v83)(v119, v64);
        ((void (*)(char *, uint64_t, uint64_t))v121)(v57, v82, v64);
        uint64_t v59 = v117;
        if ((v109 & 1) == 0) {
          goto LABEL_32;
        }
LABEL_21:
        char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease_n();
        if (v65) {
          double v66 = v47;
        }
        else {
          double v66 = 0.0;
        }
        goto LABEL_34;
      }
      sub_10008DB18(v82, (uint64_t *)&unk_10095B890);
      uint64_t v59 = v117;
    }
    uint64_t v57 = v119;
    if ((v109 & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_21;
  }
  uint64_t v62 = v103;
  sub_1000ACB44(v123, v103);
  uint64_t v63 = v122;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60[6])(v62, 1, v122) != 1)
  {
    uint64_t v76 = v102;
    ((void (*)(char *, uint64_t, uint64_t))v60[4])(v102, v62, v63);
    uint64_t v77 = (uint64_t)v98;
    Calendar.date(from:)();
    uint64_t v64 = v112;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v77, 1, v112) == 1)
    {
      ((void (*)(char *, uint64_t))v60[1])(v76, v63);
      sub_10008DB18(v77, (uint64_t *)&unk_10095B890);
      if ((v109 & 1) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v116 = *(void *)(v59 + 32);
      uint64_t v93 = v97;
      ((void (*)(char *, uint64_t, uint64_t))v116)(v97, v77, v64);
      uint64_t v94 = v106;
      Date.addingTimeInterval(_:)();
      uint64_t v95 = *(void (**)(char *, uint64_t))(v59 + 8);
      v95(v93, v64);
      ((void (*)(char *, uint64_t))v60[1])(v102, v63);
      v95(v57, v64);
      ((void (*)(char *, char *, uint64_t))v116)(v57, v94, v64);
      if ((v109 & 1) == 0) {
        goto LABEL_32;
      }
    }
    goto LABEL_21;
  }
  sub_10008DB18(v62, &qword_10094E8A8);
  uint64_t v64 = v112;
  if (v109) {
    goto LABEL_21;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  double v66 = v47;
  if ((v84 & 1) == 0) {
    double v47 = 0.0;
  }
LABEL_34:
  uint64_t v85 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v86 = v115;
  uint64_t v87 = v111;
  sub_1000C3140(v111, 1, v115 + v85[9]);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v86 + v85[11], v57, v64);
  uint64_t v88 = self;
  id v89 = v118;
  *(void *)uint64_t v86 = [v88 quantityWithUnit:v118 doubleValue:v66];
  id v90 = [v88 quantityWithUnit:v89 doubleValue:v47];

  unint64_t v91 = v108;
  *(void *)(v86 + 8) = v90;
  *(void *)(v86 + 16) = v91;
  *(void *)(v86 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v86 + 32) = v87;
  *(unsigned char *)(v86 + 40) = 1;
  *(unsigned char *)(v86 + v85[10]) = 1;
  (*(void (**)(char *, uint64_t))(v113 + 8))(v120, v114);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v64);
  return sub_10008DB18(v123, &qword_10094E8A8);
}

id sub_1002EFAB0(char a1)
{
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 13:
    case 19:
    case 23:
    case 27:
    case 30:
    case 34:
      id v1 = [self meterUnitWithMetricPrefix:9];
      goto LABEL_11;
    case 5:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
    case 38:
      id v1 = [self minuteUnit];
      goto LABEL_11;
    case 6:
    case 12:
    case 15:
    case 21:
    case 25:
    case 32:
    case 36:
      id v1 = [self meterUnit];
      goto LABEL_11;
    case 7:
    case 16:
    case 22:
    case 26:
    case 29:
    case 33:
    case 37:
      objc_super v2 = self;
      id v3 = [v2 minuteUnit];
      id v4 = [v2 meterUnitWithMetricPrefix:9];
      id v5 = [v3 unitDividedByUnit:v4];

      return v5;
    case 8:
    case 17:
      id v1 = [self wattUnit];
      goto LABEL_11;
    case 9:
    case 18:
      id v1 = [self _countPerMinuteUnit];
      goto LABEL_11;
    case 10:
      id v1 = [self secondUnitWithMetricPrefix:4];
      goto LABEL_11;
    case 11:
      id v1 = [self meterUnitWithMetricPrefix:5];
      goto LABEL_11;
    default:
      id v1 = [self countUnit];
LABEL_11:
      return v1;
  }
}

id sub_1002EFD70(char a1)
{
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 13:
    case 19:
    case 23:
    case 30:
    case 34:
      id v1 = [self mileUnit];
      goto LABEL_15;
    case 5:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
    case 38:
      id v1 = [self minuteUnit];
      goto LABEL_15;
    case 6:
    case 15:
    case 21:
    case 25:
    case 32:
    case 36:
      id v1 = [self footUnit];
      goto LABEL_15;
    case 7:
    case 16:
    case 22:
    case 26:
    case 33:
    case 37:
      objc_super v2 = self;
      id v3 = [v2 minuteUnit];
      id v4 = [v2 mileUnit];
      id v5 = [v3 unitDividedByUnit:v4];
      goto LABEL_5;
    case 8:
    case 17:
      id v1 = [self wattUnit];
      goto LABEL_15;
    case 9:
    case 18:
      id v1 = [self _countPerMinuteUnit];
      goto LABEL_15;
    case 10:
      id v1 = [self secondUnitWithMetricPrefix:4];
      goto LABEL_15;
    case 11:
      id v1 = [self meterUnitWithMetricPrefix:5];
      goto LABEL_15;
    case 12:
      id v1 = [self meterUnit];
      goto LABEL_15;
    case 27:
      id v1 = [self yardUnit];
      goto LABEL_15;
    case 29:
      uint64_t v8 = self;
      id v3 = [v8 minuteUnit];
      id v4 = [v8 yardUnit];
      id v5 = [v3 unitDividedByUnit:v4];
LABEL_5:
      id v6 = v5;

      id result = v6;
      break;
    default:
      id v1 = [self countUnit];
LABEL_15:
      id result = v1;
      break;
  }
  return result;
}

double sub_1002F00A8(char a1)
{
  return dbl_10075C8E0[a1];
}

double sub_1002F00C8(char a1)
{
  return dbl_10075CA18[a1];
}

uint64_t sub_1002F00E8@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, void *a4@<X3>, char *a5@<X8>)
{
  double v31 = a2;
  id v32 = a4;
  uint64_t v33 = a1;
  uint64_t v7 = type metadata accessor for Calendar();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v30 - v19;
  if (a3) {
    goto LABEL_4;
  }
  uint64_t v21 = a5;
  static Calendar.current.getter();
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
LABEL_4:
    uint64_t v22 = type metadata accessor for MetricChartData();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a5, 1, 1, v22);
  }
  double v24 = v31;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v25(v20, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  uint64_t v26 = self;
  id v27 = v32;
  id v28 = [v26 quantityWithUnit:v27 doubleValue:v24];
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  *(void *)uint64_t v21 = v27;
  uint64_t v29 = type metadata accessor for MetricChartData();
  v25(&v21[*(int *)(v29 + 20)], v17, v14);
  *(void *)&v21[*(int *)(v29 + 24)] = v28;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v21, 0, 1, v29);
}

void *sub_1002F0450(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = v3;
  uint64_t v59 = a3;
  uint64_t v7 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v7 - 8);
  uint64_t v58 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for MetricChartData();
  uint64_t v9 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v53 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v47 = (uint64_t)&v42 - v12;
  uint64_t v13 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for DateComponents();
  uint64_t v16 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v67 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_1009563E8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = v19;
  if (v19)
  {
    uint64_t v45 = v4;
    unint64_t v20 = 0;
    uint64_t v43 = v16;
    uint64_t v21 = v16 + 16;
    uint64_t v61 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v44 = a1;
    unint64_t v23 = a1 + v22;
    uint64_t v24 = *(void *)(v21 + 56);
    uint64_t v62 = v21;
    uint64_t v63 = (void (**)(char *, void, uint64_t, uint64_t))(v21 + 40);
    long long v60 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
    double v66 = (uint64_t (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v46 = v9;
    uint64_t v49 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v50 = v24;
    uint64_t v25 = (unsigned __int8 *)(a2 + 40);
    char v65 = _swiftEmptyArrayStorage;
    uint64_t v26 = v64;
    uint64_t v51 = v15;
    uint64_t v52 = a2;
    uint64_t v27 = (uint64_t)v55;
    v61(v15, a1 + v22, v64);
    while (1)
    {
      uint64_t v48 = *v63;
      v48(v15, 0, 1, v26);
      if ((*v60)(v15, 1, v26) == 1) {
        break;
      }
      id v28 = *v66;
      id result = (void *)(*v66)(v67, v15, v26);
      unint64_t v30 = *(void *)(a2 + 16);
      if (v20 == v30)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v67, v26);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      if (v20 >= v30)
      {
        __break(1u);
        return result;
      }
      uint64_t v31 = *((void *)v25 - 1);
      uint64_t v32 = *v25;
      uint64_t v33 = v26;
      uint64_t v34 = v27 + *(int *)(v56 + 48);
      v28((char *)v27, v67, v33);
      *(void *)uint64_t v34 = v31;
      *(unsigned char *)(v34 + 8) = v32;
      uint64_t v35 = (uint64_t)v58;
      v59(v27, v31, v32);
      sub_10008DB18(v27, &qword_1009563E8);
      if ((*v49)(v35, 1, v57) == 1)
      {
        sub_10008DB18(v35, &qword_10094C1E8);
        uint64_t v15 = v51;
        a2 = v52;
        uint64_t v26 = v64;
      }
      else
      {
        uint64_t v36 = v35;
        uint64_t v37 = v47;
        sub_1002F0A40(v36, v47);
        sub_1002F0A40(v37, v53);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v65 = (void *)sub_1001E717C(0, v65[2] + 1, 1, (unint64_t)v65);
        }
        uint64_t v26 = v64;
        unint64_t v39 = v65[2];
        unint64_t v38 = v65[3];
        if (v39 >= v38 >> 1) {
          char v65 = (void *)sub_1001E717C(v38 > 1, v39 + 1, 1, (unint64_t)v65);
        }
        uint64_t v40 = v65;
        v65[2] = v39 + 1;
        sub_1002F0A40(v53, (uint64_t)v40+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v39);
        uint64_t v15 = v51;
        a2 = v52;
      }
      ++v20;
      v23 += v50;
      v25 += 16;
      if (v54 == v20)
      {
        v48(v15, 1, 1, v64);
        break;
      }
      v61(v15, v23, v26);
    }
  }
  else
  {
    BOOL v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    char v65 = _swiftEmptyArrayStorage;
    v41(v15, 1, 1, v64);
  }
  sub_10008DB18((uint64_t)v15, &qword_10094E8A8);
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  return v65;
}

void sub_1002F0A18(unint64_t a1)
{
}

uint64_t sub_1002F0A34@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  return sub_1002F00E8(a1, a2, a3 & 1, *(void **)(v4 + 16), a4);
}

uint64_t sub_1002F0A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricChartData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1002F0AA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000AFA94(&qword_100956448);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000C6D30(&qword_100956450, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000C6D30(&qword_100956458, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        id result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_1002F0DBC(unint64_t a1)
{
}

void sub_1002F0DD8(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_1000AFA94(a2);
      id v6 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  id v6 = &_swiftEmptySetSingleton;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = (char *)(v6 + 7);
  uint64_t v46 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v14 = v12;
      Swift::Int v15 = NSObject._rawHashValue(seed:)(v6[5]);
      uint64_t v16 = -1 << *((unsigned char *)v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_10007E2D8(0, a3);
        id v21 = *(id *)(v6[6] + 8 * v17);
        char v22 = static NSObject.== infix(_:_:)();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(v6[6] + 8 * v17);
          char v25 = static NSObject.== infix(_:_:)();

          if (v25) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v10[8 * v18] = v20 | v19;
      *(void *)(v6[6] + 8 * v17) = v14;
      uint64_t v26 = v6[2];
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_37;
      }
      void v6[2] = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    Swift::Int v29 = v6[5];
    id v30 = *(id *)(a1 + 32 + 8 * v28);
    Swift::Int v31 = NSObject._rawHashValue(seed:)(v29);
    uint64_t v32 = -1 << *((unsigned char *)v6 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
    uint64_t v36 = 1 << v33;
    if (((1 << v33) & v35) != 0)
    {
      sub_10007E2D8(0, a3);
      id v37 = *(id *)(v6[6] + 8 * v33);
      char v38 = static NSObject.== infix(_:_:)();

      if (v38) {
        goto LABEL_23;
      }
      uint64_t v39 = ~v32;
      unint64_t v33 = (v33 + 1) & v39;
      unint64_t v34 = v33 >> 6;
      uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
      uint64_t v36 = 1 << v33;
      if ((v35 & (1 << v33)) != 0)
      {
        while (1)
        {
          id v40 = *(id *)(v6[6] + 8 * v33);
          char v41 = static NSObject.== infix(_:_:)();

          if (v41) {
            break;
          }
          unint64_t v33 = (v33 + 1) & v39;
          unint64_t v34 = v33 >> 6;
          uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
          uint64_t v36 = 1 << v33;
          if ((v35 & (1 << v33)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v8 = v46;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v8 = v46;
    }
    *(void *)&v10[8 * v34] = v36 | v35;
    *(void *)(v6[6] + 8 * v33) = v30;
    uint64_t v42 = v6[2];
    BOOL v13 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v13) {
      goto LABEL_38;
    }
    void v6[2] = v43;
LABEL_24:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void *sub_1002F113C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationDetent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000AFA94(&qword_100956430);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    Swift::Int v15 = (void (**)(char *, uint64_t))(v11 - 8);
    Swift::Int v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000C6D30(&qword_100956438, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000C6D30(&qword_100956440, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        char v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        id result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_1002F1454(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000AFA94(&qword_10094F360);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    Swift::Int v15 = (void (**)(char *, uint64_t))(v11 - 8);
    Swift::Int v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000C6D30((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000C6D30((unint64_t *)&unk_100955610, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        char v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        id result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_1002F176C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000AFA94(&qword_100956408);
      id result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      id result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    id result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_1000C6D30(&qword_100956410, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    id result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1000C6D30(&qword_100956418, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        id result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      id result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  id result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1002F1A20(unint64_t a1)
{
}

uint64_t sub_1002F1A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_1009564F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_100956500);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  BOOL v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = swift_allocObject();
  long long v12 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v11 + 64) = v12;
  *(void *)(v11 + 80) = *(void *)(v1 + 64);
  long long v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v11 + 32) = v13;
  uint64_t v19 = v1;
  sub_1002F5190(v1);
  sub_1000AFA94(&qword_100956508);
  sub_1000A132C(&qword_100956510, &qword_100956508);
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v6, v3);
  uint64_t v14 = &v10[*(int *)(v8 + 44)];
  long long v15 = v21;
  *uint64_t v14 = v20;
  v14[1] = v15;
  void v14[2] = v22;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = static Color.white.getter();
  sub_1000AEF2C((uint64_t)v10, a1, &qword_100956500);
  *(void *)(a1 + *(int *)(sub_1000AFA94(&qword_100956518) + 36)) = v16;
  return sub_10008DB18((uint64_t)v10, &qword_100956500);
}

uint64_t sub_1002F1CB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = static Alignment.center.getter();
  a2[1] = v4;
  uint64_t v5 = sub_1000AFA94(&qword_100956520);
  return sub_1002F1D00(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_1002F1D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v99 = a2;
  uint64_t v2 = type metadata accessor for ControlSize();
  uint64_t v97 = *(void *)(v2 - 8);
  uint64_t v98 = (void (*)(void, void, void))v2;
  __chkstk_darwin(v2);
  uint64_t v96 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v92 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  char v84 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v90 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v82 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000AFA94(&qword_100956528);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v83 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_100956530);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000AFA94(&qword_100956538);
  uint64_t v104 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  id v89 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v103 = (char *)&v72 - v10;
  uint64_t v79 = type metadata accessor for Font.Leading();
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v76 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for Font.TextStyle();
  uint64_t v12 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_100956540);
  uint64_t v102 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v101 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v72 - v17;
  uint64_t v18 = type metadata accessor for RoundedRectangle();
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  long long v21 = (int64x2_t *)((char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1000AFA94(&qword_100956548);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  char v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  BOOL v28 = (char *)&v72 - v27;
  uint64_t v100 = (uint64_t)&v72 - v27;
  uint64_t v29 = &v21->i8[*(int *)(v19 + 28)];
  uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v31 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
  *long long v21 = vdupq_n_s64(0x7FF0000000000000uLL);
  uint64_t v32 = v80;
  uint64_t v33 = *(void *)(v80 + 40);
  sub_1002F51F8((uint64_t)v21, (uint64_t)v25);
  *(void *)&v25[*(int *)(v23 + 44)] = v33;
  uint64_t v81 = v25;
  swift_retain();
  sub_1002854A8((uint64_t)v21);
  sub_1000AEEC8((uint64_t)v25, (uint64_t)v28, &qword_100956548);
  uint64_t v75 = static VerticalAlignment.center.getter();
  sub_1002F2940((uint64_t)&v106);
  uint64_t v34 = v107;
  uint64_t v73 = v106;
  uint64_t v35 = v108;
  int v74 = v109;
  uint64_t v36 = v110;
  uint64_t v72 = v110;
  uint64_t v37 = v78;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Font.TextStyle.title(_:), v78);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  uint64_t v38 = v77;
  uint64_t v39 = v76;
  uint64_t v40 = v79;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, enum case for Font.Leading.tight(_:), v79);
  uint64_t v41 = Font.leading(_:)();
  uint64_t v78 = v41;
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = *(void *)(v32 + 32);
  uint64_t v106 = v75;
  uint64_t v107 = 0;
  LOBYTE(v108) = 1;
  uint64_t v109 = v73;
  uint64_t v110 = v34;
  uint64_t v111 = v35;
  LOBYTE(v14) = v74;
  char v112 = v74;
  uint64_t v113 = v36;
  uint64_t v114 = KeyPath;
  uint64_t v115 = v41;
  uint64_t v116 = v43;
  LODWORD(v80) = *(unsigned __int8 *)(v32 + 48);
  swift_retain();
  sub_1000AFA94(&qword_100956550);
  sub_1002F5264(&qword_100956558, &qword_100956550, (void (*)(void))sub_1002F5308);
  View.isHidden(_:defaultAccessibilityHidden:)();
  swift_release();
  sub_1000A06C0(v34, v35, (char)v14);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v82;
  ProgressView<>.init<>()();
  swift_retain();
  uint64_t v45 = v84;
  CircularProgressViewStyle.init(tint:)();
  sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
  sub_1002F53CC(&qword_100956580, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  uint64_t v46 = v83;
  uint64_t v47 = v88;
  uint64_t v48 = v91;
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v45, v48);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v44, v47);
  uint64_t v50 = v96;
  uint64_t v49 = v97;
  uint64_t v51 = v98;
  (*(void (**)(char *, void, void))(v97 + 104))(v96, enum case for ControlSize.large(_:), v98);
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = (uint64_t)v86;
  uint64_t v54 = (uint64_t *)&v86[*(int *)(v87 + 36)];
  uint64_t v55 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, void))(v49 + 16))((char *)v54 + *(int *)(v55 + 28), v50, v51);
  uint64_t *v54 = v52;
  uint64_t v56 = v93;
  uint64_t v57 = v94;
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 16))(v53, v46, v94);
  (*(void (**)(char *, void (*)(void, void, void)))(v49 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v57);
  sub_1002F541C();
  uint64_t v58 = v89;
  View.isHidden(_:defaultAccessibilityHidden:)();
  sub_10008DB18(v53, &qword_100956530);
  uint64_t v59 = v103;
  uint64_t v60 = v104;
  uint64_t v61 = v95;
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v58, v95);
  uint64_t v62 = (uint64_t)v81;
  sub_1000AEF2C(v100, (uint64_t)v81, &qword_100956548);
  uint64_t v63 = v101;
  uint64_t v98 = *(void (**)(void, void, void))(v102 + 16);
  uint64_t v64 = v85;
  v98(v101, v105, v85);
  char v65 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v66 = v61;
  v65(v58, v59, v61);
  uint64_t v67 = v99;
  sub_1000AEF2C(v62, v99, &qword_100956548);
  uint64_t v68 = sub_1000AFA94(&qword_100956598);
  v98(v67 + *(int *)(v68 + 48), v63, v64);
  v65((char *)(v67 + *(int *)(v68 + 64)), v58, v66);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v104 + 8);
  v69(v103, v66);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v102 + 8);
  v70(v105, v64);
  sub_10008DB18(v100, &qword_100956548);
  v69(v58, v66);
  v70(v101, v64);
  return sub_10008DB18(v62, &qword_100956548);
}

uint64_t sub_1002F2940@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = Image.init(systemName:)();
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_1000A1750(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002F2A24@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F1A3C(a1);
}

uint64_t sub_1002F2A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100956460);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100956468);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100956470);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100956478);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4039000000000000;
  v5[16] = 0;
  uint64_t v15 = sub_1000AFA94(&qword_100956480);
  sub_1002F2E0C(v2, &v5[*(int *)(v15 + 44)]);
  unsigned __int8 v16 = static Edge.Set.leading.getter();
  unsigned __int8 v17 = static Edge.Set.trailing.getter();
  char v18 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v16) {
    char v18 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v17) {
    char v18 = Edge.Set.init(rawValue:)();
  }
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v8, &qword_100956460);
  uint64_t v19 = &v8[*(int *)(v6 + 36)];
  *uint64_t v19 = v18;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 1;
  sub_10008DB18((uint64_t)v5, &qword_100956460);
  unsigned __int8 v20 = static Edge.Set.bottom.getter();
  char v21 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v20) {
    char v21 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v11, &qword_100956468);
  uint64_t v30 = &v11[*(int *)(v9 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10008DB18((uint64_t)v8, &qword_100956468);
  unsigned __int8 v31 = static Edge.Set.top.getter();
  char v32 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v31) {
    char v32 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_100956470);
  uint64_t v41 = &v14[*(int *)(v12 + 36)];
  *uint64_t v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  unsigned char v41[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_100956470);
  return sub_1000AEEC8((uint64_t)v14, v44, &qword_100956478);
}

uint64_t sub_1002F2E0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v72 = sub_1000AFA94(&qword_100956488);
  uint64_t v63 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v67 = (char *)&v52 - v5;
  uint64_t v70 = sub_1000AFA94(&qword_100956490);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v61 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v66 = v11;
  uint64_t v65 = static Color.white.getter();
  if (qword_10094AD68 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_100998148;
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v60 = *(void *)(a1 + 16);
  uint64_t v64 = v13;
  swift_retain();
  swift_retain();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v16 = v15;
  uint64_t v17 = static Color.white.getter();
  char v18 = (_OWORD *)swift_allocObject();
  long long v19 = *(_OWORD *)(a1 + 48);
  uint64_t v18[3] = *(_OWORD *)(a1 + 32);
  v18[4] = v19;
  v18[5] = *(_OWORD *)(a1 + 64);
  long long v20 = *(_OWORD *)(a1 + 16);
  v18[1] = *(_OWORD *)a1;
  v18[2] = v20;
  *(void *)&long long v75 = 0xD000000000000011;
  *((void *)&v75 + 1) = 0x80000001007BFD30;
  uint64_t v76 = (void *)v14;
  uint64_t v77 = v16;
  uint64_t v78 = v17;
  uint64_t v79 = v12;
  uint64_t v59 = v12;
  char v80 = 0;
  uint64_t v81 = sub_1002F4AC4;
  uint64_t v82 = v18;
  swift_retain();
  sub_1002F4B14((void **)a1);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  *(void *)&long long v89 = String.init(localized:table:bundle:locale:comment:)();
  *((void *)&v89 + 1) = v21;
  long long v86 = *(_OWORD *)(a1 + 32);
  uint64_t v55 = sub_1000AFA94(&qword_10094DEE0);
  uint64_t v22 = State.projectedValue.getter();
  uint64_t v54 = &v52;
  LODWORD(v53) = v88;
  __chkstk_darwin(v22);
  uint64_t v56 = sub_1000AFA94(&qword_100956498);
  sub_1002F4B84();
  unint64_t v58 = sub_1000A06D0();
  uint64_t v57 = sub_1000A132C(&qword_1009564A8, &qword_100956498);
  View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v54 = (uint64_t *)String.init(localized:table:bundle:locale:comment:)();
  uint64_t v53 = v23;
  uint64_t v24 = static Color.red.getter();
  uint64_t v25 = Color.init(rgbHex:)();
  long long v89 = *(_OWORD *)(a1 + 64);
  long long v75 = *(_OWORD *)(a1 + 64);
  State.wrappedValue.getter();
  char v26 = v87;
  uint64_t v27 = (_OWORD *)swift_allocObject();
  long long v28 = *(_OWORD *)(a1 + 48);
  void v27[3] = *(_OWORD *)(a1 + 32);
  v27[4] = v28;
  v27[5] = *(_OWORD *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 16);
  v27[1] = *(_OWORD *)a1;
  v27[2] = v29;
  long long v75 = v89;
  sub_1002F4B14((void **)a1);
  State.wrappedValue.getter();
  LOBYTE(v12) = v87;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = v12;
  *(void *)&long long v75 = 0x6B72616D78;
  *((void *)&v75 + 1) = 0xE500000000000000;
  uint64_t v76 = v54;
  uint64_t v77 = v53;
  uint64_t v78 = v24;
  uint64_t v79 = v25;
  char v80 = v26;
  uint64_t v81 = sub_1002F4BDC;
  uint64_t v82 = v27;
  uint64_t v83 = KeyPath;
  char v84 = sub_1000DBE18;
  uint64_t v85 = v31;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  *(void *)&long long v86 = String.init(localized:table:bundle:locale:comment:)();
  *((void *)&v86 + 1) = v32;
  long long v74 = *(_OWORD *)(a1 + 48);
  uint64_t v33 = State.projectedValue.getter();
  __chkstk_darwin(v33);
  sub_1000AFA94(&qword_1009564B0);
  sub_1002F4C4C();
  uint64_t v34 = v67;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v36 = v68;
  v35(v68, v73, v70);
  uint64_t v37 = v63;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v39 = v71;
  v38(v71, v34, v72);
  uint64_t v40 = v62;
  void *v62 = 1801678700;
  v40[1] = 0xE400000000000000;
  uint64_t v41 = v66;
  uint64_t v40[2] = v61;
  v40[3] = v41;
  uint64_t v42 = v59;
  v40[4] = v65;
  v40[5] = v42;
  *((unsigned char *)v40 + 48) = 0;
  uint64_t v43 = v64;
  v40[7] = v60;
  v40[8] = v43;
  uint64_t v44 = sub_1000AFA94(&qword_1009564C0);
  uint64_t v45 = v36;
  uint64_t v46 = v70;
  v35((char *)v40 + *(int *)(v44 + 48), v45, v70);
  uint64_t v47 = v39;
  uint64_t v48 = v72;
  v38((char *)v40 + *(int *)(v44 + 64), v47, v72);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v49(v67, v48);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v69 + 8);
  v50(v73, v46);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49(v71, v48);
  v50(v68, v46);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002F3960@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009564C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000AFA94(&qword_10094E150);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v36 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v32 - v12;
  __chkstk_darwin(v13);
  uint64_t v34 = (char *)&v32 - v14;
  __chkstk_darwin(v15);
  uint64_t v33 = (char *)&v32 - v16;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v39 = v17;
  static ButtonRole.destructive.getter();
  uint64_t v18 = type metadata accessor for ButtonRole();
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v32(v5, 0, 1, v18);
  long long v19 = (_OWORD *)swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 48);
  v19[3] = *(_OWORD *)(a1 + 32);
  v19[4] = v20;
  v19[5] = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 16);
  v19[1] = *(_OWORD *)a1;
  v19[2] = v21;
  sub_1002F4B14((void **)a1);
  sub_1000A06D0();
  uint64_t v22 = v33;
  Button<>.init<A>(_:role:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v39 = v23;
  static ButtonRole.cancel.getter();
  v32(v5, 0, 1, v18);
  uint64_t v24 = v34;
  Button<>.init<A>(_:role:action:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  char v26 = v35;
  v25(v35, v22, v8);
  uint64_t v27 = v36;
  v25(v36, v24, v8);
  long long v28 = v37;
  v25(v37, v26, v8);
  uint64_t v29 = sub_1000AFA94(&qword_1009564D0);
  v25(&v28[*(int *)(v29 + 48)], v27, v8);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v24, v8);
  v30(v22, v8);
  v30(v27, v8);
  return ((uint64_t (*)(char *, uint64_t))v30)(v26, v8);
}

uint64_t sub_1002F3E0C(void **a1)
{
  uint64_t v2 = type metadata accessor for DataLinkCommand();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (*a1)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v6, enum case for DataLinkCommand.endMirroring(_:), v2, v4);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v8 = v7;
    swift_retain();
    dispatch thunk of DataLinkClient.send(command:acknowledged:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

    return swift_release();
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_1002F53CC((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F3FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_1002F4104@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009564C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000AFA94(&qword_10094E150);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v36 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v32 - v12;
  __chkstk_darwin(v13);
  uint64_t v34 = (char *)&v32 - v14;
  __chkstk_darwin(v15);
  uint64_t v33 = (char *)&v32 - v16;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v39 = v17;
  static ButtonRole.destructive.getter();
  uint64_t v18 = type metadata accessor for ButtonRole();
  uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v32(v5, 0, 1, v18);
  long long v19 = (_OWORD *)swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 48);
  v19[3] = *(_OWORD *)(a1 + 32);
  v19[4] = v20;
  v19[5] = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 16);
  v19[1] = *(_OWORD *)a1;
  v19[2] = v21;
  sub_1002F4B14((void **)a1);
  sub_1000A06D0();
  uint64_t v22 = v33;
  Button<>.init<A>(_:role:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v39 = v23;
  static ButtonRole.cancel.getter();
  v32(v5, 0, 1, v18);
  uint64_t v24 = v34;
  Button<>.init<A>(_:role:action:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  char v26 = v35;
  v25(v35, v22, v8);
  uint64_t v27 = v36;
  v25(v36, v24, v8);
  long long v28 = v37;
  v25(v37, v26, v8);
  uint64_t v29 = sub_1000AFA94(&qword_1009564D0);
  v25(&v28[*(int *)(v29 + 48)], v27, v8);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v24, v8);
  v30(v22, v8);
  v30(v27, v8);
  return ((uint64_t (*)(char *, uint64_t))v30)(v26, v8);
}

void sub_1002F45B0(id *a1)
{
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  if (*a1)
  {
    id v2 = *a1;
    sub_100443940(0);
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_1002F53CC((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_1002F467C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F2A68(a1);
}

uint64_t sub_1002F46C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = v11;
  *(void *)(a5 + 40) = v12;
  *(unsigned char *)(a5 + 48) = v11;
  *(void *)(a5 + 56) = v12;
  *(unsigned char *)(a5 + 64) = v11;
  *(void *)(a5 + 72) = v12;
  return result;
}

uint64_t destroy for MirrorExtraControlsView(id *a1)
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  id v6 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorExtraControlsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorExtraControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorExtraControlsView()
{
  return &type metadata for MirrorExtraControlsView;
}

uint64_t sub_1002F4AA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002F4AC4()
{
  return State.wrappedValue.setter();
}

void **sub_1002F4B14(void **a1)
{
  unint64_t v2 = *a1;
  swift_retain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1002F4B7C@<X0>(char *a1@<X8>)
{
  return sub_1002F3960(*(void *)(v1 + 16), a1);
}

unint64_t sub_1002F4B84()
{
  unint64_t result = qword_1009564A0;
  if (!qword_1009564A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009564A0);
  }
  return result;
}

uint64_t sub_1002F4BDC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1002F4C34()
{
  return swift_deallocObject();
}

uint64_t sub_1002F4C44@<X0>(char *a1@<X8>)
{
  return sub_1002F4104(*(void *)(v1 + 16), a1);
}

unint64_t sub_1002F4C4C()
{
  unint64_t result = qword_1009564B8;
  if (!qword_1009564B8)
  {
    sub_1000A1370(&qword_1009564B0);
    sub_1002F4B84();
    sub_1000A132C(&qword_10094C930, &qword_10094C938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009564B8);
  }
  return result;
}

void sub_1002F4CF0()
{
  sub_1002F45B0((id *)(v0 + 16));
}

uint64_t sub_1002F4CFC()
{
  return sub_1002F3E0C((void **)(v0 + 16));
}

uint64_t sub_1002F4D04()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002F4D3C(char a1, uint64_t a2)
{
  return sub_1004436B8(a1, a2);
}

uint64_t destroy for MirrorExtraControlsButton()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MirrorExtraControlsButton()
{
  return &type metadata for MirrorExtraControlsButton;
}

uint64_t sub_1002F4F68()
{
  return sub_1002F4FCC(&qword_1009564D8, &qword_100956478, (void (*)(void))sub_1002F4FA4);
}

uint64_t sub_1002F4FA4()
{
  return sub_1002F4FCC(&qword_1009564E0, &qword_100956470, (void (*)(void))sub_1002F504C);
}

uint64_t sub_1002F4FCC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002F504C()
{
  unint64_t result = qword_1009564E8;
  if (!qword_1009564E8)
  {
    sub_1000A1370(&qword_100956468);
    sub_1000A132C(&qword_1009564F0, &qword_100956460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009564E8);
  }
  return result;
}

uint64_t sub_1002F50EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002F5108()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002F5160()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_1002F5188@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002F1CB8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002F5190(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002F51F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F5264(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002F5308()
{
  unint64_t result = qword_100956560;
  if (!qword_100956560)
  {
    sub_1000A1370(&qword_100956568);
    sub_1000A132C(&qword_100956570, &qword_100956578);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956560);
  }
  return result;
}

uint64_t sub_1002F53CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002F541C()
{
  unint64_t result = qword_100956588;
  if (!qword_100956588)
  {
    sub_1000A1370(&qword_100956530);
    sub_1000A1370(&qword_10094BFB8);
    type metadata accessor for CircularProgressViewStyle();
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    sub_1002F53CC(&qword_100956580, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100956590, &qword_10094C440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956588);
  }
  return result;
}

uint64_t sub_1002F5564()
{
  return sub_1002F5264(&qword_1009565A0, &qword_100956518, (void (*)(void))sub_1002F55A0);
}

unint64_t sub_1002F55A0()
{
  unint64_t result = qword_1009565A8;
  if (!qword_1009565A8)
  {
    sub_1000A1370(&qword_100956500);
    sub_1000A132C(&qword_1009565B0, &qword_1009564F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009565A8);
  }
  return result;
}

char *sub_1002F5640(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource] = 0;
  sub_1001F0F7C(a1, (uint64_t)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel]);
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext] = a4;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fiuiFormattingManager] = a3;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_historyDataProvider] = a2;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_healthStore] = a5;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_model] = a6;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_badgeImageFactory] = a7;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_friendListManager] = a8;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementLocalizationProvider] = a9;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_pauseRingsCoordinator] = a10;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementResourceProvider] = a11;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_awardsDataProvider] = a12;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackFormattingManager] = a13;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager] = a14;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager] = a15;
  v76.receiver = v15;
  v76.super_class = (Class)type metadata accessor for StackDetailViewController();
  id v64 = a4;
  id v22 = a3;
  uint64_t v67 = a2;
  id v23 = a5;
  id v63 = a6;
  id v62 = a7;
  id v70 = a8;
  id v65 = a9;
  id v24 = a10;
  id v66 = a11;
  id v71 = a12;
  id v72 = a13;
  id v73 = a14;
  id v74 = a15;
  id v25 = [super initWithNibName:0 bundle:0];
  char v26 = self;
  uint64_t v27 = (char *)v25;
  id v28 = [v26 detailViewDateFormatter];
  type metadata accessor for FitnessPlusStackViewModel();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v30 = [v28 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 setTitle:v31];

  id v32 = [v27 navigationItem];
  [v32 setLargeTitleDisplayMode:2];

  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v34 = result;
  uint64_t v61 = v24;
  [result setSeparatorStyle:0];

  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v36 = result;
  id v37 = objc_allocWithZone((Class)UITableViewDiffableDataSource);
  aBlock[4] = sub_1002F8098;
  aBlock[5] = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A0CBC;
  void aBlock[3] = &unk_1008C0D58;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  id v39 = [v37 initWithTableView:v36 cellProvider:v38];

  _Block_release(v38);
  swift_release();
  uint64_t v40 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource];
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource] = v39;

  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v41 = result;
  type metadata accessor for StackDetailHeaderCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v43 = String._bridgeToObjectiveC()();
  [v41 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v43];

  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v44 = result;
  type metadata accessor for StackDetailSideBySideItemsCell();
  uint64_t v45 = swift_getObjCClassFromMetadata();
  NSString v46 = String._bridgeToObjectiveC()();
  [v44 registerClass:v45 forCellReuseIdentifier:v46];

  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v47 = result;
  type metadata accessor for WorkoutsListTableViewCell();
  uint64_t v48 = swift_getObjCClassFromMetadata();
  NSString v49 = String._bridgeToObjectiveC()();
  [v47 registerClass:v48 forCellReuseIdentifier:v49];

  unint64_t result = (char *)[v27 tableView];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v50 = result;
  type metadata accessor for MindfulnessSessionListTableViewCell();
  uint64_t v51 = swift_getObjCClassFromMetadata();
  NSString v52 = String._bridgeToObjectiveC()();
  [v50 registerClass:v51 forCellReuseIdentifier:v52];

  sub_1002F5F6C();
  uint64_t v53 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_1002F80A0;
  *(void *)(v54 + 24) = v53;
  uint64_t v55 = &v67[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess();
  uint64_t v56 = *(void **)v55;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v55 = v56;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v56 = sub_10001E94C(0, v56[2] + 1, 1, v56);
    *(void *)uint64_t v55 = v56;
  }
  unint64_t v59 = v56[2];
  unint64_t v58 = v56[3];
  if (v59 >= v58 >> 1)
  {
    uint64_t v56 = sub_10001E94C((void *)(v58 > 1), v59 + 1, 1, v56);
    *(void *)uint64_t v55 = v56;
  }
  v56[2] = v59 + 1;
  uint64_t v60 = &v56[2 * v59];
  v60[4] = sub_100020A6C;
  v60[5] = v54;
  swift_endAccess();
  swift_release();

  swift_release();
  sub_1001F0FE0(a1);
  swift_release();
  return v27;
}

void sub_1002F5DF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1002F5F6C();
  }
  swift_beginAccess();
  unint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 tableView];

    if (v4)
    {
      [v4 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002F5F6C()
{
  swift_getObjectType();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  unint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    id v4 = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10008F1F4(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10008F1F4(0xD000000000000012, 0x80000001007B7F90, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v3, "%s::%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v8 = (void *)sub_1002F6134();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource);
  if (v9)
  {
    id v10 = v9;
    [v10 applySnapshot:v8 animatingDifferences:1];
  }
}

uint64_t sub_1002F6134()
{
  v38[1] = swift_getObjectType();
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = [objc_allocWithZone((Class)NSDiffableDataSourceSnapshot) init];
  uint64_t v5 = v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel;
  uint64_t v6 = *(void *)(v5 + *(int *)(type metadata accessor for FitnessPlusStackViewModel() + 20));
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v42 = v6 + 32;
  uint64_t v41 = &v48;
  uint64_t v40 = (uint64_t)&v49 + 8;
  uint64_t v45 = (long long *)v53;
  uint64_t v8 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v43 = v6;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v10 = 0;
  uint64_t v11 = _swiftEmptyArrayStorage;
  unint64_t v44 = 0x80000001007B7F50;
  if (v7) {
    goto LABEL_3;
  }
LABEL_2:
  long long v50 = 0u;
  long long v51 = 0u;
  unint64_t v10 = v7;
  long long v49 = 0u;
  while (1)
  {
    sub_1002F8428((uint64_t)&v49, (uint64_t)&v52);
    if (!v53[3]) {
      break;
    }
    uint64_t v13 = v52;
    sub_100093E60(v45, (uint64_t)&v49);
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    unint64_t v47 = 0xD000000000000012;
    unint64_t v48 = v44;
    NSString v46 = v13;
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = 45;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    uint64_t v17 = *((void *)&v50 + 1);
    uint64_t v16 = v51;
    sub_10007E4EC(&v49, *((uint64_t *)&v50 + 1));
    (*(void (**)(uint64_t, uint64_t))(v16 + 48))(v17, v16);
    sub_1000678CC((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
    v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    (*v8)(v4, v1);
    unint64_t v19 = v47;
    unint64_t v20 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100084014(0, v11[2] + 1, 1, v11);
    }
    unint64_t v22 = v11[2];
    unint64_t v21 = v11[3];
    if (v22 >= v21 >> 1) {
      uint64_t v11 = sub_100084014((void *)(v21 > 1), v22 + 1, 1, v11);
    }
    void v11[2] = v22 + 1;
    id v23 = &v11[2 * v22];
    v23[4] = v19;
    v23[5] = v20;
    uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v49);
    if (v10 == v7) {
      goto LABEL_2;
    }
LABEL_3:
    if (v10 >= *(void *)(v43 + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = (long long *)v41;
    sub_10008E75C(v42 + 40 * v10, (uint64_t)v41);
    *(void *)&long long v49 = v10;
    sub_100093E60(v12, v40);
    ++v10;
  }
  swift_bridgeObjectRelease();
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1007509E0;
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 32) = 0xD000000000000011;
  *(void *)(v24 + 40) = 0x80000001007C0020;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = v39;
  [v39 appendSectionsWithIdentifiers:isa];

  NSString v52 = &off_1008B2C10;
  sub_1001E3F2C((uint64_t)v11);
  sub_1001E5134((uint64_t)v52);
  swift_bridgeObjectRelease();
  Class v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 appendItemsWithIdentifiers:v27];

  os_log_type_t v28 = static os_log_type_t.default.getter();
  uint64_t v29 = (void *)HKLogActivity;
  os_log_type_t v30 = v28;
  if (os_log_type_enabled(HKLogActivity, v28))
  {
    id v31 = v26;
    uint64_t v45 = v29;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    NSString v52 = (_UNKNOWN **)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315650;
    uint64_t v34 = _typeName(_:qualified:)();
    *(void *)&long long v49 = sub_10008F1F4(v34, v35, (uint64_t *)&v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    *(void *)&long long v49 = sub_10008F1F4(0x70616E53656B616DLL, 0xEE002928746F6873, (uint64_t *)&v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 22) = 2112;
    *(void *)&long long v49 = v31;
    id v36 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v31;

    id v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v45, v30, "%s::%s snapshot %@", (uint8_t *)v32, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    id v26 = v39;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  return (uint64_t)v26;
}

void *sub_1002F67AC(void *a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for FitnessPlusStackViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    if (IndexPath.row.getter())
    {
      if (IndexPath.row.getter() != 1)
      {
        uint64_t v12 = sub_1002F6D30(a2);
        goto LABEL_11;
      }
      uint64_t v9 = (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel];
      sub_1001F0F7C((uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel], (uint64_t)v6);
      sub_1002F80E0((uint64_t)v21);
      sub_1001F0FE0((uint64_t)v6);
      NSString v10 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      uint64_t v12 = [a1 dequeueReusableCellWithIdentifier:v10 forIndexPath:isa];

      type metadata accessor for StackDetailSideBySideItemsCell();
      if (swift_dynamicCastClass())
      {
        sub_1001F0F7C(v9, (uint64_t)v6);
        uint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackFormattingManager];
        uint64_t v12 = v12;
        sub_100332380((uint64_t)v6, v13, v21);

LABEL_9:
        sub_1001F0FE0((uint64_t)v6);
      }
    }
    else
    {
      NSString v14 = String._bridgeToObjectiveC()();
      Class v15 = IndexPath._bridgeToObjectiveC()().super.isa;
      uint64_t v12 = [a1 dequeueReusableCellWithIdentifier:v14 forIndexPath:v15];

      type metadata accessor for StackDetailHeaderCell();
      if (swift_dynamicCastClass())
      {
        sub_1001F0F7C((uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel], (uint64_t)v6);
        uint64_t v16 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = a1;
        uint64_t v12 = v12;
        id v18 = a1;
        sub_100360260((uint64_t)v6, v16, (uint64_t)sub_1002F83D4, v17);

        swift_release();
        goto LABEL_9;
      }
    }
LABEL_11:

    return v12;
  }
  return 0;
}

uint64_t sub_1002F6A64(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  aBlock[4] = sub_1002F83DC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008C0DF8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000678CC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v15);
}

void *sub_1002F6D30(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel];
  uint64_t v9 = *(void **)&v8[*(int *)(type metadata accessor for FitnessPlusStackViewModel() + 20)];
  swift_bridgeObjectRetain();
  uint64_t v10 = IndexPath.row.getter();
  unint64_t v11 = v10 - 2;
  if (__OFSUB__(v10, 2))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= v9[2])
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_10008E75C((uint64_t)&v9[5 * v11 + 4], (uint64_t)v58);
  swift_bridgeObjectRelease();
  sub_10008E75C((uint64_t)v58, (uint64_t)v59);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (swift_dynamicCast())
  {
    v41[1] = v7;

    uint64_t result = [v3 tableView];
    if (result)
    {
      uint64_t v13 = result;
      NSString v14 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v16 = [v13 dequeueReusableCellWithIdentifier:v14 forIndexPath:isa];

      sub_10008E75C((uint64_t)v58, (uint64_t)v59);
      uint64_t v9 = v16;
      if (swift_dynamicCast())
      {
        uint64_t v17 = (void *)v42;
        type metadata accessor for WorkoutsListTableViewCell();
        if (swift_dynamicCastClass())
        {
          id v18 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
          unint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager];
          unint64_t v20 = v9;
          sub_1001B430C(v17, v18, v19, 0, 1, 0, 0);
        }
        unint64_t v21 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager];
        id v22 = v17;
        sub_10020F97C(v22, v21, v59);
        *(void *)&long long v42 = _swiftEmptyArrayStorage;
        sub_1001B5A54((uint64_t)v59);
        sub_1000678CC((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
        sub_1000AFA94((uint64_t *)&unk_10096AA80);
        sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        long long v54 = v59[12];
        long long v55 = v59[13];
        long long v56 = v59[14];
        long long v57 = v59[15];
        long long v50 = v59[8];
        long long v51 = v59[9];
        long long v52 = v59[10];
        long long v53 = v59[11];
        long long v46 = v59[4];
        long long v47 = v59[5];
        long long v48 = v59[6];
        long long v49 = v59[7];
        long long v42 = v59[0];
        long long v43 = v59[1];
        long long v44 = v59[2];
        long long v45 = v59[3];
        id v23 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
        sub_1001B5C6C();
        uint64_t v24 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
        UIView.annotate(with:)();

        sub_1001B5CC0((uint64_t)v59);
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_29;
  }
  uint64_t result = [v3 tableView];
  if (result)
  {
    id v25 = result;
    NSString v26 = String._bridgeToObjectiveC()();
    Class v27 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v28 = [v25 dequeueReusableCellWithIdentifier:v26 forIndexPath:v27];

    sub_10008E75C((uint64_t)v58, (uint64_t)v59);
    type metadata accessor for MindfulnessSessionViewModel();
    uint64_t v9 = v28;
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_20:

      goto LABEL_21;
    }
    uint64_t v2 = (void *)v42;
    type metadata accessor for MindfulnessSessionListTableViewCell();
    if (swift_dynamicCastClass())
    {
      uint64_t v29 = *(char **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
      os_log_type_t v30 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager];
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v32 = v9;
      swift_retain();
      sub_100536384(v2, v29, v30, (uint64_t)sub_1001D7D10, v31);

      swift_release_n();
    }
    unint64_t v33 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
    a1 = v33;
    if (!(v33 >> 62))
    {
      uint64_t result = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (result) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
LABEL_25:
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    if (result)
    {
LABEL_16:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        id v34 = *(id *)(a1 + 32);
      }
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      id v36 = v35;
      id v37 = (void *)sub_1002DEC18(v36);
      *(void *)&v59[0] = _swiftEmptyArrayStorage;
      sub_1000678CC((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      id v38 = v37;
      sub_1000AFA94((uint64_t *)&unk_10096AA80);
      sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      *(void *)&v59[0] = v38;
      id v39 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      sub_1002DE698();
      uint64_t v40 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      UIView.annotate(with:)();

LABEL_21:
      [v9 setSelectionStyle:0];
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v58);
      return v9;
    }
LABEL_26:

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1002F7458()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for FitnessPlusStackViewModel() + 20));
  swift_bridgeObjectRetain();
  uint64_t v3 = IndexPath.row.getter();
  unint64_t v4 = v3 - 2;
  if (__OFSUB__(v3, 2))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 >= *(void *)(v2 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10008E75C(v2 + 40 * v4 + 32, (uint64_t)v14);
  swift_bridgeObjectRelease();
  sub_10008E75C((uint64_t)v14, (uint64_t)v13);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  type metadata accessor for MindfulnessSessionViewModel();
  if (swift_dynamicCast())
  {

    sub_10008E75C((uint64_t)v14, (uint64_t)v13);
    if (swift_dynamicCast())
    {
      uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext);
      uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager);
      objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
      uint64_t v7 = sub_10039EDA8(v12, v5, v6);
    }
    else
    {
      uint64_t v7 = (char *)[objc_allocWithZone((Class)UIViewController) initWithNibName:0 bundle:0];
    }
    uint64_t v9 = v7;
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v14);
    return (uint64_t)v9;
  }
  sub_10008E75C((uint64_t)v14, (uint64_t)v13);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (swift_dynamicCast())
  {
    LOBYTE(v11) = 1;
    uint64_t v8 = (char *)objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:shouldExposeDeepLinkToTrainingLoadFromEffort:", v12, 0, *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_healthStore), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_model), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager), *(void *)(*(void *)(v0+ OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_historyDataProvider)+ OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_badgeImageFactory), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_friendListManager), *(void *)(v0+ OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementLocalizationProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_pauseRingsCoordinator), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementResourceProvider),
                   *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fiuiFormattingManager),
                   *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_awardsDataProvider),
                   v11);
    if (v8)
    {
      uint64_t v9 = v8;
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v14);

      return (uint64_t)v9;
    }
  }
LABEL_16:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1002F7A64(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  uint64_t v11 = IndexPath.row.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if (v11)
  {
    uint64_t v12 = IndexPath.row.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v12 != 1)
    {
      id v13 = [v3 navigationController];
      if (v13)
      {
        NSString v14 = v13;
        uint64_t v15 = (void *)sub_1002F7458();
        [v14 pushViewController:v15 animated:1];
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

id sub_1002F7DE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailViewController();
  return [super dealloc];
}

uint64_t sub_1002F7F4C()
{
  return type metadata accessor for StackDetailViewController();
}

uint64_t type metadata accessor for StackDetailViewController()
{
  uint64_t result = qword_100956660;
  if (!qword_100956660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002F7FA0()
{
  uint64_t result = type metadata accessor for FitnessPlusStackViewModel();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1002F8060()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void *sub_1002F8098(void *a1, unint64_t a2)
{
  return sub_1002F67AC(a1, a2);
}

void sub_1002F80A0()
{
}

uint64_t sub_1002F80A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002F80E0@<X0>(uint64_t a1@<X8>)
{
  sub_1000AFA94(&qword_10094F2C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(double *)(inited + 32) = sub_1003D51AC();
  *(unsigned char *)(inited + 40) = 0;
  if (sub_1003D5278() > 0.0)
  {
    double v3 = sub_1003D5278();
    uint64_t inited = (uint64_t)sub_1001E7B9C((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(double *)(inited + 48) = v3;
    *(unsigned char *)(inited + 56) = 1;
  }
  sub_1003D53E8();
  if (v4 > 0.0)
  {
    sub_1003D53E8();
    uint64_t v6 = v5;
    unint64_t v8 = *(void *)(inited + 16);
    unint64_t v7 = *(void *)(inited + 24);
    if (v8 >= v7 >> 1) {
      uint64_t inited = (uint64_t)sub_1001E7B9C((void *)(v7 > 1), v8 + 1, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v8 + 1;
    uint64_t v9 = inited + 16 * v8;
    *(void *)(v9 + 32) = v6;
    *(unsigned char *)(v9 + 40) = 2;
  }
  sub_1003D55BC();
  if (v10 > 0.0)
  {
    sub_1003D55BC();
    uint64_t v12 = v11;
    unint64_t v14 = *(void *)(inited + 16);
    unint64_t v13 = *(void *)(inited + 24);
    unint64_t v15 = v14 + 1;
    if (v14 >= v13 >> 1) {
      uint64_t inited = (uint64_t)sub_1001E7B9C((void *)(v13 > 1), v14 + 1, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v15;
    uint64_t v16 = inited + 16 * v14;
    *(void *)(v16 + 32) = v12;
    *(unsigned char *)(v16 + 40) = 3;
LABEL_11:
    switch(v15)
    {
      case 0uLL:
        __break(1u);
        return result;
      case 1uLL:
        uint64_t v17 = *(void *)(inited + 32);
        unsigned int v18 = *(unsigned __int8 *)(inited + 40);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        char v25 = 0;
        goto LABEL_17;
      case 2uLL:
        unsigned int v18 = *(unsigned __int8 *)(inited + 40);
        uint64_t v17 = *(void *)(inited + 32);
        uint64_t v20 = *(void *)(inited + 48);
        unsigned int v21 = *(unsigned __int8 *)(inited + 56);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        char v25 = 64;
        goto LABEL_17;
      case 3uLL:
        uint64_t v17 = *(void *)(inited + 32);
        unsigned int v18 = *(unsigned __int8 *)(inited + 40);
        unsigned int v21 = *(unsigned __int8 *)(inited + 56);
        uint64_t v20 = *(void *)(inited + 48);
        uint64_t v22 = *(void *)(inited + 64);
        unsigned int v23 = *(unsigned __int8 *)(inited + 72);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v24 = 0;
        char v25 = 0x80;
        goto LABEL_17;
      default:
        goto LABEL_14;
    }
  }
  unint64_t v15 = *(void *)(inited + 16);
  if (v15 <= 3) {
    goto LABEL_11;
  }
LABEL_14:
  uint64_t v17 = *(void *)(inited + 32);
  unsigned int v18 = *(unsigned __int8 *)(inited + 40);
  uint64_t v20 = *(void *)(inited + 48);
  unsigned int v21 = *(unsigned __int8 *)(inited + 56);
  unsigned int v23 = *(unsigned __int8 *)(inited + 72);
  uint64_t v22 = *(void *)(inited + 64);
  uint64_t v24 = *(void *)(inited + 80);
  char v26 = *(unsigned char *)(inited + 88);
  uint64_t result = swift_bridgeObjectRelease();
  char v25 = v26 | 0xC0;
LABEL_17:
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v20;
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v23;
  *(void *)(a1 + 48) = v24;
  *(unsigned char *)(a1 + 56) = v25;
  return result;
}

uint64_t sub_1002F839C()
{
  return swift_deallocObject();
}

uint64_t sub_1002F83D4()
{
  return sub_1002F6A64(*(void **)(v0 + 16));
}

id sub_1002F83DC()
{
  unint64_t v1 = *(void **)(v0 + 16);
  [v1 beginUpdates];

  return [v1 endUpdates];
}

uint64_t sub_1002F8428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100956670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002F849C()
{
  unint64_t result = qword_100956678;
  if (!qword_100956678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956678);
  }
  return result;
}

unint64_t sub_1002F84F4()
{
  unint64_t result = qword_100956680;
  if (!qword_100956680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956680);
  }
  return result;
}

uint64_t sub_1002F8548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002F8564()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002F8580(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997B80);
}

uint64_t sub_1002F85A4@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100956BC8);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000AFA94(&qword_100956BD0);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_1000AFA94(&qword_100956BB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v14 - v8;
  sub_1003128D4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x80000001007C07B0;
  v10._countAndFlagsBits = 0xD000000000000018;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956BD8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_1000A132C(&qword_100956BB8, &qword_100956BB0);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
}

uint64_t sub_1002F8864()
{
  uint64_t v0 = sub_1000AFA94(&qword_100956BC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_100956BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1003128D4();
  ParameterSummaryString.init(stringLiteral:)();
  IntentParameterSummary.init(_:table:_:)();
  sub_1000A132C(&qword_100956BB8, &qword_100956BB0);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t sub_1002F8A80()
{
  swift_getKeyPath();
  sub_1003128D4();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751040;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1002F8B48(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B890);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002F8CC4, 0, 0);
}

uint64_t sub_1002F8CC4()
{
  if (qword_10094AF88 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = (void *)qword_100998620;
  IntentParameter.wrappedValue.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v5 = v0[8];
    Date.init()();
    sub_10008DB18(v5, (uint64_t *)&unk_10095B890);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[10] + 32))(v0[11], v0[8], v0[9]);
  }
  uint64_t v7 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  uint64_t v11 = v0[4];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  id v13 = [v4 stringFromDate:isa];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    sub_10008DB18(v0[4], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[6] + 32))(v0[7], v0[4], v0[5]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v19 = v0[6];
    uint64_t v18 = v0[7];
    uint64_t v20 = v0[5];
    sub_100539564(v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1002F8FA4@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A908, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997B80, a1);
}

uint64_t sub_1002F8FDC()
{
  uint64_t HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator();
  uint64_t v1 = *(void *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  sub_1000AFA94(&qword_100956BB0);
  sub_1000A132C(&qword_100956BB8, &qword_100956BB0);
  sub_1000A132C(&qword_100956BC0, &qword_100956910);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)();
}

uint64_t sub_1002F917C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  return sub_1002F8B48(a1, v4);
}

uint64_t sub_1002F921C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10030D3F8();
  *a1 = result;
  return result;
}

uint64_t sub_1002F9244(uint64_t a1)
{
  unint64_t v2 = sub_1003128D4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002F9284()
{
  unint64_t result = qword_100956690;
  if (!qword_100956690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956690);
  }
  return result;
}

unint64_t sub_1002F92DC()
{
  unint64_t result = qword_100956698;
  if (!qword_100956698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956698);
  }
  return result;
}

uint64_t sub_1002F9330()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002F9364()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002F9380(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997B98);
}

uint64_t sub_1002F93A4()
{
  uint64_t v0 = sub_1000AFA94(&qword_100956B88);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_100956B90);
  __chkstk_darwin(v1);
  sub_1003127B0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001007C0730;
  v2._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956B98);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7379616420;
  v3._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1002F953C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1002F9560()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1002F9594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  unsigned char v4[6] = a4;
  v4[3] = a1;
  void v4[4] = a2;
  uint64_t v5 = type metadata accessor for IntentDialog();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date.FormatStyle.TimeStyle();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date.FormatStyle.DateStyle();
  v4[13] = v7;
  v4[14] = *(void *)(v7 - 8);
  v4[15] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v4[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Calendar();
  v4[17] = v8;
  v4[18] = *(void *)(v8 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Calendar.Component();
  v4[20] = v9;
  v4[21] = *(void *)(v9 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v4[23] = v10;
  v4[24] = *(void *)(v10 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = type metadata accessor for MainActor();
  v4[28] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[29] = v12;
  v4[30] = v11;
  return _swift_task_switch(sub_1002F9898, v12, v11);
}

uint64_t sub_1002F9898()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[26];
  uint64_t v20 = v0 + 36;
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v18 = v0[23];
  uint64_t v7 = v0[20];
  uint64_t v6 = v0[21];
  uint64_t v8 = v0[19];
  uint64_t v9 = v1[18];
  uint64_t v15 = v1[17];
  uint64_t v16 = v2;
  uint64_t v17 = v1[6];
  long long v19 = *((_OWORD *)v1 + 2);
  Date.init()();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for Calendar.Component.day(_:), v7);
  IntentParameter.wrappedValue.getter();
  static Calendar.current.getter();
  Date.byAdding(component:value:calendar:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v15);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v1[31] = v10;
  v1[32] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v3, v18);
  uint64_t v11 = static MainActor.shared.getter();
  v1[33] = v11;
  uint64_t v12 = swift_task_alloc();
  v1[34] = v12;
  *(_OWORD *)(v12 + 16) = v19;
  *(void *)(v12 + 32) = v17;
  *(void *)(v12 + 40) = v16;
  id v13 = (void *)swift_task_alloc();
  v1[35] = v13;
  *id v13 = v1;
  v13[1] = sub_1002F9AB4;
  return withCheckedContinuation<A>(isolation:function:_:)(v20, v11, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_100312804, v12, &type metadata for Bool);
}

uint64_t sub_1002F9AB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_1002F9C14, v3, v2);
}

id sub_1002F9C14()
{
  swift_release();
  if (*(unsigned char *)(v0 + 288) == 1)
  {
    id result = [self sharedBehavior];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v2 = result;
    id v28 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v26 = *(void *)(v0 + 56);
    uint64_t v27 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 72);
    unsigned int v9 = [result isStandalonePhoneFitnessMode];

    if (v9) {
      uint64_t v10 = (void *)0x80000001007C0710;
    }
    else {
      uint64_t v10 = (void *)0x80000001007C06F0;
    }
    if (v9) {
      uint64_t v11 = 0xD000000000000017;
    }
    else {
      uint64_t v11 = 0xD00000000000001CLL;
    }
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    static Date.FormatStyle.DateStyle.complete.getter();
    static Date.FormatStyle.TimeStyle.omitted.getter();
    uint64_t v13 = Date.formatted(date:time:)();
    uint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v23);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v24);
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 46;
    v17._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
    IntentDialog.init(stringInterpolation:)();
    static IntentResult.result<>(dialog:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v25, v26);
    v28(v3, v27);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    long long v19 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 184);
    sub_1003120D4();
    swift_allocError();
    *uint64_t v22 = 2;
    swift_willThrow();
    v19(v20, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return (id)v18();
}

void sub_1002F9F44(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)aBlock[0];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_100312134;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = &unk_1008C15F8;
  unsigned int v9 = _Block_copy(aBlock);
  swift_release();
  [v5 pauseRingsUntilDate:isa completionHandler:v9];
  _Block_release(v9);
}

uint64_t sub_1002FA11C@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A910, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997B98, a1);
}

uint64_t sub_1002FA158(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1002F9594(a1, v4, v5, v6);
}

uint64_t sub_1002FA20C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10030D764();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1002FA238(uint64_t a1)
{
  unint64_t v2 = sub_1003127B0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1002FA274(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997BB0);
}

uint64_t sub_1002FA29C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1002FA2C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100956B10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  __chkstk_darwin(v1);
  uint64_t v24 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)v22 - v5;
  uint64_t v6 = sub_1000AFA94(&qword_100956B18);
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - v10;
  __chkstk_darwin(v12);
  uint64_t v23 = (char *)v22 - v13;
  char v33 = 1;
  uint64_t v30 = sub_1000AFA94(&qword_100956B20);
  v22[0] = sub_10031267C();
  unint64_t v29 = sub_1002FB470();
  v22[1] = sub_1000A132C(&qword_100956B28, &qword_100956B20);
  ParameterSummaryCaseCondition.init(_:_:)();
  sub_1000A132C(&qword_100956B30, &qword_100956B18);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v14 = v31 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v31 + 8);
  v15(v11, v6);
  uint64_t v31 = v14;
  char v32 = 4;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  v15(v8, v6);
  Swift::String v16 = v24;
  ParameterSummaryDefaultCaseCondition.init(_:)();
  sub_1000A132C(&qword_100956B38, &qword_100956B10);
  Swift::String v17 = v25;
  uint64_t v18 = v26;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  long long v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v19(v16, v18);
  uint64_t v20 = v23;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)();
  v19(v17, v18);
  v15(v11, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v20, v6);
}

uint64_t sub_1002FA75C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002FA7A8((uint64_t)&unk_10075DDD8, &qword_100956B60, a1);
}

uint64_t sub_1002FA770()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1002FA794@<X0>(uint64_t a1@<X8>)
{
  return sub_1002FA7A8((uint64_t)&unk_10075DDB0, &qword_100956B58, a1);
}

uint64_t sub_1002FA7A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  v17[1] = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v3 = sub_1000AFA94(&qword_100956B40);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000AFA94(&qword_100956B48);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100956B20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - v10;
  sub_10031267C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001007C0670;
  v12._countAndFlagsBits = 0xD000000000000011;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956B50);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  sub_1000AFA94(v18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_1000A132C(&qword_100956B28, &qword_100956B20);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v8, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v5);
}

uint64_t sub_1002FAAA8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1002FAACC@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100956B40);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000AFA94(&qword_100956B48);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_1000AFA94(&qword_100956B20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v14 - v8;
  sub_10031267C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x80000001007C0670;
  v10._countAndFlagsBits = 0xD000000000000011;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956B50);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_1000A132C(&qword_100956B28, &qword_100956B20);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  Swift::String v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
}

uint64_t sub_1002FAD8C(uint64_t a1)
{
  return sub_1003032E4(a1, qword_100997BC8);
}

uint64_t sub_1002FADA8()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1002FADDC()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1002FAE14()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1002FAE38(unsigned __int8 *a1, char *a2)
{
  return sub_10047F068(*a1, *a2);
}

unint64_t sub_1002FAE48()
{
  unint64_t result = qword_1009566A8;
  if (!qword_1009566A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566A8);
  }
  return result;
}

Swift::Int sub_1002FAE9C()
{
  return Hasher._finalize()();
}

uint64_t sub_1002FAFAC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002FB0A4()
{
  return Hasher._finalize()();
}

unint64_t sub_1002FB1B0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10030E074(*a1);
  *a2 = result;
  return result;
}

void sub_1002FB1E0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x796144664F646E65;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007379;
      uint64_t v3 = 0x61446D6F74737563;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656557664F646E65;
      *(void *)(a1 + 8) = 0xE90000000000006BLL;
      break;
    case 3:
      *(void *)a1 = 0x6E6F4D664F646E65;
      *(void *)(a1 + 8) = 0xEA00000000006874;
      break;
    case 4:
      strcpy((char *)a1, "specificDate");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1002FB2B8()
{
  unint64_t result = qword_1009566B0;
  if (!qword_1009566B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566B0);
  }
  return result;
}

unint64_t sub_1002FB310()
{
  unint64_t result = qword_1009566B8;
  if (!qword_1009566B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566B8);
  }
  return result;
}

unint64_t sub_1002FB368()
{
  unint64_t result = qword_1009566C0;
  if (!qword_1009566C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566C0);
  }
  return result;
}

unint64_t sub_1002FB3C0()
{
  unint64_t result = qword_1009566C8;
  if (!qword_1009566C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566C8);
  }
  return result;
}

unint64_t sub_1002FB418()
{
  unint64_t result = qword_1009566D0;
  if (!qword_1009566D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566D0);
  }
  return result;
}

unint64_t sub_1002FB470()
{
  unint64_t result = qword_1009566D8;
  if (!qword_1009566D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566D8);
  }
  return result;
}

unint64_t sub_1002FB4C8()
{
  unint64_t result = qword_1009566E0;
  if (!qword_1009566E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566E0);
  }
  return result;
}

uint64_t sub_1002FB51C@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A920, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100997BC8, a1);
}

uint64_t sub_1002FB554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_1002FB580);
}

unint64_t sub_1002FB580()
{
  unint64_t result = qword_1009566E8;
  if (!qword_1009566E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566E8);
  }
  return result;
}

uint64_t sub_1002FB5D4(uint64_t a1)
{
  unint64_t v2 = sub_1002FB580();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002FB624()
{
  unint64_t result = qword_1009566F0;
  if (!qword_1009566F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566F0);
  }
  return result;
}

unint64_t sub_1002FB67C()
{
  unint64_t result = qword_1009566F8;
  if (!qword_1009566F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009566F8);
  }
  return result;
}

unint64_t sub_1002FB6D4()
{
  unint64_t result = qword_100956700;
  if (!qword_100956700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956700);
  }
  return result;
}

uint64_t sub_1002FB72C(uint64_t a1)
{
  unint64_t v2 = sub_1002FB4C8();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002FB778()
{
  return sub_1000A132C(&qword_100956708, &qword_100956710);
}

void sub_1002FB7B4(void *a1@<X8>)
{
  *a1 = &off_1008B5C40;
}

unint64_t sub_1002FB7C8()
{
  unint64_t result = qword_100956718;
  if (!qword_100956718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956718);
  }
  return result;
}

unint64_t sub_1002FB820()
{
  unint64_t result = qword_100956720;
  if (!qword_100956720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956720);
  }
  return result;
}

uint64_t sub_1002FB874()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002FB8A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002FB8C4(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for IntentDialog();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date.FormatStyle.TimeStyle();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date.FormatStyle.DateStyle();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TimeZone();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PauseRingsPeriod();
  v2[19] = v7;
  v2[20] = *(void *)(v7 - 8);
  v2[21] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v2[22] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Calendar();
  v2[23] = v8;
  v2[24] = *(void *)(v8 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Calendar.Component();
  v2[26] = v9;
  v2[27] = *(void *)(v9 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v2[29] = v10;
  v2[30] = *(void *)(v10 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B890);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = type metadata accessor for MainActor();
  v2[45] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[46] = v12;
  v2[47] = v11;
  return _swift_task_switch(sub_1002FBD58, v12, v11);
}

uint64_t sub_1002FBD58()
{
  IntentParameter.wrappedValue.getter();
  switch(*(unsigned char *)(v0 + 25))
  {
    case 1:
      IntentParameter.wrappedValue.getter();
      if ((*(unsigned char *)(v0 + 24) & 1) == 0)
      {
        uint64_t v15 = *(void *)(v0 + 16);
        if (v15 >= 1 && (unint64_t)v15 <= 0x5A)
        {
          uint64_t v16 = *(void *)(v0 + 336);
          uint64_t v99 = *(void *)(v0 + 344);
          uint64_t v17 = *(void *)(v0 + 312);
          uint64_t v18 = *(void *)(v0 + 240);
          uint64_t v19 = *(void *)(v0 + 216);
          uint64_t v20 = *(void *)(v0 + 224);
          uint64_t v22 = *(void *)(v0 + 200);
          uint64_t v21 = *(void *)(v0 + 208);
          uint64_t v23 = *(void *)(v0 + 192);
          uint64_t v96 = *(void *)(v0 + 184);
          uint64_t v97 = *(void *)(v0 + 232);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v20, enum case for Calendar.Component.day(_:), v21);
          static Calendar.current.getter();
          Date.byAdding(component:value:calendar:)();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v96);
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v97);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v97);
          sub_1000CBFEC(v16, v99);
          goto LABEL_12;
        }
      }
      uint64_t v48 = *(void *)(v0 + 176);
      uint64_t v49 = *(void *)(v0 + 48);
      uint64_t v50 = *(void *)(v0 + 56);
      swift_release();
      IntentParameter.projectedValue.getter();
      IntentDialog.init(stringLiteral:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v49);
      type metadata accessor for AppIntentError();
      sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      IntentParameter.needsValueError(_:)();
      swift_release();
      sub_10008DB18(v48, &qword_10094D320);
      swift_willThrow();
      goto LABEL_24;
    case 2:
      uint64_t v2 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 168);
      uint64_t v3 = *(void *)(v0 + 152);
      uint64_t v4 = (unsigned int *)&enum case for PauseRingsPeriod.endOfWeek(_:);
      goto LABEL_11;
    case 3:
      uint64_t v2 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 168);
      uint64_t v3 = *(void *)(v0 + 152);
      uint64_t v4 = (unsigned int *)&enum case for PauseRingsPeriod.endOfMonth(_:);
      goto LABEL_11;
    case 4:
      uint64_t v93 = *(void *)(v0 + 328);
      uint64_t v5 = *(void *)(v0 + 312);
      uint64_t v98 = *(void *)(v0 + 240);
      uint64_t v6 = *(void *)(v0 + 224);
      uint64_t v89 = *(void *)(v0 + 232);
      uint64_t v7 = *(void *)(v0 + 208);
      uint64_t v8 = *(void *)(v0 + 216);
      uint64_t v10 = *(void *)(v0 + 192);
      uint64_t v9 = *(void *)(v0 + 200);
      uint64_t v11 = *(void *)(v0 + 184);
      uint64_t v84 = v11;
      Date.init()();
      unsigned int v87 = enum case for Calendar.Component.day(_:);
      uint64_t v85 = *(void (**)(uint64_t))(v8 + 104);
      v85(v6);
      static Calendar.current.getter();
      Date.byAdding(component:value:calendar:)();
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v83(v9, v11);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v12(v6, v7);
      Swift::String v13 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      v13(v5, v89);
      Date.init()();
      ((void (*)(uint64_t, void, uint64_t))v85)(v6, v87, v7);
      static Calendar.current.getter();
      Date.byAdding(component:value:calendar:)();
      v83(v9, v84);
      v12(v6, v7);
      v13(v5, v89);
      IntentParameter.wrappedValue.getter();
      uint64_t v95 = v13;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v93, 1, v89) == 1)
      {
        uint64_t v14 = *(void *)(v0 + 328);
        swift_release();
        sub_10008DB18(v14, (uint64_t *)&unk_10095B890);
LABEL_23:
        uint64_t v100 = *(void *)(v0 + 304);
        uint64_t v94 = *(void *)(v0 + 232);
        uint64_t v64 = *(void *)(v0 + 176);
        uint64_t v65 = *(void *)(v0 + 112);
        uint64_t v66 = *(void *)(v0 + 104);
        uint64_t v68 = *(void *)(v0 + 80);
        uint64_t v67 = *(void *)(v0 + 88);
        uint64_t v86 = *(void *)(v0 + 72);
        uint64_t v88 = *(void *)(v0 + 96);
        uint64_t v69 = *(void *)(v0 + 56);
        uint64_t v90 = *(void *)(v0 + 48);
        uint64_t v91 = *(void *)(v0 + 296);
        IntentParameter.projectedValue.getter();
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v70._object = (void *)0x80000001007C0600;
        v70._countAndFlagsBits = 0xD000000000000022;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v70);
        static Date.FormatStyle.DateStyle.long.getter();
        static Date.FormatStyle.TimeStyle.omitted.getter();
        uint64_t v71 = Date.formatted(date:time:)();
        id v73 = v72;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v86);
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v88);
        v74._countAndFlagsBits = v71;
        v74._object = v73;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v74);
        swift_bridgeObjectRelease();
        v75._countAndFlagsBits = 46;
        v75._object = (void *)0xE100000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v75);
        IntentDialog.init(stringInterpolation:)();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v64, 0, 1, v90);
        type metadata accessor for AppIntentError();
        sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
        swift_allocError();
        IntentParameter.needsValueError(_:)();
        swift_release();
        sub_10008DB18(v64, &qword_10094D320);
        swift_willThrow();
        v95(v91, v94);
        v95(v100, v94);
        goto LABEL_24;
      }
      uint64_t v36 = *(void *)(v0 + 304);
      uint64_t v38 = *(void *)(v0 + 280);
      uint64_t v37 = *(void *)(v0 + 288);
      uint64_t v39 = *(void *)(v0 + 272);
      uint64_t v41 = *(void *)(v0 + 232);
      uint64_t v40 = *(void *)(v0 + 240);
      uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
      v92(v37, *(void *)(v0 + 328), v41);
      sub_1003126D0((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
      char v42 = dispatch thunk of static Comparable.< infix(_:_:)();
      long long v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
      v43(v38, v37, v41);
      v43(v39, v36, v41);
      uint64_t v45 = *(void *)(v0 + 272);
      uint64_t v44 = *(void *)(v0 + 280);
      if (v42)
      {
        uint64_t v46 = *(void *)(v0 + 232);
        long long v47 = v95;
        v95(*(void *)(v0 + 272), v46);
        v95(v44, v46);
LABEL_22:
        v47(*(void *)(v0 + 288), *(void *)(v0 + 232));
        swift_release();
        goto LABEL_23;
      }
      uint64_t v52 = *(void *)(v0 + 256);
      uint64_t v51 = *(void *)(v0 + 264);
      uint64_t v53 = *(void *)(v0 + 232);
      char v54 = dispatch thunk of static Comparable.< infix(_:_:)();
      v43(v51, v44, v53);
      v43(v52, v45, v53);
      uint64_t v56 = *(void *)(v0 + 272);
      uint64_t v55 = *(void *)(v0 + 280);
      uint64_t v58 = *(void *)(v0 + 256);
      uint64_t v57 = *(void *)(v0 + 264);
      uint64_t v59 = *(void *)(v0 + 232);
      if (v54)
      {
        uint64_t v61 = *(void *)(v0 + 136);
        uint64_t v60 = *(void *)(v0 + 144);
        uint64_t v62 = *(void *)(v0 + 128);
        static TimeZone.autoupdatingCurrent.getter();
        char v63 = Date.isSameDay(as:timeZone:)();
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
        long long v47 = v95;
        v95(v58, v59);
        v95(v57, v59);
        v95(v56, v59);
        v95(v55, v59);
        if ((v63 & 1) == 0) {
          goto LABEL_22;
        }
      }
      else
      {
        long long v47 = v95;
        v95(*(void *)(v0 + 256), *(void *)(v0 + 232));
        v95(v57, v59);
        v95(v56, v59);
        v95(v55, v59);
      }
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = *(void *)(v0 + 304);
      uint64_t v79 = *(void *)(v0 + 288);
      uint64_t v80 = *(void *)(v0 + 232);
      uint64_t v81 = *(void *)(v0 + 240);
      v47(*(void *)(v0 + 296), v80);
      v47(v78, v80);
      v92(v77, v79, v80);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v77, 0, 1, v80);
LABEL_12:
      uint64_t v24 = *(void *)(v0 + 320);
      uint64_t v25 = *(void *)(v0 + 232);
      uint64_t v26 = *(void *)(v0 + 240);
      sub_100005D34(*(void *)(v0 + 344), v24);
      int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
      uint64_t v28 = *(void *)(v0 + 320);
      if (v27 == 1)
      {
        uint64_t v29 = *(void *)(v0 + 344);
        swift_release();
        sub_10008DB18(v28, (uint64_t *)&unk_10095B890);
        sub_1003120D4();
        swift_allocError();
        *uint64_t v30 = 1;
        swift_willThrow();
        sub_10008DB18(v29, (uint64_t *)&unk_10095B890);
LABEL_24:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        objc_super v76 = *(uint64_t (**)(void))(v0 + 8);
        return v76();
      }
      uint64_t v31 = *(void *)(v0 + 248);
      uint64_t v32 = *(void *)(v0 + 40);
      (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 240) + 32))(v31, *(void *)(v0 + 320), *(void *)(v0 + 232));
      uint64_t v33 = static MainActor.shared.getter();
      *(void *)(v0 + 384) = v33;
      uint64_t v34 = swift_task_alloc();
      *(void *)(v0 + 392) = v34;
      *(void *)(v34 + 16) = v32;
      *(void *)(v34 + 24) = v31;
      unint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v35;
      *unint64_t v35 = v0;
      v35[1] = sub_1002FC9CC;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 26, v33, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_100312718, v34, &type metadata for Bool);
    default:
      uint64_t v2 = *(void *)(v0 + 160);
      uint64_t v1 = *(void *)(v0 + 168);
      uint64_t v3 = *(void *)(v0 + 152);
      uint64_t v4 = (unsigned int *)&enum case for PauseRingsPeriod.endOfDay(_:);
LABEL_11:
      (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *v4, v3);
      PauseRingsPeriod.date()();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
      goto LABEL_12;
  }
}

uint64_t sub_1002FC9CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 376);
  uint64_t v3 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_1002FCB2C, v3, v2);
}

id sub_1002FCB2C()
{
  swift_release();
  if (*(unsigned char *)(v0 + 26) == 1)
  {
    id result = [self sharedBehavior];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v2 = result;
    uint64_t v32 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v29 = *(void *)(v0 + 48);
    uint64_t v28 = *(void *)(v0 + 64);
    unsigned int v9 = [result isStandalonePhoneFitnessMode];

    if (v9) {
      uint64_t v10 = (void *)0x80000001007C0650;
    }
    else {
      uint64_t v10 = (void *)0x80000001007C0630;
    }
    if (v9) {
      uint64_t v11 = 0xD000000000000017;
    }
    else {
      uint64_t v11 = 0xD00000000000001CLL;
    }
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    uint64_t v13 = v4;
    static Date.FormatStyle.DateStyle.complete.getter();
    static Date.FormatStyle.TimeStyle.omitted.getter();
    uint64_t v14 = v3;
    uint64_t v15 = Date.formatted(date:time:)();
    uint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v26);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v27);
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 46;
    v19._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    IntentDialog.init(stringInterpolation:)();
    static IntentResult.result<>(dialog:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v28, v29);
    sub_10008DB18(v32, (uint64_t *)&unk_10095B890);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v14, v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 344);
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 232);
    sub_1003120D4();
    swift_allocError();
    *uint64_t v25 = 2;
    swift_willThrow();
    sub_10008DB18(v21, (uint64_t *)&unk_10095B890);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  return (id)v20();
}

void sub_1002FD010(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)aBlock[0];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_100312134;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = &unk_1008C15A8;
  unsigned int v9 = _Block_copy(aBlock);
  swift_release();
  [v5 pauseRingsUntilDate:isa completionHandler:v9];
  _Block_release(v9);
}

uint64_t sub_1002FD1EC@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A918, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997BB0, a1);
}

uint64_t sub_1002FD224(uint64_t a1, uint64_t a2)
{
  return sub_10030C760(a1, a2, (uint64_t)&unk_10075DD88, &qword_100956B00, &qword_100956B08, (uint64_t)sub_1002FA2C0);
}

uint64_t sub_1002FD254(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002FD30C;
  return sub_1002FB8C4(a1);
}

uint64_t sub_1002FD30C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_1002FD400@<D0>(uint64_t a1@<X8>)
{
  sub_10030E0C0((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1002FD444(uint64_t a1)
{
  unint64_t v2 = sub_10031267C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002FD484()
{
  unint64_t result = qword_100956730;
  if (!qword_100956730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956730);
  }
  return result;
}

unint64_t sub_1002FD4DC()
{
  unint64_t result = qword_100956738;
  if (!qword_100956738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956738);
  }
  return result;
}

uint64_t sub_1002FD530()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002FD564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_1002FD590);
}

unint64_t sub_1002FD590()
{
  unint64_t result = qword_100956740;
  if (!qword_100956740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956740);
  }
  return result;
}

uint64_t sub_1002FD5E4(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997BE0);
}

uint64_t sub_1002FD60C(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for IntentDialog();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return _swift_task_switch(sub_1002FD704, v5, v4);
}

uint64_t sub_1002FD704()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = (void *)v0[2];
  unsigned int v2 = [v1 isPaused];

  if (v2)
  {
    uint64_t v3 = static MainActor.shared.getter();
    v0[12] = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1002FD8C0;
    uint64_t v5 = v0[4];
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 14, v3, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_100312668, v5, &type metadata for Bool);
  }
  else
  {
    swift_release();
    uint64_t v7 = v0[6];
    uint64_t v6 = v0[7];
    uint64_t v8 = v0[5];
    IntentDialog.init(stringLiteral:)();
    static IntentResult.result<>(dialog:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    unsigned int v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1002FD8C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1002FDA04, v3, v2);
}

uint64_t sub_1002FDA04()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v0 + 112))
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    IntentDialog.init(stringLiteral:)();
    static IntentResult.result<>(dialog:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *uint64_t v5 = 3;
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1002FDB20(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_100312134;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = &unk_1008C1558;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  [v5 unpauseRingsWithCompletionHandler:v8];
  _Block_release(v8);
}

uint64_t sub_1002FDCD8@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A928, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997BE0, a1);
}

uint64_t sub_1002FDD10(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  return sub_1002FD60C(a1, v4);
}

uint64_t sub_1002FDDB0@<X0>(uint64_t *a1@<X8>)
{
  sub_1000AFA94(&qword_1009568F8);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  *a1 = result;
  return result;
}

uint64_t sub_1002FDE20(uint64_t a1)
{
  unint64_t v2 = sub_1002FD590();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002FDE60()
{
  unint64_t result = qword_100956750;
  if (!qword_100956750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956750);
  }
  return result;
}

unint64_t sub_1002FDEB8()
{
  unint64_t result = qword_100956758;
  if (!qword_100956758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956758);
  }
  return result;
}

unint64_t sub_1002FDF10()
{
  unint64_t result = qword_100956760;
  if (!qword_100956760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956760);
  }
  return result;
}

uint64_t sub_1002FDF64()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002FDF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_1002FDE60);
}

uint64_t sub_1002FDFC4(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997BF8);
}

uint64_t sub_1002FDFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B890);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002FE0F4, 0, 0);
}

uint64_t sub_1002FE0F4()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = [objc_allocWithZone((Class)FIActivitySettingsController) initWithHealthStore:v1];
  *(void *)(v0 + 96) = v2;

  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    long long v9 = *(_OWORD *)(v0 + 32);
    [v2 populateExistingCharacteristics];
    *(void *)(v0 + 104) = [v2 wheelchairUse];
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 112) = v4;
    *(_OWORD *)(v4 + 16) = v9;
    *(void *)(v4 + 32) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v5;
    uint64_t v6 = sub_1000AFA94(&qword_100956AD8);
    *uint64_t v5 = v0;
    v5[1] = sub_1002FE2BC;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 24, 0, 0, 0xD000000000000012, 0x80000001007C0570, sub_1003125CC, v4, v6);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v7(1);
  }
}

uint64_t sub_1002FE2BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002FE3D4, 0, 0);
}

uint64_t sub_1002FE3D4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(void **)(v0 + 96);
  if (v1)
  {
    uint64_t v3 = (uint64_t)[*(id *)(v0 + 24) activityMoveMode];

    goto LABEL_10;
  }
  id v4 = [*(id *)(v0 + 96) dateOfBirth];
  uint64_t v5 = *(void *)(v0 + 88);
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v8 = *(void **)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 56);
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v8[4];
    v10(v5, v7, v9);
    uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[7];
    v11(v5, 0, 1, v9);
    Swift::String v12 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v8[6];
    if (v12(v5, 1, v9) != 1)
    {
      uint64_t v13 = *(void *)(v0 + 104);
      sub_10008DB18(*(void *)(v0 + 88), (uint64_t *)&unk_10095B890);
      uint64_t v14 = *(void **)(v0 + 96);
      if (v13 != 2)
      {
        id v18 = [v14 dateOfBirth];
        uint64_t v19 = *(void *)(v0 + 80);
        if (v18)
        {
          uint64_t v20 = v18;
          uint64_t v21 = *(void *)(v0 + 72);
          uint64_t v27 = *(void *)(v0 + 56);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v10(v19, v21, v27);
          v11(v19, 0, 1, v27);
          if (v12(v19, 1, v27) == 1)
          {
            Class isa = 0;
          }
          else
          {
            uint64_t v23 = *(void *)(v0 + 80);
            uint64_t v24 = *(void *)(v0 + 56);
            uint64_t v25 = *(void *)(v0 + 64);
            Class isa = Date._bridgeToObjectiveC()().super.isa;
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
          }
        }
        else
        {
          v11(*(void *)(v0 + 80), 1, 1, *(void *)(v0 + 56));
          Class isa = 0;
        }
        uint64_t v26 = *(void **)(v0 + 96);
        FIAgeInYearsForDateOfBirth();

        uint64_t v3 = FIDefaultActivityMoveModeWithAge();
        goto LABEL_10;
      }

      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 64) + 56))(*(void *)(v0 + 88), 1, 1, *(void *)(v0 + 56));
  }
  uint64_t v15 = *(void *)(v0 + 88);

  sub_10008DB18(v15, (uint64_t *)&unk_10095B890);
LABEL_9:
  uint64_t v3 = 1;
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v16(v3);
}

void sub_1002FE6AC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100956AE0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1003125E4;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100259288;
  void aBlock[3] = &unk_1008C1508;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  [v5 _activityMoveModeObjectWithCompletion:v8];
  _Block_release(v8);
}

uint64_t sub_1002FE864(void *a1)
{
  id v1 = a1;
  sub_1000AFA94(&qword_100956AE0);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1002FE8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  type metadata accessor for LocalizedStringResource();
  v4[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for MainActor();
  v4[23] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_100956AB8 + dword_100956AB8);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[24] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1002FEA40;
  return v9(a2);
}

uint64_t sub_1002FEA40(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1002FEE28;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    *(unsigned char *)(v4 + 313) = a1 & 1;
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    *(void *)(v4 + 208) = v11;
    *(void *)(v4 + 216) = v12;
    uint64_t v8 = sub_1002FEBD4;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1002FEBD4()
{
  if (*(unsigned char *)(v0 + 313))
  {
    uint64_t v1 = *(void *)(v0 + 168);
    uint64_t v2 = *(void *)(v0 + 120);
    long long v10 = *(_OWORD *)(v0 + 104);
    swift_release();
    *(_OWORD *)(v0 + 16) = v10;
    *(void *)(v0 + 32) = v2;
    LocalizedStringResource.init(stringLiteral:)();
    IntentDialog.init(_:)();
    uint64_t v3 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
    type metadata accessor for AppIntentError();
    sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    sub_10031256C();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
    sub_10008DB18(v1, &qword_10094D320);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002FEEBC;
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 104);
    return sub_1002FDFF0(v9, v7, v8);
  }
}

uint64_t sub_1002FEE28()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002FEEBC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  return _swift_task_switch(sub_1002FEFE4, v4, v3);
}

uint64_t sub_1002FEFE4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1 == 2)
  {
    IntentParameter.wrappedValue.getter();
    if ((unint64_t)(*(void *)(v0 + 64) - 1001) >= 0xFFFFFFFFFFFFFC21)
    {
      sub_10007E2D8(0, &qword_10094F0F0);
      id v2 = [(id)swift_getObjCClassFromMetadata() moveMinuteGoal];
      if (v2)
      {
        long long v10 = v2;
        id v13 = [self minuteUnit];
        long double v14 = 10.0;
LABEL_19:
        *(long double *)(v0 + 256) = v14;
        *(void *)(v0 + 240) = v13;
        *(void *)(v0 + 248) = v10;
        uint64_t v23 = *(void *)(v0 + 152);
        uint64_t v22 = *(void *)(v0 + 160);
        uint64_t v24 = *(void *)(v0 + 144);
        uint64_t v40 = *(void *)(v0 + 136);
        uint64_t v25 = *(void *)(v0 + 120);
        long long v41 = *(_OWORD *)(v0 + 104);
        IntentParameter.wrappedValue.getter();
        uint64_t v26 = *(void *)(v0 + 40);
        *(void *)(v0 + 264) = v26;
        double v27 = (double)v26;
        IntentParameter.wrappedValue.getter();
        uint64_t v28 = *(void *)(v0 + 48);
        *(void *)(v0 + 272) = v28;
        long double v29 = v27 - fmod((double)v28, v14);
        uint64_t v30 = self;
        id v31 = v10;
        id v32 = [v30 quantityWithUnit:v13 doubleValue:(double)v29];
        Date.init()();
        Date.init()();
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        Class v34 = Date._bridgeToObjectiveC()().super.isa;
        id v35 = [self quantitySampleWithType:v31 quantity:v32 startDate:isa endDate:v34];
        *(void *)(v0 + 280) = v35;

        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
        v36(v23, v40);
        v36(v22, v40);
        uint64_t v37 = static MainActor.shared.getter();
        *(void *)(v0 + 288) = v37;
        uint64_t v38 = swift_task_alloc();
        *(void *)(v0 + 296) = v38;
        *(_OWORD *)(v38 + 16) = v41;
        *(void *)(v38 + 32) = v25;
        *(void *)(v38 + 40) = v35;
        uint64_t v39 = (void *)swift_task_alloc();
        *(void *)(v0 + 304) = v39;
        *uint64_t v39 = v0;
        v39[1] = sub_1002FF6C4;
        uint64_t v4 = &protocol witness table for MainActor;
        uint64_t v9 = &type metadata for Bool;
        uint64_t v7 = sub_100312560;
        id v2 = (id)(v0 + 312);
        uint64_t v3 = v37;
        uint64_t v5 = 0x286D726F66726570;
        unint64_t v6 = 0xE900000000000029;
        uint64_t v8 = v38;
        return withCheckedContinuation<A>(isolation:function:_:)(v2, v3, v4, v5, v6, v7, v8, v9);
      }
LABEL_24:
      __break(1u);
      return withCheckedContinuation<A>(isolation:function:_:)(v2, v3, v4, v5, v6, v7, v8, v9);
    }
    uint64_t v15 = *(void *)(v0 + 168);
    swift_release();
    IntentParameter.projectedValue.getter();
    IntentDialog.init(stringLiteral:)();
    uint64_t v16 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
    type metadata accessor for AppIntentError();
    sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10008DB18(v15, &qword_10094D320);
  }
  else
  {
    if (v1 == 1)
    {
      sub_10007E2D8(0, &qword_10094F0F0);
      id v2 = [(id)swift_getObjCClassFromMetadata() calorieGoal];
      if (v2)
      {
        long long v10 = v2;
        AppDependency.wrappedValue.getter();
        uint64_t v11 = *(void **)(v0 + 72);
        id v12 = [v11 unitManager];

        if (v12)
        {
          id v13 = [v12 userActiveEnergyBurnedUnit];

          if (FIUIHKUnitIsCalorieUnit())
          {
            IntentParameter.wrappedValue.getter();
            long double v14 = 10.0;
            if ((unint64_t)(*(void *)(v0 + 88) - 10000) <= 0xFFFFFFFFFFFFD8F9) {
              goto LABEL_15;
            }
          }
          else
          {
            IntentParameter.wrappedValue.getter();
            long double v14 = 20.0;
            if ((unint64_t)(*(void *)(v0 + 80) - 40000) <= 0xFFFFFFFFFFFF63D3)
            {
LABEL_15:
              uint64_t v18 = *(void *)(v0 + 168);
              swift_release();
              IntentParameter.projectedValue.getter();
              IntentDialog.init(stringLiteral:)();
              uint64_t v19 = type metadata accessor for IntentDialog();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
              type metadata accessor for AppIntentError();
              sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
              swift_allocError();
              IntentParameter.needsValueError(_:)();
              swift_release();
              sub_10008DB18(v18, &qword_10094D320);
              swift_willThrow();

              goto LABEL_16;
            }
          }
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_24;
    }
    swift_release();
    sub_1003120D4();
    swift_allocError();
    *uint64_t v17 = 5;
  }
  swift_willThrow();
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1002FF6C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 208);
  return _swift_task_switch(sub_1002FF824, v3, v2);
}

void sub_1002FF824()
{
  swift_release();
  if (*(unsigned char *)(v0 + 312) != 1)
  {
    uint64_t v9 = *(void **)(v0 + 280);
    uint64_t v11 = *(void **)(v0 + 240);
    long long v10 = *(void **)(v0 + 248);
    sub_1003120D4();
    swift_allocError();
    *id v12 = 4;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(void (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  double v1 = (double)*(uint64_t *)(v0 + 264);
  long double v2 = v1 - fmod((double)*(uint64_t *)(v0 + 272), *(long double *)(v0 + 256));
  FIUISetNeedsActivityRingExplanation();
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  double v3 = (double)*(uint64_t *)(v0 + 264);
  double v4 = v3 - fmod((double)*(uint64_t *)(v0 + 272), *(long double *)(v0 + 256));
  if (v4 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void **)(v0 + 280);
  uint64_t v7 = *(void **)(v0 + 240);
  unint64_t v6 = *(void **)(v0 + 248);
  *(void *)(v0 + 56) = (uint64_t)v4;
  sub_100312408();
  static IntentResult.result<A>(value:)();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(void (**)(void))(v0 + 8);
LABEL_7:
  v8();
}

uint64_t sub_1002FFA18()
{
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for URL();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002FFB38, v3, v2);
}

uint64_t sub_1002FFB38()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  swift_release();
  URL.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[2], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[4] + 32))(v0[5], v0[2], v0[3]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v6 = v0[3];
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1002FFC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  AppDependency.wrappedValue.getter();
  long long v10 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_100312134;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = &unk_1008C14B8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  [v10 saveObject:a5 withCompletion:v13];
  _Block_release(v13);
}

uint64_t sub_1002FFE58@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A930, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997BF8, a1);
}

uint64_t sub_1002FFE90(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1002FE8AC(a1, v4, v5, v6);
}

uint64_t sub_1002FFF44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10030F0D8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1002FFF70(uint64_t a1)
{
  unint64_t v2 = sub_1002FDE60();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002FFFB0()
{
  unint64_t result = qword_100956770;
  if (!qword_100956770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956770);
  }
  return result;
}

unint64_t sub_100300008()
{
  unint64_t result = qword_100956778;
  if (!qword_100956778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956778);
  }
  return result;
}

unint64_t sub_100300060()
{
  unint64_t result = qword_100956780;
  if (!qword_100956780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956780);
  }
  return result;
}

uint64_t sub_1003000B4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1003000E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_1002FFFB0);
}

uint64_t sub_100300114(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997C10);
}

uint64_t sub_100300138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  type metadata accessor for LocalizedStringResource();
  v3[9] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_1000AFA94(&qword_10094F0A0);
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for MainActor();
  v3[19] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_100956A90 + dword_100956A90);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[20] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10030032C;
  return v9(a2);
}

uint64_t sub_10030032C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100300930;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    *(unsigned char *)(v4 + 241) = a1 & 1;
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    *(void *)(v4 + 176) = v11;
    *(void *)(v4 + 184) = v12;
    uint64_t v8 = sub_1003004C0;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1003004C0()
{
  if (*(unsigned char *)(v0 + 241))
  {
    uint64_t v1 = *(void *)(v0 + 80);
    long long v31 = *(_OWORD *)(v0 + 56);
    swift_release();
    *(_OWORD *)(v0 + 16) = v31;
    LocalizedStringResource.init(stringLiteral:)();
    IntentDialog.init(_:)();
    uint64_t v2 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
    type metadata accessor for AppIntentError();
    sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    sub_100312500();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
    sub_10008DB18(v1, &qword_10094D320);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    IntentParameter.wrappedValue.getter();
    uint64_t v5 = *(void *)(v0 + 32);
    *(void *)(v0 + 192) = v5;
    IntentParameter.wrappedValue.getter();
    uint64_t v6 = *(void *)(v0 + 40);
    *(void *)(v0 + 200) = v6;
    sub_10007E2D8(0, &qword_10094F0F0);
    id v7 = [(id)swift_getObjCClassFromMetadata() exerciseGoal];
    if (v7)
    {
      uint64_t v15 = v7;
      long double v16 = (double)v5 - fmod((double)v6, 5.0);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v18 = *(void *)(v0 + 120);
      uint64_t v19 = *(void *)(v0 + 128);
      uint64_t v20 = *(void *)(v0 + 112);
      long long v30 = *(_OWORD *)(v0 + 56);
      id v21 = [self minuteUnit];
      id v22 = [self quantityWithUnit:v21 doubleValue:(double)v16];

      Date.init()();
      Date.init()();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      Class v24 = Date._bridgeToObjectiveC()().super.isa;
      id v25 = [self quantitySampleWithType:v15 quantity:v22 startDate:isa endDate:v24];
      *(void *)(v0 + 208) = v25;

      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v26(v19, v20);
      v26(v17, v20);
      uint64_t v27 = static MainActor.shared.getter();
      *(void *)(v0 + 216) = v27;
      uint64_t v28 = swift_task_alloc();
      *(void *)(v0 + 224) = v28;
      *(_OWORD *)(v28 + 16) = v30;
      *(void *)(v28 + 32) = v25;
      long double v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v29;
      *long double v29 = v0;
      v29[1] = sub_1003009D4;
      uint64_t v9 = &protocol witness table for MainActor;
      uint64_t v14 = &type metadata for Bool;
      uint64_t v12 = sub_1003124BC;
      id v7 = (id)(v0 + 240);
      uint64_t v8 = v27;
      uint64_t v10 = 0x286D726F66726570;
      unint64_t v11 = 0xE900000000000029;
      uint64_t v13 = v28;
    }
    else
    {
      __break(1u);
    }
    return withCheckedContinuation<A>(isolation:function:_:)(v7, v8, v9, v10, v11, v12, v13, v14);
  }
}

uint64_t sub_100300930()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003009D4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return _swift_task_switch(sub_100300B34, v3, v2);
}

uint64_t sub_100300B34()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 208);
  if (*(unsigned char *)(v0 + 240) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 88);
    fmod((double)*(uint64_t *)(v0 + 200), 5.0);
    FIUISetNeedsActivityRingExplanation();
    id v5 = [self minutes];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    sub_1000A132C(&qword_100956A98, &qword_10094F0A0);
    static IntentResult.result<A>(value:)();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *id v7 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100300D48()
{
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for URL();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100300E68, v3, v2);
}

uint64_t sub_100300E68()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  swift_release();
  URL.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[2], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[4] + 32))(v0[5], v0[2], v0[3]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v6 = v0[3];
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100300FC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A938, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997C10, a1);
}

uint64_t sub_100300FF8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000DBD6C;
  return sub_100300138(a1, v5, v4);
}

uint64_t sub_1003010A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10030FB60();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003010CC(uint64_t a1)
{
  unint64_t v2 = sub_1002FFFB0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10030110C()
{
  unint64_t result = qword_100956790;
  if (!qword_100956790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956790);
  }
  return result;
}

unint64_t sub_100301164()
{
  unint64_t result = qword_100956798;
  if (!qword_100956798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956798);
  }
  return result;
}

unint64_t sub_1003011BC()
{
  unint64_t result = qword_1009567A0;
  if (!qword_1009567A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567A0);
  }
  return result;
}

uint64_t sub_100301210()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100301244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_10030110C);
}

uint64_t sub_100301270(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997C28);
}

uint64_t sub_10030129C()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1003012D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  type metadata accessor for LocalizedStringResource();
  v3[9] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v3[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = type metadata accessor for MainActor();
  v3[16] = static MainActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_100956A68 + dword_100956A68);
  uint64_t v6 = (void *)swift_task_alloc();
  v3[17] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100301464;
  return v8(a2);
}

uint64_t sub_100301464(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100301A38;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    *(unsigned char *)(v4 + 201) = a1 & 1;
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    *(void *)(v4 + 152) = v11;
    *(void *)(v4 + 160) = v12;
    uint64_t v8 = sub_1003015F8;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1003015F8()
{
  if (*(unsigned char *)(v0 + 201))
  {
    uint64_t v1 = *(void *)(v0 + 80);
    long long v29 = *(_OWORD *)(v0 + 56);
    swift_release();
    *(_OWORD *)(v0 + 16) = v29;
    LocalizedStringResource.init(stringLiteral:)();
    IntentDialog.init(_:)();
    uint64_t v2 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
    type metadata accessor for AppIntentError();
    sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    sub_10031245C();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
    sub_10008DB18(v1, &qword_10094D320);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    sub_10007E2D8(0, &qword_10094F0F0);
    id v5 = [(id)swift_getObjCClassFromMetadata() standGoal];
    if (v5)
    {
      uint64_t v13 = v5;
      uint64_t v14 = *(void *)(v0 + 112);
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v17 = *(void *)(v0 + 88);
      uint64_t v27 = *(void *)(v0 + 64);
      uint64_t v28 = *(void *)(v0 + 56);
      id v18 = [self countUnit];
      IntentParameter.wrappedValue.getter();
      id v19 = [self quantityWithUnit:v18 doubleValue:(double)*(uint64_t *)(v0 + 32)];

      Date.init()();
      Date.init()();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      Class v21 = Date._bridgeToObjectiveC()().super.isa;
      id v22 = [self quantitySampleWithType:v13 quantity:v19 startDate:isa endDate:v21];
      *(void *)(v0 + 168) = v22;

      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v23(v16, v17);
      v23(v14, v17);
      uint64_t v24 = static MainActor.shared.getter();
      *(void *)(v0 + 176) = v24;
      id v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v25;
      void v25[2] = v28;
      v25[3] = v27;
      v25[4] = v22;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_100301AC8;
      uint64_t v7 = &protocol witness table for MainActor;
      uint64_t v12 = &type metadata for Bool;
      uint64_t v10 = sub_1003123C4;
      id v5 = (id)(v0 + 200);
      uint64_t v6 = v24;
      uint64_t v8 = 0x286D726F66726570;
      unint64_t v9 = 0xE900000000000029;
      uint64_t v11 = v25;
    }
    else
    {
      __break(1u);
    }
    return withCheckedContinuation<A>(isolation:function:_:)(v5, v6, v7, v8, v9, v10, v11, v12);
  }
}

uint64_t sub_100301A38()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100301AC8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_100301C28, v3, v2);
}

uint64_t sub_100301C28()
{
  swift_release();
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 168);
    FIUISetNeedsActivityRingExplanation();
    IntentParameter.wrappedValue.getter();
    sub_100312408();
    static IntentResult.result<A>(value:)();
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 168);
    sub_1003120D4();
    swift_allocError();
    *uint64_t v4 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100301D88()
{
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for URL();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100301EA8, v3, v2);
}

uint64_t sub_100301EA8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  swift_release();
  URL.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[2], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[4] + 32))(v0[5], v0[2], v0[3]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v6 = v0[3];
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_100302000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a4;
  uint64_t v10 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  AppDependency.wrappedValue.getter();
  uint64_t v13 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = a6;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = a7;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  [v13 saveObject:v18 withCompletion:v16];
  _Block_release(v16);
}

uint64_t sub_1003021B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A940, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997C28, a1);
}

uint64_t sub_1003021F0(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000DBD6C;
  return sub_1003012D0(a1, v5, v4);
}

uint64_t sub_10030229C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003105A4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003022C4(uint64_t a1)
{
  unint64_t v2 = sub_10030110C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100302300(uint64_t a1)
{
  return sub_10025FFF4(a1, qword_100997C40);
}

uint64_t sub_100302324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v55 = sub_1000AFA94(&qword_1009569F8);
  uint64_t v48 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v46 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  long long v47 = (char *)v42 - v3;
  uint64_t v4 = sub_1000AFA94(&qword_100956A00);
  uint64_t v59 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v45 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v54 = (char *)v42 - v7;
  __chkstk_darwin(v8);
  uint64_t v53 = (char *)v42 - v9;
  __chkstk_darwin(v10);
  uint64_t v51 = (char *)v42 - v11;
  __chkstk_darwin(v12);
  uint64_t v52 = (char *)v42 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v42 - v15;
  __chkstk_darwin(v17);
  uint64_t v44 = (char *)v42 - v18;
  char v66 = 1;
  uint64_t v19 = sub_1000AFA94(&qword_100956A08);
  unint64_t v20 = sub_1003043EC();
  v42[1] = sub_1003038D4();
  uint64_t v56 = sub_1000A132C(&qword_100956A10, &qword_100956A08);
  unint64_t v58 = v20;
  ParameterSummaryCaseCondition.init(_:_:)();
  uint64_t v50 = sub_1000A132C(&qword_100956A18, &qword_100956A00);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v21 = v59 + 8;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v59 + 8);
  long long v43 = v16;
  v60(v16, v4);
  char v65 = 2;
  id v22 = v52;
  uint64_t v57 = v19;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v23 = v60;
  v60(v22, v4);
  char v64 = 3;
  uint64_t v24 = v51;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  v23(v24, v4);
  id v25 = v23;
  char v63 = 4;
  uint64_t v26 = v53;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  v25(v26, v4);
  char v62 = 5;
  uint64_t v27 = v54;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v59 = v21;
  uint64_t v28 = v60;
  v60(v27, v4);
  char v61 = 6;
  long long v29 = v45;
  ParameterSummaryCaseCondition.init(_:_:)();
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  v28(v29, v4);
  uint64_t v30 = v46;
  ParameterSummaryDefaultCaseCondition.init(_:)();
  sub_1000A132C(&qword_100956A20, &qword_1009569F8);
  long long v31 = v47;
  uint64_t v32 = v55;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v48 + 8);
  v33(v30, v32);
  Class v34 = v43;
  id v35 = v44;
  uint64_t v36 = v51;
  uint64_t v37 = v52;
  uint64_t v39 = v53;
  uint64_t v38 = v54;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:)();
  v33(v31, v55);
  uint64_t v40 = v60;
  v60(v38, v4);
  v40(v39, v4);
  v40(v36, v4);
  v40(v37, v4);
  v40(v34, v4);
  return ((uint64_t (*)(char *, uint64_t))v40)(v35, v4);
}

uint64_t sub_100302B20@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302B38, a1);
}

uint64_t sub_100302B38()
{
  return sub_100302F20();
}

uint64_t sub_100302B44@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302E18, a1);
}

uint64_t sub_100302B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v2 = sub_1000AFA94(&qword_100956A28);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_100956A30);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_1000AFA94(&qword_100956A08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v15 - v9;
  sub_1003043EC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 544499027;
  v11._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956A38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:_:)();
  sub_1000A132C(&qword_100956A10, &qword_100956A08);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

uint64_t sub_100302E18()
{
  return sub_100302F20();
}

uint64_t sub_100302E24@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302E3C, a1);
}

uint64_t sub_100302E3C()
{
  return sub_100302F20();
}

uint64_t sub_100302E48()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100302E6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302E84, a1);
}

uint64_t sub_100302E84()
{
  return sub_100302F20();
}

uint64_t sub_100302E90()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100302EB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302ECC, a1);
}

uint64_t sub_100302ECC()
{
  return sub_100302F20();
}

uint64_t sub_100302ED8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100302EFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100302B5C((uint64_t)sub_100302F14, a1);
}

uint64_t sub_100302F14()
{
  return sub_100302F20();
}

uint64_t sub_100302F20()
{
  swift_getKeyPath();
  sub_1003043EC();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751040;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100302FE0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100303004@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100956A28);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000AFA94(&qword_100956A30);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_1000AFA94(&qword_100956A08);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v14 - v8;
  sub_1003043EC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 544499027;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100956A38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_1000A132C(&qword_100956A10, &qword_100956A08);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  Swift::String v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
}

uint64_t sub_1003032B8(uint64_t a1)
{
  return sub_1003032E4(a1, qword_100997C58);
}

uint64_t sub_1003032E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v8, a2);
  sub_1000876DC(v8, (uint64_t)a2);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10030344C(unsigned __int8 *a1, char *a2)
{
  return sub_10047FFBC(*a1, *a2);
}

unint64_t sub_10030345C()
{
  unint64_t result = qword_1009567B0;
  if (!qword_1009567B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567B0);
  }
  return result;
}

Swift::Int sub_1003034B0()
{
  return sub_1004809A8();
}

uint64_t sub_1003034BC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003035DC()
{
  return sub_1004809A8();
}

unint64_t sub_1003035E4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10031132C(*a1);
  *a2 = result;
  return result;
}

void sub_100303614(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7105633;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000073656972;
      uint64_t v3 = 0x6F6C614365766F6DLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "moveKilojoules");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x756E694D65766F6DLL;
      *(void *)(a1 + 8) = 0xEB00000000736574;
      break;
    case 4:
      *(void *)a1 = 0x6573696372657865;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x646E617473;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 6:
      *(void *)a1 = 1819045746;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_10030371C()
{
  unint64_t result = qword_1009567B8;
  if (!qword_1009567B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567B8);
  }
  return result;
}

unint64_t sub_100303774()
{
  unint64_t result = qword_1009567C0;
  if (!qword_1009567C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567C0);
  }
  return result;
}

unint64_t sub_1003037CC()
{
  unint64_t result = qword_1009567C8;
  if (!qword_1009567C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567C8);
  }
  return result;
}

unint64_t sub_100303824()
{
  unint64_t result = qword_1009567D0;
  if (!qword_1009567D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567D0);
  }
  return result;
}

unint64_t sub_10030387C()
{
  unint64_t result = qword_1009567D8;
  if (!qword_1009567D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567D8);
  }
  return result;
}

unint64_t sub_1003038D4()
{
  unint64_t result = qword_1009567E0;
  if (!qword_1009567E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567E0);
  }
  return result;
}

unint64_t sub_10030392C()
{
  unint64_t result = qword_1009567E8;
  if (!qword_1009567E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567E8);
  }
  return result;
}

uint64_t sub_100303980@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A950, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100997C58, a1);
}

uint64_t sub_1003039B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003039E4(a1, a2, a3, (void (*)(void))sub_100303A2C);
}

uint64_t sub_1003039E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100303A2C()
{
  unint64_t result = qword_1009567F0;
  if (!qword_1009567F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567F0);
  }
  return result;
}

uint64_t sub_100303A80(uint64_t a1)
{
  unint64_t v2 = sub_100303A2C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100303AD0()
{
  unint64_t result = qword_1009567F8;
  if (!qword_1009567F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009567F8);
  }
  return result;
}

unint64_t sub_100303B28()
{
  unint64_t result = qword_100956800;
  if (!qword_100956800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956800);
  }
  return result;
}

unint64_t sub_100303B80()
{
  unint64_t result = qword_100956808;
  if (!qword_100956808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956808);
  }
  return result;
}

uint64_t sub_100303BD8(uint64_t a1)
{
  unint64_t v2 = sub_10030392C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100303C24()
{
  return sub_1000A132C(&qword_100956810, &qword_100956818);
}

void sub_100303C60(void *a1@<X8>)
{
  *a1 = &off_1008B5D58;
}

unint64_t sub_100303C74()
{
  unint64_t result = qword_100956820;
  if (!qword_100956820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956820);
  }
  return result;
}

unint64_t sub_100303CCC()
{
  unint64_t result = qword_100956828[0];
  if (!qword_100956828[0])
  {
    sub_1000A1370(&qword_100956818);
    sub_1003038D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100956828);
  }
  return result;
}

uint64_t sub_100303D40(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100303DD0, 0, 0);
}

void sub_100303DD0()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;
  id v2 = [v1 activityMoveModeWithError:v0 + 16];

  uint64_t v3 = *(void **)(v0 + 16);
  if (!v2)
  {
    id v6 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_5;
  }
  id v4 = v3;
  if ([v2 activityMoveMode] == (id)2)
  {
    uint64_t v5 = &off_1008B5D80;
LABEL_32:

    uint64_t v30 = *(void (**)(void *))(v0 + 8);
    v30(v5);
    return;
  }
  id v8 = [self sharedBehavior];
  if (!v8)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  unsigned int v10 = [v8 isStandalonePhoneFitnessMode];

  if (v10) {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  else {
    uint64_t v5 = &off_1008B5DA8;
  }
  AppDependency.wrappedValue.getter();
  Swift::String v11 = *(void **)(v0 + 16);
  id v12 = [v11 unitManager];

  if (!v12) {
    goto LABEL_46;
  }
  id v13 = [v12 userActiveEnergyBurnedUnit];

  int IsCalorieUnit = FIUIHKUnitIsCalorieUnit();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (IsCalorieUnit)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      if (v10) {
        uint64_t v32 = _swiftEmptyArrayStorage;
      }
      else {
        uint64_t v32 = &off_1008B5DA8;
      }
      uint64_t v5 = sub_1001E7BA8(0, v32[2] + 1, 1, v5);
    }
    unint64_t v17 = v5[2];
    unint64_t v16 = v5[3];
    unint64_t v18 = v17 + 1;
    char v19 = 1;
    if (v17 >= v16 >> 1) {
      uint64_t v5 = sub_1001E7BA8((void *)(v16 > 1), v17 + 1, 1, v5);
    }
  }
  else
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      if (v10) {
        uint64_t v33 = _swiftEmptyArrayStorage;
      }
      else {
        uint64_t v33 = &off_1008B5DA8;
      }
      uint64_t v5 = sub_1001E7BA8(0, v33[2] + 1, 1, v5);
    }
    unint64_t v17 = v5[2];
    unint64_t v20 = v5[3];
    unint64_t v18 = v17 + 1;
    if (v17 >= v20 >> 1) {
      uint64_t v5 = sub_1001E7BA8((void *)(v20 > 1), v17 + 1, 1, v5);
    }
    char v19 = 2;
  }
  v5[2] = v18;
  *((unsigned char *)v5 + v17 + 32) = v19;
  if (v10) {
    goto LABEL_31;
  }
  unint64_t v21 = v5[3];
  if (v18 >= v21 >> 1) {
    uint64_t v5 = sub_1001E7BA8((void *)(v21 > 1), v18 + 1, 1, v5);
  }
  v5[2] = v18 + 1;
  *((unsigned char *)v5 + v18 + 32) = 4;
  AppDependency.wrappedValue.getter();
  id v22 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;
  id v23 = [v22 wheelchairUseWithError:v0 + 16];

  uint64_t v24 = *(void **)(v0 + 16);
  if (v23)
  {
    id v25 = v24;
    id v26 = [v23 wheelchairUse];
    unint64_t v28 = v5[2];
    unint64_t v27 = v5[3];
    if (v26 == (id)2) {
      char v29 = 6;
    }
    else {
      char v29 = 5;
    }
    if (v28 >= v27 >> 1) {
      uint64_t v5 = sub_1001E7BA8((void *)(v27 > 1), v28 + 1, 1, v5);
    }
    v5[2] = v28 + 1;
    *((unsigned char *)v5 + v28 + 32) = v29;

    id v2 = v23;
LABEL_31:

    goto LABEL_32;
  }
  id v31 = v24;
  swift_bridgeObjectRelease();
  _convertNSErrorToError(_:)();

  swift_willThrow();
LABEL_5:
  uint64_t v7 = *(void (**)(void))(v0 + 8);
  v7();
}

uint64_t sub_100304220()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100304258()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100304290()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1003042C8()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100304300()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100304338(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = sub_1001A0E60;
  *(_OWORD *)(v3 + 24) = *v1;
  return _swift_task_switch(sub_100303DD0, 0, 0);
}

unint64_t sub_1003043EC()
{
  unint64_t result = qword_100956840;
  if (!qword_100956840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956840);
  }
  return result;
}

unint64_t sub_100304444()
{
  unint64_t result = qword_100956848;
  if (!qword_100956848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956848);
  }
  return result;
}

unint64_t sub_10030449C()
{
  unint64_t result = qword_100956850;
  if (!qword_100956850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956850);
  }
  return result;
}

uint64_t sub_1003044F0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100304524()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100304540(uint64_t a1)
{
  v2[46] = a1;
  v2[47] = v1;
  type metadata accessor for LocalizedStringResource();
  v2[48] = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  v2[49] = swift_task_alloc();
  uint64_t v3 = sub_1000AFA94(&qword_10094F0A0);
  v2[50] = v3;
  v2[51] = *(void *)(v3 - 8);
  v2[52] = swift_task_alloc();
  sub_1000AFA94(&qword_10094FE50);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[57] = swift_task_alloc();
  sub_1000AFA94(&qword_100956940);
  v2[58] = swift_task_alloc();
  sub_1000AFA94(&qword_100956948);
  v2[59] = swift_task_alloc();
  sub_1000AFA94(&qword_100956950);
  v2[60] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  uint64_t v4 = sub_1000AFA94(&qword_10094F090);
  v2[63] = v4;
  v2[64] = *(void *)(v4 - 8);
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IntentDialog();
  v2[67] = v5;
  v2[68] = *(void *)(v5 - 8);
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[71] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  unsigned char v2[72] = v7;
  v2[73] = v6;
  return _swift_task_switch(sub_1003048C8, v7, v6);
}

uint64_t sub_1003048C8()
{
  IntentParameter.wrappedValue.getter();
  switch(*(unsigned char *)(v0 + 704))
  {
    case 1:
      id v10 = [self kilocalories];
      *(void *)(v0 + 592) = v10;
      Swift::String v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v11;
      void *v11 = v0;
      v11[1] = sub_100304EDC;
      uint64_t v12 = v0 + 248;
      uint64_t v13 = (uint64_t)v10;
      goto LABEL_7;
    case 2:
      id v14 = [self kilojoules];
      *(void *)(v0 + 616) = v14;
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 624) = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_10030550C;
      uint64_t v12 = v0 + 208;
      uint64_t v13 = (uint64_t)v14;
LABEL_7:
      uint64_t result = sub_100307AA8(v12, v13);
      break;
    case 3:
      unint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v16;
      *unint64_t v16 = v0;
      v16[1] = sub_100305B3C;
      uint64_t result = sub_100308ACC(v0 + 168);
      break;
    case 4:
      unint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 656) = v17;
      *unint64_t v17 = v0;
      v17[1] = sub_100306110;
      uint64_t result = sub_1003094E0(v0 + 128);
      break;
    case 5:
      unint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 672) = v18;
      void *v18 = v0;
      v18[1] = sub_1003066E4;
      uint64_t result = sub_100309F04(v0 + 88);
      break;
    case 6:
      char v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 688) = v19;
      *char v19 = v0;
      v19[1] = sub_100306CB8;
      uint64_t result = sub_10030A924(v0 + 328);
      break;
    default:
      uint64_t v1 = *(void *)(v0 + 544);
      uint64_t v2 = *(void *)(v0 + 536);
      uint64_t v3 = *(void *)(v0 + 392);
      uint64_t v4 = *(void *)(v0 + 376);
      swift_release();
      *(_OWORD *)(v0 + 16) = *(_OWORD *)v4;
      long long v5 = *(_OWORD *)(v4 + 16);
      long long v6 = *(_OWORD *)(v4 + 32);
      long long v7 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 80) = *(void *)(v4 + 64);
      *(_OWORD *)(v0 + 48) = v6;
      *(_OWORD *)(v0 + 64) = v7;
      *(_OWORD *)(v0 + 32) = v5;
      LocalizedStringResource.init(stringLiteral:)();
      IntentDialog.init(_:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
      type metadata accessor for AppIntentError();
      sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      sub_100311FA4();
      ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
      sub_10008DB18(v3, &qword_10094D320);
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v8 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v8();
      break;
  }
  return result;
}

uint64_t sub_100304EDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 608) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 584);
    uint64_t v4 = *(void *)(v2 + 576);
    long long v5 = sub_100307288;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 584);
    uint64_t v4 = *(void *)(v2 + 576);
    long long v5 = sub_100305000;
  }
  return _swift_task_switch(v5, v4, v3);
}

id sub_100305000()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[64];
  uint64_t v3 = v0[62];
  swift_release();
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[34];
  uint64_t v8 = v0[35];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[62], &qword_10094F088);
    uint64_t v9 = (void *)0x80000001007C02F0;
    unint64_t v10 = 0xD000000000000014;
  }
  else
  {
    (*(void (**)(void, void, void))(v0[64] + 32))(v0[66], v0[62], v0[63]);
    id v11 = [objc_allocWithZone((Class)NSEnergyFormatter) init];
    [v11 setForFoodEnergyUse:1];
    id result = [v11 numberFormatter];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = result;
    uint64_t v14 = v0[66];
    uint64_t v15 = v0[63];
    uint64_t v16 = v0[64];
    [result setFormattingContext:1];

    Measurement.value.getter();
    id v17 = [v11 stringFromValue:1794 unit:nil];
    unint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v18;

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v19 = v0[70];
  uint64_t v28 = v0[68];
  uint64_t v29 = v0[67];
  uint64_t v20 = v0[59];
  uint64_t v21 = v0[58];
  uint64_t v22 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  v23._object = (void *)0x80000001007C0370;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  v24._countAndFlagsBits = v10;
  v24._object = v9;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v26 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 0, 1, v26);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v33;
  v0[37] = v32;
  v0[38] = v31;
  v0[39] = v30;
  v0[40] = v8;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v27 = (uint64_t (*)(void))v0[1];
  return (id)v27();
}

uint64_t sub_10030550C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 584);
    uint64_t v4 = *(void *)(v2 + 576);
    uint64_t v5 = sub_1003073E8;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 584);
    uint64_t v4 = *(void *)(v2 + 576);
    uint64_t v5 = sub_100305630;
  }
  return _swift_task_switch(v5, v4, v3);
}

id sub_100305630()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[64];
  uint64_t v3 = v0[61];
  swift_release();
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[27];
  uint64_t v6 = v0[28];
  uint64_t v7 = v0[29];
  uint64_t v8 = v0[30];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[61], &qword_10094F088);
    uint64_t v9 = (void *)0x80000001007C02F0;
    unint64_t v10 = 0xD000000000000014;
  }
  else
  {
    (*(void (**)(void, void, void))(v0[64] + 32))(v0[65], v0[61], v0[63]);
    id v11 = [objc_allocWithZone((Class)NSEnergyFormatter) init];
    [v11 setForFoodEnergyUse:0];
    id result = [v11 numberFormatter];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = result;
    uint64_t v14 = v0[65];
    uint64_t v15 = v0[63];
    uint64_t v16 = v0[64];
    [result setFormattingContext:1];

    Measurement.value.getter();
    id v17 = [v11 stringFromValue:14 unit:nil];
    unint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v18;

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v19 = v0[70];
  uint64_t v28 = v0[68];
  uint64_t v29 = v0[67];
  uint64_t v20 = v0[59];
  uint64_t v21 = v0[58];
  uint64_t v22 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  v23._object = (void *)0x80000001007C0370;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  v24._countAndFlagsBits = v10;
  v24._object = v9;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v26 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 0, 1, v26);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v33;
  v0[37] = v32;
  v0[38] = v31;
  v0[39] = v30;
  v0[40] = v8;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v27 = (uint64_t (*)(void))v0[1];
  return (id)v27();
}

uint64_t sub_100305B3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    uint64_t v5 = sub_100307548;
  }
  else {
    uint64_t v5 = sub_100305C78;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100305C78()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  swift_release();
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[25];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  uint64_t v30 = v8;
  swift_release();
  swift_release();
  uint64_t v31 = v6;
  swift_release();
  uint64_t v29 = v4;
  swift_release();
  uint64_t v32 = v5;
  swift_release();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v10 = v0[56];
  if (v9)
  {
    sub_10008DB18(v0[56], &qword_10094FE50);
    id v11 = (void *)0x80000001007C02F0;
    unint64_t v12 = 0xD000000000000014;
  }
  else
  {
    uint64_t v14 = v0[51];
    uint64_t v13 = v0[52];
    uint64_t v15 = v0[50];
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 16))(v13, v0[56], v15);
    sub_10008DB18(v10, &qword_10094FE50);
    unint64_t v12 = Measurement<>.formatted()();
    id v11 = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v17 = v0[70];
  uint64_t v27 = v0[68];
  uint64_t v28 = v0[67];
  uint64_t v18 = v0[59];
  uint64_t v19 = v0[58];
  uint64_t v20 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  v21._object = (void *)0x80000001007C0370;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22._countAndFlagsBits = v12;
  v22._object = v11;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v24 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v32;
  v0[37] = v29;
  v0[38] = v31;
  v0[39] = v7;
  v0[40] = v30;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100306110()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 664) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    uint64_t v5 = sub_1003076A0;
  }
  else {
    uint64_t v5 = sub_10030624C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10030624C()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  swift_release();
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[20];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  uint64_t v30 = v8;
  swift_release();
  swift_release();
  uint64_t v29 = v6;
  swift_release();
  uint64_t v31 = v5;
  swift_release();
  uint64_t v32 = v4;
  swift_release();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v10 = v0[55];
  if (v9)
  {
    sub_10008DB18(v0[55], &qword_10094FE50);
    id v11 = (void *)0x80000001007C02F0;
    unint64_t v12 = 0xD000000000000014;
  }
  else
  {
    uint64_t v14 = v0[51];
    uint64_t v13 = v0[52];
    uint64_t v15 = v0[50];
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 16))(v13, v0[55], v15);
    sub_10008DB18(v10, &qword_10094FE50);
    unint64_t v12 = Measurement<>.formatted()();
    id v11 = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v17 = v0[70];
  uint64_t v27 = v0[68];
  uint64_t v28 = v0[67];
  uint64_t v18 = v0[59];
  uint64_t v19 = v0[58];
  uint64_t v20 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD00000000000001FLL;
  v21._object = (void *)0x80000001007C0350;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22._countAndFlagsBits = v12;
  v22._object = v11;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v24 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v32;
  v0[37] = v31;
  v0[38] = v29;
  v0[39] = v7;
  v0[40] = v30;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1003066E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 680) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    uint64_t v5 = sub_1003077F8;
  }
  else {
    uint64_t v5 = sub_100306820;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100306820()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  swift_release();
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[15];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  uint64_t v29 = v6;
  swift_release();
  swift_release();
  uint64_t v30 = v5;
  swift_release();
  uint64_t v31 = v4;
  swift_release();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v10 = v0[54];
  if (v9)
  {
    sub_10008DB18(v0[54], &qword_10094FE50);
    id v11 = (void *)0x80000001007C02F0;
    unint64_t v12 = 0xD000000000000014;
  }
  else
  {
    uint64_t v14 = v0[51];
    uint64_t v13 = v0[52];
    uint64_t v15 = v0[50];
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 16))(v13, v0[54], v15);
    sub_10008DB18(v10, &qword_10094FE50);
    unint64_t v12 = Measurement<>.formatted()();
    id v11 = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v17 = v0[70];
  uint64_t v27 = v0[68];
  uint64_t v28 = v0[67];
  uint64_t v18 = v0[59];
  uint64_t v19 = v0[58];
  uint64_t v20 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v21._object = (void *)0x80000001007C0330;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22._countAndFlagsBits = v12;
  v22._object = v11;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v24 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v31;
  v0[37] = v30;
  v0[38] = v7;
  v0[39] = v29;
  v0[40] = v8;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100306CB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 696) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    uint64_t v5 = sub_100307950;
  }
  else {
    uint64_t v5 = sub_100306DF4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100306DF4()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  swift_release();
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[42];
  uint64_t v7 = v0[43];
  uint64_t v6 = v0[44];
  uint64_t v8 = v0[45];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  uint64_t v29 = v8;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v5;
  swift_release();
  uint64_t v31 = v4;
  swift_release();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v10 = v0[53];
  if (v9)
  {
    sub_10008DB18(v0[53], &qword_10094FE50);
    id v11 = (void *)0x80000001007C02F0;
    unint64_t v12 = 0xD000000000000014;
  }
  else
  {
    uint64_t v14 = v0[51];
    uint64_t v13 = v0[52];
    uint64_t v15 = v0[50];
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 16))(v13, v0[53], v15);
    sub_10008DB18(v10, &qword_10094FE50);
    unint64_t v12 = Measurement<>.formatted()();
    id v11 = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v17 = v0[70];
  uint64_t v27 = v0[68];
  uint64_t v28 = v0[67];
  uint64_t v18 = v0[59];
  uint64_t v19 = v0[58];
  uint64_t v20 = type metadata accessor for _GeneratedContentOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  v21._object = (void *)0x80000001007C0310;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22._countAndFlagsBits = v12;
  v22._object = v11;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  IntentDialog.init(stringInterpolation:)();
  _GeneratedContentFallback.init(_:localeIdentifier:)();
  uint64_t v24 = type metadata accessor for _GeneratedContentFallback();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  sub_1003043EC();
  sub_100311FF8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
  IntentDialog.init<A, B>(from:)();
  v0[36] = v31;
  v0[37] = v30;
  v0[38] = v7;
  v0[39] = v6;
  v0[40] = v29;
  static IntentResult.result<A>(value:dialog:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100307288()
{
  uint64_t v1 = *(void **)(v0 + 592);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003073E8()
{
  uint64_t v1 = *(void **)(v0 + 616);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100307548()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003076A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003077F8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307950()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307AA8(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_1000AFA94(&qword_10094FE50);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v3[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return _swift_task_switch(sub_100307C04, 0, 0);
}

uint64_t sub_100307C04()
{
  *(void *)(v0 + 184) = sub_10007E2D8(0, &qword_10094F130);
  id v1 = [self kilojoules];
  char v2 = static NSObject.== infix(_:_:)();

  IntentParameter.wrappedValue.getter();
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    char v4 = *(unsigned char *)(v0 + 80);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100307D94;
    uint64_t v6 = v3;
    char v7 = v4;
    uint64_t v8 = 20;
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 56);
    char v10 = *(unsigned char *)(v0 + 64);
    id v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v11;
    void *v11 = v0;
    v11[1] = sub_1003081A4;
    uint64_t v6 = v9;
    char v7 = v10;
    uint64_t v8 = 10;
  }
  return sub_10030B5BC(v6, v7, v8, 0);
}

uint64_t sub_100307D94(double a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(double *)(v4 + 200) = a1;
    return _swift_task_switch(sub_100307F34, 0, 0);
  }
}

uint64_t sub_100307F34()
{
  double v1 = v0[25];
  id v2 = [self jouleUnitWithMetricPrefix:9];
  id v3 = [self quantityWithUnit:v2 doubleValue:v1];
  v0[28] = v0[25];
  id v4 = v3;
  *((void *)v0 + 29) = v4;

  sub_10007E2D8(0, &qword_10094F0F0);
  id v5 = [(id)swift_getObjCClassFromMetadata() calorieGoal];
  if (v5)
  {
    uint64_t v13 = v5;
    uint64_t v15 = *((void *)v0 + 21);
    uint64_t v14 = *((void *)v0 + 22);
    uint64_t v17 = *((void *)v0 + 19);
    uint64_t v16 = *((void *)v0 + 20);
    uint64_t v26 = *((void *)v0 + 13);
    id v18 = v4;
    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v20 = Date._bridgeToObjectiveC()().super.isa;
    id v21 = [self quantitySampleWithType:v13 quantity:v18 startDate:isa endDate:v20];
    *((void *)v0 + 30) = v21;

    Swift::String v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
    v22(v14, v17);
    uint64_t v23 = swift_task_alloc();
    *((void *)v0 + 31) = v23;
    *(void *)(v23 + 16) = v26;
    *(void *)(v23 + 24) = v21;
    uint64_t v24 = (void *)swift_task_alloc();
    *((void *)v0 + 32) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1003085B0;
    unint64_t v9 = 0x80000001007C0390;
    unint64_t v12 = &type metadata for Bool;
    char v10 = sub_1003120CC;
    id v5 = (char *)v0 + 65;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = 0xD000000000000010;
    uint64_t v11 = v23;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1003081A4(double a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(double *)(v4 + 216) = a1;
    return _swift_task_switch(sub_100308344, 0, 0);
  }
}

uint64_t sub_100308344()
{
  double v1 = v0[27];
  id v2 = [self kilocalorieUnit];
  id v3 = [self quantityWithUnit:v2 doubleValue:v1];
  v0[28] = v0[27];
  id v4 = v3;
  *((void *)v0 + 29) = v4;

  sub_10007E2D8(0, &qword_10094F0F0);
  id v5 = [(id)swift_getObjCClassFromMetadata() calorieGoal];
  if (v5)
  {
    uint64_t v13 = v5;
    uint64_t v15 = *((void *)v0 + 21);
    uint64_t v14 = *((void *)v0 + 22);
    uint64_t v17 = *((void *)v0 + 19);
    uint64_t v16 = *((void *)v0 + 20);
    uint64_t v26 = *((void *)v0 + 13);
    id v18 = v4;
    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v20 = Date._bridgeToObjectiveC()().super.isa;
    id v21 = [self quantitySampleWithType:v13 quantity:v18 startDate:isa endDate:v20];
    *((void *)v0 + 30) = v21;

    Swift::String v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
    v22(v14, v17);
    uint64_t v23 = swift_task_alloc();
    *((void *)v0 + 31) = v23;
    *(void *)(v23 + 16) = v26;
    *(void *)(v23 + 24) = v21;
    uint64_t v24 = (void *)swift_task_alloc();
    *((void *)v0 + 32) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1003085B0;
    unint64_t v9 = 0x80000001007C0390;
    unint64_t v12 = &type metadata for Bool;
    char v10 = sub_1003120CC;
    id v5 = (char *)v0 + 65;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = 0xD000000000000010;
    uint64_t v11 = v23;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1003085B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003086C8, 0, 0);
}

uint64_t sub_1003086C8()
{
  id v2 = *(void **)(v0 + 232);
  uint64_t v1 = *(void **)(v0 + 240);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 144);
    id v18 = *(void **)(v0 + 232);
    uint64_t v19 = *(void **)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 88);
    id v8 = *(id *)(v0 + 96);
    Measurement.init(value:unit:)();
    uint64_t v9 = sub_1000AFA94(&qword_10094F090);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 0, 1, v9);
    uint64_t v10 = sub_1000AFA94(&qword_10094F0A0);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v4, 1, 1, v10);
    v11(v6, 1, 1, v10);
    v11(v5, 1, 1, v10);
    v11(v7, 1, 1, v10);
    sub_1005E45AC(v3, v4, v6, v5, v7, (uint64_t *)(v0 + 16));

    long long v12 = *(_OWORD *)(v0 + 16);
    long long v13 = *(_OWORD *)(v0 + 32);
    *(void *)(v17 + 32) = *(void *)(v0 + 48);
    *(_OWORD *)uint64_t v17 = v12;
    *(_OWORD *)(v17 + 16) = v13;
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *uint64_t v15 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10030897C()
{
  return sub_100308988();
}

uint64_t sub_100308988()
{
  uint64_t v0 = sub_1000AFA94(&qword_1009569A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100312078();
  static _DialogBuilderEntity.buildExpression<A>(_:)();
  swift_release();
  sub_100311FF8();
  sub_1000A132C(&qword_1009569B0, &qword_1009569A0);
  static _DialogBuilderEntity.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100308ACC(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  sub_1000AFA94(&qword_10094FE50);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_100308C24, 0, 0);
}

uint64_t sub_100308C24()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100308CE4;
  return sub_10030B5BC(v1, v2, 10, 1);
}

uint64_t sub_100308CE4(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100308E80, 0, 0);
  }
}

uint64_t sub_100308E80()
{
  sub_10007E2D8(0, &qword_10094F0F0);
  id v1 = [(id)swift_getObjCClassFromMetadata() moveMinuteGoal];
  if (v1)
  {
    uint64_t v9 = v1;
    double v10 = v0[21];
    uint64_t v12 = *((void *)v0 + 18);
    uint64_t v11 = *((void *)v0 + 19);
    uint64_t v14 = *((void *)v0 + 16);
    uint64_t v13 = *((void *)v0 + 17);
    uint64_t v24 = *((void *)v0 + 10);
    id v15 = [self minuteUnit];
    id v16 = [self quantityWithUnit:v15 doubleValue:v10];

    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    id v19 = [self quantitySampleWithType:v9 quantity:v16 startDate:isa endDate:v18];
    *((void *)v0 + 22) = v19;

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);
    v20(v11, v14);
    uint64_t v21 = swift_task_alloc();
    *((void *)v0 + 23) = v21;
    *(void *)(v21 + 16) = v24;
    *(void *)(v21 + 24) = v19;
    Swift::String v22 = (void *)swift_task_alloc();
    *((void *)v0 + 24) = v22;
    *Swift::String v22 = v0;
    v22[1] = sub_1003090DC;
    unint64_t v5 = 0x80000001007C0390;
    id v8 = &type metadata for Bool;
    uint64_t v6 = sub_100312990;
    id v1 = (char *)v0 + 65;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000010;
    uint64_t v7 = v21;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1003090DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003091F4, 0, 0);
}

uint64_t sub_1003091F4()
{
  uint64_t v1 = *(void **)(v0 + 176);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v17 = *(void **)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = sub_1000AFA94(&qword_10094F090);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
    id v9 = [self minutes];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    uint64_t v10 = sub_1000AFA94(&qword_10094F0A0);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v3, 0, 1, v10);
    v11(v5, 1, 1, v10);
    v11(v4, 1, 1, v10);
    v11(v6, 1, 1, v10);
    sub_1005E45AC(v2, v3, v5, v4, v6, (uint64_t *)(v0 + 16));

    long long v12 = *(_OWORD *)(v0 + 16);
    long long v13 = *(_OWORD *)(v0 + 32);
    *(void *)(v7 + 32) = *(void *)(v0 + 48);
    *(_OWORD *)uint64_t v7 = v12;
    *(_OWORD *)(v7 + 16) = v13;
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *id v15 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1003094D4()
{
  return sub_100308988();
}

uint64_t sub_1003094E0(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  sub_1000AFA94(&qword_10094FE50);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_100309638, 0, 0);
}

uint64_t sub_100309638()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1003096F8;
  return sub_10030B5BC(v1, v2, 5, 2);
}

uint64_t sub_1003096F8(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100309894, 0, 0);
  }
}

uint64_t sub_100309894()
{
  sub_10007E2D8(0, &qword_10094F0F0);
  id v1 = [(id)swift_getObjCClassFromMetadata() exerciseGoal];
  if (v1)
  {
    id v9 = v1;
    double v10 = v0[21];
    uint64_t v12 = *((void *)v0 + 18);
    uint64_t v11 = *((void *)v0 + 19);
    uint64_t v14 = *((void *)v0 + 16);
    uint64_t v13 = *((void *)v0 + 17);
    uint64_t v24 = *((void *)v0 + 10);
    id v15 = [self minuteUnit];
    id v16 = [self quantityWithUnit:v15 doubleValue:v10];

    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    id v19 = [self quantitySampleWithType:v9 quantity:v16 startDate:isa endDate:v18];
    *((void *)v0 + 22) = v19;

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);
    v20(v11, v14);
    uint64_t v21 = swift_task_alloc();
    *((void *)v0 + 23) = v21;
    *(void *)(v21 + 16) = v24;
    *(void *)(v21 + 24) = v19;
    Swift::String v22 = (void *)swift_task_alloc();
    *((void *)v0 + 24) = v22;
    *Swift::String v22 = v0;
    v22[1] = sub_100309AF0;
    unint64_t v5 = 0x80000001007C0390;
    uint64_t v8 = &type metadata for Bool;
    uint64_t v6 = sub_100312990;
    id v1 = (char *)v0 + 65;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000010;
    uint64_t v7 = v21;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100309AF0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100309C08, 0, 0);
}

uint64_t sub_100309C08()
{
  uint64_t v1 = *(void **)(v0 + 176);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = sub_1000AFA94(&qword_10094F090);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
    uint64_t v7 = sub_1000AFA94(&qword_10094F0A0);
    id v15 = v1;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    v8(v3, 1, 1, v7);
    id v9 = [self minutes];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    v8(v4, 0, 1, v7);
    v8(v16, 1, 1, v7);
    v8(v17, 1, 1, v7);
    sub_1005E45AC(v2, v3, v4, v16, v17, (uint64_t *)(v0 + 16));

    long long v10 = *(_OWORD *)(v0 + 16);
    long long v11 = *(_OWORD *)(v0 + 32);
    *(void *)(v5 + 32) = *(void *)(v0 + 48);
    *(_OWORD *)uint64_t v5 = v10;
    *(_OWORD *)(v5 + 16) = v11;
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *uint64_t v13 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100309EF8()
{
  return sub_100308988();
}

uint64_t sub_100309F04(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  sub_1000AFA94(&qword_10094FE50);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_10030A05C, 0, 0);
}

uint64_t sub_10030A05C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10030A11C;
  return sub_10030B5BC(v1, v2, 1, 3);
}

uint64_t sub_10030A11C(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10030A2B8, 0, 0);
  }
}

uint64_t sub_10030A2B8()
{
  sub_10007E2D8(0, &qword_10094F0F0);
  id v1 = [(id)swift_getObjCClassFromMetadata() standGoal];
  if (v1)
  {
    id v9 = v1;
    double v10 = v0[21];
    uint64_t v12 = *((void *)v0 + 18);
    uint64_t v11 = *((void *)v0 + 19);
    uint64_t v14 = *((void *)v0 + 16);
    uint64_t v13 = *((void *)v0 + 17);
    uint64_t v24 = *((void *)v0 + 10);
    id v15 = [self countUnit];
    id v16 = [self quantityWithUnit:v15 doubleValue:v10];

    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    id v19 = [self quantitySampleWithType:v9 quantity:v16 startDate:isa endDate:v18];
    *((void *)v0 + 22) = v19;

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);
    v20(v11, v14);
    uint64_t v21 = swift_task_alloc();
    *((void *)v0 + 23) = v21;
    *(void *)(v21 + 16) = v24;
    *(void *)(v21 + 24) = v19;
    Swift::String v22 = (void *)swift_task_alloc();
    *((void *)v0 + 24) = v22;
    *Swift::String v22 = v0;
    v22[1] = sub_10030A514;
    unint64_t v5 = 0x80000001007C0390;
    uint64_t v8 = &type metadata for Bool;
    uint64_t v6 = sub_100312990;
    id v1 = (char *)v0 + 65;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000010;
    uint64_t v7 = v21;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10030A514()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10030A62C, 0, 0);
}

uint64_t sub_10030A62C()
{
  uint64_t v1 = *(void **)(v0 + 176);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v17 = *(void **)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = sub_1000AFA94(&qword_10094F090);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    uint64_t v8 = sub_1000AFA94(&qword_10094F0A0);
    id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    v9(v3, 1, 1, v8);
    v9(v4, 1, 1, v8);
    id v10 = [self hours];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    v9(v5, 0, 1, v8);
    v9(v16, 1, 1, v8);
    sub_1005E45AC(v2, v3, v4, v5, v16, (uint64_t *)(v0 + 16));

    long long v11 = *(_OWORD *)(v0 + 16);
    long long v12 = *(_OWORD *)(v0 + 32);
    *(void *)(v6 + 32) = *(void *)(v0 + 48);
    *(_OWORD *)uint64_t v6 = v11;
    *(_OWORD *)(v6 + 16) = v12;
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *uint64_t v14 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10030A918()
{
  return sub_100308988();
}

uint64_t sub_10030A924(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  sub_1000AFA94(&qword_10094FE50);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1000AFA94(&qword_10094F088);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_10030AA7C, 0, 0);
}

uint64_t sub_10030AA7C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10030AB3C;
  return sub_10030B5BC(v1, v2, 1, 3);
}

uint64_t sub_10030AB3C(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10030ACD8, 0, 0);
  }
}

uint64_t sub_10030ACD8()
{
  sub_10007E2D8(0, &qword_10094F0F0);
  id v1 = [(id)swift_getObjCClassFromMetadata() standGoal];
  if (v1)
  {
    id v9 = v1;
    double v10 = v0[21];
    uint64_t v12 = *((void *)v0 + 18);
    uint64_t v11 = *((void *)v0 + 19);
    uint64_t v14 = *((void *)v0 + 16);
    uint64_t v13 = *((void *)v0 + 17);
    uint64_t v24 = *((void *)v0 + 10);
    id v15 = [self countUnit];
    id v16 = [self quantityWithUnit:v15 doubleValue:v10];

    Date.init()();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    id v19 = [self quantitySampleWithType:v9 quantity:v16 startDate:isa endDate:v18];
    *((void *)v0 + 22) = v19;

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v12, v14);
    v20(v11, v14);
    uint64_t v21 = swift_task_alloc();
    *((void *)v0 + 23) = v21;
    *(void *)(v21 + 16) = v24;
    *(void *)(v21 + 24) = v19;
    Swift::String v22 = (void *)swift_task_alloc();
    *((void *)v0 + 24) = v22;
    *Swift::String v22 = v0;
    v22[1] = sub_10030AF34;
    unint64_t v5 = 0x80000001007C0390;
    uint64_t v8 = &type metadata for Bool;
    uint64_t v6 = sub_100312990;
    id v1 = (char *)v0 + 65;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000010;
    uint64_t v7 = v21;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10030AF34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10030B04C, 0, 0);
}

uint64_t sub_10030B04C()
{
  uint64_t v1 = *(void **)(v0 + 176);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v17 = v2;
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 88);
    Class v18 = *(void **)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = sub_1000AFA94(&qword_10094F090);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
    uint64_t v9 = sub_1000AFA94(&qword_10094F0A0);
    double v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    v10(v3, 1, 1, v9);
    v10(v5, 1, 1, v9);
    v10(v4, 1, 1, v9);
    id v11 = [self hours];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    v10(v6, 0, 1, v9);
    sub_1005E45AC(v17, v3, v5, v4, v6, (uint64_t *)(v0 + 16));

    long long v12 = *(_OWORD *)(v0 + 16);
    long long v13 = *(_OWORD *)(v0 + 32);
    *(void *)(v7 + 32) = *(void *)(v0 + 48);
    *(_OWORD *)uint64_t v7 = v12;
    *(_OWORD *)(v7 + 16) = v13;
  }
  else
  {
    sub_1003120D4();
    swift_allocError();
    *id v15 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10030B338()
{
  return sub_100308988();
}

uint64_t sub_10030B344()
{
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for URL();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10030B464, v3, v2);
}

uint64_t sub_10030B464()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  swift_release();
  URL.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[2], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[4] + 32))(v0[5], v0[2], v0[3]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v6 = v0[3];
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10030B5BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 104) = a4;
  *(void *)(v5 + 112) = v4;
  *(unsigned char *)(v5 + 144) = a2;
  *(void *)(v5 + 88) = a1;
  *(void *)(v5 + 96) = a3;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v5 + 120) = swift_task_alloc();
  sub_1000AFA94(&qword_10094D320);
  *(void *)(v5 + 128) = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 136) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10030B6B8;
  return sub_10030BA4C(a4);
}

uint64_t sub_10030B6B8(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(unsigned char *)(v4 + 145) = a1 & 1;
    return _swift_task_switch(sub_10030B810, 0, 0);
  }
}

uint64_t sub_10030B810()
{
  if (*(unsigned char *)(v0 + 144) & 1) != 0 || (*(unsigned char *)(v0 + 145))
  {
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v6;
    long long v9 = *(_OWORD *)(v6 + 32);
    long long v8 = *(_OWORD *)(v6 + 48);
    long long v10 = *(_OWORD *)(v6 + 16);
    *(void *)(v0 + 80) = *(void *)(v6 + 64);
    *(_OWORD *)(v0 + 48) = v9;
    *(_OWORD *)(v0 + 64) = v8;
    *(_OWORD *)(v0 + 32) = v10;
    LocalizedStringResource.init(stringLiteral:)();
    IntentDialog.init(_:)();
    uint64_t v11 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
    *(void *)(swift_allocObject() + 16) = v7;
    type metadata accessor for AppIntentError();
    sub_1003126D0((unint64_t *)&qword_100956960, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    sub_100311FA4();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)();
    swift_release();
    sub_10008DB18(v5, &qword_10094D320);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(__n128))(v0 + 8);
  }
  else
  {
    long double v1 = (double)*(uint64_t *)(v0 + 88);
    long double v2 = v1 - fmod(v1, (double)*(uint64_t *)(v0 + 96));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(__n128))(v0 + 8);
    v4.n128_f64[0] = v2;
  }
  return v3(v4);
}

uint64_t sub_10030BA4C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_1000AFA94(&qword_100950E98);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1000AFA94(&qword_100950EA0);
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_10030BB70, 0, 0);
}

uint64_t sub_10030BB70()
{
  id v1 = [self activityGoalScheduleType];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v6 = v0[8];
    sub_10007E2D8(0, &qword_100950760);
    static HKSamplePredicate.sample(type:predicate:)();

    sub_1000AFA94(&qword_100950EB0);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v8 + v7, v4, v6);
    sub_1000AFA94(&qword_100950EB8);
    sub_1000AFA94(&qword_100950EA8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    swift_getKeyPath();
    SortDescriptor.init<A>(_:order:)();
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)();
    AppDependency.wrappedValue.getter();
    long long v9 = (void *)v0[2];
    v0[11] = v9;
    long long v10 = (void *)swift_task_alloc();
    v0[12] = v10;
    *long long v10 = v0;
    v10[1] = sub_10030BDC4;
    uint64_t v2 = v0[5];
    id v1 = v9;
  }
  else
  {
    __break(1u);
  }
  return HKSampleQueryDescriptor.result(for:)(v1, v2);
}

uint64_t sub_10030BDC4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 88);
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_10030C0F0;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v6 = sub_10030BF0C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030BF0C()
{
  unint64_t v1 = (unint64_t)sub_100699E88(v0[14]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_17;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v3 = 0;
      while (1)
      {
        id v4 = (v1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v1 + 8 * v3 + 32);
        uint64_t v5 = v4;
        uint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          break;
        }
        id v7 = (id)v0[3];
        id v8 = [v4 goalType];

        BOOL v9 = v8 == v7;
        ++v3;
        if (v8 == v7 || v6 == v2) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
    }
    BOOL v9 = 0;
LABEL_19:
    uint64_t v15 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v17 = v0[7];
    uint64_t v16 = v0[8];
    uint64_t v18 = v0[5];
    uint64_t v19 = v0[6];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v0[9];
    uint64_t v11 = v0[10];
    uint64_t v13 = v0[8];
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    BOOL v9 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(BOOL))v0[1];
  return v20(v9);
}

uint64_t sub_10030C0F0()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

void sub_10030C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000AFA94(&qword_1009569C8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  AppDependency.wrappedValue.getter();
  id v8 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_100312134;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D15C;
  void aBlock[3] = &unk_1008C13A0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [v8 saveObject:a3 withCompletion:v11];
  _Block_release(v11);
}

uint64_t sub_10030C36C(uint64_t a1)
{
  v1[2] = a1;
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10030C490, v4, v3);
}

uint64_t sub_10030C490()
{
  swift_release();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[3], (uint64_t *)&unk_10094B790);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[5] + 32))(v0[6], v0[3], v0[4]);
    if (qword_10094AE38 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v6 = v0[4];
    sub_100539564(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10030C654@<X0>(uint64_t a1@<X8>)
{
  return sub_10030C68C(&qword_10094A948, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100997C40, a1);
}

uint64_t sub_10030C68C@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1000876DC(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10030C730(uint64_t a1, uint64_t a2)
{
  return sub_10030C760(a1, a2, (uint64_t)&unk_10075DC70, &qword_1009569E8, &qword_1009569F0, (uint64_t)sub_100302324);
}

uint64_t sub_10030C760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = sub_1000AFA94(a4);
  uint64_t v12 = sub_1000A132C(a5, a4);

  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, a6, 0, v11, a2, v12);
}

uint64_t sub_10030C80C(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v4;
  *(void *)(v2 + 80) = *(void *)(v1 + 64);
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 88) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10030C8CC;
  return sub_100304540(a1);
}

uint64_t sub_10030C8CC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

__n128 sub_10030C9C0@<Q0>(uint64_t a1@<X8>)
{
  sub_100311378((uint64_t *)v4);
  long long v2 = v4[3];
  *(_OWORD *)(a1 + 32) = v4[2];
  *(_OWORD *)(a1 + 48) = v2;
  *(void *)(a1 + 64) = v5;
  __n128 result = (__n128)v4[1];
  *(_OWORD *)a1 = v4[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10030CA10(uint64_t a1)
{
  unint64_t v2 = sub_1003043EC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent.ActivityRingOptionsProvider()
{
  return &type metadata for SetFitnessGoalIntent.ActivityRingOptionsProvider;
}

uint64_t destroy for SetFitnessGoalIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SetFitnessGoalIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SetFitnessGoalIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SetFitnessGoalIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent()
{
  return &type metadata for SetFitnessGoalIntent;
}

unsigned char *storeEnumTagSinglePayload for SetFitnessGoalIntent.ActivityRingEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10030CE0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent.ActivityRingEnum()
{
  return &type metadata for SetFitnessGoalIntent.ActivityRingEnum;
}

ValueMetadata *type metadata accessor for AdjustStandGoalIntent()
{
  return &type metadata for AdjustStandGoalIntent;
}

ValueMetadata *type metadata accessor for AdjustExerciseGoalIntent()
{
  return &type metadata for AdjustExerciseGoalIntent;
}

ValueMetadata *type metadata accessor for AdjustMoveGoalIntent()
{
  return &type metadata for AdjustMoveGoalIntent;
}

ValueMetadata *type metadata accessor for ResumeRingsIntent()
{
  return &type metadata for ResumeRingsIntent;
}

uint64_t destroy for PauseYourRingsIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for PauseYourRingsIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PauseYourRingsIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PauseYourRingsIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PauseYourRingsIntent()
{
  return &type metadata for PauseYourRingsIntent;
}

unsigned char *storeEnumTagSinglePayload for PauseYourRingsIntent.PauseRingsPeriodEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10030D148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PauseYourRingsIntent.PauseRingsPeriodEnum()
{
  return &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum;
}

ValueMetadata *type metadata accessor for PauseRingsIntent()
{
  return &type metadata for PauseRingsIntent;
}

ValueMetadata *type metadata accessor for OpenActivityRingIntent()
{
  return &type metadata for OpenActivityRingIntent;
}

uint64_t sub_10030D1A0()
{
  return sub_1000A132C(&qword_100956860, &qword_100956868);
}

uint64_t sub_10030D1DC()
{
  return sub_1000A132C(&qword_100956870, &qword_100956878);
}

uint64_t sub_10030D218()
{
  return sub_1000A132C(&qword_100956880, &qword_100956878);
}

uint64_t sub_10030D254()
{
  return sub_1000A132C(&qword_100956888, &qword_100956890);
}

uint64_t sub_10030D290()
{
  return sub_1000A132C(&qword_100956898, &qword_1009568A0);
}

uint64_t sub_10030D2CC()
{
  return sub_1000A132C(&qword_1009568A8, &qword_1009568B0);
}

uint64_t sub_10030D308()
{
  return sub_1000A132C(&qword_1009568B8, &qword_1009568C0);
}

uint64_t sub_10030D344()
{
  return sub_1000A132C(&qword_1009568C8, &qword_1009568D0);
}

uint64_t sub_10030D380()
{
  return sub_1000A132C(&qword_1009568D8, &qword_1009568E0);
}

uint64_t sub_10030D3BC()
{
  return sub_1000A132C((unint64_t *)&qword_10094E580, &qword_10094E588);
}

uint64_t sub_10030D3F8()
{
  uint64_t v18 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009568E8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v17 = sub_1000AFA94(&qword_100956910);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for IntentParameter.DateKind.date<A>(_:), v6);
  IntentDialog.init(stringLiteral:)();
  uint64_t v15 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 0, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v18);
  return IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_10030D764()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v19 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  __chkstk_darwin(v0);
  uint64_t v18 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100956918);
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v23 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v16 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_1009568F8);
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_100956920);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  *(void *)&long long v21 = 1;
  BYTE8(v21) = 0;
  uint64_t v13 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, enum case for InputConnectionBehavior.default(_:), v20);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  return v16;
}

unint64_t sub_10030DB68()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000AFA94(&qword_100956B68);
  uint64_t v8 = (int *)(sub_1000AFA94(&qword_100956B70) - 8);
  uint64_t v9 = *(void *)v8;
  long long v41 = *(unsigned char **)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v37 = 4 * (void)v41;
  uint64_t v11 = swift_allocObject();
  uint64_t v38 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_100752870;
  *(unsigned char *)(v11 + v10) = 0;
  unint64_t v12 = v11 + v10;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v39 = v6;
  uint64_t v40 = v13;
  uint64_t v14 = v6;
  v13(v5, 1, 1, v6);
  uint64_t v35 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v15 = *(void *)(v35 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v42 = v15 + 56;
  long long v43 = v16;
  v16(v2, 1, 1, v35);
  uint64_t v17 = v5;
  uint64_t v18 = v2;
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v19 = v41;
  unint64_t v20 = v12;
  uint64_t v33 = &v41[v12 + v8[14]];
  unint64_t v34 = v12;
  v41[v12] = 1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v36 = v7 + 56;
  long long v21 = v40;
  v40(v17, 1, 1, v14);
  long long v22 = v2;
  uint64_t v23 = v35;
  v43(v22, 1, 1, v35);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v24 = 2 * (void)v19;
  uint64_t v25 = (unsigned char *)(v20 + 2 * (void)v19);
  uint64_t v33 = &v25[v8[14]];
  *uint64_t v25 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v26 = v39;
  v21(v17, 1, 1, v39);
  uint64_t v27 = v43;
  v43(v18, 1, 1, v23);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v28 = v34;
  uint64_t v29 = &v41[v24 + v34];
  long long v41 = &v29[v8[14]];
  *uint64_t v29 = 3;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = v40;
  v40(v17, 1, 1, v26);
  v27(v18, 1, 1, v23);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v28 + v37) = 4;
  LocalizedStringResource.init(stringLiteral:)();
  v30(v17, 1, 1, v39);
  v27(v18, 1, 1, v23);
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_1005237D8(v38);
}

unint64_t sub_10030E074(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B5BA8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_10030E0C0@<X0>(uint64_t *a1@<X8>)
{
  char v54 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_1009568E8);
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1);
  uint64_t v51 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_1009568F0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for InputConnectionBehavior();
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v6 - 8);
  uint64_t v44 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v43 = (char *)&v37 - v9;
  uint64_t v10 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  uint64_t v58 = v18;
  uint64_t v60 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v55 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v64 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v47 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_1009568F8);
  uint64_t v64 = 0;
  long long v62 = 0u;
  long long v63 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t v45 = AppDependency.__allocating_init(key:manager:)();
  uint64_t v41 = sub_1000AFA94(&qword_100956900);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  unint64_t v20 = v42;
  LocalizedStringResource.init(stringLiteral:)();
  long long v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56);
  v60 += 56;
  uint64_t v40 = v21;
  v21(v20, 0, 1, v18);
  LOBYTE(v62) = 0;
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v56 = v23 + 56;
  uint64_t v57 = v24;
  uint64_t v25 = v43;
  v24(v43, 1, 1, v22);
  v24(v44, 1, 1, v22);
  uint64_t v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v27 = v61 + 104;
  uint64_t v38 = *(void (**)(char *, void, uint64_t))(v61 + 104);
  unint64_t v28 = v46;
  unsigned int v39 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v29 = v59;
  v38(v46, enum case for InputConnectionBehavior.default(_:), v59);
  uint64_t v61 = v27;
  sub_1002FB580();
  uint64_t v44 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v41 = sub_1000AFA94(&qword_100956908);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = v40;
  v40(v20, 0, 1, v58);
  *(void *)&long long v62 = 0;
  BYTE8(v62) = 1;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v50);
  v57(v25, 1, 1, v22);
  uint64_t v31 = v26;
  uint64_t v32 = v38;
  v38(v28, v31, v29);
  uint64_t v50 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v49 = sub_1000AFA94(&qword_100956910);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v30(v20, 0, 1, v58);
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for IntentParameter.DateKind.date<A>(_:), v53);
  v57(v25, 1, 1, v22);
  v32(v28, v39, v59);
  uint64_t result = IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)();
  unint64_t v34 = v54;
  uint64_t v35 = v45;
  uint64_t *v54 = v47;
  v34[1] = v35;
  uint64_t v36 = v50;
  void v34[2] = (uint64_t)v44;
  _OWORD v34[3] = v36;
  void v34[4] = result;
  return result;
}

uint64_t sub_10030E978(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100950E98);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1000AFA94(&qword_100950EA0);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_10030EA9C, 0, 0);
}

uint64_t sub_10030EA9C()
{
  id v1 = [self activityGoalScheduleType];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v6 = v0[7];
    sub_10007E2D8(0, &qword_100950760);
    static HKSamplePredicate.sample(type:predicate:)();

    sub_1000AFA94(&qword_100950EB0);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v8 + v7, v4, v6);
    sub_1000AFA94(&qword_100950EB8);
    sub_1000AFA94(&qword_100950EA8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    swift_getKeyPath();
    SortDescriptor.init<A>(_:order:)();
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)();
    AppDependency.wrappedValue.getter();
    uint64_t v9 = (void *)v0[2];
    v0[10] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[11] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10030ECEC;
    uint64_t v2 = v0[4];
    id v1 = v9;
  }
  else
  {
    __break(1u);
  }
  return HKSampleQueryDescriptor.result(for:)(v1, v2);
}

uint64_t sub_10030ECEC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 80);
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_10030F028;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v6 = sub_10030EE34;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030EE34()
{
  unint64_t v1 = (unint64_t)sub_100699E88(v0[13]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_16;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v3 = 0;
      while (1)
      {
        id v4 = (v1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v1 + 8 * v3 + 32);
        uint64_t v5 = v4;
        uint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          break;
        }
        if ([v4 goalType] == (id)1)
        {

          BOOL v8 = 1;
          goto LABEL_18;
        }
        id v7 = [v5 goalType];

        BOOL v8 = v7 == 0;
        if (v7)
        {
          ++v3;
          if (v6 != v2) {
            continue;
          }
        }
        goto LABEL_18;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
    BOOL v8 = 0;
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v13 = v0[8];
    uint64_t v12 = v0[9];
    uint64_t v14 = v0[7];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v0[8];
    uint64_t v9 = v0[9];
    uint64_t v11 = v0[7];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    BOOL v8 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(BOOL))v0[1];
  return v15(v8);
}

uint64_t sub_10030F028()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_10030F0D8()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v19 = *(void *)(v0 - 8);
  uint64_t v20 = v0;
  __chkstk_darwin(v0);
  uint64_t v18 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100956918);
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v23 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v16 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_100956920);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  *(void *)&long long v21 = 0;
  BYTE8(v21) = 1;
  uint64_t v13 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, enum case for InputConnectionBehavior.default(_:), v20);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  return v16;
}

uint64_t sub_10030F4CC(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100950E98);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1000AFA94(&qword_100950EA0);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_10030F5F0, 0, 0);
}

uint64_t sub_10030F5F0()
{
  id v1 = [self activityGoalScheduleType];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v6 = v0[7];
    sub_10007E2D8(0, &qword_100950760);
    static HKSamplePredicate.sample(type:predicate:)();

    sub_1000AFA94(&qword_100950EB0);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v8 + v7, v4, v6);
    sub_1000AFA94(&qword_100950EB8);
    sub_1000AFA94(&qword_100950EA8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    swift_getKeyPath();
    SortDescriptor.init<A>(_:order:)();
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)();
    AppDependency.wrappedValue.getter();
    uint64_t v9 = (void *)v0[2];
    v0[10] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[11] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10030F840;
    uint64_t v2 = v0[4];
    id v1 = v9;
  }
  else
  {
    __break(1u);
  }
  return HKSampleQueryDescriptor.result(for:)(v1, v2);
}

uint64_t sub_10030F840(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 80);
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_100312994;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v6 = sub_10030F988;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030F988()
{
  unint64_t v1 = (unint64_t)sub_100699E88(v0[13]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_17;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v3 = 0;
      while (1)
      {
        id v4 = (v1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v1 + 8 * v3 + 32);
        uint64_t v5 = v4;
        uint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          break;
        }
        id v7 = [v4 goalType];

        BOOL v8 = v7 == (id)2;
        ++v3;
        if (v7 == (id)2 || v6 == v2) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
    }
    BOOL v8 = 0;
LABEL_19:
    uint64_t v14 = v0[8];
    uint64_t v13 = v0[9];
    uint64_t v16 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v17 = v0[4];
    uint64_t v18 = v0[5];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v12 = v0[7];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    BOOL v8 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(BOOL))v0[1];
  return v19(v8);
}

uint64_t sub_10030FB60()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v18 = *(void *)(v0 - 8);
  uint64_t v19 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100956918);
  uint64_t v3 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v6 - 8);
  BOOL v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v22 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v16 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_100956920);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(void *)&long long v20 = 0;
  BYTE8(v20) = 1;
  uint64_t v14 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v19);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  return v16;
}

uint64_t sub_10030FF10(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100950E98);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1000AFA94(&qword_100950EA0);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_100310034, 0, 0);
}

uint64_t sub_100310034()
{
  id v1 = [self activityGoalScheduleType];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v6 = v0[7];
    sub_10007E2D8(0, &qword_100950760);
    static HKSamplePredicate.sample(type:predicate:)();

    sub_1000AFA94(&qword_100950EB0);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v8 + v7, v4, v6);
    sub_1000AFA94(&qword_100950EB8);
    sub_1000AFA94(&qword_100950EA8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    swift_getKeyPath();
    SortDescriptor.init<A>(_:order:)();
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)();
    AppDependency.wrappedValue.getter();
    uint64_t v9 = (void *)v0[2];
    v0[10] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[11] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100310284;
    uint64_t v2 = v0[4];
    id v1 = v9;
  }
  else
  {
    __break(1u);
  }
  return HKSampleQueryDescriptor.result(for:)(v1, v2);
}

uint64_t sub_100310284(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 80);
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_100312994;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v6 = sub_1003103CC;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003103CC()
{
  unint64_t v1 = (unint64_t)sub_100699E88(v0[13]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (v1 >> 62) {
      goto LABEL_17;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v3 = 0;
      while (1)
      {
        id v4 = (v1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v1 + 8 * v3 + 32);
        uint64_t v5 = v4;
        uint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          break;
        }
        id v7 = [v4 goalType];

        BOOL v8 = v7 == (id)3;
        ++v3;
        if (v7 == (id)3 || v6 == v2) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
    }
    BOOL v8 = 0;
LABEL_19:
    uint64_t v14 = v0[8];
    uint64_t v13 = v0[9];
    uint64_t v16 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v17 = v0[4];
    uint64_t v18 = v0[5];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v12 = v0[7];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    BOOL v8 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(BOOL))v0[1];
  return v19(v8);
}

uint64_t sub_1003105A4()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v18 = *(void *)(v0 - 8);
  uint64_t v19 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100956918);
  uint64_t v3 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v6 - 8);
  BOOL v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v22 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v16 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_100956920);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(void *)&long long v20 = 0;
  BYTE8(v20) = 1;
  uint64_t v14 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v19);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  return v16;
}

unint64_t sub_100310950()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v54 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_100956A48);
  uint64_t v8 = sub_1000AFA94(&qword_100956A50);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v60 = *(void *)(v9 + 72);
  uint64_t v10 = v8 - 8;
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v48 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_10075CD20;
  unint64_t v13 = v12 + v11;
  uint64_t v53 = v12 + v11 + *(int *)(v10 + 56);
  *(unsigned char *)(v12 + v11) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v59(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  uint64_t v58 = sub_1000AFA94(&qword_100956A58);
  uint64_t v61 = v5 + 56;
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = 2 * *(void *)(v5 + 72);
  *(void *)&long long v57 = *(void *)(v5 + 72);
  uint64_t v62 = v14 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100752410;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v50 = v3;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v17 = *(int *)(v10 + 56);
  uint64_t v18 = v10;
  uint64_t v55 = v10;
  uint64_t v47 = v13 + v60 + v17;
  *(unsigned char *)(v13 + v60) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v19 = v54;
  v59(v3, 1, 1, v54);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  uint64_t v56 = v15;
  uint64_t v53 = v15 + v16;
  uint64_t v20 = swift_allocObject();
  long long v51 = xmmword_10074E640;
  *(_OWORD *)(v20 + 16) = xmmword_10074E640;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  long long v21 = v50;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v22 = v60;
  uint64_t v47 = 2 * v60;
  unint64_t v23 = v13;
  unint64_t v52 = v13;
  uint64_t v24 = (unsigned char *)(v13 + 2 * v60);
  v46[1] = &v24[*(int *)(v18 + 56)];
  *uint64_t v24 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v25 = v21;
  uint64_t v26 = v59;
  v59(v21, 1, 1, v19);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = v51;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v49 = v7;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v27 = (unsigned char *)(v23 + v47 + v22);
  uint64_t v28 = v55;
  uint64_t v47 = (uint64_t)&v27[*(int *)(v55 + 56)];
  *uint64_t v27 = 3;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v29 = v25;
  uint64_t v30 = v25;
  uint64_t v31 = v54;
  v26(v29, 1, 1, v54);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = v51;
  uint64_t v32 = v56;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v33 = v60;
  uint64_t v53 = 4 * v60;
  unint64_t v34 = (unsigned char *)(v52 + 4 * v60);
  uint64_t v47 = (uint64_t)&v34[*(int *)(v28 + 56)];
  *unint64_t v34 = 4;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v35 = v30;
  uint64_t v36 = v59;
  v59(v35, 1, 1, v31);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(void *)&long long v51 = v32 + v57;
  uint64_t v37 = swift_allocObject();
  long long v57 = xmmword_1007509E0;
  *(_OWORD *)(v37 + 16) = xmmword_1007509E0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v38 = v50;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v39 = v53 + v33;
  unint64_t v40 = v52;
  uint64_t v41 = (unsigned char *)(v52 + v39);
  uint64_t v53 = (uint64_t)&v41[*(int *)(v55 + 56)];
  *uint64_t v41 = 5;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v42 = v38;
  long long v43 = v38;
  uint64_t v44 = v54;
  v36(v42, 1, 1, v54);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = v57;
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v40 + 6 * v60) = 6;
  LocalizedStringResource.init(stringLiteral:)();
  v36(v43, 1, 1, v44);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = v57;
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  return sub_1005239FC(v48);
}

unint64_t sub_10031132C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B5C90, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_100311378@<X0>(uint64_t *a1@<X8>)
{
  Swift::String v70 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_1009568F0);
  uint64_t v89 = *(void *)(v1 - 8);
  uint64_t v90 = v1;
  __chkstk_darwin(v1);
  uint64_t v78 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for InputConnectionBehavior();
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  __chkstk_darwin(v3);
  uint64_t v84 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = (uint64_t)v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v63 - v9;
  uint64_t v11 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v83 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v93 = 0u;
  long long v94 = 0u;
  uint64_t v95 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v69 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  uint64_t v95 = 0;
  long long v93 = 0u;
  long long v94 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t v68 = AppDependency.__allocating_init(key:manager:)();
  uint64_t v82 = (void (*)(char *, void, uint64_t))sub_1000AFA94(&qword_100956928);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  uint64_t v79 = v15 + 56;
  uint64_t v80 = v18;
  v18(v13, 0, 1, v14);
  char v92 = 7;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v91 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  long long v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v86 = v20 + 56;
  v21(v10, 1, 1, v19);
  v21(v7, 1, 1, v19);
  objc_super v76 = v21;
  uint64_t v95 = 0;
  long long v93 = 0u;
  long long v94 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t v22 = AppDependency.__allocating_init(key:manager:)();
  uint64_t v95 = 0;
  long long v93 = 0u;
  long long v94 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t v23 = AppDependency.__allocating_init(key:manager:)();
  *(void *)&long long v93 = v22;
  *((void *)&v93 + 1) = v23;
  unsigned int v77 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v24 = v88;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 104);
  v87 += 104;
  uint64_t v85 = v25;
  uint64_t v26 = v84;
  ((void (*)(char *))v25)(v84);
  sub_100311F50();
  sub_100303A2C();
  uint64_t v71 = v10;
  uint64_t v27 = v26;
  uint64_t v67 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)();
  uint64_t v81 = sub_1000AFA94(&qword_100956908);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v73 = 0x80000001007C01B0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = v83;
  uint64_t v29 = v80;
  v80(v13, 0, 1, v83);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  v21(v10, 1, 1, v91);
  unsigned int v75 = enum case for IntentParameter.IntControlStyle.stepper<A>(_:);
  uint64_t v30 = v90;
  uint64_t v31 = *(void (**)(void))(v89 + 104);
  v89 += 104;
  uint64_t v82 = (void (*)(char *, void, uint64_t))v31;
  uint64_t v32 = v78;
  v31(v78);
  uint64_t v33 = v27;
  uint64_t v34 = v77;
  v85(v33, v77, v24);
  Swift::String v74 = v17;
  uint64_t v35 = v71;
  uint64_t v66 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v29(v13, 0, 1, v28);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  uint64_t v36 = v76;
  v76(v35, 1, 1, v91);
  uint64_t v37 = v75;
  v82(v32, v75, v30);
  uint64_t v38 = v34;
  uint64_t v39 = v88;
  v85(v84, v38, v88);
  unint64_t v40 = v71;
  uint64_t v65 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v72 = v13;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v41 = v83;
  v80(v13, 0, 1, v83);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  v36(v40, 1, 1, v91);
  uint64_t v42 = v78;
  long long v43 = v82;
  v82(v78, v37, v90);
  uint64_t v44 = v84;
  uint64_t v45 = v77;
  v85(v84, v77, v39);
  uint64_t v46 = v72;
  uint64_t v73 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v47 = v80;
  v80(v46, 0, 1, v41);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  uint64_t v48 = v76;
  v76(v40, 1, 1, v91);
  uint64_t v49 = v75;
  v43(v42, v75, v90);
  v85(v44, v45, v88);
  uint64_t v50 = v72;
  long long v51 = v78;
  uint64_t v64 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v52 = v50;
  v47(v50, 0, 1, v83);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  uint64_t v53 = v40;
  v48(v40, 1, 1, v91);
  v82(v51, v49, v90);
  uint64_t v54 = v84;
  uint64_t v55 = v85;
  uint64_t v56 = v77;
  v85(v84, v77, v88);
  uint64_t v63 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v80(v52, 0, 1, v83);
  *(void *)&long long v93 = 0;
  BYTE8(v93) = 1;
  v76(v53, 1, 1, v91);
  v82(v51, v75, v90);
  v55(v54, v56, v88);
  uint64_t result = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v58 = v70;
  uint64_t v59 = v68;
  *Swift::String v70 = v69;
  v58[1] = v59;
  uint64_t v60 = v66;
  v58[2] = v67;
  v58[3] = v60;
  uint64_t v61 = v73;
  v58[4] = v65;
  v58[5] = v61;
  uint64_t v62 = v63;
  v58[6] = v64;
  v58[7] = v62;
  v58[8] = result;
  return result;
}

unint64_t sub_100311F50()
{
  unint64_t result = qword_100956930;
  if (!qword_100956930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956930);
  }
  return result;
}

unint64_t sub_100311FA4()
{
  unint64_t result = qword_100956968;
  if (!qword_100956968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956968);
  }
  return result;
}

unint64_t sub_100311FF8()
{
  unint64_t result = qword_100956978;
  if (!qword_100956978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956978);
  }
  return result;
}

uint64_t sub_10031204C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100312078()
{
  unint64_t result = qword_1009569A8;
  if (!qword_1009569A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009569A8);
  }
  return result;
}

void sub_1003120CC(uint64_t a1)
{
  sub_10030C1A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1003120D4()
{
  unint64_t result = qword_1009569C0;
  if (!qword_1009569C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009569C0);
  }
  return result;
}

uint64_t sub_100312128()
{
  return sub_100076F58(&qword_1009569C8);
}

uint64_t sub_100312138()
{
  return swift_deallocObject();
}

uint64_t sub_100312148()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  return sub_10030C36C(v2);
}

uint64_t sub_1003121E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10031220C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312264@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003122BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003122E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312340@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10031236C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_1003123C4(uint64_t a1)
{
  sub_100302000(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1008C1400, (uint64_t)sub_100312134, (uint64_t)&unk_1008C1418);
}

unint64_t sub_100312408()
{
  unint64_t result = qword_100956A70;
  if (!qword_100956A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956A70);
  }
  return result;
}

unint64_t sub_10031245C()
{
  unint64_t result = qword_100956A80;
  if (!qword_100956A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956A80);
  }
  return result;
}

uint64_t sub_1003124B0()
{
  return sub_100076F58(&qword_1009569C8);
}

void sub_1003124BC(uint64_t a1)
{
  sub_100302000(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1008C1450, (uint64_t)sub_100312134, (uint64_t)&unk_1008C1468);
}

unint64_t sub_100312500()
{
  unint64_t result = qword_100956AA8;
  if (!qword_100956AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956AA8);
  }
  return result;
}

uint64_t sub_100312554()
{
  return sub_100076F58(&qword_1009569C8);
}

void sub_100312560(uint64_t a1)
{
  sub_1002FFC90(a1, v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_10031256C()
{
  unint64_t result = qword_100956AD0;
  if (!qword_100956AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100956AD0);
  }
  return result;
}

uint64_t sub_1003125C0()
{
  return sub_100076F58(&qword_1009569C8);
}

void sub_1003125CC(uint64_t a1)
{
}

uint64_t sub_1003125D8()
{
  return sub_100076F58(&qword_100956AE0);
}

uint64_t sub_1003125E4(void *a1)
{
  sub_1000AFA94(&qword_100956AE0);

  return sub_1002FE864(a1);
}

void sub_100312668(uint64_t a1)
{
}

uint64_t sub_100312670()
{
  return sub_100076F58(&qword_1009569C8);
}

unint64_t sub_10031267C()
{
  unint64_t result = qword_100956AF0;
  if (!qword_100956AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956AF0);
  }
  return result;
}

uint64_t sub_1003126D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100312718(uint64_t a1)
{
}

uint64_t sub_100312720()
{
  return sub_100076F58(&qword_1009569C8);
}

uint64_t sub_10031272C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100312784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1003127B0()
{
  unint64_t result = qword_100956B78;
  if (!qword_100956B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956B78);
  }
  return result;
}

void sub_100312804(uint64_t a1)
{
}

uint64_t sub_100312810()
{
  return sub_100076F58(&qword_1009569C8);
}

uint64_t sub_10031281C()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1003128A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1003128D4()
{
  unint64_t result = qword_100956BA0;
  if (!qword_100956BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100956BA0);
  }
  return result;
}

uint64_t sub_100312928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t destroy for PauseRingsCustomDateView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PauseRingsCustomDateView()
{
  return &type metadata for PauseRingsCustomDateView;
}

uint64_t sub_100312B40()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100312B5C()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  qword_100956BE0 = (uint64_t)v0;
}

uint64_t sub_100312BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100956C00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100956BF8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100956BF0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v30 = v13;
  uint64_t v31 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_100956C20);
  sub_1000A132C(&qword_100956C28, &qword_100956C20);
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v36 = a1;
  uint64_t v17 = sub_1000AFA94(&qword_100956C08);
  uint64_t v18 = sub_1000A132C(&qword_100956C10, &qword_100956C00);
  uint64_t v19 = sub_1000A132C(&qword_100956C18, &qword_100956C08);
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v38 = v5;
  uint64_t v39 = v17;
  uint64_t v40 = v18;
  uint64_t v41 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v21);
  uint64_t v23 = v32;
  uint64_t v24 = v33;
  uint64_t v25 = v34;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v34);
  uint64_t v38 = v22;
  uint64_t v39 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v30;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v16, v26);
}