BOOL sub_1000B71E0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  int v23;
  BOOL v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  void v32[3];
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void (**v35)(char *);
  void (**v36)(char *, uint64_t);
  char *v37;
  uint64_t (**v38)(char *, uint64_t, uint64_t);
  void (**v39)(char *, uint64_t, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t (*v41)(char *);
  uint64_t v42;

  v7 = v5;
  v41 = a1;
  v42 = a4(0);
  v9 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  v11 = (char *)v32 - v10;
  v12 = sub_1000AFA94(a5);
  __chkstk_darwin(v12 - 8);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void *)(a3 + 16);
  if (v15)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v16 = v9 + 16;
    v40 = v17;
    v18 = a3 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    v19 = *(void *)(v16 + 56);
    v37 = v11;
    v38 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 32);
    v34 = v19;
    v35 = (void (**)(char *))(v16 + 16);
    v36 = (void (**)(char *, uint64_t))(v16 - 8);
    v32[2] = a3;
    swift_bridgeObjectRetain();
    v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
    v32[1] = (v16 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v20 = v42;
      v21 = v16;
      v40(v14, v18, v42);
      v22 = *v39;
      (*v39)(v14, 0, 1, v20);
      v23 = (*v38)(v14, 1, v20);
      v24 = v23 != 1;
      if (v23 == 1) {
        break;
      }
      v33 = v22;
      v25 = v14;
      v26 = v37;
      v27 = v25;
      (*v35)(v37);
      v28 = v41(v26);
      if (v7)
      {
        (*v36)(v26, v20);
        swift_bridgeObjectRelease();
        return v24;
      }
      v29 = v28;
      (*v36)(v26, v20);
      if (v29) {
        break;
      }
      v18 += v34;
      --v15;
      v7 = 0;
      v16 = v21;
      v14 = v27;
      if (!v15)
      {
        v33(v27, 1, 1, v42);
        goto LABEL_9;
      }
    }
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
    v30(v14, 1, 1, v42);
LABEL_9:
    v24 = 0;
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1000B74C0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1000B7550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingFriendListDateItemGroup()
{
  uint64_t result = qword_1009517B8;
  if (!qword_1009517B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000B75E4()
{
  sub_1000AFA94(&qword_10096A9A0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100761B30;
  long long v2 = *(_OWORD *)(v0 + 144);
  long long v3 = *(_OWORD *)(v0 + 176);
  long long v226 = *(_OWORD *)(v0 + 160);
  long long v4 = v226;
  long long v227 = v3;
  long long v5 = *(_OWORD *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 112);
  long long v222 = *(_OWORD *)(v0 + 96);
  long long v7 = v222;
  long long v223 = v6;
  long long v8 = *(_OWORD *)(v0 + 112);
  long long v9 = *(_OWORD *)(v0 + 144);
  long long v224 = *(_OWORD *)(v0 + 128);
  long long v10 = v224;
  long long v225 = v9;
  long long v11 = *(_OWORD *)(v0 + 16);
  long long v12 = *(_OWORD *)(v0 + 48);
  long long v218 = *(_OWORD *)(v0 + 32);
  long long v13 = v218;
  long long v219 = v12;
  long long v14 = *(_OWORD *)(v0 + 48);
  long long v15 = *(_OWORD *)(v0 + 80);
  long long v220 = *(_OWORD *)(v0 + 64);
  long long v16 = v220;
  long long v221 = v15;
  long long v17 = *(_OWORD *)(v0 + 16);
  v217[0] = *(_OWORD *)v0;
  long long v18 = v217[0];
  v217[1] = v17;
  *(_OWORD *)(v1 + 184) = v2;
  *(_OWORD *)(v1 + 200) = v4;
  *(_OWORD *)(v1 + 216) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v1 + 120) = v5;
  *(_OWORD *)(v1 + 136) = v7;
  *(_OWORD *)(v1 + 152) = v8;
  *(_OWORD *)(v1 + 168) = v10;
  *(_OWORD *)(v1 + 56) = v11;
  *(_OWORD *)(v1 + 72) = v13;
  *(_OWORD *)(v1 + 88) = v14;
  *(_OWORD *)(v1 + 104) = v16;
  *(_OWORD *)(v1 + 40) = v18;
  long long v19 = *(_OWORD *)(v0 + 344);
  long long v20 = *(_OWORD *)(v0 + 376);
  long long v214 = *(_OWORD *)(v0 + 360);
  long long v21 = v214;
  long long v215 = v20;
  long long v22 = *(_OWORD *)(v0 + 280);
  long long v23 = *(_OWORD *)(v0 + 312);
  long long v210 = *(_OWORD *)(v0 + 296);
  long long v24 = v210;
  long long v211 = v23;
  long long v26 = *(_OWORD *)(v0 + 312);
  long long v25 = *(_OWORD *)(v0 + 328);
  long long v27 = v25;
  long long v213 = *(_OWORD *)(v0 + 344);
  long long v212 = v25;
  long long v28 = *(_OWORD *)(v0 + 216);
  long long v29 = *(_OWORD *)(v0 + 248);
  v209[2] = *(_OWORD *)(v0 + 232);
  v209[3] = v29;
  long long v30 = *(_OWORD *)(v0 + 264);
  long long v31 = v30;
  v209[5] = *(_OWORD *)(v0 + 280);
  v209[4] = v30;
  long long v32 = *(_OWORD *)(v0 + 200);
  v209[1] = v28;
  v209[0] = v32;
  *(_OWORD *)(v1 + 392) = v19;
  *(_OWORD *)(v1 + 408) = v21;
  *(_OWORD *)(v1 + 424) = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v1 + 328) = v22;
  *(_OWORD *)(v1 + 344) = v24;
  *(_OWORD *)(v1 + 360) = v26;
  *(_OWORD *)(v1 + 376) = v27;
  long long v33 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v1 + 280) = v33;
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v1 + 312) = v31;
  *(_OWORD *)(v1 + 248) = *(_OWORD *)(v0 + 200);
  long long v34 = *(_OWORD *)(v0 + 544);
  long long v35 = *(_OWORD *)(v0 + 576);
  long long v206 = *(_OWORD *)(v0 + 560);
  long long v207 = v35;
  long long v36 = *(_OWORD *)(v0 + 480);
  long long v37 = *(_OWORD *)(v0 + 512);
  long long v202 = *(_OWORD *)(v0 + 496);
  long long v38 = v202;
  long long v203 = v37;
  long long v40 = *(_OWORD *)(v0 + 512);
  long long v39 = *(_OWORD *)(v0 + 528);
  long long v41 = v39;
  long long v205 = *(_OWORD *)(v0 + 544);
  long long v204 = v39;
  long long v42 = *(_OWORD *)(v0 + 416);
  long long v43 = *(_OWORD *)(v0 + 448);
  long long v198 = *(_OWORD *)(v0 + 432);
  long long v44 = v198;
  long long v199 = v43;
  long long v46 = *(_OWORD *)(v0 + 448);
  long long v45 = *(_OWORD *)(v0 + 464);
  long long v47 = v45;
  long long v201 = *(_OWORD *)(v0 + 480);
  long long v200 = v45;
  long long v48 = *(_OWORD *)(v0 + 400);
  long long v49 = v48;
  v197[1] = *(_OWORD *)(v0 + 416);
  v197[0] = v48;
  long long v50 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v1 + 616) = v206;
  *(_OWORD *)(v1 + 632) = v50;
  *(_OWORD *)(v1 + 552) = v38;
  *(_OWORD *)(v1 + 568) = v40;
  *(_OWORD *)(v1 + 584) = v41;
  *(_OWORD *)(v1 + 600) = v34;
  *(_OWORD *)(v1 + 488) = v44;
  *(_OWORD *)(v1 + 504) = v46;
  *(_OWORD *)(v1 + 520) = v47;
  *(_OWORD *)(v1 + 536) = v36;
  *(_OWORD *)(v1 + 456) = v49;
  *(_OWORD *)(v1 + 472) = v42;
  long long v51 = *(_OWORD *)(v0 + 744);
  long long v52 = *(_OWORD *)(v0 + 776);
  long long v194 = *(_OWORD *)(v0 + 760);
  long long v195 = v52;
  long long v53 = *(_OWORD *)(v0 + 680);
  long long v54 = *(_OWORD *)(v0 + 712);
  long long v190 = *(_OWORD *)(v0 + 696);
  long long v55 = v190;
  long long v191 = v54;
  long long v57 = *(_OWORD *)(v0 + 712);
  long long v56 = *(_OWORD *)(v0 + 728);
  long long v58 = v56;
  long long v193 = *(_OWORD *)(v0 + 744);
  long long v192 = v56;
  long long v59 = *(_OWORD *)(v0 + 616);
  long long v60 = *(_OWORD *)(v0 + 648);
  long long v186 = *(_OWORD *)(v0 + 632);
  long long v61 = v186;
  long long v187 = v60;
  long long v63 = *(_OWORD *)(v0 + 648);
  long long v62 = *(_OWORD *)(v0 + 664);
  long long v64 = v62;
  long long v189 = *(_OWORD *)(v0 + 680);
  long long v188 = v62;
  long long v65 = *(_OWORD *)(v0 + 600);
  long long v66 = v65;
  v185[1] = *(_OWORD *)(v0 + 616);
  v185[0] = v65;
  long long v67 = *(_OWORD *)(v0 + 776);
  *(_OWORD *)(v1 + 824) = v194;
  *(_OWORD *)(v1 + 840) = v67;
  *(_OWORD *)(v1 + 760) = v55;
  *(_OWORD *)(v1 + 776) = v57;
  *(_OWORD *)(v1 + 792) = v58;
  *(_OWORD *)(v1 + 808) = v51;
  *(_OWORD *)(v1 + 696) = v61;
  *(_OWORD *)(v1 + 712) = v63;
  *(_OWORD *)(v1 + 728) = v64;
  *(_OWORD *)(v1 + 744) = v53;
  *(_OWORD *)(v1 + 664) = v66;
  *(_OWORD *)(v1 + 680) = v59;
  long long v68 = *(_OWORD *)(v0 + 944);
  long long v69 = *(_OWORD *)(v0 + 976);
  long long v182 = *(_OWORD *)(v0 + 960);
  long long v183 = v69;
  long long v70 = *(_OWORD *)(v0 + 880);
  long long v71 = *(_OWORD *)(v0 + 912);
  long long v178 = *(_OWORD *)(v0 + 896);
  long long v72 = v178;
  long long v179 = v71;
  long long v73 = *(_OWORD *)(v0 + 912);
  long long v74 = *(_OWORD *)(v0 + 944);
  long long v180 = *(_OWORD *)(v0 + 928);
  long long v75 = v180;
  long long v181 = v74;
  long long v76 = *(_OWORD *)(v0 + 816);
  long long v77 = *(_OWORD *)(v0 + 848);
  long long v174 = *(_OWORD *)(v0 + 832);
  long long v78 = v174;
  long long v175 = v77;
  long long v79 = *(_OWORD *)(v0 + 848);
  long long v80 = *(_OWORD *)(v0 + 880);
  long long v176 = *(_OWORD *)(v0 + 864);
  long long v81 = v176;
  long long v177 = v80;
  long long v82 = *(_OWORD *)(v0 + 816);
  v173[0] = *(_OWORD *)(v0 + 800);
  long long v83 = v173[0];
  v173[1] = v82;
  long long v84 = *(_OWORD *)(v0 + 976);
  *(_OWORD *)(v1 + 1032) = v182;
  *(_OWORD *)(v1 + 1048) = v84;
  *(_OWORD *)(v1 + 968) = v72;
  *(_OWORD *)(v1 + 984) = v73;
  *(_OWORD *)(v1 + 1000) = v75;
  *(_OWORD *)(v1 + 1016) = v68;
  *(_OWORD *)(v1 + 904) = v78;
  *(_OWORD *)(v1 + 920) = v79;
  *(_OWORD *)(v1 + 936) = v81;
  *(_OWORD *)(v1 + 952) = v70;
  *(_OWORD *)(v1 + 872) = v83;
  *(_OWORD *)(v1 + 888) = v76;
  long long v85 = *(_OWORD *)(v0 + 1144);
  long long v86 = *(_OWORD *)(v0 + 1176);
  long long v170 = *(_OWORD *)(v0 + 1160);
  long long v171 = v86;
  long long v87 = *(_OWORD *)(v0 + 1080);
  long long v88 = *(_OWORD *)(v0 + 1112);
  long long v166 = *(_OWORD *)(v0 + 1096);
  long long v89 = v166;
  long long v167 = v88;
  long long v90 = *(_OWORD *)(v0 + 1112);
  long long v91 = *(_OWORD *)(v0 + 1144);
  long long v168 = *(_OWORD *)(v0 + 1128);
  long long v92 = v168;
  long long v169 = v91;
  long long v93 = *(_OWORD *)(v0 + 1016);
  long long v94 = *(_OWORD *)(v0 + 1048);
  long long v162 = *(_OWORD *)(v0 + 1032);
  long long v95 = v162;
  long long v163 = v94;
  long long v96 = *(_OWORD *)(v0 + 1048);
  long long v97 = *(_OWORD *)(v0 + 1080);
  long long v164 = *(_OWORD *)(v0 + 1064);
  long long v98 = v164;
  long long v165 = v97;
  long long v99 = *(_OWORD *)(v0 + 1016);
  v161[0] = *(_OWORD *)(v0 + 1000);
  long long v100 = v161[0];
  v161[1] = v99;
  long long v101 = *(_OWORD *)(v0 + 1176);
  *(_OWORD *)(v1 + 1240) = v170;
  *(_OWORD *)(v1 + 1256) = v101;
  *(_OWORD *)(v1 + 1176) = v89;
  *(_OWORD *)(v1 + 1192) = v90;
  *(_OWORD *)(v1 + 1208) = v92;
  *(_OWORD *)(v1 + 1224) = v85;
  *(_OWORD *)(v1 + 1112) = v95;
  *(_OWORD *)(v1 + 1128) = v96;
  *(_OWORD *)(v1 + 1144) = v98;
  *(_OWORD *)(v1 + 1160) = v87;
  *(_OWORD *)(v1 + 1080) = v100;
  *(_OWORD *)(v1 + 1096) = v93;
  long long v102 = *(_OWORD *)(v0 + 1344);
  long long v103 = *(_OWORD *)(v0 + 1376);
  v159[10] = *(_OWORD *)(v0 + 1360);
  v159[11] = v103;
  long long v104 = *(_OWORD *)(v0 + 1280);
  long long v105 = *(_OWORD *)(v0 + 1312);
  v159[6] = *(_OWORD *)(v0 + 1296);
  v159[7] = v105;
  v159[8] = *(_OWORD *)(v0 + 1328);
  v159[9] = v102;
  long long v106 = *(_OWORD *)(v0 + 1216);
  long long v107 = *(_OWORD *)(v0 + 1248);
  v159[2] = *(_OWORD *)(v0 + 1232);
  v159[3] = v107;
  v159[4] = *(_OWORD *)(v0 + 1264);
  v159[5] = v104;
  v159[0] = *(_OWORD *)(v0 + 1200);
  v159[1] = v106;
  long long v108 = *(_OWORD *)(v0 + 1344);
  long long v109 = *(_OWORD *)(v0 + 1376);
  *(_OWORD *)(v1 + 1448) = *(_OWORD *)(v0 + 1360);
  *(_OWORD *)(v1 + 1464) = v109;
  long long v110 = *(_OWORD *)(v0 + 1280);
  long long v111 = *(_OWORD *)(v0 + 1312);
  *(_OWORD *)(v1 + 1384) = *(_OWORD *)(v0 + 1296);
  *(_OWORD *)(v1 + 1400) = v111;
  *(_OWORD *)(v1 + 1416) = *(_OWORD *)(v0 + 1328);
  *(_OWORD *)(v1 + 1432) = v108;
  long long v112 = *(_OWORD *)(v0 + 1216);
  long long v113 = *(_OWORD *)(v0 + 1248);
  *(_OWORD *)(v1 + 1320) = *(_OWORD *)(v0 + 1232);
  *(_OWORD *)(v1 + 1336) = v113;
  *(_OWORD *)(v1 + 1352) = *(_OWORD *)(v0 + 1264);
  *(_OWORD *)(v1 + 1368) = v110;
  *(_OWORD *)(v1 + 1288) = *(_OWORD *)(v0 + 1200);
  *(_OWORD *)(v1 + 1304) = v112;
  long long v114 = *(_OWORD *)(v0 + 1544);
  long long v115 = *(_OWORD *)(v0 + 1576);
  long long v156 = *(_OWORD *)(v0 + 1560);
  long long v157 = v115;
  long long v116 = *(_OWORD *)(v0 + 1480);
  long long v117 = *(_OWORD *)(v0 + 1512);
  long long v152 = *(_OWORD *)(v0 + 1496);
  long long v118 = v152;
  long long v153 = v117;
  long long v119 = *(_OWORD *)(v0 + 1512);
  long long v120 = *(_OWORD *)(v0 + 1544);
  long long v154 = *(_OWORD *)(v0 + 1528);
  long long v121 = v154;
  long long v155 = v120;
  long long v122 = *(_OWORD *)(v0 + 1416);
  long long v123 = *(_OWORD *)(v0 + 1448);
  long long v148 = *(_OWORD *)(v0 + 1432);
  long long v124 = v148;
  long long v149 = v123;
  long long v125 = *(_OWORD *)(v0 + 1448);
  long long v126 = *(_OWORD *)(v0 + 1480);
  long long v150 = *(_OWORD *)(v0 + 1464);
  long long v127 = v150;
  long long v151 = v126;
  long long v128 = *(_OWORD *)(v0 + 1416);
  v147[0] = *(_OWORD *)(v0 + 1400);
  long long v129 = v147[0];
  v147[1] = v128;
  long long v130 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v1 + 1656) = v156;
  *(_OWORD *)(v1 + 1672) = v130;
  *(_OWORD *)(v1 + 1592) = v118;
  *(_OWORD *)(v1 + 1608) = v119;
  *(_OWORD *)(v1 + 1624) = v121;
  *(_OWORD *)(v1 + 1640) = v114;
  *(_OWORD *)(v1 + 1528) = v124;
  *(_OWORD *)(v1 + 1544) = v125;
  *(unsigned char *)(v1 + 32) = 1;
  char v228 = *(unsigned char *)(v0 + 192);
  *(unsigned char *)(v1 + 232) = *(unsigned char *)(v0 + 192);
  *(unsigned char *)(v1 + 240) = 5;
  char v216 = *(unsigned char *)(v0 + 392);
  *(unsigned char *)(v1 + 440) = *(unsigned char *)(v0 + 392);
  *(unsigned char *)(v1 + 448) = 0;
  char v208 = *(unsigned char *)(v0 + 592);
  *(unsigned char *)(v1 + 648) = *(unsigned char *)(v0 + 592);
  *(unsigned char *)(v1 + 656) = 2;
  char v196 = *(unsigned char *)(v0 + 792);
  *(unsigned char *)(v1 + 856) = *(unsigned char *)(v0 + 792);
  *(unsigned char *)(v1 + 864) = 8;
  char v184 = *(unsigned char *)(v0 + 992);
  *(unsigned char *)(v1 + 1064) = *(unsigned char *)(v0 + 992);
  *(unsigned char *)(v1 + 1072) = 4;
  char v172 = *(unsigned char *)(v0 + 1192);
  *(unsigned char *)(v1 + 1272) = *(unsigned char *)(v0 + 1192);
  *(unsigned char *)(v1 + 1280) = 6;
  char v160 = *(unsigned char *)(v0 + 1392);
  *(unsigned char *)(v1 + 1480) = *(unsigned char *)(v0 + 1392);
  *(unsigned char *)(v1 + 1488) = 3;
  char v158 = *(unsigned char *)(v0 + 1592);
  *(unsigned char *)(v1 + 1688) = *(unsigned char *)(v0 + 1592);
  *(_OWORD *)(v1 + 1560) = v127;
  *(_OWORD *)(v1 + 1576) = v116;
  *(_OWORD *)(v1 + 1496) = v129;
  *(_OWORD *)(v1 + 1512) = v122;
  *(unsigned char *)(v1 + 1696) = 7;
  long long v131 = *(_OWORD *)(v0 + 1744);
  long long v132 = *(_OWORD *)(v0 + 1776);
  v145[10] = *(_OWORD *)(v0 + 1760);
  v145[11] = v132;
  char v146 = *(unsigned char *)(v0 + 1792);
  long long v133 = *(_OWORD *)(v0 + 1680);
  long long v134 = *(_OWORD *)(v0 + 1712);
  v145[6] = *(_OWORD *)(v0 + 1696);
  v145[7] = v134;
  v145[8] = *(_OWORD *)(v0 + 1728);
  v145[9] = v131;
  long long v135 = *(_OWORD *)(v0 + 1616);
  long long v136 = *(_OWORD *)(v0 + 1648);
  v145[2] = *(_OWORD *)(v0 + 1632);
  v145[3] = v136;
  v145[4] = *(_OWORD *)(v0 + 1664);
  v145[5] = v133;
  v145[0] = *(_OWORD *)(v0 + 1600);
  v145[1] = v135;
  long long v137 = *(_OWORD *)(v0 + 1744);
  long long v138 = *(_OWORD *)(v0 + 1776);
  *(_OWORD *)(v1 + 1864) = *(_OWORD *)(v0 + 1760);
  *(_OWORD *)(v1 + 1880) = v138;
  *(unsigned char *)(v1 + 1896) = *(unsigned char *)(v0 + 1792);
  long long v139 = *(_OWORD *)(v0 + 1680);
  long long v140 = *(_OWORD *)(v0 + 1712);
  *(_OWORD *)(v1 + 1800) = *(_OWORD *)(v0 + 1696);
  *(_OWORD *)(v1 + 1816) = v140;
  *(_OWORD *)(v1 + 1832) = *(_OWORD *)(v0 + 1728);
  *(_OWORD *)(v1 + 1848) = v137;
  long long v141 = *(_OWORD *)(v0 + 1616);
  long long v142 = *(_OWORD *)(v0 + 1648);
  *(_OWORD *)(v1 + 1736) = *(_OWORD *)(v0 + 1632);
  *(_OWORD *)(v1 + 1752) = v142;
  *(_OWORD *)(v1 + 1768) = *(_OWORD *)(v0 + 1664);
  *(_OWORD *)(v1 + 1784) = v139;
  *(_OWORD *)(v1 + 1704) = *(_OWORD *)(v0 + 1600);
  *(_OWORD *)(v1 + 1720) = v141;
  unint64_t v143 = sub_1000D67B0(v1);
  swift_setDeallocating();
  sub_1000B7C20((uint64_t)v217);
  sub_1000B7C20((uint64_t)v209);
  sub_1000B7C20((uint64_t)v197);
  sub_1000B7C20((uint64_t)v185);
  sub_1000B7C20((uint64_t)v173);
  sub_1000B7C20((uint64_t)v161);
  sub_1000B7C20((uint64_t)v159);
  sub_1000B7C20((uint64_t)v147);
  sub_1000B7C20((uint64_t)v145);
  sub_1000AFA94(&qword_10096A9A8);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v143;
}

uint64_t sub_1000B7C20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B7C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C0FF0);
}

uint64_t sub_1000B7CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C0EC0);
}

uint64_t sub_1000B7CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066B834);
}

uint64_t sub_1000B7CCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityStatisticsCollection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000B7D28(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1000B7F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityStatisticsCollection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B7FD4@<X0>(char *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v98 = a3;
  dispatch_semaphore_t v105 = a2;
  long long v106 = a1;
  uint64_t v3 = type metadata accessor for DispatchTimeInterval();
  uint64_t v92 = *(void *)(v3 - 8);
  uint64_t v93 = v3;
  __chkstk_darwin(v3);
  long long v91 = (uint64_t *)((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  long long v89 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v94 = (char *)&v86 - v8;
  uint64_t v9 = type metadata accessor for Calendar.Component();
  long long v103 = *(uint64_t (***)(void, void, void))(v9 - 8);
  uint64_t v104 = v9;
  __chkstk_darwin(v9);
  long long v102 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  long long v101 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v107 = *(void *)(v13 - 8);
  uint64_t v108 = v13;
  uint64_t v14 = *(void *)(v107 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v88 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  long long v87 = (char *)&v86 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  long long v109 = (char *)&v86 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  long long v97 = (char *)&v86 - v21;
  __chkstk_darwin(v20);
  long long v113 = (char *)&v86 - v22;
  uint64_t v23 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v23 - 8);
  long long v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v26 - 8);
  long long v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for DateComponents();
  uint64_t v99 = *(void *)(v29 - 8);
  uint64_t v100 = v29;
  __chkstk_darwin(v29);
  long long v31 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchPredicate();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  long long v35 = (uint64_t *)((char *)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *long long v35 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v35, enum case for DispatchPredicate.notOnQueue(_:), v32);
  char v36 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v35, v32);
  if (v36)
  {
    uint64_t v32 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v28, 1, 1, v32);
    uint64_t v37 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v25, 1, 1, v37);
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    DateComponents.day.setter();
    if (qword_10094A5E8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_1000876DC(v32, (uint64_t)qword_100997610);
  long long v38 = v113;
  Calendar.startOfDay(for:)();
  long long v40 = v102;
  long long v39 = v103;
  uint64_t v41 = v104;
  uint64_t result = ((uint64_t (**)(char *, void, uint64_t))v103)[13](v102, enum case for Calendar.Component.day(_:), v104);
  if (!__OFSUB__(0, v106))
  {
    long long v106 = v31;
    uint64_t v43 = (uint64_t)v101;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    ((void (*)(char *, uint64_t))v39[1])(v40, v41);
    uint64_t v45 = v107;
    uint64_t v44 = v108;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v43, 1, v108) == 1)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v44);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v100);
      sub_10008DB18(v43, (uint64_t *)&unk_10095B890);
    }
    else
    {
      long long v46 = v97;
      dispatch_semaphore_t v105 = *(dispatch_semaphore_t *)(v45 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v105)(v97, v43, v44);
      Calendar.startOfDay(for:)();
      sub_10007E2D8(0, (unint64_t *)&unk_1009555C0);
      id v47 = [(id)swift_getObjCClassFromMetadata() categoryTypeForIdentifier:HKCategoryTypeIdentifierAppleStandHour];
      if (v47)
      {
        long long v48 = v47;
        id v49 = objc_allocWithZone((Class)HKStatisticsCollectionQuery);
        id v50 = v48;
        long long v101 = (char *)(v45 + 32);
        id v51 = v50;
        uint64_t v52 = v44;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        Class v54 = DateComponents._bridgeToObjectiveC()().super.isa;
        long long v102 = (char *)[v49 initWithSampleType:v51 samplePredicate:0 options:64 anchorDate:isa intervalComponents:v54];
        long long v103 = (uint64_t (**)(void, void, void))v51;

        dispatch_semaphore_t v55 = dispatch_semaphore_create(0);
        uint64_t v104 = swift_allocObject();
        uint64_t v56 = v104 + 16;
        sub_10008A330((uint64_t)v111);
        uint64_t v86 = v56;
        sub_1000AEEC8((uint64_t)v111, v56, &qword_100954678);
        uint64_t v58 = v45 + 16;
        long long v57 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
        long long v59 = v87;
        v57(v87, v109, v52);
        long long v60 = v88;
        v57(v88, v113, v52);
        uint64_t v61 = *(unsigned __int8 *)(v58 + 64);
        uint64_t v62 = (v61 + 24) & ~v61;
        uint64_t v63 = (v14 + v61 + v62) & ~v61;
        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = v55;
        uint64_t v65 = v64 + v62;
        long long v66 = (void (*)(uint64_t, char *, uint64_t))v105;
        ((void (*)(uint64_t, char *, uint64_t))v105)(v65, v59, v52);
        v66(v64 + v63, v60, v52);
        *(void *)(v64 + ((v14 + v63 + 7) & 0xFFFFFFFFFFFFFFF8)) = v104;
        v110[4] = sub_10006A924;
        v110[5] = v64;
        v110[0] = _NSConcreteStackBlock;
        v110[1] = 1107296256;
        v110[2] = sub_1000DC1C8;
        v110[3] = &unk_1008BF228;
        long long v67 = _Block_copy(v110);
        dispatch_semaphore_t v105 = v55;
        swift_retain();
        sub_10008A670((uint64_t)sub_10006A924);
        swift_release();
        long long v68 = v102;
        [v102 setInitialResultsHandler:v67];
        _Block_release(v67);
        swift_release();
        long long v69 = v68;
        NSString v70 = String._bridgeToObjectiveC()();
        [v69 setDebugIdentifier:v70];

        [*(id *)(v90 + 16) executeQuery:v69];
        long long v71 = v89;
        static DispatchTime.now()();
        long long v73 = v91;
        uint64_t v72 = v92;
        *long long v91 = 15;
        uint64_t v74 = v93;
        (*(void (**)(void *, void, uint64_t))(v72 + 104))(v73, enum case for DispatchTimeInterval.seconds(_:), v93);
        long long v75 = v94;
        + infix(_:_:)();
        (*(void (**)(void *, uint64_t))(v72 + 8))(v73, v74);
        uint64_t v76 = v96;
        long long v77 = *(void (**)(char *, uint64_t))(v95 + 8);
        v77(v71, v96);
        OS_dispatch_semaphore.wait(timeout:)();
        if (static DispatchTimeoutResult.== infix(_:_:)())
        {
          static os_log_type_t.default.getter();
          id v78 = HKLogActivity;
          os_log(_:dso:log:_:_:)();

          sub_1002B1A88();
          swift_allocError();
          swift_willThrow();

          v77(v75, v76);
          uint64_t v79 = v108;
          long long v80 = *(void (**)(char *, uint64_t))(v107 + 8);
          v80(v109, v108);
          v80(v97, v79);
          v80(v113, v79);
          (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v100);
          return swift_release();
        }

        v77(v75, v76);
        uint64_t v83 = v108;
        long long v84 = *(void (**)(char *, uint64_t))(v107 + 8);
        v84(v109, v108);
        v84(v97, v83);
        v84(v113, v83);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v100);
        uint64_t v85 = v86;
        swift_beginAccess();
        sub_1000AEEC8(v85, (uint64_t)v110, &qword_100954678);
        sub_1000AFF94((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B00C0);
        swift_release();
        long long v82 = v110;
        goto LABEL_11;
      }
      long long v81 = *(void (**)(char *, uint64_t))(v45 + 8);
      v81(v109, v44);
      v81(v46, v44);
      v81(v38, v44);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v100);
    }
    sub_10008A330((uint64_t)v111);
    long long v82 = v111;
LABEL_11:
    sub_1000AEEC8((uint64_t)v82, (uint64_t)v112, &qword_100954678);
    return sub_1000AEEC8((uint64_t)v112, v98, &qword_100954678);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B8D7C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v126 = a1;
  long long v127 = a2;
  uint64_t v124 = a3;
  uint64_t v3 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v116 = (uint64_t)v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v117 = (char *)v111 - v9;
  long long v128 = (void *)type metadata accessor for Calendar.Component();
  uint64_t v10 = *(v128 - 1);
  __chkstk_darwin(v128);
  uint64_t v12 = (char *)v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  long long v122 = (char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v111 - v16;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v114 = (char *)v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  long long v113 = (char *)v111 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  long long v123 = (char *)v111 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  long long v125 = (char *)v111 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)v111 - v28;
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Calendar();
  sub_1000876DC(v30, (uint64_t)qword_100997610);
  Calendar.startOfDay(for:)();
  long long v127 = v29;
  long long v31 = *(uint64_t (**)(void))(v10 + 104);
  LODWORD(v121) = enum case for Calendar.Component.day(_:);
  long long v120 = (void (*)(char *, void, void *))v31;
  uint64_t result = v31(v12);
  if (__OFSUB__(0, v126))
  {
    __break(1u);
  }
  else
  {
    uint64_t v112 = v6;
    long long v119 = v5;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v33 = *(void (**)(char *, void *))(v10 + 8);
    v33(v12, v128);
    uint64_t v126 = v19;
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v34(v17, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v18);
LABEL_8:
      uint64_t v40 = v124;
      sub_10008DB18((uint64_t)v17, (uint64_t *)&unk_10095B890);
      uint64_t v41 = type metadata accessor for ActivityStatisticsCollection();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    }
    v111[0] = *(void *)(v126 + 32);
    v111[1] = v126 + 32;
    ((void (*)(char *, char *, uint64_t))v111[0])(v125, v17, v18);
    long long v35 = v128;
    v120(v12, v121, v128);
    long long v121 = v33;
    char v36 = v122;
    uint64_t v37 = v127;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    v121(v12, v35);
    long long v38 = v36;
    if (v34(v36, 1, v18) == 1)
    {
      long long v39 = *(void (**)(char *, uint64_t))(v126 + 8);
      v39(v125, v18);
      v39(v37, v18);
      uint64_t v17 = v36;
      goto LABEL_8;
    }
    long long v42 = v123;
    ((void (*)(char *, char *, uint64_t))v111[0])(v123, v38, v18);
    uint64_t v43 = v126;
    uint64_t v44 = v18;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
    v45(v113, v125, v18);
    v45(v114, v42, v18);
    uint64_t v46 = (uint64_t)v117;
    DateInterval.init(start:end:)();
    uint64_t v47 = type metadata accessor for DateComponents();
    uint64_t v48 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v119, 1, 1, v47);
    uint64_t v49 = v46;
    id v50 = sub_1000BA368(v46);
    uint64_t v51 = v115;
    swift_retain();
    uint64_t v52 = sub_1000B9918((uint64_t)v50, v51);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v53 = v116;
    sub_1000B9BD4(v49, v116);
    sub_1000BF7C4((uint64_t)v52, 0, (uint64_t)v129);
    sub_1000BCAE4((uint64_t)v52, 0, (uint64_t)v131);
    sub_1000BD61C((uint64_t)v52, 2, (uint64_t)v133);
    sub_1000BB474((uint64_t)v52, 2, (uint64_t)v135);
    sub_1000BEC8C((uint64_t)v52, 5, (uint64_t)v137);
    sub_1000BBFAC((uint64_t)v52, 5, (uint64_t)v139);
    sub_1000BE154((uint64_t)v52, 1, (uint64_t)v141);
    sub_1000BA93C((uint64_t)v52, 5, (uint64_t)v143);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1000BA198((uint64_t)v129, (uint64_t)v131, (uint64_t)v133, (uint64_t)v135, (uint64_t)v137, (uint64_t)v139);
    long long v121 = v55;
    long long v122 = (char *)v54;
    long long v120 = v56;
    uint64_t v115 = v57;
    long long v128 = *(void **)(v118 + 8);
    uint64_t v58 = v112;
    ((void (*)(uint64_t, uint64_t))v128)(v53, v112);
    uint64_t v59 = type metadata accessor for ActivityStatisticsCollection();
    uint64_t v60 = v124;
    sub_1000AEF2C(v48, v124 + *(int *)(v59 + 64), &qword_10094E8A8);
    long long v61 = v129[11];
    *(_OWORD *)(v60 + 160) = v129[10];
    *(_OWORD *)(v60 + 176) = v61;
    *(unsigned char *)(v60 + 192) = v130;
    long long v62 = v129[7];
    *(_OWORD *)(v60 + 96) = v129[6];
    *(_OWORD *)(v60 + 112) = v62;
    long long v63 = v129[9];
    *(_OWORD *)(v60 + 128) = v129[8];
    *(_OWORD *)(v60 + 144) = v63;
    long long v64 = v129[3];
    *(_OWORD *)(v60 + 32) = v129[2];
    *(_OWORD *)(v60 + 48) = v64;
    long long v65 = v129[5];
    *(_OWORD *)(v60 + 64) = v129[4];
    *(_OWORD *)(v60 + 80) = v65;
    long long v66 = v129[1];
    *(_OWORD *)uint64_t v60 = v129[0];
    *(_OWORD *)(v60 + 16) = v66;
    long long v67 = v131[11];
    *(_OWORD *)(v60 + 360) = v131[10];
    *(_OWORD *)(v60 + 376) = v67;
    *(unsigned char *)(v60 + 392) = v132;
    long long v68 = v131[7];
    *(_OWORD *)(v60 + 296) = v131[6];
    *(_OWORD *)(v60 + 312) = v68;
    long long v69 = v131[9];
    *(_OWORD *)(v60 + 328) = v131[8];
    *(_OWORD *)(v60 + 344) = v69;
    long long v70 = v131[0];
    *(_OWORD *)(v60 + 216) = v131[1];
    long long v71 = v131[3];
    *(_OWORD *)(v60 + 232) = v131[2];
    *(_OWORD *)(v60 + 248) = v71;
    long long v72 = v131[5];
    *(_OWORD *)(v60 + 264) = v131[4];
    *(_OWORD *)(v60 + 280) = v72;
    *(_OWORD *)(v60 + 200) = v70;
    long long v73 = v133[11];
    *(_OWORD *)(v60 + 560) = v133[10];
    *(_OWORD *)(v60 + 576) = v73;
    *(unsigned char *)(v60 + 592) = v134;
    long long v74 = v133[7];
    *(_OWORD *)(v60 + 496) = v133[6];
    *(_OWORD *)(v60 + 512) = v74;
    long long v75 = v133[9];
    *(_OWORD *)(v60 + 528) = v133[8];
    *(_OWORD *)(v60 + 544) = v75;
    long long v76 = v133[3];
    *(_OWORD *)(v60 + 432) = v133[2];
    *(_OWORD *)(v60 + 448) = v76;
    long long v77 = v133[5];
    *(_OWORD *)(v60 + 464) = v133[4];
    *(_OWORD *)(v60 + 480) = v77;
    long long v78 = v133[1];
    *(_OWORD *)(v60 + 400) = v133[0];
    *(_OWORD *)(v60 + 416) = v78;
    long long v79 = v135[11];
    *(_OWORD *)(v60 + 760) = v135[10];
    *(_OWORD *)(v60 + 776) = v79;
    *(unsigned char *)(v60 + 792) = v136;
    long long v80 = v135[7];
    *(_OWORD *)(v60 + 696) = v135[6];
    *(_OWORD *)(v60 + 712) = v80;
    long long v81 = v135[9];
    *(_OWORD *)(v60 + 728) = v135[8];
    *(_OWORD *)(v60 + 744) = v81;
    long long v82 = v135[3];
    *(_OWORD *)(v60 + 632) = v135[2];
    *(_OWORD *)(v60 + 648) = v82;
    long long v83 = v135[5];
    *(_OWORD *)(v60 + 664) = v135[4];
    *(_OWORD *)(v60 + 680) = v83;
    long long v84 = v135[1];
    *(_OWORD *)(v60 + 600) = v135[0];
    *(_OWORD *)(v60 + 616) = v84;
    long long v85 = v137[11];
    *(_OWORD *)(v60 + 960) = v137[10];
    *(_OWORD *)(v60 + 976) = v85;
    *(unsigned char *)(v60 + 992) = v138;
    long long v86 = v137[7];
    *(_OWORD *)(v60 + 896) = v137[6];
    *(_OWORD *)(v60 + 912) = v86;
    long long v87 = v137[9];
    *(_OWORD *)(v60 + 928) = v137[8];
    *(_OWORD *)(v60 + 944) = v87;
    long long v88 = v137[3];
    *(_OWORD *)(v60 + 832) = v137[2];
    *(_OWORD *)(v60 + 848) = v88;
    long long v89 = v137[5];
    *(_OWORD *)(v60 + 864) = v137[4];
    *(_OWORD *)(v60 + 880) = v89;
    long long v90 = v137[1];
    *(_OWORD *)(v60 + 800) = v137[0];
    *(_OWORD *)(v60 + 816) = v90;
    long long v91 = v139[11];
    *(_OWORD *)(v60 + 1160) = v139[10];
    *(_OWORD *)(v60 + 1176) = v91;
    *(unsigned char *)(v60 + 1192) = v140;
    long long v92 = v139[7];
    *(_OWORD *)(v60 + 1096) = v139[6];
    *(_OWORD *)(v60 + 1112) = v92;
    long long v93 = v139[9];
    *(_OWORD *)(v60 + 1128) = v139[8];
    *(_OWORD *)(v60 + 1144) = v93;
    long long v94 = v139[3];
    *(_OWORD *)(v60 + 1032) = v139[2];
    *(_OWORD *)(v60 + 1048) = v94;
    long long v95 = v139[5];
    *(_OWORD *)(v60 + 1064) = v139[4];
    *(_OWORD *)(v60 + 1080) = v95;
    long long v96 = v139[1];
    *(_OWORD *)(v60 + 1000) = v139[0];
    *(_OWORD *)(v60 + 1016) = v96;
    long long v97 = v141[8];
    *(_OWORD *)(v60 + 1344) = v141[9];
    long long v98 = v141[11];
    *(_OWORD *)(v60 + 1360) = v141[10];
    *(_OWORD *)(v60 + 1376) = v98;
    *(unsigned char *)(v60 + 1392) = v142;
    long long v99 = v141[4];
    *(_OWORD *)(v60 + 1280) = v141[5];
    long long v100 = v141[7];
    *(_OWORD *)(v60 + 1296) = v141[6];
    *(_OWORD *)(v60 + 1312) = v100;
    *(_OWORD *)(v60 + 1328) = v97;
    long long v101 = v141[0];
    *(_OWORD *)(v60 + 1216) = v141[1];
    long long v102 = v141[3];
    *(_OWORD *)(v60 + 1232) = v141[2];
    *(_OWORD *)(v60 + 1248) = v102;
    *(_OWORD *)(v60 + 1264) = v99;
    *(_OWORD *)(v60 + 1200) = v101;
    long long v103 = v143[9];
    long long v104 = v143[11];
    *(_OWORD *)(v60 + 1560) = v143[10];
    *(_OWORD *)(v60 + 1576) = v104;
    *(unsigned char *)(v60 + 1592) = v144;
    long long v105 = v143[5];
    long long v106 = v143[7];
    *(_OWORD *)(v60 + 1496) = v143[6];
    *(_OWORD *)(v60 + 1512) = v106;
    *(_OWORD *)(v60 + 1528) = v143[8];
    *(_OWORD *)(v60 + 1544) = v103;
    long long v107 = v143[1];
    long long v108 = v143[3];
    *(_OWORD *)(v60 + 1432) = v143[2];
    *(_OWORD *)(v60 + 1448) = v108;
    *(_OWORD *)(v60 + 1464) = v143[4];
    *(_OWORD *)(v60 + 1480) = v105;
    *(_OWORD *)(v60 + 1400) = v143[0];
    *(_OWORD *)(v60 + 1416) = v107;
    *(void *)(v60 + 1600) = v122;
    *(void *)(v60 + 1608) = v121;
    uint64_t v109 = (uint64_t)v119;
    *(void *)(v60 + 1616) = v120;
    *(void *)(v60 + 1624) = v115;
    sub_10008DB18(v109, &qword_10094E8A8);
    ((void (*)(uint64_t, uint64_t))v128)(v49, v58);
    long long v110 = *(void (**)(char *, uint64_t))(v43 + 8);
    v110(v123, v44);
    v110(v125, v44);
    v110(v127, v44);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v60, 0, 1, v59);
  }
  return result;
}

uint64_t type metadata accessor for ActivityStatisticsCollection()
{
  uint64_t result = qword_1009672D8;
  if (!qword_1009672D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1000B9918(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000B9A14(0, v2, 0);
    uint64_t v5 = (uint64_t *)(a1 + 32);
    uint64_t v6 = *(void **)(a2 + 24);
    do
    {
      uint64_t v8 = *v5++;
      uint64_t v7 = v8;
      id v9 = [v6 activitySummaryForCacheIndex:v8];
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_1000B9A14(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000B9A14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9A34(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B9A34(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AFA94(&qword_10094E8C0);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000AFA94(&qword_10094E8C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B9BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066B8E8);
}

uint64_t sub_1000B9BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = type metadata accessor for DateInterval();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  long long v65 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Calendar.Component();
  uint64_t v58 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v54 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v9 - 8);
  uint64_t v59 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  long long v64 = (char *)&v49 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v49 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v49 - v21;
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1000876DC(v6, (uint64_t)qword_100997610);
  uint64_t v52 = v6;
  uint64_t v69 = a1;
  DateInterval.start.getter();
  long long v62 = v22;
  Calendar.startOfDay(for:)();
  uint64_t v24 = v12;
  uint64_t v53 = v12;
  uint64_t v25 = v20;
  uint64_t v26 = v24 + 8;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v50 = v11;
  v27(v25, v11);
  uint64_t v28 = v54;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  uint64_t v51 = v8;
  v29(v8, v23, v6);
  uint64_t v30 = v58;
  uint64_t v32 = v60;
  uint64_t v31 = v61;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v60, enum case for Calendar.Component.day(_:), v61);
  DateInterval.end.getter();
  Calendar.startOfDay(for:)();
  long long v63 = v15;
  uint64_t v33 = v15;
  uint64_t v34 = v50;
  v27(v33, v50);
  uint64_t v35 = (uint64_t)v59;
  char v36 = v51;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v56 = v25;
  uint64_t v57 = v26;
  dispatch_semaphore_t v55 = v27;
  v27(v25, v34);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v52);
  uint64_t v37 = v65;
  uint64_t v38 = v66;
  uint64_t v39 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v69, v67);
  uint64_t v40 = v53;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v35, 1, v34) == 1)
  {
    uint64_t v41 = v64;
    DateInterval.end.getter();
    long long v42 = v37;
    uint64_t v43 = v41;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v39);
    sub_10008DB18(v35, (uint64_t *)&unk_10095B890);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    uint64_t v43 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v64, v35, v34);
  }
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v45 = v62;
  v44(v56, v62, v34);
  v44(v63, v43, v34);
  DateInterval.init(start:end:)();
  uint64_t v46 = v43;
  uint64_t v47 = (uint64_t (*)(char *, uint64_t))v55;
  v55(v46, v34);
  return v47(v45, v34);
}

uint64_t sub_1000BA198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = 0;
  unint64_t v16 = 0;
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = *(void *)(a4 + 16);
  uint64_t v20 = *(void *)(a5 + 16);
  uint64_t v21 = *(void *)(a6 + 16);
  unint64_t v22 = *(void *)(v18 + 16);
  unint64_t v23 = *(void *)(v20 + 16);
  unint64_t v24 = *(void *)(v21 + 16);
  while (1)
  {
    double v25 = 0.0;
    if (v16 >= *(void *)(v17 + 16))
    {
      char v27 = 1;
      double v26 = 0.0;
      if (v16 >= v22)
      {
LABEL_6:
        int v28 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      double v26 = *(double *)(v17 + v11 + 32);
      char v27 = *(unsigned char *)(v17 + v11 + 48);
      if (v16 >= v22) {
        goto LABEL_6;
      }
    }
    double v25 = *(double *)(v18 + v11 + 32);
    int v28 = *(unsigned __int8 *)(v18 + v11 + 48);
LABEL_9:
    double v29 = 0.0;
    if (v16 >= *(void *)(v19 + 16))
    {
      char v31 = 1;
      double v30 = 0.0;
      if (v16 >= v23)
      {
LABEL_11:
        char v32 = 1;
        if (v16 < v24) {
          goto LABEL_15;
        }
        goto LABEL_12;
      }
    }
    else
    {
      double v30 = *(double *)(v19 + v11 + 32);
      char v31 = *(unsigned char *)(v19 + v11 + 48);
      if (v16 >= v23) {
        goto LABEL_11;
      }
    }
    double v29 = *(double *)(v20 + v11 + 32);
    char v32 = *(unsigned char *)(v20 + v11 + 48);
    if (v16 < v24)
    {
LABEL_15:
      double v34 = *(double *)(v21 + v11 + 32);
      char v33 = *(unsigned char *)(v21 + v11 + 48);
      goto LABEL_16;
    }
LABEL_12:
    char v33 = 1;
    double v34 = 0.0;
LABEL_16:
    if ((*(unsigned char *)(v6 + v11 + 48) & 1) != 0
      || (v27 & 1) != 0
      || v28
      || (v31 & 1) != 0
      || (v32 & 1) != 0
      || (v33 & 1) != 0)
    {
      goto LABEL_3;
    }
    double v35 = *(double *)(v6 + v11 + 32);
    if (v26 <= v35)
    {
      BOOL v36 = __OFADD__(result++, 1);
      if (v36) {
        break;
      }
    }
    if (v30 <= v25)
    {
      BOOL v36 = __OFADD__(v14++, 1);
      if (v36) {
        goto LABEL_37;
      }
    }
    if (v34 <= v29)
    {
      BOOL v36 = __OFADD__(v13++, 1);
      if (v36) {
        goto LABEL_38;
      }
    }
    if (v26 <= v35 && v30 <= v25 && v34 <= v29)
    {
      BOOL v36 = __OFADD__(v12++, 1);
      if (v36)
      {
        __break(1u);
        return 0;
      }
    }
LABEL_3:
    ++v16;
    v11 += 24;
    if (v7 == v16) {
      return result;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1000BA368(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)v33 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v33 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CFE50(a1);
  int64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_1000BA7B8(0, v16, 0);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v17 = v12 + 16;
    uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
    v33[1] = v15;
    uint64_t v20 = (char *)v15 + ((v19 + 32) & ~v19);
    uint64_t v35 = *(void *)(v17 + 56);
    BOOL v36 = v18;
    double v34 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v37 = v17;
    uint64_t v38 = v11;
    do
    {
      v36(v14, v20, v11);
      v21.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
      if (qword_10094A5E8 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Calendar();
      sub_1000876DC(v22, (uint64_t)qword_100997610);
      Class isa = Calendar._bridgeToObjectiveC()().super.isa;
      id v24 = (id)_HKActivityCacheDateComponentsFromDate();

      if (v24)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v25 = type metadata accessor for DateComponents();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 0, 1, v25);
      }
      else
      {
        uint64_t v25 = type metadata accessor for DateComponents();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
      }
      sub_1000AEEC8((uint64_t)v8, (uint64_t)v10, &qword_10094E8A8);
      sub_1000AEF2C((uint64_t)v10, (uint64_t)v5, &qword_10094E8A8);
      type metadata accessor for DateComponents();
      uint64_t v26 = *(void *)(v25 - 8);
      Class v27 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v25) != 1)
      {
        Class v27 = DateComponents._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
      }
      uint64_t v28 = _HKCacheIndexFromDateComponents();

      sub_10008DB18((uint64_t)v10, &qword_10094E8A8);
      (*v34)(v14, v11);
      double v29 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BA7B8(0, v29[2] + 1, 1);
        double v29 = v39;
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1)
      {
        sub_1000BA7B8(v30 > 1, v31 + 1, 1);
        double v29 = v39;
      }
      v29[2] = v31 + 1;
      v29[v31 + 4] = v28;
      v20 += v35;
      --v16;
      uint64_t v11 = v38;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v29;
}

uint64_t sub_1000BA7B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BA7E0(a1, a2, a3, *v3, &qword_10094E8D0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000BA7E0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000AFA94(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BA93C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 _flightsClimbed];
    id v43 = [self countUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BB474@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 appleExerciseTimeGoal];
    id v43 = [self minuteUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BBFAC@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 appleStandHoursGoal];
    id v43 = [self countUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BCAE4@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 activeEnergyBurnedGoal];
    id v43 = [self kilocalorieUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BD61C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 appleExerciseTime];
    id v43 = [self minuteUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BE154@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 distanceWalkingRunning];
    id v43 = [self meterUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BEC8C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 appleStandHours];
    id v43 = [self countUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t sub_1000BF7C4@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v134 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  long long v131 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  DateInterval.start.getter();
  DateInterval.end.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v137, v17, v18);
  char v136 = (void *)v137[0];
  uint64_t v116 = v137[1];
  uint64_t v19 = v137[2];
  double v20 = *(double *)&v137[3];
  double v21 = *(double *)&v137[4];
  double v22 = *(double *)&v137[5];
  double v23 = *(double *)&v137[6];
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  char v130 = v14;
  uint64_t v133 = v8;
  uint64_t v132 = v9 + 8;
  long long v129 = v24;
  v24(v14, v8);
  double v25 = 0.0;
  sub_100087AC8(7, (uint64_t)v138, 0.0, 6.0);
  uint64_t v26 = v138[0];
  uint64_t v27 = v138[1];
  uint64_t v115 = v138[2];
  double v125 = *(double *)&v138[3];
  double v124 = *(double *)&v138[4];
  double v123 = *(double *)&v138[5];
  double v122 = *(double *)&v138[6];
  uint64_t result = sub_100087AC8(7, (uint64_t)&v139, 0.0, 6.0);
  uint64_t v30 = v139;
  uint64_t v29 = v140;
  uint64_t v31 = v141;
  double v121 = v142;
  double v120 = v143;
  double v119 = v144;
  double v118 = v145;
  uint64_t v135 = v15;
  if (!v15)
  {
    double v35 = 0.0;
    double v36 = 0.0;
LABEL_111:
    *(double *)a3 = v36;
    *(double *)(a3 + 8) = v35;
    uint64_t v102 = v116;
    *(void *)(a3 + 16) = v136;
    *(void *)(a3 + 24) = v102;
    *(void *)(a3 + 32) = v19;
    *(double *)(a3 + 40) = v20;
    *(double *)(a3 + 48) = v21;
    *(double *)(a3 + 56) = v22;
    *(double *)(a3 + 64) = v23;
    *(void *)(a3 + 72) = v26;
    *(void *)(a3 + 80) = v27;
    double v103 = v125;
    *(void *)(a3 + 88) = v115;
    *(double *)(a3 + 96) = v103;
    double v104 = v123;
    *(double *)(a3 + 104) = v124;
    *(double *)(a3 + 112) = v104;
    *(double *)(a3 + 120) = v122;
    *(void *)(a3 + 128) = v30;
    *(void *)(a3 + 136) = v29;
    double v105 = v121;
    *(void *)(a3 + 144) = v31;
    *(double *)(a3 + 152) = v105;
    double v106 = v119;
    *(double *)(a3 + 160) = v120;
    *(double *)(a3 + 168) = v106;
    *(double *)(a3 + 176) = v118;
    *(double *)(a3 + 184) = v25;
    *(unsigned char *)(a3 + 192) = a2;
    return result;
  }
  uint64_t v108 = v140;
  uint64_t v109 = v141;
  uint64_t v110 = v27;
  uint64_t v111 = v19;
  uint64_t v113 = a3;
  int v114 = a2;
  unsigned int v128 = enum case for Calendar.Component.weekday(_:);
  long long v127 = (void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v126 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v112 = a1;
  double v34 = (id *)(a1 + 40);
  double v35 = 0.0;
  double v36 = 0.0;
  uint64_t v37 = v131;
  while (1)
  {
    if (!*v34) {
      goto LABEL_5;
    }
    uint64_t v39 = v30;
    uint64_t v40 = v26;
    id v41 = *v34;
    id v42 = [v41 activeEnergyBurned];
    id v43 = [self kilocalorieUnit];
    [v42 doubleValueForUnit:v43];
    double v45 = v44;

    uint64_t v46 = v136;
    if (v33 < v136[2]) {
      break;
    }
LABEL_17:
    char v136 = v46;
    if (qword_10094A5F0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Calendar();
    sub_1000876DC(v49, (uint64_t)qword_100997628);
    uint64_t v50 = v134;
    (*v127)(v37, v128, v134);
    uint64_t v51 = v130;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v52 = Calendar.component(_:from:)();
    v129(v51, v133);
    (*v126)(v37, v50);
    unint64_t v53 = v52 - 1;
    if (v53 > 6)
    {
      uint64_t v26 = v40;
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v26 = v40;
      unint64_t v54 = *(void *)(v40 + 16);
      if (v53 >= v54)
      {
        uint64_t v30 = v39;
      }
      else
      {
        double v55 = v35;
        double v56 = v36;
        double v117 = v22;
        double v57 = v20;
        double v58 = v23;
        double v59 = v21;
        unint64_t v60 = v40 + 24 * v53;
        uint64_t v30 = v39;
        if (*(unsigned char *)(v60 + 48))
        {
          double v61 = 1.0;
          double v62 = 0.0;
        }
        else
        {
          double v62 = *(double *)(v60 + 32);
          double v61 = *(double *)(v60 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v26);
          uint64_t v26 = result;
        }
        unint64_t v54 = *(void *)(v26 + 16);
        if (v53 >= v54) {
          goto LABEL_113;
        }
        double v63 = (v45 + v62 * v61) / (v61 + 1.0);
        unint64_t v64 = v26 + 24 * v53;
        *(double *)(v64 + 32) = v63;
        *(double *)(v64 + 40) = v61 + 1.0;
        *(unsigned char *)(v64 + 48) = 0;
        double v65 = v125;
        BOOL v66 = v125 < v63;
        if (v125 < v63) {
          double v65 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v125 = v65;
        double v67 = v124;
        if (v66) {
          double v67 = v61 + 1.0;
        }
        double v124 = v67;
        double v68 = v123;
        BOOL v69 = v123 < 0.0;
        if (v63 < v123) {
          BOOL v69 = 1;
        }
        if (v69) {
          double v68 = (v45 + v62 * v61) / (v61 + 1.0);
        }
        double v123 = v68;
        double v70 = v122;
        if (v69) {
          double v70 = v61 + 1.0;
        }
        double v122 = v70;
        double v21 = v59;
        double v23 = v58;
        double v20 = v57;
        double v22 = v117;
        double v36 = v56;
        double v35 = v55;
      }
      unint64_t v71 = *(void *)(v30 + 16);
      if (v53 < v71)
      {
        double v117 = v35;
        double v72 = v36;
        double v73 = v22;
        double v74 = v20;
        double v75 = v23;
        double v76 = v21;
        unint64_t v77 = v30 + 24 * v53;
        if (*(unsigned char *)(v77 + 48))
        {
          double v78 = 1.0;
          double v79 = 0.0;
        }
        else
        {
          double v79 = *(double *)(v77 + 32);
          double v78 = *(double *)(v77 + 40);
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4((void *)v30);
          uint64_t v30 = result;
        }
        unint64_t v71 = *(void *)(v30 + 16);
        if (v53 >= v71) {
          goto LABEL_114;
        }
        double v80 = (v79 * v78 + 1.0) / (v78 + 1.0);
        unint64_t v81 = v30 + 24 * v53;
        *(double *)(v81 + 32) = v80;
        *(double *)(v81 + 40) = v78 + 1.0;
        *(unsigned char *)(v81 + 48) = 0;
        double v82 = v121;
        BOOL v83 = v121 < v80;
        if (v121 < v80) {
          double v82 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v121 = v82;
        double v84 = v120;
        if (v83) {
          double v84 = v78 + 1.0;
        }
        double v120 = v84;
        double v85 = v119;
        BOOL v86 = v119 < 0.0;
        if (v80 < v119) {
          BOOL v86 = 1;
        }
        if (v86) {
          double v85 = (v79 * v78 + 1.0) / (v78 + 1.0);
        }
        double v119 = v85;
        double v87 = v118;
        if (v86) {
          double v87 = v78 + 1.0;
        }
        double v118 = v87;
        unint64_t v54 = *(void *)(v26 + 16);
        double v21 = v76;
        double v23 = v75;
        double v20 = v74;
        double v22 = v73;
        double v36 = v72;
        double v35 = v117;
      }
      long long v88 = (double *)(v30 + 32);
      double v25 = 0.0;
      if (v54 && (*(unsigned char *)(v26 + 48) & 1) == 0 && v71 && (*(unsigned char *)(v30 + 48) & 1) == 0)
      {
        double v89 = *(double *)(v26 + 32) / *v88;
        if (v89 <= 0.0) {
          double v89 = 0.0;
        }
        if (*v88 > 0.0) {
          double v25 = v89;
        }
        else {
          double v25 = 0.0;
        }
      }
      if (v54 > 1)
      {
        long long v90 = (double *)(v26 + 56);
        if ((*(unsigned char *)(v26 + 72) & 1) == 0 && v71 > 1)
        {
          long long v91 = (double *)(v30 + 56);
          if ((*(unsigned char *)(v30 + 72) & 1) == 0 && *v91 > 0.0 && *v90 / *v91 > v25) {
            double v25 = *v90 / *v91;
          }
        }
      }
      if (v54 > 2)
      {
        long long v92 = (double *)(v26 + 80);
        if ((*(unsigned char *)(v26 + 96) & 1) == 0 && v71 > 2)
        {
          long long v93 = (double *)(v30 + 80);
          if ((*(unsigned char *)(v30 + 96) & 1) == 0 && *v93 > 0.0 && *v92 / *v93 > v25) {
            double v25 = *v92 / *v93;
          }
        }
      }
      if (v54 > 3)
      {
        long long v94 = (double *)(v26 + 104);
        if ((*(unsigned char *)(v26 + 120) & 1) == 0 && v71 > 3)
        {
          long long v95 = (double *)(v30 + 104);
          if ((*(unsigned char *)(v30 + 120) & 1) == 0 && *v95 > 0.0 && *v94 / *v95 > v25) {
            double v25 = *v94 / *v95;
          }
        }
      }
      if (v54 > 4)
      {
        long long v96 = (double *)(v26 + 128);
        if ((*(unsigned char *)(v26 + 144) & 1) == 0 && v71 > 4)
        {
          long long v97 = (double *)(v30 + 128);
          if ((*(unsigned char *)(v30 + 144) & 1) == 0 && *v97 > 0.0 && *v96 / *v97 > v25) {
            double v25 = *v96 / *v97;
          }
        }
      }
      if (v54 > 5)
      {
        long long v98 = (double *)(v26 + 152);
        if ((*(unsigned char *)(v26 + 168) & 1) == 0 && v71 > 5)
        {
          long long v99 = (double *)(v30 + 152);
          if ((*(unsigned char *)(v30 + 168) & 1) == 0 && *v99 > 0.0 && *v98 / *v99 > v25) {
            double v25 = *v98 / *v99;
          }
        }
      }
      if (v54 > 6)
      {
        long long v100 = (double *)(v26 + 176);
        if ((*(unsigned char *)(v26 + 192) & 1) == 0 && v71 > 6)
        {
          long long v101 = (double *)(v30 + 176);
          if ((*(unsigned char *)(v30 + 192) & 1) == 0 && *v101 > 0.0 && *v100 / *v101 > v25) {
            double v25 = *v100 / *v101;
          }
        }
      }
    }
    double v38 = v35 * v36 + v45;
    double v35 = v35 + 1.0;
    double v36 = v38 / v35;

LABEL_5:
    ++v33;
    v34 += 2;
    v32 += 3;
    if (v135 == v33)
    {
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(a2) = v114;
      a3 = v113;
      uint64_t v19 = v111;
      uint64_t v27 = v110;
      uint64_t v31 = v109;
      uint64_t v29 = v108;
      goto LABEL_111;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v46);
    uint64_t v46 = (void *)result;
  }
  if (v33 < v46[2])
  {
    uint64_t v47 = (double *)&v46[v32];
    v47[4] = v45;
    v47[5] = 1.0;
    *((unsigned char *)v47 + 48) = 0;
    if (v20 < v45)
    {
      double v20 = v45;
      double v21 = 1.0;
    }
    BOOL v48 = v22 < 0.0;
    if (v45 < v22) {
      BOOL v48 = 1;
    }
    if (v48)
    {
      double v22 = v45;
      double v23 = 1.0;
    }
    goto LABEL_17;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

unint64_t sub_1000C02FC()
{
  unint64_t result = qword_10094CFE0;
  if (!qword_10094CFE0)
  {
    sub_1000A1370(&qword_10094CFE8);
    sub_1000D050C(&qword_10094CFF0, (void (*)(uint64_t))type metadata accessor for ActivityRingsCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFE0);
  }
  return result;
}

uint64_t sub_1000C03A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  v33[0] = a4;
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v17 = (char *)v33 - v16;
  *a5 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  double v18 = (int *)type metadata accessor for ActivityRingsCardView();
  uint64_t v19 = (uint64_t)a5 + v18[6];
  uint64_t v35 = a1;
  sub_1000C0774(a1, v19, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
  uint64_t v20 = (uint64_t)a5 + v18[7];
  uint64_t v34 = a2;
  sub_1000AEF2C(a2, v20, &qword_10094C750);
  double v21 = (uint64_t *)((char *)a5 + v18[8]);
  type metadata accessor for DashboardCardCellViewCache();
  sub_1000C0E68(&qword_100960338, (void (*)(uint64_t))type metadata accessor for DashboardCardCellViewCache);
  swift_retain();
  v33[1] = a3;
  double v22 = (char *)v33[0];
  *double v21 = ObservedObject.init(wrappedValue:)();
  v21[1] = v23;
  *(double *)((char *)a5 + v18[9]) = a6;
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v17, (uint64_t)v22, v11);
  v24(v15, (uint64_t)v17, v11);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
  char v26 = 0;
  if (v25 != enum case for DynamicTypeSize.xSmall(_:)
    && v25 != enum case for DynamicTypeSize.small(_:)
    && v25 != enum case for DynamicTypeSize.medium(_:)
    && v25 != enum case for DynamicTypeSize.large(_:))
  {
    char v26 = 1;
    if (v25 != enum case for DynamicTypeSize.xLarge(_:)
      && v25 != enum case for DynamicTypeSize.xxLarge(_:)
      && v25 != enum case for DynamicTypeSize.xxxLarge(_:))
    {
      char v26 = 2;
      if (v25 != enum case for DynamicTypeSize.accessibility1(_:)
        && v25 != enum case for DynamicTypeSize.accessibility2(_:)
        && v25 != enum case for DynamicTypeSize.accessibility3(_:)
        && v25 != enum case for DynamicTypeSize.accessibility4(_:)
        && v25 != enum case for DynamicTypeSize.accessibility5(_:))
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        char v26 = 1;
      }
    }
  }
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v17, v11);
  swift_release();
  v30(v22, v11);
  sub_10008DB18(v34, &qword_10094C750);
  uint64_t result = sub_1000C0CEC(v35);
  uint64_t v32 = (double *)((char *)a5 + v18[5]);
  *(unsigned char *)uint64_t v32 = v26;
  v32[1] = a6;
  v32[2] = 0.0;
  return result;
}

uint64_t type metadata accessor for DashboardCardCellViewCache()
{
  return self;
}

uint64_t sub_1000C0774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1000C07DC(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v47 = a3;
  BOOL v48 = a2;
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  uint64_t v11 = (char *)a1 + v8;
  uint64_t v12 = (char *)a2 + v8;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  v14(v11, v12, v13);
  uint64_t v15 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v16 = v15[5];
  double v17 = &v11[v16];
  double v18 = &v12[v16];
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v21 = v18[16];
  sub_100091494(*(void *)v18, v20, v21);
  *(void *)double v17 = v19;
  *((void *)v17 + 1) = v20;
  v17[16] = v21;
  v11[v15[6]] = v12[v15[6]];
  v11[v15[7]] = v12[v15[7]];
  v11[v15[8]] = v12[v15[8]];
  uint64_t v22 = v15[9];
  uint64_t v23 = *(void **)&v12[v22];
  *(void *)&v11[v22] = v23;
  uint64_t v24 = v15[10];
  __dst = &v11[v24];
  int v25 = &v12[v24];
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  id v29 = v23;
  if (v28(v25, 1, v26))
  {
    uint64_t v30 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(__dst, v25, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  uint64_t v31 = v15[11];
  uint64_t v32 = *(void **)&v12[v31];
  *(void *)&v11[v31] = v32;
  v11[v15[12]] = v12[v15[12]];
  uint64_t v33 = v47[7];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)v48 + v33;
  uint64_t v36 = *(void *)((char *)v48 + v33 + 24);
  id v37 = v32;
  if (v36)
  {
    uint64_t v38 = *((void *)v35 + 4);
    *((void *)v34 + 3) = v36;
    *((void *)v34 + 4) = v38;
    (**(void (***)(char *, char *, uint64_t))(v36 - 8))(v34, v35, v36);
  }
  else
  {
    long long v39 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v39;
    *((void *)v34 + 4) = *((void *)v35 + 4);
  }
  uint64_t v40 = v47[8];
  uint64_t v41 = v47[9];
  id v42 = (void *)((char *)a1 + v40);
  id v43 = (void *)((char *)v48 + v40);
  uint64_t v44 = v43[1];
  *id v42 = *v43;
  v42[1] = v44;
  *(void *)((char *)a1 + v41) = *(void *)((char *)v48 + v41);
  swift_retain();
  return a1;
}

uint64_t sub_1000C0B1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  uint64_t v16 = a3[10];
  double v17 = (void *)(a1 + v16);
  double v18 = (const void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  char v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  id v22 = v15;
  if (v21(v18, 1, v19))
  {
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v26;
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  id v27 = v26;
  return a1;
}

uint64_t sub_1000C0CEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityRingsCard();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000C0D48(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));

  uint64_t v5 = a1 + a2[10];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = *(void **)(a1 + a2[11]);
}

uint64_t sub_1000C0E68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C0EB0()
{
  unint64_t result = qword_10094D028;
  if (!qword_10094D028)
  {
    sub_1000A1370(&qword_10094D030);
    sub_1000D050C(&qword_10094D038, (void (*)(uint64_t))type metadata accessor for HistoryItemsCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D028);
  }
  return result;
}

uint64_t sub_1000C0F54(char *a1, int a2, Swift::UInt a3, char a4, uint64_t a5, int a6)
{
  uint64_t v51 = a5;
  int v43 = a6;
  int v9 = a4 & 1;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  __chkstk_darwin(v10);
  uint64_t v47 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  double v45 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_100955590);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v38 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v17 = (char *)&v38 - v16;
  uint64_t v18 = type metadata accessor for MetricDetailViewModel();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a1;
  char v21 = (uint64_t *)&a1[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache];
  swift_beginAccess();
  int v41 = a2;
  Swift::UInt v42 = a3;
  int v39 = v9;
  unint64_t v22 = sub_1000C9334(a2, a3, v9);
  if (v23)
  {
    unint64_t v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v21;
    unint64_t v53 = (void *)*v21;
    *char v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1004F4508();
      uint64_t v26 = (uint64_t)v53;
    }
    sub_1000C5214(v24, v26);
    *char v21 = v26;
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_endAccess();
  sub_1000AEF2C(v51, (uint64_t)v17, (uint64_t *)&unk_100955590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    return sub_10008DB18((uint64_t)v17, (uint64_t *)&unk_100955590);
  }
  uint64_t v28 = v40;
  sub_1000C19A0((uint64_t)v17, v40, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v29 = v38;
  sub_1000A3BF0(v28, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v18);
  uint64_t v30 = v44;
  swift_beginAccess();
  sub_1000C5430(v29, v41, v42, v39);
  swift_endAccess();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v30;
  *(unsigned char *)(v32 + 24) = v43;
  aBlock[4] = sub_100070494;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008C6A70;
  uint64_t v33 = _Block_copy(aBlock);
  id v34 = v30;
  uint64_t v35 = v45;
  static DispatchQoS.unspecified.getter();
  unint64_t v53 = _swiftEmptyArrayStorage;
  sub_1000C61A8((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  uint64_t v36 = v47;
  uint64_t v37 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v48);
  sub_10006A4B8(v28, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  return swift_release();
}

uint64_t sub_1000C14F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  return sub_1000C151C(a1, a2, a3, a4, a5, *(void *)v6, *(void **)(v6 + 8), a6);
}

uint64_t sub_1000C151C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v56 = a4;
  double v57 = a7;
  uint64_t v55 = a6;
  int v54 = a5;
  uint64_t v53 = a2;
  int v10 = a3;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v47 - v19;
  char v21 = (int *)type metadata accessor for MetricCard();
  __chkstk_darwin(v21);
  char v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MetricDetailViewModel();
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t result = __chkstk_darwin(v25);
  if (v10)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v51 = v28;
    uint64_t v52 = (uint64_t)&v47 - v27;
    uint64_t v47 = (uint64_t *)a8;
    uint64_t v48 = v14;
    uint64_t v49 = v11;
    uint64_t v50 = a1;
    sub_1000C1ACC(a1, (unsigned int (*)(char *, uint64_t, uint64_t))(a1 > 3u), 1, (uint64_t)&v47 - v27);
    sub_1000AEF2C(v56, (uint64_t)v58, &qword_10094CEF0);
    uint64_t v29 = v59;
    if (v59)
    {
      uint64_t v30 = v60;
      sub_10007E4EC(v58, v59);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
      uint64_t v31 = v12;
      uint64_t v32 = v49;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v49);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v58);
    }
    else
    {
      sub_10008DB18((uint64_t)v58, &qword_10094CEF0);
      uint64_t v31 = v12;
      uint64_t v32 = v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v49);
    }
    uint64_t v33 = v57;
    sub_1000A3BF0(v52, v51);
    v23[v21[6]] = 0;
    sub_1000AEF2C((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_1009555F0);
    int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v18, 1, v32);
    id v35 = v33;
    uint64_t v36 = v50;
    if (v34 == 1)
    {
      uint64_t v37 = v48;
      UUID.init()();
      sub_10008DB18((uint64_t)v20, (uint64_t *)&unk_1009555F0);
      sub_10008DB18((uint64_t)v18, (uint64_t *)&unk_1009555F0);
      uint64_t v38 = v37;
      id v39 = v35;
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    }
    else
    {
      sub_10008DB18((uint64_t)v20, (uint64_t *)&unk_1009555F0);
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      int v41 = v48;
      v40(v48, v18, v32);
      uint64_t v38 = v41;
      id v39 = v35;
    }
    char v42 = v54;
    uint64_t v43 = v53;
    uint64_t v44 = v47;
    v40(v23, v38, v32);
    double v45 = &v23[v21[5]];
    *(void *)double v45 = v36;
    *((void *)v45 + 1) = v43;
    v45[16] = 0;
    v23[v21[7]] = v42 & 1;
    v23[v21[8]] = 1;
    sub_1000C1A08(v51, (uint64_t)&v23[v21[9]], (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    v23[v21[10]] = v36;
    *(void *)&v23[v21[11]] = v39;
    v44[3] = (uint64_t)v21;
    v44[4] = (uint64_t)&off_1008D3128;
    uint64_t v46 = sub_1000B1710(v44);
    sub_1000C1A08((uint64_t)v23, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for MetricCard);
    return sub_1000C1A70(v52);
  }
  return result;
}

uint64_t sub_1000C19A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C1A08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C1A70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricDetailViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C1ACC@<X0>(int a1@<W0>, unsigned int (*a2)(char *, uint64_t, uint64_t)@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a2;
  int v7 = a3 & 1;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v48 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v49 = (uint64_t *)((char *)&v45 - v11);
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v47 = (char *)&v45 - v15;
  uint64_t v16 = type metadata accessor for MetricDetailViewModel();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_100955590);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  char v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v45 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))((char *)&v45 - v24, 1, 1, v16);
  double v57 = v25;
  uint64_t v58 = v4;
  uint64_t v51 = v4;
  int v50 = a1;
  char v59 = a1;
  uint64_t v60 = v56;
  int v55 = v7;
  char v61 = v7;
  dispatch thunk of UnfairLock.acquire<A>(_:)();
  uint64_t v52 = v25;
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v23, (uint64_t *)&unk_100955590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16) == 1)
  {
    uint64_t v26 = (uint64_t *)&unk_100955590;
    uint64_t v27 = (uint64_t)v23;
LABEL_5:
    sub_10008DB18(v27, v26);
    uint64_t v30 = v56;
    int v31 = v55;
    goto LABEL_6;
  }
  sub_1000C19A0((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v28 = (void (*)(void, void, void))v49;
  sub_1000AEF2C((uint64_t)&v19[*(int *)(v16 + 36)], (uint64_t)v49, (uint64_t *)&unk_1009546B0);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v29((uint64_t)v28, 1, v54) == 1)
  {
    sub_10006A4B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    uint64_t v26 = (uint64_t *)&unk_1009546B0;
    uint64_t v27 = (uint64_t)v28;
    goto LABEL_5;
  }
  double v45 = v19;
  uint64_t v37 = v54;
  uint64_t v38 = v47;
  uint64_t v49 = *(uint64_t **)(v53 + 32);
  ((void (*)(char *, void, uint64_t))v49)(v47, v28, v54);
  uint64_t v39 = v48;
  uint64_t v30 = v56;
  int v31 = v55;
  sub_1000C3140(v56, v55, v48);
  if (v29(v39, 1, v37) == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
    sub_10006A4B8((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    sub_10008DB18(v39, (uint64_t *)&unk_1009546B0);
  }
  else
  {
    uint64_t v40 = v46;
    uint64_t v41 = v39;
    uint64_t v42 = v54;
    ((void (*)(char *, uint64_t, uint64_t))v49)(v46, v41, v54);
    char v43 = static DateInterval.== infix(_:_:)();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v53 + 8);
    v44(v40, v42);
    v44(v38, v42);
    if (v43)
    {
      sub_1000C19A0((uint64_t)v45, a4, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      return sub_10008DB18((uint64_t)v52, (uint64_t *)&unk_100955590);
    }
    sub_10006A4B8((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  }
LABEL_6:
  id v32 = sub_1000C4F40(v50);
  uint64_t v33 = self;
  id v34 = [v33 quantityWithUnit:v32 doubleValue:0.0];
  id v35 = [v33 quantityWithUnit:v32 doubleValue:0.0];
  sub_1000C3140(v30, v31, a4 + *(int *)(v16 + 36));
  Date.init()();

  *(void *)a4 = v34;
  *(void *)(a4 + 8) = v35;
  *(void *)(a4 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a4 + 32) = v30;
  *(unsigned char *)(a4 + 40) = v31 != 0;
  *(unsigned char *)(a4 + *(int *)(v16 + 40)) = 0;
  return sub_10008DB18((uint64_t)v52, (uint64_t *)&unk_100955590);
}

uint64_t sub_1000C2090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047E07C);
}

uint64_t sub_1000C20A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047E1AC);
}

uint64_t sub_1000C20B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100951EE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100953008);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_100953010);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_100953018);
  uint64_t v61 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v60 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_100953020);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  double v63 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100953028);
  uint64_t v68 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  BOOL v66 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100953030);
  __chkstk_darwin(v16 - 8);
  uint64_t v62 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v2;
  sub_1000AFA94(&qword_100953038);
  sub_100086FBC(&qword_100953040, &qword_100953038, (void (*)(void))sub_10008626C);
  uint64_t v18 = v6;
  Chart.init(content:)();
  uint64_t v19 = sub_1000A132C(&qword_100953068, &qword_100953008);
  uint64_t v56 = v11;
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  uint64_t v20 = type metadata accessor for MetricCardBarChartView();
  uint64_t v21 = *(void *)(v2 + *(int *)(v20 + 24));
  uint64_t v70 = v2;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1000C2A00((void (*)(uint64_t *__return_ptr, uint64_t))sub_100280308, (uint64_t)v69, v21);
  swift_bridgeObjectRelease();
  double v23 = COERCE_DOUBLE(sub_1000C2B68((uint64_t)v22));
  char v25 = v24;
  uint64_t result = swift_bridgeObjectRelease();
  double v27 = 1.0;
  if ((v25 & 1) == 0)
  {
    double v27 = v23;
    if (v23 < 1.0) {
      double v27 = 1.0;
    }
  }
  double v28 = v27 * 1.6;
  if (v28 < 0.0)
  {
    __break(1u);
  }
  else
  {
    double v76 = 0;
    double v77 = v28;
    uint64_t v29 = type metadata accessor for ScaleType();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v55 = v14;
    uint64_t v54 = v2;
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v52 = v20;
    v53(v5, 1, 1, v29);
    uint64_t v31 = sub_1000AFA94(&qword_100953070);
    uint64_t v72 = v18;
    double v73 = &type metadata for BuilderEmpty;
    uint64_t v74 = v19;
    double v75 = &protocol witness table for BuilderEmpty;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v33 = sub_1000C29A0(&qword_100953078, &qword_100953070);
    id v34 = v60;
    uint64_t v35 = v59;
    uint64_t v36 = v56;
    View.chartYScale<A>(domain:type:)();
    sub_10008DB18((uint64_t)v5, &qword_100951EE0);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v35);
    uint64_t v37 = sub_1000C2EAC(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + *(int *)(v52 + 32)), *(unsigned char *)(v2 + *(int *)(v52 + 32) + 8));
    uint64_t v38 = _swiftEmptyArrayStorage;
    if (v37) {
      uint64_t v38 = (void *)v37;
    }
    double v76 = v38;
    v53(v5, 1, 1, v29);
    uint64_t v39 = sub_1000AFA94(&qword_100951F78);
    uint64_t v72 = v35;
    double v73 = (void *)v31;
    uint64_t v74 = OpaqueTypeConformance2;
    double v75 = (void *)v33;
    uint64_t v40 = swift_getOpaqueTypeConformance2();
    uint64_t v41 = sub_1000C29A0((unint64_t *)&qword_100951F80, &qword_100951F78);
    char v43 = v63;
    uint64_t v42 = v64;
    View.chartXScale<A>(domain:type:)();
    sub_10008DB18((uint64_t)v5, &qword_100951EE0);
    swift_bridgeObjectRelease();
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v34, v42);
    __chkstk_darwin(v44);
    sub_1000AFA94(&qword_100953080);
    uint64_t v72 = v42;
    double v73 = (void *)v39;
    uint64_t v74 = v40;
    double v75 = (void *)v41;
    swift_getOpaqueTypeConformance2();
    sub_1000C2E04();
    uint64_t v46 = v66;
    uint64_t v45 = v67;
    View.chartXAxis<A>(content:)();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v45);
    uint64_t v47 = static Alignment.center.getter();
    uint64_t v48 = v62;
    double v50 = sub_1000C2BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v62, 0.0, 1, 0.0, 1, v47, v49);
    (*(void (**)(char *, uint64_t, double))(v68 + 8))(v46, v55, v50);
    return sub_1000AEEC8(v48, v57, &qword_100953030);
  }
  return result;
}

uint64_t sub_1000C29A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1000C2A00(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1001C8E34(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v9 = *(void *)(type metadata accessor for MetricChartData() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v16, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v12 = v16;
      uint64_t v17 = v6;
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_1001C8E34(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v17;
      }
      v6[2] = v14 + 1;
      v6[v14 + 4] = v12;
      v10 += v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1000C2B68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

double sub_1000C2BAC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100953028, &qword_100953030).n128_u64[0];
  return result;
}

__n128 sub_1000C2C08@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    double v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_1000AFA94(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  uint64_t v30 = (_OWORD *)(a9 + *(int *)(sub_1000AFA94(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *uint64_t v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

unint64_t sub_1000C2E04()
{
  unint64_t result = qword_100953088;
  if (!qword_100953088)
  {
    sub_1000A1370(&qword_100953080);
    sub_10008708C();
    sub_1000A132C(&qword_1009530B0, &qword_1009530B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953088);
  }
  return result;
}

uint64_t sub_1000C2EAC(unsigned int (*a1)(char *, uint64_t, uint64_t), char a2)
{
  int v3 = a2 & 1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C3140(a1, v3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_1009546B0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1000AFA94((uint64_t *)&unk_1009559D0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10074E640;
    DateInterval.start.getter();
    DateInterval.end.getter();
    Date.addingTimeInterval(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

uint64_t sub_1000C3140@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v226) = a2;
  long long v227 = a1;
  uint64_t v225 = a3;
  uint64_t v3 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v190 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v190 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar.Identifier();
  uint64_t v212 = *(void *)(v9 - 8);
  long long v213 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v9;
  __chkstk_darwin(v9);
  long long v210 = (char *)&v190 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  long long v221 = *(void **)(v11 - 8);
  long long v222 = (char *)v11;
  __chkstk_darwin(v11);
  char v216 = (char *)&v190 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v228 = (void *)type metadata accessor for DateComponents();
  long long v223 = (void *)*(v228 - 1);
  uint64_t v13 = __chkstk_darwin(v228);
  uint64_t v15 = (char *)&v190 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v220 = (char *)&v190 - v16;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  long long v204 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v215 = (char *)&v190 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  char v24 = (char *)&v190 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  v197 = (char *)&v190 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  long long v199 = (char *)&v190 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  long long v207 = (char *)&v190 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  long long v202 = (void (*)(char *, uint64_t, uint64_t))((char *)&v190 - v32);
  uint64_t v33 = __chkstk_darwin(v31);
  long long v211 = (void (*)(char *, uint64_t, uint64_t))((char *)&v190 - v34);
  uint64_t v35 = __chkstk_darwin(v33);
  long long v195 = (char *)&v190 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  long long v201 = (char *)&v190 - v38;
  __chkstk_darwin(v37);
  v209 = (char *)&v190 - v39;
  uint64_t v40 = type metadata accessor for Calendar();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v190 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v190 - v45;
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = __chkstk_darwin(v47);
  long long v198 = (char *)&v190 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  long long v203 = (char *)&v190 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  long long v219 = (char *)&v190 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  long long v192 = (char *)&v190 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  char v196 = (char *)&v190 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  char v208 = (char *)&v190 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  long long v194 = (char *)&v190 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  long long v200 = (char *)&v190 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  long long v218 = (char *)&v190 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  long long v206 = (char *)&v190 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v217 = (char *)&v190 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  long long v191 = (char *)&v190 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  long long v193 = (char *)&v190 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  long long v205 = (void (*)(char *, char *, uint64_t))((char *)&v190 - v76);
  __chkstk_darwin(v75);
  v230 = (char *)&v190 - v77;
  Date.init()();
  static Calendar.autoupdatingCurrent.getter();
  uint64_t v229 = v47;
  if ((v226 & 1) == 0)
  {
    double v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    char v216 = (char *)(v41 + 56);
    long long v213 = v78;
    v78(v8, 1, 1, v40);
    uint64_t v79 = type metadata accessor for TimeZone();
    uint64_t v80 = *(void *)(v79 - 8);
    long long v211 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 56);
    uint64_t v212 = v79;
    long long v210 = (char *)(v80 + 56);
    v211(v5, 1, 1);
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    DateComponents.year.setter();
    Calendar.date(from:)();
    unint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    long long v218 = (char *)(v48 + 48);
    long long v227 = v81;
    if (v81(v24, 1, v47) == 1)
    {
      ((void (*)(char *, void *))v223[1])(v15, v228);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v46, v40);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v230, v47);
LABEL_27:
      uint64_t v143 = (uint64_t)v24;
      goto LABEL_28;
    }
    v209 = v15;
    long long v207 = v8;
    long long v190 = v5;
    uint64_t v224 = v40;
    uint64_t v226 = v41;
    long long v100 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    long long v101 = v219;
    char v208 = (char *)(v48 + 32);
    long long v205 = v100;
    v100(v219, v24, v47);
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v102 = v221;
    unint64_t v103 = (*((unsigned __int8 *)v221 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v221 + 80);
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = xmmword_1007509E0;
    ((void (*)(unint64_t, void, char *))v102[13])(v104 + v103, enum case for Calendar.Component.year(_:), v222);
    sub_1000C6A18(v104);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    double v105 = v220;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    double v106 = v215;
    Calendar.date(from:)();
    uint64_t v107 = v228;
    uint64_t v108 = v229;
    long long v223 = (void *)v223[1];
    ((void (*)(char *, void *))v223)(v105, v228);
    if (v227(v106, 1, v108) == 1)
    {
      char v24 = v106;
      uint64_t v109 = *(void (**)(char *, uint64_t))(v48 + 8);
      v109(v101, v108);
      ((void (*)(char *, void *))v223)(v209, v107);
      (*(void (**)(char *, uint64_t))(v226 + 8))(v46, v224);
      v109(v230, v108);
      goto LABEL_27;
    }
    uint64_t v135 = v203;
    v205(v203, v106, v108);
    v213(v207, 1, 1, v224);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v211)(v190, 1, 1, v212);
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    char v136 = v204;
    Calendar.date(byAdding:to:wrappingComponents:)();
    uint64_t v137 = v229;
    ((void (*)(char *, void *))v223)(v105, v107);
    if (v227(v136, 1, v137) == 1)
    {
      char v138 = *(void (**)(char *, uint64_t))(v48 + 8);
      v138(v135, v137);
      v138(v219, v137);
      ((void (*)(char *, void *))v223)(v209, v107);
      (*(void (**)(char *, uint64_t))(v226 + 8))(v46, v224);
      v138(v230, v137);
      char v24 = v136;
      goto LABEL_27;
    }
    long long v155 = v198;
    v205(v198, v136, v137);
    uint64_t v156 = v137;
    long long v157 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v157(v217, v135, v156);
    v157(v206, v155, v156);
    uint64_t v158 = v225;
    DateInterval.init(start:end:)();
    v159 = *(void (**)(char *, uint64_t))(v48 + 8);
    v159(v155, v156);
    v159(v135, v156);
    v159(v219, v156);
    ((void (*)(char *, void *))v223)(v209, v228);
    (*(void (**)(char *, uint64_t))(v226 + 8))(v46, v224);
    v159(v230, v156);
LABEL_34:
    uint64_t v182 = type metadata accessor for DateInterval();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v158, 0, 1, v182);
  }
  long long v190 = v5;
  long long v214 = (void *)v48;
  uint64_t v224 = v40;
  uint64_t v226 = v41;
  if (!v227)
  {
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v110 = v221;
    uint64_t v111 = v221[9];
    unint64_t v112 = (*((unsigned __int8 *)v221 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v221 + 80);
    uint64_t v113 = swift_allocObject();
    *(_OWORD *)(v113 + 16) = xmmword_100752410;
    unint64_t v114 = v113 + v112;
    uint64_t v115 = (unsigned int (*)(char *, uint64_t, uint64_t))v110[13];
    uint64_t v116 = v222;
    v115((char *)v114, enum case for Calendar.Component.year(_:), (uint64_t)v222);
    v115((char *)(v114 + v111), enum case for Calendar.Component.month(_:), (uint64_t)v116);
    LODWORD(v219) = enum case for Calendar.Component.day(_:);
    long long v227 = v115;
    ((void (*)(unint64_t))v115)(v114 + 2 * v111);
    sub_1000C6A18(v113);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    double v117 = v220;
    double v118 = v230;
    double v119 = v46;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    char v24 = v209;
    Calendar.date(from:)();
    ((void (*)(char *, void *))v223[1])(v117, v228);
    double v120 = v214;
    uint64_t v121 = v229;
    char v228 = (void *)v214[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v228)(v24, 1, v229) == 1)
    {
      (*(void (**)(char *, uint64_t))(v226 + 8))(v119, v224);
      ((void (*)(char *, uint64_t))v120[1])(v118, v121);
      goto LABEL_27;
    }
    double v144 = (void *)v120[4];
    double v145 = (char *)v205;
    long long v220 = (char *)(v120 + 4);
    long long v223 = v144;
    ((void (*)(void, char *, uint64_t))v144)(v205, v24, v121);
    char v146 = v216;
    v227(v216, v219, (uint64_t)v116);
    char v24 = v201;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v147 = v229;
    long long v221 = (void *)v110[1];
    ((void (*)(char *, char *))v221)(v146, v116);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v228)(v24, 1, v147) == 1)
    {
      long long v148 = (void (*)(char *, uint64_t))v120[1];
      v148(v145, v147);
      (*(void (**)(char *, uint64_t))(v226 + 8))(v119, v224);
      v148(v230, v147);
      goto LABEL_27;
    }
    long long v167 = v193;
    ((void (*)(char *, char *, uint64_t))v223)(v193, v24, v147);
    v227(v146, enum case for Calendar.Component.second(_:), (uint64_t)v116);
    char v24 = v195;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v168 = v229;
    ((void (*)(char *, char *))v221)(v146, v116);
    long long v169 = v119;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v228)(v24, 1, v168) == 1)
    {
      long long v170 = (void (*)(char *, uint64_t))v214[1];
      v170(v167, v168);
      v170((char *)v205, v168);
      (*(void (**)(char *, uint64_t))(v226 + 8))(v119, v224);
      v170(v230, v168);
      goto LABEL_27;
    }
    long long v176 = v191;
    ((void (*)(char *, char *, uint64_t))v223)(v191, v24, v168);
    long long v177 = v167;
    long long v178 = v214;
    long long v179 = (void (*)(char *, char *, uint64_t))v214[2];
    long long v180 = (char *)v205;
    v179(v217, (char *)v205, v168);
    v179(v206, v176, v168);
    uint64_t v158 = v225;
    DateInterval.init(start:end:)();
    long long v181 = (void (*)(char *, uint64_t))v178[1];
    v181(v176, v168);
    v181(v177, v168);
    v181(v180, v168);
    (*(void (**)(char *, uint64_t))(v226 + 8))(v169, v224);
    v181(v230, v168);
    goto LABEL_34;
  }
  if (v227 == (unsigned int (*)(char *, uint64_t, uint64_t))1)
  {
    uint64_t v83 = v212;
    double v82 = v213;
    double v84 = v210;
    (*(void (**)(char *, void, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v212 + 104))(v210, enum case for Calendar.Identifier.gregorian(_:), v213);
    Calendar.init(identifier:)();
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v83 + 8))(v84, v82);
    Class isa = Calendar._bridgeToObjectiveC()().super.isa;
    BOOL v86 = *(void **)(v226 + 8);
    v226 += 8;
    char v228 = v86;
    ((void (*)(char *, uint64_t))v86)(v44, v224);
    double v87 = v217;
    Date.init()();
    Class v88 = Date._bridgeToObjectiveC()().super.isa;
    id v89 = [(objc_class *)isa hk_startOfFitnessWeekBeforeDate:v88];

    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    long long v90 = v214;
    uint64_t v91 = v229;
    long long v227 = (unsigned int (*)(char *, uint64_t, uint64_t))v214[1];
    long long v223 = v214 + 1;
    ((void (*)(char *, uint64_t))v227)(v87, v229);
    long long v92 = v221;
    long long v93 = v222;
    long long v94 = v216;
    long long v220 = (char *)v221[13];
    ((void (*)(char *, void, char *))v220)(v216, enum case for Calendar.Component.day(_:), v222);
    long long v95 = v211;
    long long v96 = v46;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    long long v97 = (void (*)(char *, char *))v92[1];
    v97(v94, v93);
    long long v98 = (void *)v90[6];
    if (((unsigned int (*)(void, uint64_t, uint64_t))v98)(v95, 1, v91) == 1)
    {
      long long v99 = (void (*)(char *, uint64_t))v227;
      ((void (*)(char *, uint64_t))v227)(v218, v91);
    }
    else
    {
      uint64_t v139 = (char *)v214[4];
      long long v221 = v98;
      uint64_t v140 = v97;
      uint64_t v141 = v200;
      long long v219 = (char *)(v214 + 4);
      long long v215 = v139;
      ((void (*)(char *, void, uint64_t))v139)(v200, v95, v91);
      ((void (*)(char *, void, char *))v220)(v94, enum case for Calendar.Component.second(_:), v93);
      long long v95 = v202;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      uint64_t v91 = v229;
      v140(v94, v93);
      if (((unsigned int (*)(void, uint64_t, uint64_t))v221)(v95, 1, v91) != 1)
      {
        char v160 = v194;
        ((void (*)(char *, void, uint64_t))v215)(v194, v95, v91);
        v161 = (void (*)(char *, char *, uint64_t))v214[2];
        long long v162 = v218;
        v161(v217, v218, v91);
        v161(v206, v160, v91);
        uint64_t v163 = v225;
        DateInterval.init(start:end:)();
        long long v164 = (void (*)(char *, uint64_t))v227;
        ((void (*)(char *, uint64_t))v227)(v160, v91);
        v164(v141, v91);
        v164(v162, v91);
        ((void (*)(char *, uint64_t))v228)(v96, v224);
        v164(v230, v91);
        uint64_t v165 = type metadata accessor for DateInterval();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v163, 0, 1, v165);
      }
      double v142 = v141;
      long long v99 = (void (*)(char *, uint64_t))v227;
      ((void (*)(char *, uint64_t))v227)(v142, v91);
      v99(v218, v91);
    }
    ((void (*)(char *, uint64_t))v228)(v46, v224);
    v99(v230, v91);
    uint64_t v143 = (uint64_t)v95;
  }
  else
  {
    double v122 = v8;
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    double v123 = v221;
    uint64_t v124 = v221[9];
    unint64_t v125 = (*((unsigned __int8 *)v221 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v221 + 80);
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_10074E640;
    unint64_t v127 = v126 + v125;
    unsigned int v128 = (void (*)(unint64_t, void, char *))v123[13];
    long long v129 = v222;
    v128(v127, enum case for Calendar.Component.year(_:), v222);
    v128(v127 + v124, enum case for Calendar.Component.month(_:), v129);
    sub_1000C6A18(v126);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    char v130 = v220;
    long long v131 = v230;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v132 = v207;
    Calendar.date(from:)();
    long long v227 = (unsigned int (*)(char *, uint64_t, uint64_t))v223[1];
    ((void (*)(char *, void *))v227)(v130, v228);
    uint64_t v133 = v214;
    uint64_t v134 = v229;
    long long v223 = (void *)v214[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v223)(v132, 1, v229) == 1)
    {
      (*(void (**)(char *, uint64_t))(v226 + 8))(v46, v224);
      ((void (*)(char *, uint64_t))v133[1])(v131, v134);
    }
    else
    {
      long long v149 = (void *)v133[4];
      long long v222 = v46;
      long long v219 = (char *)(v133 + 4);
      long long v221 = v149;
      ((void (*)(char *, char *, uint64_t))v149)(v208, v132, v134);
      long long v218 = *(char **)(v226 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v218)(v122, 1, 1, v224);
      uint64_t v150 = type metadata accessor for TimeZone();
      uint64_t v151 = *(void *)(v150 - 8);
      long long v215 = *(char **)(v151 + 56);
      char v216 = (char *)v150;
      long long v213 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56);
      ((void (*)(char *, uint64_t, uint64_t))v215)(v190, 1, 1);
      long long v207 = v122;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
      long long v152 = v199;
      long long v153 = v222;
      Calendar.date(byAdding:to:wrappingComponents:)();
      ((void (*)(char *, void *))v227)(v130, v228);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v223)(v152, 1, v134) == 1)
      {
        long long v154 = (void (*)(char *, uint64_t))v133[1];
        v154(v208, v134);
        (*(void (**)(char *, uint64_t))(v226 + 8))(v153, v224);
        v154(v230, v134);
        uint64_t v132 = v152;
      }
      else
      {
        char v172 = v196;
        ((void (*)(void))v221)();
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v218)(v207, 1, 1, v224);
        ((void (*)(char *, uint64_t, uint64_t, char *))v215)(v190, 1, 1, v216);
        DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
        v173 = v197;
        Calendar.date(byAdding:to:wrappingComponents:)();
        uint64_t v174 = v229;
        ((void (*)(char *, void *))v227)(v130, v228);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v223)(v173, 1, v174) != 1)
        {
          long long v183 = v192;
          ((void (*)(char *, char *, uint64_t))v221)(v192, v173, v174);
          char v184 = v214;
          v185 = (void (*)(char *, char *, uint64_t))v214[2];
          long long v186 = v208;
          v185(v217, v208, v174);
          v185(v206, v183, v174);
          uint64_t v187 = v225;
          DateInterval.init(start:end:)();
          long long v188 = (void (*)(char *, uint64_t))v184[1];
          v188(v183, v174);
          v188(v172, v174);
          v188(v186, v174);
          (*(void (**)(char *, uint64_t))(v226 + 8))(v153, v224);
          v188(v230, v174);
          uint64_t v189 = type metadata accessor for DateInterval();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v189 - 8) + 56))(v187, 0, 1, v189);
        }
        long long v175 = (void (*)(char *, uint64_t))v214[1];
        v175(v172, v174);
        v175(v208, v174);
        (*(void (**)(char *, uint64_t))(v226 + 8))(v153, v224);
        v175(v230, v174);
        uint64_t v132 = v173;
      }
    }
    uint64_t v143 = (uint64_t)v132;
  }
LABEL_28:
  sub_10008DB18(v143, (uint64_t *)&unk_10095B890);
  uint64_t v171 = type metadata accessor for DateInterval();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v225, 1, 1, v171);
}

id sub_1000C4F40(char a1)
{
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 6:
    case 12:
    case 13:
    case 15:
    case 19:
    case 21:
    case 23:
    case 25:
    case 27:
    case 30:
    case 32:
    case 34:
    case 36:
      id v1 = [self meterUnit];
      goto LABEL_13;
    case 5:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
    case 38:
      id v1 = [self secondUnit];
      goto LABEL_13;
    case 7:
    case 16:
    case 22:
    case 26:
    case 33:
    case 37:
      id v2 = [self secondUnit];
      if (qword_10094AE10 == -1) {
        goto LABEL_4;
      }
      goto LABEL_16;
    case 8:
    case 17:
      id v1 = [self wattUnit];
      goto LABEL_13;
    case 9:
    case 18:
      id v1 = [self _countPerMinuteUnit];
      goto LABEL_13;
    case 10:
      id v1 = [self secondUnitWithMetricPrefix:4];
      goto LABEL_13;
    case 11:
      id v1 = [self meterUnitWithMetricPrefix:5];
      goto LABEL_13;
    case 29:
      id v2 = [self secondUnit];
      if (qword_10094AE10 == -1) {
        goto LABEL_4;
      }
LABEL_16:
      swift_once();
LABEL_4:
      id v3 = [v2 unitDividedByUnit:qword_100998310];

      id result = v3;
      break;
    default:
      id v1 = [self countUnit];
LABEL_13:
      id result = v1;
      break;
  }
  return result;
}

unint64_t sub_1000C5214(unint64_t result, uint64_t a2)
{
  int64_t v2 = result;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(void *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    uint64_t v27 = a2;
    uint64_t v6 = ~v4;
    id result = _HashTable.previousHole(before:)();
    if ((*(void *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      unint64_t v7 = (result + 1) & v6;
      a2 = v27;
      while (1)
      {
        uint64_t v8 = 24 * v5;
        uint64_t v9 = (unsigned __int8 *)(*(void *)(a2 + 48) + 24 * v5);
        Swift::UInt v10 = *v9;
        Swift::UInt v11 = *((void *)v9 + 1);
        unsigned __int8 v12 = v9[16];
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        if ((v12 & 1) == 0) {
          Hasher._combine(_:)(3uLL);
        }
        Hasher._combine(_:)(v11);
        id result = Hasher._finalize()();
        unint64_t v13 = result & v6;
        if (v2 >= (uint64_t)v7)
        {
          a2 = v27;
          if (v13 < v7) {
            goto LABEL_5;
          }
        }
        else
        {
          a2 = v27;
          if (v13 >= v7) {
            goto LABEL_13;
          }
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_13:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = v14 + 24 * v2;
          uint64_t v16 = (long long *)(v14 + v8);
          if (24 * v2 < v8 || v15 >= (unint64_t)v16 + 24 || v2 != v5)
          {
            long long v17 = *v16;
            *(void *)(v15 + 16) = *((void *)v16 + 2);
            *(_OWORD *)unint64_t v15 = v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v19 = (void *)(v18 + 8 * v2);
          uint64_t v20 = (void *)(v18 + 8 * v5);
          if (v2 != v5 || (int64_t v2 = v5, v19 >= v20 + 1))
          {
            *uint64_t v19 = *v20;
            int64_t v2 = v5;
          }
        }
LABEL_5:
        unint64_t v5 = (v5 + 1) & v6;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_22;
        }
      }
    }
    a2 = v27;
LABEL_22:
    uint64_t v21 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << v2) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v3 + 8 * (result >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v21 = v22 & v23;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1000C5430(uint64_t a1, char a2, Swift::UInt a3, char a4)
{
  unint64_t v5 = v4;
  char v9 = a4 & 1;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v10 - 8);
  unsigned __int8 v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MetricDetailViewModel();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a1, 1, v13) == 1)
  {
    sub_10008DB18(a1, (uint64_t *)&unk_100955590);
    unint64_t v17 = sub_1000C9334(a2, a3, v9);
    if (v18)
    {
      unint64_t v19 = v17;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = *v5;
      uint64_t v25 = *v5;
      *unint64_t v5 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F4270();
        uint64_t v21 = v25;
      }
      sub_1000C8F30(*(void *)(v21 + 56) + *(void *)(v14 + 72) * v19, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      sub_1005DD31C(v19, v21);
      *unint64_t v5 = v21;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    return sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_100955590);
  }
  else
  {
    sub_1000C8F30(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v5;
    *unint64_t v5 = 0x8000000000000000;
    sub_1000C91B4((uint64_t)v16, a2, a3, v9, v22);
    *unint64_t v5 = v25;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000C56B0(unint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a6[6] + 24 * a1;
  *(unsigned char *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(unsigned char *)(v9 + 16) = a4 & 1;
  uint64_t v10 = a6[7];
  uint64_t v11 = type metadata accessor for MetricDetailViewModel();
  uint64_t result = sub_1000D27E0(a5, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v13 = a6[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a6[2] = v15;
  }
  return result;
}

void *sub_1000C576C(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v48) = a3;
  uint64_t v53 = a2;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Calendar.Component();
  uint64_t v47 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v52 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t)&v39 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v22 = (char *)&v39 - v21;
  uint64_t v41 = type metadata accessor for Calendar();
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v56 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.autoupdatingCurrent.getter();
  uint64_t v60 = &_swiftEmptySetSingleton;
  DateInterval.start.getter();
  uint64_t v50 = a1;
  DateInterval.end.getter();
  unint64_t v49 = sub_1000C8E70();
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v55 = v17 + 8;
  v54(v20, v16);
  if (a1)
  {
LABEL_9:
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000C7174(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    __chkstk_darwin(v36);
    *(&v39 - 2) = (uint64_t)v56;
    uint64_t v59 = v35;
    swift_retain();
    sub_1000C7A4C((uint64_t (*)(char *, unint64_t))sub_1000C8BC4, (uint64_t)(&v39 - 4));
    swift_release();
    uint64_t v37 = v59;
    v54(v22, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v24 = v48 & 1;
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v25 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v26 = (unsigned int *)&enum case for Calendar.Component.day(_:);
    uint64_t v45 = (void (**)(char *, void, uint64_t))(v47 + 104);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v48 = (void (**)(char *, uint64_t))(v47 + 8);
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    if (!v53) {
      uint64_t v26 = (unsigned int *)&enum case for Calendar.Component.hour(_:);
    }
    LODWORD(v47) = v24;
    if (!v24) {
      uint64_t v26 = (unsigned int *)&enum case for Calendar.Component.month(_:);
    }
    unsigned int v43 = *v26;
    while (1)
    {
      sub_1000C64AC((uint64_t)v22, v53, v47, (uint64_t)v15);
      uint64_t v27 = v52;
      (*v46)(v52, v15, v8);
      uint64_t v28 = v51;
      sub_1000C5DF4(v51, v27);
      uint64_t v29 = v15;
      uint64_t v30 = v8;
      uint64_t v31 = *v25;
      (*v25)(v28, v30);
      (*v45)(v57, v43, v58);
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      if ((*v44)(v6, 1, v16) == 1) {
        break;
      }
      (*v48)(v57, v58);
      v31((uint64_t)v29, v30);
      uint64_t v32 = v54;
      v54(v22, v16);
      (*v42)(v22, v6, v16);
      DateInterval.end.getter();
      char v33 = dispatch thunk of static Comparable.< infix(_:_:)();
      v32(v20, v16);
      uint64_t v8 = v30;
      uint64_t v15 = v29;
      if (v33) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
    (*v48)(v57, v58);
    v31((uint64_t)v29, v30);
    v54(v22, v16);
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v56, v41);
  return v37;
}

uint64_t sub_1000C5DF4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000C6118(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
  swift_bridgeObjectRetain();
  char v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1000C6118(&qword_10094F298, (void (*)(uint64_t))&type metadata accessor for DateComponents);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000C61F0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1000C6118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C6160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C61A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C61F0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000C6D78();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1001EC5B8((uint64_t (*)(void))&type metadata accessor for DateComponents, &qword_10094F2A0);
      goto LABEL_12;
    }
    sub_1000C72A8();
  }
  uint64_t v12 = *v3;
  sub_1000C6118(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1000C6118(&qword_10094F298, (void (*)(uint64_t))&type metadata accessor for DateComponents);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C64AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Calendar();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.autoupdatingCurrent.getter();
  if ((a3 & 1) == 0)
  {
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v18 = type metadata accessor for Calendar.Component();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(void *)(v19 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10074E640;
    unint64_t v23 = v22 + v21;
    int v24 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
    v24(v23, enum case for Calendar.Component.year(_:), v18);
    v24(v23 + v20, enum case for Calendar.Component.month(_:), v18);
    sub_1000C6A18(v22);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v38 = a4;
  uint64_t v39 = v14;
  if (a2)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v27 = Calendar._bridgeToObjectiveC()().super.isa;
    id v28 = (id)_HKActivityCacheDateComponentsFromDate();

    if (v28)
    {
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v29(v13, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
      if (result != 1)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v39);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v29)(v38, v13, v7);
      }
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
    }
    __break(1u);
  }
  else
  {
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v30 = type metadata accessor for Calendar.Component();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void *)(v31 + 72);
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1007526C0;
    unint64_t v35 = v34 + v33;
    uint64_t v36 = *(void (**)(unint64_t, void, uint64_t))(v31 + 104);
    v36(v35, enum case for Calendar.Component.year(_:), v30);
    v36(v35 + v32, enum case for Calendar.Component.month(_:), v30);
    v36(v35 + 2 * v32, enum case for Calendar.Component.day(_:), v30);
    v36(v35 + 3 * v32, enum case for Calendar.Component.hour(_:), v30);
    sub_1000C6A18(v34);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v39);
  }
  return result;
}

void *sub_1000C6A18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000AFA94(&qword_1009563F0);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000C6D30(&qword_1009563F8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000C6D30(&qword_100956400, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          int v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000C6D30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C6D78()
{
  id v1 = v0;
  uint64_t v42 = type metadata accessor for DateComponents();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1000AFA94(&qword_10094F2A0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                id v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1000C6118(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *id v1 = v6;
  return result;
}

void *sub_1000C7174(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10094E720);
  uint64_t v3 = *(void *)(type metadata accessor for DateComponents() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1000C7658(&v10, (char *)v6 + v5, v1, a1);
      sub_1000D9B04();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C72A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DateComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1000AFA94(&qword_10094F2A0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1000C6118(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000C7658(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateComponents();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  int64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  unint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  BOOL v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    unint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_10008DB18((uint64_t)v10, &qword_10094E8A8);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

Swift::Int sub_1000C7A4C(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  type metadata accessor for DateComponents();
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = (void *)sub_1000C7B0C(v5);
  }
  Swift::Int result = sub_1000C7B40(a1, a2);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1000C7B0C(void *a1)
{
  return sub_1000C7B20(0, a1[2], 0, a1);
}

uint64_t sub_1000C7B20(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000B6AA0(a1, a2, a3, a4, &qword_10094E720, (uint64_t (*)(void))&type metadata accessor for DateComponents);
}

Swift::Int sub_1000C7B40(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  uint64_t v168 = a2;
  long long v167 = (uint64_t (*)(char *, char *))a1;
  uint64_t v4 = type metadata accessor for DateComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v154 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v161 = (char *)&v139 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v139 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v139 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v147 = (char *)&v139 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v139 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v139 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v139 - v24;
  long long v166 = v2;
  Swift::Int v26 = v2[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v26);
  if (result >= v26)
  {
    if (v26 < 0) {
      goto LABEL_144;
    }
    if (v26) {
      return sub_1000C8888(0, v26, 1, v167, v168);
    }
    return result;
  }
  if (v26 >= 0) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = v26 + 1;
  }
  if (v26 <= -2) {
    goto LABEL_153;
  }
  uint64_t v164 = v5;
  uint64_t v165 = v4;
  double v144 = v23;
  uint64_t v143 = v25;
  Swift::Int v142 = result;
  if (v26 < 2)
  {
    uint64_t v31 = v5;
    uint64_t v33 = _swiftEmptyArrayStorage;
    unint64_t v162 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v26 != 1)
    {
      unint64_t v83 = _swiftEmptyArrayStorage[2];
      uint64_t v35 = (char *)_swiftEmptyArrayStorage;
      uint64_t v36 = v3;
LABEL_110:
      double v145 = v33;
      if (v83 >= 2)
      {
        uint64_t v132 = *v166;
        do
        {
          unint64_t v133 = v83 - 2;
          if (v83 < 2) {
            goto LABEL_139;
          }
          if (!v132) {
            goto LABEL_152;
          }
          uint64_t v134 = *(void *)&v35[16 * v133 + 32];
          uint64_t v135 = *(void *)&v35[16 * v83 + 24];
          sub_10050EC34(v132 + *(void *)(v164 + 72) * v134, v132 + *(void *)(v164 + 72) * *(void *)&v35[16 * v83 + 16], v132 + *(void *)(v164 + 72) * v135, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
          if (v36) {
            break;
          }
          if (v135 < v134) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v35 = sub_1001EEF68((uint64_t)v35);
          }
          if (v133 >= *((void *)v35 + 2)) {
            goto LABEL_141;
          }
          char v136 = &v35[16 * v133 + 32];
          *(void *)char v136 = v134;
          *((void *)v136 + 1) = v135;
          unint64_t v137 = *((void *)v35 + 2);
          if (v83 > v137) {
            goto LABEL_142;
          }
          memmove(&v35[16 * v83 + 16], &v35[16 * v83 + 32], 16 * (v137 - v83));
          *((void *)v35 + 2) = v137 - 1;
          unint64_t v83 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      v145[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v148 = v20;
    long long v152 = v15;
    long long v153 = v12;
    double v145 = _swiftEmptyArrayStorage;
  }
  else
  {
    long long v148 = v20;
    long long v152 = v15;
    long long v153 = v12;
    uint64_t v29 = v28 >> 1;
    uint64_t v30 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    uint64_t v31 = v5;
    *(void *)(v30 + 16) = v29;
    unint64_t v32 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    double v145 = (void *)v30;
    unint64_t v162 = v30 + v32;
  }
  int64_t v34 = 0;
  uint64_t v158 = v31 + 16;
  v159 = (void (**)(unint64_t, uint64_t))(v31 + 8);
  uint64_t v163 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v35 = (char *)_swiftEmptyArrayStorage;
  uint64_t v36 = v3;
  while (1)
  {
    Swift::Int v37 = (Swift::Int)v34;
    Swift::Int v38 = (Swift::Int)(v34 + 1);
    if ((uint64_t)(v34 + 1) >= v26) {
      goto LABEL_57;
    }
    Swift::Int v156 = v26;
    uint64_t v39 = *v166;
    uint64_t v40 = *(void *)(v31 + 72);
    uint64_t v151 = (uint64_t)(v34 + 1);
    uint64_t v41 = v39 + v40 * v38;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    unsigned int v43 = v143;
    Swift::Int v44 = (Swift::Int)v34;
    uint64_t v45 = v165;
    v42(v143, v41, v165);
    uint64_t v160 = v40;
    uint64_t v46 = v39 + v40 * v44;
    unint64_t v47 = (unint64_t)v144;
    long long v157 = (char *)v42;
    v42(v144, v46, v45);
    LODWORD(v155) = v167(v43, (char *)v47);
    if (v36)
    {
      char v138 = *v159;
      (*v159)(v47, v45);
      v138((unint64_t)v43, v45);
      goto LABEL_123;
    }
    char v146 = v35;
    uint64_t v48 = *v159;
    (*v159)(v47, v45);
    v48((unint64_t)v43, v45);
    Swift::Int v49 = v44 + 2;
    Swift::Int v50 = v156;
    uint64_t v149 = v39;
    Swift::Int v37 = v44;
    if (v44 + 2 >= v156)
    {
      Swift::Int v38 = v44 + 2;
    }
    else
    {
      uint64_t v141 = (char *)v44;
      uint64_t v51 = v39;
      uint64_t v150 = v160 * v49;
      v151 *= v160;
      unint64_t v52 = (unint64_t)v147;
      while (1)
      {
        uint64_t v53 = v148;
        uint64_t v54 = v165;
        uint64_t v55 = v157;
        ((void (*)(char *, uint64_t, uint64_t))v157)(v148, v51 + v150, v165);
        ((void (*)(unint64_t, uint64_t, uint64_t))v55)(v52, v51 + v151, v54);
        int v56 = v167(v53, (char *)v52);
        v48(v52, v54);
        v48((unint64_t)v53, v54);
        if ((v155 ^ v56)) {
          break;
        }
        ++v49;
        v51 += v160;
        if (v156 == v49)
        {
          Swift::Int v50 = v156;
          Swift::Int v38 = v156;
          Swift::Int v37 = (Swift::Int)v141;
          goto LABEL_24;
        }
      }
      Swift::Int v38 = v49;
      Swift::Int v37 = (Swift::Int)v141;
      Swift::Int v50 = v156;
    }
LABEL_24:
    uint64_t v35 = v146;
    uint64_t v57 = v164;
    if ((v155 & 1) == 0)
    {
      uint64_t v58 = v165;
      goto LABEL_38;
    }
    if (v38 < v37) {
      goto LABEL_148;
    }
    uint64_t v58 = v165;
    if (v37 < v38) {
      break;
    }
LABEL_38:
    if (v38 < v50) {
      goto LABEL_39;
    }
LABEL_57:
    if (v38 < v37) {
      goto LABEL_143;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_1001EE868(0, *((void *)v35 + 2) + 1, 1, v35);
    }
    unint64_t v82 = *((void *)v35 + 2);
    unint64_t v81 = *((void *)v35 + 3);
    unint64_t v83 = v82 + 1;
    if (v82 >= v81 >> 1) {
      uint64_t v35 = sub_1001EE868((char *)(v81 > 1), v82 + 1, 1, v35);
    }
    *((void *)v35 + 2) = v83;
    double v84 = v35 + 32;
    double v85 = &v35[16 * v82 + 32];
    *(void *)double v85 = v37;
    *((void *)v85 + 1) = v38;
    long long v157 = (char *)v38;
    if (v82)
    {
      while (1)
      {
        unint64_t v86 = v83 - 1;
        if (v83 >= 4)
        {
          uint64_t v91 = &v84[16 * v83];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_128;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_129;
          }
          unint64_t v98 = v83 - 2;
          long long v99 = &v84[16 * v83 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_131;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_134;
          }
          if (v103 >= v94)
          {
            uint64_t v121 = &v84[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_138;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_94;
          }
        }
        else
        {
          if (v83 != 3)
          {
            uint64_t v115 = *((void *)v35 + 4);
            uint64_t v116 = *((void *)v35 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_88;
          }
          uint64_t v88 = *((void *)v35 + 4);
          uint64_t v87 = *((void *)v35 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_130;
        }
        unint64_t v98 = v83 - 2;
        uint64_t v104 = &v84[16 * v83 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_133;
        }
        uint64_t v110 = &v84[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_136;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_137;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_94:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v109) {
          goto LABEL_132;
        }
        double v117 = &v84[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_135;
        }
        if (v120 < v108) {
          goto LABEL_105;
        }
LABEL_96:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v83)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!*v166) {
          goto LABEL_149;
        }
        uint64_t v126 = v35;
        unint64_t v127 = &v84[16 * v125];
        uint64_t v128 = *(void *)v127;
        long long v129 = &v84[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        sub_10050EC34(*v166 + *(void *)(v164 + 72) * *(void *)v127, *v166 + *(void *)(v164 + 72) * *(void *)v129, *v166 + *(void *)(v164 + 72) * v130, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
        if (v36) {
          goto LABEL_123;
        }
        if (v130 < v128) {
          goto LABEL_125;
        }
        if (v86 > *((void *)v126 + 2)) {
          goto LABEL_126;
        }
        *(void *)unint64_t v127 = v128;
        *(void *)&v84[16 * v125 + 8] = v130;
        unint64_t v131 = *((void *)v126 + 2);
        if (v86 >= v131) {
          goto LABEL_127;
        }
        uint64_t v35 = v126;
        unint64_t v83 = v131 - 1;
        memmove(&v84[16 * v86], v129 + 16, 16 * (v131 - 1 - v86));
        *((void *)v35 + 2) = v131 - 1;
        if (v131 <= 2) {
          goto LABEL_105;
        }
      }
    }
    unint64_t v83 = 1;
LABEL_105:
    Swift::Int v26 = v166[1];
    int64_t v34 = v157;
    uint64_t v31 = v164;
    if ((uint64_t)v157 >= v26)
    {
      uint64_t v33 = v145;
      goto LABEL_110;
    }
  }
  uint64_t v59 = 0;
  uint64_t v60 = v160 * (v38 - 1);
  uint64_t v61 = v38 * v160;
  uint64_t v141 = (char *)v37;
  uint64_t v62 = v37 * v160;
  long long v157 = (char *)v38;
  do
  {
    if (v37 != v38 + v59 - 1)
    {
      uint64_t v63 = v149;
      if (!v149) {
        goto LABEL_151;
      }
      unint64_t v64 = v149 + v62;
      uint64_t v65 = (char *)(v149 + v60);
      long long v155 = *v163;
      v155(v154, (char *)(v149 + v62), v165);
      if (v62 < v60 || v64 >= v63 + v61)
      {
        uint64_t v58 = v165;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        uint64_t v58 = v165;
        if (v62 != v60) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v155(v65, v154, v58);
      uint64_t v57 = v164;
      Swift::Int v38 = (Swift::Int)v157;
    }
    ++v37;
    --v59;
    v60 -= v160;
    v61 -= v160;
    v62 += v160;
  }
  while (v37 < v38 + v59);
  uint64_t v35 = v146;
  Swift::Int v37 = (Swift::Int)v141;
  Swift::Int v50 = v156;
  if (v38 >= v156) {
    goto LABEL_57;
  }
LABEL_39:
  if (__OFSUB__(v38, v37)) {
    goto LABEL_145;
  }
  if (v38 - v37 >= v142) {
    goto LABEL_57;
  }
  if (__OFADD__(v37, v142)) {
    goto LABEL_146;
  }
  if (v37 + v142 >= v50) {
    Swift::Int v66 = v50;
  }
  else {
    Swift::Int v66 = v37 + v142;
  }
  if (v66 >= v37)
  {
    if (v38 != v66)
    {
      char v146 = v35;
      uint64_t v67 = *(void (**)(void, void, void))(v57 + 16);
      uint64_t v149 = *(void *)(v57 + 72);
      uint64_t v150 = (uint64_t)v67;
      uint64_t v160 = v149 * (v38 - 1);
      Swift::Int v68 = v38 * v149;
      uint64_t v141 = (char *)v37;
      Swift::Int v140 = v66;
      do
      {
        uint64_t v69 = 0;
        long long v157 = (char *)v38;
        uint64_t v151 = v68;
        while (1)
        {
          uint64_t v71 = *v166;
          long long v155 = (void (*)(char *, char *, uint64_t))(v68 + v69);
          Swift::Int v156 = v37;
          uint64_t v72 = v152;
          uint64_t v73 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, Swift::Int, uint64_t))v150)(v152, v68 + v69 + v71, v58);
          unint64_t v74 = (unint64_t)v153;
          v73(v153, v160 + v69 + v71, v58);
          char v75 = v167(v72, (char *)v74);
          uint64_t v76 = *v159;
          (*v159)(v74, v58);
          v76((unint64_t)v72, v58);
          if ((v75 & 1) == 0) {
            break;
          }
          uint64_t v77 = *v166;
          if (!*v166) {
            goto LABEL_150;
          }
          Swift::Int v68 = v151;
          double v78 = (char *)(v77 + v160 + v69);
          uint64_t v79 = *v163;
          uint64_t v80 = v165;
          (*v163)(v161, (char *)(v77 + v151 + v69), v165);
          uint64_t v58 = v80;
          swift_arrayInitWithTakeFrontToBack();
          v79(v78, v161, v80);
          v69 -= v149;
          uint64_t v70 = v157;
          Swift::Int v37 = v156 + 1;
          uint64_t v36 = 0;
          if (v157 == (char *)(v156 + 1)) {
            goto LABEL_54;
          }
        }
        uint64_t v58 = v165;
        uint64_t v36 = 0;
        uint64_t v70 = v157;
        Swift::Int v68 = v151;
LABEL_54:
        Swift::Int v38 = (Swift::Int)(v70 + 1);
        v160 += v149;
        v68 += v149;
        Swift::Int v37 = (Swift::Int)v141;
      }
      while (v38 != v140);
      Swift::Int v38 = v140;
      uint64_t v35 = v146;
    }
    goto LABEL_57;
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C8888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v10 = type metadata accessor for DateComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v52 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  Swift::Int v44 = (char *)&v36 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    unsigned int v43 = (char *)&v36 - v17;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v18 = v11 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v41 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v42 = v19;
    Swift::Int v49 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v54 = v20 * (a3 - 1);
    uint64_t v39 = v18;
    uint64_t v40 = v20;
    uint64_t v21 = v20 * a3;
    unint64_t v23 = (char *)&v36 - v17;
    uint64_t v22 = v44;
    uint64_t v37 = a1;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v45 = v21;
      uint64_t v46 = a3;
      while (1)
      {
        uint64_t v26 = *v53;
        uint64_t v50 = v21 + v24;
        uint64_t v51 = a1;
        uint64_t v27 = v21 + v24 + v26;
        uint64_t v28 = v42;
        v42(v23, v27, v10);
        v28(v22, v54 + v24 + v26, v10);
        char v29 = v47(v23, v22);
        if (v6)
        {
          uint64_t v35 = *v41;
          (*v41)(v22, v10);
          return ((uint64_t (*)(char *, uint64_t))v35)(v23, v10);
        }
        char v30 = v29;
        uint64_t v31 = *v41;
        (*v41)(v22, v10);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v23, v10);
        if ((v30 & 1) == 0) {
          break;
        }
        uint64_t v32 = *v53;
        if (!*v53)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        uint64_t v21 = v45;
        uint64_t v33 = v32 + v54 + v24;
        int64_t v34 = *v49;
        (*v49)(v52, v32 + v45 + v24, v10);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v52, v10);
        v24 -= v40;
        a1 = v51 + 1;
        uint64_t v25 = v46;
        uint64_t v22 = v44;
        if (v46 == v51 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = 0;
      uint64_t v21 = v45;
      uint64_t v25 = v46;
LABEL_10:
      a3 = v25 + 1;
      v54 += v40;
      v21 += v40;
      a1 = v37;
      if (a3 != v38) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1000C8BC4(uint64_t a1, uint64_t a2)
{
  return sub_1000C8BE4(a1, a2) & 1;
}

uint64_t sub_1000C8BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v23 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - v13;
  Calendar.date(from:)();
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v15(v8, 1, v9) == 1)
  {
    sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
    char v16 = 0;
  }
  else
  {
    uint64_t v22 = v2;
    uint64_t v17 = v8;
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v14, v17, v9);
    Calendar.date(from:)();
    if (v15(v6, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
      char v16 = 0;
    }
    else
    {
      uint64_t v19 = v23;
      v18(v23, v6, v9);
      char v16 = static Date.< infix(_:_:)();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
      v20(v19, v9);
      v20(v14, v9);
    }
  }
  return v16 & 1;
}

unint64_t sub_1000C8E70()
{
  unint64_t result = qword_100954750;
  if (!qword_100954750)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954750);
  }
  return result;
}

uint64_t sub_1000C8EC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C8F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C8F98(uint64_t a1, char a2, Swift::UInt a3, char a4, uint64_t a5)
{
  char v8 = a4 & 1;
  uint64_t v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_1000C9060(a5, a2, a3, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v12;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

unint64_t sub_1000C9060(uint64_t a1, char a2, Swift::UInt a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v11 = a4 & 1;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1000C9334(a2, a3, a4 & 1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      unint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1004F4508();
    goto LABEL_7;
  }
  sub_1000CAC14(v17, a5 & 1);
  unint64_t v23 = sub_1000C9334(a2, a3, v11);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1000C94B0(v14, a2, a3, v11, a1, v20);
}

uint64_t sub_1000C91B4(uint64_t a1, char a2, Swift::UInt a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v11 = a4 & 1;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1000C9334(a2, a3, a4 & 1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for MetricDetailViewModel();
      return sub_10050A758(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1004F4270();
    goto LABEL_7;
  }
  sub_1000C9508(v17, a5 & 1);
  unint64_t v24 = sub_1000C9334(a2, a3, v11);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1000C56B0(v14, a2, a3, v11, a1, v20);
}

unint64_t sub_1000C9334(unsigned __int8 a1, Swift::UInt a2, char a3)
{
  char v6 = a3 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  if ((a3 & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(a2);
  Swift::Int v7 = Hasher._finalize()();

  return sub_1000C93D8(a1, a2, v6, v7);
}

unint64_t sub_1000C93D8(unsigned __int8 a1, unint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v8 = ~v6;
    BOOL v9 = (a3 & 1) == 0;
    BOOL v10 = a2 < 2 || (a3 & 1) == 0;
    BOOL v11 = a2 != 1 || (a3 & 1) == 0;
    if (a2) {
      BOOL v9 = 1;
    }
    do
    {
      uint64_t v12 = (unsigned __int8 *)(*(void *)(v4 + 48) + 24 * result);
      if (*v12 == a1)
      {
        uint64_t v13 = *((void *)v12 + 1);
        if (v12[16] == 1)
        {
          if (v13)
          {
            if (v13 == 1)
            {
              if (!v11) {
                return result;
              }
            }
            else if (!v10)
            {
              return result;
            }
          }
          else if (!v9)
          {
            return result;
          }
        }
        else if ((a3 & 1) == 0 && v13 == a2)
        {
          return result;
        }
      }
      unint64_t result = (result + 1) & v8;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1000C94B0(unint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 24 * result;
  *(unsigned char *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 16) = a4 & 1;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_1000C9508(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1000AFA94(&qword_10095C4F8);
  int v42 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    uint64_t v38 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v40 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v39 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v21 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v22 = v21 | (v10 << 6);
      }
      else
      {
        int64_t v23 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v23 >= v39) {
          goto LABEL_36;
        }
        unint64_t v24 = v40[v23];
        ++v10;
        if (!v24)
        {
          int64_t v10 = v23 + 1;
          if (v23 + 1 >= v39) {
            goto LABEL_36;
          }
          unint64_t v24 = v40[v10];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v39)
            {
LABEL_36:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v38;
                goto LABEL_43;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
              if (v36 >= 64) {
                bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v40 = -1 << v36;
              }
              uint64_t v3 = v38;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v24 = v40[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v10 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_45;
                }
                if (v10 >= v39) {
                  goto LABEL_36;
                }
                unint64_t v24 = v40[v10];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v10 = v25;
          }
        }
LABEL_30:
        unint64_t v14 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v10 << 6);
      }
      char v30 = (unsigned __int8 *)(*(void *)(v7 + 48) + 24 * v22);
      Swift::UInt v31 = *v30;
      Swift::UInt v32 = *((void *)v30 + 1);
      unsigned __int8 v33 = v30[16];
      uint64_t v34 = *(void *)(v41 + 72);
      uint64_t v35 = *(void *)(v7 + 56) + v34 * v22;
      if (v42) {
        sub_1000D27E0(v35, v43, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      }
      else {
        sub_1000D2848(v35, v43, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v31);
      if ((v33 & 1) == 0) {
        Hasher._combine(_:)(3uLL);
      }
      Hasher._combine(_:)(v32);
      uint64_t result = Hasher._finalize()();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v15 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = *(void *)(v9 + 48) + 24 * v19;
      *(unsigned char *)uint64_t v20 = v31;
      *(void *)(v20 + 8) = v32;
      *(unsigned char *)(v20 + 16) = v33;
      uint64_t result = sub_1000D27E0(v43, *(void *)(v9 + 56) + v34 * v19, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_43:
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1000C98F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000C9950@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v61 = a3;
  uint64_t v4 = type metadata accessor for Divider();
  uint64_t v58 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v56 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_10094C768);
  uint64_t v6 = __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v62 = type metadata accessor for DashboardCardView();
  uint64_t v10 = *(void *)(v62 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v62);
  uint64_t v57 = sub_1000AFA94(&qword_10094C770);
  uint64_t v54 = *(void *)(v57 - 8);
  uint64_t v12 = __chkstk_darwin(v57);
  unint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v60 = (char *)&v49 - v15;
  uint64_t v16 = sub_1000AFA94(&qword_10094D160);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  unint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v49 - v20;
  if (a1)
  {
    uint64_t v52 = v4;
    uint64_t v53 = v14;
    uint64_t v22 = v62;
    uint64_t v23 = v63;
    sub_10008E75C(v63 + *(int *)(v62 + 20), (uint64_t)v70);
    sub_1000AEF2C(v23 + *(int *)(v22 + 24), (uint64_t)v71, &qword_10094C750);
    char v73 = *(unsigned char *)(v23 + *(int *)(v22 + 32));
    char v24 = static Edge.Set.all.getter();
    sub_100099374((uint64_t)v70, (uint64_t)v64);
    char v66 = v24;
    long long v67 = xmmword_100751050;
    long long v68 = xmmword_100751050;
    char v69 = 0;
    sub_1000901D4((uint64_t)v70);
    sub_1000AEF2C((uint64_t)v64, (uint64_t)v70, &qword_10094C778);
    char v74 = 0;
    sub_10008DB18((uint64_t)v64, &qword_10094C778);
    sub_10009930C(v23, (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DashboardCardView);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = swift_allocObject();
    sub_10009CE98((uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
    sub_1000AFA94(&qword_10094C780);
    uint64_t v50 = v9;
    uint64_t v51 = v21;
    sub_10009DBF8();
    unint64_t v27 = v53;
    View.onTapGesture(count:perform:)();
    swift_release();
    sub_10008DB18((uint64_t)v70, &qword_10094C780);
    uint64_t v28 = v54;
    uint64_t v29 = v57;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v60, v27, v57);
    char v30 = v56;
    Divider.init()();
    id v31 = [self quaternarySystemFillColor];
    uint64_t v32 = Color.init(_:)();
    char v33 = static Edge.Set.all.getter();
    uint64_t v34 = v58;
    uint64_t v35 = (uint64_t)v59;
    uint64_t v36 = v52;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v59, v30, v52);
    uint64_t v37 = v35 + *(int *)(v55 + 36);
    *(void *)uint64_t v37 = v32;
    *(unsigned char *)(v37 + 8) = v33;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v36);
    uint64_t v38 = (uint64_t)v50;
    sub_1000AEEC8(v35, (uint64_t)v50, &qword_10094C768);
    int64_t v39 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v40 = v53;
    uint64_t v41 = v60;
    v39(v53, v60, v29);
    sub_1000AEF2C(v38, v35, &qword_10094C768);
    v39(v19, v40, v29);
    uint64_t v42 = sub_1000AFA94((uint64_t *)&unk_10094C7B0);
    sub_1000AEF2C(v35, (uint64_t)&v19[*(int *)(v42 + 48)], &qword_10094C768);
    sub_10008DB18(v38, &qword_10094C768);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v28 + 8);
    v43(v41, v29);
    sub_10008DB18(v35, &qword_10094C768);
    v43(v40, v29);
    uint64_t v44 = sub_1000AFA94(&qword_10094D168);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v19, 0, 1, v44);
    unint64_t v21 = v51;
    sub_1000AEEC8((uint64_t)v19, (uint64_t)v51, &qword_10094D160);
  }
  else
  {
    uint64_t v45 = sub_1000AFA94(&qword_10094D168);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v21, 1, 1, v45);
  }
  sub_10008E75C(v63 + *(int *)(v62 + 20), (uint64_t)v70);
  char v75 = 1;
  State.init(wrappedValue:)();
  v71[0] = v64[0];
  uint64_t v72 = v65;
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v19, &qword_10094D160);
  sub_1000CA154((uint64_t)v70, (uint64_t)v64);
  uint64_t v46 = v61;
  sub_1000AEF2C((uint64_t)v19, v61, &qword_10094D160);
  uint64_t v47 = sub_1000AFA94(&qword_10094D170);
  sub_1000CA154((uint64_t)v64, v46 + *(int *)(v47 + 48));
  sub_1000CA0C8((uint64_t)v70);
  sub_10008DB18((uint64_t)v21, &qword_10094D160);
  sub_1000CA0C8((uint64_t)v64);
  return sub_10008DB18((uint64_t)v19, &qword_10094D160);
}

uint64_t storeEnumTagSinglePayload for CardHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000CA0C8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for DashboardCardProgressView(uint64_t a1)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);

  return swift_release();
}

uint64_t sub_1000CA154(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

Swift::Int sub_1000CA220()
{
  return sub_1000CA244();
}

Swift::Int sub_1000CA244()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()();
  uint64_t v6 = v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type);
  uint64_t v8 = *(void **)(v6 + 8);
  int v9 = *(unsigned __int8 *)(v6 + 16);
  sub_100091494(v7, (uint64_t)v8, *(unsigned char *)(v6 + 16));
  v31._countAndFlagsBits = v7;
  v31._object = v8;
  sub_1000932C0(v31, v9);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v9 || v9 == 2)
  {
    Hasher._combine(_:)(v7);
  }
  else
  {
    if (v9 == 1)
    {
      String.hash(into:)();
      uint64_t v10 = v7;
      uint64_t v11 = (uint64_t)v8;
      char v12 = 1;
    }
    else
    {
      uint64_t v10 = v7;
      uint64_t v11 = (uint64_t)v8;
      char v12 = v9;
    }
    sub_1000917F8(v10, v11, v12);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size));
  Hasher._combine(_:)(*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_editMode));
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_historyItems);
  int64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000B6A64(0, v14, 0);
    v22[1] = v13;
    uint64_t v16 = v13 + 32;
    uint64_t v15 = v23;
    do
    {
      sub_10008E75C(v16, (uint64_t)&v26);
      uint64_t v17 = *((void *)&v27 + 1);
      uint64_t v18 = v28;
      sub_10007E4EC(&v26, *((uint64_t *)&v27 + 1));
      (*(void (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B6A64(0, v15[2] + 1, 1);
        uint64_t v15 = v23;
      }
      unint64_t v20 = v15[2];
      unint64_t v19 = v15[3];
      if (v20 >= v19 >> 1)
      {
        sub_1000B6A64(v19 > 1, v20 + 1, 1);
        uint64_t v15 = v23;
      }
      v15[2] = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v15+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v20, v5, v2);
      uint64_t v23 = v15;
      v16 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  sub_1000CA550((uint64_t)v24, (uint64_t)v15);
  swift_bridgeObjectRelease();
  long long v28 = v24[2];
  long long v29 = v24[3];
  uint64_t v30 = v25;
  long long v26 = v24[0];
  long long v27 = v24[1];
  return Hasher.finalize()();
}

uint64_t sub_1000CA550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  Hasher._combine(_:)(v11);
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    char v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v25 = v13;
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_1000A6DB4((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

Swift::Int sub_1000CA7C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CatalogTipSectionItem();
  __chkstk_darwin(v2);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  uint64_t v8 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v9 = v0 + v8[5];
  uint64_t v10 = *(void *)v9;
  Swift::UInt v11 = *(void **)(v9 + 8);
  int v12 = *(unsigned __int8 *)(v9 + 16);
  sub_100091494(*(void *)v9, (uint64_t)v11, *(unsigned char *)(v9 + 16));
  v28._countAndFlagsBits = v10;
  v28._object = v11;
  sub_1000932C0(v28, v12);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v12 || v12 == 2)
  {
    Hasher._combine(_:)(v10);
  }
  else
  {
    if (v12 == 1)
    {
      String.hash(into:)();
      uint64_t v13 = v10;
      uint64_t v14 = (uint64_t)v11;
      char v15 = 1;
    }
    else
    {
      uint64_t v13 = v10;
      uint64_t v14 = (uint64_t)v11;
      char v15 = v12;
    }
    sub_1000917F8(v13, v14, v15);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v8[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v8[7]));
  sub_1000AEF2C(v1 + v8[9], (uint64_t)v7, (uint64_t *)&unk_100955650);
  uint64_t v16 = type metadata accessor for CatalogTipSection();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v7, 1, v16) == 1)
  {
    sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_100955650);
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_100039970((uint64_t)&v7[*(int *)(v16 + 36)], (uint64_t)v4);
    sub_1000CABB4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    swift_bridgeObjectRetain();
    sub_1000CABB4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  long long v25 = v20;
  long long v26 = v21;
  uint64_t v27 = v22;
  long long v23 = *(_OWORD *)&v18[8];
  long long v24 = v19;
  return Hasher.finalize()();
}

unint64_t sub_1000CAAAC()
{
  unint64_t result = qword_10094D040;
  if (!qword_10094D040)
  {
    sub_1000A1370(&qword_10094D048);
    sub_1000D050C(&qword_10094D050, (void (*)(uint64_t))type metadata accessor for AwardsCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D040);
  }
  return result;
}

uint64_t sub_1000CAB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100360D20);
}

uint64_t sub_1000CAB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_1000CC054(a1, a2, a3, a4 & 1, a5, a6, *v7, v7[1], a7);
}

uint64_t sub_1000CAB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_1000CC57C(a1, a2, a3, a4 & 1, a5, a6, a7);
}

uint64_t destroy for CatalogTipCardFactory()
{
  swift_release();

  return swift_release();
}

uint64_t sub_1000CABB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000CAC14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FE98);
  char v35 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_35;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_35;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_35:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_42;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v33) {
                  goto LABEL_35;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = (unsigned __int8 *)(*(void *)(v5 + 48) + 24 * v19);
      Swift::UInt v28 = *v27;
      Swift::UInt v29 = *((void *)v27 + 1);
      unsigned __int8 v30 = v27[16];
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((v35 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v28);
      if ((v30 & 1) == 0) {
        Hasher._combine(_:)(3uLL);
      }
      Hasher._combine(_:)(v29);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 24 * v16;
      *(unsigned char *)uint64_t v17 = v28;
      *(void *)(v17 + 8) = v29;
      *(unsigned char *)(v17 + 16) = v30;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  *uint64_t v3 = v7;
  return result;
}

void *sub_1000CAF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v79 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory;
  uint64_t v76 = (uint64_t *)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory);
  uint64_t v75 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusCardFactory;
  uint64_t v78 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory;
  uint64_t v74 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_awardCardFactory;
  uint64_t v77 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory;
  uint64_t v73 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory;
  uint64_t v71 = a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory;
  uint64_t v72 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory;
  uint64_t v83 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode;
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 49);
  do
  {
    uint64_t v6 = *(void *)(v5 - 17);
    uint64_t v7 = *(void **)(v5 - 9);
    uint64_t v8 = *(v5 - 1);
    unsigned int v9 = *v5;
    if (*(void *)(a2 + 16))
    {
      sub_100091494(*(void *)(v5 - 17), *(void *)(v5 - 9), *(v5 - 1));
      if (v9) {
        int v10 = 256;
      }
      else {
        int v10 = 0;
      }
      unint64_t v11 = sub_1000D0E60(v6, v7, v10 | v8);
      if (v12)
      {
        sub_10008E75C(*(void *)(a2 + 56) + 40 * v11, (uint64_t)&v99);
      }
      else
      {
        uint64_t v101 = 0;
        long long v99 = 0u;
        long long v100 = 0u;
      }
    }
    else
    {
      uint64_t v101 = 0;
      long long v99 = 0u;
      long long v100 = 0u;
      sub_100091494(v6, (uint64_t)v7, v8);
    }
    uint64_t v102 = v5 + 24;
    uint64_t v90 = (uint64_t)v7;
    uint64_t v91 = v6;
    unsigned int v89 = v9;
    switch(v8)
    {
      case 1:
LABEL_18:
        unint64_t v21 = *(void **)v78;
        uint64_t v20 = *(void *)(v78 + 8);
        char v23 = *(void **)(v78 + 16);
        int64_t v22 = *(void **)(v78 + 24);
        unint64_t v24 = v4;
        BOOL v25 = *(void **)(v78 + 32);
        uint64_t v26 = *(void **)(v78 + 40);
        uint64_t v85 = v3;
        uint64_t v27 = *(void **)(v78 + 48);
        uint64_t v95 = &type metadata for FriendCardFactory;
        uint64_t v96 = &off_1008CD120;
        Swift::UInt v28 = (void *)swift_allocObject();
        uint64_t v92 = (uint64_t)v28;
        v28[2] = v21;
        v28[3] = v20;
        v28[4] = v23;
        v28[5] = v22;
        v28[6] = v25;
        v28[7] = v26;
        v28[8] = v27;
        id v29 = v21;
        swift_retain();
        id v30 = v23;
        id v31 = v22;
        id v32 = v25;
        id v33 = v26;
        uint64_t v4 = v24;
        id v34 = v27;
        uint64_t v3 = v85;
        break;
      case 2:
LABEL_19:
        char v35 = *(void **)v79;
        uint64_t v36 = *(void **)(v79 + 8);
        uint64_t v86 = v3;
        uint64_t v37 = *(void **)(v79 + 16);
        uint64_t v38 = *(void *)(v79 + 24);
        unint64_t v81 = v4;
        uint64_t v39 = *(void *)(v79 + 32);
        char v40 = *(unsigned char *)(v79 + 40);
        uint64_t v41 = *(void *)(v79 + 56);
        uint64_t v80 = *(void *)(v79 + 48);
        uint64_t v42 = *(void **)(v79 + 64);
        uint64_t v95 = &type metadata for TrendsCardFactory;
        uint64_t v96 = &off_1008C49F8;
        uint64_t v43 = swift_allocObject();
        uint64_t v92 = v43;
        *(void *)(v43 + 16) = v35;
        *(void *)(v43 + 24) = v36;
        *(void *)(v43 + 32) = v37;
        *(void *)(v43 + 40) = v38;
        uint64_t v3 = v86;
        *(void *)(v43 + 48) = v39;
        uint64_t v4 = v81;
        *(unsigned char *)(v43 + 56) = v40;
        *(void *)(v43 + 64) = v80;
        *(void *)(v43 + 72) = v41;
        *(void *)(v43 + 80) = v42;
        swift_bridgeObjectRetain();
        id v44 = v42;
        id v45 = v35;
        id v46 = v36;
        id v47 = v37;
        break;
      case 3:
        switch(v6)
        {
          case 1:
            uint64_t v52 = *(void **)(a3 + v72);
            uint64_t v96 = &off_1008D5020;
            uint64_t v95 = &type metadata for LoadCardFactory;
            uint64_t v92 = (uint64_t)v52;
            id v53 = v52;
            break;
          case 2:
            uint64_t v54 = *(void **)v73;
            unint64_t v82 = *(void **)(v73 + 8);
            int v56 = *(void **)(v73 + 16);
            uint64_t v55 = *(void *)(v73 + 24);
            uint64_t v57 = *(void **)(v73 + 40);
            uint64_t v87 = *(void **)(v73 + 32);
            uint64_t v59 = *(void **)(v73 + 48);
            uint64_t v58 = *(void **)(v73 + 56);
            uint64_t v95 = &type metadata for HistoryCardFactory;
            uint64_t v96 = &off_1008C3518;
            uint64_t v60 = (void *)swift_allocObject();
            uint64_t v92 = (uint64_t)v60;
            v60[2] = v54;
            v60[3] = v82;
            v60[4] = v56;
            v60[5] = v55;
            v60[6] = v87;
            v60[7] = v57;
            v60[8] = v59;
            v60[9] = v58;
            id v61 = v54;
            id v62 = v82;
            id v63 = v56;
            swift_retain();
            id v64 = v87;
            id v65 = v57;
            id v66 = v59;
            id v67 = v58;
            break;
          case 3:
            uint64_t v95 = &type metadata for AwardsCardFactory;
            uint64_t v96 = &off_1008D24E0;
            uint64_t v92 = swift_allocObject();
            sub_1000A5690(v74, v92 + 16);
            break;
          case 4:
            goto LABEL_18;
          case 5:
            uint64_t v95 = &type metadata for FitnessPlusCardFactory;
            uint64_t v96 = &off_1008BDE58;
            uint64_t v92 = swift_allocObject();
            sub_1000B1B20(v75, v92 + 16);
            break;
          case 6:
            uint64_t v68 = *v76;
            char v69 = (void *)v76[1];
            uint64_t v95 = &type metadata for CatalogTipCardFactory;
            uint64_t v96 = &off_1008D5C28;
            uint64_t v92 = v68;
            uint64_t v93 = v69;
            swift_retain();
            swift_retain();
            break;
          case 7:
            goto LABEL_19;
          default:
            uint64_t v13 = *(void **)v71;
            unint64_t v14 = *(void **)(v71 + 8);
            unint64_t v15 = *(void **)(v71 + 16);
            uint64_t v96 = &off_1008C6890;
            uint64_t v92 = (uint64_t)v13;
            uint64_t v93 = v14;
            unint64_t v16 = &type metadata for ActivityRingsCardFactory;
            goto LABEL_15;
        }
        break;
      default:
        uint64_t v13 = *(void **)v77;
        unint64_t v14 = *(void **)(v77 + 8);
        unint64_t v15 = *(void **)(v77 + 16);
        uint64_t v96 = &off_1008C7BE0;
        uint64_t v92 = (uint64_t)v13;
        uint64_t v93 = v14;
        unint64_t v16 = &type metadata for MetricsCardFactory;
LABEL_15:
        uint64_t v94 = v15;
        uint64_t v95 = v16;
        id v17 = v13;
        id v18 = v14;
        id v19 = v15;
        break;
    }
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    sub_10007E4EC(&v92, (uint64_t)v95);
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, void, long long *, void, ValueMetadata *, _UNKNOWN **))v48[1])(&v97, v91, v90, v8, v89, &v99, *(unsigned __int8 *)(a3 + v83), v49, v48);
    sub_10008DB18((uint64_t)&v99, &qword_10094CEF0);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v92);
    sub_1000917F8(v91, v90, v8);
    if (v98)
    {
      sub_100093E60(&v97, (uint64_t)&v99);
      sub_100093E60(&v99, (uint64_t)&v97);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_10009569C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v51 = v4[2];
      unint64_t v50 = v4[3];
      if (v51 >= v50 >> 1) {
        uint64_t v4 = sub_10009569C((void *)(v50 > 1), v51 + 1, 1, v4);
      }
      v4[2] = v51 + 1;
      sub_100093E60(&v97, (uint64_t)&v4[5 * v51 + 4]);
    }
    else
    {
      sub_10008DB18((uint64_t)&v97, &qword_10094CEF0);
    }
    uint64_t v5 = v102;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000CB56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_1000CB59C(a1, a2, a3, a4 & 1, a5, a6, *(void *)v7, *(void **)(v7 + 8), a7, *(void **)(v7 + 16));
}

uint64_t sub_1000CB59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, void *a10)
{
  id v62 = a8;
  uint64_t v63 = a5;
  uint64_t v67 = a7;
  int v68 = a6;
  LODWORD(v61) = a4;
  uint64_t v69 = a9;
  unsigned int v12 = a3;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v13 - 8);
  id v66 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v57 - v19;
  __chkstk_darwin(v18);
  id v64 = (char *)&v57 - v21;
  uint64_t v22 = type metadata accessor for Calendar();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  BOOL v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  id v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v28);
  id v33 = (char *)&v57 - v32;
  if (v12 < 3 || a1 | a2)
  {
    id v34 = (_OWORD *)v69;
    *(void *)(v69 + 32) = 0;
    *id v34 = 0u;
    v34[1] = 0u;
  }
  else
  {
    id v60 = a10;
    int v59 = v61 & 1;
    uint64_t v35 = result;
    static Calendar.current.getter();
    Date.init()();
    Calendar.startOfDay(for:)();
    uint64_t v36 = v35;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v27 + 8);
    v58(v30, v35);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    id v61 = v33;
    uint64_t v37 = sub_1000CBADC();
    uint64_t v38 = v67;
    id v39 = [*(id *)(v67 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:v37];
    id v40 = v62;
    id v41 = [v62 resumeDate];
    if (v41)
    {
      uint64_t v42 = v41;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v43 = 1;
    }
    uint64_t v44 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v20, v43, 1, v36);
    sub_1000CBFEC((uint64_t)v20, v44);
    [v39 setDeprecatedPauseForInternalSwiftClient:[v40 isPaused]];
    sub_1000AEF2C(v63, (uint64_t)v70, &qword_10094CEF0);
    uint64_t v45 = v71;
    if (v71)
    {
      uint64_t v46 = v72;
      sub_10007E4EC(v70, v71);
      uint64_t v47 = (uint64_t)v66;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
      uint64_t v48 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v70);
    }
    else
    {
      sub_10008DB18((uint64_t)v70, &qword_10094CEF0);
      uint64_t v49 = type metadata accessor for UUID();
      uint64_t v47 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v66, 1, 1, v49);
    }
    uint64_t v50 = v65;
    sub_1000AEF2C(v44, v65, (uint64_t *)&unk_10095B890);
    int v51 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    uint64_t v52 = type metadata accessor for ActivityRingsCard();
    id v53 = (uint64_t *)v69;
    *(void *)(v69 + 24) = v52;
    v53[4] = (uint64_t)&off_1008C59F0;
    uint64_t v54 = sub_1000B1710(v53);
    uint64_t v55 = (uint64_t)v60;
    id v56 = v60;
    sub_1000CBDB0(v47, v59, v68 & 1, 1, (uint64_t)v39, v50, v51, v55, v54);
    sub_10008DB18(v44, (uint64_t *)&unk_10095B890);
    return ((uint64_t (*)(char *, uint64_t))v58)(v61, v36);
  }
  return result;
}

uint64_t sub_1000CBADC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v6 = (char *)&v18 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  v9.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Calendar();
  sub_1000876DC(v10, (uint64_t)qword_100997610);
  Class isa = Calendar._bridgeToObjectiveC()().super.isa;
  id v12 = (id)_HKActivityCacheDateComponentsFromDate();

  if (v12)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for DateComponents();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = type metadata accessor for DateComponents();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  sub_1000ACADC((uint64_t)v6, (uint64_t)v8);
  sub_1000ACB44((uint64_t)v8, (uint64_t)v3);
  type metadata accessor for DateComponents();
  uint64_t v14 = *(void *)(v13 - 8);
  Class v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) != 1)
  {
    Class v15 = DateComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
  }
  uint64_t v16 = _HKCacheIndexFromDateComponents();

  sub_1000CBD50((uint64_t)v8);
  return v16;
}

uint64_t sub_1000CBD50(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094E8A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000CBDB0@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, unsigned char *a9@<X8>)
{
  uint64_t v30 = a8;
  int v29 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  int v26 = a3;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v13 - 8);
  Class v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v25[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v21 = &a9[v20[5]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 3;
  sub_1000AEF2C(a1, (uint64_t)v15, (uint64_t *)&unk_1009555F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v15);
    uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32);
    v22(v19, v15, v16);
  }
  v22(a9, v19, v16);
  a9[v20[6]] = a2 & 1;
  a9[v20[7]] = v26 & 1;
  a9[v20[8]] = a4 & 1;
  uint64_t v23 = v28;
  *(void *)&a9[v20[9]] = v27;
  uint64_t result = sub_1000CBFEC(v23, (uint64_t)&a9[v20[10]]);
  a9[v20[12]] = v29;
  *(void *)&a9[v20[11]] = v30;
  return result;
}

uint64_t sub_1000CBFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CC054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int v32 = a6;
  unsigned int v16 = a3;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t result = __chkstk_darwin(v20 - 8);
  uint64_t v23 = &v31[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v16 < 3 || a1 ^ 6 | a2)
  {
    *(void *)(a9 + 32) = 0;
    *(_OWORD *)a9 = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
  }
  else
  {
    char v24 = a4 & 1;
    sub_1000AEF2C(a5, (uint64_t)v33, &qword_10094CEF0);
    uint64_t v25 = v34;
    if (v34)
    {
      uint64_t v26 = v35;
      sub_10007E4EC(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      uint64_t v27 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 0, 1, v27);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
    }
    else
    {
      sub_1000058F4((uint64_t)v33);
      uint64_t v28 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 1, 1, v28);
    }
    uint64_t v29 = a7 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
    swift_beginAccess();
    sub_1000AEF2C(v29, (uint64_t)v19, (uint64_t *)&unk_100955650);
    *(void *)(a9 + 24) = type metadata accessor for CatalogTipCard();
    *(void *)(a9 + 32) = &off_1008C2CA0;
    uint64_t v30 = sub_1000B1710((uint64_t *)a9);
    swift_retain();
    return sub_1000CC2DC((uint64_t)v23, v24, v32 & 1, 1, (uint64_t)v19, a8, v30);
  }
  return result;
}

uint64_t sub_1000CC2DC@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  int v23 = a3;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v19 = &a7[v18[5]];
  *(_OWORD *)uint64_t v19 = xmmword_100750CE0;
  v19[16] = 3;
  sub_1000AEF2C(a1, (uint64_t)v13, (uint64_t *)&unk_1009555F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    UUID.init()();
    sub_10008DB18(a1, (uint64_t *)&unk_1009555F0);
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_1009555F0);
    uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32);
  }
  else
  {
    sub_10008DB18(a1, (uint64_t *)&unk_1009555F0);
    uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32);
    v20(v17, v13, v14);
  }
  v20(a7, v17, v14);
  a7[v18[6]] = a2 & 1;
  a7[v18[7]] = v23 & 1;
  a7[v18[8]] = a4 & 1;
  uint64_t result = sub_1000CC514(v24, (uint64_t)&a7[v18[9]]);
  *(void *)&a7[v18[10]] = v25;
  return result;
}

uint64_t sub_1000CC514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CC57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  unsigned int v15 = a3;
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v63 - v21;
  if (v15 < 3 || a1 ^ 2 | a2)
  {
    *(void *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
  }
  else
  {
    int v67 = a4 & 1;
    int v68 = a6;
    uint64_t v23 = *(void *)(v8 + 8);
    if (*(unsigned char *)(v23 + OBJC_IVAR___CHHistoryDataProvider_hasInitialWorkouts) == 1
      && (*(unsigned char *)(v23 + OBJC_IVAR___CHHistoryDataProvider_hasInitialMindfulnessSessions) & 1) != 0
      || *(unsigned char *)(v23 + OBJC_IVAR___CHHistoryDataProvider_shouldForceReload) == 1)
    {
      uint64_t v24 = *(void *)(v23 + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems);
      if (*(void *)(v24 + 16) >= 3uLL) {
        uint64_t v25 = 3;
      }
      else {
        uint64_t v25 = *(void *)(v24 + 16);
      }
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v26 = (void *)swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = _swiftEmptyArrayStorage;
      }
      uint64_t v27 = v26[2];
      swift_release();
      if (v27 == v25)
      {
        uint64_t v28 = (void *)swift_dynamicCastClass();
        if (!v28)
        {
          swift_bridgeObjectRelease();
          uint64_t v28 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v28 = sub_10036937C(v24, v24 + 32, 0, (2 * v25) | 1);
      }
      id v66 = v28;
      swift_bridgeObjectRelease();
      sub_1000CD028(a5, (uint64_t)v69);
      uint64_t v29 = v70;
      if (v70)
      {
        uint64_t v30 = v71;
        sub_10007E4EC(v69, v70);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
        uint64_t v31 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v22, 0, 1, v31);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v69);
      }
      else
      {
        sub_10008DB18((uint64_t)v69, &qword_10094CEF0);
        uint64_t v35 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v22, 1, 1, v35);
      }
      uint64_t v36 = *(void **)v8;
      uint64_t v38 = *(void **)(v8 + 16);
      uint64_t v37 = *(void *)(v8 + 24);
      id v39 = *(void **)(v8 + 32);
      id v40 = *(void **)(v8 + 40);
      id v41 = *(void **)(v8 + 56);
      id v63 = *(id *)(v8 + 48);
      id v64 = v41;
      uint64_t v42 = type metadata accessor for HistoryItemsCard();
      uint64_t v65 = swift_allocObject();
      id v43 = v36;
      id v44 = v38;
      swift_retain();
      id v45 = v39;
      id v46 = v40;
      id v47 = v63;
      id v61 = v64;
      uint64_t result = sub_1000CCACC((uint64_t)v22, v67, v68 & 1, 1, (uint64_t)v66, (uint64_t)v43, (uint64_t)v44, v37, (uint64_t)v45, (uint64_t)v46, (uint64_t)v47, (uint64_t)v61);
    }
    else
    {
      sub_1000CD028(a5, (uint64_t)v69);
      uint64_t v32 = v70;
      if (v70)
      {
        uint64_t v33 = v71;
        sub_10007E4EC(v69, v70);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
        uint64_t v34 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v19, 0, 1, v34);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v69);
      }
      else
      {
        sub_10008DB18((uint64_t)v69, &qword_10094CEF0);
        uint64_t v48 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v19, 1, 1, v48);
      }
      uint64_t v49 = *(void **)v8;
      int v51 = *(void **)(v8 + 16);
      uint64_t v50 = *(void *)(v8 + 24);
      uint64_t v52 = *(void **)(v8 + 32);
      id v53 = *(void **)(v8 + 40);
      uint64_t v55 = *(void **)(v8 + 48);
      uint64_t v54 = *(void **)(v8 + 56);
      uint64_t v42 = type metadata accessor for HistoryItemsCard();
      id v66 = (void *)swift_allocObject();
      id v56 = v49;
      id v57 = v51;
      swift_retain();
      id v58 = v52;
      id v59 = v53;
      id v60 = v55;
      id v62 = v54;
      uint64_t result = sub_1000CCACC((uint64_t)v19, v67, v68 & 1, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v56, (uint64_t)v57, v50, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v62);
    }
    *(void *)(a7 + 24) = v42;
    *(void *)(a7 + 32) = &off_1008BA360;
    *(void *)a7 = result;
  }
  return result;
}

uint64_t type metadata accessor for HistoryItemsCard()
{
  uint64_t result = qword_10094E608;
  if (!qword_10094E608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000CCACC(uint64_t a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v33 = a8;
  uint64_t v34 = a12;
  uint64_t v31 = a7;
  uint64_t v32 = a11;
  uint64_t v29 = a6;
  uint64_t v30 = a10;
  uint64_t v27 = a5;
  uint64_t v28 = a9;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type;
  *(_OWORD *)uint64_t v24 = xmmword_100750D10;
  *(unsigned char *)(v24 + 16) = 3;
  sub_1000CD344(a1, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v19);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v25(v23, v19, v20);
  }
  v25((char *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_uuid), v23, v20);
  *(unsigned char *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size) = a2 & 1;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_editMode) = a3 & 1;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_loadingState) = a4 & 1;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_historyItems) = v27;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_awardsDataProvider) = v29;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutFormattingManager) = v31;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutImageProvider) = v33;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_mindfulnessFormattingManager) = v28;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_stackFormattingManager) = v30;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_seymourCatalogItemDataProvider) = v32;
  *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_fitnessAppContext) = v34;
  return v12;
}

uint64_t sub_1000CCD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  unsigned int v13 = a3;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t result = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13 < 3 || a1 ^ 5 | a2)
  {
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  else
  {
    sub_1000CD028(a4, (uint64_t)&v29);
    uint64_t v18 = v31;
    if (v31)
    {
      uint64_t v19 = v32;
      sub_10007E4EC(&v29, v31);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
      uint64_t v20 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 0, 1, v20);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v29);
    }
    else
    {
      sub_1000058F4((uint64_t)&v29);
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v22 = *((void *)&v29 + 1);
    uint64_t v27 = v29;
    int v23 = v30;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v24 = v29;
    sub_10008E75C(v7 + 8, (uint64_t)&v29);
    sub_10008E75C(v7 + 48, (uint64_t)v28);
    *(void *)(a6 + 24) = type metadata accessor for FitnessPlusUpNextCard();
    *(void *)(a6 + 32) = &off_1008C2C58;
    uint64_t v25 = sub_1000B1710((uint64_t *)a6);
    return sub_1000CD090((uint64_t)v17, a5 & 1, 1, v27, v22, v23, v24, &v29, (char *)v25, v28);
  }
  return result;
}

uint64_t sub_1000CD028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094CEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CD090@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, long long *a8@<X7>, char *a9@<X8>, long long *a10)
{
  int v30 = a6;
  int v31 = a7;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v32 = a10;
  uint64_t v33 = a8;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v22 = &a9[Card[5]];
  *(_OWORD *)uint64_t v22 = xmmword_100750CD0;
  v22[16] = 3;
  a9[Card[6]] = 1;
  sub_1000CD344(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v16);
    int v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    int v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v23(v20, v16, v17);
  }
  v23(a9, v20, v17);
  a9[Card[7]] = a2 & 1;
  a9[Card[8]] = a3 & 1;
  int v24 = &a9[Card[9]];
  uint64_t v25 = v29;
  *(void *)int v24 = v28;
  *((void *)v24 + 1) = v25;
  v24[16] = v30;
  a9[Card[10]] = v31 & 1;
  sub_100093E60(v33, (uint64_t)&a9[Card[11]]);
  return sub_100093E60(v32, (uint64_t)&a9[Card[12]]);
}

uint64_t sub_1000CD2E4(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000CD344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CD3AC()
{
  sub_1000CD40C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1000CD40C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSDate v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)((char *)v0
                 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_friendListSectionManager);
  id result = [v10 hasInitializedFriendData];
  if (result)
  {
    id v12 = [v10 allFriends];
    if (v12)
    {
      unsigned int v13 = v12;
      id v46 = v5;
      uint64_t v47 = v7;
      sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
      sub_1000CD998((unint64_t *)&qword_10095B7A0, (unint64_t *)&qword_10094ECC0);
      uint64_t v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v14 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = &_swiftEmptySetSingleton;
        uint64_t v50 = &_swiftEmptySetSingleton;
        __CocoaSet.makeIterator()();
        uint64_t v16 = __CocoaSet.Iterator.next()();
        if (v16)
        {
          id v43 = v9;
          uint64_t v44 = v6;
          uint64_t v45 = v2;
          uint64_t v17 = &selRef_setCenterCoordinate_;
          do
          {
            uint64_t v48 = v16;
            swift_dynamicCast();
            id v18 = v49;
            if (([v49 isMe] & 1) == 0
              && [v18 isFriendshipCurrentlyActive]
              && ([v18 v17[69]] & 1) != 0)
            {
              id v19 = v49;
              uint64_t v20 = v50;
              unint64_t v21 = v50[2];
              if (v50[3] <= v21)
              {
                sub_1001EA3A8(v21 + 1);
                uint64_t v20 = v50;
              }
              Swift::Int v22 = NSObject._rawHashValue(seed:)(v20[5]);
              int v23 = v20 + 7;
              uint64_t v24 = -1 << *((unsigned char *)v20 + 32);
              unint64_t v25 = v22 & ~v24;
              unint64_t v26 = v25 >> 6;
              if (((-1 << v25) & ~v20[(v25 >> 6) + 7]) != 0)
              {
                unint64_t v27 = __clz(__rbit64((-1 << v25) & ~v20[(v25 >> 6) + 7])) | v25 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                char v28 = 0;
                unint64_t v29 = (unint64_t)(63 - v24) >> 6;
                do
                {
                  if (++v26 == v29 && (v28 & 1) != 0)
                  {
                    __break(1u);
                    id result = (id)swift_release();
                    __break(1u);
                    return result;
                  }
                  BOOL v30 = v26 == v29;
                  if (v26 == v29) {
                    unint64_t v26 = 0;
                  }
                  v28 |= v30;
                  uint64_t v31 = v23[v26];
                }
                while (v31 == -1);
                unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
              }
              *(void *)((char *)v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
              *(void *)(v20[6] + 8 * v27) = v19;
              ++v20[2];
              uint64_t v17 = &selRef_setCenterCoordinate_;
            }
            else
            {
            }
            uint64_t v16 = __CocoaSet.Iterator.next()();
          }
          while (v16);
          uint64_t v15 = v50;
          uint64_t v6 = v44;
          uint64_t v2 = v45;
          NSDate v9 = v43;
        }
        swift_release();
      }
      else
      {
        uint64_t v15 = (void *)sub_1003AD2F0(v14);
      }
      uint64_t v7 = v47;
      swift_retain();
      uint64_t v32 = (void *)sub_1000CDC44((unint64_t)v15, v1);
      swift_release();
      swift_release();
      uint64_t v5 = v46;
    }
    else
    {
      uint64_t v32 = _swiftEmptyArrayStorage;
    }
    uint64_t v33 = Date.init()();
    __chkstk_darwin(v33);
    *(&v42 - 2) = (uint64_t)v9;
    uint64_t v50 = (void *)sub_1000CD9E8((uint64_t (*)(char *))sub_1003AB064, (uint64_t)(&v42 - 4), (uint64_t)v32);
    swift_bridgeObjectRetain();
    sub_1000CDF70(&v50);
    swift_bridgeObjectRelease();
    uint64_t v34 = v50;
    if (v50[2] >= 0xAuLL) {
      uint64_t v35 = 10;
    }
    else {
      uint64_t v35 = v50[2];
    }
    uint64_t v36 = *(void *)(type metadata accessor for ActivitySharingHighlight() - 8);
    uint64_t v37 = (char *)v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v38 = (2 * v35) | 1;
    uint64_t v39 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v5, 1, 1, v39);
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    uint64_t v40 = static MainActor.shared.getter();
    id v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = &protocol witness table for MainActor;
    v41[4] = v34;
    v41[5] = v37;
    v41[6] = 0;
    v41[7] = v38;
    v41[8] = v1;
    v41[9] = v2;
    sub_1000713D0((uint64_t)v5, (uint64_t)&unk_10095A638, (uint64_t)v41);
    swift_release();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_1000CD998(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10007E2D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CD9E8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  id v12 = (char *)v20 - v11;
  unsigned int v13 = &_swiftEmptyArrayStorage;
  unint64_t v25 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = (unint64_t *)&_swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      unsigned int v13 = *(void **)(v24 + 72);
      sub_10017FF5C(a3 + v16 + (void)v13 * v14, (uint64_t)v12);
      char v17 = a1(v12);
      if (v3)
      {
        sub_10017F544((uint64_t)v12);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_1000A9060((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001C93FC(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1001C93FC(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        v15[2] = v19 + 1;
        uint64_t result = sub_1000A9060(v23, (uint64_t)v15 + v16 + v19 * (void)v13, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_10017F544((uint64_t)v12);
      }
      if (v22 == ++v14)
      {
        unsigned int v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_1000CDC44(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  unint64_t v25 = _swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    sub_1000CD998((unint64_t *)&qword_10095B7A0, (unint64_t *)&qword_10094ECC0);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    unint64_t v5 = (unint64_t)v24[1];
    uint64_t v22 = v24[2];
    uint64_t v7 = (uint64_t)v24[3];
    uint64_t v8 = (char *)v24[4];
    unint64_t v9 = (unint64_t)v24[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = (void *)(a1 + 56);
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  int64_t v13 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v14 = __CocoaSet.Iterator.next()();
  if (!v14) {
    goto LABEL_35;
  }
  uint64_t v23 = v14;
  sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v15 = v24[0];
  swift_unknownObjectRelease();
  int64_t v16 = (int64_t)v8;
  uint64_t v17 = v9;
  if (!v15) {
    goto LABEL_35;
  }
  while (1)
  {
    v24[0] = v15;
    sub_1003A91F0(v24, a2, &v23);

    if (v3)
    {
      sub_1000D9B04();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1001E44B0(v23);
    uint64_t v8 = (char *)v16;
    unint64_t v9 = v17;
    if ((v5 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v17 = (v9 - 1) & v9;
    unint64_t v18 = __clz(__rbit64(v9)) | ((void)v8 << 6);
    int64_t v16 = (int64_t)v8;
LABEL_24:
    id v15 = *(id *)(*(void *)(v5 + 48) + 8 * v18);
    if (!v15) {
      goto LABEL_35;
    }
  }
  int64_t v16 = (int64_t)(v8 + 1);
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return result;
  }
  if (v16 >= v13) {
    goto LABEL_35;
  }
  unint64_t v19 = v22[v16];
  if (v19)
  {
LABEL_23:
    uint64_t v17 = (v19 - 1) & v19;
    unint64_t v18 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_24;
  }
  int64_t v20 = (int64_t)(v8 + 2);
  if ((uint64_t)(v8 + 2) >= v13) {
    goto LABEL_35;
  }
  unint64_t v19 = v22[v20];
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = (int64_t)(v8 + 3);
  if ((uint64_t)(v8 + 3) >= v13) {
    goto LABEL_35;
  }
  unint64_t v19 = v22[v20];
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = (int64_t)(v8 + 4);
  if ((uint64_t)(v8 + 4) >= v13) {
    goto LABEL_35;
  }
  unint64_t v19 = v22[v20];
  if (v19)
  {
LABEL_22:
    int64_t v16 = v20;
    goto LABEL_23;
  }
  int64_t v16 = (int64_t)(v8 + 5);
  if ((uint64_t)(v8 + 5) >= v13) {
    goto LABEL_35;
  }
  unint64_t v19 = v22[v16];
  if (v19) {
    goto LABEL_23;
  }
  uint64_t v21 = v8 + 6;
  while ((char *)v13 != v21)
  {
    unint64_t v19 = v22[(void)v21++];
    if (v19)
    {
      int64_t v16 = (int64_t)(v21 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1000D9B04();
  return (uint64_t)v25;
}

Swift::Int sub_1000CDF70(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingHighlight() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000CE018(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1000CE04C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1000CE018(void *a1)
{
  return sub_1000CE02C(0, a1[2], 0, a1);
}

uint64_t sub_1000CE02C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000B6AA0(a1, a2, a3, a4, &qword_10094E878, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
}

Swift::Int sub_1000CE04C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v138 = type metadata accessor for ActivitySharingHighlight();
  uint64_t v4 = *(void *)(v138 - 8);
  uint64_t v5 = __chkstk_darwin(v138);
  uint64_t v129 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v139 = (uint64_t)&v124 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v135 = (uint64_t)&v124 - v10;
  __chkstk_darwin(v9);
  uint64_t v134 = (uint64_t)&v124 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1003ABFEC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  uint64_t v132 = v4;
  Swift::Int v125 = result;
  if (v12 < 2)
  {
    unint64_t v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v124 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_107:
      double v117 = v18;
      if (v20 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_136;
          }
          if (!v118) {
            goto LABEL_148;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v20 + 24];
          sub_1003AC628(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v20 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v117 = sub_1001EEF68((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_138;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v20 > v123) {
            goto LABEL_139;
          }
          memmove(&v117[16 * v20 + 16], &v117[16 * v20 + 32], 16 * (v123 - v20));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v20 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v124[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v124 = (void *)v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  unint64_t v18 = (char *)_swiftEmptyArrayStorage;
  unint64_t v137 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v130 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v33 = v19 + 1;
      goto LABEL_58;
    }
    uint64_t v127 = v2;
    uint64_t v23 = *a1;
    Swift::Int v24 = *(void *)(v4 + 72);
    uint64_t v25 = *a1 + v24 * v22;
    Swift::Int v136 = v12;
    uint64_t v26 = v134;
    sub_10017FF5C(v25, v134);
    uint64_t v27 = v23 + v24 * v21;
    uint64_t v28 = v135;
    sub_10017FF5C(v27, v135);
    int v29 = Date.isAfter(date:)();
    uint64_t v30 = v28;
    Swift::Int v21 = v130;
    sub_10017F544(v30);
    uint64_t v31 = v26;
    Swift::Int v32 = v136;
    sub_10017F544(v31);
    Swift::Int v33 = v21 + 2;
    uint64_t v133 = v23;
    Swift::Int v140 = v24;
    if (v21 + 2 >= v32)
    {
      uint64_t v2 = v127;
      if (v29) {
        goto LABEL_26;
      }
      goto LABEL_38;
    }
    uint64_t v126 = v18;
    uint64_t v34 = v24 * v22;
    uint64_t v35 = v23;
    uint64_t v36 = v24 * v33;
    uint64_t v2 = v127;
    do
    {
      Swift::Int v37 = v33;
      uint64_t v38 = v134;
      sub_10017FF5C(v35 + v36, v134);
      uint64_t v39 = v135;
      sub_10017FF5C(v35 + v34, v135);
      int v40 = Date.isAfter(date:)();
      sub_10017F544(v39);
      sub_10017F544(v38);
      if ((v29 ^ v40))
      {
        uint64_t v4 = v132;
        unint64_t v18 = v126;
        Swift::Int v33 = v37;
        Swift::Int v21 = v130;
        Swift::Int v32 = v136;
        uint64_t v23 = v133;
        if (v29) {
          goto LABEL_26;
        }
        goto LABEL_38;
      }
      Swift::Int v33 = v37 + 1;
      v35 += v140;
    }
    while (v136 != v37 + 1);
    Swift::Int v32 = v136;
    Swift::Int v33 = v136;
    uint64_t v4 = v132;
    unint64_t v18 = v126;
    Swift::Int v21 = v130;
    uint64_t v23 = v133;
    if ((v29 & 1) == 0) {
      goto LABEL_38;
    }
LABEL_26:
    if (v33 < v21) {
      goto LABEL_142;
    }
    if (v21 < v33) {
      break;
    }
LABEL_38:
    a1 = v137;
    if (v33 < v32) {
      goto LABEL_41;
    }
LABEL_58:
    if (v33 < v21) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v136 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_1001EE868(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v65 = *((void *)v18 + 2);
    unint64_t v64 = *((void *)v18 + 3);
    unint64_t v20 = v65 + 1;
    if (v65 >= v64 >> 1) {
      unint64_t v18 = sub_1001EE868((char *)(v64 > 1), v65 + 1, 1, v18);
    }
    uint64_t v66 = v2;
    *((void *)v18 + 2) = v20;
    int v67 = v18 + 32;
    int v68 = &v18[16 * v65 + 32];
    Swift::Int v69 = v136;
    *(void *)int v68 = v21;
    *((void *)v68 + 1) = v69;
    if (v65)
    {
      while (1)
      {
        unint64_t v70 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v75 = &v67[16 * v20];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_124;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_125;
          }
          unint64_t v82 = v20 - 2;
          uint64_t v83 = &v67[16 * v20 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_127;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_130;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_134;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v99 = *((void *)v18 + 4);
            uint64_t v100 = *((void *)v18 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_89;
          }
          uint64_t v72 = *((void *)v18 + 4);
          uint64_t v71 = *((void *)v18 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_126;
        }
        unint64_t v82 = v20 - 2;
        uint64_t v88 = &v67[16 * v20 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_129;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_132;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_133;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_95:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v93) {
          goto LABEL_128;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_131;
        }
        if (v104 < v92) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v20)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        uint64_t v111 = v18;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        BOOL v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1003AC628(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v66) {
          goto LABEL_118;
        }
        if (v115 < v113) {
          goto LABEL_121;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_123;
        }
        unint64_t v18 = v111;
        unint64_t v20 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v137;
        if (v116 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v19 = v136;
    uint64_t v2 = v66;
    Swift::Int v12 = a1[1];
    uint64_t v4 = v132;
    if (v136 >= v12) {
      goto LABEL_107;
    }
  }
  uint64_t v126 = v18;
  uint64_t v127 = v2;
  uint64_t v41 = 0;
  Swift::Int v42 = v140;
  uint64_t v43 = v140 * (v33 - 1);
  Swift::Int v44 = v33 * v140;
  Swift::Int v45 = v21;
  uint64_t v46 = v21 * v140;
  a1 = v137;
  do
  {
    if (v45 != v33 + v41 - 1)
    {
      if (!v23) {
        goto LABEL_147;
      }
      sub_1003ADBEC(v23 + v46, v129);
      if (v46 < v43 || v23 + v46 >= (unint64_t)(v23 + v44))
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v46 != v43)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_1003ADBEC(v129, v23 + v43);
      a1 = v137;
      uint64_t v23 = v133;
      Swift::Int v42 = v140;
    }
    ++v45;
    --v41;
    v43 -= v42;
    v44 -= v42;
    v46 += v42;
  }
  while (v45 < v33 + v41);
  uint64_t v4 = v132;
  unint64_t v18 = v126;
  uint64_t v2 = v127;
  Swift::Int v21 = v130;
  Swift::Int v32 = v136;
  if (v33 >= v136) {
    goto LABEL_58;
  }
LABEL_41:
  if (__OFSUB__(v33, v21)) {
    goto LABEL_140;
  }
  if (v33 - v21 >= v125) {
    goto LABEL_58;
  }
  if (__OFADD__(v21, v125)) {
    goto LABEL_143;
  }
  if (v21 + v125 >= v32) {
    Swift::Int v47 = v32;
  }
  else {
    Swift::Int v47 = v21 + v125;
  }
  if (v47 >= v21)
  {
    if (v33 != v47)
    {
      uint64_t v126 = v18;
      uint64_t v127 = v2;
      uint64_t v48 = *(void *)(v4 + 72);
      uint64_t v49 = v48 * (v33 - 1);
      uint64_t v133 = v48;
      Swift::Int v50 = v33 * v48;
      Swift::Int v128 = v47;
      do
      {
        uint64_t v52 = 0;
        Swift::Int v136 = v33;
        while (1)
        {
          Swift::Int v140 = v21;
          uint64_t v53 = *a1;
          Swift::Int v54 = v50;
          uint64_t v55 = v50 + v52 + *a1;
          id v56 = a1;
          uint64_t v57 = v134;
          sub_10017FF5C(v55, v134);
          uint64_t v58 = v49;
          uint64_t v59 = v49 + v52 + v53;
          uint64_t v60 = v135;
          sub_10017FF5C(v59, v135);
          LOBYTE(v53) = Date.isAfter(date:)();
          sub_10017F544(v60);
          sub_10017F544(v57);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v61 = *v56;
          if (!*v56) {
            goto LABEL_145;
          }
          Swift::Int v50 = v54;
          uint64_t v49 = v58;
          uint64_t v62 = v61 + v58 + v52;
          sub_1003ADBEC(v61 + v54 + v52, v139);
          swift_arrayInitWithTakeFrontToBack();
          sub_1003ADBEC(v139, v62);
          v52 -= v133;
          Swift::Int v21 = v140 + 1;
          Swift::Int v51 = v136;
          a1 = v137;
          if (v136 == v140 + 1) {
            goto LABEL_51;
          }
        }
        Swift::Int v51 = v136;
        a1 = v56;
        uint64_t v49 = v58;
        Swift::Int v50 = v54;
LABEL_51:
        Swift::Int v33 = v51 + 1;
        v49 += v133;
        v50 += v133;
        Swift::Int v21 = v130;
      }
      while (v33 != v128);
      Swift::Int v33 = v128;
      unint64_t v18 = v126;
      uint64_t v2 = v127;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000CEA30()
{
  unint64_t v20 = v0;
  swift_release();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    swift_unknownObjectRetain_n();
    log = v2;
    uint64_t v4 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = _typeName(_:qualified:)();
    v0[2] = sub_10008F1F4(v5, v6, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for ActivitySharingHighlight();
    swift_unknownObjectRetain();
    uint64_t v7 = ArraySlice.description.getter();
    unint64_t v9 = v8;
    swift_unknownObjectRelease();
    v0[2] = sub_10008F1F4(v7, v9, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "%s updating highlights %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  unint64_t v10 = v0[6];
  uint64_t v11 = v0[3];
  if ((v10 & 1) == 0)
  {
    swift_unknownObjectRetain();
LABEL_5:
    Swift::Int v12 = sub_100369BF4(v11, v0[4], v0[5], v10);
    goto LABEL_12;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  int64_t v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    unint64_t v10 = v0[6];
    int64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = v13[2];
  swift_release();
  if (__OFSUB__(v10 >> 1, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v15 != (v10 >> 1) - v14)
  {
LABEL_16:
    swift_unknownObjectRelease();
    unint64_t v10 = v0[6];
    uint64_t v11 = v0[3];
    goto LABEL_5;
  }
  Swift::Int v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    Swift::Int v12 = _swiftEmptyArrayStorage;
  }
LABEL_12:
  swift_unknownObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v12;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t type metadata accessor for ActivitySharingHighlight()
{
  uint64_t result = qword_100955C80;
  if (!qword_100955C80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for ActivitySharingHighlightDataProvider.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ActivityDashboardViewController()
{
  uint64_t result = qword_10095F608;
  if (!qword_10095F608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SeymourBrowsingCoordinator.Style(void *a1, uint64_t a2)
{
  os_log_type_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  sub_1000CEE44(*(void **)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1000CEE44(void *a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    id v3 = a1;
    uint64_t v2 = vars8;
  }
  return swift_retain();
}

void sub_1000CEE80()
{
  uint64_t v1 = type metadata accessor for DateInterval();
  uint64_t v80 = *(void *)(v1 - 8);
  uint64_t v81 = v1;
  __chkstk_darwin(v1);
  uint64_t v79 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar.Component();
  uint64_t v82 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v21 = __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v65 - v24;
  if (qword_10094B130 != -1)
  {
    uint64_t v76 = v23;
    uint64_t v77 = v22;
    swift_once();
    uint64_t v23 = v76;
    uint64_t v22 = v77;
  }
  if (byte_10096A4E0) {
    goto LABEL_7;
  }
  if (qword_10094B138 != -1)
  {
    uint64_t v76 = v23;
    uint64_t v77 = v22;
    swift_once();
    uint64_t v23 = v76;
    uint64_t v22 = v77;
  }
  if (byte_10096A4E1)
  {
LABEL_7:
    static os_log_type_t.default.getter();
    id v26 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v27 = OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability;
    uint64_t v28 = 3;
LABEL_8:
    *(void *)(v0 + v27) = v28;
    return;
  }
  uint64_t v76 = v23;
  uint64_t v77 = v22;
  uint64_t v78 = v25;
  int v29 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_healthStore);
  if (FIExperienceTypeWithHealthStore() != 1)
  {
    static os_log_type_t.default.getter();
    id v37 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v27 = OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability;
    uint64_t v28 = 1;
    goto LABEL_8;
  }
  uint64_t v74 = v0;
  uint64_t v75 = v13;
  uint64_t v72 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_dataProvider);
  uint64_t v73 = v12;
  id v30 = *(id *)(v72 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache);
  id v31 = [v30 activitySummaryForCacheIndex:[v30 latestActivitySummaryIndex]];

  if (!v31)
  {
    id v83 = 0;
    id v32 = [v29 activityMoveModeWithError:&v83];
    if (!v32)
    {
      id v47 = v83;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      static os_log_type_t.default.getter();
      id v48 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      return;
    }
    id v31 = v32;
    id v33 = v83;
  }
  id v34 = [v31 activityMoveMode];

  uint64_t v35 = v74;
  if (v34 == (id)2)
  {
    static os_log_type_t.default.getter();
    id v36 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    *(void *)(v35 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability) = 1;
    return;
  }
  Date.init()();
  if (qword_10094A5F8 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Calendar();
  uint64_t v39 = sub_1000876DC(v38, (uint64_t)qword_100997640);
  uint64_t v40 = v82;
  uint64_t v41 = *(void (**)(void))(v82 + 104);
  unsigned int v70 = enum case for Calendar.Component.day(_:);
  Swift::Int v69 = (void (*)(char *, void, uint64_t))v41;
  v41(v5);
  uint64_t v71 = v39;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v82 = *(void *)(v40 + 8);
  ((void (*)(char *, uint64_t))v82)(v5, v3);
  uint64_t v42 = v73;
  int v68 = *(unsigned int (**)(char *, uint64_t))(v75 + 48);
  if (v68(v11, 1) == 1)
  {
    unint64_t v9 = v11;
    uint64_t v43 = v42;
    uint64_t v44 = v75;
LABEL_22:
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
    static os_log_type_t.default.getter();
    id v46 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v78, v43);
    return;
  }
  Swift::Int v45 = v11;
  uint64_t v43 = v42;
  uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v75 + 32);
  uint64_t v67 = v75 + 32;
  v66(v77, v45, v42);
  v69(v5, v70, v3);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  ((void (*)(char *, uint64_t))v82)(v5, v3);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v68)(v9, 1, v42) == 1)
  {
    uint64_t v44 = v75;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v42);
    goto LABEL_22;
  }
  v66(v76, v9, v42);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v49(v19, v77, v42);
  v49(v16, (uint64_t)v78, v42);
  Swift::Int v50 = v79;
  DateInterval.init(start:end:)();
  uint64_t v82 = sub_1000CF8C0();
  uint64_t v51 = v42;
  uint64_t v52 = v81;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v80 + 8);
  v53(v50, v81);
  v49(v19, v76, v42);
  v49(v16, (uint64_t)v78, v42);
  uint64_t v54 = v82;
  DateInterval.init(start:end:)();
  uint64_t v55 = sub_1000CF8C0();
  v53(v50, v52);
  int v56 = sub_1000D0350();
  uint64_t v57 = v75;
  if (v54 < 180 || v55 < 45)
  {
    static os_log_type_t.default.getter();
    uint64_t v60 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_10074E640;
    *(void *)(v61 + 56) = &type metadata for Int;
    *(void *)(v61 + 64) = &protocol witness table for Int;
    *(void *)(v61 + 32) = v54;
    *(void *)(v61 + 96) = &type metadata for Int;
    *(void *)(v61 + 104) = &protocol witness table for Int;
    *(void *)(v61 + 72) = v55;
    id v62 = v60;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v63(v76, v51);
    v63(v77, v51);
    v63((uint64_t)v78, v51);
    uint64_t v59 = OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability;
    if (!v56)
    {
      uint64_t v64 = 2;
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v58(v76, v51);
    v58(v77, v51);
    v58((uint64_t)v78, v51);
    uint64_t v59 = OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability;
  }
  uint64_t v64 = 3;
LABEL_30:
  *(void *)(v74 + v59) = v64;
}

uint64_t sub_1000CF8C0()
{
  uint64_t v48 = type metadata accessor for Calendar.Component();
  uint64_t v42 = *(char **)(v48 - 8);
  __chkstk_darwin(v48);
  id v47 = (char *)v36 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v1 - 8);
  id v46 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v51 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)v36 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v36 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v36 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v36 - v16;
  if (qword_10094A5F0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Calendar();
  uint64_t v19 = sub_1000876DC(v18, (uint64_t)qword_100997628);
  DateInterval.start.getter();
  Calendar.startOfDay(for:)();
  id v37 = v17;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v15, v3);
  DateInterval.end.getter();
  uint64_t v45 = v19;
  Calendar.startOfDay(for:)();
  uint64_t v49 = v20;
  uint64_t v50 = v4 + 8;
  v20(v15, v3);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v44 = v4 + 16;
  v43(v9, v37, v3);
  if (static Date.< infix(_:_:)())
  {
    unsigned int v41 = enum case for Calendar.Component.day(_:);
    uint64_t v39 = (void (**)(char *, uint64_t))(v42 + 8);
    uint64_t v40 = (void (**)(char *, void, uint64_t))(v42 + 104);
    uint64_t v38 = v4 + 48;
    uint64_t v21 = _swiftEmptyArrayStorage;
    uint64_t v42 = v12;
    uint64_t v22 = v47;
    uint64_t v23 = v48;
    uint64_t v24 = (uint64_t)v46;
    while (1)
    {
      v43(v51, v9, v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = (void *)sub_1000D031C(0, v21[2] + 1, 1, (unint64_t)v21);
      }
      unint64_t v26 = v21[2];
      unint64_t v25 = v21[3];
      if (v26 >= v25 >> 1) {
        uint64_t v21 = (void *)sub_1000D031C(v25 > 1, v26 + 1, 1, (unint64_t)v21);
      }
      v21[2] = v26 + 1;
      unint64_t v27 = (unint64_t)v21
          + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
          + *(void *)(v4 + 72) * v26;
      uint64_t v28 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
      v28(v27, v51, v3);
      (*v40)(v22, v41, v23);
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      (*v39)(v22, v23);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v24, 1, v3) == 1) {
        break;
      }
      v49(v9, v3);
      v28((unint64_t)v9, (char *)v24, v3);
      uint64_t v12 = v42;
      if ((static Date.< infix(_:_:)() & 1) == 0) {
        goto LABEL_14;
      }
    }
    sub_10008DB18(v24, (uint64_t *)&unk_10095B890);
    uint64_t v12 = v42;
  }
LABEL_14:
  id v29 = v36[1];
  uint64_t v30 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_10008CF98(v30, (uint64_t)v29);
  swift_bridgeObjectRelease_n();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v33 = v9;
  id v34 = v49;
  v49(v33, v3);
  v34(v12, v3);
  v34(v37, v3);
  return v32;
}

void *sub_1000CFE50(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for Calendar.Component();
  uint64_t v37 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v31 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v31 - v15;
  DateInterval.start.getter();
  DateInterval.end.getter();
  uint64_t v17 = sub_1000C6160((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
  char v18 = dispatch thunk of static Comparable.< infix(_:_:)();
  unsigned int v41 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v42 = v8 + 8;
  v41(v14, v7);
  if (v18)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v20 = v41;
LABEL_3:
    v20(v16, v7);
  }
  else
  {
    uint64_t v38 = v11;
    uint64_t v39 = v3;
    id v36 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v43 = v8 + 32;
    unsigned int v35 = enum case for Calendar.Component.day(_:);
    id v33 = (void (**)(char *, uint64_t))(v37 + 8);
    id v34 = (void (**)(char *, void, uint64_t))(v37 + 104);
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v37 = v8 + 16;
    v31[1] = a1;
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v31[0] = v17;
    while (1)
    {
      uint64_t v21 = v38;
      v36(v38, v16, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (void *)sub_1000D031C(0, v19[2] + 1, 1, (unint64_t)v19);
      }
      unint64_t v23 = v19[2];
      unint64_t v22 = v19[3];
      if (v23 >= v22 >> 1) {
        uint64_t v19 = (void *)sub_1000D031C(v22 > 1, v23 + 1, 1, (unint64_t)v19);
      }
      v19[2] = v23 + 1;
      unint64_t v24 = (unint64_t)v19
          + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(void *)(v8 + 72) * v23;
      unint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
      v25(v24, v21, v7);
      if (qword_10094A5E8 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Calendar();
      sub_1000876DC(v26, (uint64_t)qword_100997610);
      unint64_t v27 = v39;
      uint64_t v28 = v40;
      (*v34)(v39, v35, v40);
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      (*v33)(v27, v28);
      uint64_t v20 = v41;
      v41(v16, v7);
      if ((*v32)(v6, 1, v7) == 1) {
        break;
      }
      v25((unint64_t)v16, v6, v7);
      DateInterval.end.getter();
      char v29 = dispatch thunk of static Comparable.< infix(_:_:)();
      v20(v14, v7);
      if (v29) {
        goto LABEL_3;
      }
    }
    sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
  }
  return v19;
}

uint64_t sub_1000D031C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000ACBAC(a1, a2, a3, a4, (uint64_t *)&unk_1009559D0, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1000D0350()
{
  return _os_feature_enabled_impl();
}

uint64_t sub_1000D0364(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[12];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

uint64_t sub_1000D050C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D0554()
{
  return sub_1000D055C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D055C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10095CB70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = type metadata accessor for OSSignposter();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    sub_1000D0674((uint64_t)v5, 0);
    swift_unknownObjectRelease();
    sub_10008DB18((uint64_t)v5, &qword_10095CB70);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000ABF1C(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000D0674(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095CB70);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000AEF2C(a1, (uint64_t)v12, &qword_10095CB70);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  sub_1000AEEC8((uint64_t)v12, v17 + v15, &qword_10095CB70);
  *(void *)(v17 + v16) = v21;
  aBlock[4] = sub_100070490;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008CC1D0;
  char v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000B7550((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v23);
}

void sub_1000D0A3C(uint64_t a1, unsigned int a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = (char *)Strong;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context;
  id v6 = objc_retain(*(id *)(*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                         + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
  sub_1000D15BC(a2);

  uint64_t v7 = *(void **)(*(void *)&v4[v5] + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v7;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  uint64_t v41 = v46[0];
  uint64_t v43 = v4;
  uint64_t v9 = &v4[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
  swift_beginAccess();
  uint64_t v42 = v9;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(*(void *)v9 + 16);
  if (!v11)
  {
    swift_bridgeObjectRetain();
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v37 = v43;
    uint64_t v38 = sub_1000CAF34(v41, (uint64_t)&_swiftEmptyDictionarySingleton, (uint64_t)v37);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v42 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v37;
    *(void *)(v39 + 24) = v38;
    id v40 = v37;
    sub_10008A354((uint64_t)sub_1000D0554, v39);
    swift_release();

    return;
  }
  uint64_t v12 = v10 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v44 = v11;
    sub_10008E75C(v12, (uint64_t)v46);
    uint64_t v14 = v47;
    uint64_t v15 = v48;
    sub_10007E4EC(v46, v47);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    char v18 = v17;
    unsigned __int8 v20 = v19;
    uint64_t v21 = v47;
    uint64_t v22 = v48;
    sub_10007E4EC(v46, v47);
    char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    sub_10008E75C((uint64_t)v46, (uint64_t)v45);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v26 = sub_1000D0E60(v16, v18, v20 | ((v23 & 1) << 8));
    uint64_t v27 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1004F4B6C();
        if (v30) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000D1228(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_1000D0E60(v16, v18, v20 | ((v23 & 1) << 8));
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_22;
      }
      unint64_t v26 = v31;
      if (v30)
      {
LABEL_4:
        uint64_t v13 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v26;
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v13);
        sub_100093E60(v45, v13);
        goto LABEL_5;
      }
    }
    *((void *)&_swiftEmptyDictionarySingleton + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v33 = *((void *)&_swiftEmptyDictionarySingleton + 6) + 24 * v26;
    *(void *)uint64_t v33 = v16;
    *(void *)(v33 + 8) = v18;
    *(unsigned char *)(v33 + 16) = v20;
    *(unsigned char *)(v33 + 17) = v23 & 1;
    sub_100093E60(v45, *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v26);
    uint64_t v34 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_21;
    }
    *((void *)&_swiftEmptyDictionarySingleton + 2) = v36;
    sub_100091494(v16, (uint64_t)v18, v20);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_1000917F8(v16, (uint64_t)v18, v20);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v46);
    v12 += 40;
    uint64_t v11 = v44 - 1;
    if (v44 == 1) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

unint64_t sub_1000D0E60(uint64_t a1, void *a2, unsigned int a3)
{
  Hasher.init(_seed:)();
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  sub_1000932C0(v9, a3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!(_BYTE)a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)((a3 >> 8) & 1);
  Swift::Int v6 = Hasher._finalize()();

  return sub_1000D0F4C(a1, (uint64_t)a2, a3 & 0x1FF, v6);
}

unint64_t sub_1000D0F4C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    BOOL v13 = a1 != 7;
    BOOL v14 = a1 != 6;
    BOOL v15 = a1 != 5;
    BOOL v16 = a1 != 4;
    BOOL v17 = a1 != 3;
    BOOL v18 = a1 != 2;
    BOOL v19 = a1 != 1;
    if (a2)
    {
      BOOL v13 = 1;
      BOOL v14 = 1;
      BOOL v15 = 1;
      BOOL v16 = 1;
      BOOL v17 = 1;
      BOOL v18 = 1;
      BOOL v19 = 1;
    }
    if (a3 != 3) {
      BOOL v13 = 1;
    }
    BOOL v38 = v13;
    int v20 = a3 != 3 || v14;
    int v37 = v20;
    int v21 = a3 != 3 || v15;
    int v22 = a3 != 3 || v16;
    int v35 = v22;
    int v36 = v21;
    int v23 = a3 != 3 || v17;
    int v24 = a3 != 3 || v18;
    int v33 = v24;
    int v34 = v23;
    int v25 = a3 != 3 || v19;
    int v32 = v25;
    if (a2 | a1) {
      BOOL v26 = 1;
    }
    else {
      BOOL v26 = a3 != 3;
    }
    while (2)
    {
      uint64_t v27 = (uint64_t *)(v12 + 24 * v7);
      uint64_t v28 = *v27;
      int v29 = *((unsigned __int8 *)v27 + 17);
      switch(*((unsigned char *)v27 + 16))
      {
        case 1:
          if (a3 != 1) {
            goto LABEL_28;
          }
          if (v28 == a1 && v27[1] == a2)
          {
            if (v29 != (unsigned __int16)(a3 & 0x100) >> 8) {
              goto LABEL_28;
            }
          }
          else if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0 {
                 || v29 != (unsigned __int16)(a3 & 0x100) >> 8)
          }
          {
            goto LABEL_28;
          }
          return v7;
        case 2:
          if (a3 != 2) {
            goto LABEL_28;
          }
          goto LABEL_41;
        case 3:
          switch(v28)
          {
            case 1:
              if ((v32 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 2:
              if ((v33 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 3:
              if ((v34 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 4:
              if ((v35 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 5:
              if ((v36 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 6:
              if ((v37 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            case 7:
              if ((v38 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
            default:
              if ((v26 | v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8))) {
                goto LABEL_28;
              }
              break;
          }
          return v7;
        default:
          if ((_BYTE)a3) {
            goto LABEL_28;
          }
LABEL_41:
          if (v28 == a1 && ((v29 ^ ((unsigned __int16)(a3 & 0x100) >> 8)) & 1) == 0) {
            return v7;
          }
LABEL_28:
          unint64_t v7 = (v7 + 1) & v11;
          if ((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7)) {
            continue;
          }
          return v7;
      }
    }
  }
  return v7;
}

uint64_t sub_1000D1228(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FE78);
  uint64_t v27 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    BOOL v26 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v7 = (void *)(v5 + 64);
    uint64_t v8 = -1;
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v10 = (unint64_t)(v6 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_35:
          __break(1u);
          return result;
        }
        if (v16 >= v10) {
          goto LABEL_26;
        }
        unint64_t v17 = v7[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v10) {
            goto LABEL_26;
          }
          unint64_t v17 = v7[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v10)
            {
LABEL_26:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v26;
                goto LABEL_33;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
              if (v25 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v7 = -1 << v25;
              }
              uint64_t v3 = v26;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v7[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_35;
                }
                if (v12 >= v10) {
                  goto LABEL_26;
                }
                unint64_t v17 = v7[v12];
                ++v18;
                if (v17) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(v5 + 48) + 24 * v15;
      uint64_t v20 = *(void *)v19;
      int v21 = *(void **)(v19 + 8);
      unsigned int v22 = *(unsigned __int8 *)(v19 + 16);
      int v23 = *(unsigned __int8 *)(v19 + 17);
      int v24 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2)
      {
        sub_100093E60(v24, (uint64_t)v28);
      }
      else
      {
        sub_10008E75C((uint64_t)v24, (uint64_t)v28);
        sub_100091494(v20, (uint64_t)v21, v22);
      }
      if (v23) {
        int v13 = 256;
      }
      else {
        int v13 = 0;
      }
      uint64_t result = sub_1000D146C(v20, v21, v13 | v22, v28, v27);
    }
  }
  uint64_t result = swift_release();
LABEL_33:
  *uint64_t v3 = v27;
  return result;
}

uint64_t sub_1000D146C(uint64_t a1, void *a2, unsigned int a3, long long *a4, void *a5)
{
  Hasher.init(_seed:)();
  v13._countAndFlagsBits = a1;
  v13._object = a2;
  sub_1000932C0(v13, a3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!(_BYTE)a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)((a3 >> 8) & 1);
  Hasher._finalize()();
  unint64_t v10 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a5 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  uint64_t v11 = a5[6] + 24 * v10;
  *(void *)uint64_t v11 = a1;
  *(void *)(v11 + 8) = a2;
  *(unsigned char *)(v11 + 16) = a3;
  *(unsigned char *)(v11 + 17) = BYTE1(a3) & 1;
  uint64_t result = sub_100093E60(a4, a5[7] + 40 * v10);
  ++a5[2];
  return result;
}

uint64_t sub_1000D15BC(unsigned int a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_didSetToDefaultConfiguration))
  {
    sub_1000D1754(a1);
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = v1;
    return static Published.subscript.setter();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v5 = sub_100193E1C(a1, v7);
    swift_bridgeObjectRelease();
    sub_10019434C(a1, v5);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = v1;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100197E98();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000D1754(char a1)
{
  sub_1000AFA94(&qword_10094C528);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1007509E0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(_WORD *)(v2 + 48) = 259;
  if ((a1 & 0x40) != 0)
  {
    uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)1, 2, 1, (void *)v2);
    *(void *)(v2 + 16) = 2;
    *(_OWORD *)(v2 + 56) = xmmword_100750D10;
    *(_WORD *)(v2 + 72) = 0;
    unint64_t v4 = *(void *)(v2 + 24);
    if (v4 <= 5)
    {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v4 > 1), 3, 1, (void *)v2);
      unint64_t v4 = *(void *)(v2 + 24);
    }
    unint64_t v3 = 3;
    *(void *)(v2 + 16) = 3;
    *(_OWORD *)(v2 + 80) = xmmword_100750D20;
    *(_WORD *)(v2 + 96) = 0;
  }
  else
  {
    unint64_t v3 = 1;
    unint64_t v4 = 2;
  }
  unint64_t v5 = v4 >> 1;
  unint64_t v6 = v3 + 1;
  if (v4 >> 1 <= v3)
  {
    uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v4 > 1), v3 + 1, 1, (void *)v2);
    unint64_t v4 = *(void *)(v2 + 24);
    unint64_t v5 = v4 >> 1;
  }
  *(void *)(v2 + 16) = v6;
  uint64_t v7 = v2 + 24 * v3;
  unint64_t v8 = v3 + 2;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0;
  *(_WORD *)(v7 + 48) = 0;
  if (v5 <= v6) {
    uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v4 > 1), v3 + 2, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v8;
  uint64_t v9 = v2 + 24 * v6;
  *(_OWORD *)(v9 + 32) = xmmword_100750CF0;
  *(_WORD *)(v9 + 48) = 0;
  uint64_t v10 = a1 & 6;
  if (v10 == 6)
  {
    unint64_t v11 = *(void *)(v2 + 24);
    unint64_t v12 = v3 + 3;
    if (v8 >= v11 >> 1) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v11 > 1), v3 + 3, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v12;
    uint64_t v13 = v2 + 24 * v8;
    *(_OWORD *)(v13 + 32) = xmmword_100750CD0;
    *(_WORD *)(v13 + 48) = 259;
  }
  else
  {
    unint64_t v12 = v3 + 2;
  }
  unint64_t v14 = *(void *)(v2 + 24);
  unint64_t v15 = v12 + 1;
  if (v12 >= v14 >> 1) {
    uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v14 > 1), v12 + 1, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v15;
  uint64_t v16 = v2 + 24 * v12;
  *(_OWORD *)(v16 + 32) = xmmword_100750D10;
  *(_WORD *)(v16 + 48) = 3;
  unint64_t v17 = *(void *)(v2 + 24);
  unint64_t v18 = v17 >> 1;
  int64_t v19 = v12 + 2;
  if (v10 == 2)
  {
    if (v18 <= v15) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v17 > 1), v19, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v19;
    uint64_t v20 = v2 + 24 * v15;
    *(_OWORD *)(v20 + 32) = xmmword_100750CE0;
    *(_WORD *)(v20 + 48) = 3;
    unint64_t v15 = *(void *)(v2 + 16);
    unint64_t v21 = *(void *)(v2 + 24);
    int64_t v19 = v15 + 1;
    char v22 = 1;
    if (v15 >= v21 >> 1) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v21 > 1), v15 + 1, 1, (void *)v2);
    }
  }
  else
  {
    if (v18 <= v15) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v17 > 1), v19, 1, (void *)v2);
    }
    char v22 = 0;
  }
  *(void *)(v2 + 16) = v19;
  uint64_t v23 = v2 + 24 * v15;
  *(_OWORD *)(v23 + 32) = xmmword_100750D20;
  *(unsigned char *)(v23 + 48) = 3;
  *(unsigned char *)(v23 + 49) = v22;
  if ((a1 & 0x81) == 0x80)
  {
    unint64_t v25 = *(void *)(v2 + 16);
    unint64_t v24 = *(void *)(v2 + 24);
    if (v25 >= v24 >> 1) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v24 > 1), v25 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v25 + 1;
    uint64_t v26 = v2 + 24 * v25;
    *(_OWORD *)(v26 + 32) = xmmword_100750D00;
    *(_WORD *)(v26 + 48) = 259;
  }
  if (v10 == 6)
  {
    unint64_t v28 = *(void *)(v2 + 16);
    unint64_t v27 = *(void *)(v2 + 24);
    if (v28 >= v27 >> 1) {
      uint64_t v2 = (uint64_t)sub_1000D1C2C((void *)(v27 > 1), v28 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v28 + 1;
    uint64_t v29 = v2 + 24 * v28;
    *(_OWORD *)(v29 + 32) = xmmword_100750CE0;
    *(_WORD *)(v29 + 48) = 3;
  }
  return v2;
}

void *sub_1000D1AFC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000AFA94(a5);
      unint64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001EF98C(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1000D1C2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D1AFC(a1, a2, a3, a4, &qword_10094C528);
}

uint64_t sub_1000D1C40(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  char v6 = (int *)type metadata accessor for CatalogTipSectionItem();
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v4 + v6[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v4 + v6[12];
  uint64_t v13 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v72 = *(void *)(View - 8);
  uint64_t v3 = *(void *)(v72 + 64);
  __chkstk_darwin(View);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095F988);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_10095F990);
  __chkstk_darwin(v71);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_10095F998);
  __chkstk_darwin(v83);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095F9A0);
  uint64_t v76 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v74 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095F9A8);
  uint64_t v78 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v77 = (char *)&v62 - v17;
  uint64_t v80 = sub_1000AFA94(&qword_10095F9B0);
  __chkstk_darwin(v80);
  uint64_t v82 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_10095F9B8);
  uint64_t v19 = __chkstk_darwin(v81);
  unint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = View;
  if (*(unsigned char *)(v1 + *(int *)(View + 36)) == 1)
  {
    __chkstk_darwin(v19);
    *(&v62 - 2) = v1;
    sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    v22._countAndFlagsBits = 0x353035313232;
    v22._object = (void *)0xE600000000000000;
    UIColor.init(hex:)(v22);
    uint64_t v23 = Color.init(_:)();
    sub_1004E0B78((void (*)(uint64_t *__return_ptr))sub_1004E7554, (uint64_t)(&v62 - 4), v23, (uint64_t)v21);
    swift_release();
    sub_1000AEF2C((uint64_t)v21, v82, &qword_10095F9B8);
    swift_storeEnumTagMultiPayload();
    sub_1000D28B0();
    uint64_t v24 = sub_1004E730C(&qword_10095F9C0, &qword_10095F998, (void (*)(void))sub_1004E72E4);
    uint64_t v84 = v83;
    uint64_t v85 = (ValueMetadata *)&type metadata for Bool;
    uint64_t v86 = v24;
    uint64_t v87 = &protocol witness table for Bool;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v26 = sub_1000D2970();
    uint64_t v84 = v12;
    uint64_t v85 = &type metadata for FitnessPlusCardDataProvider.State;
    uint64_t v86 = OpaqueTypeConformance2;
    uint64_t v87 = (void *)v26;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18((uint64_t)v21, &qword_10095F9B8);
  }
  else
  {
    sub_1004E4068(v1, (uint64_t)v7);
    id v63 = type metadata accessor for FitnessPlusUpNextView;
    sub_1000D2848(v1, (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    uint64_t v28 = *(unsigned __int8 *)(v72 + 80);
    uint64_t v72 = ((v28 + 16) & ~v28) + v3;
    uint64_t v29 = (v28 + 16) & ~v28;
    unsigned int v70 = v11;
    uint64_t v30 = v1;
    uint64_t v31 = v28 | 7;
    uint64_t v32 = swift_allocObject();
    uint64_t v68 = v12;
    uint64_t v33 = v32;
    uint64_t v34 = v29;
    sub_1000D27E0((uint64_t)v4, v32 + v29, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    uint64_t v69 = v14;
    sub_1000AEF2C((uint64_t)v7, (uint64_t)v9, &qword_10095F988);
    int v35 = (uint64_t (**)())&v9[*(int *)(v71 + 36)];
    *int v35 = sub_1000EBB14;
    v35[1] = (uint64_t (*)())v33;
    v35[2] = 0;
    v35[3] = 0;
    sub_10008DB18((uint64_t)v7, &qword_10095F988);
    sub_1000D2848(v30, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    uint64_t v64 = v31;
    uint64_t v36 = swift_allocObject();
    uint64_t v65 = v29;
    uint64_t v67 = type metadata accessor for FitnessPlusUpNextView;
    sub_1000D27E0((uint64_t)v4, v36 + v29, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    uint64_t v37 = (uint64_t)v70;
    sub_1000AEF2C((uint64_t)v9, (uint64_t)v70, &qword_10095F990);
    BOOL v38 = (void *)(v37 + *(int *)(v83 + 36));
    *BOOL v38 = 0;
    v38[1] = 0;
    v38[2] = sub_1004E72C8;
    v38[3] = v36;
    sub_10008DB18((uint64_t)v9, &qword_10095F990);
    uint64_t v39 = *(int *)(v73 + 28);
    uint64_t v66 = v30;
    uint64_t v40 = v30 + v39;
    uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
    LOBYTE(v84) = *(unsigned char *)(v40 + *(int *)(Card + 40));
    uint64_t v42 = v30;
    uint64_t v43 = v63;
    sub_1000D2848(v42, (uint64_t)v4, (uint64_t (*)(void))v63);
    uint64_t v44 = swift_allocObject();
    sub_1000D27E0((uint64_t)v4, v44 + v34, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    uint64_t v45 = sub_1004E730C(&qword_10095F9C0, &qword_10095F998, (void (*)(void))sub_1004E72E4);
    id v46 = v74;
    uint64_t v47 = v83;
    uint64_t v48 = (uint64_t)v70;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10008DB18(v48, &qword_10095F998);
    uint64_t v49 = v40 + *(int *)(Card + 36);
    uint64_t v51 = *(void *)(v49 + 8);
    LOBYTE(Card) = *(unsigned char *)(v49 + 16);
    uint64_t v88 = *(void *)v49;
    uint64_t v50 = v88;
    uint64_t v89 = v51;
    unsigned __int8 v90 = Card;
    sub_1000D2848(v66, (uint64_t)v4, (uint64_t (*)(void))v43);
    uint64_t v52 = swift_allocObject();
    sub_1000D27E0((uint64_t)v4, v52 + v65, (uint64_t (*)(void))v67);
    sub_1000908B0(v50, v51, Card);
    uint64_t v84 = v47;
    uint64_t v85 = (ValueMetadata *)&type metadata for Bool;
    uint64_t v86 = v45;
    uint64_t v87 = &protocol witness table for Bool;
    uint64_t v53 = swift_getOpaqueTypeConformance2();
    unint64_t v54 = sub_1000D2970();
    uint64_t v55 = v75;
    uint64_t v56 = v68;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_1000904DC(v88, v89, v90);
    uint64_t v57 = v56;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v56);
    uint64_t v59 = v77;
    uint64_t v58 = v78;
    uint64_t v60 = v55;
    uint64_t v61 = v69;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v60, v69);
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v82, v59, v61);
    swift_storeEnumTagMultiPayload();
    sub_1000D28B0();
    uint64_t v84 = v57;
    uint64_t v85 = &type metadata for FitnessPlusCardDataProvider.State;
    uint64_t v86 = v53;
    uint64_t v87 = (void *)v54;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v61);
  }
}

uint64_t sub_1000D27E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D2848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000D28B0()
{
  unint64_t result = qword_10095FAA0;
  if (!qword_10095FAA0)
  {
    sub_1000A1370(&qword_10095F9B8);
    sub_1000D3234(&qword_10095FAA8, &qword_10095FAB0, &qword_10095FAB8, &qword_10095FAC0);
    sub_1000A132C(&qword_10095FAC8, &qword_10095FAD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FAA0);
  }
  return result;
}

unint64_t sub_1000D2970()
{
  unint64_t result = qword_10095FA98;
  if (!qword_10095FA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FA98);
  }
  return result;
}

unint64_t sub_1000D29C4()
{
  unint64_t result = qword_10095FA58;
  if (!qword_10095FA58)
  {
    sub_1000A1370(&qword_10095FA60);
    sub_1000E1994();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FA58);
  }
  return result;
}

unint64_t sub_1000D2A38()
{
  unint64_t result = qword_10095FA00;
  if (!qword_10095FA00)
  {
    sub_1000A1370(&qword_10095F9F8);
    sub_1000D3234(&qword_10095FA08, &qword_10095FA10, &qword_10095FA18, &qword_10095FA20);
    sub_1000A132C(&qword_10095FA38, &qword_10095FA40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FA00);
  }
  return result;
}

uint64_t sub_1000D2AF8@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v60)(uint64_t *__return_ptr);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  char v70;
  void (*v71)(uint64_t *__return_ptr);
  char *v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;

  uint64_t v57 = a5;
  id v63 = a4;
  uint64_t v64 = a3;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v62 = a6;
  uint64_t v6 = sub_1000AFA94(&qword_10095FAD8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v59 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v50 - v9;
  uint64_t v10 = sub_1000AFA94(&qword_10095FA40);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_10095FB90);
  __chkstk_darwin(v65);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_10095FA30);
  __chkstk_darwin(v55);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10095FA10);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v56 = (uint64_t)&v50 - v21;
  uint64_t v22 = type metadata accessor for DynamicTypeSize();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v25);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v25, v22);
  uint64_t v66 = v10;
  if (v26 == enum case for DynamicTypeSize.xSmall(_:)
    || v26 == enum case for DynamicTypeSize.small(_:)
    || v26 == enum case for DynamicTypeSize.medium(_:)
    || v26 == enum case for DynamicTypeSize.large(_:)
    || v26 == enum case for DynamicTypeSize.xLarge(_:)
    || v26 == enum case for DynamicTypeSize.xxLarge(_:)
    || v26 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    uint64_t v59 = static HorizontalAlignment.center.getter();
    sub_1000D3DC8(v60, v57, (uint64_t)&v67);
    uint64_t v40 = v67;
    uint64_t v39 = v68;
    LODWORD(v61) = v69;
    char v41 = v70;
    uint64_t v60 = v71;
    uint64_t v58 = v72;
    LODWORD(v57) = v73;
    uint64_t v54 = v74;
    int v53 = v75;
    uint64_t v52 = v76;
    uint64_t v51 = v77;
    uint64_t v42 = static Alignment.bottom.getter();
    uint64_t v44 = v43;
    v64();
    uint64_t v45 = (uint64_t *)&v16[*(int *)(v55 + 36)];
    *uint64_t v45 = v42;
    v45[1] = v44;
    sub_1000AEF2C((uint64_t)v16, (uint64_t)&v20[*(int *)(v17 + 36)], &qword_10095FA30);
    *(void *)uint64_t v20 = v59;
    *((void *)v20 + 1) = 0;
    v20[16] = 0;
    *((void *)v20 + 3) = v40;
    *((void *)v20 + 4) = v39;
    v20[40] = v61;
    v20[41] = v41;
    id v46 = v58;
    *((void *)v20 + 6) = v60;
    *((void *)v20 + 7) = v46;
    v20[64] = v57;
    *((void *)v20 + 9) = v54;
    v20[80] = v53;
    uint64_t v47 = v51;
    *((void *)v20 + 11) = v52;
    *((void *)v20 + 12) = v47;
    sub_10008DB18((uint64_t)v16, &qword_10095FA30);
    uint64_t v37 = &qword_10095FA10;
    uint64_t v48 = v56;
    sub_1000AEEC8((uint64_t)v20, v56, &qword_10095FA10);
    sub_1000AEF2C(v48, (uint64_t)v14, &qword_10095FA10);
    swift_storeEnumTagMultiPayload();
    sub_1000D3234(&qword_10095FA08, &qword_10095FA10, &qword_10095FA18, &qword_10095FA20);
    sub_1000A132C(&qword_10095FA38, &qword_10095FA40);
    _ConditionalContent<>.init(storage:)();
    uint64_t v38 = v48;
    return sub_10008DB18(v38, v37);
  }
  uint64_t v57 = v17;
  uint64_t v27 = (uint64_t)v14;
  if (v26 == enum case for DynamicTypeSize.accessibility1(_:)
    || v26 == enum case for DynamicTypeSize.accessibility2(_:)
    || v26 == enum case for DynamicTypeSize.accessibility3(_:)
    || v26 == enum case for DynamicTypeSize.accessibility4(_:)
    || v26 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    *(void *)uint64_t v12 = static HorizontalAlignment.leading.getter();
    *((void *)v12 + 1) = 0;
    v12[16] = 0;
    uint64_t v28 = &v12[*(int *)(sub_1000AFA94(&qword_10095FB98) + 44)];
    uint64_t v29 = ((void *(*)(uint64_t *__return_ptr))v60)(&v67);
    uint64_t v30 = v67;
    uint64_t v31 = v68;
    char v32 = v69;
    char v33 = v70;
    uint64_t v34 = (uint64_t)v58;
    ((void (*)(void *))v64)(v29);
    uint64_t v35 = v59;
    sub_1000AEF2C(v34, v59, &qword_10095FAD8);
    *(void *)uint64_t v28 = v30;
    *((void *)v28 + 1) = v31;
    v28[16] = v32;
    v28[17] = v33;
    uint64_t v36 = sub_1000AFA94(&qword_10095FBA0);
    sub_1000AEF2C(v35, (uint64_t)&v28[*(int *)(v36 + 48)], &qword_10095FAD8);
    swift_retain();
    sub_10008DB18(v34, &qword_10095FAD8);
    sub_10008DB18(v35, &qword_10095FAD8);
    swift_release();
    uint64_t v37 = &qword_10095FA40;
    sub_1000AEF2C((uint64_t)v12, v27, &qword_10095FA40);
    swift_storeEnumTagMultiPayload();
    sub_1000D3234(&qword_10095FA08, &qword_10095FA10, &qword_10095FA18, &qword_10095FA20);
    sub_1000A132C(&qword_10095FA38, &qword_10095FA40);
    _ConditionalContent<>.init(storage:)();
    uint64_t v38 = (uint64_t)v12;
    return sub_10008DB18(v38, v37);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D3234(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    sub_1000A132C(&qword_10095FA28, &qword_10095FA30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D32F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095FAE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095FAF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = static HorizontalAlignment.leading.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v8 = sub_1000AFA94(&qword_10095FB00);
  sub_1000D3498((uint64_t)&v4[*(int *)(v8 + 44)]);
  uint64_t v9 = static Alignment.leading.getter();
  sub_100098478(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v7, 0.0, 1, 0.0, 1, v9, v10, &qword_10095FAE8, &qword_10095FAF0);
  sub_10008DB18((uint64_t)v4, &qword_10095FAE8);
  LOBYTE(v4) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v7, a1, &qword_10095FAF0);
  uint64_t v11 = a1 + *(int *)(sub_1000AFA94(&qword_10095FAD8) + 36);
  *(unsigned char *)uint64_t v11 = (_BYTE)v4;
  *(_OWORD *)(v11 + 8) = xmmword_100769040;
  *(_OWORD *)(v11 + 24) = xmmword_100769050;
  *(unsigned char *)(v11 + 40) = 0;
  return sub_10008DB18((uint64_t)v7, &qword_10095FAF0);
}

uint64_t sub_1000D3498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v86 = *(void *)(v1 - 8);
  uint64_t v87 = v1;
  __chkstk_darwin(v1);
  uint64_t v85 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_10094DDC0) - 8;
  __chkstk_darwin(v83);
  uint64_t v81 = (uint64_t *)((char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v4 - 8);
  uint64_t v79 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_10095FB10) - 8;
  __chkstk_darwin(v80);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_10095FB18) - 8;
  uint64_t v8 = __chkstk_darwin(v84);
  uint64_t v93 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v82 = (uint64_t)&v76 - v11;
  __chkstk_darwin(v10);
  uint64_t v92 = (uint64_t)&v76 - v12;
  uint64_t v13 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v13[2] = 18;
  v13[4] = 88;
  v13[5] = 0xE100000000000000;
  v13[6] = 88;
  v13[7] = 0xE100000000000000;
  v13[8] = 88;
  v13[9] = 0xE100000000000000;
  v13[10] = 88;
  v13[11] = 0xE100000000000000;
  v13[12] = 88;
  v13[13] = 0xE100000000000000;
  v13[14] = 88;
  v13[15] = 0xE100000000000000;
  v13[16] = 88;
  v13[17] = 0xE100000000000000;
  v13[18] = 88;
  v13[19] = 0xE100000000000000;
  v13[20] = 88;
  v13[21] = 0xE100000000000000;
  v13[22] = 88;
  v13[23] = 0xE100000000000000;
  v13[24] = 88;
  v13[25] = 0xE100000000000000;
  v13[26] = 88;
  v13[27] = 0xE100000000000000;
  v13[28] = 88;
  v13[29] = 0xE100000000000000;
  v13[30] = 88;
  v13[31] = 0xE100000000000000;
  v13[32] = 88;
  v13[33] = 0xE100000000000000;
  v13[34] = 88;
  v13[35] = 0xE100000000000000;
  v13[36] = 88;
  v13[37] = 0xE100000000000000;
  v13[38] = 88;
  v13[39] = 0xE100000000000000;
  uint64_t v94 = (uint64_t)v13;
  uint64_t v91 = sub_1000AFA94(&qword_10095FBA8);
  uint64_t v90 = sub_1000A132C(&qword_10095FBB0, &qword_10095FBA8);
  uint64_t v94 = String.init<A>(_:)();
  uint64_t v95 = v14;
  unint64_t v89 = sub_1000A06D0();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  static Font.caption.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v20 = Text.font(_:)();
  uint64_t v77 = v21;
  char v23 = v22;
  uint64_t v78 = v24;
  swift_release();
  v23 &= 1u;
  sub_1000A06C0(v15, v17, v19);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = enum case for Text.Case.uppercase(_:);
  uint64_t v27 = type metadata accessor for Text.Case();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v79, v26, v27);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v29, 0, 1, v27);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v81;
  sub_1000AEF2C(v29, (uint64_t)v81 + *(int *)(v83 + 36), &qword_10094DDC8);
  *uint64_t v31 = v30;
  sub_1000AEF2C((uint64_t)v31, (uint64_t)&v7[*(int *)(v80 + 44)], &qword_10094DDC0);
  uint64_t v32 = v77;
  *(void *)uint64_t v7 = v20;
  *((void *)v7 + 1) = v32;
  v7[16] = v23;
  *((void *)v7 + 3) = v78;
  *((void *)v7 + 4) = KeyPath;
  *((void *)v7 + 5) = 1;
  v7[48] = 0;
  sub_1000A1750(v20, v32, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18((uint64_t)v31, &qword_10094DDC0);
  sub_10008DB18(v29, &qword_10094DDC8);
  sub_1000A06C0(v20, v32, v23);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = static ShapeStyle<>.keyTint.getter();
  uint64_t v34 = v82;
  sub_1000AEF2C((uint64_t)v7, v82, &qword_10095FB10);
  *(void *)(v34 + *(int *)(v84 + 44)) = v33;
  sub_10008DB18((uint64_t)v7, &qword_10095FB10);
  sub_1000AEEC8(v34, v92, &qword_10095FB18);
  uint64_t v35 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v35[2] = 20;
  v35[4] = 88;
  v35[5] = 0xE100000000000000;
  v35[6] = 88;
  v35[7] = 0xE100000000000000;
  v35[8] = 88;
  v35[9] = 0xE100000000000000;
  v35[10] = 88;
  v35[11] = 0xE100000000000000;
  v35[12] = 88;
  v35[13] = 0xE100000000000000;
  v35[14] = 88;
  v35[15] = 0xE100000000000000;
  v35[16] = 88;
  v35[17] = 0xE100000000000000;
  v35[18] = 88;
  v35[19] = 0xE100000000000000;
  v35[20] = 88;
  v35[21] = 0xE100000000000000;
  v35[22] = 88;
  v35[23] = 0xE100000000000000;
  v35[24] = 88;
  v35[25] = 0xE100000000000000;
  v35[26] = 88;
  v35[27] = 0xE100000000000000;
  v35[28] = 88;
  v35[29] = 0xE100000000000000;
  v35[30] = 88;
  v35[31] = 0xE100000000000000;
  v35[32] = 88;
  v35[33] = 0xE100000000000000;
  v35[34] = 88;
  v35[35] = 0xE100000000000000;
  v35[36] = 88;
  v35[37] = 0xE100000000000000;
  v35[38] = 88;
  v35[39] = 0xE100000000000000;
  v35[40] = 88;
  v35[41] = 0xE100000000000000;
  v35[42] = 88;
  v35[43] = 0xE100000000000000;
  uint64_t v94 = (uint64_t)v35;
  uint64_t v94 = String.init<A>(_:)();
  uint64_t v95 = v36;
  uint64_t v37 = Text.init<A>(_:)();
  uint64_t v39 = v38;
  uint64_t v84 = v40;
  LOBYTE(v29) = v41 & 1;
  static Font.title3.getter();
  Font.bold()();
  swift_release();
  uint64_t v42 = v85;
  uint64_t v43 = v86;
  uint64_t v44 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, enum case for Font.Leading.tight(_:), v87);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  uint64_t v45 = Text.font(_:)();
  uint64_t v86 = v46;
  uint64_t v87 = v45;
  uint64_t v85 = v47;
  LOBYTE(v43) = v48;
  swift_release();
  LODWORD(v83) = v43 & 1;
  sub_1000A06C0(v37, v39, v29);
  swift_bridgeObjectRelease();
  uint64_t v84 = swift_getKeyPath();
  uint64_t v49 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v49[2] = 20;
  v49[4] = 88;
  v49[5] = 0xE100000000000000;
  v49[6] = 88;
  v49[7] = 0xE100000000000000;
  v49[8] = 88;
  v49[9] = 0xE100000000000000;
  v49[10] = 88;
  v49[11] = 0xE100000000000000;
  v49[12] = 88;
  v49[13] = 0xE100000000000000;
  v49[14] = 88;
  v49[15] = 0xE100000000000000;
  v49[16] = 88;
  v49[17] = 0xE100000000000000;
  v49[18] = 88;
  v49[19] = 0xE100000000000000;
  v49[20] = 88;
  v49[21] = 0xE100000000000000;
  v49[22] = 88;
  v49[23] = 0xE100000000000000;
  v49[24] = 88;
  v49[25] = 0xE100000000000000;
  v49[26] = 88;
  v49[27] = 0xE100000000000000;
  v49[28] = 88;
  v49[29] = 0xE100000000000000;
  v49[30] = 88;
  v49[31] = 0xE100000000000000;
  v49[32] = 88;
  v49[33] = 0xE100000000000000;
  v49[34] = 88;
  v49[35] = 0xE100000000000000;
  v49[36] = 88;
  v49[37] = 0xE100000000000000;
  v49[38] = 88;
  v49[39] = 0xE100000000000000;
  v49[40] = 88;
  v49[41] = 0xE100000000000000;
  v49[42] = 88;
  v49[43] = 0xE100000000000000;
  uint64_t v94 = (uint64_t)v49;
  uint64_t v94 = String.init<A>(_:)();
  uint64_t v95 = v50;
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v53 = v52;
  LOBYTE(v37) = v54 & 1;
  static Font.caption.getter();
  static Font.Weight.regular.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v55 = Text.font(_:)();
  uint64_t v57 = v56;
  LOBYTE(v42) = v58;
  uint64_t v91 = v59;
  swift_release();
  LOBYTE(v43) = v42 & 1;
  sub_1000A06C0(v51, v53, v37);
  swift_bridgeObjectRelease();
  uint64_t v60 = swift_getKeyPath();
  LODWORD(v53) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v62 = v92;
  uint64_t v61 = v93;
  sub_1000AEF2C(v92, v93, &qword_10095FB18);
  char v63 = v83;
  LOBYTE(v94) = v83;
  uint64_t v64 = v61;
  uint64_t v65 = v88;
  sub_1000AEF2C(v64, v88, &qword_10095FB18);
  uint64_t v66 = sub_1000AFA94(&qword_10095FB20);
  uint64_t v67 = v65 + *(int *)(v66 + 48);
  uint64_t v69 = v86;
  uint64_t v68 = v87;
  uint64_t v71 = v84;
  uint64_t v70 = (uint64_t)v85;
  *(void *)uint64_t v67 = v87;
  *(void *)(v67 + 8) = v70;
  *(unsigned char *)(v67 + 16) = v63;
  *(void *)(v67 + 24) = v69;
  *(void *)(v67 + 32) = v71;
  *(void *)(v67 + 40) = 2;
  *(unsigned char *)(v67 + 48) = 0;
  uint64_t v72 = v65 + *(int *)(v66 + 64);
  *(void *)uint64_t v72 = v55;
  *(void *)(v72 + 8) = v57;
  *(unsigned char *)(v72 + 16) = v43;
  *(void *)(v72 + 24) = v91;
  *(void *)(v72 + 32) = v60;
  *(void *)(v72 + 40) = 1;
  *(unsigned char *)(v72 + 48) = 0;
  *(_DWORD *)(v72 + 52) = v53;
  uint64_t v73 = v68;
  uint64_t v74 = v70;
  sub_1000A1750(v68, v70, v63);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v55, v57, v43);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18(v62, &qword_10095FB18);
  sub_1000A06C0(v55, v57, v43);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v73, v74, v94);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10008DB18(v93, &qword_10095FB18);
}

uint64_t sub_1000D3DC8@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  a1(&v14);
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  char v7 = v16;
  char v8 = BYTE1(v16);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v9 = v14;
  char v10 = v15;
  uint64_t v11 = v16;
  char v12 = v17;
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 17) = v8;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v9;
  *(unsigned char *)(a3 + 40) = v10;
  *(void *)(a3 + 48) = v11;
  *(unsigned char *)(a3 + 56) = v12;
  *(_OWORD *)(a3 + 64) = v18;
  swift_retain();
  swift_retain();

  return swift_release();
}

uint64_t sub_1000D3E9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = static Color.clear.getter();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  return result;
}

void *sub_1000D3F84(char a1)
{
  uint64_t v1 = 39;
  uint64_t v3 = &byte_1008B66A8;
  do
  {
    unsigned int v7 = *v3++;
    unsigned int v6 = v7;
    if (v7 - 4 >= 0x22)
    {
      if (v6 >= 4)
      {
        if (a1 != 2) {
          goto LABEL_5;
        }
      }
      else if (a1)
      {
        goto LABEL_5;
      }
    }
    else if (a1 != 1)
    {
      goto LABEL_5;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1000D40A4(0, _swiftEmptyArrayStorage[2] + 1, 1);
    }
    unint64_t v5 = _swiftEmptyArrayStorage[2];
    unint64_t v4 = _swiftEmptyArrayStorage[3];
    if (v5 >= v4 >> 1) {
      sub_1000D40A4(v4 > 1, v5 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v5 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v5) = v6;
LABEL_5:
    --v1;
  }
  while (v1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000D40A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D5460(a1, a2, a3, *v3, &qword_10094E718);
  *uint64_t v3 = (char *)result;
  return result;
}

double sub_1000D40CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  return sub_1000D4114(a1, a2, a3, a4 & 1, a5, a6, a7);
}

double sub_1000D4114@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v64 = a6;
  uint64_t v67 = a5;
  int v68 = a4 & 1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v63 = &v61[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)&v61[-v14];
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  char v19 = &v61[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v17);
  char v22 = &v61[-v21];
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = &v61[-v24];
  __chkstk_darwin(v23);
  uint64_t v27 = &v61[-v26];
  if (a3 == 2)
  {
    int64_t v37 = sub_1000D472C(a1, v68);
    int v39 = v38;
    sub_1000AEF2C(v67, (uint64_t)v69, &qword_10094CEF0);
    uint64_t v40 = v70;
    char v63 = (unsigned char *)v37;
    int v62 = v39;
    if (v70)
    {
      uint64_t v41 = v71;
      sub_10007E4EC(v69, v70);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
      uint64_t v43 = v65;
      uint64_t v42 = v66;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v65 + 56))(v27, 0, 1, v66);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v69);
    }
    else
    {
      sub_10008DB18((uint64_t)v69, &qword_10094CEF0);
      uint64_t v43 = v65;
      uint64_t v42 = v66;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v27, 1, 1, v66);
    }
    char v44 = v64;
    uint64_t v45 = (int *)type metadata accessor for TrendsCard();
    *(void *)(a7 + 24) = v45;
    *(void *)(a7 + 32) = &off_1008D1370;
    uint64_t v46 = sub_1000B1710((uint64_t *)a7);
    sub_1000AEF2C((uint64_t)v27, (uint64_t)v25, (uint64_t *)&unk_1009555F0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v43 + 48))((uint64_t *)v25, 1, v42) == 1)
    {
      UUID.init()();
      sub_10008DB18((uint64_t)v27, (uint64_t *)&unk_1009555F0);
      sub_10008DB18((uint64_t)v25, (uint64_t *)&unk_1009555F0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v43 + 32))(v46, v15, v42);
    }
    else
    {
      sub_10008DB18((uint64_t)v27, (uint64_t *)&unk_1009555F0);
      uint64_t v47 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v43 + 32);
      v47(v15, (uint64_t *)v25, v42);
      v47(v46, v15, v42);
    }
    char v48 = (char *)v46 + v45[5];
    *(void *)char v48 = a1;
    *((void *)v48 + 1) = 0;
    v48[16] = 2;
    *((unsigned char *)v46 + v45[6]) = v68;
    *((unsigned char *)v46 + v45[7]) = v44 & 1;
    *((unsigned char *)v46 + v45[8]) = 1;
    uint64_t v49 = (char *)v46 + v45[9];
    *(void *)uint64_t v49 = v63;
    v49[8] = v62;
  }
  else if (a3 == 3 && a1 == 7 && !a2)
  {
    int64_t v28 = sub_1000D472C(9, v68);
    uint64_t v30 = v29;
    LODWORD(v31) = (7u >> (v29 & 0xF)) & 1;
    sub_1000AEF2C(v67, (uint64_t)v69, &qword_10094CEF0);
    uint64_t v32 = v70;
    if (v70)
    {
      uint64_t v33 = v71;
      sub_10007E4EC(v69, v70);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
      uint64_t v34 = v65;
      uint64_t v35 = v66;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v65 + 56))(v22, 0, 1, v66);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v69);
    }
    else
    {
      sub_10008DB18((uint64_t)v69, &qword_10094CEF0);
      uint64_t v34 = v65;
      uint64_t v35 = v66;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v22, 1, 1, v66);
    }
    uint64_t v50 = (int *)type metadata accessor for TrendsCard();
    *(void *)(a7 + 24) = v50;
    *(void *)(a7 + 32) = &off_1008D1370;
    uint64_t v51 = sub_1000B1710((uint64_t *)a7);
    sub_1000AEF2C((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1009555F0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v19, 1, v35) == 1)
    {
      uint64_t v67 = v30;
      char v52 = v31;
      int64_t v31 = v28;
      uint64_t v53 = v63;
      UUID.init()();
      uint64_t v54 = (uint64_t)v22;
      uint64_t v55 = v53;
      int64_t v28 = v31;
      LOBYTE(v31) = v52;
      LOBYTE(v30) = v67;
      sub_10008DB18(v54, (uint64_t *)&unk_1009555F0);
      sub_10008DB18((uint64_t)v19, (uint64_t *)&unk_1009555F0);
      uint64_t v56 = *(void (**)(uint64_t *, unsigned char *, uint64_t))(v34 + 32);
    }
    else
    {
      sub_10008DB18((uint64_t)v22, (uint64_t *)&unk_1009555F0);
      uint64_t v56 = *(void (**)(uint64_t *, unsigned char *, uint64_t))(v34 + 32);
      uint64_t v55 = v63;
      v56((uint64_t *)v63, v19, v35);
    }
    uint64_t v57 = v35;
    char v58 = v64;
    v56(v51, v55, v57);
    uint64_t v59 = (char *)v51 + v50[5];
    *(void *)&double result = 7;
    *(_OWORD *)uint64_t v59 = xmmword_100750D00;
    v59[16] = 3;
    *((unsigned char *)v51 + v50[6]) = v68;
    *((unsigned char *)v51 + v50[7]) = v58 & 1;
    *((unsigned char *)v51 + v50[8]) = v31;
    uint64_t v60 = (char *)v51 + v50[9];
    *(void *)uint64_t v60 = v28;
    v60[8] = v30;
  }
  else
  {
    *(void *)(a7 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
  }
  return result;
}

int64_t sub_1000D472C(BOOL a1, char a2)
{
  char v4 = a2 & 1;
  id v5 = [self standardUserDefaults];
  unsigned __int8 v6 = [v5 BOOLForKey:@"ActivityDidDisplayTrendsOnboarding"];

  if (v6)
  {
    char v7 = 1;
  }
  else
  {
    if (qword_10094B130 != -1) {
      swift_once();
    }
    char v7 = byte_10096A4E0;
  }
  char v8 = [*(id *)(v2 + 64) isWheelchairUser];
  uint64_t v9 = *(void *)(*(void *)(v2 + 8) + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability);
  if (a1 == 9) {
    int64_t result = sub_1000D4A98(v8, v4);
  }
  else {
    int64_t result = sub_1003B1114(a1, v8, v4);
  }
  if ((v7 & 1) != 0 && v9 != 3 && v9 != 2)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    uint64_t v12 = (void *)HKLogActivity;
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      uint64_t v14 = v12;
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 8) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v13, "TrendsCardFactory failed to generate trends type with state %{BOOL}d, %ld", (uint8_t *)v15, 0x12u);
      swift_slowDealloc();
    }
    return 0;
  }
  return result;
}

int64_t sub_1000D4A98(char a1, char a2)
{
  uint64_t v4 = v2;
  char v6 = a2 & 1;
  swift_beginAccess();
  sub_1000D4E38(v2);
  uint64_t v7 = swift_bridgeObjectRetain();
  char v8 = sub_1000D4E90(v7, v2, a1, v6);
  if (v3)
  {
    sub_1000D4DE0(v2);
    swift_bridgeObjectRelease();
    id v11 = sub_1000D5A7C();
    Swift::Int v12 = sub_1000D5290((Swift::Int)&off_1008AF420, (uint64_t)v11);
    swift_bridgeObjectRelease();
    sub_1000D4E38(v4);
    int64_t v13 = sub_1000A9768(v12, v4, a1 & 1, v6);
    sub_1000D4DE0(v4);
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v8;
    sub_1000D4DE0(v2);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1000D4E38(v2);
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000D4E90(v10, v2, a1 & 1, v6);
    sub_1000D4DE0(v2);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1000D4E38(v2);
    uint64_t v16 = swift_bridgeObjectRetain();
    int64_t v17 = sub_1000A9768(v16, v2, a1 & 1, v6);
    sub_1000D4DE0(v2);
    swift_bridgeObjectRelease();
    sub_1000D5248((uint64_t)v15);
    sub_1000D5248(v17);
    int64_t v13 = (int64_t)v9;
    if (!v9[2])
    {
      id v18 = sub_1000D5A7C();
      Swift::Int v19 = sub_1000D5290((Swift::Int)&off_1008AF420, (uint64_t)v18);
      swift_bridgeObjectRelease();
      sub_1000D4E38(v4);
      int64_t v13 = sub_1000A9768(v19, v4, a1 & 1, v6);
      sub_1000D4DE0(v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v13;
}

uint64_t sub_1000D4DE0(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D4E38(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a1 + 64);
  swift_bridgeObjectRetain();
  id v6 = v5;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  return a1;
}

void *sub_1000D4E90(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v9 = type metadata accessor for TrendListMetric();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  Swift::Int v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    int v31 = a4 & 1;
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_1000B1C64(0, v13, 0);
    uint64_t v14 = v32;
    uint64_t v15 = (unsigned __int8 *)(a1 + 32);
    uint64_t v16 = *(void *)a2;
    uint64_t v29 = *(void *)(a2 + 48);
    uint64_t v30 = v16;
    uint64_t v17 = *(void *)(a2 + 56);
    uint64_t v27 = *(void *)(a2 + 16);
    uint64_t v28 = v17;
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v25 = *(void *)(a2 + 32);
    uint64_t v26 = v18;
    HIDWORD(v24) = a3 & 1;
    int v19 = *(unsigned __int8 *)(a2 + 40);
    while (1)
    {
      unsigned int v20 = *v15++;
      sub_1003A70B4(v20, v30, v27, v29, v28, v26, v25, v19, v12, BYTE4(v24), v31);
      if (v4) {
        break;
      }
      uint64_t v32 = v14;
      unint64_t v22 = v14[2];
      unint64_t v21 = v14[3];
      if (v22 >= v21 >> 1)
      {
        sub_1000B1C64(v21 > 1, v22 + 1, 1);
        uint64_t v14 = v32;
      }
      v14[2] = v22 + 1;
      sub_1000AB590((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22);
      if (!--v13) {
        return v14;
      }
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_1000D5074(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_1000ACBAC(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *id v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D5248(uint64_t a1)
{
  return sub_1000D5074(a1, &qword_10094E708, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
}

Swift::Int sub_1000D5290(Swift::Int result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    Swift::Int v5 = result + 32;
    uint64_t v6 = a2 + 56;
    Swift::Int v15 = result + 32;
    do
    {
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      while (1)
      {
        if (v4 == v7)
        {
          __break(1u);
          return result;
        }
        Swift::UInt v8 = *(unsigned __int8 *)(v5 + v4++);
        if (!*(void *)(a2 + 16)) {
          break;
        }
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v8);
        uint64_t result = Hasher._finalize()();
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v10 = result & ~v9;
        if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          break;
        }
        uint64_t v11 = *(void *)(a2 + 48);
        if (*(unsigned __int8 *)(v11 + v10) != v8)
        {
          uint64_t v12 = ~v9;
          do
          {
            unint64_t v10 = (v10 + 1) & v12;
            if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
              goto LABEL_15;
            }
          }
          while (*(unsigned __int8 *)(v11 + v10) != v8);
        }
        if (v4 == v2) {
          return (Swift::Int)_swiftEmptyArrayStorage;
        }
      }
LABEL_15:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1000D5438(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        uint64_t result = sub_1000D5438(v13 > 1, v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v14) = v8;
      Swift::Int v5 = v15;
    }
    while (v4 != v2);
  }
  return (Swift::Int)_swiftEmptyArrayStorage;
}

uint64_t sub_1000D5438(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D5460(a1, a2, a3, *v3, &qword_10094E710);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000D5460(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000AFA94(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D55AC()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends);
  swift_beginAccess();
  *uint64_t v1 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  unint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
  swift_beginAccess();
  *unint64_t v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends);
  swift_beginAccess();
  *uint64_t v3 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v4 = 9;
  Swift::Int v5 = &byte_1008AF440;
  do
  {
    unsigned int v6 = *v5++;
    uint64_t result = sub_1000D568C(v6, v0);
    --v4;
  }
  while (v4);
  return result;
}

uint64_t sub_1000D568C(uint64_t a1, uint64_t a2)
{
  id v4 = sub_1000D5A7C();
  BOOL v5 = sub_1000D5B24(a1, (uint64_t)v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365);
    if (*(void *)(v7 + 16))
    {
      uint64_t result = sub_1000D5C14(a1);
      if (v8)
      {
        uint64_t v9 = *(void *)(v7 + 56) + 200 * result;
        long long v10 = *(_OWORD *)(v9 + 48);
        long long v11 = *(_OWORD *)(v9 + 64);
        long long v12 = *(_OWORD *)(v9 + 32);
        v47[1] = *(_OWORD *)(v9 + 16);
        v47[2] = v12;
        v47[0] = *(_OWORD *)v9;
        v47[3] = v10;
        v47[4] = v11;
        long long v13 = *(_OWORD *)(v9 + 80);
        long long v14 = *(_OWORD *)(v9 + 96);
        long long v15 = *(_OWORD *)(v9 + 128);
        v47[7] = *(_OWORD *)(v9 + 112);
        v47[8] = v15;
        v47[5] = v13;
        v47[6] = v14;
        long long v16 = *(_OWORD *)(v9 + 144);
        long long v17 = *(_OWORD *)(v9 + 160);
        long long v18 = *(_OWORD *)(v9 + 176);
        char v48 = *(unsigned char *)(v9 + 192);
        v47[10] = v17;
        v47[11] = v18;
        v47[9] = v16;
        uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90);
        if (*(void *)(v19 + 16))
        {
          uint64_t result = sub_1000D5C14(a1);
          if (v20)
          {
            uint64_t v21 = *(void *)(v19 + 56) + 200 * result;
            long long v22 = *(_OWORD *)(v21 + 48);
            long long v23 = *(_OWORD *)(v21 + 64);
            long long v24 = *(_OWORD *)(v21 + 32);
            v45[1] = *(_OWORD *)(v21 + 16);
            long long v45[2] = v24;
            long long v25 = *(_OWORD *)v21;
            v45[3] = v22;
            v45[4] = v23;
            v45[0] = v25;
            long long v26 = *(_OWORD *)(v21 + 80);
            long long v27 = *(_OWORD *)(v21 + 96);
            long long v28 = *(_OWORD *)(v21 + 128);
            v45[7] = *(_OWORD *)(v21 + 112);
            v45[8] = v28;
            v45[5] = v26;
            v45[6] = v27;
            long long v29 = *(_OWORD *)(v21 + 144);
            long long v30 = *(_OWORD *)(v21 + 160);
            long long v31 = *(_OWORD *)(v21 + 176);
            char v46 = *(unsigned char *)(v21 + 192);
            v45[10] = v30;
            v45[11] = v31;
            v45[9] = v29;
            uint64_t v32 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pairedWatchManager);
            char v33 = *(unsigned char *)(v32 + 24);
            sub_1000B7C20((uint64_t)v47);
            sub_1000B7C20((uint64_t)v45);
            if (sub_1000D5C18(a1, v33) && sub_1000D5C18(a1, *(unsigned char *)(v32 + 24)))
            {
              uint64_t v34 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_unitManager);
              double v35 = sub_1005F2D50(v34, a1, *(double *)v45);
              double v36 = sub_1005F2D50(v34, a1, *(double *)v47);
              sub_1000D7E40((uint64_t)v47);
              sub_1000D7E40((uint64_t)v45);
              if (v36 <= v35) {
                uint64_t v37 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends;
              }
              else {
                uint64_t v37 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends;
              }
            }
            else
            {
              sub_1000D7E40((uint64_t)v47);
              sub_1000D7E40((uint64_t)v45);
              uint64_t v37 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends;
            }
            int v38 = (void **)(a2 + v37);
            swift_beginAccess();
            int v39 = *v38;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *int v38 = v39;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              int v39 = sub_1000D6AE4(0, v39[2] + 1, 1, v39);
              *int v38 = v39;
            }
            unint64_t v42 = v39[2];
            unint64_t v41 = v39[3];
            unint64_t v43 = v42 + 1;
            if (v42 >= v41 >> 1)
            {
              char v44 = sub_1000D6AE4((void *)(v41 > 1), v42 + 1, 1, v39);
              unint64_t v43 = v42 + 1;
              int v39 = v44;
              *int v38 = v44;
            }
            v39[2] = v43;
            *((unsigned char *)v39 + v42 + 32) = a1;
            return swift_endAccess();
          }
        }
      }
    }
  }
  return result;
}

Swift::Int sub_1000D5938(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_100956420);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v7);
      Swift::Int result = Hasher._finalize()();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

id sub_1000D5A7C()
{
  id result = [self sharedBehavior];
  if (result)
  {
    unint64_t v2 = result;
    unsigned int v3 = [result isStandalonePhoneFitnessMode];

    if (v3)
    {
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue)) {
        uint64_t v4 = &off_1008AF3A8;
      }
      else {
        uint64_t v4 = &off_1008AF3D0;
      }
    }
    else
    {
      uint64_t v4 = &off_1008AF3F8;
    }
    return (id)sub_1000D5938((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1000D5B24(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v3);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1000D5C18(uint64_t a1, char a2)
{
  char v3 = a1;
  if (a1 == 8 && (!a2 || a2 == 3 || *(double *)v2 <= 2.22044605e-16))
  {
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    uint64_t v7 = (void *)HKLogActivity;
    os_log_type_t v8 = v6;
    BOOL result = os_log_type_enabled(HKLogActivity, v6);
    if (!result) {
      return result;
    }
    uint64_t v10 = v7;
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(void *)&v57[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    *(void *)&long long v53 = sub_10008F1F4(0xD000000000000024, 0x80000001007D2F60, (uint64_t *)v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v8, "%s found unexpected flight type; re-enable TrendsPairedWatchManager.populate()",
      v11,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return 0;
  }
  if (qword_10094B138 != -1) {
    a1 = swift_once();
  }
  if (byte_10096A4E1)
  {
    unint64_t v4 = 1;
    unint64_t v5 = 1;
  }
  else
  {
    uint64_t v12 = 8 * v3;
    unint64_t v4 = *(void *)((char *)&unk_100771CC0 + v12);
    unint64_t v5 = *(void *)((char *)&unk_100771D08 + v12);
  }
  long long v13 = *(_OWORD *)(v2 + 32);
  long long v53 = *(_OWORD *)(v2 + 16);
  long long v54 = v13;
  long long v55 = *(_OWORD *)(v2 + 48);
  uint64_t v56 = *(void *)(v2 + 64);
  uint64_t v58 = v56;
  v57[1] = v13;
  v57[2] = v55;
  v57[0] = v53;
  unint64_t v14 = *(void *)(v53 + 16);
  if (v14 < 0xB6)
  {
    __chkstk_darwin(a1);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000D80D0(v15, (uint64_t (*)(void, double))sub_1000D8244);
    swift_bridgeObjectRelease();
    unint64_t v17 = v16[2];
    swift_bridgeObjectRelease();
    return v17 >= v5;
  }
  sub_1000D61C8(v14 - 183, v14 - 1, (double *)v43);
  sub_1000D6160((uint64_t)v43, (uint64_t)v49);
  uint64_t v19 = v49[0];
  if (!v49[0]) {
    return 0;
  }
  uint64_t v20 = v49[1];
  uint64_t v21 = v49[2];
  uint64_t v22 = v49[3];
  uint64_t v23 = v49[4];
  uint64_t v24 = v49[5];
  uint64_t v25 = v49[6];
  sub_1000D61C8(v14 - 91, v14 - 1, (double *)v44);
  uint64_t v26 = sub_1000D6160((uint64_t)v44, (uint64_t)v45);
  uint64_t v27 = v45[0];
  if (!v45[0]) {
    goto LABEL_20;
  }
  uint64_t v28 = v45[1];
  long long v41 = v47;
  long long v42 = v46;
  uint64_t v29 = v48;
  v49[7] = v19;
  v49[8] = v20;
  v49[9] = v21;
  v49[10] = v22;
  v49[11] = v23;
  v49[12] = v24;
  v49[13] = v25;
  __chkstk_darwin(v26);
  uint64_t v30 = swift_bridgeObjectRetain();
  long long v31 = sub_1000D80D0(v30, (uint64_t (*)(void, double))sub_1000D81F8);
  swift_bridgeObjectRelease();
  uint64_t v32 = v31[2];
  uint64_t v33 = swift_bridgeObjectRelease();
  v49[14] = v27;
  v49[15] = v28;
  long long v50 = v42;
  long long v51 = v41;
  uint64_t v52 = v29;
  __chkstk_darwin(v33);
  uint64_t v34 = swift_bridgeObjectRetain();
  double v35 = sub_1000D80D0(v34, (uint64_t (*)(void, double))sub_1000D8244);
  swift_bridgeObjectRelease();
  sub_1000D60E8(v44);
  uint64_t v36 = v35[2];
  uint64_t v37 = swift_bridgeObjectRelease();
  if (v32 == v36)
  {
LABEL_20:
    sub_1000D60E8(v43);
    return 0;
  }
  __chkstk_darwin(v37);
  uint64_t v38 = swift_bridgeObjectRetain();
  int v39 = sub_1000D80D0(v38, (uint64_t (*)(void, double))sub_1000D8244);
  swift_bridgeObjectRelease();
  sub_1000D60E8(v43);
  unint64_t v40 = v39[2];
  swift_bridgeObjectRelease();
  return v40 >= v4;
}

uint64_t *sub_1000D60E8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1000D6120(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000D6160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100966A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D61C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v13 = type metadata accessor for Date();
  __chkstk_darwin(v13);
  uint64_t v15 = __chkstk_darwin((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  double v26 = 0.0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = a1 & ~(a1 >> 63);
  uint64_t v31 = *v3;
  uint64_t v32 = *(void *)(*v3 + 16);
  if (v32 <= a2) {
    a2 = v32 - 1;
  }
  if (a2 < v30) {
    goto LABEL_33;
  }
  if (!__OFSUB__(a2 + 1, v30))
  {
    uint64_t v33 = v3[1];
    unint64_t v34 = *(void *)(v33 + 16);
    if (v30 >= v34)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v12, 1, 1, v13);
    }
    else
    {
      uint64_t v71 = a2 + 1 - v30;
      uint64_t v72 = v31;
      unint64_t v80 = v32;
      uint64_t v81 = v22;
      uint64_t v74 = v18;
      uint64_t v75 = (void (*)(void))result;
      uint64_t v73 = v20;
      uint64_t v77 = v33 + 32;
      double v35 = (double *)v19;
      Date.init(timeIntervalSinceReferenceDate:)();
      double v78 = v35[7];
      (*(void (**)(char *, void, uint64_t, uint64_t))&v78)(v12, 0, 1, v13);
      uint64_t v36 = (char *)*((void *)v35 + 6);
      uint64_t v82 = v13;
      uint64_t v76 = v36;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v36)(v12, 1, v13) != 1)
      {
        uint64_t v79 = v35;
        uint64_t v37 = (void (*)(uint64_t, char *, uint64_t))*((void *)v35 + 4);
        uint64_t v38 = v82;
        uint64_t v70 = v37;
        v37((uint64_t)v81, v12, v82);
        unint64_t v39 = v80;
        if (a2 >= v34)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v78)(v10, 1, 1, v38);
        }
        else
        {
          Date.init(timeIntervalSinceReferenceDate:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))&v78)(v10, 0, 1, v38);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v76)(v10, 1, v38) != 1)
          {
            unint64_t v40 = v73;
            v70((uint64_t)v73, v10, v38);
            long long v41 = v79;
            long long v42 = (void (*)(uint64_t, char *, uint64_t))*((void *)v79 + 2);
            v42(v74, v81, v38);
            v42((uint64_t)v75, v40, v38);
            Date.timeIntervalSinceReferenceDate.getter();
            double v44 = v43;
            uint64_t v45 = v75;
            Date.timeIntervalSinceReferenceDate.getter();
            sub_100087AC8(v71, (uint64_t)v83, v44, v46);
            uint64_t v23 = (void *)v83[0];
            uint64_t v70 = (void (*)(uint64_t, char *, uint64_t))v83[1];
            uint64_t v69 = v83[2];
            uint64_t v27 = v85;
            double v78 = *(double *)&v84;
            uint64_t v29 = v87;
            uint64_t v71 = v86;
            long long v47 = (void (*)(void))*((void *)v41 + 1);
            uint64_t v48 = v45;
            uint64_t v49 = v82;
            ((void (*)(void (*)(void), uint64_t))v47)(v48, v82);
            uint64_t v75 = v47;
            uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v47)(v74, v49);
            long long v50 = v41 + 1;
            unint64_t v51 = 0;
            double v52 = *(double *)&v86;
            double v53 = *(double *)&v84;
            uint64_t v54 = v82;
            long long v55 = (void *)v83[0];
            uint64_t v56 = v72 + 24 * v30;
            uint64_t v57 = (char *)(v30 - a2);
            uint64_t v58 = 4;
            uint64_t v79 = v50;
            uint64_t v76 = (char *)(v30 - a2);
            uint64_t v77 = v56;
            while (1)
            {
              unint64_t v59 = v30 + v51;
              if (v30 + v51 < v39)
              {
                uint64_t v60 = v56 + v58 * 8;
                if ((*(unsigned char *)(v56 + v58 * 8 + 16) & 1) == 0 && v51 < v55[2])
                {
                  double v62 = *(double *)v60;
                  uint64_t v61 = *(void *)(v60 + 8);
                  uint64_t v23 = v55;
                  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    uint64_t result = (uint64_t)sub_1005EC1D4(v23);
                    uint64_t v23 = (void *)result;
                  }
                  uint64_t v54 = v82;
                  uint64_t v56 = v77;
                  if (v51 >= v23[2]) {
                    goto LABEL_38;
                  }
                  uint64_t v63 = v61;
                  int v64 = &v23[v58];
                  *(double *)int v64 = v62;
                  v64[1] = v61;
                  *((unsigned char *)v64 + 16) = 0;
                  if (v53 < v62) {
                    uint64_t v27 = v61;
                  }
                  double v65 = v78;
                  if (v53 < v62) {
                    double v65 = v62;
                  }
                  double v78 = v65;
                  if (v53 < v62) {
                    double v53 = v62;
                  }
                  unint64_t v39 = v80;
                  if (v52 < 0.0 || v52 > v62)
                  {
                    uint64_t v71 = *(void *)&v62;
                    uint64_t v29 = v63;
                    double v52 = v62;
                  }
                  long long v55 = v23;
                  uint64_t v57 = v76;
                }
              }
              if (!&v57[v51]) {
                break;
              }
              ++v51;
              v58 += 3;
              if (__OFADD__(v59, 1))
              {
                __break(1u);
                goto LABEL_37;
              }
            }
            uint64_t v67 = v54;
            int v68 = (uint64_t (*)(char *, uint64_t))v75;
            v75(v73);
            uint64_t result = v68(v81, v67);
            uint64_t v24 = v70;
            uint64_t v25 = v69;
            double v26 = v78;
            uint64_t v28 = v71;
            goto LABEL_33;
          }
        }
        (*((void (**)(char *, uint64_t))v79 + 1))(v81, v38);
        uint64_t v66 = (uint64_t)v10;
        goto LABEL_32;
      }
    }
    uint64_t v66 = (uint64_t)v12;
LABEL_32:
    uint64_t result = sub_10008DB18(v66, (uint64_t *)&unk_10095B890);
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    double v26 = 0.0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
LABEL_33:
    *(void *)a3 = v23;
    *((void *)a3 + 1) = v24;
    *((void *)a3 + 2) = v25;
    a3[3] = v26;
    *((void *)a3 + 4) = v27;
    *((void *)a3 + 5) = v28;
    *((void *)a3 + 6) = v29;
    return result;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1000D67B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1000AFA94(&qword_100960A58);
  char v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  long long v4 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)&v34[160] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)&v34[176] = v4;
  *(_OWORD *)&v34[185] = *(_OWORD *)(a1 + 217);
  long long v5 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)&v34[96] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)&v34[112] = v5;
  long long v6 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)&v34[128] = *(_OWORD *)(a1 + 160);
  *(_OWORD *)&v34[144] = v6;
  long long v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v34[32] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v34[48] = v7;
  long long v8 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v34[64] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)&v34[80] = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)unint64_t v34 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v34[16] = v9;
  char v10 = v34[0];
  unint64_t result = sub_1000D696C(v34[0]);
  if (v12)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = (_OWORD *)(a1 + 240);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v10;
    uint64_t v14 = v3[7] + 200 * result;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)&v34[8];
    long long v15 = *(_OWORD *)&v34[24];
    long long v16 = *(_OWORD *)&v34[40];
    long long v17 = *(_OWORD *)&v34[72];
    *(_OWORD *)(v14 + 48) = *(_OWORD *)&v34[56];
    *(_OWORD *)(v14 + 64) = v17;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v16;
    long long v18 = *(_OWORD *)&v34[88];
    long long v19 = *(_OWORD *)&v34[104];
    long long v20 = *(_OWORD *)&v34[136];
    *(_OWORD *)(v14 + 112) = *(_OWORD *)&v34[120];
    *(_OWORD *)(v14 + 128) = v20;
    *(_OWORD *)(v14 + 80) = v18;
    *(_OWORD *)(v14 + 96) = v19;
    long long v21 = *(_OWORD *)&v34[152];
    long long v22 = *(_OWORD *)&v34[168];
    long long v23 = *(_OWORD *)&v34[184];
    *(unsigned char *)(v14 + 192) = v34[200];
    *(_OWORD *)(v14 + 160) = v22;
    *(_OWORD *)(v14 + 176) = v23;
    *(_OWORD *)(v14 + 144) = v21;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      break;
    }
    v3[2] = v26;
    sub_1000D6A74((uint64_t)v34);
    if (!--v1) {
      return (unint64_t)v3;
    }
    long long v27 = v13[11];
    *(_OWORD *)&v34[160] = v13[10];
    *(_OWORD *)&v34[176] = v27;
    *(_OWORD *)&v34[185] = *(_OWORD *)((char *)v13 + 185);
    long long v28 = v13[7];
    *(_OWORD *)&v34[96] = v13[6];
    *(_OWORD *)&v34[112] = v28;
    long long v29 = v13[9];
    *(_OWORD *)&v34[128] = v13[8];
    *(_OWORD *)&v34[144] = v29;
    long long v30 = v13[3];
    *(_OWORD *)&v34[32] = v13[2];
    *(_OWORD *)&v34[48] = v30;
    long long v31 = v13[5];
    *(_OWORD *)&v34[64] = v13[4];
    *(_OWORD *)&v34[80] = v31;
    long long v32 = v13[1];
    *(_OWORD *)unint64_t v34 = *v13;
    *(_OWORD *)&v34[16] = v32;
    char v10 = v34[0];
    unint64_t result = sub_1000D696C(v34[0]);
    v13 += 13;
    if (v33) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D696C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_1000D69D4(a1, v2);
}

unint64_t sub_1000D69D4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000D6A74(uint64_t a1)
{
  return a1;
}

void *sub_1000D6AE4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10005B1C4(a1, a2, a3, a4, &qword_10094E710);
}

void sub_1000D6AF0(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v112 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = v1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  int64_t v110 = *(void *)(v6 - 8);
  unint64_t v111 = v6;
  __chkstk_darwin(v6);
  *(void *)&long long v108 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for DispatchQoS();
  uint64_t v107 = *(char **)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v106 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for DispatchTime();
  uint64_t v105 = *(char **)(v113 - 8);
  uint64_t v9 = __chkstk_darwin(v113);
  uint64_t v103 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v100 - v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  sub_10008841C(365);
  unint64_t v116 = (char *)v5;
  BOOL v114 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = v14;
  uint64_t v101 = v12;
  uint64_t v102 = v13;
  sub_1000D8EAC((uint64_t)v131, (uint64_t)v137);
  if (sub_100088F34((uint64_t)v137) == 1) {
    return;
  }
  memcpy(v138, v137, sizeof(v138));
  sub_10008841C(90);
  sub_1000D8EAC((uint64_t)v132, (uint64_t)v135);
  if (sub_100088F34((uint64_t)v135) == 1)
  {
    sub_1000D829C(v131);
    return;
  }
  uint64_t v104 = v4;
  memcpy(v136, v135, sizeof(v136));
  sub_1000D8BC0((uint64_t)v138);
  sub_1000D829C(v132);
  sub_1000D829C(v131);
  *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_retryCount) = 0;
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v109 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v107 = (char *)(v5 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType90);
  uint64_t v106 = (char *)(v5 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType90);
  int64_t v110 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v113 = v15;
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  *(void *)&long long v21 = 136315650;
  long long v108 = v21;
  uint64_t v105 = (char *)&type metadata for Any + 8;
  long long v22 = v114;
  while (1)
  {
    uint64_t v23 = v115;
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      uint64_t v25 = (v19 - 1) & v19;
      unint64_t v26 = v24 | (v20 << 6);
      goto LABEL_20;
    }
    BOOL v27 = __OFADD__(v20++, 1);
    if (v27)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v20 >= v110)
    {
      uint64_t v56 = v116;
      uint64_t v57 = v104;
      uint64_t v58 = v101;
      uint64_t v29 = v102;
LABEL_28:
      swift_release();
      if ((v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_calculatesLongTermFits] & 1) == 0)
      {
LABEL_52:
        id v95 = [self mainQueue];
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v22, v57, v58);
        unint64_t v96 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        uint64_t v97 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v97 + v96, v22, v58);
        *(void *)(v97 + ((v23 + v96 + 7) & 0xFFFFFFFFFFFFFFF8)) = v56;
        *(void *)&long long v120 = sub_100070500;
        *((void *)&v120 + 1) = v97;
        *(void *)&long long v118 = _NSConcreteStackBlock;
        *((void *)&v118 + 1) = 1107296256;
        *(void *)&long long v119 = sub_100070394;
        *((void *)&v119 + 1) = &unk_1008C06A0;
        BOOL v98 = _Block_copy(&v118);
        uint64_t v99 = v56;
        swift_release();
        [v95 addOperationWithBlock:v98];
        _Block_release(v98);

        return;
      }
      uint64_t v59 = *(void *)&v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365];
      uint64_t v60 = *(void *)(v59 + 64);
      uint64_t v109 = v59 + 64;
      uint64_t v61 = 1 << *(unsigned char *)(v59 + 32);
      uint64_t v62 = -1;
      if (v61 < 64) {
        uint64_t v62 = ~(-1 << v61);
      }
      unint64_t v63 = v62 & v60;
      uint64_t v107 = &v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType365];
      uint64_t v106 = &v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType365];
      int64_t v110 = (unint64_t)(v61 + 63) >> 6;
      uint64_t v113 = v59;
      swift_bridgeObjectRetain();
      int64_t v64 = 0;
      uint64_t v105 = (char *)&type metadata for Any + 8;
      if (!v63) {
        goto LABEL_33;
      }
LABEL_32:
      unint64_t v65 = __clz(__rbit64(v63));
      uint64_t v66 = (v63 - 1) & v63;
      for (unint64_t i = v65 | (v64 << 6); ; unint64_t i = __clz(__rbit64(v68)) + (v64 << 6))
      {
        unsigned __int8 v70 = *(unsigned char *)(*(void *)(v113 + 48) + i);
        uint64_t v71 = *(void *)(v113 + 56) + 200 * i;
        long long v118 = *(_OWORD *)v71;
        long long v72 = *(_OWORD *)(v71 + 64);
        long long v74 = *(_OWORD *)(v71 + 16);
        long long v73 = *(_OWORD *)(v71 + 32);
        long long v121 = *(_OWORD *)(v71 + 48);
        long long v122 = v72;
        long long v119 = v74;
        long long v120 = v73;
        long long v75 = *(_OWORD *)(v71 + 128);
        long long v77 = *(_OWORD *)(v71 + 80);
        long long v76 = *(_OWORD *)(v71 + 96);
        long long v125 = *(_OWORD *)(v71 + 112);
        long long v126 = v75;
        long long v123 = v77;
        long long v124 = v76;
        long long v79 = *(_OWORD *)(v71 + 160);
        long long v78 = *(_OWORD *)(v71 + 176);
        long long v80 = *(_OWORD *)(v71 + 144);
        char v130 = *(unsigned char *)(v71 + 192);
        long long v128 = v79;
        long long v129 = v78;
        long long v127 = v80;
        uint64_t v81 = *((void *)&v119 + 1);
        v141[0] = v119;
        v141[1] = v120;
        v141[2] = v121;
        uint64_t v142 = v122;
        sub_1000B7C20((uint64_t)&v118);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000D7EAC((uint64_t)v134);
        unint64_t v111 = v66;
        swift_bridgeObjectRelease();
        uint64_t v82 = swift_bridgeObjectRelease();
        __chkstk_darwin(v82);
        *(&v100 - 2) = (uint64_t)v141;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v83 = sub_1000D80D0(v81, (uint64_t (*)(void, double))sub_1000D8244);
        swift_bridgeObjectRelease();
        uint64_t v84 = v83[2];
        if (!v84) {
          break;
        }
        uint64_t v85 = 2 * v84 - 1;
        swift_bridgeObjectRetain();
        unint64_t v86 = v85;
        long long v22 = v114;
        uint64_t v87 = sub_1002E11A8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v83, (uint64_t)(v83 + 4), 0, v86, (uint64_t)v83);
        swift_bridgeObjectRelease();
        sub_100589218(v87);
        double v89 = v88;
        uint64_t v23 = v115;
        swift_bridgeObjectRelease();
        double v90 = sub_100589864((uint64_t)v83, v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000D7E40((uint64_t)&v118);
        uint64_t v91 = v107;
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v117 = *(void *)v91;
        *(void *)uint64_t v91 = 0x8000000000000000;
        sub_1004F03F0((uint64_t)v134, v70, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v91 = v117;
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v93 = v106;
        swift_beginAccess();
        char v94 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v117 = *(void *)v93;
        *(void *)uint64_t v93 = 0x8000000000000000;
        sub_1004F02BC(v70, v94, v89, v90);
        *(void *)uint64_t v93 = v117;
        swift_bridgeObjectRelease();
        swift_endAccess();
        unint64_t v63 = v111;
        if (v111) {
          goto LABEL_32;
        }
LABEL_33:
        BOOL v27 = __OFADD__(v64++, 1);
        if (v27) {
          goto LABEL_55;
        }
        uint64_t v29 = v102;
        if (v64 >= v110)
        {
LABEL_51:
          swift_release();
          uint64_t v56 = v116;
          uint64_t v57 = v104;
          uint64_t v58 = v101;
          goto LABEL_52;
        }
        unint64_t v68 = *(void *)(v109 + 8 * v64);
        if (!v68)
        {
          int64_t v69 = v64 + 1;
          if (v64 + 1 >= v110) {
            goto LABEL_51;
          }
          unint64_t v68 = *(void *)(v109 + 8 * v69);
          if (!v68)
          {
            int64_t v69 = v64 + 2;
            if (v64 + 2 >= v110) {
              goto LABEL_51;
            }
            unint64_t v68 = *(void *)(v109 + 8 * v69);
            if (!v68)
            {
              int64_t v69 = v64 + 3;
              if (v64 + 3 >= v110) {
                goto LABEL_51;
              }
              unint64_t v68 = *(void *)(v109 + 8 * v69);
              if (!v68)
              {
                while (1)
                {
                  int64_t v64 = v69 + 1;
                  if (__OFADD__(v69, 1)) {
                    goto LABEL_58;
                  }
                  if (v64 >= v110) {
                    goto LABEL_51;
                  }
                  unint64_t v68 = *(void *)(v109 + 8 * v64);
                  ++v69;
                  if (v68) {
                    goto LABEL_43;
                  }
                }
              }
            }
          }
          int64_t v64 = v69;
        }
LABEL_43:
        uint64_t v66 = (v68 - 1) & v68;
      }
      goto LABEL_56;
    }
    unint64_t v28 = *(void *)(v109 + 8 * v20);
    uint64_t v29 = v102;
    if (!v28) {
      break;
    }
LABEL_19:
    uint64_t v25 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_20:
    unsigned __int8 v31 = *(unsigned char *)(*(void *)(v113 + 48) + v26);
    uint64_t v32 = *(void *)(v113 + 56) + 200 * v26;
    long long v118 = *(_OWORD *)v32;
    long long v33 = *(_OWORD *)(v32 + 64);
    long long v35 = *(_OWORD *)(v32 + 16);
    long long v34 = *(_OWORD *)(v32 + 32);
    long long v121 = *(_OWORD *)(v32 + 48);
    long long v122 = v33;
    long long v119 = v35;
    long long v120 = v34;
    long long v36 = *(_OWORD *)(v32 + 128);
    long long v38 = *(_OWORD *)(v32 + 80);
    long long v37 = *(_OWORD *)(v32 + 96);
    long long v125 = *(_OWORD *)(v32 + 112);
    long long v126 = v36;
    long long v123 = v38;
    long long v124 = v37;
    long long v40 = *(_OWORD *)(v32 + 160);
    long long v39 = *(_OWORD *)(v32 + 176);
    long long v41 = *(_OWORD *)(v32 + 144);
    char v130 = *(unsigned char *)(v32 + 192);
    long long v128 = v40;
    long long v129 = v39;
    long long v127 = v41;
    uint64_t v42 = *((void *)&v119 + 1);
    v139[0] = v119;
    v139[1] = v120;
    v139[2] = v121;
    uint64_t v140 = v122;
    sub_1000B7C20((uint64_t)&v118);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000D7EAC((uint64_t)v133);
    unint64_t v111 = v25;
    swift_bridgeObjectRelease();
    uint64_t v43 = swift_bridgeObjectRelease();
    __chkstk_darwin(v43);
    *(&v100 - 2) = (uint64_t)v139;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    double v44 = sub_1000D80D0(v42, (uint64_t (*)(void, double))sub_1000D81F8);
    swift_bridgeObjectRelease();
    uint64_t v45 = v44[2];
    if (!v45) {
      goto LABEL_54;
    }
    uint64_t v46 = 2 * v45 - 1;
    swift_bridgeObjectRetain();
    unint64_t v47 = v46;
    long long v22 = v114;
    uint64_t v48 = sub_1002E11A8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v44, (uint64_t)(v44 + 4), 0, v47, (uint64_t)v44);
    swift_bridgeObjectRelease();
    sub_100589218(v48);
    double v50 = v49;
    swift_bridgeObjectRelease();
    double v51 = sub_100589864((uint64_t)v44, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D7E40((uint64_t)&v118);
    double v52 = v107;
    swift_beginAccess();
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    v134[0] = *(void *)v52;
    *(void *)double v52 = 0x8000000000000000;
    sub_1004F03F0((uint64_t)v133, v31, v53);
    *(void *)double v52 = v134[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v54 = v106;
    swift_beginAccess();
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    v134[0] = *(void *)v54;
    *(void *)uint64_t v54 = 0x8000000000000000;
    sub_1004F02BC(v31, v55, v50, v51);
    *(void *)uint64_t v54 = v134[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    unint64_t v19 = v111;
  }
  int64_t v30 = v20 + 1;
  if (v20 + 1 >= v110) {
    goto LABEL_27;
  }
  unint64_t v28 = *(void *)(v109 + 8 * v30);
  if (v28) {
    goto LABEL_18;
  }
  int64_t v30 = v20 + 2;
  if (v20 + 2 >= v110) {
    goto LABEL_27;
  }
  unint64_t v28 = *(void *)(v109 + 8 * v30);
  if (v28) {
    goto LABEL_18;
  }
  int64_t v30 = v20 + 3;
  if (v20 + 3 >= v110)
  {
LABEL_27:
    uint64_t v56 = v116;
    uint64_t v57 = v104;
    uint64_t v58 = v101;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v109 + 8 * v30);
  if (v28)
  {
LABEL_18:
    int64_t v20 = v30;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v20 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v20 >= v110) {
      goto LABEL_27;
    }
    unint64_t v28 = *(void *)(v109 + 8 * v20);
    ++v30;
    if (v28) {
      goto LABEL_19;
    }
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t sub_1000D7E40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D7EAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  char v3 = sub_1000D80D0(v2, (uint64_t (*)(void, double))sub_1000D81F8);
  swift_bridgeObjectRelease();
  unint64_t v4 = v3[2];
  if (v4 >= 2)
  {
    sub_1001C8E34(0, v4, 0);
    unint64_t v7 = _swiftEmptyArrayStorage[2];
    uint64_t v8 = 4;
    unint64_t v9 = v4;
    do
    {
      uint64_t v10 = v3[v8];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v7 >= v11 >> 1) {
        sub_1001C8E34(v11 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      _swiftEmptyArrayStorage[v7 + 4] = v10;
      v8 += 2;
      ++v7;
      --v9;
    }
    while (v9);
    sub_1001C8E34(0, v4, 0);
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    uint64_t v13 = 5;
    do
    {
      uint64_t v14 = v3[v13];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v12 >= v15 >> 1) {
        sub_1001C8E34(v15 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v14;
      v13 += 2;
      ++v12;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    sub_10058A6A0((uint64_t)_swiftEmptyArrayStorage, (double *)v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    long long v16 = v17[1];
    *(_OWORD *)a1 = v17[0];
    *(_OWORD *)(a1 + 16) = v16;
    *(void *)(a1 + 32) = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000D8248();
    swift_allocError();
    *uint64_t v5 = 1;
    return swift_willThrow();
  }
  return result;
}

void *sub_1000D80D0(uint64_t a1, uint64_t (*a2)(void, double))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  long long v16 = a2;
  do
  {
    uint64_t v8 = a2(v5, *(double *)(a1 + 8 * v5 + 32));
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = v8;
      uint64_t v12 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1001E7974(0, v6[2] + 1, 1, v6);
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_1001E7974((void *)(v13 > 1), v14 + 1, 1, v6);
      }
      uint64_t v6[2] = v14 + 1;
      unint64_t v7 = &v6[2 * v14];
      v7[4] = v11;
      v7[5] = v12;
      a2 = v16;
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1000D81F8(unint64_t a1, double a2)
{
  return sub_1000D8200(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1000D8200(unint64_t result, uint64_t a2, double a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(*(void *)a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(*(void *)a2 + 24 * result + 48)) {
    return 0;
  }
  else {
    return *(void *)&a3;
  }
}

unint64_t sub_1000D8248()
{
  unint64_t result = qword_10095A3C0;
  if (!qword_10095A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A3C0);
  }
  return result;
}

uint64_t *sub_1000D829C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1000D8868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000D8BC0(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t v3 = v1;
  uint64_t v5 = (uint64_t)v4;
  uint64_t v6 = (const void *)v2;
  memcpy(v22, v4, sizeof(v22));
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fakingEnabled) == 1)
  {
    sub_1003714A8((uint64_t)v6);
    memcpy(__dst, v20, sizeof(__dst));
    sub_1003714A8(v5);
    memcpy(__src, v21, sizeof(__src));
    memcpy(v16, __dst, sizeof(v16));
    ASFriendListDisplayMode.id.getter(v16);
    uint64_t v7 = v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365;
    sub_1000D8EAC(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365, (uint64_t)v17);
    sub_1000D8EAC((uint64_t)v16, v7);
    sub_1000D8F14((uint64_t)v20);
    sub_1000D829C(v17);
    unint64_t v8 = sub_1000B75E4();
    sub_1002E1358((uint64_t)v20);
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365) = v8;
    swift_bridgeObjectRelease();
    memcpy(v18, __src, sizeof(v18));
    ASFriendListDisplayMode.id.getter(v18);
    uint64_t v9 = v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90;
    sub_1000D8EAC(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90, (uint64_t)v19);
    sub_1000D8EAC((uint64_t)v18, v9);
    sub_1000D8F14((uint64_t)v21);
    sub_1000D829C(v19);
    unint64_t v10 = sub_1000B75E4();
    sub_1002E1358((uint64_t)v21);
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90) = v10;
  }
  else
  {
    memcpy(v18, v6, sizeof(v18));
    ASFriendListDisplayMode.id.getter(v18);
    uint64_t v11 = v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365;
    sub_1000D8EAC(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365, (uint64_t)v19);
    sub_1000D8EAC((uint64_t)v18, v11);
    sub_1000D8F14((uint64_t)v6);
    sub_1000D829C(v19);
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365) = sub_1000B75E4();
    swift_bridgeObjectRelease();
    memcpy(v20, v22, sizeof(v20));
    ASFriendListDisplayMode.id.getter(v20);
    uint64_t v12 = v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90;
    sub_1000D8EAC(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90, (uint64_t)v21);
    sub_1000D8EAC((uint64_t)v20, v12);
    sub_1000D8F14(v5);
    sub_1000D829C(v21);
    *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90) = sub_1000B75E4();
  }
  swift_bridgeObjectRelease();
  return sub_1000D55AC();
}

uint64_t sub_1000D8EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100954670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D8F14(uint64_t a1)
{
  return a1;
}

void sub_1000D922C()
{
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v0 = *(void *)(v46 - 8);
  uint64_t v1 = __chkstk_darwin(v46);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v43 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (char *)Strong;
    uint64_t v10 = Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards;
    swift_beginAccess();
    uint64_t v11 = *(void *)v10;
    uint64_t v40 = *(void *)(*(void *)v10 + 16);
    uint64_t v41 = v10;
    if (v40)
    {
      uint64_t v34 = v11 + 32;
      unsigned int v37 = enum case for DispatchPredicate.onQueue(_:);
      uint64_t v12 = *(void (**)(void *, void, uint64_t))(v6 + 104);
      uint64_t v38 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue;
      uint64_t v39 = v6 + 104;
      long long v35 = (void (**)(void *, uint64_t))(v6 + 8);
      long long v36 = v12;
      unint64_t v13 = (void (**)(char *, uint64_t))(v0 + 8);
      uint64_t v32 = v11;
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      long long v33 = v9;
      while (1)
      {
        unint64_t v15 = *(void **)&v9[v38];
        uint64_t v17 = v42;
        uint64_t v16 = v43;
        *uint64_t v42 = v15;
        v36(v17, v37, v16);
        id v18 = v15;
        char v19 = _dispatchPreconditionTest(_:)();
        (*v35)(v17, v16);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v20 = *(void *)v41;
        uint64_t v47 = *(void *)(*(void *)v41 + 16);
        if (v47)
        {
          uint64_t v48 = (void *)(v34 + 40 * v14);
          long long v21 = (void *)(v20 + 32);
          uint64_t v44 = v20;
          uint64_t v45 = v14;
          long long v22 = v48 + 3;
          uint64_t v23 = v48 + 4;
          swift_bridgeObjectRetain();
          uint64_t v24 = 0;
          do
          {
            uint64_t v25 = v21[3];
            uint64_t v26 = v21[4];
            sub_10007E4EC(v21, v25);
            (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
            uint64_t v27 = *v22;
            uint64_t v28 = *v23;
            sub_10007E4EC(v48, *v22);
            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
            char v29 = static UUID.== infix(_:_:)();
            int64_t v30 = *v13;
            uint64_t v31 = v46;
            (*v13)(v3, v46);
            v30(v5, v31);
            if (v29)
            {
              swift_bridgeObjectRelease();
              sub_1000D95EC(v48);
              goto LABEL_5;
            }
            ++v24;
            v21 += 5;
          }
          while (v47 != v24);
          swift_bridgeObjectRelease();
LABEL_5:
          uint64_t v9 = v33;
          uint64_t v14 = v45;
        }
        if (++v14 == v40)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_1000D95EC(void *a1)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 BOOLForKey:v3];

  sub_1000AFA94(&qword_10095DDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007526C0;
  *(void *)(inited + 32) = 0x6570795464726163;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_10007E4EC(a1, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v9 = v8;
  LOBYTE(v6) = v10;
  Class isa = sub_1000D9C34(v7, v8, v10).super.super.isa;
  sub_1000917F8(v7, v9, v6);
  *(void *)(inited + 48) = isa;
  *(void *)(inited + 56) = 0x657A695364726163;
  *(void *)(inited + 64) = 0xE800000000000000;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_10007E4EC(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x65646E4964726163;
  *(void *)(inited + 88) = 0xE900000000000078;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0xD000000000000016;
  *(void *)(inited + 112) = 0x80000001007CC840;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  unint64_t v14 = sub_1000D9C28(inited);
  NSString v15 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v14);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

void sub_1000D9860(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000AFA94(&qword_10095AE90);
    id v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    id v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000D9B04();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    NSString v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    id v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_1000DA1C0(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    uint64_t v23 = (uint64_t *)(v2[6] + 16 * v20);
    *uint64_t v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1000D9B04()
{
  return swift_release();
}

unint64_t sub_1000D9B10(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1000DA1C0(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000D9C28(uint64_t a1)
{
  return sub_1000D9B10(a1, &qword_1009609D0);
}

NSNumber sub_1000D9C34(uint64_t a1, uint64_t a2, char a3)
{
  Swift::Int v3 = 17;
  switch(a3)
  {
    case 0:
      Swift::Int v3 = qword_100774DF8[(char)a1];
      break;
    case 1:
      break;
    case 2:
      Swift::Int v3 = qword_100774F30[(char)a1];
      break;
    case 3:
      Swift::Int v3 = qword_100774DB8[a1];
      break;
    default:
      Swift::Int v3 = 57;
      break;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  return NSNumber.init(integerLiteral:)(v3);
}

uint64_t sub_1000D9CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v44 = v2 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v2 + 56);
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  int64_t v45 = (unint64_t)(63 - v6) >> 6;
  uint64_t v46 = (uint64_t (**)(void, void))(v3 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_27;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_51;
    }
    if (v13 >= v45) {
      break;
    }
    unint64_t v14 = *(void *)(v44 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v45) {
        break;
      }
      unint64_t v14 = *(void *)(v44 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v45) {
          break;
        }
        unint64_t v14 = *(void *)(v44 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 3;
          if (v13 + 3 >= v45) {
            break;
          }
          unint64_t v14 = *(void *)(v44 + 8 * v9);
          if (!v14)
          {
            int64_t v9 = v13 + 4;
            if (v13 + 4 >= v45) {
              break;
            }
            unint64_t v14 = *(void *)(v44 + 8 * v9);
            if (!v14)
            {
              int64_t v15 = v13 + 5;
              if (v15 >= v45) {
                break;
              }
              unint64_t v14 = *(void *)(v44 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v9 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_53;
                  }
                  if (v9 >= v45) {
                    goto LABEL_44;
                  }
                  unint64_t v14 = *(void *)(v44 + 8 * v9);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v9 = v15;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_27:
    uint64_t v17 = v1[7];
    uint64_t v16 = v1[8];
    uint64_t v18 = v1[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 16))(v16, *(void *)(v48 + 48) + *(void *)(v47 + 72) * v12, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v17, v16, v18);
    uint64_t v19 = TrainerReference.identifier.getter();
    uint64_t v21 = v20;
    uint64_t v22 = TrainerReference.informalName.getter();
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = v22;
      int64_t v49 = v9;
      unint64_t v50 = v7;
      uint64_t v26 = v1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v29 = sub_1000DA1C0(v19, v21);
      uint64_t v30 = v4[2];
      BOOL v31 = (v28 & 1) == 0;
      uint64_t result = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        return result;
      }
      char v32 = v28;
      if (v4[3] < result)
      {
        sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
        uint64_t result = sub_1000DA1C0(v19, v21);
        if ((v32 & 1) != (v33 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v29 = result;
        if ((v32 & 1) == 0) {
          goto LABEL_39;
        }
LABEL_4:
        unint64_t v10 = (uint64_t *)(v4[7] + 16 * v29);
        swift_bridgeObjectRelease();
        *unint64_t v10 = v25;
        v10[1] = v24;
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v26;
        int64_t v9 = v49;
        unint64_t v7 = v50;
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v28) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v32) {
          goto LABEL_4;
        }
      }
LABEL_39:
      v4[(v29 >> 6) + 8] |= 1 << v29;
      unsigned int v37 = (uint64_t *)(v4[6] + 16 * v29);
      *unsigned int v37 = v19;
      v37[1] = v21;
      uint64_t v38 = (uint64_t *)(v4[7] + 16 * v29);
      *uint64_t v38 = v25;
      v38[1] = v24;
      uint64_t v39 = v4[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_52;
      }
      v4[2] = v41;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1000DA1C0(v19, v21);
    char v36 = v35;
    swift_bridgeObjectRelease();
    if (v36)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1004F5D2C();
      }
      swift_bridgeObjectRelease();
      sub_1005DE158(v34, (uint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t result = (*v46)(v1[7], v1[5]);
  }
LABEL_44:
  uint64_t v42 = (void *)v1[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v42 = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = (uint64_t (*)(void))v1[1];
  return v43();
}

unint64_t sub_1000DA1C0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1000DA238(a1, a2, v4);
}

unint64_t sub_1000DA238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1000DA31C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FC58);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    char v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    char v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ActivitySharingReplyMenuContext(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivitySharingReplyMenuContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

__n128 initializeWithTake for MirrorStackedMetricsView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1000DA6F4()
{
  if (*v0) {
    return 0x65746143657A6973;
  }
  else {
    return 0x706D655464726163;
  }
}

unsigned char *storeEnumTagSinglePayload for CardTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000DA80C()
{
  if (*v0) {
    return 1702521203;
  }
  else {
    return 1701869940;
  }
}

uint64_t destroy for CardType(uint64_t a1)
{
  return sub_1000917F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

void sub_1000DA848(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000DA854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100643694);
}

uint64_t sub_1000DA868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100647A78);
}

uint64_t getEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for ChartableMetric(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

unint64_t sub_1000DAAEC()
{
  return sub_1000DAAF4(*v0);
}

unint64_t sub_1000DAAF4(char a1)
{
  unint64_t result = 0x73676E6972;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684107116;
      break;
    case 2:
      unint64_t result = 0x79726F74736968;
      break;
    case 3:
      unint64_t result = 0x63697274656DLL;
      break;
    case 4:
      unint64_t result = 0x6472617761;
      break;
    case 5:
      unint64_t result = 0x646E65697266;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x54676F6C61746163;
      break;
    case 9:
      unint64_t result = 0x73646E657274;
      break;
    case 10:
      unint64_t result = 0x646E657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000DAC08(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1000DAC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050AFD0);
}

uint64_t sub_1000DAC24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

__n128 initializeWithTake for CardType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1000DAC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100517DC8);
}

unsigned char *_s10FitnessApp8CardTypeO16MetricCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        break;
      case 2:
        *(_WORD *)__n128 result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *__n128 result = 0;
        break;
      case 2:
        *(_WORD *)__n128 result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)__n128 result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1000DAD04()
{
  return 12383;
}

uint64_t getEnumTagSinglePayload for TrendsCoachingError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t getEnumTagSinglePayload for CardHeaderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000DADB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100199D14);
}

uint64_t sub_1000DADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100360C54);
}

uint64_t destroy for FitnessPlusCardDataProvider.State(uint64_t a1)
{
  return sub_1000904DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1000DADE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DADF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB008(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB018(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB028(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB038(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB058(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB068(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB078(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB088(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB098(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB118(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB138(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB148(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB158(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB168(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB188(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB198(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB218(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB228(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB258(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB268(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB278(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB298(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB308(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB318(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB328(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB338(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB348(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB368(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB378(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB388(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB398(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB408(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB428(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB438(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB448(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB458(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB468(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB478(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB488(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB498(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB508(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB528(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB538(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB548(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB558(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB568(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB578(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB588(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DB5D8(uint64_t a1)
{
  return sub_1000A1424(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000A0798);
}

double sub_1000DB5F0@<D0>(uint64_t a1@<X8>)
{
  return sub_1000A01A4(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1000DB5FC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 17);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a2 + 17);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = sub_1000DB6B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
  uint64_t result = 0;
  if ((v8 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
    if (v3 == v6 && v4 == v7)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_1000DB6B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_43;
      }
      if (a1 == a4 && a2 == a5) {
        uint64_t result = 1;
      }
      else {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_43;
      }
      goto LABEL_9;
    case 3:
      switch(a1)
      {
        case 1:
          if (a6 != 3 || a4 != 1 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 2:
          if (a6 != 3 || a4 != 2 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 3:
          if (a6 != 3 || a4 != 3 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 4:
          if (a6 != 3 || a4 != 4 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 5:
          if (a6 != 3 || a4 != 5 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 6:
          if (a6 != 3 || a4 != 6 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 7:
          if (a6 != 3 || a4 != 7 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        default:
          if (a6 != 3 || a5 | a4) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
      }
      break;
    default:
      if (a6) {
LABEL_43:
      }
        uint64_t result = 0;
      else {
LABEL_9:
      }
        uint64_t result = a4 == a1;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardMetric()
{
  return &type metadata for ActivityDashboardMetric;
}

uint64_t sub_1000DB86C()
{
  return swift_release();
}

uint64_t sub_1000DB874()
{
  return swift_release();
}

uint64_t sub_1000DB87C()
{
  return swift_release();
}

uint64_t sub_1000DB884()
{
  return swift_release();
}

uint64_t sub_1000DB88C()
{
  return swift_release();
}

uint64_t sub_1000DB894()
{
  return swift_release();
}

uint64_t sub_1000DB89C()
{
  return swift_release();
}

uint64_t sub_1000DB8A4()
{
  return swift_release();
}

uint64_t sub_1000DB8AC()
{
  return swift_release();
}

uint64_t sub_1000DB8B4()
{
  return swift_release();
}

uint64_t sub_1000DB8BC()
{
  return swift_release();
}

uint64_t sub_1000DB8C4()
{
  return swift_release();
}

uint64_t sub_1000DB8CC()
{
  return swift_release();
}

uint64_t sub_1000DB8D4()
{
  return swift_release();
}

uint64_t sub_1000DB8DC()
{
  return swift_release();
}

uint64_t sub_1000DB8E4()
{
  return swift_release();
}

uint64_t sub_1000DB8EC()
{
  return swift_release();
}

uint64_t sub_1000DB8F4()
{
  return swift_release();
}

uint64_t sub_1000DB8FC()
{
  return swift_release();
}

uint64_t sub_1000DB904()
{
  return swift_release();
}

uint64_t sub_1000DB90C()
{
  return swift_release();
}

uint64_t sub_1000DB914()
{
  return swift_release();
}

uint64_t sub_1000DB91C()
{
  return swift_release();
}

uint64_t sub_1000DB924()
{
  return swift_release();
}

uint64_t sub_1000DB92C()
{
  return swift_release();
}

uint64_t sub_1000DB934()
{
  return swift_release();
}

uint64_t sub_1000DB93C()
{
  return swift_release();
}

uint64_t sub_1000DB944()
{
  return swift_release();
}

uint64_t sub_1000DB94C()
{
  return swift_release();
}

uint64_t sub_1000DB954()
{
  return swift_release();
}

uint64_t sub_1000DB95C()
{
  return swift_release();
}

uint64_t sub_1000DB964()
{
  return swift_release();
}

uint64_t sub_1000DB96C()
{
  return swift_release();
}

uint64_t sub_1000DB974()
{
  return swift_release();
}

uint64_t sub_1000DB97C()
{
  return swift_release();
}

uint64_t sub_1000DB984()
{
  return swift_release();
}

uint64_t sub_1000DB98C()
{
  return swift_release();
}

uint64_t sub_1000DB994()
{
  return swift_release();
}

uint64_t sub_1000DB99C()
{
  return swift_release();
}

uint64_t sub_1000DB9A4()
{
  return swift_release();
}

uint64_t sub_1000DB9AC()
{
  return swift_release();
}

uint64_t sub_1000DB9B4()
{
  return swift_release();
}

uint64_t sub_1000DB9BC()
{
  return swift_release();
}

uint64_t sub_1000DB9C4()
{
  return swift_release();
}

uint64_t sub_1000DB9CC()
{
  return swift_release();
}

uint64_t sub_1000DB9D4()
{
  return swift_release();
}

uint64_t sub_1000DB9DC()
{
  return swift_release();
}

uint64_t sub_1000DB9E4()
{
  return swift_release();
}

uint64_t sub_1000DB9EC()
{
  return swift_release();
}

uint64_t sub_1000DB9F4()
{
  return swift_release();
}

uint64_t sub_1000DB9FC()
{
  return swift_release();
}

uint64_t sub_1000DBA04()
{
  return swift_release();
}

uint64_t sub_1000DBA0C()
{
  return swift_release();
}

uint64_t sub_1000DBA14()
{
  return swift_release();
}

uint64_t sub_1000DBA1C()
{
  return swift_release();
}

uint64_t sub_1000DBA24()
{
  return swift_release();
}

uint64_t sub_1000DBA2C()
{
  return swift_release();
}

uint64_t sub_1000DBA34()
{
  return swift_release();
}

uint64_t sub_1000DBA3C()
{
  return swift_release();
}

uint64_t sub_1000DBA44()
{
  return swift_release();
}

uint64_t sub_1000DBA4C()
{
  return swift_release();
}

uint64_t sub_1000DBA54()
{
  return swift_release();
}

uint64_t sub_1000DBA5C()
{
  return swift_release();
}

uint64_t sub_1000DBA64()
{
  return swift_release();
}

uint64_t sub_1000DBA6C()
{
  return swift_release();
}

uint64_t sub_1000DBA74()
{
  return swift_release();
}

uint64_t sub_1000DBA7C()
{
  return swift_release();
}

uint64_t sub_1000DBA84()
{
  return swift_release();
}

uint64_t sub_1000DBA8C()
{
  return swift_release();
}

uint64_t sub_1000DBA94()
{
  return swift_release();
}

uint64_t sub_1000DBA9C()
{
  return swift_release();
}

uint64_t sub_1000DBAA4()
{
  return swift_release();
}

uint64_t sub_1000DBAAC()
{
  return swift_release();
}

uint64_t sub_1000DBAB4()
{
  return swift_release();
}

uint64_t sub_1000DBABC()
{
  return swift_release();
}

uint64_t sub_1000DBAC4()
{
  return swift_release();
}

uint64_t sub_1000DBACC()
{
  return swift_release();
}

uint64_t sub_1000DBAD4()
{
  return swift_release();
}

uint64_t sub_1000DBADC()
{
  return swift_release();
}

uint64_t sub_1000DBAE4()
{
  return swift_release();
}

uint64_t sub_1000DBAEC()
{
  return swift_release();
}

uint64_t sub_1000DBAF4()
{
  return swift_release();
}

uint64_t sub_1000DBAFC()
{
  return swift_release();
}

uint64_t sub_1000DBB04()
{
  return swift_release();
}

uint64_t sub_1000DBB0C()
{
  return swift_release();
}

uint64_t sub_1000DBB14()
{
  return swift_release();
}

uint64_t sub_1000DBB1C()
{
  return swift_release();
}

uint64_t sub_1000DBB24()
{
  return swift_release();
}

uint64_t sub_1000DBB2C()
{
  return swift_release();
}

uint64_t sub_1000DBB34()
{
  return swift_release();
}

uint64_t sub_1000DBB3C()
{
  return swift_release();
}

uint64_t sub_1000DBB44()
{
  return swift_release();
}

uint64_t sub_1000DBB4C()
{
  return swift_release();
}

uint64_t sub_1000DBB54()
{
  return swift_release();
}

uint64_t sub_1000DBB5C()
{
  return swift_release();
}

uint64_t sub_1000DBB64()
{
  return swift_release();
}

uint64_t sub_1000DBB6C()
{
  return swift_release();
}

uint64_t sub_1000DBB74()
{
  return swift_release();
}

uint64_t sub_1000DBB7C()
{
  return swift_release();
}

uint64_t sub_1000DBB84()
{
  return swift_release();
}

uint64_t sub_1000DBB8C()
{
  return swift_release();
}

uint64_t sub_1000DBB94()
{
  return swift_release();
}

uint64_t sub_1000DBB9C()
{
  return swift_release();
}

uint64_t sub_1000DBBA4()
{
  return swift_release();
}

uint64_t sub_1000DBBAC()
{
  return swift_release();
}

uint64_t sub_1000DBBB4()
{
  return swift_release();
}

uint64_t sub_1000DBBBC()
{
  return swift_release();
}

uint64_t sub_1000DBBC4()
{
  return swift_release();
}

uint64_t sub_1000DBBCC()
{
  return swift_release();
}

uint64_t sub_1000DBBD4()
{
  return swift_release();
}

uint64_t sub_1000DBBDC()
{
  return swift_release();
}

uint64_t sub_1000DBBE4()
{
  return swift_release();
}

uint64_t sub_1000DBBEC()
{
  return swift_release();
}

uint64_t sub_1000DBBF4()
{
  return swift_release();
}

uint64_t sub_1000DBBFC()
{
  return swift_release();
}

uint64_t sub_1000DBC04()
{
  return swift_release();
}

uint64_t sub_1000DBC0C()
{
  return swift_release();
}

uint64_t sub_1000DBC14()
{
  return swift_release();
}

uint64_t sub_1000DBC1C()
{
  return swift_release();
}

uint64_t sub_1000DBC24()
{
  return swift_release();
}

uint64_t sub_1000DBC2C()
{
  return swift_release();
}

uint64_t sub_1000DBC34()
{
  return swift_release();
}

uint64_t sub_1000DBC3C()
{
  return swift_release();
}

uint64_t sub_1000DBC44()
{
  return swift_release();
}

uint64_t sub_1000DBC4C()
{
  return swift_release();
}

uint64_t sub_1000DBC54()
{
  return swift_release();
}

uint64_t sub_1000DBC5C()
{
  return swift_release();
}

uint64_t sub_1000DBC64(uint64_t a1, uint64_t a2)
{
  return sub_1000DB6B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t storeEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardHeaderView()
{
  return &type metadata for CardHeaderView;
}

uint64_t sub_1000DBCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F0988);
}

uint64_t sub_1000DBCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100352F64);
}

uint64_t sub_1000DBD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006BA3F8);
}

uint64_t type metadata accessor for BalanceDataProvider()
{
  uint64_t result = qword_1009506D0;
  if (!qword_1009506D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DBD64()
{
  return sub_10006DF9C();
}

uint64_t sub_1000DBD70(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_1000DBD90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for FriendCardView()
{
  uint64_t result = qword_100954298;
  if (!qword_100954298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for DashboardCardProgressView()
{
  return &type metadata for DashboardCardProgressView;
}

unsigned char *sub_1000DBE18(unsigned char *a1)
{
  return sub_100676314(a1, *(unsigned char *)(v1 + 16));
}

unsigned char *sub_1000DBE20(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1000DBE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F0AA4);
}

uint64_t sub_1000DBE4C(uint64_t a1, uint64_t a2)
{
  return sub_1000DBE68(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1000DBE68(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      return sub_100375780(a1, a4);
    }
    return 0;
  }
  if (a3 != 1)
  {
    if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 == 2 && a4 == 2 && !a5) {
          return 1;
        }
      }
      else if (a6 == 2 && a4 == 1 && !a5)
      {
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6 != 1) {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

id sub_1000DBF34(NSObject *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B0590(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t type metadata accessor for TrendsStack()
{
  uint64_t result = qword_1009695C0;
  if (!qword_1009695C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DBF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006BA520);
}

uint64_t sub_1000DBFA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000963D0(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

ValueMetadata *type metadata accessor for Aggregate()
{
  return &type metadata for Aggregate;
}

ValueMetadata *type metadata accessor for AwardEntity()
{
  return &type metadata for AwardEntity;
}

uint64_t sub_1000DBFE8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000DC000()
{
  return sub_10006248C();
}

uint64_t sub_1000DC010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ConditionalFrameHeightModifier.body(content:)(a1, *(unsigned char *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for ConditionalFrameHeightModifier()
{
  return &type metadata for ConditionalFrameHeightModifier;
}

uint64_t sub_1000DC040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ConditionalFrameWidthModifier.body(content:)(a1, *(unsigned char *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1000DC054()
{
  return sub_10008607C(*(void *)(v0 + 16));
}

uint64_t sub_1000DC05C@<X0>(uint64_t a1@<X8>)
{
  return sub_100086424(*(void *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for ConditionalFrameWidthModifier()
{
  return &type metadata for ConditionalFrameWidthModifier;
}

uint64_t type metadata accessor for CustomPageControlTabView()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1000DC0B0()
{
  return sub_1000DC0B8(*v0);
}

unint64_t sub_1000DC0B8(char a1)
{
  unint64_t result = 0x4765766F4D736168;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6372657845736168;
      break;
    case 3:
      unint64_t result = 0x646E617453736168;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6F4D6F6D65447369;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessPlusCardDataProvider.State()
{
  return &type metadata for FitnessPlusCardDataProvider.State;
}

ValueMetadata *type metadata accessor for CardType()
{
  return &type metadata for CardType;
}

ValueMetadata *type metadata accessor for CardSize()
{
  return &type metadata for CardSize;
}

ValueMetadata *type metadata accessor for TrendsSplashScreen()
{
  return &type metadata for TrendsSplashScreen;
}

uint64_t sub_1000DC1FC()
{
  return sub_10008A680(0x2Au);
}

ValueMetadata *type metadata accessor for CardLoadingState()
{
  return &type metadata for CardLoadingState;
}

uint64_t sub_1000DC254(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t type metadata accessor for VerticalLayoutTrendView()
{
  uint64_t result = qword_100956D08;
  if (!qword_100956D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1000DC2C0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for CardTemplate()
{
  return &type metadata for CardTemplate;
}

ValueMetadata *type metadata accessor for Histogram1D()
{
  return &type metadata for Histogram1D;
}

BOOL sub_1000DC304(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t type metadata accessor for FitnessPlusCardDataProvider()
{
  uint64_t result = qword_100966AF8;
  if (!qword_100966AF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ActivityRingsViewRepresentable()
{
  return &type metadata for ActivityRingsViewRepresentable;
}

uint64_t getEnumTagSinglePayload for CatalogTipCardFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ActivityTrendType()
{
  return &type metadata for ActivityTrendType;
}

void *initializeWithTake for ActivitySharingHighlightDataProvider.State(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

__n128 initializeWithTake for ActivitySharingFriendListDataProvider.State(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1000DC468(uint64_t a1)
{
  return sub_1000DC464(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000DC470(uint64_t a1, uint64_t a2)
{
  return sub_1001B3C50(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC490(uint64_t a1, uint64_t a2)
{
  return sub_100005954(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC4B0(uint64_t a1, uint64_t a2)
{
  return sub_100005830(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC4D4(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC4F4(uint64_t a1, uint64_t a2)
{
  return sub_1000E2CC8(a1, a2, sub_10006CE48);
}

uint64_t sub_1000DC50C(uint64_t a1, uint64_t a2)
{
  return sub_1000E30E8(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC52C(uint64_t a1, uint64_t a2)
{
  return sub_1006641F0(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t sub_1000DC54C(uint64_t a1, uint64_t a2)
{
  return sub_1006AF2D8(a1, a2, (uint64_t *)&unk_1009633D0, sub_10006CE48);
}

uint64_t type metadata accessor for ActivitySharingFriendListDataProvider()
{
  uint64_t result = qword_10094EAF8;
  if (!qword_10094EAF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightDataProvider.State()
{
  return &type metadata for ActivitySharingHighlightDataProvider.State;
}

ValueMetadata *type metadata accessor for TrendsSplashVideoViewRepresentable()
{
  return &type metadata for TrendsSplashVideoViewRepresentable;
}

uint64_t type metadata accessor for SummaryConfigurationProvider()
{
  uint64_t result = qword_10094C4A0;
  if (!qword_10094C4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FriendsSetupCoordinator()
{
  uint64_t result = qword_100968718;
  if (!qword_100968718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000DC670@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000DC69C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000DC69C(unint64_t result)
{
  if (result >= 0x27) {
    return 39;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityStatisticsUnit()
{
  return &type metadata for ActivityStatisticsUnit;
}

uint64_t type metadata accessor for TipArtworkImageLoader()
{
  uint64_t result = qword_10096A100;
  if (!qword_10096A100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDayHistogram()
{
  return &type metadata for ActivityDayHistogram;
}

void sub_1000DC718()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    sub_1000DCA28(319, (unint64_t *)&qword_1009502E8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F)
    {
      sub_1000DCA28(319, (unint64_t *)&qword_10094C608, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000DC8A0()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    sub_1000DCA28(319, (unint64_t *)&qword_1009502E8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F)
    {
      sub_1000DCA28(319, (unint64_t *)&qword_10094C608, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000DCA28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1000A1370(&qword_10094C580);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1000DCA8C()
{
  return sub_100075BAC();
}

ValueMetadata *type metadata accessor for ActivityStatistics()
{
  return &type metadata for ActivityStatistics;
}

uint64_t storeEnumTagSinglePayload for CatalogTipCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000DCAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100243BAC);
}

ValueMetadata *type metadata accessor for TimeXHistogram1D()
{
  return &type metadata for TimeXHistogram1D;
}

ValueMetadata *type metadata accessor for ReachableContact()
{
  return &type metadata for ReachableContact;
}

uint64_t storeEnumTagSinglePayload for RingsLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RingsLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for RingsLayout()
{
  return &type metadata for RingsLayout;
}

uint64_t sub_1000DCC38(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 40);
  return result;
}

void type metadata accessor for ASFriendListDisplayMode(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CHFriendsSetupPhase(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1000DCC9C(uint64_t a1)
{
  return sub_10006D908(a1, (uint64_t (*)(void, void, void, void, void, void))sub_100039138);
}

uint64_t sub_1000DCCB4(uint64_t a1)
{
  return sub_10006D094(a1, &qword_10095DD50, (uint64_t)&unk_1008C9330, (uint64_t)sub_10006D8B4);
}

ValueMetadata *type metadata accessor for CardType.FriendsHighlightCodingKeys()
{
  return &type metadata for CardType.FriendsHighlightCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.CatalogTipCodingKeys()
{
  return &type metadata for CardType.CatalogTipCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.HistoryCodingKeys()
{
  return &type metadata for CardType.HistoryCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.TrendsCodingKeys()
{
  return &type metadata for CardType.TrendsCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.MetricCodingKeys()
{
  return &type metadata for CardType.MetricCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.FriendCodingKeys()
{
  return &type metadata for CardType.FriendCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.TrendCodingKeys()
{
  return &type metadata for CardType.TrendCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.RingsCodingKeys()
{
  return &type metadata for CardType.RingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.AwardCodingKeys()
{
  return &type metadata for CardType.AwardCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.LoadCodingKeys()
{
  return &type metadata for CardType.LoadCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.CodingKeys()
{
  return &type metadata for CardType.CodingKeys;
}

ValueMetadata *type metadata accessor for CardType.FitnessPlusUpNextCodingKeys()
{
  return &type metadata for CardType.FitnessPlusUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendListDataProvider.State()
{
  return &type metadata for ActivitySharingFriendListDataProvider.State;
}

uint64_t type metadata accessor for ActivitySharingHighlightDataProvider()
{
  uint64_t result = qword_10095A4E8;
  if (!qword_10095A4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailAlertType()
{
  return &type metadata for ActivitySharingFriendDetailAlertType;
}

void *sub_1000DCE08()
{
  return &protocol witness table for ObservableObjectPublisher;
}

ValueMetadata *type metadata accessor for ActivityRingsViewRepresentable.SpriteSheetType()
{
  return &type metadata for ActivityRingsViewRepresentable.SpriteSheetType;
}

ValueMetadata *type metadata accessor for TrendArrowIndicatorDirection()
{
  return &type metadata for TrendArrowIndicatorDirection;
}

uint64_t type metadata accessor for ReachableContactsDataSource()
{
  uint64_t result = qword_10096A370;
  if (!qword_10096A370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricDataProviderTimeScale()
{
  return &type metadata for MetricDataProviderTimeScale;
}

ValueMetadata *type metadata accessor for LoadingCardHeightProvider.HeightKey.CodingKeys()
{
  return &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys;
}

uint64_t sub_1000DCEA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10003737C(1, a1);
}

uint64_t getEnumTagSinglePayload for ActivityDashboardMetric(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDA) {
    goto LABEL_17;
  }
  if (a2 + 38 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 38) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 38;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 38;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x27;
  int v8 = v6 - 39;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for HistoryItemFilterValue()
{
  return &type metadata for HistoryItemFilterValue;
}

ValueMetadata *type metadata accessor for OnboardingCoordinator.Criteria.CodingKeys()
{
  return &type metadata for OnboardingCoordinator.Criteria.CodingKeys;
}

ValueMetadata *type metadata accessor for MetricsDataProvider.MetricDataCacheEntry()
{
  return &type metadata for MetricsDataProvider.MetricDataCacheEntry;
}

uint64_t sub_1000DCF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000DCF88@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C0F8(v1[4], v1[2], v1[3], a1);
}

void sub_1000DCF94()
{
}

void sub_1000DCF9C()
{
}

void sub_1000DCFA4()
{
  sub_1000DD210(319, (unint64_t *)&qword_10094C600, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricCard();
    if (v1 <= 0x3F)
    {
      sub_1000DD210(319, (unint64_t *)&unk_100966580, (uint64_t (*)(uint64_t))type metadata accessor for MetricChartData, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        type metadata accessor for MetricFormattingHelper();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1000DD158(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000DD1AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000DD210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for CardBackground()
{
  return &type metadata for CardBackground;
}

ValueMetadata *type metadata accessor for CardTemplate.CodingKeys()
{
  return &type metadata for CardTemplate.CodingKeys;
}

unint64_t sub_1000DD294()
{
  unint64_t result = qword_1009666B8;
  if (!qword_1009666B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666B8);
  }
  return result;
}

void sub_1000DD2EC()
{
  sub_1000DD420(319, &qword_100966B18);
  if (v0 <= 0x3F)
  {
    sub_1000DD420(319, (unint64_t *)&qword_100968730);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000DD420(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1000DD484()
{
  unint64_t v1 = (int *)type metadata accessor for AwardsCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for AwardsCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));
  swift_bridgeObjectRelease();

  uint64_t v8 = v3 + v1[7];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  uint64_t v9 = v3 + v1[9];
  uint64_t v10 = type metadata accessor for GeometryProxy();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  sub_1000AFA94(&qword_10094C588);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000DD6F8()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000DD7A4(uint64_t (*a1)(void))
{
  uint64_t v3 = *(void *)(v1 + 16);
  long long v12 = *(_OWORD *)(v1 + 24);
  uint64_t v4 = (int *)(type metadata accessor for TwoPaneView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = *(void *)(*(void *)v4 + 64);
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1 + v5;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v10, v3);
  (*(void (**)(uint64_t))(*(void *)(v12 - 8) + 8))(v10 + v4[15]);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v1 + v9, v7);
  return swift_deallocObject();
}

const char *sub_1000DD980()
{
  return "uniqueName";
}

const char *sub_1000DD98C()
{
  return "template";
}

const char *sub_1000DD998()
{
  return "contentSize";
}

uint64_t sub_1000DDC00(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 sub_1000DDC50(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

id sub_1000DDC64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) completeCloudRestore];
}

uint64_t sub_1000DDC6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000DDC8C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) count];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1000DDCC4(void *a1)
{
  uint64_t v1 = (void *)a1[4];
  uint64_t v2 = v1[4];
  uint64_t v3 = a1[6];
  if (v2) {
    BOOL v4 = v3 < v2;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    v1[4] = v3;
    uint64_t v1 = (void *)a1[4];
  }
  uint64_t v5 = v1[5];
  uint64_t v6 = a1[6];
  if (v5) {
    BOOL v7 = v6 <= v5;
  }
  else {
    BOOL v7 = 0;
  }
  if (!v7)
  {
    v1[5] = v6;
    uint64_t v1 = (void *)a1[4];
    uint64_t v6 = a1[6];
  }
  uint64_t v8 = (void *)v1[1];
  uint64_t v9 = a1[5];
  id v10 = +[NSNumber numberWithLongLong:v6];
  [v8 setObject:v9 forKey:v10];
}

id sub_1000DDD68(uint64_t a1)
{
  return [*(id *)(a1 + 32) _runUpdateHandlers];
}

void sub_1000DDD70(uint64_t a1)
{
  [*(id *)(a1 + 32) _queue_sortAllWorkoutsByMonthAndYearWithCurrentFilter];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000DDD68;
  block[3] = &unk_1008ABA78;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000DDDFC(uint64_t a1)
{
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v2 = *((unsigned __int8 *)WeakRetained + 8);
    BOOL v4 = WeakRetained;
    BOOL v3 = v2 == [WeakRetained[16] hasWorkouts];
    WeakRetained = v4;
    if (!v3)
    {
      *((unsigned char *)v4 + 8) = [v4[16] hasWorkouts];
      [v4 _createOrbActions];
      WeakRetained = v4;
    }
  }
}

void sub_1000DDE90(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 96) copy];
  [*(id *)(a1 + 32) _runHandlers:v2];
}

uint64_t sub_1000DDEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100955A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DDF50()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_1000DDF78(uint64_t a1)
{
  return sub_1000DDF94(a1, (unint64_t *)&qword_100955C20, (uint64_t)CNContact_ptr, &qword_10094F2E0);
}

void *sub_1000DDF94(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = __CocoaSet.count.getter();
    if (v8) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  long long v12 = sub_10036BF90(&v14, v9 + 4, v8, a1, a2, a3, a4);
  id result = (void *)sub_1000D9B04();
  if (v12 == (void *)v8) {
    return v9;
  }
  __break(1u);
  return result;
}

void *sub_1000DE0B8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(a2);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  id result = (void *)j__malloc_size(v11);
  if (v9)
  {
    if ((void *)((char *)result - v10) != (void *)0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)((uint64_t)result - v10) / v9);
      uint64_t v14 = sub_10036B974(&v15, (uint64_t)v11 + v10, v4, a1, a4);
      swift_bridgeObjectRetain();
      sub_1000D9B04();
      if (v14 == v4) {
        return v11;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1000DE218(uint64_t a1)
{
  return sub_1000DE0B8(a1, &qword_10094E8D8, (uint64_t (*)(void))&type metadata accessor for EngagementBadge, (uint64_t (*)(void))&type metadata accessor for EngagementBadge);
}

unint64_t sub_1000DE24C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_1000DE290(a1, v4);
}

unint64_t sub_1000DE290(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000DEE08(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_1000DEDB4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1000DE358(uint64_t a1)
{
  return sub_1000DE36C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000DE36C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100010598(a1, a2, a3, a4, &qword_10094E828);
}

void *sub_1000DE378(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  BOOL v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    unint64_t v17 = _swiftEmptyArrayStorage;
    sub_1001C9084(0, v6, 0);
    BOOL v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1001F0F7C(v8, (uint64_t)v5);
      unint64_t v17 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_1001C9084(v10 > 1, v11 + 1, 1);
        BOOL v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1000C6118(&qword_10094F3A8, (void (*)(uint64_t))type metadata accessor for FitnessPlusStackViewModel);
      long long v12 = sub_1000B1710((uint64_t *)&v14);
      sub_1001F0F7C((uint64_t)v5, (uint64_t)v12);
      v7[2] = v11 + 1;
      sub_100093E60(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_1001F0FE0((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1000DE540(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001A8A0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_1000DE560(unint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  unint64_t v5 = result + 40;
  int64_t v6 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v17 = v6;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    uint64_t v8 = -(uint64_t)v7;
    for (int64_t i = (unsigned __int16 *)(v5 + 16 * v4++); ; i += 8)
    {
      if (v8 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      unsigned int v10 = *i;
      if ((v10 >> 8) - 2 >= 5)
      {
        if (*(void *)(a2 + 16))
        {
          Swift::UInt v11 = *((void *)i - 1);
          uint64_t result = sub_100529F54(v11, *i);
          if ((v12 & 1) != 0 && *(uint64_t *)(*(void *)(a2 + 56) + 8 * result) >= 1) {
            break;
          }
        }
      }
      if (++v4 - v2 == 1) {
        return (unint64_t)v17;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    int64_t v6 = v17;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1001C93B4(0, v17[2] + 1, 1);
      int64_t v6 = v17;
    }
    unint64_t v14 = v6[2];
    unint64_t v13 = v6[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t result = sub_1001C93B4(v13 > 1, v14 + 1, 1);
      int64_t v6 = v17;
    }
    uint64_t v6[2] = v14 + 1;
    uint64_t v15 = &v6[2 * v14];
    v15[4] = v11;
    *((_WORD *)v15 + 20) = v10;
    unint64_t v5 = v16;
  }
  while (v4 != v2);
  return (unint64_t)v6;
}

unint64_t sub_1000DE6E4(unint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    unint64_t v5 = result + 40;
    uint64_t v6 = -(uint64_t)v2;
    unint64_t v16 = result + 40;
    unint64_t v17 = *(void *)(result + 16);
    do
    {
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      uint64_t v8 = -(uint64_t)v7;
      for (int64_t i = (unsigned __int16 *)(v5 + 16 * v4++); ; i += 8)
      {
        if (v8 + v4 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = *((void *)i - 1);
        __int16 v11 = *i;
        if ((*i & 0xFF00) != 0x300) {
          break;
        }
        uint64_t result = sub_1000E01A0(a2);
        if (result) {
          goto LABEL_13;
        }
LABEL_8:
        ++v4;
        if (v6 + v4 == 1) {
          return (unint64_t)_swiftEmptyArrayStorage;
        }
      }
      if (!*(void *)(a2 + 16)) {
        goto LABEL_8;
      }
      uint64_t result = sub_100529EDC(*((void *)i - 1), *i);
      if ((v12 & 1) == 0) {
        goto LABEL_8;
      }
LABEL_13:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1001C93B4(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        uint64_t result = sub_1001C93B4(v13 > 1, v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      *((_WORD *)v15 + 20) = v11;
      unint64_t v5 = v16;
      unint64_t v2 = v17;
    }
    while (v6 + v4);
  }
  return (unint64_t)_swiftEmptyArrayStorage;
}

void *sub_1000DE84C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  __int16 v11 = (char *)&v32 - v10;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    uint64_t v13 = 0;
    uint64_t v34 = a1 + 32;
    uint64_t v32 = v2;
    uint64_t v33 = (void *)(a2 + 32);
    unint64_t v14 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v36 = a2;
    do
    {
      uint64_t v37 = v13;
      sub_10008E75C(v34 + 40 * v13, (uint64_t)&v41);
      uint64_t v15 = *(void *)(a2 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        unint64_t v16 = v33;
        do
        {
          uint64_t v17 = v42;
          uint64_t v18 = v43;
          sub_10007E4EC(&v41, v42);
          (*(void (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
          uint64_t v19 = v16[3];
          uint64_t v20 = v16[4];
          sub_10007E4EC(v16, v19);
          (*(void (**)(uint64_t, uint64_t))(v20 + 48))(v19, v20);
          char v21 = static UUID.== infix(_:_:)();
          unint64_t v22 = *v14;
          (*v14)(v8, v5);
          v22(v11, v5);
          if (v21)
          {
            a2 = v36;
            swift_bridgeObjectRelease();
            _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v41);
            goto LABEL_4;
          }
          v16 += 5;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
      }
      sub_100093E60(&v41, (uint64_t)v38);
      int64_t v23 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C9084(0, v23[2] + 1, 1);
        int64_t v23 = v44;
      }
      unint64_t v25 = v23[2];
      unint64_t v24 = v23[3];
      if (v25 >= v24 >> 1) {
        sub_1001C9084(v24 > 1, v25 + 1, 1);
      }
      uint64_t v26 = v39;
      uint64_t v27 = v40;
      uint64_t v28 = sub_1000DDC00((uint64_t)v38, v39);
      __chkstk_darwin(v28);
      uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v31 + 16))(v30);
      sub_1004BDD70(v25, (uint64_t)v30, (uint64_t *)&v44, v26, v27);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v38);
      a2 = v36;
LABEL_4:
      uint64_t v13 = v37 + 1;
    }
    while (v37 + 1 != v35);
    return v44;
  }
  return result;
}

uint64_t sub_1000DEBB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000DECA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000AFA94(&qword_10094F2B8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000DEDB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000DEE08(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000DEE64(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_1000DEEEC()
{
  unint64_t result = qword_1009559F0;
  if (!qword_1009559F0)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_100950770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009559F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrendsCoachingAverageInformation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

NSString sub_1000DEF94()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1009985E0 = (uint64_t)result;
  return result;
}

NSString sub_1000DEFCC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997870 = (uint64_t)result;
  return result;
}

unint64_t sub_1000DF004()
{
  unint64_t result = qword_1009555D0;
  if (!qword_1009555D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1009555D0);
  }
  return result;
}

void *sub_1000DF044(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000ABAB8(0, v1, 0);
  unint64_t result = (void *)sub_1005DE330(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    __int16 v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      unint64_t result = (void *)sub_1000ABAB8(v13 > 1, v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = v24;
    v15[5] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000DF250(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v26 = *(void *)(a1 + 16);
  sub_1001C93B4(0, v1, 0);
  unint64_t result = (void *)sub_1005DE330(a1);
  uint64_t v4 = (uint64_t)result;
  uint64_t v6 = v26;
  uint64_t v5 = a1;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = a1 + 80;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v5 + 32))
  {
    unint64_t v11 = (unint64_t)v4 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v5 + 36) != v3) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(v5 + 48) + 16 * v4;
    uint64_t v13 = *(void *)v12;
    __int16 v14 = *(unsigned __int8 *)(v12 + 8);
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v15 = _swiftEmptyArrayStorage[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t v24 = v8;
      uint64_t v25 = v3;
      uint64_t v23 = v9;
      unint64_t result = (void *)sub_1001C93B4(v15 > 1, v16 + 1, 1);
      uint64_t v9 = v23;
      uint64_t v8 = v24;
      uint64_t v3 = v25;
      uint64_t v6 = v26;
      uint64_t v5 = a1;
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    unint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
    v17[4] = v13;
    *((_WORD *)v17 + 20) = v14;
    int64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v4 >= v10) {
      goto LABEL_25;
    }
    uint64_t v18 = *(void *)(v8 + 8 * v11);
    if ((v18 & (1 << v4)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v5 + 36) != v3) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v4 & 0x3F));
    if (v19)
    {
      int64_t v10 = __clz(__rbit64(v19)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v8 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(v9 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v4 = v10;
    if (v7 == v6) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1000DF454(unint64_t a1, void *a2)
{
}

void sub_1000DF484(unint64_t a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, void (*a6)(id *, id))
{
  unint64_t v7 = a1;
  v26[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10007E2D8(0, a3);
    sub_1000CD998(a5, a3);
    Set.Iterator.init(_cocoa:)();
    unint64_t v7 = (unint64_t)v26[2];
    uint64_t v25 = v26[3];
    uint64_t v10 = (uint64_t)v26[4];
    id v11 = v26[5];
    unint64_t v12 = (unint64_t)v26[6];
  }
  else
  {
    id v11 = 0;
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = (void *)(a1 + 56);
    uint64_t v10 = ~v13;
    uint64_t v14 = -v13;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v12 = v15 & *(void *)(a1 + 56);
  }
  int64_t v16 = (unint64_t)(v10 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v12)
    {
      uint64_t v17 = (v12 - 1) & v12;
      unint64_t v18 = __clz(__rbit64(v12)) | ((void)v11 << 6);
      unint64_t v19 = (char *)v11;
      goto LABEL_29;
    }
    uint64_t v21 = (uint64_t)v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v21 >= v16) {
      goto LABEL_32;
    }
    unint64_t v22 = v25[v21];
    unint64_t v19 = (char *)v11 + 1;
    if (!v22)
    {
      unint64_t v19 = (char *)v11 + 2;
      if ((uint64_t)v11 + 2 >= v16) {
        goto LABEL_32;
      }
      unint64_t v22 = v25[(void)v19];
      if (!v22)
      {
        unint64_t v19 = (char *)v11 + 3;
        if ((uint64_t)v11 + 3 >= v16) {
          goto LABEL_32;
        }
        unint64_t v22 = v25[(void)v19];
        if (!v22)
        {
          unint64_t v19 = (char *)v11 + 4;
          if ((uint64_t)v11 + 4 >= v16) {
            goto LABEL_32;
          }
          unint64_t v22 = v25[(void)v19];
          if (!v22)
          {
            unint64_t v19 = (char *)v11 + 5;
            if ((uint64_t)v11 + 5 >= v16) {
              goto LABEL_32;
            }
            unint64_t v22 = v25[(void)v19];
            if (!v22)
            {
              uint64_t v23 = (char *)v11 + 6;
              while ((char *)v16 != v23)
              {
                unint64_t v22 = v25[(void)v23++];
                if (v22)
                {
                  unint64_t v19 = v23 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1000D9B04();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v17 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + ((void)v19 << 6);
LABEL_29:
    id v20 = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    if (!v20) {
      goto LABEL_32;
    }
    while (1)
    {
      a6(v26, v20);

      id v11 = v19;
      unint64_t v12 = v17;
      if ((v7 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10007E2D8(0, a3);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v20 = v26[0];
        swift_unknownObjectRelease();
        unint64_t v19 = (char *)v11;
        uint64_t v17 = v12;
        if (v20) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1000DF73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000094AC(a1, a2, a3, (void (*)(void))&type metadata accessor for Locale);
}

unint64_t sub_1000DF754()
{
  unint64_t result = qword_100950230;
  if (!qword_100950230)
  {
    sub_1000A1370(&qword_100950228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950230);
  }
  return result;
}

void *sub_1000DF7B0(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  v19[1] = a2;
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    v19[0] = a3;
    uint64_t v6 = a3 + 32;
    unint64_t v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_10008E75C(v6, (uint64_t)v23);
      char v8 = a1(v23);
      if (v3)
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v23);
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
      if ((v8 & 1) == 0) {
        break;
      }
      sub_100093E60(v23, (uint64_t)v20);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001C9084(0, v7[2] + 1, 1);
        unint64_t v7 = v24;
      }
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1) {
        sub_1001C9084(v10 > 1, v11 + 1, 1);
      }
      uint64_t v12 = v21;
      uint64_t v13 = v22;
      uint64_t v14 = sub_1000DDC00((uint64_t)v20, v21);
      __chkstk_darwin(v14);
      int64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v16);
      sub_1004BDD70(v11, (uint64_t)v16, (uint64_t *)&v24, v12, v13);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v20);
      unint64_t v7 = v24;
      v6 += 40;
      if (!--v4) {
        goto LABEL_14;
      }
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v23);
LABEL_14:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v7;
}

void *sub_1000DF9C0(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *unint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1000DFB54()
{
  unint64_t result = qword_10094C730;
  if (!qword_10094C730)
  {
    sub_1000A1370((uint64_t *)&unk_100958790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C730);
  }
  return result;
}

Swift::Int sub_1000DFBC0(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10005F930(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10000ADCC(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1000DFC2C(uint64_t a1)
{
  return sub_10005BB4C(a1, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
}

unint64_t sub_1000DFC54(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100960A50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FD90);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  unint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v12, (uint64_t)v5, &qword_100960A50);
    unint64_t result = sub_100529B44((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for IndexPath();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for ImpressionMetrics();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000DFE88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1000AFA94(&qword_10095FE98);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  Swift::UInt v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  unint64_t result = sub_1000C9334(v4, v5, v6);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v10 = (void *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v3[6] + 24 * result;
    *(unsigned char *)uint64_t v11 = v4;
    *(void *)(v11 + 8) = v5;
    *(unsigned char *)(v11 + 16) = v6 & 1;
    *(void *)(v3[7] + 8 * result) = v7;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    char v15 = v10 + 4;
    unsigned __int8 v4 = *((unsigned char *)v10 - 24);
    Swift::UInt v5 = *(v10 - 2);
    char v6 = *((unsigned char *)v10 - 8);
    uint64_t v16 = *v10;
    swift_retain();
    unint64_t result = sub_1000C9334(v4, v5, v6);
    uint64_t v10 = v15;
    uint64_t v7 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000DFFC8(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100960A60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::UInt v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1000AFA94(&qword_10095C4F8);
    uint64_t v7 = (void *)static _DictionaryStorage.allocate(capacity:)();
    uint64_t v23 = &v5[*(int *)(v2 + 48)];
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000AEF2C(v8, (uint64_t)v5, &qword_100960A60);
      unsigned __int8 v10 = *v5;
      Swift::UInt v11 = *((void *)v5 + 1);
      char v12 = v5[16];
      unint64_t result = sub_1000C9334(*v5, v11, v12);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v7[6] + 24 * result;
      *(unsigned char *)uint64_t v16 = v10;
      *(void *)(v16 + 8) = v11;
      *(unsigned char *)(v16 + 16) = v12;
      uint64_t v17 = v7[7];
      uint64_t v18 = type metadata accessor for MetricDetailViewModel();
      unint64_t result = sub_10052DCF8((uint64_t)v23, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15);
      uint64_t v19 = v7[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_10;
      }
      v7[2] = v21;
      v8 += v9;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1000E01A0(uint64_t result)
{
  if (!*(void *)(result + 16)) {
    return 0;
  }
  int64_t v1 = 0;
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_6:
    if (*(uint64_t *)(*(void *)(result + 56) + 8 * v8) > 0) {
      return 1;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v9 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_23;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_23;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_23;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_23:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_6;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000E02C8(uint64_t a1)
{
  return sub_1000E02E0(a1);
}

uint64_t sub_1000E02E0(uint64_t a1)
{
  return sub_1000E032C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000E02FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000E032C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1000E035C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E03A4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a4)
  {
    sub_1000A1750(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000A1750(a13, a14, a15 & 1);
    swift_bridgeObjectRetain();
    sub_1000A1750(a25, a26, a27 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000A1750(a37, a38, a39 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1000E04C8(_OWORD *a1)
{
  double result = 0.0;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 377) = 0u;
  return result;
}

uint64_t sub_1000E0508(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a4)
  {
    sub_1000A06C0(result, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000A06C0(a13, a14, a15 & 1);
    swift_bridgeObjectRelease();
    sub_1000A06C0(a25, a26, a27 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000A06C0(a37, a38, a39 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000E062C()
{
  unint64_t result = qword_10094C6E8;
  if (!qword_10094C6E8)
  {
    sub_1000A1370(&qword_10094C6E0);
    sub_1000160F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C6E8);
  }
  return result;
}

unint64_t sub_1000E06A0()
{
  unint64_t result = qword_1009665D0;
  if (!qword_1009665D0)
  {
    sub_1000A1370(&qword_100960058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009665D0);
  }
  return result;
}

unint64_t sub_1000E06FC()
{
  unint64_t result = qword_100957648;
  if (!qword_100957648)
  {
    sub_1000A1370(&qword_100957650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100957648);
  }
  return result;
}

unint64_t sub_1000E0758()
{
  unint64_t result = qword_1009515E0;
  if (!qword_1009515E0)
  {
    sub_1000A1370(&qword_1009515B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009515E0);
  }
  return result;
}

unint64_t sub_1000E07B4()
{
  unint64_t result = qword_100951748;
  if (!qword_100951748)
  {
    sub_1000A1370(&qword_100951700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951748);
  }
  return result;
}

void sub_1000E0810()
{
  if (!qword_10094C608)
  {
    sub_1000A1370(&qword_10094C580);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094C608);
    }
  }
}

unint64_t sub_1000E086C()
{
  unint64_t result = qword_100950438;
  if (!qword_100950438)
  {
    sub_1000A1370(&qword_100950278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950438);
  }
  return result;
}

uint64_t sub_1000E08D8()
{
  return sub_10001BB3C(&qword_100968EC8, &qword_100968EC0, (void (*)(void))sub_1000E10AC);
}

unint64_t sub_1000E0900()
{
  unint64_t result = qword_100968FC8;
  if (!qword_100968FC8)
  {
    sub_1000A1370(&qword_100960048);
    sub_10001BAB4(&qword_100968FD0, &qword_100968FD8, (void (*)(void))sub_1000E08D8, (void (*)(void))sub_1000E0B98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968FC8);
  }
  return result;
}

uint64_t sub_1000E09AC(uint64_t a1)
{
  long long v19 = *(_OWORD *)(a1 + 480);
  long long v17 = *(_OWORD *)(a1 + 448);
  long long v18 = *(_OWORD *)(a1 + 464);
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v16 = *(_OWORD *)(a1 + 432);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_1000E1374(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), BYTE1(*(void *)(a1 + 136)),
    *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1));
  return a1;
}

unint64_t sub_1000E0A88()
{
  unint64_t result = qword_100969F70;
  if (!qword_100969F70)
  {
    sub_1000A1370(&qword_100969F68);
    sub_1000E1160();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969F70);
  }
  return result;
}

unint64_t sub_1000E0AFC()
{
  unint64_t result = qword_100950460;
  if (!qword_100950460)
  {
    sub_1000A1370(&qword_100950348);
    sub_100005D9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950460);
  }
  return result;
}

uint64_t sub_1000E0B70()
{
  return sub_10001BB3C(&qword_100968EF8, &qword_100968F00, (void (*)(void))sub_1000179E0);
}

unint64_t sub_1000E0B98()
{
  unint64_t result = qword_100968F30;
  if (!qword_100968F30)
  {
    sub_1000A1370(&qword_100968EB0);
    sub_10001BAB4(&qword_100968F38, &qword_100968F40, (void (*)(void))sub_100014A54, (void (*)(void))sub_1000E2118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968F30);
  }
  return result;
}

double sub_1000E0C44@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000C2C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960038, &qword_100960040).n128_u64[0];
  return result;
}

double sub_1000E0CA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10094C648, &qword_10094C650).n128_u64[0];
  return result;
}

double sub_1000E0CFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FFF8, &qword_100960000).n128_u64[0];
  return result;
}

double sub_1000E0D58@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960048, &qword_100960050).n128_u64[0];
  return result;
}

uint64_t sub_1000E0DB4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;
  return sub_100008C44((uint64_t)v13);
}

double sub_1000E0F68@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960088, &qword_100960090).n128_u64[0];
  return result;
}

unint64_t sub_1000E0FC4()
{
  unint64_t result = qword_10095F2C8;
  if (!qword_10095F2C8)
  {
    sub_1000A1370(&qword_100957D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F2C8);
  }
  return result;
}

unint64_t sub_1000E1030()
{
  unint64_t result = qword_10094CFA0;
  if (!qword_10094CFA0)
  {
    sub_1000A1370(&qword_10094CFA8);
    sub_10009D8B8();
    sub_10009D934();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFA0);
  }
  return result;
}

unint64_t sub_1000E10AC()
{
  unint64_t result = qword_100968ED0;
  if (!qword_100968ED0)
  {
    sub_1000A1370(&qword_100968ED8);
    sub_10001BAB4(&qword_100968EE0, &qword_100968EE8, (void (*)(void))sub_1000E8DD0, (void (*)(void))sub_1000E0B70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968ED0);
  }
  return result;
}

unint64_t sub_1000E1160()
{
  unint64_t result = qword_100969F78;
  if (!qword_100969F78)
  {
    sub_1000A1370(&qword_100969F80);
    sub_1000A132C(&qword_100969F88, &qword_100969F90);
    sub_100005E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969F78);
  }
  return result;
}

unint64_t sub_1000E1200()
{
  unint64_t result = qword_100963078;
  if (!qword_100963078)
  {
    sub_1000A1370(&qword_100963080);
    sub_10006EA08(&qword_100963040, &qword_100963038, &qword_100963048, &qword_100963028);
    sub_10006E9B8(&qword_100963048, &qword_100963028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963078);
  }
  return result;
}

unint64_t sub_1000E12B4()
{
  unint64_t result = qword_100963088;
  if (!qword_100963088)
  {
    sub_1000A1370(&qword_100963090);
    sub_10006EA08(&qword_100963068, &qword_100963060, &qword_100963070, &qword_100963050);
    sub_10006E9B8(&qword_100963070, &qword_100963050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963088);
  }
  return result;
}

uint64_t sub_1000E1368(uint64_t result)
{
  *(unsigned char *)(result + 522) = 1;
  return result;
}

uint64_t sub_1000E1374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a65)
  {
    return sub_10001EA5C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  }
  else
  {
    sub_1000A06C0(a4, a5, a6 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000A06C0(a32, a33, a34 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E16B4(uint64_t result)
{
  *(unsigned char *)(result + 521) = 1;
  return result;
}

unint64_t sub_1000E16C0()
{
  unint64_t result = qword_10095E1D8;
  if (!qword_10095E1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E1D8);
  }
  return result;
}

unint64_t sub_1000E1714()
{
  unint64_t result = qword_10094D258;
  if (!qword_10094D258)
  {
    sub_1000A1370(&qword_10094CEF8);
    sub_1000E1A34();
    sub_1000A132C(&qword_10094D298, &qword_10094D2A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D258);
  }
  return result;
}

unint64_t sub_1000E17B4()
{
  unint64_t result = qword_100950448;
  if (!qword_100950448)
  {
    sub_1000A1370(&qword_100950370);
    sub_10007F9F0(&qword_100950450, &qword_100950358, (void (*)(void))sub_1000E1FD4);
    sub_1000A3A40((unint64_t *)&qword_100950478, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950448);
  }
  return result;
}

unint64_t sub_1000E188C()
{
  unint64_t result = qword_10095F2D8;
  if (!qword_10095F2D8)
  {
    sub_1000A1370(&qword_10095F2A0);
    sub_100019144(&qword_10095F2E0, &qword_10095F298, (void (*)(void))sub_100010FF4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F2D8);
  }
  return result;
}

uint64_t sub_1000E192C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100962E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000E1994()
{
  unint64_t result = qword_10095FA68;
  if (!qword_10095FA68)
  {
    sub_1000A1370(&qword_10095FA70);
    sub_1000E1CFC();
    sub_1000A132C(&qword_10095FA88, &qword_10095FA90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FA68);
  }
  return result;
}

unint64_t sub_1000E1A34()
{
  unint64_t result = qword_10094D260;
  if (!qword_10094D260)
  {
    sub_1000A1370(&qword_10094CEE8);
    sub_1000E1EB8();
    sub_1000E5E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D260);
  }
  return result;
}

uint64_t sub_1000E1AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009515D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000E1B18()
{
  unint64_t result = qword_1009515D8;
  if (!qword_1009515D8)
  {
    sub_1000A1370(&qword_1009515D0);
    sub_1000E20A4();
    sub_10000CD44((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009515D8);
  }
  return result;
}

uint64_t sub_1000E1BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100960090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E1C2C()
{
  return sub_100013B94(&qword_100962EA0, &qword_100960090, (void (*)(void))sub_1000E21B8);
}

unint64_t sub_1000E1C5C()
{
  unint64_t result = qword_100960450;
  if (!qword_100960450)
  {
    sub_1000A1370(&qword_100960448);
    sub_1000A132C(&qword_100960458, &qword_100960460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960450);
  }
  return result;
}

unint64_t sub_1000E1CFC()
{
  unint64_t result = qword_10095FA78;
  if (!qword_10095FA78)
  {
    sub_1000A1370(&qword_10095FA80);
    sub_1000A132C(&qword_10095FA18, &qword_10095FA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095FA78);
  }
  return result;
}

unint64_t sub_1000E1D9C()
{
  unint64_t result = qword_10094C660;
  if (!qword_10094C660)
  {
    sub_1000A1370(&qword_10094C650);
    sub_1000A132C(&qword_10094C668, &qword_10094C648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C660);
  }
  return result;
}

unint64_t sub_1000E1E3C()
{
  unint64_t result = qword_10095F340;
  if (!qword_10095F340)
  {
    sub_1000A1370(&qword_10095F348);
    sub_1000E16C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F340);
  }
  return result;
}

unint64_t sub_1000E1EB8()
{
  unint64_t result = qword_10094D268;
  if (!qword_10094D268)
  {
    sub_1000A1370(&qword_10094CEE0);
    sub_10009DB80(&qword_10094D270, &qword_10094CED8, (void (*)(void))sub_100013E18);
    sub_1000E60C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D268);
  }
  return result;
}

unint64_t sub_1000E1F58()
{
  unint64_t result = qword_100968FC0;
  if (!qword_100968FC0)
  {
    sub_1000A1370(&qword_100960050);
    sub_1000E0900();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968FC0);
  }
  return result;
}

uint64_t sub_1000E1FD4()
{
  return sub_10007F9F0(&qword_100950458, &qword_100950350, (void (*)(void))sub_1000E0AFC);
}

unint64_t sub_1000E2004()
{
  unint64_t result = qword_100952820;
  if (!qword_100952820)
  {
    sub_1000A1370(&qword_100952818);
    sub_1000A132C(&qword_100952828, &qword_100952830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100952820);
  }
  return result;
}

unint64_t sub_1000E20A4()
{
  unint64_t result = qword_10094C428;
  if (!qword_10094C428)
  {
    sub_1000A1370(&qword_10094C420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C428);
  }
  return result;
}

unint64_t sub_1000E2118()
{
  unint64_t result = qword_100954340;
  if (!qword_100954340)
  {
    sub_1000A1370(&qword_1009542D0);
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100954340);
  }
  return result;
}

uint64_t sub_1000E21B8()
{
  return sub_100013B94(&qword_100962EA8, &qword_100960088, (void (*)(void))sub_1000E2404);
}

unint64_t sub_1000E21E8()
{
  unint64_t result = qword_100968F60;
  if (!qword_100968F60)
  {
    sub_1000A1370(&qword_100968F58);
    sub_10000F604(&qword_100968F68, (void (*)(uint64_t))type metadata accessor for VerticalLayoutTrendView);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968F60);
  }
  return result;
}

unint64_t sub_1000E22B8()
{
  unint64_t result = qword_10094C6C0;
  if (!qword_10094C6C0)
  {
    sub_1000A1370(&qword_10094C678);
    sub_1000A132C(&qword_10094C6C8, &qword_10094C670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C6C0);
  }
  return result;
}

uint64_t sub_1000E2358(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E2384(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000E23B0()
{
  unint64_t result = qword_100950A70;
  if (!qword_100950A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950A70);
  }
  return result;
}

unint64_t sub_1000E2404()
{
  unint64_t result = qword_10094BFB0;
  if (!qword_10094BFB0)
  {
    sub_1000A1370(&qword_10094BFB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BFB0);
  }
  return result;
}

void sub_1000E2460()
{
  if (!qword_10094EB18)
  {
    type metadata accessor for ASFriendListDisplayMode(255);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094EB18);
    }
  }
}

void sub_1000E24B8()
{
  if (!qword_100968730)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100968730);
    }
  }
}

void sub_1000E2510()
{
  if (!qword_10096A380[0])
  {
    sub_1000A1370(&qword_100950B70);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, qword_10096A380);
    }
  }
}

void sub_1000E256C()
{
  if (!qword_10094C4B0)
  {
    sub_1000A1370(&qword_10094C4B8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094C4B0);
    }
  }
}

void sub_1000E25C8()
{
  if (!qword_1009607F8)
  {
    sub_1000A1370(&qword_100950278);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009607F8);
    }
  }
}

void sub_1000E2624()
{
  if (!qword_10094EB10)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094EB10);
    }
  }
}

void sub_1000E267C()
{
  if (!qword_10095A4F8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095A4F8);
    }
  }
}

void sub_1000E26D4()
{
  if (!qword_100962450)
  {
    sub_1000A1370(&qword_10094C028);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100962450);
    }
  }
}

unint64_t sub_1000E2730()
{
  unint64_t result = qword_1009530D8;
  if (!qword_1009530D8)
  {
    sub_1000A1370(&qword_1009530E0);
    sub_1000A132C(&qword_1009530E8, &qword_1009530F0);
    sub_1000C29A0((unint64_t *)&qword_1009530F8, &qword_100953100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009530D8);
  }
  return result;
}

uint64_t sub_1000E280C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E2854(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  char v3 = *(unsigned char *)(result + 16);
  long long v4 = *(_OWORD *)result;
  char v5 = v3;
  if (v2) {
    return v2(&v4);
  }
  return result;
}

uint64_t sub_1000E289C(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, (uint64_t *)&unk_1009633D0, sub_10001A134);
}

uint64_t sub_1000E28BC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    a5(a1);
    long long v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    swift_retain();
    v15(sub_10006D8C0, v16);
    swift_release();
    swift_release();
    sub_10006D814(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v17 = a1;
    char v18 = 0;
    return a3(&v17);
  }
}

uint64_t sub_1000E2A58(uint64_t a1)
{
  return sub_1000E28BC(*(void *)a1, *(unsigned char *)(a1 + 8), *(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1000E2A70(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1000E2A7C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1000E2A7C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *a5;
  a3(&v9, &v8);
  uint64_t v6 = v9;
  char v10 = 0;
  a1(&v9);

  return sub_10006D814(v6, 0);
}

uint64_t sub_1000E2B18(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for NoticePrivacyPreference);
}

uint64_t sub_1000E2B30(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for ServiceSubscription);
}

uint64_t sub_1000E2B48(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for ContentAvailability);
}

uint64_t sub_1000E2B60(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for WhatsNewSheet);
}

uint64_t sub_1000E2B78(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D798(a1, a2, (uint64_t (*)(void))&type metadata accessor for IntroSheet);
}

uint64_t sub_1000E2B94(uint64_t *a1)
{
  return sub_10000D00C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2B9C(uint64_t a1)
{
  return sub_1000E2BA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006DE44(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for NoticePrivacyPreference);
}

uint64_t sub_1000E2BD8(uint64_t a1)
{
  return sub_1000E2BE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006DE44(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ServiceSubscription);
}

uint64_t sub_1000E2C14(uint64_t a1)
{
  return sub_1000E2C1C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006DE44(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ContentAvailability);
}

uint64_t sub_1000E2C50(uint64_t a1)
{
  return sub_1000E2C58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006DE44(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for WhatsNewSheet);
}

uint64_t sub_1000E2C8C(uint64_t a1)
{
  return sub_1000E2C94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000E2C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006DE44(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for IntroSheet);
}

uint64_t sub_1000E2CC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_1000AFA94((uint64_t *)&unk_1009633D0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v3 + v7;
  uint64_t v9 = (uint64_t *)(v3 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return a3(a1, a2, v8, v10, v11);
}

uint64_t sub_1000E2D90(uint64_t a1, uint64_t a2)
{
  return sub_100005954(a1, a2, (uint64_t *)&unk_1009633D0, sub_1000E2E48);
}

uint64_t sub_1000E2DB0(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, (uint64_t *)&unk_1009633D0, sub_1000E2E48);
}

uint64_t sub_1000E2DD0(uint64_t a1, uint64_t a2)
{
  return sub_1000E2CC8(a1, a2, sub_1000E2E48);
}

uint64_t sub_1000E2DE8(uint64_t a1, uint64_t a2)
{
  return sub_1000E30E8(a1, a2, (uint64_t *)&unk_1009633D0, sub_1000E2E48);
}

uint64_t sub_1000E2E08(uint64_t a1, uint64_t a2)
{
  return sub_1006641F0(a1, a2, (uint64_t *)&unk_1009633D0, sub_1000E2E48);
}

uint64_t sub_1000E2E28(uint64_t a1, uint64_t a2)
{
  return sub_1006AF2D8(a1, a2, (uint64_t *)&unk_1009633D0, sub_1000E2E48);
}

uint64_t sub_1000E2E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008C8D68, (uint64_t)sub_1000DCC9C);
}

uint64_t sub_1000E2E70(uint64_t a1)
{
  return sub_10006D094(a1, (uint64_t *)&unk_1009633D0, (uint64_t)&unk_1008CA938, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E2E98(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for NoticePrivacyPreference, &qword_10095DDB8, (uint64_t)&unk_1008CA640, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E2EF8(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for ServiceSubscription, &qword_10095DDC0, (uint64_t)&unk_1008CA8C0, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E2F58(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for ContentAvailability, &qword_100950090, (uint64_t)&unk_1008CA6B8, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E2FB8(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for WhatsNewSheet, &qword_10095DDA8, (uint64_t)&unk_1008CA550, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E3018(uint64_t a1)
{
  return sub_10006D4D8(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void))&type metadata accessor for IntroSheet, &qword_10095DDB0, (uint64_t)&unk_1008CA5C8, (uint64_t)sub_10006D8BC);
}

uint64_t sub_1000E3078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, (uint64_t *)&unk_100966890, (uint64_t)&unk_1008C9308, (uint64_t)sub_1000DCCB4);
}

uint64_t sub_1000E30A0(uint64_t a1, uint64_t a2)
{
  return sub_100005954(a1, a2, &qword_100950248, sub_1000E30C0);
}

uint64_t sub_1000E30C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_100950248, (uint64_t)&unk_1008CA910, (uint64_t)sub_1000E2E70);
}

uint64_t sub_1000E30E8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1000E31AC(uint64_t a1, uint64_t a2)
{
  return sub_100005954(a1, a2, &qword_100950218, sub_1000E31EC);
}

uint64_t sub_1000E31CC(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, &qword_100950218, sub_1000E31EC);
}

uint64_t sub_1000E31EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_100950218, (uint64_t)&unk_1008CA618, (uint64_t)sub_1000E2E98);
}

uint64_t sub_1000E3214(uint64_t a1, uint64_t a2)
{
  return sub_100005830(a1, a2, (uint64_t *)&unk_100955730, sub_1000E3234);
}

uint64_t sub_1000E3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, (uint64_t *)&unk_100955730, (uint64_t)&unk_1008CA898, (uint64_t)sub_1000E2EF8);
}

uint64_t sub_1000E325C(uint64_t a1, uint64_t a2)
{
  return sub_100005954(a1, a2, &qword_100950088, sub_1000E329C);
}

uint64_t sub_1000E327C(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, &qword_100950088, sub_1000E329C);
}

uint64_t sub_1000E329C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_100950088, (uint64_t)&unk_1008CA690, (uint64_t)sub_1000E2F58);
}

uint64_t sub_1000E32C4(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, &qword_100959618, sub_1000E32E4);
}

uint64_t sub_1000E32E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_100959618, (uint64_t)&unk_1008CA528, (uint64_t)sub_1000E2FB8);
}

uint64_t sub_1000E330C(uint64_t a1, uint64_t a2)
{
  return sub_10006CFD0(a1, a2, &qword_100959620, sub_1000E332C);
}

uint64_t sub_1000E332C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10006CF14(a1, a2, a3, a4, a5, &qword_100959620, (uint64_t)&unk_1008CA5A0, (uint64_t)sub_1000E3018);
}

uint64_t sub_1000E3354()
{
  return sub_100007B80();
}

uint64_t sub_1000E336C(uint64_t a1)
{
  return sub_100039C34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1000E337C(uint64_t *a1)
{
  return sub_1000E339C(a1, &qword_10095FD60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002DD3C);
}

uint64_t sub_1000E339C(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(sub_1000AFA94(a2) - 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 48);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v11 = *a1;
  uint64_t v12 = *((unsigned __int8 *)a1 + 8);
  uint64_t v13 = *(unsigned __int8 *)(v3 + 40);

  return a3(v11, v12, v6, v7, v8, v13, v9, v10);
}

uint64_t sub_1000E3434(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE50);
}

uint64_t sub_1000E3440(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE40);
}

uint64_t sub_1000E344C(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE00);
}

uint64_t sub_1000E3458(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE10);
}

uint64_t sub_1000E3464(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE20);
}

uint64_t sub_1000E3470(uint64_t a1)
{
  return sub_10006DADC(a1, &qword_10095FE30);
}

uint64_t sub_1000E347C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000AFA94(&qword_10095FDF0) - 8);
  return sub_10002E6A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1000E3504(uint64_t a1)
{
  return sub_10004D310(a1, &qword_10095FD40, (uint64_t (*)(void))&type metadata accessor for PersonalizationInferenceResponse, &qword_10095FD50);
}

uint64_t sub_1000E352C(uint64_t a1)
{
  return sub_10004D310(a1, &qword_10095FD58, (uint64_t (*)(void))&type metadata accessor for ServiceSubscription, &qword_10095DDC0);
}

uint64_t sub_1000E3554(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003CBA0);
}

uint64_t sub_1000E356C(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003A3F4);
}

uint64_t sub_1000E3584(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003B180);
}

uint64_t sub_1000E359C(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003A014);
}

uint64_t sub_1000E35B4(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1000382D8);
}

uint64_t sub_1000E35CC(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100038880);
}

uint64_t sub_1000E35E4(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003D1C8);
}

uint64_t sub_1000E35FC(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003ADA0);
}

uint64_t sub_1000E3614(uint64_t a1)
{
  return sub_10003B560(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1000E3624(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10003B560);
}

uint64_t sub_1000E363C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009512E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E36A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009512E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E370C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E376C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095D148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E37D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1000E383C()
{
  if (!qword_100951050)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100951050);
    }
  }
}

unint64_t sub_1000E3894()
{
  unint64_t result = qword_100963D68;
  if (!qword_100963D68)
  {
    sub_1000A1370(&qword_100963D38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963D68);
  }
  return result;
}

uint64_t sub_1000E3908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100955F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E3970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100955F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000E3A9C()
{
  unint64_t result = qword_100967178;
  if (!qword_100967178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967178);
  }
  return result;
}

unint64_t sub_1000E3AF0()
{
  unint64_t result = qword_100967180;
  if (!qword_100967180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967180);
  }
  return result;
}

unint64_t sub_1000E3B4C()
{
  unint64_t result = qword_100967198;
  if (!qword_100967198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967198);
  }
  return result;
}

unint64_t sub_1000E3BA0()
{
  unint64_t result = qword_1009671A0;
  if (!qword_1009671A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671A0);
  }
  return result;
}

unint64_t sub_1000E3BFC()
{
  unint64_t result = qword_100967138;
  if (!qword_100967138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967138);
  }
  return result;
}

unint64_t sub_1000E3C50()
{
  unint64_t result = qword_100967140;
  if (!qword_100967140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967140);
  }
  return result;
}

unint64_t sub_1000E3CAC()
{
  unint64_t result = qword_1009671A8;
  if (!qword_1009671A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671A8);
  }
  return result;
}

unint64_t sub_1000E3D00()
{
  unint64_t result = qword_1009671B0;
  if (!qword_1009671B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671B0);
  }
  return result;
}

unint64_t sub_1000E3D5C()
{
  unint64_t result = qword_100967148;
  if (!qword_100967148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967148);
  }
  return result;
}

unint64_t sub_1000E3DB0()
{
  unint64_t result = qword_100967150;
  if (!qword_100967150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967150);
  }
  return result;
}

unint64_t sub_1000E3E0C()
{
  unint64_t result = qword_100967168;
  if (!qword_100967168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967168);
  }
  return result;
}

unint64_t sub_1000E3E60()
{
  unint64_t result = qword_100967170;
  if (!qword_100967170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967170);
  }
  return result;
}

unint64_t sub_1000E3EBC()
{
  unint64_t result = qword_1009671B8;
  if (!qword_1009671B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671B8);
  }
  return result;
}

unint64_t sub_1000E3F10()
{
  unint64_t result = qword_1009671C0;
  if (!qword_1009671C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671C0);
  }
  return result;
}

unint64_t sub_1000E3F6C()
{
  unint64_t result = qword_100967118;
  if (!qword_100967118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967118);
  }
  return result;
}

unint64_t sub_1000E3FC0()
{
  unint64_t result = qword_100967120;
  if (!qword_100967120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967120);
  }
  return result;
}

unint64_t sub_1000E401C()
{
  unint64_t result = qword_100967158;
  if (!qword_100967158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967158);
  }
  return result;
}

unint64_t sub_1000E4070()
{
  unint64_t result = qword_100967160;
  if (!qword_100967160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967160);
  }
  return result;
}

unint64_t sub_1000E40CC()
{
  unint64_t result = qword_100967128;
  if (!qword_100967128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967128);
  }
  return result;
}

unint64_t sub_1000E4120()
{
  unint64_t result = qword_100967130;
  if (!qword_100967130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967130);
  }
  return result;
}

unint64_t sub_1000E417C()
{
  unint64_t result = qword_1009671C8;
  if (!qword_1009671C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671C8);
  }
  return result;
}

unint64_t sub_1000E41D0()
{
  unint64_t result = qword_1009671D0;
  if (!qword_1009671D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009671D0);
  }
  return result;
}

unint64_t sub_1000E422C()
{
  unint64_t result = qword_100967188;
  if (!qword_100967188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967188);
  }
  return result;
}

unint64_t sub_1000E4280()
{
  unint64_t result = qword_100967190;
  if (!qword_100967190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967190);
  }
  return result;
}

void sub_1000E42D4()
{
  sub_1000E26D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for ActivitySharingFriendDetailAlertCoordinator()
{
  uint64_t result = qword_100962440;
  if (!qword_100962440) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E43BC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ActivitySharingTabViewHostingController()
{
  uint64_t result = qword_1009511F0;
  if (!qword_1009511F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SeymourNotificationResponseCoordinator()
{
  return self;
}

void sub_1000E44A8()
{
  sub_1000E2624();
  if (v0 <= 0x3F)
  {
    sub_1000E2460();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1000E4598()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E45F8()
{
  sub_100071954(v0[7]);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  return _swift_task_switch(sub_1000E4598, v1, v2);
}

uint64_t sub_1000E4660(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10000E424(a1, v4, v5, v6);
}

uint64_t sub_1000E4718()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  v3[3] = v2;
  return _swift_task_switch(sub_1000064F0, 0, 0);
}

uint64_t sub_1000E47C4()
{
  return sub_10003C0B0();
}

uint64_t sub_1000E47CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E47D4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000E47D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_1000AFA94(&qword_1009515A8);
  return sub_10003C360(a1, a2 + *(int *)(v4 + 44));
}

void sub_1000E4894()
{
  sub_1000E267C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlightDataProvider.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlightDataProvider.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for MindfulnessSessionFormattingManager()
{
  return self;
}

uint64_t type metadata accessor for ActivitySharingNavigationController()
{
  return self;
}

uint64_t type metadata accessor for ActivityDashboardImpressionsTracker()
{
  return self;
}

unint64_t sub_1000E4A5C()
{
  unint64_t result = qword_10095A038;
  if (!qword_10095A038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A038);
  }
  return result;
}

unint64_t sub_1000E4AB0()
{
  unint64_t result = qword_10095A040;
  if (!qword_10095A040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095A040);
  }
  return result;
}

uint64_t sub_1000E4B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E4AB0();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E4B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E4AB0();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

id sub_1000E4BCC()
{
  return sub_100021F9C(*v0);
}

uint64_t type metadata accessor for ActivitySharingCloudDeviceProvider()
{
  uint64_t result = qword_100958B50;
  if (!qword_100958B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E4C24()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000E4D18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000283AC, 0, 0);
}

uint64_t sub_1000E4E14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1000E4EC8(a1, v4, v5, v6);
}

uint64_t sub_1000E4EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000E4D18;
  return SecureCloudClient.activate()();
}

uint64_t sub_1000E4F68()
{
  *(void *)(v0[3] + OBJC_IVAR____TtC10FitnessApp34ActivitySharingCloudDeviceProvider_cloudDevices) = v0[6];
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000E4FDC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100368A90;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    uint64_t v5 = sub_1000E4F68;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000E5104()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000E4FDC;
  return SecureCloudClient.fetchCloudDevices()();
}

uint64_t type metadata accessor for ActivitySharingHighlightViewModel()
{
  uint64_t result = qword_100957CD0;
  if (!qword_100957CD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SeymourDiscoverySheetCoordinator()
{
  uint64_t result = qword_1009595D0;
  if (!qword_1009595D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E523C()
{
  return type metadata accessor for SeymourDiscoverySheetCoordinator();
}

void sub_1000E5244()
{
}

void sub_1000E52B0(uint64_t a1)
{
  sub_10003FC64(a1, v1, &qword_100959630, (uint64_t (*)(void))&type metadata accessor for ContentAvailability, &OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailablity);
}

void sub_1000E52F0(uint64_t a1)
{
  sub_10003FC64(a1, v1, &qword_100959628, (uint64_t (*)(void))&type metadata accessor for NoticePrivacyPreference, &OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_noticePrivacyPreference);
}

void sub_1000E5330(uint64_t a1)
{
  sub_10003FC64(a1, v1, &qword_100959608, (uint64_t (*)(void))&type metadata accessor for WhatsNewSheet, &OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion);
}

void sub_1000E5370(uint64_t a1)
{
  sub_10003FC64(a1, v1, &qword_100959610, (uint64_t (*)(void))&type metadata accessor for IntroSheet, &OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_introSheetConfiguration);
}

uint64_t sub_1000E53B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000DBD6C;
  return sub_100012BD0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1000E5484(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10005DB5C;
  return sub_100012BD0(a1, v4, v5, v6, v7, v9, v8);
}

void sub_1000E5558()
{
  sub_1000E94A8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for CatalogTipActivityTileDataModel()
{
  uint64_t result = qword_100967CA8;
  if (!qword_100967CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000E5650()
{
  unint64_t result = qword_100967D78;
  if (!qword_100967D78)
  {
    type metadata accessor for CatalogTipActivityTileDataModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967D78);
  }
  return result;
}

uint64_t sub_1000E56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001CAF4(a2, a3);
}

uint64_t sub_1000E56B4()
{
  return type metadata accessor for ActivityDashboardViewController();
}

uint64_t sub_1000E56C0(uint64_t a1)
{
  return sub_10002586C(a1, qword_100998180, (uint64_t (*)(void))sub_100043740);
}

uint64_t sub_1000E56E0(uint64_t a1)
{
  return sub_10002586C(a1, qword_100998168, (uint64_t (*)(void))sub_10004AF84);
}

void sub_1000E5700(uint64_t a1)
{
  sub_10001633C(a1, v1);
}

id sub_1000E5708()
{
  id result = sub_1000298FC();
  qword_10095F500 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E578C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  return _swift_task_switch(sub_100028584, v1, v2);
}

uint64_t sub_1000E57F0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 368);
    uint64_t v4 = *(void *)(v2 + 376);
    uint64_t v5 = sub_1004D587C;
  }
  else
  {
    (*(void (**)(void))(v2 + 384))();
    uint64_t v3 = *(void *)(v2 + 368);
    uint64_t v4 = *(void *)(v2 + 376);
    uint64_t v5 = sub_10000864C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000E5918(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100037F1C(a1, v4, v5, v6);
}

uint64_t sub_1000E59CC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 336);
  return _swift_task_switch(sub_100027F40, v1, v2);
}

uint64_t sub_1000E5A30()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_1004D59C0;
  }
  else
  {
    (*(void (**)(void))(v2 + 368))();
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_10000B878;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000E5B58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1000314B8(a1, v4, v5, v6);
}

uint64_t sub_1000E5C0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_100025928(a1, v4, v5, v6);
}

void sub_1000E5D14()
{
}

ValueMetadata *type metadata accessor for ActivityDashboardMetricCategory()
{
  return &type metadata for ActivityDashboardMetricCategory;
}

uint64_t sub_1000E5D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E5DA4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000E5DA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_1000AFA94(&qword_1009516F8);
  return sub_10004B4C4(a1, a2 + *(int *)(v4 + 44));
}

unint64_t sub_1000E5E60()
{
  unint64_t result = qword_10094D290;
  if (!qword_10094D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D290);
  }
  return result;
}

uint64_t sub_1000E5EB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000E5ED0()
{
  unint64_t result = qword_100955058;
  if (!qword_100955058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955058);
  }
  return result;
}

unint64_t sub_1000E5F24()
{
  unint64_t result = qword_100955070;
  if (!qword_100955070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955070);
  }
  return result;
}

uint64_t sub_1000E5F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E5F24();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E5FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E5F24();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E6040@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RingCoordinator();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 1;
  *a1 = result;
  return result;
}

void sub_1000E607C(void *a1, uint64_t a2)
{
}

unint64_t sub_1000E60C0()
{
  unint64_t result = qword_10094D288;
  if (!qword_10094D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D288);
  }
  return result;
}

uint64_t sub_1000E6114()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ActivityTypeKeyMigratorBridge()
{
  uint64_t result = qword_1009630D0;
  if (!qword_1009630D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E61E8()
{
  return type metadata accessor for ActivityTypeKeyMigratorBridge();
}

void sub_1000E61F0()
{
}

void sub_1000E621C(void *a1)
{
}

ValueMetadata *type metadata accessor for ActivityStatisticsCompilation()
{
  return &type metadata for ActivityStatisticsCompilation;
}

void sub_1000E6234()
{
  sub_1000E256C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000E6300()
{
  sub_100009930();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000E63B8()
{
  sub_1000E2510();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000E6470(unint64_t a1, void *a2)
{
  sub_10001A5D4(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1000E647C()
{
}

uint64_t sub_1000E64A4(uint64_t a1)
{
  return sub_100074698(a1);
}

uint64_t sub_1000E64BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SummaryUserProfileProvider.State()
{
  return &type metadata for SummaryUserProfileProvider.State;
}

unint64_t sub_1000E64E0()
{
  unint64_t result = qword_100966990;
  if (!qword_100966990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966990);
  }
  return result;
}

uint64_t sub_1000E6534()
{
  uint64_t result = type metadata accessor for SeymourAvailabilityManager.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SeymourAvailabilityManager(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_10094FFF8);
}

uint64_t sub_1000E6608()
{
  return type metadata accessor for SeymourAvailabilityManager(0);
}

uint64_t sub_1000E6634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeymourAvailabilityManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

NSString sub_1000E6698()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997810 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E6774@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for TrendsAvailabilityManager()
{
  return self;
}

void sub_1000E67D4()
{
}

uint64_t sub_1000E67F8()
{
  return sub_1000E6800();
}

uint64_t sub_1000E6800()
{
  uint64_t v0 = sub_1000AFA94(&qword_100955F38);
  __chkstk_darwin(v0 - 8);
  char v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Notification();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_100036394();
  return sub_10008DB18((uint64_t)v2, &qword_100955F38);
}

NSString sub_1000E68C8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100998540 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for LoadingCardHeightProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for LoadingCardHeightProvider.HeightKey()
{
  return &type metadata for LoadingCardHeightProvider.HeightKey;
}

unint64_t sub_1000E6994()
{
  unint64_t result = qword_10096A860;
  if (!qword_10096A860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A860);
  }
  return result;
}

unint64_t sub_1000E69E8()
{
  unint64_t result = qword_10096A820;
  if (!qword_10096A820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A820);
  }
  return result;
}

unint64_t sub_1000E6A3C()
{
  unint64_t result = qword_10096A850;
  if (!qword_10096A850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A850);
  }
  return result;
}

unint64_t sub_1000E6A98()
{
  unint64_t result = qword_10096A870;
  if (!qword_10096A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A870);
  }
  return result;
}

unint64_t sub_1000E6AEC()
{
  unint64_t result = qword_10096A878;
  if (!qword_10096A878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A878);
  }
  return result;
}

uint64_t sub_1000E6B44()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000E6B60()
{
  sub_10001B6B4(v0 + 16);
}

uint64_t type metadata accessor for ActivityStatisticsBuilder()
{
  return self;
}

uint64_t type metadata accessor for TrendsPairedWatchManager()
{
  return self;
}

uint64_t sub_1000E6BB0()
{
  Swift::Int v1 = sub_100044DCC((uint64_t)&off_1008B4AA0);
  swift_arrayDestroy();
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  return v0;
}

unint64_t sub_1000E6C08()
{
  unint64_t result = qword_10094D090;
  if (!qword_10094D090)
  {
    sub_1000A1370(&qword_10094D098);
    sub_1000D050C(&qword_10094D0A0, (void (*)(uint64_t))type metadata accessor for FriendsHighlightCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D090);
  }
  return result;
}

void sub_1000E6CAC()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FriendsHighlightCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000E6D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t type metadata accessor for ActivityDashboardContext()
{
  return self;
}

uint64_t sub_1000E6DD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10000D3F0(a1, v4, v5, v6);
}

void sub_1000E6E84()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TrendListMetric();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for TrendsFormattingManager()
{
  return self;
}

uint64_t sub_1000E6F84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TrainingLoadTrackingTip();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E6FC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10003737C(0, a1);
}

uint64_t sub_1000E6FD0()
{
  return sub_10002F208();
}

uint64_t sub_1000E6FE8()
{
  return sub_1000E6F84(&qword_100963D28);
}

uint64_t sub_1000E701C(uint64_t a1)
{
  return sub_1000257C4(a1, qword_100998560);
}

uint64_t sub_1000E7040(uint64_t a1)
{
  return sub_1000257C4(a1, qword_100998578);
}

uint64_t sub_1000E7064()
{
  return type metadata accessor for FriendsSetupCoordinator();
}

void sub_1000E706C()
{
  sub_10004122C(*(unsigned __int8 *)(v0 + 16));
}

void sub_1000E7078(char a1, char a2, uint64_t a3)
{
  sub_1000215BC(a1, a2, a3, v3);
}

uint64_t sub_1000E70C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_1000E7188(a1, v4, v5, v7, v6);
}

uint64_t sub_1000E7188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  sub_1000AFA94(&qword_10094B7A0);
  v5[6] = swift_task_alloc();
  return _swift_task_switch(sub_10001D518, 0, 0);
}

unint64_t sub_1000E7220()
{
  unint64_t result = qword_10096B2F0;
  if (!qword_10096B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B2F0);
  }
  return result;
}

uint64_t sub_1000E7274()
{
  uint64_t result = CTFontHasExuberatedLineHeight();
  byte_100998088 = result;
  return result;
}

uint64_t type metadata accessor for StackFormattingManager()
{
  return self;
}

void sub_1000E72C0()
{
  sub_10000E0E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for ScrollToTopCoordinator()
{
  uint64_t result = qword_10094BE20;
  if (!qword_10094BE20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MetricPlatterAnalytics()
{
  return self;
}

uint64_t sub_1000E73C0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ActivitySharingTabView()
{
  return &type metadata for ActivitySharingTabView;
}

uint64_t type metadata accessor for ActivityChartDataCache()
{
  uint64_t result = qword_10094C8C0;
  if (!qword_10094C8C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1000E7438()
{
  id result = sub_100045DAC();
  byte_10096A4E1 = result & 1;
  return result;
}

void *sub_1000E7480()
{
  return &protocol witness table for String;
}

uint64_t type metadata accessor for TrendsSplashVideoView()
{
  uint64_t result = qword_10094FD40;
  if (!qword_10094FD40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E7520(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10000C5A4(a1, v4, v5, v6);
}

void sub_1000E761C()
{
  sub_1000E25C8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_1000E76AC()
{
  unint64_t result = qword_100969EC8;
  if (!qword_100969EC8)
  {
    type metadata accessor for TipArtworkImageLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969EC8);
  }
  return result;
}

uint64_t sub_1000E7704@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TipArtworkImageLoader();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

NSString sub_1000E7744()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997918 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for OnboardingCoordinator()
{
  return self;
}

int8x8_t sub_1000E77B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = sub_100029CC0(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4 & 1;
    uint64x2_t v6 = (uint64x2_t)vdupq_n_s64(v4);
    int16x8_t v7 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_100772EE0), (int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_100772ED0));
    *(int8x8_t *)v7.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v7), (int8x8_t)0x1000100010001);
    int8x8_t result = vmovn_s16(v7);
    *(_DWORD *)(a2 + 1) = result.i32[0];
    *(unsigned char *)(a2 + 5) = BYTE5(v4) & 1;
    *(unsigned char *)(a2 + 6) = BYTE6(v4) & 1;
  }
  return result;
}

uint64_t sub_1000E7828(void *a1)
{
  return sub_10001D2E8(a1);
}

unint64_t sub_1000E78BC()
{
  unint64_t result = qword_100967260;
  if (!qword_100967260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967260);
  }
  return result;
}

unint64_t sub_1000E7910()
{
  unint64_t result = qword_100967258;
  if (!qword_100967258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967258);
  }
  return result;
}

unint64_t sub_1000E796C()
{
  unint64_t result = qword_100967270;
  if (!qword_100967270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967270);
  }
  return result;
}

unint64_t sub_1000E79C0()
{
  unint64_t result = qword_100967278;
  if (!qword_100967278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967278);
  }
  return result;
}

unint64_t sub_1000E7A14()
{
  unint64_t result = qword_100967238;
  if (!qword_100967238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967238);
  }
  return result;
}

void sub_1000E7A68(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10000C8F8(a1, a2, a3, a4, a5, v5, 1);
}

void sub_1000E7A88()
{
  sub_100058A7C(*(void *)(v0 + 16));
}

void sub_1000E7AA4()
{
  sub_10002A620(*(void *)(v0 + 16));
}

uint64_t sub_1000E7B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004C8C80);
}

uint64_t sub_1000E7B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004C8AAC);
}

uint64_t sub_1000E7B9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CatalogTipSectionItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000E7BF8()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActivityRingsCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000E7CEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E7D08(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivityRingsCardView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000E7D7C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ActivityRingsCardView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10002B178(v4, a1);
}

uint64_t sub_1000E7DEC()
{
  return sub_1000E7D08(sub_1000E7E04);
}

uint64_t sub_1000E7E04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityRingsCardView();
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t result = type metadata accessor for ActivityRingsCard();
  if (*(void *)(v3 + *(int *)(result + 36))) {
    *(unsigned char *)(*(void *)(a1 + *(int *)(v2 + 32) + 8) + 16) = 0;
  }
  return result;
}

uint64_t type metadata accessor for AccountDeviceProvider()
{
  return self;
}

uint64_t sub_1000E7E88(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  int16x8_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *int16x8_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1000E7F3C(a1, v4, v5, v6);
}

uint64_t sub_1000E7F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1000DBD6C;
  v6[17] = a4;
  return _swift_task_switch(sub_10002B710, 0, 0);
}

NSString sub_1000E7FE8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997938 = (uint64_t)result;
  return result;
}

void sub_1000E8020()
{
  sub_100008C84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for CHAwardsDataProvider()
{
  return self;
}

void sub_1000E80E8()
{
  sub_100007614();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for ActivityDataProvider()
{
  uint64_t result = qword_1009511A0;
  if (!qword_1009511A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E81F8()
{
  return type metadata accessor for ActivityDataProvider();
}

uint64_t sub_1000E8200()
{
  uint64_t result = type metadata accessor for TVConnectionManager.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TVConnectionManager(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100962088);
}

uint64_t sub_1000E82EC()
{
  return type metadata accessor for TVConnectionManager(0);
}

uint64_t sub_1000E82F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVConnectionManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E8358()
{
  return sub_10000A814(*(void *)(v0 + 16));
}

uint64_t sub_1000E8360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E837C()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E83DC()
{
  type metadata accessor for SmallAwardsCardView();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10005DB5C;
  return sub_10000EB00();
}

uint64_t sub_1000E84A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  return _swift_task_switch(sub_10001DEFC, v2, v1);
}

uint64_t sub_1000E85B0()
{
  uint64_t result = type metadata accessor for MetricFormattingHelper();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for MetricsDataProvider()
{
  uint64_t result = qword_10095C4B8;
  if (!qword_10095C4B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E86D4()
{
}

uint64_t sub_1000E86DC()
{
  return sub_10002D318();
}

unint64_t sub_1000E86F8()
{
  unint64_t result = qword_10095C4F0;
  if (!qword_10095C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095C4F0);
  }
  return result;
}

NSString sub_1000E874C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997958 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E8784()
{
  return sub_1000206B8(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1000E8790()
{
  sub_100019C28(v0, &OBJC_IVAR___CHHistoryDataProvider_hasInitialWorkouts);
}

uint64_t sub_1000E87B4()
{
  return sub_10002C78C();
}

void sub_1000E87BC()
{
}

void sub_1000E87C4()
{
  sub_10001F7DC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000E87CC(uint64_t a1)
{
  sub_10002A0C0(a1, v1);
}

void sub_1000E87D4(uint64_t a1)
{
  sub_1000207C0(a1, v1);
}

uint64_t sub_1000E87EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CustomizeSummaryTip();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E8834()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  return Image.init(_internalSystemName:)();
}

uint64_t sub_1000E8868()
{
  return sub_1000E87EC(&qword_1009613D0);
}

uint64_t type metadata accessor for CloudDeviceProvider()
{
  return self;
}

uint64_t sub_1000E88C0()
{
  return type metadata accessor for BalanceDataProvider();
}

void sub_1000E88C8()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery) = *(void *)(v0 + 24);
}

uint64_t sub_1000E88DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_100011FBC, v3, v2);
}

uint64_t sub_1000E89FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000DBD6C;
  return sub_100017F20(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000E8AD8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100029B0C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1000E8AE0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutEffortCacheIsPopulated) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000E8AF8()
{
  return sub_100027EFC(&OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek);
}

void sub_1000E8B18()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__isFetchingWorkouts) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000E8B30()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E8BA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10000D488(a1, v4, v5, v6);
}

uint64_t sub_1000E8C58()
{
  return sub_100022704();
}

uint64_t sub_1000E8C60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10000D7AC(a1, v4, v5, v6);
}

uint64_t sub_1000E8D14()
{
  return sub_10002287C();
}

void sub_1000E8D1C()
{
}

id sub_1000E8D34()
{
  id result = sub_100045DAC();
  byte_10096A4E2 = result & 1;
  return result;
}

uint64_t sub_1000E8D7C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000E8DD0()
{
  unint64_t result = qword_100968EF0;
  if (!qword_100968EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968EF0);
  }
  return result;
}

uint64_t sub_1000E8E24@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_1000AFA94(&qword_100957638);
  return sub_100040C04(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1000E8E70()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000E8E8C(uint64_t *a1@<X8>)
{
}

uint64_t type metadata accessor for TrendsDataProvider()
{
  uint64_t result = qword_100955F08;
  if (!qword_100955F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E8EE0()
{
  return sub_1000E8EE8();
}

uint64_t sub_1000E8EE8()
{
  return sub_10003102C();
}

uint64_t sub_1000E8F0C()
{
  return sub_10008A680(0x27u);
}

void sub_1000E8F14()
{
}

uint64_t sub_1000E8F1C()
{
  return sub_100040934((uint64_t)sub_1000E8F14, (uint64_t)&unk_1008C7558);
}

void sub_1000E8F3C()
{
}

void sub_1000E8F8C()
{
  sub_100070BE8(v0, 0x2Bu);
}

uint64_t sub_1000E8FAC()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider);
  *(void *)(v0 + 72) = v1;
  swift_retain();
  return _swift_task_switch(sub_1000129F4, v1, 0);
}

uint64_t sub_1000E903C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1000E90F0(a1, v4, v5, v6);
}

uint64_t sub_1000E90F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_1000AFA94(&qword_10095CBC8);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000E8FAC, 0, 0);
}

void sub_1000E91B4(uint64_t a1)
{
  sub_10002A028(a1, v1, 0x29u);
}

void sub_1000E91D4()
{
}

void sub_1000E91DC()
{
}

uint64_t sub_1000E91E4()
{
  return sub_100028CD0();
}

uint64_t sub_1000E91EC()
{
  return sub_100040934((uint64_t)sub_1000E91E4, (uint64_t)&unk_1008C7508);
}

uint64_t sub_1000E920C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogTipCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000E9270()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CatalogTipCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000E9350()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000E936C()
{
  sub_100008C84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000E9424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E9440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1000E94A8()
{
  if (!qword_100958328)
  {
    type metadata accessor for CatalogTipSection();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100958328);
    }
  }
}

uint64_t sub_1000E9500()
{
  uint64_t result = type metadata accessor for CatalogTipSectionItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000E95C0()
{
  unint64_t result = qword_100964D18;
  if (!qword_100964D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964D18);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDateCache()
{
  uint64_t result = qword_100953B38;
  if (!qword_100953B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E9660()
{
  return type metadata accessor for ActivityDateCache();
}

uint64_t sub_1000E968C@<X0>(uint64_t a1@<X8>)
{
  return sub_100063714(a1);
}

uint64_t type metadata accessor for DemoDataProvider()
{
  return self;
}

void sub_1000E9754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for RingsLayoutType()
{
  return &type metadata for RingsLayoutType;
}

void sub_1000E985C()
{
  sub_1000E9754(319, (unint64_t *)&qword_10094C600, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for TrendsCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000E9974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100960048);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012D7C(v1);
  uint64_t v6 = static Alignment.center.getter();
  sub_1000E0D58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v6, v7);
  return sub_10008DB18((uint64_t)v5, &qword_100960048);
}

uint64_t sub_1000E9A54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E9A70(uint64_t a1)
{
  return sub_100007F48(a1, (unsigned int *)&enum case for Font.TextStyle.title(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter, &qword_100966508);
}

uint64_t sub_1000E9A98()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000E9AB4()
{
  unint64_t result = qword_10094D078;
  if (!qword_10094D078)
  {
    sub_1000A1370(&qword_10094D080);
    sub_1000D050C(&qword_10094D088, (void (*)(uint64_t))type metadata accessor for FriendCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D078);
  }
  return result;
}

uint64_t sub_1000E9B58()
{
  uint64_t result = type metadata accessor for FriendCard();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000E9BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035307C);
}

uint64_t sub_1000E9C00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E9C60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000E9CC8()
{
  unint64_t result = qword_10094C798;
  if (!qword_10094C798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C798);
  }
  return result;
}

uint64_t sub_1000E9D1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E9D38()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000E9D54()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AwardsCard();
    if (v1 <= 0x3F)
    {
      sub_1000E0810();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1000E9E7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E9E98()
{
  uint64_t v1 = *(void *)(type metadata accessor for AwardsCardView() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10001BBB4(v2, v3);
}

id sub_1000E9F0C()
{
  id result = sub_100045DAC();
  byte_10096A4E0 = result & 1;
  return result;
}

ValueMetadata *type metadata accessor for AccountDevice()
{
  return &type metadata for AccountDevice;
}

uint64_t type metadata accessor for URLNavigator()
{
  return self;
}

void sub_1000E9F88()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LoadCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1000EA068()
{
  unint64_t result = qword_10094C4C0;
  if (!qword_10094C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4C0);
  }
  return result;
}

unint64_t sub_1000EA0C4()
{
  unint64_t result = qword_10094C560;
  if (!qword_10094C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C560);
  }
  return result;
}

unint64_t sub_1000EA118()
{
  unint64_t result = qword_10094C568;
  if (!qword_10094C568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C568);
  }
  return result;
}

void sub_1000EA16C()
{
  sub_100008C84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1000EA224()
{
  unint64_t result = qword_1009666A0;
  if (!qword_1009666A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666A0);
  }
  return result;
}

unint64_t sub_1000EA278()
{
  unint64_t result = qword_1009666E0;
  if (!qword_1009666E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666E0);
  }
  return result;
}

unint64_t sub_1000EA2CC()
{
  unint64_t result = qword_1009666C0;
  if (!qword_1009666C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666C0);
  }
  return result;
}

unint64_t sub_1000EA320()
{
  unint64_t result = qword_1009666B0;
  if (!qword_1009666B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666B0);
  }
  return result;
}

unint64_t sub_1000EA374()
{
  unint64_t result = qword_100966698;
  if (!qword_100966698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966698);
  }
  return result;
}

unint64_t sub_1000EA3C8()
{
  unint64_t result = qword_1009505D8;
  if (!qword_1009505D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009505D8);
  }
  return result;
}

unint64_t sub_1000EA41C()
{
  unint64_t result = qword_10095F850;
  if (!qword_10095F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F850);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsType()
{
  return &type metadata for TrendsType;
}

uint64_t sub_1000EA49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005DF8E4);
}

uint64_t sub_1000EA4B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FitnessAppContext()
{
  uint64_t result = qword_100966870;
  if (!qword_100966870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000EA5E0()
{
  return type metadata accessor for FitnessAppContext();
}

uint64_t sub_1000EA5F8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100013F60(a1, a2);
}

uint64_t sub_1000EA63C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10000AA0C;
  }
  else
  {
    uint64_t v5 = v2[6];
    uint64_t v4 = v2[7];
    uint64_t v6 = v2[5];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1006484F4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000EA780()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10064847C;
  }
  else {
    uint64_t v2 = sub_100008480;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000EA894(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005DB5C;
  return sub_100009C28(a1, v4, v5, v6, v7, v8);
}

void sub_1000EA95C()
{
  qword_100997890 = (uint64_t)&off_1008B3450;
}

void sub_1000EA984()
{
  sub_100019F04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(_DWORD *)(v0 + 40));
}

uint64_t sub_1000EA994(int a1, uint64_t a2)
{
  return sub_100028968(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1000EA99C()
{
}

void sub_1000EA9A4(uint64_t *a1)
{
}

void sub_1000EAA28()
{
}

uint64_t storeEnumTagSinglePayload for FitnessPlusCardDataProvider.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FitnessPlusCardDataProvider.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

unint64_t sub_1000EAAD8()
{
  unint64_t result = qword_10094C4C8;
  if (!qword_10094C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4C8);
  }
  return result;
}

const char *sub_1000EAB2C()
{
  unint64_t result = "Manatee";
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = "SummaryTabRedesign";
      break;
    case 3:
      unint64_t result = "PauseRings";
      break;
    case 4:
      unint64_t result = "Harmonia";
      break;
    case 5:
      unint64_t result = "Greymatter";
      break;
    default:
      unint64_t result = "ScheduledGoals";
      break;
  }
  return result;
}

const char *sub_1000EABB8()
{
  return "Fitness";
}

uint64_t type metadata accessor for FitnessPlusSubscriptionProvider()
{
  return self;
}

void sub_1000EABF4(char a1)
{
}

NSString sub_1000EABFC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100997898 = (uint64_t)result;
  return result;
}

uint64_t sub_1000EAC34(uint64_t a1)
{
  return sub_10000C9BC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000EAC50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10001CCB4(a1, v4, v5, v6);
}

uint64_t sub_1000EAD04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10001CCB4(a1, v4, v5, v6);
}

uint64_t sub_1000EADB8()
{
  uint64_t v2 = v0[55];
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[54];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[61];
  uint64_t v5 = v0[62];
  return _swift_task_switch(sub_1000386B8, v4, v5);
}

uint64_t sub_1000EAE44()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000EADB8;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = v2[55];
    uint64_t v6 = v2[56];
    uint64_t v8 = v2[54];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = v2[61];
    uint64_t v5 = v2[62];
    uint64_t v3 = sub_100655F44;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000EAF90(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_100036024(a1, v4, v5, v6);
}

uint64_t sub_1000EB044(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100014BD8(a1, v4, v5, v6);
}

uint64_t sub_1000EB0F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100014194(a1, v4, v5, v6);
}

uint64_t sub_1000EB1AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100013A64(a1, v4, v5, v6);
}

uint64_t sub_1000EB260(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100011C54(a1, v4, v5, v6);
}

uint64_t sub_1000EB314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100013174(a1, v4, v5, v6);
}

uint64_t sub_1000EB3C8()
{
  return sub_10001127C();
}

uint64_t sub_1000EB3E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_100012040(a1, v4, v5, v6);
}

uint64_t sub_1000EB498(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1000EB54C(a1, v4, v5, v6);
}

uint64_t sub_1000EB54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a1;
  v4[5] = a4;
  uint64_t v5 = sub_1000AFA94(&qword_10095FDF8);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_10000DC64, 0, 0);
}

unint64_t sub_1000EB610(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1000AFA94(&qword_100953718);

  return sub_10001468C(a1, a2, a3);
}

void sub_1000EB6C8(uint64_t a1)
{
  sub_100035B48(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000EB6D4()
{
  return sub_100007154();
}

uint64_t sub_1000EB6DC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10002AD10, 0, 0);
}

uint64_t sub_1000EB7DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = (void *)v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005DB5C;
  return sub_1000172E0(a1, v4, v5, v7, v6);
}

void sub_1000EB89C()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FitnessPlusUpNextCard();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000EB98C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EB9A8()
{
  return sub_1000060BC(sub_1000EB9C0);
}

uint64_t sub_1000EB9C0(uint64_t a1)
{
  uint64_t View = (int *)type metadata accessor for FitnessPlusUpNextView();
  uint64_t v3 = (char *)(a1 + View[6]);
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  LOBYTE(v10[0]) = v4;
  v10[1] = v5;
  sub_1000AFA94(&qword_10094DEE0);
  uint64_t result = State.wrappedValue.getter();
  if (LOBYTE(v9[0]) == 1)
  {
    uint64_t v7 = a1 + View[7];
    uint64_t result = type metadata accessor for FitnessPlusUpNextCard();
    if (*(unsigned char *)(v7 + *(int *)(result + 40)) == 1)
    {
      sub_1000AEF2C(a1 + View[8], (uint64_t)v10, &qword_10094C750);
      if (v11)
      {
        uint64_t v8 = sub_10007E4EC(v10, v11);
        memset(v9, 0, sizeof(v9));
        sub_100010B58(v7, (uint64_t)v9, *v8, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (void (*)(char *, char *))sub_1004FDF98, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
        sub_10008DB18((uint64_t)v9, &qword_100955A00);
        return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v10);
      }
      else
      {
        return sub_10008DB18((uint64_t)v10, &qword_10094C750);
      }
    }
  }
  return result;
}

uint64_t sub_1000EBB14()
{
  return sub_1000060BC(sub_100005A18);
}

uint64_t type metadata accessor for EngagementAppBadgeProvider()
{
  return self;
}

void sub_1000ECB14(id a1)
{
  unint64_t v1 = (void *)qword_10096B3B0;
  qword_10096B3B0 = (uint64_t)&off_1008DE948;
}

id sub_1000ED3F0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 formattingManager];
  uint64_t v6 = [v5 fitnessUIFormattingManager];
  uint64_t v7 = [*(id *)(a1 + 32) formattingManager];
  uint64_t v8 = [v7 fitnessUIFormattingManager];
  uint64_t v9 = [v8 unitManager];
  uint64_t v10 = [v6 localizedShortUnitStringForDistanceUnit:[v9 userDistanceUnitForDistanceType:3] textCase:1];

  uint64_t v11 = +[FIUIFormattingManager stringWithNumber:v4 decimalPrecision:1];

  uint64_t v12 = +[NSBundle mainBundle];
  uint64_t v13 = [v12 localizedStringForKey:@"SWIMMING_SPLITS_HEADER_UNIT_FORMAT_%@_%@" value:&stru_1008D8AB8 table:@"Localizable"];
  long long v14 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v13, v11, v10);

  return v14;
}

void sub_1000EDB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000EDB30(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setSplitsDictionary:v3];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000EDBF0;
  block[3] = &unk_1008AB8D8;
  objc_copyWeak(&v6, v2);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v6);
}

void sub_1000EDBF0(uint64_t a1)
{
  id v1 = objc_loadWeakRetained((id *)(a1 + 32));
  [v1 setSelectedPaceFormat:[v1 selectedPaceFormat]];
}

void sub_1000EE410(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10096B3C0;
  qword_10096B3C0 = (uint64_t)v1;

  [(id)qword_10096B3C0 setRingDiameter:22.0];
  id v3 = +[UIScreen mainScreen];
  [v3 scale];
  [(id)qword_10096B3C0 setAppIconWidth:v4 * 22.0];

  [(id)qword_10096B3C0 setGymKitIconWidth:22.0];
  [(id)qword_10096B3C0 setRingThickness:3.5];
  uint64_t v5 = +[UIFont fu_sausageFontOfSize:22.0];
  [(id)qword_10096B3C0 setValueFont:v5];

  id v6 = +[UIFont fu_sausageFontOfSize:18.0];
  [(id)qword_10096B3C0 setGoalDescriptionFont:v6];

  uint64_t v7 = +[UIFont fu_sausageFontOfSize:18.0];
  [(id)qword_10096B3C0 setPace100UnitFont:v7];

  uint64_t v8 = +[UIFont fu_sausageFontOfSize:16.0];
  [(id)qword_10096B3C0 setDateFont:v8];

  uint64_t v9 = [(id)qword_10096B3C0 dateFont];
  [(id)qword_10096B3C0 setWorkoutTypeFont:v9];

  id v11 = +[NSBundle mainBundle];
  uint64_t v10 = [v11 localizedStringForKey:@"FITNESS_UNIT_FORMAT_NO_SPACE" value:&stru_1008D8AB8 table:@"Localizable"];
  [(id)qword_10096B3C0 setUnitFormatString:v10];
}

void sub_1000EE65C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10096B3D0;
  qword_10096B3D0 = (uint64_t)v1;

  [(id)qword_10096B3D0 setRingDiameter:48.0];
  id v3 = +[UIScreen mainScreen];
  [v3 scale];
  [(id)qword_10096B3D0 setAppIconWidth:v4 * 48.0];

  [(id)qword_10096B3D0 setGymKitIconWidth:48.0];
  [(id)qword_10096B3D0 setRingThickness:6.0];
  uint64_t v5 = +[UIFont preferredFontForTextStyle:UIFontTextStyleTitle1];
  [v5 pointSize];
  double v7 = v6;

  uint64_t v8 = +[UIFont systemFontOfSize:UIFontSystemFontDesignRounded weight:v7 design:UIFontWeightRegular];
  [(id)qword_10096B3D0 setValueFont:v8];

  UIFontDescriptorAttributeName v25 = UIFontDescriptorFeatureSettingsAttribute;
  v22[0] = UIFontFeatureTypeIdentifierKey;
  v22[1] = UIFontFeatureSelectorIdentifierKey;
  v23[0] = &off_1008DE5C8;
  v23[1] = &off_1008DE5E0;
  uint64_t v9 = +[NSDictionary dictionaryWithObjects:v23 forKeys:v22 count:2];
  long long v24 = v9;
  uint64_t v10 = +[NSArray arrayWithObjects:&v24 count:1];
  uint64_t v26 = v10;
  id v11 = +[NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];

  uint64_t v12 = [(id)qword_10096B3D0 valueFont];
  uint64_t v13 = [v12 fontDescriptor];
  long long v14 = [v13 fontDescriptorByAddingAttributes:v11];

  long long v15 = [(id)qword_10096B3D0 valueFont];
  [v15 pointSize];
  uint64_t v16 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v14);
  [(id)qword_10096B3D0 setGoalDescriptionFont:v16];

  uint64_t v17 = +[UIFont fu_lightSausageFontOfSize:32.0];
  [(id)qword_10096B3D0 setPace100UnitFont:v17];

  char v18 = +[UIFont defaultFontForTextStyle:UIFontTextStyleFootnote];
  [(id)qword_10096B3D0 setDateFont:v18];

  long long v19 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  [(id)qword_10096B3D0 setWorkoutTypeFont:v19];

  BOOL v20 = +[NSBundle mainBundle];
  uint64_t v21 = [v20 localizedStringForKey:@"FITNESS_UNIT_FORMAT_NO_SPACE" value:&stru_1008D8AB8 table:@"Localizable"];
  [(id)qword_10096B3D0 setUnitFormatString:v21];
}

void sub_1000EEA28(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10096B3E0;
  qword_10096B3E0 = (uint64_t)v1;

  [(id)qword_10096B3E0 setRingDiameter:28.0];
  id v3 = +[UIScreen mainScreen];
  [v3 scale];
  [(id)qword_10096B3E0 setAppIconWidth:v4 * 28.0];

  [(id)qword_10096B3E0 setGymKitIconWidth:40.0];
  [(id)qword_10096B3E0 setRingThickness:4.0];
  uint64_t v5 = +[UIFont fu_lightSausageFontOfSize:30.0];
  [(id)qword_10096B3E0 setValueFont:v5];

  UIFontDescriptorAttributeName v22 = UIFontDescriptorFeatureSettingsAttribute;
  v19[0] = UIFontFeatureTypeIdentifierKey;
  v19[1] = UIFontFeatureSelectorIdentifierKey;
  v20[0] = &off_1008DE5C8;
  v20[1] = &off_1008DE5E0;
  double v6 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];
  uint64_t v21 = v6;
  double v7 = +[NSArray arrayWithObjects:&v21 count:1];
  uint64_t v23 = v7;
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];

  uint64_t v9 = [(id)qword_10096B3E0 valueFont];
  uint64_t v10 = [v9 fontDescriptor];
  id v11 = [v10 fontDescriptorByAddingAttributes:v8];

  uint64_t v12 = [(id)qword_10096B3E0 valueFont];
  [v12 pointSize];
  uint64_t v13 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v11);
  [(id)qword_10096B3E0 setGoalDescriptionFont:v13];

  long long v14 = +[UIFont fu_lightSausageFontOfSize:24.0];
  [(id)qword_10096B3E0 setPace100UnitFont:v14];

  long long v15 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  [(id)qword_10096B3E0 setDateFont:v15];

  uint64_t v16 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  [(id)qword_10096B3E0 setWorkoutTypeFont:v16];

  uint64_t v17 = +[NSBundle mainBundle];
  char v18 = [v17 localizedStringForKey:@"FITNESS_UNIT_FORMAT_NO_SPACE" value:&stru_1008D8AB8 table:@"Localizable"];
  [(id)qword_10096B3E0 setUnitFormatString:v18];
}

void sub_1000EEDF8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10096B3F0;
  qword_10096B3F0 = (uint64_t)v1;

  [(id)qword_10096B3F0 setRingDiameter:85.0];
  [(id)qword_10096B3F0 setRingThickness:10.0];
  id v3 = +[UIScreen mainScreen];
  [v3 scale];
  [(id)qword_10096B3F0 setAppIconWidth:v4 * 62.0];

  [(id)qword_10096B3F0 setGymKitIconWidth:60.0];
  uint64_t v5 = +[UIFont fu_sausageFontOfSize:30.0];
  [(id)qword_10096B3F0 setValueFont:v5];

  UIFontDescriptorAttributeName v22 = UIFontDescriptorFeatureSettingsAttribute;
  v19[0] = UIFontFeatureTypeIdentifierKey;
  v19[1] = UIFontFeatureSelectorIdentifierKey;
  v20[0] = &off_1008DE5C8;
  v20[1] = &off_1008DE5E0;
  double v6 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];
  uint64_t v21 = v6;
  double v7 = +[NSArray arrayWithObjects:&v21 count:1];
  uint64_t v23 = v7;
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];

  uint64_t v9 = [(id)qword_10096B3F0 valueFont];
  uint64_t v10 = [v9 fontDescriptor];
  id v11 = [v10 fontDescriptorByAddingAttributes:v8];

  uint64_t v12 = [(id)qword_10096B3F0 valueFont];
  [v12 pointSize];
  uint64_t v13 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v11);
  [(id)qword_10096B3F0 setGoalDescriptionFont:v13];

  long long v14 = +[UIFont fu_sausageFontOfSize:16.0];
  [(id)qword_10096B3F0 setPace100UnitFont:v14];

  long long v15 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  [(id)qword_10096B3F0 setDateFont:v15];

  uint64_t v16 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  [(id)qword_10096B3F0 setWorkoutTypeFont:v16];

  uint64_t v17 = +[NSBundle mainBundle];
  char v18 = [v17 localizedStringForKey:@"FITNESS_UNIT_FORMAT_NO_SPACE" value:&stru_1008D8AB8 table:@"Localizable"];
  [(id)qword_10096B3F0 setUnitFormatString:v18];
}

void sub_1000EF17C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10096B400;
  qword_10096B400 = (uint64_t)v1;

  [(id)qword_10096B400 setRingDiameter:62.0];
  [(id)qword_10096B400 setRingThickness:11.0];
  [(id)qword_10096B400 ringDiameter];
  double v4 = v3;
  uint64_t v5 = +[UIScreen mainScreen];
  [v5 scale];
  [(id)qword_10096B400 setAppIconWidth:v4 * v6];

  [(id)qword_10096B400 setGymKitIconWidth:60.0];
  double v7 = +[UIFont fu_sausageFontOfSize:30.0];
  [(id)qword_10096B400 setValueFont:v7];

  UIFontDescriptorAttributeName v24 = UIFontDescriptorFeatureSettingsAttribute;
  v21[0] = UIFontFeatureTypeIdentifierKey;
  v21[1] = UIFontFeatureSelectorIdentifierKey;
  v22[0] = &off_1008DE5C8;
  v22[1] = &off_1008DE5E0;
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:2];
  uint64_t v23 = v8;
  uint64_t v9 = +[NSArray arrayWithObjects:&v23 count:1];
  UIFontDescriptorAttributeName v25 = v9;
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:&v25 forKeys:&v24 count:1];

  id v11 = [(id)qword_10096B400 valueFont];
  uint64_t v12 = [v11 fontDescriptor];
  uint64_t v13 = [v12 fontDescriptorByAddingAttributes:v10];

  long long v14 = [(id)qword_10096B400 valueFont];
  [v14 pointSize];
  long long v15 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v13);
  [(id)qword_10096B400 setGoalDescriptionFont:v15];

  uint64_t v16 = +[UIFont fu_sausageFontOfSize:16.0];
  [(id)qword_10096B400 setPace100UnitFont:v16];

  uint64_t v17 = +[UIFont defaultFontForTextStyle:UIFontTextStyleSubheadline];
  [(id)qword_10096B400 setDateFont:v17];

  char v18 = +[UIFont defaultFontForTextStyle:UIFontTextStyleTitle2];
  [(id)qword_10096B400 setWorkoutTypeFont:v18];

  long long v19 = +[NSBundle mainBundle];
  BOOL v20 = [v19 localizedStringForKey:@"FITNESS_UNIT_FORMAT_NO_SPACE" value:&stru_1008D8AB8 table:@"Localizable"];
  [(id)qword_10096B400 setUnitFormatString:v20];
}

void sub_1000EF778(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = a2;
  double v6 = [v5 firstObject];
  [v6 doubleValue];
  CLLocationDegrees v8 = v7;
  uint64_t v9 = [v5 lastObject];

  [v9 doubleValue];
  CLLocationCoordinate2D v11 = CLLocationCoordinate2DMake(v8, v10);

  uint64_t v12 = [*(id *)(a1 + 32) startDate];
  id v14 = [v12 dateByAddingTimeInterval:*(double *)(a1 + 48) * (double)a3];

  id v13 = [objc_alloc((Class)CLLocation) initWithCoordinate:v14 altitude:v11.latitude horizontalAccuracy:v11.longitude verticalAccuracy:0.0 timestamp:0.0];
  [*(id *)(a1 + 40) addObject:v13];
}

BOOL sub_1000EF948(id a1, HKWorkoutEvent *a2, NSDictionary *a3)
{
  return [(HKWorkoutEvent *)a2 fiui_isDistanceGoalCompleteEvent];
}

id sub_1000F09E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  double v7 = [v5 objectForKeyedSubscript:a2];
  CLLocationDegrees v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

uint64_t sub_1000F103C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000F11A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000F1428(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL sub_1000F52A4(id a1, HKWorkoutEvent *a2, NSDictionary *a3)
{
  return (id)[(HKWorkoutEvent *)a2 type] == (id)3;
}

id sub_1000F7978(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setImage:a2];
}

id sub_1000F7A4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateHiddenAppBundleIds];
}

id sub_1000F822C(uint64_t a1)
{
  double v1 = 0.2;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 1.0;
  }
  return [*(id *)(a1 + 32) setAlpha:v1];
}

void sub_1000F8D9C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  _HKInitializeLogging();
  id v6 = HKLogSync;
  if (v5 || (a2 & 1) == 0)
  {
    if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_FAULT)) {
      sub_10071BE2C(a1, (uint64_t)v5, v6);
    }
  }
  else if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138543362;
    uint64_t v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[sharing-setup] %{public}@ Finished end to end Cloud sync", (uint8_t *)&v8, 0xCu);
  }
}

void sub_1000F9050()
{
  double v1 = FIUIHealthStoreForDevice();
  id v0 = v1;
  FIUIUserHasExistingMoveGoal();
}

void sub_1000F90EC(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  [*(id *)(*(void *)(a1 + 32) + 16) invalidate];
  if (v5)
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071BEB8((uint64_t)v5, v6);
    }
    a2 = 1;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F91E8;
  block[3] = &unk_1008ABAE8;
  char v10 = a2;
  uint64_t v7 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v9 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000F91E8(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 48);
  double v3 = [*(id *)(a1 + 32) delegate];
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  if (v2)
  {
    [v3 buddyControllerReleaseHoldAndSkip:v4];

    uint64_t v5 = *(void *)(a1 + 40);
    +[CHASActivitySetupOnboardingViewController performEndToEndCloudSyncOnSkippingSetupForHealthStore:v5];
  }
  else
  {
    [v3 buddyControllerReleaseHold:v4];
  }
}

void *sub_1000F93F8(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_10096B418)
  {
    v5[1] = _NSConcreteStackBlock;
    uint64_t v5[2] = 3221225472;
    v5[3] = sub_1000F9538;
    v5[4] = &unk_1008AB950;
    v5[5] = v5;
    long long v6 = off_1008ABB80;
    uint64_t v7 = 0;
    qword_10096B418 = _sl_dlopen();
    double v3 = (void *)v5[0];
    int v2 = (void *)qword_10096B418;
    if (qword_10096B418)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      double v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  int v2 = (void *)qword_10096B418;
LABEL_5:
  uint64_t result = dlsym(v2, "NRDevicePropertyIsAltAccount");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10096B410 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000F9538()
{
  uint64_t result = _sl_dlopen();
  qword_10096B418 = result;
  return result;
}

id sub_1000F95AC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (ACHShouldUseNewAwardsSystem())
  {
    id v5 = v3;
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v6 = [v3 earnedInstances];
    id v7 = [v6 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v19;
LABEL_5:
      uint64_t v10 = 0;
      while (1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        CLLocationCoordinate2D v11 = *(void **)(*((void *)&v18 + 1) + 8 * v10);
        uint64_t v12 = [v11 earnedDateComponents];
        unsigned __int8 v13 = [v12 isEqual:v4];

        if (v13) {
          break;
        }
        if (v8 == (id)++v10)
        {
          id v8 = [v6 countByEnumeratingWithState:&v18 objects:v23 count:16];
          if (v8) {
            goto LABEL_5;
          }
          goto LABEL_11;
        }
      }
      id v14 = v11;

      if (v14) {
        goto LABEL_14;
      }
    }
    else
    {
LABEL_11:
    }
    long long v15 = [v3 earnedInstances];
    id v14 = [v15 lastObject];

LABEL_14:
    id v22 = v14;
    uint64_t v16 = +[NSArray arrayWithObjects:&v22 count:1];
    id v5 = [v3 shallowCopyReplacingEarnedInstances:v16];
  }

  return v5;
}

id sub_1000F9780()
{
  id v0 = _HKActivityCacheDateComponentsFromCacheIndex();
  [v0 year];
  [v0 month];
  [v0 day];
  double v1 = ACHDateComponentsForYearMonthDay();

  return v1;
}

id sub_1000F97FC(void *a1)
{
  id v1 = a1;
  int v2 = +[NSCalendar hk_gregorianCalendar];
  id v3 = [v2 components:ACHCalendarUnitForDayMonthYear fromDate:v1];

  return v3;
}

void sub_1000F98BC(id a1)
{
  id v1 = +[UIScreen mainScreen];
  [v1 bounds];
  double v3 = v2;

  *(double *)&qword_10096B420 = v3 * 0.034;
  id v5 = +[UIScreen mainScreen];
  UIRoundToScreenScale();
  qword_10096B420 = v4;
}

void sub_1000F9B70(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5)
  {
    double v10 = kHKDefaultUserWeightKG;
    if (v6) {
      goto LABEL_3;
    }
LABEL_5:
    CLLocationCoordinate2D v11 = +[NSNumber numberWithDouble:v10 * kHKBaselineMETs / 3600.0];
    goto LABEL_6;
  }
  id v8 = +[HKUnit unitFromString:@"kg"];
  [v5 doubleValueForUnit:v8];
  double v10 = v9;

  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  CLLocationCoordinate2D v11 = 0;
LABEL_6:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F9CD4;
  block[3] = &unk_1008ABBC0;
  id v12 = *(id *)(a1 + 32);
  id v17 = v7;
  id v18 = v12;
  id v16 = v11;
  id v13 = v7;
  id v14 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1000F9CD4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1000F9DD8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a2;
  unint64_t v6 = a3;
  if (!(v5 | v6))
  {
    id v7 = *(void **)(a1 + 32);
    id v9 = 0;
    uint64_t v5 = [v7 _bodyMassCharacteristicQuantityWithError:&v9];
    unint64_t v6 = (unint64_t)v9;
  }
  id v8 = (void *)v6;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1000FA008(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v9 = [a3 lastObject];
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = [v9 quantity];
  (*(void (**)(uint64_t, void *, id))(v7 + 16))(v7, v8, v6);
}

void sub_1000FA774(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v11 = a2;
  [v5 centerXForElementAt:a3 width:25.0 percent:0.0];
  double v7 = v6;
  [*(id *)(a1 + 32) _yValueForCellAtIndex:a3];
  double v9 = v8;
  [v11 setFrame:v7, v8, 25.0, 25.0];
  [v11 setFullFrame:v7, v9, 25.0, 25.0];
  [*(id *)(a1 + 32) centerXForElementAt:a3 width:25.0 percent:1.0];
  [v11 setNarrowFrame:v10 + 25.0 * -0.5, v9, 25.0, 25.0];
}

void sub_1000FB3E4(id a1)
{
  qword_10096B430 = -[CHFriendListTableViewCell initWithFrame:]([CHFriendListTableViewCell alloc], "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);

  _objc_release_x1();
}

BOOL sub_1000FBFF4()
{
  id v0 = +[UIScreen mainScreen];
  [v0 bounds];
  BOOL v2 = v1 > 320.0;

  return v2;
}

double sub_1000FC040()
{
  return 16.0;
}

double sub_1000FC048()
{
  BOOL v0 = sub_1000FBFF4();
  double result = 112.0;
  if (v0) {
    return 128.0;
  }
  return result;
}

double sub_1000FC078()
{
  BOOL v0 = sub_1000FBFF4();
  double result = 152.0;
  if (v0) {
    return 168.0;
  }
  return result;
}

double sub_1000FC0A8()
{
  BOOL v0 = +[UIScreen mainScreen];
  [v0 bounds];
  double v2 = v1 * 0.5 + -48.0;

  return v2;
}

id sub_1000FC100()
{
  BOOL v0 = sub_1000FBFF4();
  uint64_t v1 = +[NSNumber numberWithDouble:16.0];
  double v2 = (void *)v1;
  if (v0)
  {
    double v3 = &off_1008DE998;
    uint64_t v10 = v1;
    uint64_t v4 = &off_1008DE988;
    uint64_t v5 = &v10;
    double v6 = &off_1008DE978;
  }
  else
  {
    uint64_t v9 = v1;
    uint64_t v4 = &off_1008DE978;
    double v6 = &off_1008DE9A8;
    uint64_t v5 = &v9;
    double v3 = &off_1008DE978;
  }
  v5[1] = (uint64_t)v6;
  uint64_t v5[2] = (uint64_t)v4;
  v5[3] = (uint64_t)v3;
  double v7 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:");

  return v7;
}

id sub_1000FC1EC()
{
  if (qword_10096B468 != -1) {
    dispatch_once(&qword_10096B468, &stru_1008ABCA0);
  }
  BOOL v0 = (void *)qword_10096B460;

  return v0;
}

void sub_1000FC240(id a1)
{
  uint64_t v1 = +[UIScreen mainScreen];
  [v1 bounds];
  double Width = CGRectGetWidth(v14);

  double v3 = Width * 0.1 + 16.0;
  if (!sub_1000FBFF4()) {
    double v3 = v3 + 4.0;
  }
  if (sub_1000FBFF4()) {
    double v4 = 168.0;
  }
  else {
    double v4 = 152.0;
  }
  uint64_t v5 = +[UIScreen mainScreen];
  [v5 scale];
  UIRoundToScale();
  double v7 = Width + -16.0 - v6;

  double v8 = +[NSNumber numberWithDouble:v3];
  uint64_t v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v4, v8);
  v13[1] = v9;
  uint64_t v10 = +[NSNumber numberWithDouble:v7];
  v13[2] = v10;
  uint64_t v11 = +[NSArray arrayWithObjects:v13 count:3];
  id v12 = (void *)qword_10096B460;
  qword_10096B460 = v11;
}

id sub_1000FC3C8(void *a1, void *a2, int a3, double a4)
{
  id v7 = a2;
  id v8 = a1;
  uint64_t v9 = +[NSLayoutConstraint constraintWithItem:v8 attribute:5 relatedBy:0 toItem:v7 attribute:5 multiplier:1.0 constant:16.0];
  if (a3) {
    uint64_t v10 = 3;
  }
  else {
    uint64_t v10 = 4;
  }
  uint64_t v11 = +[NSLayoutConstraint constraintWithItem:v8 attribute:v10 relatedBy:0 toItem:v7 attribute:v10 multiplier:1.0 constant:a4];
  id v12 = +[NSLayoutConstraint constraintWithItem:v8 attribute:6 relatedBy:0 toItem:v7 attribute:6 multiplier:1.0 constant:0.0];

  id v13 = +[UIScreen mainScreen];
  [v13 scale];
  long long v15 = +[NSLayoutConstraint constraintWithItem:v8 attribute:8 relatedBy:0 toItem:0 attribute:8 multiplier:1.0 constant:1.0 / v14];

  v18[0] = v9;
  v18[1] = v11;
  v18[2] = v12;
  v18[3] = v15;
  id v16 = +[NSArray arrayWithObjects:v18 count:4];

  return v16;
}

NSString *sub_1000FC8CC(uint64_t a1)
{
  return +[NSDateFormatter localizedStringFromDate:a1 dateStyle:3 timeStyle:0];
}

id sub_1000FC8E4(void *a1, void *a2, char a3)
{
  id v5 = a2;
  id v6 = a1;
  id v7 = +[ARUIRingGroup activityRingGroupForRingType:3];
  id v8 = [v7 forCompanion];

  LODWORD(v9) = 1145831424;
  [v8 setGroupDiameter:v9];
  LODWORD(v10) = 1121845248;
  [v8 setThickness:v10];
  LODWORD(v11) = 6.0;
  [v8 setInterspacing:v11];
  if (a3) {
    +[ARUISpriteSheetFactory wheelchairSharingSpriteSheet];
  }
  else {
  id v12 = +[ARUISpriteSheetFactory sharingSpriteSheet];
  }
  [v8 setSpriteSheet:v12];
  [v8 hk_configureWithActivitySummary:v6 animated:0];

  v29.width = 1200.0;
  v29.height = 1200.0;
  UIGraphicsBeginImageContextWithOptions(v29, 1, 0.0);
  id v13 = +[ARUIRingsImageFactory renderRingGroup:v8 withRenderer:0];
  [v13 drawInRect:CGRectMake(192.0, 123.0, 816.0, 816.0)];
  double v14 = +[NSDateFormatter localizedStringFromDate:v5 dateStyle:3 timeStyle:0];

  long long v15 = v14;
  id v16 = +[UIFont systemFontOfSize:60.0];
  id v17 = +[UIColor colorWithRed:0.682352941 green:0.705882353 blue:0.749019608 alpha:1.0];
  v26[0] = NSFontAttributeName;
  v26[1] = NSForegroundColorAttributeName;
  v27[0] = v16;
  v27[1] = v17;
  id v18 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
  id v19 = [objc_alloc((Class)NSAttributedString) initWithString:v15 attributes:v18];
  [(NSString *)v15 sizeWithAttributes:v18];
  double v21 = v20;
  double v23 = v22;

  [v19 drawInRect:(1200.0 - v21) * 0.5, (2139.0 - v23) * 0.5, v21, v23];
  UIFontDescriptorAttributeName v24 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v24;
}

id sub_1000FCBC0(void *a1)
{
  id v1 = a1;
  double v2 = +[NSDateFormatter localizedStringFromDate:v1 dateStyle:3 timeStyle:0];
  id v3 = v1;
  double v4 = +[NSCalendar currentCalendar];
  if ([v4 isDateInToday:v3])
  {
    id v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"RING_SHARING_TODAY" value:&stru_1008D8AB8 table:@"Localizable"];
  }
  else
  {
    id v5 = +[NSBundle mainBundle];
    id v7 = [v5 localizedStringForKey:@"RING_SHARING_%@" value:&stru_1008D8AB8 table:@"Localizable"];
    id v6 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v2);
  }

  return v6;
}

id sub_1000FCD04()
{
  v2[0] = UIActivityTypeAddToReadingList;
  v2[1] = UIActivityTypeOpenInIBooks;
  v2[2] = UIActivityTypeAssignToContact;
  v2[3] = UIActivityTypeAirDrop;
  v2[4] = UIActivityTypeSharePlay;
  BOOL v0 = +[NSArray arrayWithObjects:v2 count:5];

  return v0;
}

void sub_1000FD1CC(uint64_t a1)
{
  id v4 = +[UIScreen mainScreen];
  [v4 bounds];
  CGRectGetWidth(v6);
  double v2 = [*(id *)(a1 + 32) collectionView];
  UIRoundToViewScale();
  qword_10096B470 = v3;
}

id sub_1000FDCC0(void *a1)
{
  id v1 = a1;
  double v2 = [v1 bundleID];
  if ([v1 needsWatchIcon]) {
    CFStringRef v3 = @"watch";
  }
  else {
    CFStringRef v3 = @"phone";
  }
  [v1 preferredAppStoreIconWidth];
  uint64_t v5 = v4;

  CGRect v6 = +[NSString stringWithFormat:@"%@_%@_%.2f", v2, v3, v5];

  return v6;
}

void sub_1000FFC30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _toggleAdvancedMode];
}

void sub_1000FFC70(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateAdvanceViewButton:v3];
}

void sub_1000FFCCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_1000FFD88;
  v5[3] = &unk_1008ABD18;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1000FFD88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _setGoalSchedules:*(void *)(a1 + 32)];
    [v3 _showAdvancedViewIfNeeded];
    [v3 _setGoalQuantityForGoalView:v3[12]];
    id WeakRetained = v3;
  }
}

void sub_1000FFDFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000FFEE0;
    v7[3] = &unk_1008ABD90;
    objc_copyWeak(&v9, v4);
    id v8 = v3;
    [v6 _fetchActiveMoveGoalSampleWithCompletion:v7];

    objc_destroyWeak(&v9);
  }
}

void sub_1000FFECC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000FFEE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FFFB0;
  block[3] = &unk_1008ABD68;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_1000FFFB0(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && a1[4])
  {
    id v3 = WeakRetained;
    [WeakRetained[10] setAlpha:0.0];
    objc_storeStrong(v3 + 17, a1[5]);
    objc_storeStrong(v3 + 18, a1[4]);
    [v3 _setGoalQuantityForGoalView:v3[12]];
    [v3 updateContinueButton];
    id WeakRetained = v3;
  }
}

void sub_100100F84(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  if ((a2 & 1) == 0)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071BFDC();
    }
  }
}

intptr_t sub_100101874(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100101D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100101D2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100101E10;
    v7[3] = &unk_1008ABD90;
    objc_copyWeak(&v9, v4);
    id v8 = v3;
    [v6 _fetchActiveExerciseGoalSampleWithCompletion:v7];

    objc_destroyWeak(&v9);
  }
}

void sub_100101DFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100101E10(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100101EE0;
  block[3] = &unk_1008ABD68;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_100101EE0(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && a1[4])
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 19, a1[5]);
    objc_storeStrong(v3 + 20, a1[4]);
    [v3 _setGoalQuantityForGoalView:v3[13]];
    [v3 _showAdvancedViewIfNeeded];
    [v3 updateHeaderViewContent];
    [v3 updateContinueButton];
    id WeakRetained = v3;
  }
}

void sub_100102290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001022AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100102390;
    v7[3] = &unk_1008ABD90;
    objc_copyWeak(&v9, v4);
    id v8 = v3;
    [v6 _fetchActiveStandGoalSampleWithCompletion:v7];

    objc_destroyWeak(&v9);
  }
}

void sub_10010237C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100102390(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100102460;
  block[3] = &unk_1008ABD68;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_100102460(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && a1[4])
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 21, a1[5]);
    objc_storeStrong(v3 + 22, a1[4]);
    [v3 _setGoalQuantityForGoalView:v3[14]];
    [v3 _showAdvancedViewIfNeeded];
    [v3 updateHeaderViewContent];
    [v3 updateContinueButton];
    id WeakRetained = v3;
  }
}

void sub_1001026C0(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  _HKInitializeLogging();
  id v5 = HKLogSync;
  if (v4 || !a2)
  {
    if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_FAULT)) {
      sub_10071C088();
    }
  }
  else if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[sharing-setup] Finished end to end Cloud sync", v6, 2u);
  }
}

void sub_100102770(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  _HKInitializeLogging();
  id v5 = HKLogSync;
  if (a2)
  {
    if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[sharing-setup] Successfully forced nano sync after saving activity goals", v6, 2u);
    }
  }
  else if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_ERROR))
  {
    sub_10071C0FC();
  }
}

void *sub_100102C2C(uint64_t a1)
{
  double result = *(void **)(a1 + 32);
  uint64_t v3 = result[11];
  if (v3 != result[12])
  {
    if (v3 != result[13])
    {
      if (v3 != result[14]) {
        return result;
      }
      uint64_t v15 = [result currentStandGoal];
      uint64_t v16 = *(void *)(a1 + 32);
      id v17 = *(void **)(v16 + 280);
      *(void *)(v16 + 280) = v15;

      uint64_t v8 = *(void *)(a1 + 32);
      goto LABEL_16;
    }
    uint64_t v11 = [result currentExerciseGoal];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(void **)(v12 + 272);
    *(void *)(v12 + 272) = v11;

    uint64_t v8 = *(void *)(a1 + 32);
    if (*(void *)(v8 + 120) != 1)
    {
      [(id)v8 _removeAdvancedView];
      double v14 = *(void **)(a1 + 32);
      return _[v14 _displayStandGoalViewAnimated:1];
    }
LABEL_16:
    return _objc_msgSend((id)v8, "_saveGoalsAndDismiss", v7);
  }
  uint64_t v4 = [result currentMoveGoal];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 56);
  *(void *)(v5 + 56) = v4;

  uint64_t v8 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v8 + 288))
  {
    unsigned int v9 = [(id)v8 _isStandalonePhoneFitnessMode];
    uint64_t v8 = *(void *)(a1 + 32);
    if (v9) {
      goto LABEL_16;
    }
  }
  if (!*(void *)(v8 + 120)) {
    goto LABEL_16;
  }
  [(id)v8 _removeAdvancedView];
  double v10 = *(void **)(a1 + 32);

  return _[v10 _displayExerciseGoalViewAnimated:1];
}

void sub_100102DB8(uint64_t a1)
{
  double v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)v2[26];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100102EA0;
  v5[3] = &unk_1008ABED0;
  id v6 = *(id *)(a1 + 40);
  uint64_t v4 = [v3 hk_filter:v5];
  [v2 _setGoalSchedules:v4];

  [*(id *)(*(void *)(a1 + 32) + 8) deleteObject:*(void *)(a1 + 40) withCompletion:&stru_1008ABEF0];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_100102EA0(uint64_t a1, void *a2)
{
  return [a2 isEqual:*(void *)(a1 + 32)] ^ 1;
}

void sub_100102EC4(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  if (!a2)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C164();
    }
  }
}

BOOL sub_100103350(uint64_t a1, void *a2)
{
  return [a2 goalType] == *(id *)(a1 + 32);
}

id sub_100103CDC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 _formattingManager];
  id v6 = [v5 localizedStringWithMoveQuantity:v4 activityMoveMode:*(void *)(*(void *)(a1 + 32) + 32)];

  return v6;
}

id sub_100103D5C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 _formattingManager];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 32);
  [v4 _value];
  double v8 = v7;

  unsigned int v9 = [v5 localizedLongMoveUnitStringWithActivityMoveMode:v6 value:(unint64_t)v8];

  double v10 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v11 = [v10 localizedStringForKey:@"PER_DAY" value:&stru_1008D8AB8 table:@"ActivitySetup"];

  uint64_t v12 = +[NSString stringWithFormat:@"%@%@", v9, v11];
  id v13 = [v12 localizedUppercaseString];

  return v13;
}

id sub_100104018(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 _formattingManager];
  uint64_t v5 = [v4 localizedStringWithBriskMinutes:v3];

  return v5;
}

id sub_100104084(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 _formattingManager];
  [v3 _value];
  double v6 = v5;

  double v7 = [v4 localizedLongBriskMinutesUnitStringForValue:(unint64_t)v6];

  double v8 = +[NSBundle bundleForClass:objc_opt_class()];
  unsigned int v9 = [v8 localizedStringForKey:@"PER_DAY" value:&stru_1008D8AB8 table:@"ActivitySetup"];

  double v10 = +[NSString stringWithFormat:@"%@%@", v7, v9];
  uint64_t v11 = [v10 localizedUppercaseString];

  return v11;
}

id sub_100104328(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 _formattingManager];
  double v5 = [v4 localizedStringWithActiveHours:v3];

  return v5;
}

id sub_100104394(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 _formattingManager];
  [v3 _value];
  double v6 = v5;

  double v7 = [v4 localizedLongActiveHoursUnitStringForValue:(unint64_t)v6];

  double v8 = +[NSBundle bundleForClass:objc_opt_class()];
  unsigned int v9 = [v8 localizedStringForKey:@"PER_DAY" value:&stru_1008D8AB8 table:@"ActivitySetup"];

  double v10 = +[NSString stringWithFormat:@"%@%@", v7, v9];
  uint64_t v11 = [v10 localizedUppercaseString];

  return v11;
}

BOOL sub_10010477C(id a1, HKActivityGoalSchedule *a2)
{
  double v2 = a2;
  if ([(HKActivityGoalSchedule *)v2 goalType]) {
    BOOL v3 = [(HKActivityGoalSchedule *)v2 goalType] == (id)1;
  }
  else {
    BOOL v3 = 1;
  }

  return v3;
}

BOOL sub_100104848(id a1, HKActivityGoalSchedule *a2)
{
  return [(HKActivityGoalSchedule *)a2 goalType] == (id)2;
}

BOOL sub_1001048EC(id a1, HKActivityGoalSchedule *a2)
{
  return [(HKActivityGoalSchedule *)a2 goalType] == (id)3;
}

void sub_100104C64(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C1CC();
    }
  }
  double v8 = [v6 lastObject];
  unsigned int v9 = [v8 quantity];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1001050E8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C234();
    }
  }
  double v8 = [v6 lastObject];
  unsigned int v9 = [v8 quantity];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10010532C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C29C();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

unint64_t sub_100105480(uint64_t a1, void *a2)
{
  unint64_t result = (unint64_t)[a2 goalType];
  if (result <= 3) {
    *(unsigned char *)(*(void *)(a1 + 32) + *off_1008AC0A8[result]) = 1;
  }
  return result;
}

BOOL sub_100105654(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 goalType];
  id v5 = [v3 goalType];

  return v4 == v5;
}

void sub_1001056A8(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  if (!a2)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C304();
    }
  }
}

void sub_100105708(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  if (!a2)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C36C();
    }
  }
}

void *sub_100105F10(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_10096B488)
  {
    v5[1] = _NSConcreteStackBlock;
    uint64_t v5[2] = 3221225472;
    v5[3] = sub_100106050;
    void v5[4] = &unk_1008AB950;
    v5[5] = v5;
    long long v6 = off_1008AC090;
    uint64_t v7 = 0;
    qword_10096B488 = _sl_dlopen();
    id v3 = (void *)v5[0];
    double v2 = (void *)qword_10096B488;
    if (qword_10096B488)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      id v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  double v2 = (void *)qword_10096B488;
LABEL_5:
  unint64_t result = dlsym(v2, "NRDevicePropertyIsAltAccount");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10096B480 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100106050()
{
  uint64_t result = _sl_dlopen();
  qword_10096B488 = result;
  return result;
}

void sub_1001060DC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_1001060FC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100106124(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t sub_100106C9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 reachableEmailAddress];
  if (!v4)
  {
    id v5 = [v3 reachablePhoneNumber];
    uint64_t v4 = sub_100106E48(v5);
  }
  long long v6 = [v4 destinationStripped];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v7 = [*(id *)(a1 + 32) recipientView];
  double v8 = [v7 recipients];

  id v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v18;
    while (2)
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v18 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = [*(id *)(*((void *)&v17 + 1) + 8 * (void)v12) address];
        double v14 = [(id)v13 destinationStripped];

        LOBYTE(v13) = [v14 isEqualToString:v6];
        if (v13)
        {
          uint64_t v15 = 0;
          goto LABEL_13;
        }
        uint64_t v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }
  uint64_t v15 = 1;
LABEL_13:

  return v15;
}

id sub_100106E48(void *a1)
{
  id v1 = a1;
  double v2 = v1;
  if (v1
    && ([v1 UTF8String], (id v3 = (const char *)CPPhoneNumberCopyNormalized()) != 0))
  {
    uint64_t v4 = (char *)v3;
    CFStringRef v5 = CFStringCreateWithCString(0, v3, 0x8000100u);
    long long v6 = (const void *)CPPhoneNumberCopyHomeCountryCode();
    uint64_t v7 = (const void *)CFPhoneNumberCreate();
    String = (void *)CFPhoneNumberCreateString();
    if (!String) {
      String = (void *)CFPhoneNumberCreateString();
    }
    if (v7) {
      CFRelease(v7);
    }
    if (v6) {
      CFRelease(v6);
    }
    if (v5) {
      CFRelease(v5);
    }
    if (String)
    {
      id v9 = [String copy];
      CFRelease(String);
    }
    else
    {
      id v9 = 0;
    }
    free(v4);
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void sub_1001075FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100107624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100107634(uint64_t a1)
{
}

id sub_10010763C()
{
  BOOL v0 = +[IMServiceImpl iMessageService];
  id v1 = IMPreferredAccountForService();
  double v2 = [v1 displayName];

  return v2;
}

void sub_1001076A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = a3;
  id v6 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v19;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v18 + 1) + 8 * (void)v9);
        dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
        uint64_t v11 = *(void *)(a1 + 48);
        uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 128);
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        v14[2] = sub_100107864;
        v14[3] = &unk_1008AC120;
        id v15 = *(id *)(a1 + 56);
        long long v17 = *(_OWORD *)(a1 + 64);
        id v16 = *(id *)(a1 + 32);
        [v12 sendInviteToRecipient:v10 callerID:v11 serviceIdentifier:v5 withCompletion:v14];

        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v7);
  }
}

void sub_100107864(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = *(NSObject **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10010791C;
  v8[3] = &unk_1008AC0F8;
  char v11 = a2;
  long long v10 = *(_OWORD *)(a1 + 48);
  id v9 = v5;
  id v7 = v5;
  dispatch_sync(v6, v8);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10010791C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 40) + 8);
  char v2 = *(unsigned char *)(v1 + 24);
  if (v2) {
    char v2 = *(unsigned char *)(a1 + 56) != 0;
  }
  *(unsigned char *)(v1 + 24) = v2;
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v3 + 40);
  id v5 = (id *)(v3 + 40);
  uint64_t v4 = v6;
  if (!v6) {
    uint64_t v4 = *(void **)(a1 + 32);
  }
  objc_storeStrong(v5, v4);
}

uint64_t sub_100107958(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[4] + 16))(a1[4], *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24), *(void *)(*(void *)(a1[6] + 8) + 40));
}

void sub_100107D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100107DA0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _destinationMatchesCurrentAccountDestination:a2] ^ 1;
}

void sub_100107DC4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = [v5 domain];
  if ([v6 isEqualToString:@"CHInvitationDestinationError"])
  {
    id v7 = [v5 code];

    if (!v7)
    {
      ASLoggingInitialize();
      uint64_t v8 = ASLogDefault;
      if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_ERROR)) {
        sub_10071C3D4(v8);
      }
      id v9 = +[NSBundle mainBundle];
      long long v10 = [v9 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
      char v11 = +[NSBundle mainBundle];
      uint64_t v12 = [v11 localizedStringForKey:@"SHARING_CANNOT_INVITE_MESSAGE" value:&stru_1008D8AB8 table:@"Localizable"];
      uint64_t v13 = +[UIAlertController alertControllerWithTitle:v10 message:v12 preferredStyle:1];

      double v14 = +[NSBundle mainBundle];
      id v15 = [v14 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
      id v16 = +[UIAlertAction actionWithTitle:v15 style:0 handler:0];
      [v13 addAction:v16];

      long long v17 = [*(id *)(a1 + 32) parentViewController];
      [v17 presentViewController:v13 animated:1 completion:0];
LABEL_21:

      goto LABEL_22;
    }
  }
  else
  {
  }
  if (v5 || (a2 & 1) == 0)
  {
    long long v20 = [v5 domain];
    if ([v20 isEqualToString:IDSSendErrorDomain]) {
      BOOL v21 = [v5 code] == (id)1;
    }
    else {
      BOOL v21 = 0;
    }

    ASLoggingInitialize();
    double v22 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_ERROR)) {
      sub_10071C418((uint64_t)v5, v21, v22);
    }
    double v23 = +[NSBundle mainBundle];
    UIFontDescriptorAttributeName v24 = v23;
    if (v21) {
      CFStringRef v25 = @"SHARING_CANNOT_INVITE_MESSAGE";
    }
    else {
      CFStringRef v25 = @"SHARING_INVITE_ERROR";
    }
    uint64_t v13 = [v23 localizedStringForKey:v25 value:&stru_1008D8AB8 table:@"Localizable"];

    uint64_t v26 = +[NSBundle mainBundle];
    uint64_t v27 = [v26 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
    long long v17 = +[UIAlertController alertControllerWithTitle:v27 message:v13 preferredStyle:1];

    long long v28 = +[NSBundle mainBundle];
    CGSize v29 = [v28 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    long long v30 = +[UIAlertAction actionWithTitle:v29 style:0 handler:0];
    [v17 addAction:v30];

    long long v31 = [*(id *)(a1 + 32) parentViewController];
    [v31 presentViewController:v17 animated:1 completion:0];

    goto LABEL_21;
  }
  ASLoggingInitialize();
  long long v18 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = *(void *)(a1 + 40);
    int v34 = 138412290;
    uint64_t v35 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Sent invitation to destinations %@", (uint8_t *)&v34, 0xCu);
  }
  [*(id *)(a1 + 32) _dismissAndNotifyDelegate];
LABEL_22:
  long long v32 = [*(id *)(a1 + 32) navigationItem];
  long long v33 = [v32 rightBarButtonItem];
  [v33 setEnabled:1];
}

void sub_100108220(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v29 = 0;
    long long v30 = &v29;
    uint64_t v31 = 0x2020000000;
    uint64_t v32 = 0;
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    void v26[2] = sub_100108550;
    v26[3] = &unk_1008AC1C0;
    v26[4] = WeakRetained;
    long long v28 = &v29;
    id v27 = a1[4];
    [v3 enumerateKeysAndObjectsUsingBlock:v26];
    unint64_t v7 = v30[3];
    if (v7 >= (unint64_t)[a1[5] count])
    {
      id v17 = a1[4];
      BOOL v21 = _NSConcreteStackBlock;
      uint64_t v22 = 3221225472;
      double v23 = sub_10010878C;
      UIFontDescriptorAttributeName v24 = &unk_1008AC1E8;
      objc_copyWeak(&v25, v4);
      [v6 _sendInviteToRecipientsByService:v17 completion:&v21];
      [v6 _dismissAndNotifyDelegate:v21, v22, v23, v24];
      objc_destroyWeak(&v25);
    }
    else
    {
      uint64_t v8 = +[NSBundle mainBundle];
      id v9 = [v8 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
      long long v10 = +[NSBundle mainBundle];
      char v11 = [v10 localizedStringForKey:@"SHARING_CANNOT_INVITE_MESSAGE" value:&stru_1008D8AB8 table:@"Localizable"];
      uint64_t v12 = +[UIAlertController alertControllerWithTitle:v9 message:v11 preferredStyle:1];

      uint64_t v13 = +[NSBundle mainBundle];
      double v14 = [v13 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
      id v15 = +[UIAlertAction actionWithTitle:v14 style:0 handler:0];
      [v12 addAction:v15];

      id v16 = [v6 parentViewController];
      [v16 presentViewController:v12 animated:1 completion:0];
    }
    id v18 = objc_loadWeakRetained(v4);
    uint64_t v19 = [v18 navigationItem];
    long long v20 = [v19 rightBarButtonItem];
    [v20 setEnabled:1];

    _Block_object_dispose(&v29, 8);
  }
}

void sub_100108520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  objc_destroyWeak(v21);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_100108550(uint64_t a1, void *a2, void *a3)
{
  id v16 = a2;
  id v5 = a3;
  id v6 = objc_alloc_init((Class)NSMutableSet);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v17 objects:v23 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v18;
    do
    {
      for (int64_t i = 0; i != v9; int64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        if ([*(id *)(a1 + 32) _destinationMatchesCurrentAccountDestination:v12])
        {
          ASLoggingInitialize();
          uint64_t v13 = ASLogDefault;
          if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v22 = v12;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Skipping destination because it matches current account on this device: %@", buf, 0xCu);
          }
        }
        else
        {
          double v14 = [*(id *)(a1 + 32) _recipientFromDestination:v12];
          if (v14)
          {
            [v6 addObject:v14];
            ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
          }
          else
          {
            ASLoggingInitialize();
            id v15 = ASLogDefault;
            if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v22 = v12;
              _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Skipping destination because it no longer matches an CNComposeRecipient: %@", buf, 0xCu);
            }
          }
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v17 objects:v23 count:16];
    }
    while (v9);
  }

  [*(id *)(a1 + 40) setObject:v6 forKeyedSubscript:v16];
}

void sub_10010878C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (v5) {
    char v8 = 0;
  }
  else {
    char v8 = a2;
  }
  if ((v8 & 1) == 0 && WeakRetained)
  {
    id v9 = [v5 domain];
    if ([v9 isEqualToString:IDSSendErrorDomain]) {
      BOOL v10 = [v5 code] == (id)1;
    }
    else {
      BOOL v10 = 0;
    }

    ASLoggingInitialize();
    char v11 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      int v26 = 138412546;
      id v27 = v5;
      __int16 v28 = 1024;
      BOOL v29 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Error sending invite (%@), destination unreachable=%d", (uint8_t *)&v26, 0x12u);
    }
    uint64_t v12 = +[NSBundle mainBundle];
    uint64_t v13 = v12;
    if (v10) {
      CFStringRef v14 = @"SHARING_CANNOT_INVITE_MESSAGE";
    }
    else {
      CFStringRef v14 = @"SHARING_INVITE_ERROR";
    }
    id v15 = [v12 localizedStringForKey:v14 value:&stru_1008D8AB8 table:@"Localizable"];

    id v16 = +[UIApplication sharedApplication];
    long long v17 = [v16 windows];
    long long v18 = [v17 firstObject];
    long long v19 = [v18 rootViewController];

    long long v20 = +[NSBundle mainBundle];
    BOOL v21 = [v20 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
    uint64_t v22 = +[UIAlertController alertControllerWithTitle:v21 message:v15 preferredStyle:1];

    double v23 = +[NSBundle mainBundle];
    UIFontDescriptorAttributeName v24 = [v23 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    id v25 = +[UIAlertAction actionWithTitle:v24 style:0 handler:0];
    [v22 addAction:v25];

    [v19 presentViewController:v22 animated:1 completion:0];
  }
}

void sub_100108F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100108F9C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v22 = v6;
    id v23 = v5;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v25;
      do
      {
        char v11 = 0;
        do
        {
          if (*(void *)v25 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void **)(*((void *)&v24 + 1) + 8 * (void)v11);
          uint64_t v13 = objc_alloc_init(CHContactWithReachableDestination);
          CFStringRef v14 = [v12 destination];
          id v15 = [a1[4] objectForKeyedSubscript:v14];
          [(CHContactWithReachableDestination *)v13 setContact:v15];

          id v16 = [v12 preferredServiceIdentifier];
          [(CHContactWithReachableDestination *)v13 setServiceIdentifier:v16];

          long long v17 = [v12 additionalServiceIdentifiers];
          long long v18 = +[NSSet setWithArray:v17];
          [(CHContactWithReachableDestination *)v13 setAdditionalServiceIdentifiers:v18];

          long long v19 = [(CHContactWithReachableDestination *)v13 contact];

          if (v19)
          {
            [(CHContactWithReachableDestination *)v13 setReachableEmailAddress:v14];
          }
          else
          {
            long long v20 = [a1[5] objectForKeyedSubscript:v14];
            [(CHContactWithReachableDestination *)v13 setContact:v20];

            [(CHContactWithReachableDestination *)v13 setReachablePhoneNumber:v14];
          }
          [a1[6] _addSuggestedContact:v13, v22, v23, v24];
          [a1[6] setShownContacts:*((void *)a1[6] + 2)];

          char v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v9);
    }

    id v6 = v22;
    id v5 = v23;
  }
  else
  {
    ASLoggingInitialize();
    BOOL v21 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v30 = v5;
      __int16 v31 = 2112;
      id v32 = v6;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "No reachable destinations for (%@), error: %@", buf, 0x16u);
    }
  }
}

void sub_100109250(id *a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v7 = objc_alloc_init(CHContactWithReachableDestination);
    id v8 = [a1[4] objectForKeyedSubscript:v5];
    [(CHContactWithReachableDestination *)v7 setContact:v8];

    [(CHContactWithReachableDestination *)v7 setServiceIdentifier:v11];
    id v9 = [(CHContactWithReachableDestination *)v7 contact];

    if (v9)
    {
      [(CHContactWithReachableDestination *)v7 setReachableEmailAddress:v5];
    }
    else
    {
      uint64_t v10 = [a1[5] objectForKeyedSubscript:v5];
      [(CHContactWithReachableDestination *)v7 setContact:v10];

      [(CHContactWithReachableDestination *)v7 setReachablePhoneNumber:v5];
    }
    [WeakRetained _addSuggestedContact:v7];
    [WeakRetained setShownContacts:WeakRetained[2]];
  }
}

void sub_10010A210(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1[4] serviceIdentifier];
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x3032000000;
  v14[3] = sub_100107624;
  void v14[4] = sub_100107634;
  id v5 = [a1[5] objectForKeyedSubscript:v4];
  id v6 = v5;
  if (v5) {
    id v7 = v5;
  }
  else {
    id v7 = objc_alloc_init((Class)NSSet);
  }
  id v15 = v7;

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _OWORD v9[2] = sub_10010A390;
  v9[3] = &unk_1008AC2B0;
  id v10 = a1[5];
  uint64_t v13 = v14;
  id v8 = v4;
  id v11 = v8;
  id v12 = a1[6];
  [v3 enumerateKeysAndObjectsUsingBlock:v9];

  _Block_object_dispose(v14, 8);
}

void sub_10010A378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010A390(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v19 = 0;
  long long v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  id v7 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10010A580;
  v16[3] = &unk_1008AC288;
  id v8 = v5;
  id v17 = v8;
  long long v18 = &v19;
  [v7 enumerateKeysAndObjectsUsingBlock:v16];
  if ([v6 integerValue] == (id)1)
  {
    uint64_t v9 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setByAddingObject:v8];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    [*(id *)(a1 + 32) setObject:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) forKeyedSubscript:*(void *)(a1 + 40)];
    if (!*((unsigned char *)v20 + 24))
    {
      if (*(void *)(a1 + 48))
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10010A5CC;
        block[3] = &unk_1008ABBC0;
        id v15 = *(id *)(a1 + 48);
        id v13 = *(id *)(a1 + 40);
        id v14 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }

  _Block_object_dispose(&v19, 8);
}

void sub_10010A560(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_10010A580(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id result = [a3 containsObject:*(void *)(a1 + 32)];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_10010A5CC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_10010A5E4(uint64_t a1)
{
}

void sub_10010A5EC(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableSet);
  id v3 = *(void **)(a1 + 32);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10010A7FC;
  v22[3] = &unk_1008AC328;
  id v4 = v2;
  id v23 = v4;
  [v3 enumerateKeysAndObjectsUsingBlock:v22];
  id v5 = objc_alloc_init((Class)NSMutableDictionary);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v19;
    do
    {
      for (int64_t i = 0; i != v8; int64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        id v12 = [*(id *)(a1 + 40) _preferredServiceIdentifierForDestination:v11 inReachableDestinationsByService:*(void *)(a1 + 32) reachableDestinationsByService:v18];
        id v13 = [v5 objectForKeyedSubscript:v12];
        id v14 = v13;
        if (v13) {
          id v15 = v13;
        }
        else {
          id v15 = objc_alloc_init((Class)NSSet);
        }
        id v16 = v15;

        id v17 = [v16 setByAddingObject:v11];

        [v5 setObject:v17 forKeyedSubscript:v12];
      }
      id v8 = [v6 countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v8);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10010A7FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a3 allObjects];
  [v3 addObjectsFromArray:v4];
}

void sub_10010AAA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = [v5 firstObject];
    id v8 = [v7 destination];
    unsigned int v9 = [v8 isEqualToString:*(void *)(a1 + 32)];

    if (v9) {
      [*(id *)(a1 + 40) setTintColor:*(void *)(a1 + 48)];
    }
  }
  else
  {
    ASLoggingInitialize();
    uint64_t v10 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412546;
      id v12 = v5;
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "No reachable destinations for (%@), error: %@", (uint8_t *)&v11, 0x16u);
    }
  }
}

id sub_10010ABCC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setTintColor:*(void *)(a1 + 40)];
}

void sub_10010B8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010B8F0(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  id v6 = *(void **)(a1 + 32);
  id v7 = a2;
  id v10 = [v6 contact];
  id v8 = [v7 contact];

  unsigned __int8 v9 = [v10 isEqual:v8];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v9;
  *a4 = v9;
}

int64_t sub_10010BBFC(id a1, CHContactWithReachableDestination *a2, CHContactWithReachableDestination *a3)
{
  id v4 = a3;
  id v5 = [(CHContactWithReachableDestination *)a2 contact];
  id v6 = +[CNContactFormatter stringFromContact:v5 style:0];

  id v7 = [(CHContactWithReachableDestination *)v4 contact];

  id v8 = +[CNContactFormatter stringFromContact:v7 style:0];

  id v9 = [v6 compare:v8];
  return (int64_t)v9;
}

void sub_10010D854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10010D870(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v13 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (v10) {
    [*(id *)(a1 + 32) setAverageHeartRate:v10];
  }
  if (v13) {
    [*(id *)(a1 + 32) setHeartRateReadings:];
  }
  if (v9) {
    [*(id *)(a1 + 32) setRecoveryHeartRateReadings:v9];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10010DEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 248), 8);
  _Block_object_dispose((const void *)(v29 - 200), 8);
  _Block_object_dispose((const void *)(v29 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10010DF48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10010DF58(uint64_t a1)
{
}

void sub_10010DF60(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a7;
  if (v14 && v15)
  {
    long long v18 = *(void **)(a1 + 32);
    uint64_t v19 = *(void *)(a1 + 40);
    long long v20 = [v15 startDate];
    LODWORD(v18) = [v18 _activeDateIntervals:v19 containsDate:v20];

    if (v18)
    {
      long long v21 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      if (!v21)
      {
        id v22 = objc_alloc_init((Class)NSMutableArray);
        uint64_t v23 = *(void *)(*(void *)(a1 + 80) + 8);
        long long v24 = *(void **)(v23 + 40);
        *(void *)(v23 + 40) = v22;

        long long v21 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      }
      id v25 = objc_alloc((Class)HKHeartRateSummaryReading);
      long long v26 = [v15 startDate];
      id v27 = [v25 initWithDate:v26 quantity:v14];
      [v21 addObject:v27];
    }
  }
  else
  {
    _HKInitializeLogging();
    __int16 v28 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C4A4((uint64_t)v17, v28);
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), a7);
  }
  if (a6)
  {
    uint64_t v29 = *(void **)(a1 + 48);
    if (v29)
    {
      id v30 = +[HKUnit _countPerMinuteUnit];
      [v29 doubleValueForUnit:v30];
      uint64_t v31 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      uint64_t v32 = *(void *)(*(void *)(a1 + 96) + 8);
      long long v33 = *(void **)(v32 + 40);
      *(void *)(v32 + 40) = v31;
    }
    else
    {
      if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
      {
LABEL_29:
        dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
        goto LABEL_30;
      }
      id v51 = v17;
      id v52 = v16;
      id v53 = v13;
      id v30 = objc_alloc_init((Class)NSMutableData);
      long long v54 = 0u;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      id v34 = *(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      id v35 = [v34 countByEnumeratingWithState:&v54 objects:v58 count:16];
      if (v35)
      {
        id v36 = v35;
        uint64_t v37 = *(void *)v55;
        do
        {
          for (int64_t i = 0; i != v36; int64_t i = (char *)i + 1)
          {
            if (*(void *)v55 != v37) {
              objc_enumerationMutation(v34);
            }
            uint64_t v39 = *(void **)(*((void *)&v54 + 1) + 8 * i);
            uint64_t v40 = [v39 quantity];
            [v40 _beatsPerMinute];
            double v42 = v41;

            uint64_t v43 = [v39 date];
            [v30 fiui_appendHeartRate:v43 date:v42];
          }
          id v36 = [v34 countByEnumeratingWithState:&v54 objects:v58 count:16];
        }
        while (v36);
      }

      uint64_t v44 = *(void **)(a1 + 56);
      if (!v44) {
        uint64_t v44 = *(void **)(a1 + 64);
      }
      long long v33 = [v44 startDate];
      id v13 = v53;
      int64_t v45 = *(void **)(a1 + 56);
      if (!v45) {
        int64_t v45 = *(void **)(a1 + 64);
      }
      uint64_t v46 = [v45 endDate];
      id v17 = v51;
      id v16 = v52;
      [v30 fiui_weightedAverageHeartRateWithStartDate:v33 endDate:v46];
      if (v47 != 0.0)
      {
        uint64_t v48 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
        uint64_t v49 = *(void *)(*(void *)(a1 + 96) + 8);
        unint64_t v50 = *(void **)(v49 + 40);
        *(void *)(v49 + 40) = v48;
      }
    }

    goto LABEL_29;
  }
LABEL_30:
}

void sub_10010E304(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a7;
  if (v14 && v15)
  {
    long long v18 = *(void **)(a1 + 32);
    uint64_t v19 = [v15 startDate];
    LODWORD(v18) = [v18 containsDate:v19];

    if (v18)
    {
      long long v20 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      if (!v20)
      {
        id v21 = objc_alloc_init((Class)NSMutableArray);
        uint64_t v22 = *(void *)(*(void *)(a1 + 48) + 8);
        uint64_t v23 = *(void **)(v22 + 40);
        *(void *)(v22 + 40) = v21;

        long long v20 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      }
      id v24 = objc_alloc((Class)HKHeartRateSummaryReading);
      id v25 = [v15 startDate];
      id v26 = [v24 initWithDate:v25 quantity:v14];
      [v20 addObject:v26];
    }
  }
  else
  {
    _HKInitializeLogging();
    id v27 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C51C((uint64_t)v17, v27);
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a7);
  }
  if (a6) {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  }
}

uint64_t sub_10010E4A0(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(a1[4] + 16))(a1[4], *(void *)(*(void *)(a1[5] + 8) + 40), *(void *)(*(void *)(a1[6] + 8) + 40), *(void *)(*(void *)(a1[7] + 8) + 40), *(void *)(*(void *)(a1[8] + 8) + 40));
}

void sub_10010E6E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_10010E6FC(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setDistanceSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10010EB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_10010EB30(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v8)
  {
    id v6 = [*(id *)(a1 + 32) totalDistance];
    [v6 setObject:v8 forKeyedSubscript:*(void *)(a1 + 40)];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 48) workoutActivity:*(void *)(a1 + 56)];
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

void sub_10010EBE8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v23 = a3;
  id v5 = +[HKUnit meterUnit];
  id v6 = +[HKQuantity quantityWithUnit:v5 doubleValue:0.0];

  long long v37 = 0u;
  long long v38 = 0u;
  long long v36 = 0u;
  long long v35 = 0u;
  id obj = v4;
  id v7 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v25 = *(void *)v36;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v36 != v25) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v35 + 1) + 8 * (void)v9);
        long long v31 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        id v11 = *(id *)(a1 + 32);
        id v12 = [v11 countByEnumeratingWithState:&v31 objects:v39 count:16];
        if (v12)
        {
          id v13 = v12;
          uint64_t v14 = *(void *)v32;
          do
          {
            id v15 = 0;
            do
            {
              if (*(void *)v32 != v14) {
                objc_enumerationMutation(v11);
              }
              id v16 = *(void **)(*((void *)&v31 + 1) + 8 * (void)v15);
              id v17 = [v10 startDate];
              LODWORD(v16) = [v16 containsDate:v17];

              if (v16)
              {
                long long v18 = [v10 quantity];
                uint64_t v19 = [v6 _quantityByAddingQuantity:v18];

                id v6 = (void *)v19;
              }
              id v15 = (char *)v15 + 1;
            }
            while (v13 != v15);
            id v13 = [v11 countByEnumeratingWithState:&v31 objects:v39 count:16];
          }
          while (v13);
        }

        id v9 = (char *)v9 + 1;
      }
      while (v9 != v8);
      id v8 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
    }
    while (v8);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010EEC4;
  block[3] = &unk_1008ABBC0;
  id v20 = *(id *)(a1 + 40);
  id v28 = v6;
  id v29 = v23;
  id v30 = v20;
  id v21 = v23;
  id v22 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10010EEC4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_10010F0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10010F0F8(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a7;
  if (v14 && v15)
  {
    id v29 = v16;
    id v30 = v13;
    long long v18 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    if (!v18)
    {
      id v19 = objc_alloc_init((Class)NSMutableArray);
      uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 8);
      id v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      long long v18 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    }
    uint64_t v22 = *(void *)(a1 + 32);
    id v23 = [v15 startDate];
    id v24 = [v15 endDate];
    uint64_t v25 = +[HKQuantitySample quantitySampleWithType:v22 quantity:v14 startDate:v23 endDate:v24];
    [v18 addObject:v25];

    id v16 = v29;
    id v13 = v30;
    if (!a6) {
      goto LABEL_11;
    }
LABEL_10:
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10010F318;
    block[3] = &unk_1008AC170;
    id v32 = *(id *)(a1 + 40);
    long long v33 = *(_OWORD *)(a1 + 48);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    goto LABEL_11;
  }
  _HKInitializeLogging();
  id v26 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
    sub_10071C594(a1, (uint64_t)v17, v26);
  }
  uint64_t v27 = *(void *)(*(void *)(a1 + 48) + 8);
  id v28 = *(void **)(v27 + 40);
  *(void *)(v27 + 40) = 0;

  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a7);
  if (a6) {
    goto LABEL_10;
  }
LABEL_11:
}

uint64_t sub_10010F318(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[4] + 16))(a1[4], *(void *)(*(void *)(a1[5] + 8) + 40), *(void *)(*(void *)(a1[6] + 8) + 40));
}

void sub_10010F578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_10010F594(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = +[NSPredicate predicateWithBlock:&stru_1008AC580];
    id v9 = [v5 filteredArrayUsingPredicate:v7];

    [*(id *)(a1 + 32) setCadenceSamples:v9];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  else
  {
    id v9 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

BOOL sub_10010F674(id a1, HKQuantitySample *a2, NSDictionary *a3)
{
  id v3 = [(HKQuantitySample *)a2 fiui_dateInterval];
  [v3 duration];
  BOOL v5 = v4 < 5.0;

  return v5;
}

void sub_10010F9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
}

void sub_10010F9E8(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setStrokeSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10010FA8C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010FB64;
  block[3] = &unk_1008ABBC0;
  id v8 = *(id *)(a1 + 32);
  id v13 = v7;
  id v14 = v8;
  id v12 = v6;
  id v9 = v7;
  id v10 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10010FB64(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_10010FE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
}

void sub_10010FE60(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setPaceSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100110140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_100110160(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setPowerSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1001103EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_100110408(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setCyclingSpeedSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100110684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001106A0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setStrideLengthSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10011091C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100110938(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setVerticalOscillationSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100110BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100110BD0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setGroundContactTimeSamples:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100110F28(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_100110F44(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setSplits:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

uint64_t sub_100110FE8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_100111230(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_10011124C(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setCustomSplits:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

uint64_t sub_1001112F0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_1001115BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1001115D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    [*(id *)(a1 + 32) setSegments:v3];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

BOOL sub_100111664(id a1, HKWorkoutEvent *a2, NSDictionary *a3)
{
  id v3 = a2;
  if ((id)[(HKWorkoutEvent *)v3 type] == (id)4)
  {
    double v4 = [(HKWorkoutEvent *)v3 metadata];
    id v5 = [v4 objectForKey:FIUIPrivateMetadataKeyMarkerEventSubtype];

    if (v5) {
      BOOL v6 = [v5 intValue] == 1;
    }
    else {
      BOOL v6 = 1;
    }
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_1001116F8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_segmentsForWorkout:v3 markerEvents:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001117E4;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_1001117E4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1001119F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    [*(id *)(a1 + 32) setDownhillRuns:v3];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100111A84(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v13 = 0;
  uint64_t v4 = [v2 _queue_downhillRunsForWorkout:v3 error:&v13];
  id v5 = v13;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _OWORD v9[2] = sub_100111B70;
  v9[3] = &unk_1008ABBC0;
  id v6 = *(id *)(a1 + 48);
  id v11 = v5;
  id v12 = v6;
  id v10 = v4;
  id v7 = v5;
  id v8 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

uint64_t sub_100111B70(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100111D84(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    [*(id *)(a1 + 32) setIntervals:v3];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100111E10(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v13 = 0;
  uint64_t v4 = [v2 _queue_intervalsForWorkout:v3 error:&v13];
  id v5 = v13;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _OWORD v9[2] = sub_100111EFC;
  v9[3] = &unk_1008ABBC0;
  id v6 = *(id *)(a1 + 48);
  id v11 = v5;
  id v12 = v6;
  id v10 = v4;
  id v7 = v5;
  id v8 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

uint64_t sub_100111EFC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1001121F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100112214(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    [*(id *)(a1 + 32) setTrackLaps:v3];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

BOOL sub_1001122A0(id a1, HKWorkoutEvent *a2, NSDictionary *a3)
{
  return (id)[(HKWorkoutEvent *)a2 type] == (id)3;
}

void sub_1001122C4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_trackLapsForWorkout:v3 lapEvents:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001123B0;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_1001123B0(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100112600(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setSwimDistanceByStrokeStyle:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1001126A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_swimDistanceByStrokeStyleForWorkout:v3 workoutActivity:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100112790;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_100112790(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1001129E0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setSwimDistanceByStrokeStyle:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100112A84(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_openWaterSwimDistanceByStrokeStyleForWorkout:v3 workoutActivity:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100112B70;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_100112B70(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100112DC0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setSwimmingSets:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100112E64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_swimmingSetsForWorkout:v3 workoutActivity:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100112F50;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_100112F50(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1001131A0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v7)
  {
    [*(id *)(a1 + 32) setSwimmingSplits:v7];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained saveContainerToCache:*(void *)(a1 + 32) forWorkout:*(void *)(a1 + 40) workoutActivity:*(void *)(a1 + 48)];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100113244(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v14 = 0;
  id v5 = [v2 _queue_swimmingSplitsForWorkout:v3 workoutActivity:v4 error:&v14];
  id v6 = v14;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100113330;
  void v10[3] = &unk_1008ABBC0;
  id v7 = *(id *)(a1 + 56);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_100113330(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100113840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void sub_10011389C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1001139A4;
  void v13[3] = &unk_1008AC688;
  id v14 = a5;
  id v10 = v14;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v15 = v9;
  id v16 = v8;
  id v11 = v8;
  id v12 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

  objc_destroyWeak(&v17);
}

void sub_1001139A4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    if (WeakRetained)
    {
      _HKInitializeLogging();
      if (os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_ERROR)) {
        sub_10071C620();
      }
      uint64_t v3 = [WeakRetained healthStore];
      [v3 stopQuery:WeakRetained[5]];

      uint64_t v4 = (void *)WeakRetained[5];
      WeakRetained[5] = 0;
    }
  }
  else
  {
    _HKInitializeLogging();
    id v5 = HKLogWorkouts;
    if (os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[Workout Data Calculator] Updated Effort Relationship Query with anchor %@", (uint8_t *)&v7, 0xCu);
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained _handleUpdatedRelationships:*(void *)(a1 + 48) withAnchor:*(void *)(a1 + 40)];
  }
}

void sub_100113AD8(uint64_t a1, void *a2)
{
  id v8 = a2;
  if ([v8 count])
  {
    uint64_t v3 = [[CHEffortSampleCollection alloc] initWithQuantitySamples:v8];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    id v5 = WeakRetained;
    if (WeakRetained)
    {
      uint64_t v6 = [WeakRetained cacheContainerForWorkout:*(void *)(a1 + 32) workoutActivity:*(void *)(a1 + 40)];
      [v6 setEffortSampleCollection:v3];
      [v5 saveContainerToCache:v6 forWorkout:*(void *)(a1 + 32) workoutActivity:*(void *)(a1 + 40)];
    }
    int v7 = [(CHEffortSampleCollection *)v3 preferredQuantity];
  }
  else
  {
    int v7 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100113BBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_100113C68;
  v6[3] = &unk_1008AC5A8;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100113C68(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1001141BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  uint64_t v31 = a1;
  id v32 = a5;
  long long v35 = [*(id *)(a1 + 32) _activeDateIntervalsForWorkout:*(void *)(a1 + 40) during:*(void *)(a1 + 48)];
  id v8 = objc_alloc_init((Class)NSMutableData);
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id obj = v7;
  id v9 = [obj countByEnumeratingWithState:&v40 objects:v45 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v34 = *(void *)v41;
    do
    {
      for (int64_t i = 0; i != v10; int64_t i = (char *)i + 1)
      {
        if (*(void *)v41 != v34) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v40 + 1) + 8 * i);
        long long v36 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        id v13 = v35;
        id v14 = [v13 countByEnumeratingWithState:&v36 objects:v44 count:16];
        if (v14)
        {
          id v15 = v14;
          uint64_t v16 = *(void *)v37;
          do
          {
            for (j = 0; j != v15; j = (char *)j + 1)
            {
              if (*(void *)v37 != v16) {
                objc_enumerationMutation(v13);
              }
              long long v18 = *(void **)(*((void *)&v36 + 1) + 8 * (void)j);
              id v19 = [v12 date];
              LODWORD(v18) = [v18 containsDate:v19];

              if (v18)
              {
                uint64_t v20 = [v12 quantity];
                [v20 _beatsPerMinute];
                double v22 = v21;

                id v23 = [v12 date];
                [v8 fiui_appendHeartRate:v23 date:v22];
              }
            }
            id v15 = [v13 countByEnumeratingWithState:&v36 objects:v44 count:16];
          }
          while (v15);
        }
      }
      id v10 = [obj countByEnumeratingWithState:&v40 objects:v45 count:16];
    }
    while (v10);
  }

  id v24 = [*(id *)(v31 + 48) startDate];
  uint64_t v25 = [*(id *)(v31 + 48) endDate];
  [v8 fiui_weightedAverageHeartRateWithStartDate:v24 endDate:v25];
  double v27 = v26;

  if (v27 == 0.0)
  {
    id v30 = v32;
    (*(void (**)(void))(*(void *)(v31 + 56) + 16))();
  }
  else
  {
    id v28 = +[HKUnit _countPerMinuteUnit];
    id v29 = +[HKQuantity quantityWithUnit:v28 doubleValue:v27];

    (*(void (**)(void))(*(void *)(v31 + 56) + 16))();
    id v30 = v32;
  }
}

void sub_1001145B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v35 = [*(id *)(a1 + 32) _activeDateIntervalsForWorkout:*(void *)(a1 + 40) during:*(void *)(a1 + 48)];
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v7 = v5;
  id v36 = [v7 countByEnumeratingWithState:&v42 objects:v47 count:16];
  id obj = v7;
  if (!v36)
  {

LABEL_25:
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    goto LABEL_26;
  }
  uint64_t v32 = a1;
  uint64_t v34 = *(void *)v43;
  double v8 = 0.0;
  double v9 = 0.0;
  do
  {
    uint64_t v10 = 0;
    do
    {
      if (*(void *)v43 != v34) {
        objc_enumerationMutation(obj);
      }
      uint64_t v37 = v10;
      id v11 = *(void **)(*((void *)&v42 + 1) + 8 * v10);
      long long v38 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      id v12 = v35;
      id v13 = [v12 countByEnumeratingWithState:&v38 objects:v46 count:16];
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)v39;
        do
        {
          for (int64_t i = 0; i != v14; int64_t i = (char *)i + 1)
          {
            if (*(void *)v39 != v15) {
              objc_enumerationMutation(v12);
            }
            id v17 = *(void **)(*((void *)&v38 + 1) + 8 * i);
            long long v18 = [v11 startDate];
            LODWORD(v17) = [v17 containsDate:v18];

            if (v17)
            {
              id v19 = [v11 quantityType];
              double v20 = 1.0;
              if (![v19 aggregationStyle])
              {
                double v21 = [v11 fiui_dateInterval];
                [v21 duration];
                double v20 = v22;
              }
              id v23 = [v11 quantity];
              id v24 = +[HKUnit _countPerMinuteUnit];
              unsigned int v25 = [v23 isCompatibleWithUnit:v24];

              double v26 = [v11 quantity];
              if (v25)
              {
                double v27 = +[HKUnit _countPerMinuteUnit];
                [v26 doubleValueForUnit:v27];
                double v29 = v28 / 60.0;
              }
              else
              {
                double v27 = +[HKUnit countUnit];
                [v26 doubleValueForUnit:v27];
              }
              double v8 = v8 + v20;
              double v9 = v9 + v29;
            }
          }
          id v14 = [v12 countByEnumeratingWithState:&v38 objects:v46 count:16];
        }
        while (v14);
      }

      uint64_t v10 = v37 + 1;
    }
    while ((id)(v37 + 1) != v36);
    id v36 = [obj countByEnumeratingWithState:&v42 objects:v47 count:16];
  }
  while (v36);

  a1 = v32;
  if (v8 <= 0.0) {
    goto LABEL_25;
  }
  id v30 = +[HKUnit _countPerMinuteUnit];
  uint64_t v31 = +[HKQuantity quantityWithUnit:v30 doubleValue:v9 / v8 * 60.0];

  (*(void (**)(void))(*(void *)(v32 + 56) + 16))();
LABEL_26:
}

void sub_100114A18(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v30 = [*(id *)(a1 + 32) _activeDateIntervalsForWorkout:*(void *)(a1 + 40) during:*(void *)(a1 + 48)];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (!v8)
  {

LABEL_20:
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    goto LABEL_21;
  }
  id v9 = v8;
  uint64_t v26 = a1;
  id v27 = v6;
  id obj = v7;
  uint64_t v29 = *(void *)v36;
  double v10 = 0.0;
  double v11 = 0.0;
  do
  {
    for (int64_t i = 0; i != v9; int64_t i = (char *)i + 1)
    {
      if (*(void *)v36 != v29) {
        objc_enumerationMutation(obj);
      }
      id v13 = *(void **)(*((void *)&v35 + 1) + 8 * i);
      long long v31 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      id v14 = v30;
      id v15 = [v14 countByEnumeratingWithState:&v31 objects:v39 count:16];
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = *(void *)v32;
        do
        {
          for (j = 0; j != v16; j = (char *)j + 1)
          {
            if (*(void *)v32 != v17) {
              objc_enumerationMutation(v14);
            }
            id v19 = *(void **)(*((void *)&v31 + 1) + 8 * (void)j);
            double v20 = [v13 startDate];
            LODWORD(v19) = [v19 containsDate:v20];

            if (v19)
            {
              double v21 = [v13 quantity];
              double v22 = +[HKUnit wattUnit];
              [v21 doubleValueForUnit:v22];
              double v11 = v11 + v23;

              double v10 = v10 + 1.0;
            }
          }
          id v16 = [v14 countByEnumeratingWithState:&v31 objects:v39 count:16];
        }
        while (v16);
      }
    }
    id v7 = obj;
    id v9 = [obj countByEnumeratingWithState:&v35 objects:v40 count:16];
  }
  while (v9);

  a1 = v26;
  id v6 = v27;
  if (v10 <= 0.0) {
    goto LABEL_20;
  }
  id v24 = +[HKUnit wattUnit];
  unsigned int v25 = +[HKQuantity quantityWithUnit:v24 doubleValue:v11 / v10];

  (*(void (**)(void))(*(void *)(v26 + 56) + 16))();
LABEL_21:
}

void sub_100114D8C(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v4();
  }
  else
  {
    id v5 = [a2 objectForKey:&off_1008DE610];
    if ([v5 count])
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v6 = v5;
      id v7 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v7)
      {
        id v8 = v7;
        unint64_t v9 = 0;
        uint64_t v10 = *(void *)v21;
        double v11 = 0.0;
        do
        {
          for (int64_t i = 0; i != v8; int64_t i = (char *)i + 1)
          {
            if (*(void *)v21 != v10) {
              objc_enumerationMutation(v6);
            }
            id v13 = *(void **)(*((void *)&v20 + 1) + 8 * i);
            [v13 durationScaledToFillSplit:(void)v20];
            double v11 = v11 + v14;
            v9 += (unint64_t)[v13 strokeCountScaledToFillSplit];
          }
          id v8 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
        }
        while (v8);
      }
      else
      {
        unint64_t v9 = 0;
        double v11 = 0.0;
      }

      double v15 = v11 / (double)(unint64_t)[v6 count];
      uint64_t v16 = (uint64_t)(double)(v9 / (unint64_t)[v6 count]);
      uint64_t v17 = *(void *)(a1 + 32);
      long long v18 = +[NSNumber numberWithDouble:v15];
      id v19 = +[NSNumber numberWithInteger:v16];
      (*(void (**)(uint64_t, void *, void *, void))(v17 + 16))(v17, v18, v19, 0);
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_100115A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_100115A68(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v6 endDate:v5];

  [v4 addObject:v7];
}

void sub_100115AF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), a3);
  if ([v5 count])
  {
    id v7 = FUInterpolateQuantitySamplesOverDateIntervals();
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100115C04;
    void v10[3] = &unk_1008AC7C8;
    id v11 = *(id *)(a1 + 40);
    id v8 = *(id *)(a1 + 48);
    char v14 = *(unsigned char *)(a1 + 80);
    uint64_t v9 = *(void *)(a1 + 56);
    id v12 = v8;
    uint64_t v13 = v9;
    [v7 enumerateObjectsUsingBlock:v10];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

void sub_100115C04(uint64_t a1, void *a2, uint64_t a3)
{
  id v28 = a2;
  id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  id v6 = [v5 distance];

  if (!v6) {
    [v5 setDistance:v28];
  }
  id v7 = *(void **)(a1 + 40);
  id v8 = [v5 stepKeyPath];
  uint64_t v9 = [v7 requiredDistanceForIntervalTimeGoalForStepKeyPath:v8];

  if (*(unsigned char *)(a1 + 56) && v9)
  {
    uint64_t v10 = [*(id *)(a1 + 40) workoutActivities];
    id v11 = [v10 objectAtIndexedSubscript:a3];

    id v12 = [v11 metadata];
    uint64_t v13 = +[HKWorkout kIntervalWorkoutStepDistanceGoalAchievedDurationKey];
    char v14 = [v12 objectForKeyedSubscript:v13];

    double v15 = [v11 metadata];
    uint64_t v16 = +[HKWorkout kIntervalWorkoutStepDistanceGoalAchievedDateKey];
    uint64_t v17 = [v15 objectForKeyedSubscript:v16];

    long long v18 = *(void **)(a1 + 40);
    id v19 = [v5 stepKeyPath];
    long long v20 = [v18 expectedIntervalDurationForStepKeyPath:v19];

    if (v14)
    {
      long long v21 = +[HKUnit secondUnit];
      [v20 doubleValueForUnit:v21];
      [v5 setElapsedTime:];

      [v14 doubleValue];
      double v23 = v22;
    }
    else
    {
      if (!v17)
      {
LABEL_10:

        goto LABEL_11;
      }
      id v24 = +[HKUnit secondUnit];
      [v20 doubleValueForUnit:v24];
      [v5 setElapsedTime:];

      unsigned int v25 = *(void **)(a1 + 48);
      uint64_t v26 = [v5 startDate];
      [v25 _activeWorkoutElapsedTimeFromDate:v26 toDate:v17 forWorkout:*(void *)(a1 + 40) workoutActivity:v11];
      double v23 = v27;
    }
    [v5 setDistanceGoalAchievedTime:v23];
    goto LABEL_10;
  }
LABEL_11:
}

void sub_100115E74(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v10 = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = v6;
    uint64_t v9 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }
  else
  {
    uint64_t v9 = [a3 sumQuantity];
    [*(id *)(a1 + 32) setActiveEnergy:v9];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100116904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_100116950(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v6 endDate:v5];

  [v4 addObject:v7];
}

void sub_1001169DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a3);
  if ([v5 count])
  {
    id v7 = FUInterpolateQuantitySamplesOverDateIntervals();
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100116ACC;
    v8[3] = &unk_1008AC840;
    id v9 = *(id *)(a1 + 40);
    [v7 enumerateObjectsUsingBlock:v8];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100116ACC(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  id v6 = [v5 distance];

  if (!v6) {
    [v5 setDistance:v7];
  }
}

void sub_100116B4C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v10 = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = v6;
    id v9 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }
  else
  {
    id v9 = [a3 sumQuantity];
    [*(id *)(a1 + 32) setActiveEnergy:v9];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100116DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100116DE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a3);
  id v9 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
  id v8 = v5;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10011755C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_100117598(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v6 endDate:v5];

  [v4 addObject:v7];
}

void sub_100117624(uint64_t a1, void *a2, void *a3)
{
  id v18 = a2;
  id v17 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a3);
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v23;
    do
    {
      for (int64_t i = 0; i != v8; int64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        id v12 = objc_alloc((Class)NSDateInterval);
        uint64_t v13 = [v11 startDate:v17];
        uint64_t v14 = [v11 endDate];
        id v15 = [v12 initWithStartDate:v13 endDate:v14];
        [v5 addObject:v15];
      }
      id v8 = [v6 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v8);
  }

  if ([v18 count])
  {
    uint64_t v16 = FUInterpolateQuantitySamplesOverDateIntervals();
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    void v19[2] = sub_10011786C;
    v19[3] = &unk_1008AC8B8;
    id v20 = *(id *)(a1 + 40);
    id v21 = *(id *)(a1 + 32);
    [v16 enumerateObjectsUsingBlock:v19];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_10011786C(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  id v6 = [v5 metadata];
  id v7 = [v6 allKeys];
  unsigned __int8 v8 = [v7 containsObject:FIPrivateMetadataKeyLapDistance];

  if ((v8 & 1) == 0)
  {
    uint64_t v9 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a3];
    [v9 setDistance:v10];
  }
}

void sub_100117934(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v10 = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = v6;
    uint64_t v9 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }
  else
  {
    uint64_t v9 = [a3 sumQuantity];
    [*(id *)(a1 + 32) setActiveEnergy:v9];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100117D80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100117DB8(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_100117E08(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_100117E58(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = [a2 metadata];
  uint64_t v8 = [v7 objectForKeyedSubscript:HKMetadataKeySwimmingStrokeStyle];
  uint64_t v9 = (void *)v8;
  id v10 = &off_1008DE640;
  if (v8) {
    id v10 = (_UNKNOWN **)v8;
  }
  uint64_t v16 = v10;

  if ((unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count] >= a3 + 1)
  {
    id v11 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) objectAtIndexedSubscript:a3];
    id v12 = [v11 quantity];

    uint64_t v13 = [*(id *)(a1 + 32) objectForKeyedSubscript:v16];
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = [v13 _quantityByAddingQuantity:v12];
    }
    else
    {
      id v15 = v12;
    }
    [*(id *)(a1 + 32) setObject:v15 forKeyedSubscript:v16];
  }
  else
  {
    *a4 = 1;
  }
}

BOOL sub_100118258(id a1, HKWorkoutEvent *a2, NSDictionary *a3)
{
  return (id)[(HKWorkoutEvent *)a2 type] == (id)3;
}

void sub_1001187F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_100118854(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_1001188A4(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_1001188F4(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  if ((char *)[*(id *)(a1 + 32) count] - 1 == a3)
  {
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  else
  {
    [*(id *)(a1 + 32) objectAtIndexedSubscript:a3 + 1];
    v7 = uint64_t v6 = a1;
  }
  v59[0] = _NSConcreteStackBlock;
  v59[1] = 3221225472;
  v59[2] = sub_100118E70;
  v59[3] = &unk_1008AC950;
  id v8 = v5;
  id v60 = v8;
  uint64_t v9 = +[NSPredicate predicateWithBlock:v59];
  id v10 = [*(id *)(*(void *)(*(void *)(v6 + 64) + 8) + 40) filteredArrayUsingPredicate:v9];
  uint64_t v46 = (void *)v9;
  uint64_t v11 = [*(id *)(*(void *)(*(void *)(v6 + 72) + 8) + 40) filteredArrayUsingPredicate:v9];
  [*(id *)(*(void *)(*(void *)(v6 + 64) + 8) + 40) removeObjectsInArray:v10];
  double v47 = (id *)v6;
  long long v44 = (void *)v11;
  [*(id *)(*(void *)(*(void *)(v6 + 72) + 8) + 40) removeObjectsInArray:v11];
  id v12 = objc_alloc_init(CHWorkoutSwimmingSet);
  uint64_t v13 = [v8 dateInterval];
  uint64_t v14 = [v13 startDate];
  [(CHWorkoutSwimmingSet *)v12 setStartDate:v14];

  id v15 = [v8 dateInterval];
  uint64_t v16 = [v15 endDate];
  [(CHWorkoutSwimmingSet *)v12 setMovementEndDate:v16];

  if (v7)
  {
    id v17 = [v7 dateInterval];
    [v17 startDate];
  }
  else
  {
    id v17 = [v8 dateInterval];
    [v17 endDate];
  id v18 = };
  long long v45 = v8;
  uint64_t v48 = v7;
  [(CHWorkoutSwimmingSet *)v12 setEndDate:v18];

  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  id v19 = v10;
  id v20 = [v19 countByEnumeratingWithState:&v55 objects:v62 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)v56;
    do
    {
      for (int64_t i = 0; i != v21; int64_t i = (char *)i + 1)
      {
        if (*(void *)v56 != v23) {
          objc_enumerationMutation(v19);
        }
        long long v25 = [*(id *)(*((void *)&v55 + 1) + 8 * i) quantity];
        uint64_t v26 = +[HKUnit countUnit];
        [v25 doubleValueForUnit:v26];
        unint64_t v28 = llround(v27);

        v22 += v28;
      }
      id v21 = [v19 countByEnumeratingWithState:&v55 objects:v62 count:16];
    }
    while (v21);
  }
  else
  {
    uint64_t v22 = 0;
  }

  uint64_t v29 = +[HKUnit meterUnit];
  id v30 = +[HKQuantity quantityWithUnit:v29 doubleValue:0.0];

  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id v31 = v44;
  id v32 = [v31 countByEnumeratingWithState:&v51 objects:v61 count:16];
  if (v32)
  {
    id v33 = v32;
    uint64_t v34 = *(void *)v52;
    do
    {
      long long v35 = 0;
      long long v36 = v30;
      do
      {
        if (*(void *)v52 != v34) {
          objc_enumerationMutation(v31);
        }
        long long v37 = [*(id *)(*((void *)&v51 + 1) + 8 * (void)v35) quantity];
        id v30 = [v36 _quantityByAddingQuantity:v37];

        long long v35 = (char *)v35 + 1;
        long long v36 = v30;
      }
      while (v33 != v35);
      id v33 = [v31 countByEnumeratingWithState:&v51 objects:v61 count:16];
    }
    while (v33);
  }

  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472;
  v49[2] = sub_100118F44;
  v49[3] = &unk_1008AC978;
  id v38 = v45;
  id v50 = v38;
  long long v39 = +[NSPredicate predicateWithBlock:v49];
  long long v40 = [v47[5] filteredArrayUsingPredicate:v39];
  -[v12 setDominantStrokeStyle:[v47[6] _queue_strokeStyleForLaps:v40]];
  [(CHWorkoutSwimmingSet *)v12 setStrokeCount:v22];
  [(CHWorkoutSwimmingSet *)v12 setDistance:v30];
  long long v41 = [v38 metadata];
  long long v42 = [v41 objectForKeyedSubscript:HKMetadataKeySWOLFScore];
  [v42 doubleValue];
  [(CHWorkoutSwimmingSet *)v12 setSwolfScore:(uint64_t)v43];

  if ((id)[(CHWorkoutSwimmingSet *)v12 dominantStrokeStyle] == (id)6)
  {
    [(CHWorkoutSwimmingSet *)v12 setStrokeCount:0];
    [(CHWorkoutSwimmingSet *)v12 setSwolfScore:0];
  }
  [v47[7] addObject:v12];
}

BOOL sub_100118E70(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)NSDateInterval);
  id v5 = [v3 startDate];
  uint64_t v6 = [v3 endDate];

  id v7 = [v4 initWithStartDate:v5 endDate:v6];
  id v8 = [*(id *)(a1 + 32) dateInterval];
  uint64_t v9 = [v7 intersectionWithDateInterval:v8];
  [v9 duration];
  BOOL v11 = v10 > 2.22044605e-16;

  return v11;
}

BOOL sub_100118F44(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 type] == (id)3)
  {
    id v4 = [v3 dateInterval];
    id v5 = [*(id *)(a1 + 32) dateInterval];
    uint64_t v6 = [v4 intersectionWithDateInterval:v5];
    [v6 duration];
    BOOL v8 = v7 > 2.22044605e-16;
  }
  else
  {
    BOOL v8 = 0;
  }

  return v8;
}

void sub_100119780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double sub_100119798(uint64_t a1, uint64_t a2, void *a3)
{
  [a3 timeIntervalSinceDate:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  double result = v5 + *(double *)(v4 + 24);
  *(double *)(v4 + 24) = result;
  return result;
}

void sub_100119B68(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v31 = v5;
  if (a3)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    double v7 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a3 - 1];
    BOOL v8 = [v7 endDate];
    uint64_t v9 = [v31 startDate];
    [v6 _activeWorkoutElapsedTimeFromDate:v8 toDate:v9 forWorkout:*(void *)(a1 + 48) workoutActivity:*(void *)(a1 + 56)];
    double v11 = v10;

    id v5 = v31;
    if (v11 > 2.22044605e-16)
    {
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = *(void *)(a1 + 64);
      [*(id *)(a1 + 72) doubleValueForUnit:*(void *)(a1 + 80)];
      [v12 _updateSplits:v13 withDistance:0 duration:0.0 strokeCount:v11 splitDelimiterInUserUnit:v14];
      id v5 = v31;
    }
  }
  id v15 = *(void **)(a1 + 32);
  uint64_t v16 = [v5 startDate];
  id v17 = [v31 endDate];
  [v15 _activeWorkoutElapsedTimeFromDate:v16 toDate:v17 forWorkout:*(void *)(a1 + 48) workoutActivity:*(void *)(a1 + 56)];
  double v19 = v18;

  id v20 = *(void **)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = [v31 quantity];
  [v22 doubleValueForUnit:*(void *)(a1 + 80)];
  double v24 = v23;
  long long v25 = [*(id *)(a1 + 88) objectAtIndexedSubscript:a3];
  uint64_t v26 = [v25 quantity];
  double v27 = +[HKUnit countUnit];
  [v26 doubleValueForUnit:v27];
  uint64_t v29 = (uint64_t)v28;
  [*(id *)(a1 + 72) doubleValueForUnit:*(void *)(a1 + 80)];
  [v20 _updateSplits:v21 withDistance:v29 duration:v24 strokeCount:v19 splitDelimiterInUserUnit:v30];
}

void sub_10011A5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_10011A618(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  uint64_t v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_10011A668(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  uint64_t v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_10011A8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = +[HKQuery predicateForSamplesWithStartDate:a2 endDate:a3 options:1];
  [v3 addObject:v4];
}

void sub_10011A940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = +[HKQuery predicateForSamplesWithStartDate:a2 endDate:a3 options:1];
  [v3 addObject:v4];
}

void sub_10011AAD8(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v6 endDate:v5];

  [v4 addObject:v7];
}

void sub_10011AB64(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v6 endDate:v5];

  [v4 addObject:v7];
}

NSPredicate *__cdecl sub_10011AD7C(id a1, NSDateInterval *a2)
{
  uint64_t v2 = a2;
  id v3 = [(NSDateInterval *)v2 startDate];
  id v4 = [(NSDateInterval *)v2 endDate];

  id v5 = +[HKQuery predicateForSamplesWithStartDate:v3 endDate:v4 options:1];

  return (NSPredicate *)v5;
}

void sub_10011B054(uint64_t a1, void *a2, void *a3)
{
  id v22 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) startDate];
  id v7 = [v6 compare:v5];

  BOOL v8 = [*(id *)(a1 + 32) endDate];
  uint64_t v9 = (char *)[v8 compare:v22];

  if (v7 != (id)1 && v9 + 1 != 0)
  {
    double v11 = [*(id *)(a1 + 32) startDate];
    id v12 = [v11 compare:v5];

    id v13 = [*(id *)(a1 + 40) count];
    if (v12 != (id)-1 || v13)
    {
      id v14 = v22;
    }
    else
    {
      id v14 = [*(id *)(a1 + 32) startDate];
    }
    id v15 = v14;
    uint64_t v16 = [*(id *)(a1 + 32) endDate];
    id v17 = [v16 compare:v5];

    if (v17 == (id)-1)
    {
      id v18 = [*(id *)(a1 + 32) endDate];
    }
    else
    {
      id v18 = v5;
    }
    double v19 = v18;
    id v20 = *(void **)(a1 + 40);
    id v21 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v15 endDate:v18];
    [v20 addObject:v21];
  }
}

void sub_10011B2B0(uint64_t a1, void *a2, void *a3)
{
  id v22 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) startDate];
  id v7 = [v6 compare:v5];

  BOOL v8 = [*(id *)(a1 + 32) endDate];
  uint64_t v9 = (char *)[v8 compare:v22];

  if (v7 != (id)1 && v9 + 1 != 0)
  {
    double v11 = [*(id *)(a1 + 32) startDate];
    id v12 = [v11 compare:v5];

    id v13 = [*(id *)(a1 + 40) count];
    if (v12 != (id)-1 || v13)
    {
      id v14 = v22;
    }
    else
    {
      id v14 = [*(id *)(a1 + 32) startDate];
    }
    id v15 = v14;
    uint64_t v16 = [*(id *)(a1 + 32) endDate];
    id v17 = [v16 compare:v5];

    if (v17 == (id)-1)
    {
      id v18 = [*(id *)(a1 + 32) endDate];
    }
    else
    {
      id v18 = v5;
    }
    double v19 = v18;
    id v20 = *(void **)(a1 + 40);
    id v21 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v15 endDate:v18];
    [v20 addObject:v21];
  }
}

void sub_10011BEDC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id *sub_10011D58C(id *result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = result;
    _HKInitializeLogging();
    id v3 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C758(v3);
    }
    return (id *)[v2[4] _openKBURLWithRetry];
  }
  return result;
}

void sub_10011D5E8(id a1, BOOL a2)
{
  if (!a2)
  {
    _HKInitializeLogging();
    uint64_t v2 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C79C(v2);
    }
  }
}

void sub_100120AFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100120B18(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C85C((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a2)
    {
      id v15 = *(id *)(a1 + 32);
      FIUIUserHasExistingExerciseAndStandGoals();
    }
    else
    {
      _HKInitializeLogging();
      id v14 = HKLogActivity;
      if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109120;
        int v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "CHASActivitySetupMetricsCollectionViewController - hasExistingMoveGoal %d", buf, 8u);
      }
      WeakRetained[7] = 3;
    }
  }
}

void sub_100120C9C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR))
    {
      sub_10071C8C8((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
      if (a2) {
        goto LABEL_4;
      }
LABEL_8:
      FIUIUserHasExistingPreKincaidMoveGoal();
      goto LABEL_9;
    }
  }
  if (!a2) {
    goto LABEL_8;
  }
LABEL_4:
  _HKInitializeLogging();
  id v13 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    int v15 = 1;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "CHASActivitySetupMetricsCollectionViewController - hasExistingExerciseAndStandGoals %d", buf, 8u);
  }
  *(void *)(*(void *)(a1 + 32) + 56) = 5;
LABEL_9:
}

void sub_100120E04(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C934((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
  _HKInitializeLogging();
  id v13 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    v15[0] = 67109120;
    v15[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "CHASActivitySetupMetricsCollectionViewController - hasExistingPreKincaidMoveGoal %d", (uint8_t *)v15, 8u);
  }
  uint64_t v14 = 4;
  if (a2) {
    uint64_t v14 = 5;
  }
  *(void *)(*(void *)(a1 + 32) + 56) = v14;
}

void sub_1001210B0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
}

void sub_10012199C(id a1, UIAlertAction *a2)
{
  id v2 = +[MCProfileConnection sharedConnection];
  [v2 setWheelchairDataSubmissionAllowed:1];
}

void sub_1001219E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)BPSAboutDetailViewController);
  id v5 = +[NSBundle bundleForClass:objc_opt_class()];
  id v6 = [v5 localizedStringForKey:@"FEEDBACK_WHEELCHAIR_MORE_INFO_TITLE" value:&stru_1008D8AB8 table:@"ActivitySetup"];
  [v4 setTitleString:v6];

  uint64_t v7 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v8 = [v7 localizedStringForKey:@"FEEDBACK_WHEELCHAIR_MORE_INFO_DESCRIPTION" value:&stru_1008D8AB8 table:@"ActivitySetup"];
  [v4 setHeaderString:v8];

  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v9 = *(void *)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100121B9C;
  void v10[3] = &unk_1008AB8D8;
  objc_copyWeak(&v11, &location);
  [v4 presentWithController:v9 onDismiss:v10];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
}

void sub_100121B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100121B9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _requestWheelchairDiagnosticsSubmissionIfNecessary];
}

void sub_100121BDC(id a1, UIAlertAction *a2)
{
  id v2 = +[MCProfileConnection sharedConnection];
  [v2 setWheelchairDataSubmissionAllowed:0];
}

void sub_100121DE0(id a1, BOOL a2)
{
  _HKInitializeLogging();
  id v2 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "CHASActivitySetupMetricsCollectionViewController opened url to Pregnancy setup in Health", v3, 2u);
  }
}

void sub_100121EF4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) tableView];
  id v2 = +[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", [*(id *)(a1 + 40) section]);
  [v3 reloadSections:v2 withRowAnimation:5];
}

void sub_1001220E8(id a1)
{
  qword_10096B490 = (uint64_t)objc_alloc_init((Class)AAUIAchievementResourceProvider);

  _objc_release_x1();
}

id sub_100122690(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100123F80(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) badgeView];
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  uint64_t v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];

  id v4 = [*(id *)(a1 + 32) badgeView];
  [v4 setAlpha:1.0];
}

void sub_100123FF8(uint64_t a1)
{
  id v2 = ACHLogDefault();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Modal presentation of achievement completion", v4, 2u);
  }

  long long v3 = [*(id *)(a1 + 32) navigationController];
  [v3 setNavigationBarHidden:0 animated:0];
}

double sub_10012475C(double a1, double a2)
{
  double v2 = a2 * 0.5;
  UIRoundToViewScale();
  return v2 + v3;
}

uint64_t sub_100124790()
{
  return UIRoundToViewScale();
}

void sub_100124ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100124B0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _reloadDataFromProvider];
}

void sub_100124B4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _reloadDataForFilter];
}

void sub_100125900(void *a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1[4] + 16);
  id v6 = a2;
  uint64_t v7 = [v5 sortedDateComponentKeys];
  unsigned __int8 v8 = [v7 containsObject:v6];

  if ((v8 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
    uint64_t v10 = +[NSIndexSet indexSetWithIndex:a3];
    [WeakRetained deleteSections:v10 withRowAnimation:6];

    id v11 = (void *)a1[5];
    uint64_t v12 = +[NSNumber numberWithUnsignedInteger:a3];
    [v11 removeObject:v12];

    id v13 = (void *)a1[6];
    id v14 = +[NSNumber numberWithUnsignedInteger:a3];
    [v13 addObject:v14];
  }
}

void sub_100125A30(void *a1, uint64_t a2, uint64_t a3)
{
  if (([*(id *)(a1[4] + 72) containsObject:a2] & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
    id v6 = +[NSIndexSet indexSetWithIndex:a3];
    [WeakRetained insertSections:v6 withRowAnimation:6];

    uint64_t v7 = (void *)a1[5];
    unsigned __int8 v8 = +[NSNumber numberWithUnsignedInteger:a3];
    [v7 removeObject:v8];

    uint64_t v9 = (void *)a1[6];
    id v10 = +[NSNumber numberWithUnsignedInteger:a3];
    [v9 addObject:v10];
  }
}

void sub_100125B3C(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [a2 section]);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

NSIndexPath *__cdecl sub_100125BA8(id a1, NSNumber *a2)
{
  NSInteger v2 = [(NSNumber *)a2 integerValue];

  return +[NSIndexPath indexPathForRow:0 inSection:v2];
}

void sub_100125BF0(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithUnsignedInteger:a2];
  LOBYTE(v4) = [v4 containsObject:v5];

  if ((v4 & 1) == 0)
  {
    id v6 = *(void **)(a1 + 40);
    _[v6 _reloadHeaderForSection:a2];
  }
}

void sub_100125C78(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithUnsignedInteger:a2];
  LOBYTE(v4) = [v4 containsObject:v5];

  if ((v4 & 1) == 0)
  {
    id v6 = *(void **)(a1 + 40);
    _[v6 _reloadHeaderForSection:a2];
  }
}

void sub_100125E9C(uint64_t a1, uint64_t a2)
{
  NSInteger v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) _indexPathsToRemoveForSection:a2];
  [v2 addObjectsFromArray:v3];
}

void sub_1001261D4(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithUnsignedInteger:a2];
  id v6 = +[NSPredicate predicateWithFormat:@"section==%@", v5];
  id v9 = [v4 filteredArrayUsingPredicate:v6];

  uint64_t v7 = *(void **)(a1 + 40);
  unsigned __int8 v8 = [*(id *)(a1 + 48) _indexPathsToInsertForSection:a2 deletedIndexPaths:v9];
  [v7 addObjectsFromArray:v8];
}

void sub_100127330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012736C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = (id *)(a1 + 40);
  uint64_t v7 = a4;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained _deleteWorkoutAtIndexPath:*(void *)(a1 + 32)];

  v7[2](v7, 1);
}

void sub_1001274BC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = *(void **)(*(void *)(a1 + 32) + 16);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100127588;
    v8[3] = &unk_1008ABE08;
    id v9 = v5;
    [v6 deleteWorkout:v9 shouldDeleteAssociatedSamples:a3 completion:v8];
    uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 24) seymourCatalogItemDataProvider];
    [v7 deleteArchivedSessionForWorkout:*(void *)(a1 + 40)];
  }
}

void sub_100127588(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    _HKInitializeLogging();
    id v5 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071C9E4(a1, v5, (uint64_t)v4);
    }
  }
}

id sub_100127764(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10012776C(uint64_t a1)
{
  NSInteger v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"WORKOUT_SHARE_PREVIEW_ITEM_TITLE" value:&stru_1008D8AB8 table:@"Localizable"];
  id v4 = +[UIImage systemImageNamed:@"square.and.arrow.up"];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _OWORD v9[2] = sub_100127908;
  v9[3] = &unk_1008ACD38;
  id v10 = *(id *)(a1 + 32);
  id v5 = +[UIAction actionWithTitle:v3 image:v4 identifier:0 handler:v9];

  id v11 = v5;
  id v6 = +[NSArray arrayWithObjects:&v11 count:1];
  uint64_t v7 = +[UIMenu menuWithChildren:v6];

  return v7;
}

id sub_100127908(uint64_t a1)
{
  return _[*(id *)(a1 + 32) shareTapped:0];
}

void sub_1001279F8(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 96));
  [WeakRetained workoutsListDataSource:a1[4] didSelectWorkout:a1[5] atIndexPath:a1[6]];
}

void sub_10012867C(id a1)
{
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  *(double *)&qword_10096B4A0 = 1.0 / v1;
}

void sub_1001289FC(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  _HKInitializeLogging();
  id v6 = HKLogActivity;
  if (a2)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 134217984;
      uint64_t v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CHMoveModeUtilities saved new move mode: %ld", buf, 0xCu);
    }
    unsigned __int8 v8 = [*(id *)(a1 + 32) objectAtIndexedSubscript:0];
    id v9 = FIDefaultExerciseGoalQuantityForActivityMoveMode();
    id v10 = FIDefaultStandGoalQuantityForActivityMoveMode();
    uint64_t v12 = v8;
    id v13 = *(id *)(a1 + 40);
    id v11 = v8;
    FISaveGoalsForNewActivityMoveMode();
  }
  else if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR))
  {
    sub_10071CAA4();
  }
}

void sub_100128BC8(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  _HKInitializeLogging();
  id v6 = HKLogActivity;
  if (a2)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 48);
      int v10 = 138412546;
      uint64_t v11 = v7;
      __int16 v12 = 2048;
      uint64_t v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CHMoveModeUtilities saved new move goal: %@ with move mode: %ld default exercise/stand goals.", (uint8_t *)&v10, 0x16u);
    }
    if (FIIsActivePairedDeviceSatellitePaired())
    {
      [*(id *)(a1 + 40) forceCloudSyncDataUploadForProfileWithCompletion:&stru_1008ACDC8];
    }
    else
    {
      id v9 = [objc_alloc((Class)HKNanoSyncControl) initWithHealthStore:*(void *)(a1 + 40)];
      [v9 forceNanoSyncWithOptions:0 completion:&stru_1008ACDE8];
    }
  }
  else if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR))
  {
    sub_10071CB0C();
  }
}

void sub_100128D04(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  _HKInitializeLogging();
  id v5 = HKLogActivity;
  if (a2)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CHMoveModeUtilities successfully forced cloud sync after saving activity move mode", v6, 2u);
    }
  }
  else if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR))
  {
    sub_10071CB74();
  }
}

void sub_100128DAC(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  _HKInitializeLogging();
  id v5 = HKLogActivity;
  if (a2)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CHMoveModeUtilities successfully forced nano sync after saving activity move mode", v6, 2u);
    }
  }
  else if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR))
  {
    sub_10071CBDC();
  }
}

void sub_100129B78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_100129BC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    ASLoggingInitialize();
    id v2 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received phone status changed notification", v3, 2u);
    }
    [WeakRetained _getAndHandlePhoneCloudKitAccountStatus];
  }
}

void sub_100129C48(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    ASLoggingInitialize();
    id v2 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received Watch pairing changed notification", v3, 2u);
    }
    [WeakRetained _updateActivitySharingWatchPairingStatus];
  }
}

void sub_10012A1EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    WeakRetained[43] = [*(id *)(a1 + 32) _cachedWatchCloudKitAccountAssumedToExist];
    ASLoggingInitialize();
    uint64_t v3 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = WeakRetained[43];
      v5[0] = 67109120;
      v5[1] = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "No longer assuming parity between phone and watch, resetting assumption to value from cache: %d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_10012AE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012AE60(uint64_t a1, char a2, int a3, void *a4)
{
  id v7 = a4;
  if (v7 || !a3)
  {
    ASLoggingInitialize();
    uint64_t v8 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Failed to fetch phone account info with error: %{public}@", buf, 0xCu);
    }
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10012AFA8;
    block[3] = &unk_1008ACEA8;
    char v11 = a2;
    objc_copyWeak(&v10, (id *)(a1 + 40));
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v10);
  }
}

void sub_10012AFA8(uint64_t a1)
{
  ASLoggingInitialize();
  id v2 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    LODWORD(v12) = 67109120;
    HIDWORD(v12) = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Successfully fetched phone account info from healthstore: %d", (uint8_t *)&v12, 8u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    BOOL v6 = ([WeakRetained phoneCloudKitAccountIsActive] & 1) == 0 && *(unsigned char *)(a1 + 48) != 0;
    if ([v5 phoneCloudKitAccountIsActive]) {
      BOOL v7 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (*(void *)(*(void *)(a1 + 32) + 80))
    {
      if (v6)
      {
        ASLoggingInitialize();
        uint64_t v8 = ASLogDefault;
        if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v12) = 0;
          id v9 = "Phone status is transitioning to active";
LABEL_17:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v12, 2u);
          goto LABEL_18;
        }
        goto LABEL_18;
      }
      if (v7)
      {
        ASLoggingInitialize();
        uint64_t v8 = ASLogDefault;
        if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v12) = 0;
          id v9 = "Phone status is transitioning to inactive";
          goto LABEL_17;
        }
LABEL_18:
        [v5 setWatchCloudKitAccountAssumedToExist:v6, v12];
        [v5 setWatchCloudKitAccountExists:v6];
      }
    }
    int v10 = *(unsigned __int8 *)(a1 + 48);
    if (v10 != [v5 phoneCloudKitAccountIsActive])
    {
      [v5 setPhoneCloudKitAccountIsActive:*(unsigned __int8 *)(a1 + 48)];
      [v5 _handleWatchStatusAndCloudKitAccountStatusChange];
    }
    char v11 = +[NSDate date];
    [v5 setLastPhoneCloudKitAccountFetchTimestamp:v11];
  }
}

void sub_10012B2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012B314(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012B3F0;
  block[3] = &unk_1008ABD68;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_10012B3F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    ASLoggingInitialize();
    int v4 = ASLogDefault;
    if (v3)
    {
      if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_ERROR)) {
        sub_10071CC44((uint64_t *)(a1 + 32), v4);
      }
    }
    else
    {
      if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully fetched watch account info from NSS", buf, 2u);
      }
      long long v25 = 0u;
      long long v26 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      id v5 = [*(id *)(a1 + 40) objectForKeyedSubscript:kNSSAccountsKey];
      id v6 = [v5 countByEnumeratingWithState:&v23 objects:v31 count:16];
      if (v6)
      {
        id v7 = v6;
        id v22 = WeakRetained;
        uint64_t v8 = *(void *)v24;
        uint64_t v9 = kNSSAccountIsPrimaryiCloudAccountKey;
        uint64_t v10 = kNSSAccountUsernameKey;
        while (2)
        {
          for (int64_t i = 0; i != v7; int64_t i = (char *)i + 1)
          {
            if (*(void *)v24 != v8) {
              objc_enumerationMutation(v5);
            }
            id v12 = *(void **)(*((void *)&v23 + 1) + 8 * i);
            id v13 = [v12 objectForKeyedSubscript:v9];
            unsigned int v14 = [v13 BOOLValue];

            ASLoggingInitialize();
            uint64_t v15 = (void *)ASLogDefault;
            if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v16 = v15;
              int v17 = [v12 objectForKeyedSubscript:v10];
              *(_DWORD *)buf = 138412546;
              double v28 = v17;
              __int16 v29 = 1024;
              unsigned int v30 = v14;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "NSS found account: %@, primary=%d", buf, 0x12u);
            }
            if (v14)
            {
              uint64_t v18 = 1;
              goto LABEL_19;
            }
          }
          id v7 = [v5 countByEnumeratingWithState:&v23 objects:v31 count:16];
          if (v7) {
            continue;
          }
          break;
        }
        uint64_t v18 = 0;
LABEL_19:
        id WeakRetained = v22;
      }
      else
      {
        uint64_t v18 = 0;
      }

      if ([WeakRetained watchCloudKitAccountAssumedToExist])
      {
        ASLoggingInitialize();
        double v19 = ASLogDefault;
        if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Currently assuming parity between phone and watch, ignoring this result", buf, 2u);
        }
      }
      else
      {
        if (v18 != [WeakRetained watchCloudKitAccountExists])
        {
          ASLoggingInitialize();
          id v20 = ASLogDefault;
          if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            LODWORD(v28) = v18;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Watch CloudKit status changed to %{BOOL}d; handling.",
              buf,
              8u);
          }
          [WeakRetained setWatchCloudKitAccountExists:v18];
          [WeakRetained _handleWatchStatusAndCloudKitAccountStatusChange];
        }
        id v21 = +[NSDate date];
        [WeakRetained setLastWatchCloudKitAccountFetchTimestamp:v21];
      }
    }
    [WeakRetained setWatchCloudKitAccountFetchInProgress:0];
  }
}

void sub_10012C4F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012C510(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained buttonControllerDidUpdate];
}

void sub_10012D5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012D5BC(uint64_t a1, void *a2, void *a3)
{
  int v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [WeakRetained delegate];
  id v8 = objc_loadWeakRetained(v4);
  [v7 achievementsView:v8 didTapAchievement:v6 cell:v5];
}

void sub_10012DA44(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B4B0;
  qword_10096B4B0 = (uint64_t)v1;

  uint64_t v3 = (void *)qword_10096B4B0;

  [v3 setDateFormat:@"a"];
}

void sub_10012DAEC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B4C0;
  qword_10096B4C0 = (uint64_t)v1;

  uint64_t v3 = (void *)qword_10096B4C0;

  [v3 setDateFormat:@"h:mm"];
}

uint64_t sub_10012E390(void *a1)
{
  id v1 = a1;
  if (!qword_10096B4D0)
  {
    uint64_t v2 = +[NSCalendar calendarWithIdentifier:NSCalendarIdentifierGregorian];
    uint64_t v3 = (void *)qword_10096B4D0;
    qword_10096B4D0 = v2;
  }
  int v4 = _HKActivityCacheDateComponentsFromDate();
  uint64_t v5 = _HKCacheIndexFromDateComponents();

  return v5;
}

BOOL sub_10012E418(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id v8 = a1;
  uint64_t v9 = [v8 firstObject];
  [v9 doubleValue];
  uint64_t v11 = (uint64_t)v10;

  id v12 = [v8 lastObject];

  [v12 doubleValue];
  uint64_t v14 = (uint64_t)v13;

  BOOL v16 = v14 >= a2 && v11 <= a3;
  if (a2 == a3) {
    +[NSString stringWithFormat:@"%lld", a2, v21];
  }
  else {
  int v17 = +[NSString stringWithFormat:@"(%lld-%lld)", a2, a3];
  }
  _HKInitializeLogging();
  uint64_t v18 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v19 = @"does not match";
    *(_DWORD *)buf = 138413314;
    id v23 = v7;
    if (v16) {
      CFStringRef v19 = @"matching";
    }
    __int16 v24 = 2048;
    uint64_t v25 = v11;
    __int16 v26 = 2048;
    uint64_t v27 = v14;
    __int16 v28 = 2112;
    CFStringRef v29 = v19;
    __int16 v30 = 2112;
    id v31 = v17;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[%@] Activity summary updates in range (%lld-%lld), %@ %@", buf, 0x34u);
  }

  return v16;
}

void sub_10012EC84(double *a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  id v17 = v6;
  if (a3)
  {
    id v7 = [*(id *)(*((void *)a1 + 5) + 144) objectAtIndexedSubscript:a3 - 1];
    id v8 = [v7 nextWeekStartDate];
    [v17 setMonthWeekStart:v8];

    [v7 frame];
    double MaxY = CGRectGetMaxY(v19);
    double v10 = a1[8];
    [v17 preferredHeight];
    [v17 setFrame:0.0, MaxY, v10, v11];
  }
  else
  {
    [v6 setMonthWeekStart:*((void *)a1 + 4)];
    double v12 = a1[8];
    [v17 preferredHeight];
    [v17 setFrame:0.0, 0.0, v12, v13];
    [v17 preferredHeight];
    [*(id *)(*((void *)a1 + 5) + 120) setContentOffset:0.0, v14];
  }
  uint64_t v15 = [v17 currentWeekStartDate];
  unsigned int v16 = [v15 isEqualToDate:*(void *)(*((void *)a1 + 5) + 64)];

  if (v16) {
    objc_storeStrong((id *)(*((void *)a1 + 5) + 56), a2);
  }
}

void sub_10012FADC(uint64_t a1, void *a2)
{
  id v9 = a2;
  [v9 center];
  double v4 = v3;
  double v5 = *(double *)(*(void *)(a1 + 32) + 40) - *(double *)(*(void *)(a1 + 32) + 32);
  [v9 backingOriginOffset];
  double v7 = v5 + v6;
  [v9 additionalSpacing];
  [v9 setCenter:v4, v7 + v8];
}

void sub_10013080C(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = a2;
  id v13 = v5;
  if (!*(unsigned char *)(a1 + 56))
  {
    double v6 = (char *)[*(id *)(*(void *)(a1 + 32) + 16) count] + a3;
    id v5 = v13;
    a3 = (unint64_t)&v6[-HKDaysInAWeek];
  }
  [v5 setBackingOriginOffset:*(double *)(a1 + 48)];
  [*(id *)(a1 + 40) heightForCellAtIndex:a3 % 7 oneTime:0];
  [v13 setAdditionalSpacing:];
  [v13 center];
  double v8 = v7;
  double v9 = *(double *)(*(void *)(a1 + 32) + 40) - *(double *)(*(void *)(a1 + 32) + 32);
  [v13 backingOriginOffset];
  double v11 = v9 + v10;
  [v13 additionalSpacing];
  [v13 setCenter:v8, v11 + v12];
}

id sub_100130D60(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  return _[*(id *)(*(void *)(a1 + 32) + 48) setScale:a2];
}

void sub_100130EA8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) monthScrollDelegate];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) monthScrollDelegate];
    [v3 dateSelected:*(void *)(a1 + 40)];
  }
}

id sub_10013109C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _loadActivitySummariesForWeek:a2 ringGroupIndex:HKDaysInAWeek * a3];
}

void sub_100131150(uint64_t a1, void *a2, uint64_t a3)
{
  [a2 doubleValue];
  uint64_t v6 = (uint64_t)v5;
  double v7 = +[ActivitySummaryCache sharedInstance];
  id v12 = [v7 activitySummaryForCacheIndex:v6];

  double v8 = [*(id *)(*(void *)(a1 + 32) + 16) objectAtIndexedSubscript:*(void *)(a1 + 40) + a3];
  double v9 = *(void **)(*(void *)(a1 + 32) + 112);
  if (v12) {
    id v10 = [v9 isPausedForActivitySummary:v12];
  }
  else {
    id v10 = [v9 isPausedForActivitySummaryCacheIndex:v6];
  }
  id v11 = v10;
  [v12 setPaused:v10];
  [v8 hk_configureWithActivitySummary:v12 animated:0];
  [v8 setIsPaused:v11];
}

id sub_1001312F8(uint64_t a1, void *a2, uint64_t a3)
{
  [a2 doubleValue];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 80) existsWorkoutOnCacheIndex:(uint64_t)v5];
  double v7 = *(void **)(a1 + 40);

  return _[v7 setHasWorkout:v6 onDayIndex:a3];
}

void sub_100132838(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[UIScreen mainScreen];
  [v2 scale];
  double v4 = v3;

  double v5 = +[UIFont systemFontOfSize:60.0 / v4];
  id v6 = +[UIColor colorWithRed:0.682352941 green:0.705882353 blue:0.749019608 alpha:1.0];
  v20[0] = NSFontAttributeName;
  v20[1] = NSForegroundColorAttributeName;
  v21[0] = v5;
  v21[1] = v6;
  double v7 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:2];
  double v8 = +[NSDateFormatter localizedStringFromDate:v1 dateStyle:3 timeStyle:0];

  id v9 = [objc_alloc((Class)NSAttributedString) initWithString:v8 attributes:v7];
  [v8 sizeWithAttributes:v7];
  double v11 = v10;
  double v13 = v12;
  double v14 = +[UIScreen mainScreen];
  UIRoundToScreenScale();
  double v16 = v15;

  [v5 ascender];
  id v17 = +[UIScreen mainScreen];
  UIRoundToScreenScale();
  double v19 = v18;

  [v9 drawInRect:v16, v19, v11, v13];
}

void sub_100132A64(void *a1, void *a2, void *a3, double a4, double a5)
{
  id v9 = a3;
  id v10 = a2;
  id v11 = a1;
  id v12 = objc_alloc_init((Class)NSMutableParagraphStyle);
  [v12 setAlignment:0];
  v20[0] = NSFontAttributeName;
  v20[1] = NSForegroundColorAttributeName;
  v21[0] = v10;
  v21[1] = v9;
  void v20[2] = NSParagraphStyleAttributeName;
  void v21[2] = v12;
  double v13 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:3];
  id v14 = objc_alloc((Class)NSAttributedString);

  id v15 = [v14 initWithString:v11 attributes:v13];
  [v11 sizeWithAttributes:v13];
  double v17 = v16;
  double v19 = v18;

  [v15 drawInRect:a4, a5, v17, v19];
}

void sub_100132BD4(void *a1, void *a2, void *a3, double a4, double a5)
{
  v19[0] = NSFontAttributeName;
  v19[1] = NSForegroundColorAttributeName;
  v20[0] = a2;
  v20[1] = a3;
  id v9 = a3;
  id v10 = a2;
  id v11 = a1;
  id v12 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];
  id v13 = objc_alloc((Class)NSAttributedString);

  id v14 = [v13 initWithString:v11 attributes:v12];
  [v11 sizeWithAttributes:v12];
  double v16 = v15;
  double v18 = v17;

  [v14 drawInRect:a4, a5, v16, v18];
}

void sub_100132D14(void *a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7)
{
  v36[0] = NSFontAttributeName;
  v36[1] = NSForegroundColorAttributeName;
  v37[0] = a3;
  v37[1] = a5;
  id v33 = a5;
  id v13 = a4;
  id v14 = a3;
  id v15 = a2;
  id v16 = a1;
  double v17 = +[NSDictionary dictionaryWithObjects:v37 forKeys:v36 count:2];
  id v18 = [objc_alloc((Class)NSMutableAttributedString) initWithString:v16 attributes:v17];
  v34[0] = UIFontFeatureTypeIdentifierKey;
  v34[1] = UIFontFeatureSelectorIdentifierKey;
  v35[0] = &off_1008DE6E8;
  v35[1] = &off_1008DE700;
  id v32 = +[NSDictionary dictionaryWithObjects:v35 forKeys:v34 count:2];
  double v19 = [v13 fontDescriptor];

  id v20 = [v19 fontDescriptorByAddingAttributes:v32];

  uint64_t v21 = v14;
  [v14 pointSize];
  id v22 = +[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v20);
  id v23 = [v18 string];
  id v24 = [v23 rangeOfString:v15];
  uint64_t v26 = v25;

  [v18 addAttribute:NSFontAttributeName value:v22 range:v24];
  id v27 = objc_alloc_init((Class)NSMutableParagraphStyle);

  [v27 setAlignment:0];
  [v18 addAttribute:NSParagraphStyleAttributeName value:v27 range:0, [v18 length]];
  [v16 sizeWithAttributes:v17];
  double v29 = v28;
  double v31 = v30;

  [v18 drawInRect:a6, a7, v29, v31];
}

void sub_100132FBC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  id v9 = +[UIColor colorWithRed:0.149019608 green:0.149019608 blue:0.149019608 alpha:1.0];
  id v10 = +[UIColor clearColor];
  v15[0] = [v10 CGColor];
  id v11 = v9;
  v15[1] = [v11 CGColor];
  CFArrayRef v12 = +[NSArray arrayWithObjects:v15 count:2];
  id v13 = CGGradientCreateWithColors(DeviceRGB, v12, 0);

  CurrentContext = UIGraphicsGetCurrentContext();
  v16.x = a1;
  v16.y = a2;
  v17.x = a3;
  v17.y = a4;
  CGContextDrawLinearGradient(CurrentContext, v13, v16, v17, 0);
  CGColorSpaceRelease(DeviceRGB);
  CGGradientRelease(v13);
}

void sub_100133108(void *a1, double a2, double a3, double a4)
{
  id v7 = a1;
  double v8 = [v7 metricTitleAndValueInfo];
  id v9 = [v8 count];

  id v10 = AKAccountManager_ptr;
  id v11 = AKAccountManager_ptr;
  if ((unint64_t)v9 < 3)
  {
    double v24 = 0.55;
  }
  else
  {
    CurrentContext = UIGraphicsGetCurrentContext();
    Mutable = CGPathCreateMutable();
    double v14 = a4 * 0.5 + 8.0;
    id v15 = [v7 metricTitleAndValueInfo];
    CGPoint v16 = [v15 objectAtIndexedSubscript:1];
    CGPoint v17 = [v16 title];
    NSAttributedStringKey v60 = NSFontAttributeName;
    id v18 = +[UIFont systemFontOfSize:14.0 weight:UIFontWeightMedium];
    uint64_t v61 = v18;
    double v19 = +[NSDictionary dictionaryWithObjects:&v61 forKeys:&v60 count:1];
    [v17 sizeWithAttributes:v19];
    double v21 = v20;

    id v11 = AKAccountManager_ptr;
    BOOL v22 = v21 + 24.0 > v14;
    if (v21 + 24.0 <= v14) {
      double v23 = a4 * 0.5 + 8.0;
    }
    else {
      double v23 = v14 + 12.0;
    }
    double v24 = dbl_10074E2E0[v22];
    CGPathMoveToPoint(Mutable, 0, v23, a3 + 7.0);
    CGPathAddLineToPoint(Mutable, 0, v23, a3 + 7.0 + 39.0);
    CGPathCloseSubpath(Mutable);
    CGContextAddPath(CurrentContext, Mutable);
    uint64_t v25 = +[UIColor whiteColor];
    id v26 = [v25 colorWithAlphaComponent:0.2];
    CGContextSetStrokeColorWithColor(CurrentContext, (CGColorRef)[v26 CGColor]);

    CGContextSetLineWidth(CurrentContext, 2.0);
    CGContextSetLineCap(CurrentContext, kCGLineCapRound);
    CGContextStrokePath(CurrentContext);
    CGPathRelease(Mutable);
  }
  id v27 = [v7 metricTitleAndValueInfo];
  id v28 = [v27 count];

  if ((unint64_t)v28 >= 2)
  {
    uint64_t v52 = UIFontSystemFontDesignRounded;
    uint64_t v29 = 1;
    long long v53 = v7;
    do
    {
      double v30 = [v7 metricTitleAndValueInfo];
      double v31 = [v30 objectAtIndexedSubscript:v29];

      id v32 = [v10[312] systemFontOfSize:14.0 weight:UIFontWeightMedium];
      id v33 = [v31 title];
      uint64_t v34 = [v11[307] whiteColor];
      long long v35 = [v34 colorWithAlphaComponent:0.5];
      long long v54 = v32;
      sub_100132A64(v33, v32, v35, a2, a3);

      long long v36 = [v31 value];
      if ((unint64_t)[v36 length] <= 7) {
        double v37 = 30.0;
      }
      else {
        double v37 = 26.0;
      }

      id v38 = [v10[312] systemFontOfSize:v52 weight:v37 design:UIFontWeightMedium];
      UIFontDescriptorAttributeName v58 = UIFontDescriptorFeatureSettingsAttribute;
      v55[0] = UIFontFeatureTypeIdentifierKey;
      v55[1] = UIFontFeatureSelectorIdentifierKey;
      v56[0] = &off_1008DE6E8;
      v56[1] = &off_1008DE700;
      long long v39 = +[NSDictionary dictionaryWithObjects:v56 forKeys:v55 count:2];
      long long v57 = v39;
      long long v40 = +[NSArray arrayWithObjects:&v57 count:1];
      uint64_t v59 = v40;
      long long v41 = +[NSDictionary dictionaryWithObjects:&v59 forKeys:&v58 count:1];

      long long v42 = [v38 fontDescriptor];
      double v43 = [v42 fontDescriptorByAddingAttributes:v41];

      long long v44 = v10;
      long long v45 = [v10[312] fontWithDescriptor:v43 size:v37];
      uint64_t v46 = [v31 unit];

      double v47 = [v31 value];
      if (v46)
      {
        uint64_t v48 = [v31 unit];
        uint64_t v49 = [v31 valueColor];
        sub_100132D14(v47, v48, v38, v45, v49, a2, a3 + 16.0);
      }
      else
      {
        uint64_t v48 = [v31 valueColor];
        sub_100132BD4(v47, v38, v48, a2, a3 + 16.0);
      }

      a2 = a4 * (double)v29 * v24 + 8.0;
      ++v29;
      id v7 = v53;
      id v50 = [v53 metricTitleAndValueInfo];
      id v51 = [v50 count];

      id v10 = v44;
      id v11 = AKAccountManager_ptr;
    }
    while (v29 < (unint64_t)v51);
  }
}

id sub_1001336A8(void *a1, CGFloat a2, CGFloat a3)
{
  id v5 = a1;
  v33.width = a2;
  v33.height = a3;
  UIGraphicsBeginImageContextWithOptions(v33, 0, 0.0);
  CurrentContext = UIGraphicsGetCurrentContext();
  CGContextSaveGState(CurrentContext);
  id v7 = [v5 routeImage];

  if (v7)
  {
    double v8 = -56.0;
  }
  else
  {
    id v9 = +[UIColor colorWithRed:0.149019608 green:0.149019608 blue:0.149019608 alpha:1.0];
    [v9 setFill];

    v34.origin.x = 0.0;
    v34.origin.y = 0.0;
    v34.size.width = a2;
    v34.size.height = a3;
    CGContextFillRect(CurrentContext, v34);
    double v8 = -61.0;
  }
  CGContextTranslateCTM(CurrentContext, 0.0, a3);
  CGContextScaleCTM(CurrentContext, 1.0, -1.0);
  double v10 = a3 + v8;
  id v11 = [v5 iconImage];
  CFArrayRef v12 = (CGImage *)[v11 CGImage];
  v35.origin.x = 24.0;
  v35.origin.y = v10;
  v35.size.width = 40.0;
  v35.size.height = 40.0;
  CGContextDrawImage(CurrentContext, v35, v12);

  CGContextRestoreGState(CurrentContext);
  id v13 = [v5 metricTitleAndValueInfo];
  double v14 = [v13 objectAtIndexedSubscript:0];

  id v15 = +[UIFont systemFontOfSize:16.0 weight:UIFontWeightMedium];
  v36.origin.x = 24.0;
  v36.origin.y = v10;
  v36.size.width = 40.0;
  v36.size.height = 40.0;
  double v16 = CGRectGetMidX(v36) + 20.0 + 16.0;
  CGPoint v17 = [v14 title];
  NSAttributedStringKey v30 = NSFontAttributeName;
  double v31 = v15;
  id v18 = +[NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
  [v17 sizeWithAttributes:v18];
  double v20 = v19;

  if (v16 + v20 > a2)
  {
    uint64_t v21 = +[UIFont systemFontOfSize:13.0 weight:UIFontWeightMedium];

    v37.origin.x = 24.0;
    v37.origin.y = v10;
    v37.size.width = 40.0;
    v37.size.height = 40.0;
    double v16 = CGRectGetMidX(v37) + 20.0 + 10.0;
    id v15 = (void *)v21;
  }
  v38.origin.x = 24.0;
  v38.origin.y = v10;
  v38.size.width = 40.0;
  v38.size.height = 40.0;
  double v22 = a3 - CGRectGetMidY(v38) + -10.0;
  double v23 = [v14 title];
  double v24 = +[UIColor whiteColor];
  double v25 = 24.0;
  if (v7)
  {
    double v26 = a3 + -111.0;
  }
  else
  {
    double v25 = v16;
    double v26 = v22;
  }
  if (v7) {
    double v27 = a3 + -111.0 + 39.0;
  }
  else {
    double v27 = 74.0;
  }
  sub_100132A64(v23, v15, v24, v25, v26);

  sub_100133108(v5, 24.0, v27, a2);
  id v28 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v28;
}

id sub_100133A28(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 routeImage];

  double v3 = 140.0;
  if (v2) {
    double v4 = 240.0;
  }
  else {
    double v4 = 140.0;
  }
  v10.width = 270.0;
  v10.height = v4;
  UIGraphicsBeginImageContextWithOptions(v10, 0, 0.0);
  if (v2)
  {
    id v5 = [v1 routeImage];
    double v3 = 240.0;
    [v5 drawInRect:CGRectMake(0.0, 0.0, 270.0, 240.0)];

    sub_100132FBC(270.0, 0.0, 270.0, 240.0);
    sub_100132FBC(270.0, 0.0, 0.0, 240.0);
  }
  id v6 = sub_1001336A8(v1, 270.0, v4);
  [v6 drawInRect:CGRectMake(0.0, 0.0, 270.0, v3)];
  id v7 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v7;
}

id sub_100133B74(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[UIScreen mainScreen];
  [v2 scale];
  double v4 = v3;

  double v5 = 1200.0 / v4;
  unsigned int v6 = [v1 unearned];
  double v7 = 0.65;
  if (v6) {
    double v7 = 0.75;
  }
  double v8 = v5 * v7;
  id v9 = objc_alloc_init((Class)AAUIBadgeImageFactory);
  CGSize v10 = [v9 thumbnailImageForAchievement:v1 size:v8];
  double v11 = (v5 - v8) * 0.5;
  if ([v1 unearned]) {
    double v12 = v11;
  }
  else {
    double v12 = v11 + -30.0;
  }
  v25.width = v5;
  v25.height = v5;
  UIGraphicsBeginImageContextWithOptions(v25, 1, 0.0);
  CurrentContext = UIGraphicsGetCurrentContext();
  double v14 = +[UIColor blackColor];
  [v14 setFill];

  v26.origin.x = 0.0;
  v26.origin.y = 0.0;
  v26.size.width = v5;
  v26.size.height = v5;
  CGContextFillRect(CurrentContext, v26);
  [v10 drawAtPoint:v11, v12];
  if (([v1 unearned] & 1) == 0)
  {
    id v15 = [v1 relevantEarnedInstance];
    double v16 = v15;
    if (v15)
    {
      id v17 = v15;
    }
    else
    {
      id v18 = [v1 earnedInstances];
      id v17 = [v18 lastObject];
    }
    double v19 = [v17 earnedDateComponents];
    double v20 = +[NSCalendar hk_gregorianCalendar];
    uint64_t v21 = [v20 dateFromComponents:v19];

    sub_100132838(v21);
  }
  double v22 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v22;
}

void sub_1001357E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013580C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    uint64_t v6[2] = sub_1001358C0;
    v6[3] = &unk_1008ABB38;
    void v6[4] = WeakRetained;
    id v7 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
  }
}

void sub_1001358C0(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 168), *(id *)(a1 + 40));
  [*(id *)(a1 + 32) _fetchBurnBarScoreSummary];
  [*(id *)(a1 + 32) _createGuidedRunMediaMomentsSection];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 80));
  [WeakRetained reloadData];
}

void sub_1001359FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100135A20(uint64_t a1, void *a2)
{
  id v3 = a2;
  _HKInitializeLogging();
  double v4 = HKLogWorkouts;
  if (os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[seymour] fetched burn bar score (%@)", buf, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v6 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100135B5C;
    v7[3] = &unk_1008ABB38;
    void v7[4] = WeakRetained;
    id v8 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
}

void sub_100135B5C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 43) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 176), *(id *)(a1 + 40));
  [*(id *)(a1 + 32) _createBurnBarSection];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 80));
  [WeakRetained reloadData];
}

id sub_100135FAC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setCurrentlySelectedSwimmingPaceFormat:*(void *)(a1 + 40)];
}

void sub_100136650(uint64_t a1)
{
  [*(id *)(a1 + 32) _fetchPreferredTrackDistanceUnit];
  [*(id *)(a1 + 32) _createTrackLapsSection];
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 reloadData];
}

void sub_100136E9C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v8)
  {
    [*(id *)(a1 + 32) setSwimDistanceByStrokeStyle:v8];
    unsigned int v6 = [*(id *)(a1 + 32) swimDistanceByStrokeStyleUpdateBlock];

    if (v6)
    {
      id v7 = [*(id *)(a1 + 32) swimDistanceByStrokeStyleUpdateBlock];
      ((void (**)(void, id))v7)[2](v7, v8);
    }
  }
}

void sub_100136F48(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v8)
  {
    [*(id *)(a1 + 32) setSwimDistanceByStrokeStyle:v8];
    unsigned int v6 = [*(id *)(a1 + 32) swimDistanceByStrokeStyleUpdateBlock];

    if (v6)
    {
      id v7 = [*(id *)(a1 + 32) swimDistanceByStrokeStyleUpdateBlock];
      ((void (**)(void, id))v7)[2](v7, v8);
    }
  }
}

void sub_1001375E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100137604(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    id v8 = objc_alloc_init(_CHWorkoutDetailTrackLapTableItem);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v10 = [WeakRetained cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [(_CHWorkoutDetailTrackLapTableItem *)v8 setLapIndex:-1];
    [v7 addObject:v8];
  }
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1001377E4;
  v16[3] = &unk_1008AD1B8;
  objc_copyWeak(v18, (id *)(a1 + 32));
  v18[1] = *(id *)(a1 + 40);
  id v11 = v7;
  id v17 = v11;
  [v5 enumerateObjectsUsingBlock:v16];
  double v12 = +[NSArray arrayWithArray:v11];
  id v13 = objc_loadWeakRetained((id *)(a1 + 32));
  double v14 = [v13 tableItemsBySection];
  [v14 setObject:v12 atIndexedSubscript:*(void *)(a1 + 40)];

  id v15 = objc_loadWeakRetained((id *)(a1 + 32));
  [v15 _insertTrackLapsSection];

  objc_destroyWeak(v18);
}

void sub_1001377CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001377E4(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v11 = objc_alloc_init(_CHWorkoutDetailTrackLapTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v11, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailTrackLapTableItem *)v11 setLapIndex:a3 + 1];
  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  -[_CHWorkoutDetailTrackLapTableItem setDistanceUnit:](v11, "setDistanceUnit:", [v10 trackDistanceUnit]);

  [(_CHWorkoutDetailTrackLapTableItem *)v11 setTrackLap:v7];
  [*(id *)(a1 + 32) addObject:v11];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100137B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100137B84(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = [WeakRetained formattingManager];
  id v9 = [v8 fitnessUIFormattingManager];
  id v10 = [v9 unitManager];
  id v11 = [v10 userDistanceHKUnitForDistanceType:FIUIDistanceTypeForActivityType()];

  id v12 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    id v13 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
    id v14 = objc_loadWeakRetained((id *)(a1 + 40));
    id v15 = [v14 cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v13, "setCellClass:", [v15 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

    [(_CHWorkoutDetailSplitTableItem *)v13 setSplitIndex:-1];
    [v12 addObject:v13];
  }
  v27[0] = 0;
  v27[1] = v27;
  void v27[2] = 0x2020000000;
  v27[3] = 0;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100137E0C;
  v22[3] = &unk_1008AD208;
  CGSize v25 = v27;
  objc_copyWeak(v26, (id *)(a1 + 40));
  v26[1] = *(id *)(a1 + 48);
  id v16 = v11;
  id v23 = v16;
  id v17 = v12;
  id v24 = v17;
  [v5 enumerateObjectsUsingBlock:v22];
  id v18 = +[NSArray arrayWithArray:v17];
  id v19 = objc_loadWeakRetained((id *)(a1 + 40));
  double v20 = [v19 tableItemsBySection];
  [v20 setObject:v18 atIndexedSubscript:*(void *)(a1 + 48)];

  id v21 = objc_loadWeakRetained((id *)(a1 + 40));
  [v21 _insertSplitsSection];

  objc_destroyWeak(v26);
  _Block_object_dispose(v27, 8);
}

void sub_100137DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100137E0C(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  if (*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == 0.0)
  {
    [v11 distanceInMeters];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v7;
  }
  id v8 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v10 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 64)]);

  [(_CHWorkoutDetailSplitTableItem *)v8 setExpectedSplitDistance:*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  [(_CHWorkoutDetailSplitTableItem *)v8 setSplitIndex:a3];
  [(_CHWorkoutDetailSplitTableItem *)v8 setSplit:v11];
  [(_CHWorkoutDetailSplitTableItem *)v8 setUnit:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v8];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100138054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100138078(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = [WeakRetained formattingManager];
  id v9 = [v8 fitnessUIFormattingManager];
  id v10 = [v9 unitManager];
  id v11 = [v10 userDistanceHKUnitForDistanceType:FIUIDistanceTypeForActivityType()];

  id v12 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    id v13 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
    id v14 = objc_loadWeakRetained((id *)(a1 + 40));
    id v15 = [v14 cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v13, "setCellClass:", [v15 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

    [(_CHWorkoutDetailSplitTableItem *)v13 setSplitIndex:-1];
    [v12 addObject:v13];
  }
  v27[0] = 0;
  v27[1] = v27;
  void v27[2] = 0x2020000000;
  v27[3] = 0;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100138300;
  v22[3] = &unk_1008AD208;
  CGSize v25 = v27;
  objc_copyWeak(v26, (id *)(a1 + 40));
  v26[1] = *(id *)(a1 + 48);
  id v16 = v11;
  id v23 = v16;
  id v17 = v12;
  id v24 = v17;
  [v5 enumerateObjectsUsingBlock:v22];
  id v18 = +[NSArray arrayWithArray:v17];
  id v19 = objc_loadWeakRetained((id *)(a1 + 40));
  double v20 = [v19 tableItemsBySection];
  [v20 setObject:v18 atIndexedSubscript:*(void *)(a1 + 48)];

  id v21 = objc_loadWeakRetained((id *)(a1 + 40));
  [v21 _insertSplitsSection];

  objc_destroyWeak(v26);
  _Block_object_dispose(v27, 8);
}

void sub_1001382DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100138300(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  if (*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == 0.0)
  {
    [v11 distanceInMeters];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v7;
  }
  id v8 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v10 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 64)]);

  [(_CHWorkoutDetailSplitTableItem *)v8 setExpectedSplitDistance:*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  [(_CHWorkoutDetailSplitTableItem *)v8 setSplitIndex:a3];
  [(_CHWorkoutDetailSplitTableItem *)v8 setSplit:v11];
  [(_CHWorkoutDetailSplitTableItem *)v8 setUnit:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v8];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100138518(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10013853C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v28 = a3;
  double v31 = v4;
  id v32 = objc_alloc_init((Class)NSMutableDictionary);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id obj = [v4 allKeys];
  id v5 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
  if (v5)
  {
    id v6 = (id *)(a1 + 32);
    uint64_t v30 = *(void *)v38;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v38 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void *)(*((void *)&v37 + 1) + 8 * (void)v7);
        id v9 = objc_alloc_init((Class)NSMutableArray);
        id v10 = [v31 objectForKeyedSubscript:v8, v28];
        if ([v10 count])
        {
          id v11 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
          id WeakRetained = objc_loadWeakRetained(v6);
          id v13 = [WeakRetained cellClassesBySection];
          -[_CHWorkoutDetailTableItem setCellClass:](v11, "setCellClass:", [v13 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

          [(_CHWorkoutDetailSplitTableItem *)v11 setSplitIndex:-1];
          [v9 addObject:v11];
        }
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472;
        void v34[2] = sub_100138914;
        v34[3] = &unk_1008AD258;
        objc_copyWeak(v36, v6);
        v36[1] = *(id *)(a1 + 40);
        id v14 = v9;
        id v35 = v14;
        [v10 enumerateObjectsUsingBlock:v34];
        [v32 setObject:v14 forKeyedSubscript:v8];

        objc_destroyWeak(v36);
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
    }
    while (v5);
  }

  id v15 = (id *)(a1 + 32);
  id v16 = objc_loadWeakRetained((id *)(a1 + 32));
  id v17 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v16 currentlySelectedSwimmingPaceFormat]);
  id v18 = [v32 objectForKeyedSubscript:v17];
  BOOL v19 = [v18 count] == 0;

  if (!v19)
  {
    id v20 = objc_loadWeakRetained(v15);
    id v21 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v20 currentlySelectedSwimmingPaceFormat]);
    double v22 = [v32 objectForKeyedSubscript:v21];
    id v23 = objc_loadWeakRetained(v15);
    id v24 = [v23 tableItemsBySection];
    [v24 setObject:v22 atIndexedSubscript:*(void *)(a1 + 40)];
  }
  id v25 = [objc_alloc((Class)NSDictionary) initWithDictionary:v32];
  id v26 = objc_loadWeakRetained(v15);
  [v26 setSwimmingSplitItems:v25];

  id v27 = objc_loadWeakRetained(v15);
  [v27 _insertSplitsSection];
}

void sub_1001388F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100138914(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v10 = objc_alloc_init(_CHWorkoutDetailSplitTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v10, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailSplitTableItem *)v10 setSplitIndex:a3];
  [(_CHWorkoutDetailSplitTableItem *)v10 setSwimmingSplit:v7];

  [*(id *)(a1 + 32) addObject:v10];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100138AE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100138B08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    uint64_t v8 = objc_alloc_init(_CHWorkoutDetailSegmentTableItem);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v10 = [WeakRetained cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [(_CHWorkoutDetailSegmentTableItem *)v8 setSegmentIndex:-1];
    [v7 addObject:v8];
  }
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100138CE8;
  v16[3] = &unk_1008AD2A8;
  objc_copyWeak(v18, (id *)(a1 + 32));
  v18[1] = *(id *)(a1 + 40);
  id v11 = v7;
  id v17 = v11;
  [v5 enumerateObjectsUsingBlock:v16];
  id v12 = +[NSArray arrayWithArray:v11];
  id v13 = objc_loadWeakRetained((id *)(a1 + 32));
  id v14 = [v13 tableItemsBySection];
  [v14 setObject:v12 atIndexedSubscript:*(void *)(a1 + 40)];

  id v15 = objc_loadWeakRetained((id *)(a1 + 32));
  [v15 _insertSegmentsSection];

  objc_destroyWeak(v18);
}

void sub_100138CD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100138CE8(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v10 = objc_alloc_init(_CHWorkoutDetailSegmentTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v10, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailSegmentTableItem *)v10 setSegmentIndex:a3 + 1];
  [(_CHWorkoutDetailSegmentTableItem *)v10 setSegment:v7];

  [*(id *)(a1 + 32) addObject:v10];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100138ED0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100138EF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v21 = v6;
    id v7 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v8 = objc_alloc_init(_CHWorkoutDetailDownhillRunTableItem);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v10 = [WeakRetained cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [(_CHWorkoutDetailDownhillRunTableItem *)v8 setDownhillRunIndex:-1];
    [v7 addObject:v8];
    id v11 = [[CHWorkoutDownhillRunsStats alloc] initWithDownhillRunBridges:v5];
    id v12 = objc_alloc_init(_CHWorkoutDetailDownhillRunsStatsTableItem);
    id v13 = objc_loadWeakRetained((id *)(a1 + 32));
    id v14 = [v13 cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v12, "setCellClass:", [v14 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [(_CHWorkoutDetailDownhillRunsStatsTableItem *)v12 setDownhillRunsStats:v11];
    [v7 addObject:v12];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_1001391AC;
    v22[3] = &unk_1008AD2D0;
    objc_copyWeak(v24, (id *)(a1 + 32));
    v24[1] = *(id *)(a1 + 40);
    id v15 = v7;
    id v23 = v15;
    [v5 enumerateObjectsUsingBlock:v22];
    id v16 = +[NSArray arrayWithArray:v15];
    id v17 = objc_loadWeakRetained((id *)(a1 + 32));
    id v18 = [v17 tableItemsBySection];
    [v18 setObject:v16 atIndexedSubscript:*(void *)(a1 + 40)];

    id v19 = objc_loadWeakRetained((id *)(a1 + 32));
    [v19 _insertDownhillRunsSection];

    objc_destroyWeak(v24);
    id v6 = v21;
  }
  else
  {
    _HKInitializeLogging();
    id v20 = HKLogWorkouts;
    if (os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "No downhill runs for downhill snow sport workout.  Hiding Runs card.", buf, 2u);
    }
  }
}

void sub_100139194(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001391AC(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v10 = objc_alloc_init(_CHWorkoutDetailDownhillRunTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v10, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailDownhillRunTableItem *)v10 setDownhillRunIndex:a3 + 1];
  [(_CHWorkoutDetailDownhillRunTableItem *)v10 setDownhillRun:v7];

  [*(id *)(a1 + 32) addObject:v10];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_100139384(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1001393A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    uint64_t v8 = objc_alloc_init(_CHWorkoutDetailIntervalTableItem);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v10 = [WeakRetained cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [(_CHWorkoutDetailIntervalTableItem *)v8 setIntervalIndex:-1];
    [v7 addObject:v8];
  }
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100139588;
  v16[3] = &unk_1008AD2F8;
  objc_copyWeak(v18, (id *)(a1 + 32));
  v18[1] = *(id *)(a1 + 40);
  id v11 = v7;
  id v17 = v11;
  [v5 enumerateObjectsUsingBlock:v16];
  id v12 = +[NSArray arrayWithArray:v11];
  id v13 = objc_loadWeakRetained((id *)(a1 + 32));
  id v14 = [v13 tableItemsBySection];
  [v14 setObject:v12 atIndexedSubscript:*(void *)(a1 + 40)];

  id v15 = objc_loadWeakRetained((id *)(a1 + 32));
  [v15 _insertIntervalsSection];

  objc_destroyWeak(v18);
}

void sub_100139570(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100139588(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v10 = objc_alloc_init(_CHWorkoutDetailIntervalTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v10, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailIntervalTableItem *)v10 setIntervalIndex:a3 + 1];
  [(_CHWorkoutDetailIntervalTableItem *)v10 setInterval:v7];

  [*(id *)(a1 + 32) addObject:v10];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_1001397A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1001397C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init((Class)NSMutableArray);
  if ([v5 count])
  {
    uint64_t v8 = objc_alloc_init(_CHWorkoutDetailSwimSetTableItem);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v10 = [WeakRetained cellClassesBySection];
    -[_CHWorkoutDetailTableItem setCellClass:](v8, "setCellClass:", [v10 objectAtIndexedSubscript:*(void *)(a1 + 40)]);

    [v7 addObject:v8];
  }
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100139998;
  v16[3] = &unk_1008AD320;
  objc_copyWeak(v18, (id *)(a1 + 32));
  v18[1] = *(id *)(a1 + 40);
  id v11 = v7;
  id v17 = v11;
  [v5 enumerateObjectsUsingBlock:v16];
  id v12 = +[NSArray arrayWithArray:v11];
  id v13 = objc_loadWeakRetained((id *)(a1 + 32));
  id v14 = [v13 tableItemsBySection];
  [v14 setObject:v12 atIndexedSubscript:*(void *)(a1 + 40)];

  id v15 = objc_loadWeakRetained((id *)(a1 + 32));
  [v15 _insertSwimSetsSection];

  objc_destroyWeak(v18);
}

void sub_100139980(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100139998(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v10 = objc_alloc_init(_CHWorkoutDetailSwimSetTableItem);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [WeakRetained cellClassesBySection];
  -[_CHWorkoutDetailTableItem setCellClass:](v10, "setCellClass:", [v9 objectAtIndexedSubscript:*(void *)(a1 + 48)]);

  [(_CHWorkoutDetailSwimSetTableItem *)v10 setSetIndex:a3 + 1];
  [(_CHWorkoutDetailSwimSetTableItem *)v10 setSet:v7];

  [*(id *)(a1 + 32) addObject:v10];
  if (a3 >= 4) {
    *a4 = 1;
  }
}

void sub_10013A094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013A0D4(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)HKLocationReadings);
  id v5 = [v3 firstObject];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v7 = [WeakRetained workout];
  id v8 = [v4 initWithLocation:v5 workout:v7];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10013A1FC;
  void v10[3] = &unk_1008ABD18;
  objc_copyWeak(&v12, a1);
  id v11 = v8;
  id v9 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  objc_destroyWeak(&v12);
}

void sub_10013A1FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _handleLocations:*(void *)(a1 + 32)];
}

void sub_10013A24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7 = a6;
  _HKInitializeLogging();
  id v8 = HKLogWorkouts;
  BOOL v9 = os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_DEFAULT);
  if (!v7)
  {
    if (v9)
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[routes] Received an update from the anchored route query, loading data through location fetcher.", (uint8_t *)&v12, 2u);
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained fetchLocations];
    goto LABEL_7;
  }
  if (v9)
  {
    id WeakRetained = v8;
    id v11 = [v7 debugDescription];
    int v12 = 138412290;
    id v13 = v11;
    _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "[routes] Error from anchored route query: %@", (uint8_t *)&v12, 0xCu);

LABEL_7:
  }
}

void sub_10013A560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013A584(uint64_t a1, void *a2)
{
  id v3 = a2;
  _HKInitializeLogging();
  id v4 = (void *)HKLogWorkouts;
  if (os_log_type_enabled(HKLogWorkouts, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = v4;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v7 = [WeakRetained workout];
    id v8 = [v7 UUID];
    *(_DWORD *)buf = 138412546;
    id v14 = v8;
    __int16 v15 = 2048;
    id v16 = [v3 count];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[routes] Finished fetching data for workout %@ with %ld location readings", buf, 0x16u);
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10013A71C;
  void v10[3] = &unk_1008ABD18;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v11 = v3;
  id v9 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  objc_destroyWeak(&v12);
}

void sub_10013A71C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _handleLocations:*(void *)(a1 + 32)];
}

void sub_10013B060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013B088(id a1, UIMutableTraits *a2)
{
  uint64_t v2 = a2;
  [(UIMutableTraits *)v2 setUserInterfaceStyle:2];
  id v3 = +[UIScreen mainScreen];
  [v3 scale];
  -[UIMutableTraits setDisplayScale:](v2, "setDisplayScale:");
}

void sub_10013B0F4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setRouteImageForSharing:v3];

  id v8 = objc_loadWeakRetained(v2);
  id v5 = [v8 locationFetcherObserver];
  id v6 = objc_loadWeakRetained(v2);
  id v7 = [v6 locationReadings];
  [v5 completedFetchWithLocationReadings:v7];
}

void sub_10013CD08(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_10013CD9C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 40);
  id v4 = a2;
  id v5 = [v3 formattingManager];
  id v6 = [v5 formattedAverageSwimPaceWithDuration:v4 context:@"WorkoutDetailDisplayContext"];

  [*(id *)(a1 + 32) setValueAttrString:v6];
  id v7 = [*(id *)(a1 + 32) updateBlock];

  if (v7)
  {
    id v9 = [*(id *)(a1 + 32) updateBlock];
    id v8 = [*(id *)(a1 + 32) valueAttrString];
    v9[2](v9, v8);
  }
}

void sub_10013CE94(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v14 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (*(unsigned char *)(a1 + 40) != (v10 != 0))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _insertHeartRateSubItem];
  }
  if ([v14 count] || objc_msgSend(v9, "count"))
  {
    id v13 = objc_loadWeakRetained((id *)(a1 + 32));
    [v13 _createHeartRateSectionWithHeartRateReadings:v14 averageHeartRate:v10 recoveryHeartRateReadings:v9];
  }
}

void sub_10013CF78(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (v6 && [v6 count]) {
    [*(id *)(a1 + 32) _createPowerSectionWithPowerSamples:v6];
  }
}

void sub_10013EB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013EB2C(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10013EBBC;
  v4[3] = &unk_1008ABA78;
  id v3 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v3 setLocation:a2 completion:v4];
}

id sub_10013EBBC(uint64_t a1)
{
  [*(id *)(a1 + 32) beginUpdates];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 endUpdates];
}

id sub_10013EBF8(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setSwimDistanceByStrokeStyle:a2];
  [*(id *)(a1 + 40) beginUpdates];
  id v3 = *(void **)(a1 + 40);

  return [v3 endUpdates];
}

id sub_10013EC40(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureWithTitle1:*(void *)(a1 + 40) value1:a2];
}

id sub_10013EC50(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureWithTitle2:*(void *)(a1 + 40) value2:a2];
}

void sub_10013EC60(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10013ED48;
  v7[3] = &unk_1008AB8D8;
  objc_copyWeak(&v8, v4);
  [v6 presentViewController:v3 completion:v7];

  objc_destroyWeak(&v8);
}

void sub_10013ED34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10013ED48(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained analyticsHandler];
  [v1 didPresentMediaMomentItem];
}

void sub_10013F96C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_10013F9C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained analyticsHandler];
  [v2 didExpandDetailSection:*(void *)(a1 + 40)];
}

void sub_10013FA24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHDivingDetailChartDetailViewController alloc];
  id v3 = [WeakRetained divingDataCalculator];
  id v4 = [(CHDivingDetailChartDetailViewController *)v2 initWithDataCalculator:v3];

  id v5 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v4];
  id v6 = [WeakRetained delegate];
  [v6 presentViewController:v5 completion:*(void *)(a1 + 32)];
}

void sub_10013FAE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailedMetricsViewController alloc];
  id v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  id v5 = [WeakRetained dataCalculator];
  id v6 = [WeakRetained formattingManager];
  id v7 = [WeakRetained locationReadings];
  id v8 = [(CHWorkoutDetailedMetricsViewController *)v2 initWithWorkout:v3 workoutActivity:v4 dataCalculator:v5 formattingManager:v6 locationReadings:v7];

  id v9 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v8];
  id v10 = [WeakRetained delegate];
  [v10 presentViewController:v9 completion:*(void *)(a1 + 32)];
}

void sub_10013FC1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([*(id *)(a1 + 32) isSwimmingActivity])
  {
    uint64_t v2 = [CHWorkoutDetailSwimmingSetDataSource alloc];
    id v3 = [WeakRetained workout];
    id v4 = [WeakRetained workoutActivity];
    id v5 = [WeakRetained dataCalculator];
    id v6 = [WeakRetained formattingManager];
    id v7 = [(CHWorkoutDetailSwimmingSetDataSource *)v2 initWithWorkout:v3 workoutActivity:v4 dataCalculator:v5 formattingManager:v6];

    id v8 = [[CHWorkoutDetailedBasicViewController alloc] initWithSwimmingSetDataSource:v7];
    id v9 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v8];
    id v10 = [WeakRetained delegate];
    [v10 presentViewController:v9 completion:*(void *)(a1 + 40)];
  }
}

void sub_10013FD58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailSwimmingSplitDataSource alloc];
  id v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  id v5 = [WeakRetained dataCalculator];
  id v6 = [WeakRetained formattingManager];
  id v7 = [(CHWorkoutDetailSwimmingSplitDataSource *)v2 initWithWorkout:v3 workoutActivity:v4 dataCalculator:v5 formattingManager:v6];

  id v8 = [[CHWorkoutDetailedBasicViewController alloc] initWithSwimmingSplitDataSource:v7];
  id v9 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v8];
  id v10 = [WeakRetained delegate];
  [v10 presentViewController:v9 completion:*(void *)(a1 + 32)];
}

void sub_10013FE88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailSplitDataSource alloc];
  id v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  id v5 = [WeakRetained dataCalculator];
  id v6 = [WeakRetained formattingManager];
  id v7 = [v6 fitnessUIFormattingManager];
  id v8 = [(CHWorkoutDetailSplitDataSource *)v2 initWithWorkout:v3 workoutActivity:v4 dataCalculator:v5 formattingManager:v7];

  id v9 = [[CHWorkoutDetailedBasicViewController alloc] initWithSplitDataSource:v8];
  id v10 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v9];
  id v11 = [WeakRetained delegate];
  [v11 presentViewController:v10 completion:*(void *)(a1 + 32)];
}

void sub_10013FFD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailSegmentDataSource alloc];
  id v3 = [WeakRetained workout];
  id v4 = [WeakRetained dataCalculator];
  id v5 = [WeakRetained trackDistanceUnit];
  id v6 = [WeakRetained formattingManager];
  id v7 = [(CHWorkoutDetailSegmentDataSource *)v2 initWithWorkout:v3 dataCalculator:v4 trackDistanceUnit:v5 formattingManager:v6];

  id v8 = [[CHWorkoutDetailedBasicViewController alloc] initWithSegmentDataSource:v7];
  id v9 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v8];
  id v10 = [WeakRetained delegate];
  [v10 presentViewController:v9 completion:*(void *)(a1 + 32)];
}

void sub_1001400F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained formattingManager];
  id v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  unsigned int v5 = [v2 supportsDownhillRunsCountForWorkout:v3 workoutActivity:v4];

  if (v5)
  {
    id v6 = [CHWorkoutDetailDownhillRunDataSource alloc];
    id v7 = [WeakRetained workout];
    id v8 = [WeakRetained dataCalculator];
    id v9 = [WeakRetained formattingManager];
    id v10 = [(CHWorkoutDetailDownhillRunDataSource *)v6 initWithWorkout:v7 dataCalculator:v8 formattingManager:v9];

    id v11 = [[CHWorkoutDetailedBasicViewController alloc] initWithDownhillRunDataSource:v10];
    id v12 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v11];
    id v13 = [WeakRetained delegate];
    [v13 presentViewController:v12 completion:*(void *)(a1 + 32)];
  }
}

void sub_100140260(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained workout];
  unsigned int v3 = [v2 isIntervalWorkout];

  if (v3)
  {
    id v4 = [CHWorkoutDetailIntervalDataSource alloc];
    unsigned int v5 = [WeakRetained workout];
    id v6 = [WeakRetained dataCalculator];
    id v7 = [WeakRetained formattingManager];
    id v8 = [(CHWorkoutDetailIntervalDataSource *)v4 initWithWorkout:v5 dataCalculator:v6 formattingManager:v7];

    id v9 = [[CHWorkoutDetailedBasicViewController alloc] initWithIntervalDataSource:v8];
    id v10 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v9];
    id v11 = [WeakRetained delegate];
    [v11 presentViewController:v10 completion:*(void *)(a1 + 32)];
  }
}

void sub_100140394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained workout];
  unsigned int v3 = [v2 supportsTrackWorkout];

  if (v3)
  {
    id v4 = [CHWorkoutDetailTrackLapDataSource alloc];
    unsigned int v5 = [WeakRetained workout];
    id v6 = [WeakRetained dataCalculator];
    id v7 = [WeakRetained formattingManager];
    id v8 = [(CHWorkoutDetailTrackLapDataSource *)v4 initWithWorkout:v5 dataCalculator:v6 formattingManager:v7];

    -[CHWorkoutDetailTrackLapDataSource setDistanceUnit:](v8, "setDistanceUnit:", [WeakRetained trackDistanceUnit]);
    id v9 = [[CHWorkoutDetailedBasicViewController alloc] initWithTrackLapDataSource:v8];
    id v10 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v9];
    id v11 = [WeakRetained delegate];
    [v11 presentViewController:v10 completion:*(void *)(a1 + 32)];
  }
}

void sub_1001404DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailedHeartRateViewController alloc];
  unsigned int v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  unsigned int v5 = [WeakRetained formattingManager];
  id v6 = [(CHWorkoutDetailedHeartRateViewController *)v2 initWithWorkout:v3 workoutActivity:v4 formattingManager:v5];

  id v7 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v6];
  id v8 = [WeakRetained delegate];
  [v8 presentViewController:v7 completion:*(void *)(a1 + 32)];
}

void sub_1001405D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [CHWorkoutDetailedPowerViewController alloc];
  unsigned int v3 = [WeakRetained workout];
  id v4 = [WeakRetained workoutActivity];
  unsigned int v5 = [WeakRetained healthStore];
  id v6 = [WeakRetained formattingManager];
  id v7 = -[CHWorkoutDetailedPowerViewController initWithWorkout:workoutActivity:healthStore:formattingManager:isFirstPartyWorkout:](v2, "initWithWorkout:workoutActivity:healthStore:formattingManager:isFirstPartyWorkout:", v3, v4, v5, v6, [WeakRetained workoutIsFirstParty]);

  id v8 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v7];
  id v9 = [WeakRetained delegate];
  [v9 presentViewController:v8 completion:*(void *)(a1 + 32)];
}

void sub_1001406F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained formattingManager];
  unsigned int v3 = [WeakRetained workout];
  id v4 = [v2 formattedDescriptionForWorkout:v3 context:@"DayViewDisplayContext"];
  unsigned int v5 = [v4 string];

  id v6 = [WeakRetained formattingManager];
  id v7 = [WeakRetained workout];
  id v8 = [v6 shareTextForWorkout:v7];

  id v9 = [CHWorkoutRouteViewController alloc];
  id v10 = [WeakRetained locationReadings];
  id v11 = sub_1000FCD04();
  id v12 = [(CHWorkoutRouteViewController *)v9 initWithLocationReadings:v10 title:v5 sharingEnabled:1 shareText:v8 excludedActivityTypes:v11];

  id v13 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v12];
  id v14 = [WeakRetained delegate];
  [v14 presentViewController:v13 completion:*(void *)(a1 + 32)];
}

void sub_10014087C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained presentEffortViewController:a2 presentationCompletion:*(void *)(a1 + 32)];
}

void sub_1001409F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100140A18(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained dataCalculator];
    id v7 = [v5 workout];
    id v8 = [v5 workoutActivity];
    id v9 = [v6 cachedEffortSampleCollectionForWorkout:v7 workoutActivity:v8];

    id v10 = [v5 workout];
    id v11 = [v10 fiui_activityType];
    uint64_t v12 = v5[40];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    void v19[2] = sub_100140C58;
    v19[3] = &unk_1008AB8D8;
    objc_copyWeak(&v20, (id *)(a1 + 40));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100140CC0;
    v16[3] = &unk_1008ABD90;
    objc_copyWeak(&v18, (id *)(a1 + 40));
    id v13 = v9;
    id v17 = v13;
    id v14 = +[WOEffortBridges makeHostingControllerWithStartingEffort:v3 workoutActivityType:v11 showCurrentWorkloadButton:v12 cancel:v19 completion:v16];

    __int16 v15 = [v5 delegate];
    [v15 presentViewController:v14 animated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 32)];

    objc_destroyWeak(&v18);
    objc_destroyWeak(&v20);
  }
}

void sub_100140C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_100140C58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained delegate];
  [v1 dismissViewControllerAnimated:1 completion:&stru_1008AD588];
}

void sub_100140CC0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [WeakRetained workout];
  id v7 = [WeakRetained workoutActivity];
  id v8 = [WeakRetained healthStore];
  +[WOEffortBridges saveWithQuantity:v4 effortSampleCollection:v5 workout:v6 workoutActivity:v7 healthStore:v8 canSendAnalytics:1];

  id v9 = [WeakRetained delegate];
  [v9 dismissViewControllerAnimated:1 completion:&stru_1008AD5A8];
}

id sub_100142520(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:0.0];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 adjustSafeAreaInsetsWithHeight:0.0];
}

void sub_100142570(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = 0;
}

id sub_1001426C4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) showCloudStatusWithProgress:*(void *)(a1 + 40)];
}

id sub_10014279C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) completeCloudRestore];
}

void sub_100145114(uint64_t a1)
{
  id v2 = +[UINavigationBar appearance];
  [v2 setBarStyle:a1];
}

void sub_100145174()
{
}

void sub_10014517C()
{
  BOOL v0 = +[UITabBar appearance];
  [v0 setBarStyle:1];

  id v1 = +[UITabBar appearance];
  [v1 setTranslucent:1];
}

void sub_100145AF4(uint64_t a1, void *a2, uint64_t a3)
{
  id v17 = a2;
  uint64_t v5 = [*(id *)(a1 + 32) dateByAddingUnit:16 value:a3 toDate:*(void *)(a1 + 40) options:0];
  uint64_t v6 = sub_10012E390(v5);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 96));
  id v8 = [WeakRetained activitySummaryForCacheIndex:v6];

  if (v8)
  {
    if ([v8 isPaused])
    {
      uint64_t v9 = 1;
    }
    else
    {
      id v15 = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 88));
      uint64_t v9 = [v15 isPausedForActivitySummaryCacheIndex:[v8 _activitySummaryIndex]];
    }
    [v17 hk_configureWithActivitySummary:v8 animated:0];
  }
  else
  {
    id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 96));
    char v11 = objc_opt_respondsToSelector();

    if (v11)
    {
      id v12 = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 96));
      id v13 = [v12 isStandaloneForCacheIndex:v6];

      id v14 = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 88));
      uint64_t v9 = (uint64_t)[v14 isPausedForActivitySummaryCacheIndex:v6];

      [v17 hk_configureWithActivitySummary:0 isStandaloneFallback:v13 animated:0 completion:0];
    }
    else
    {
      [v17 hk_configureWithActivitySummary:0 animated:0];
      id v16 = objc_loadWeakRetained((id *)(*(void *)(a1 + 48) + 88));
      uint64_t v9 = (uint64_t)[v16 isPausedForActivitySummaryCacheIndex:v6];
    }
  }
  [v17 setIsPaused:v9];
}

void sub_10014684C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  [v4 _centerForRingAtIndex:a3];
  [v5 setCenter:];
}

void sub_1001468A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  [v4 _centerForRingAtIndex:a3];
  [v5 setCenter:];
}

void sub_1001469E4(void *a1, void *a2, uint64_t a3)
{
  id v5 = (void *)a1[4];
  uint64_t v6 = a1[5];
  id v7 = a2;
  id v10 = [v5 dateByAddingUnit:16 value:a3 toDate:v6 options:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1[6] + 96));
  uint64_t v9 = [WeakRetained activitySummaryForCacheIndex:sub_10012E390(v10)];

  [v7 hk_configureWithActivitySummary:v9 animated:0];
}

void sub_100147660(id a1)
{
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  *(double *)&qword_10096B4E0 = 1.0 / v1;
}

uint64_t sub_100147DC0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10014807C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setImageHidden:1];
}

id sub_100148088(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setImageHidden:0];
}

void sub_1001487C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) _presentActivityViewControllerForItems:a2];
  }
  else
  {
    _HKInitializeLogging();
    uint64_t v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071CE24((uint64_t)v5, v6);
    }
    [*(id *)(a1 + 32) _shareWorkout];
  }
}

void sub_100148A50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100148A74(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v1 dismissRemoteViewControllerOnHostController:WeakRetained];
}

BOOL sub_100149014(id a1, UIViewController *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100149060(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) navigationController];
  id v2 = [v3 popToViewController:*(void *)(a1 + 40) animated:1];
}

void sub_1001498A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id *a19)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a19);
  objc_destroyWeak((id *)(v19 - 152));
  _Unwind_Resume(a1);
}

void sub_10014997C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _presentConfigurationData:*(void *)(a1 + 32)];
}

void sub_1001499CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _presentConfigurationData:*(void *)(a1 + 32)];
}

void sub_100149A1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _presentShareSheetWithTitle:@"Try out this workout route!" image:*(void *)(a1 + 32) workoutData:*(void *)(a1 + 40)];
}

void sub_100149A74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _presentConfigurationData:*(void *)(a1 + 32)];
}

void sub_100149AC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _presentShareSheetWithTitle:@"Check out this route I took on my workout!" image:*(void *)(a1 + 32) workoutData:*(void *)(a1 + 40)];
}

void sub_100149FB0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B4F0;
  qword_10096B4F0 = (uint64_t)v1;

  id v3 = (void *)qword_10096B4F0;

  [v3 setDateStyle:1];
}

void sub_10014A054(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B500;
  qword_10096B500 = (uint64_t)v1;

  id v4 = +[NSLocale currentLocale];
  id v3 = +[NSDateFormatter dateFormatFromTemplate:@"EEE, MMM d" options:0 locale:v4];
  [(id)qword_10096B500 setDateFormat:v3];
}

void sub_10014A144(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B510;
  qword_10096B510 = (uint64_t)v1;

  [(id)qword_10096B510 setDateStyle:0];
  id v3 = (void *)qword_10096B510;

  [v3 setTimeStyle:1];
}

void sub_10014A1F4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B520;
  qword_10096B520 = (uint64_t)v1;

  [(id)qword_10096B520 setDateStyle:1];
  [(id)qword_10096B520 setTimeStyle:0];
  id v3 = (void *)qword_10096B520;

  _[v3 setDoesRelativeDateFormatting:1];
}

void sub_10014A2B0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B530;
  qword_10096B530 = (uint64_t)v1;

  id v4 = +[NSLocale currentLocale];
  id v3 = +[NSDateFormatter dateFormatFromTemplate:@"EEEE" options:0 locale:v4];
  [(id)qword_10096B530 setDateFormat:v3];
}

void sub_10014A79C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10096B540;
  qword_10096B540 = (uint64_t)v1;

  [(id)qword_10096B540 setFormattingContext:2];
  id v4 = +[NSLocale currentLocale];
  id v3 = +[NSDateFormatter dateFormatFromTemplate:@"MMMM yyyy" options:0 locale:v4];
  [(id)qword_10096B540 setDateFormat:v3];
}

id sub_10014ADC4()
{
  BOOL v0 = HKHealthKitFrameworkBundle();
  uint64_t v1 = HKHealthKitStringsTableName;
  id v2 = [v0 localizedStringForKey:@"ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_TITLE" value:&stru_1008D8AB8 table:HKHealthKitStringsTableName];

  id v3 = HKHealthKitFrameworkBundle();
  id v4 = [v3 localizedStringForKey:@"ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_BODY" value:&stru_1008D8AB8 table:v1];
  id v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v4, kASMaxNumberOfFriends);

  uint64_t v6 = +[UIAlertController alertControllerWithTitle:v2 message:v5 preferredStyle:1];
  id v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
  uint64_t v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:0];
  [v6 addAction:v9];

  return v6;
}

void sub_10014AF40(void *a1)
{
  id v1 = a1;
  id v2 = +[UIApplication sharedApplication];
  id v3 = [v2 windows];
  id v4 = [v3 firstObject];
  id v8 = [v4 rootViewController];

  id v5 = [v8 presentedViewController];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v8;
  }
  id v7 = v6;

  [v7 presentViewController:v1 animated:1 completion:0];
}

void sub_10014B014(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = [v8 as_competitionReceivedNotificationTitle];
  id v26 = [v8 as_competitionReceivedNotificationMessageForExperienceType:a4];
  char v11 = +[NSBundle mainBundle];
  id v12 = [v11 localizedStringForKey:@"SHARING_CANCEL" value:&stru_1008D8AB8 table:@"Localizable"];
  id v13 = +[UIAlertAction actionWithTitle:v12 style:1 handler:0];

  id v14 = ActivitySharingBundle();
  id v15 = FIRandomStringForPrefixWithTableName();

  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  void v31[2] = sub_10014B318;
  v31[3] = &unk_1008AD878;
  id v16 = v8;
  id v32 = v16;
  id v33 = v9;
  uint64_t v36 = a4;
  id v34 = v10;
  id v17 = v7;
  id v35 = v17;
  id v18 = v10;
  id v19 = v9;
  id v20 = +[UIAlertAction actionWithTitle:v15 style:0 handler:v31];
  id v21 = [v16 as_competitionLearnMorePopupAction];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  void v27[2] = sub_10014BB10;
  v27[3] = &unk_1008AD8A0;
  id v29 = v17;
  uint64_t v30 = a4;
  id v28 = v16;
  id v22 = v17;
  id v23 = v16;
  id v24 = +[UIAlertAction actionWithTitle:v21 style:0 handler:v27];

  id v25 = +[UIAlertController alertControllerWithTitle:v18 message:v26 preferredStyle:1];
  [v25 addAction:v13];
  [v25 addAction:v20];
  [v25 addAction:v24];
  [v25 setPreferredAction:v20];
  [v22 presentViewController:v25 animated:1 completion:0];
}

void sub_10014B318(uint64_t a1)
{
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_10014B61C;
  void v20[3] = &unk_1008AD828;
  id v21 = *(id *)(a1 + 32);
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 64);
  id v22 = v2;
  uint64_t v23 = v3;
  id v4 = objc_retainBlock(v20);
  if ([*(id *)(a1 + 32) isMyActivityDataCurrentlyHidden])
  {
    ASLoggingInitialize();
    id v5 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "My activity data is currently hidden, showing unhide confirmation", buf, 2u);
    }
    uint64_t v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"COMPETITION_ACCEPT_UNHIDE_MESSAGE" value:&stru_1008D8AB8 table:@"Localizable"];
    id v8 = [*(id *)(a1 + 32) displayName];
    id v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v8);

    id v10 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 48) message:v9 preferredStyle:1];
    char v11 = +[NSBundle mainBundle];
    id v12 = [v11 localizedStringForKey:@"SHARING_CANCEL" value:&stru_1008D8AB8 table:@"Localizable"];
    id v13 = +[UIAlertAction actionWithTitle:v12 style:1 handler:0];
    [v10 addAction:v13];

    id v14 = ActivitySharingBundle();
    id v15 = [v14 localizedStringForKey:@"COMPETITION_RECEIVED_NOTIFICATION_ACCEPT_ACTION_HIDING" value:&stru_1008D8AB8 table:@"Localizable"];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    _OWORD v17[2] = sub_10014BB00;
    v17[3] = &unk_1008AD850;
    id v18 = v4;
    id v16 = +[UIAlertAction actionWithTitle:v15 style:0 handler:v17];
    [v10 addAction:v16];

    [*(id *)(a1 + 56) presentViewController:v10 animated:1 completion:0];
  }
  else
  {
    ((void (*)(void *))v4[2])(v4);
  }
}

void sub_10014B61C(uint64_t a1)
{
  ASLoggingInitialize();
  id v2 = (void *)ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = v2;
    id v5 = [v3 UUID];
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    id v20 = v5;
    __int16 v21 = 2112;
    uint64_t v22 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Accepting competition request from friend: %@{public}@ - %@", buf, 0x16u);
  }
  id v7 = *(void **)(a1 + 32);
  id v8 = *(void **)(a1 + 40);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  _OWORD v17[2] = sub_10014B858;
  v17[3] = &unk_1008ABE08;
  id v18 = v7;
  [v8 acceptCompetitionRequestFromFriend:v18 completion:v17];
  id v9 = [*(id *)(a1 + 32) as_competitionAcceptConfirmationTitle];
  id v10 = *(void **)(a1 + 32);
  char v11 = [v10 competitionPendingAcceptance];
  id v12 = [v10 as_competitionAcceptConfirmationMessageForCompetition:v11 experienceType:*(void *)(a1 + 48)];

  id v13 = +[UIAlertController alertControllerWithTitle:v9 message:v12 preferredStyle:1];
  id v14 = +[NSBundle mainBundle];
  id v15 = [v14 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
  id v16 = +[UIAlertAction actionWithTitle:v15 style:0 handler:0];
  [v13 addAction:v16];

  sub_10014AF40(v13);
}

void sub_10014B858(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  ASLoggingInitialize();
  uint64_t v6 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109378;
    int v13 = a2;
    __int16 v14 = 2114;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Accept competition request completion with success: %d, error: %{public}@", buf, 0x12u);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014B9A4;
  block[3] = &unk_1008ABAE8;
  char v11 = a2;
  id v9 = v5;
  id v10 = *(id *)(a1 + 32);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10014B9A4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48) || *(void *)(a1 + 32))
  {
    id v2 = ActivitySharingBundle();
    id v8 = [v2 localizedStringForKey:@"COMPETITION_ERROR_TITLE" value:&stru_1008D8AB8 table:@"Localizable"];

    uint64_t v3 = [*(id *)(a1 + 40) as_competitionAcceptErrorMessage];
    id v4 = +[UIAlertController alertControllerWithTitle:v8 message:v3 preferredStyle:1];
    id v5 = +[NSBundle mainBundle];
    uint64_t v6 = [v5 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    id v7 = +[UIAlertAction actionWithTitle:v6 style:0 handler:0];
    [v4 addAction:v7];

    sub_10014AF40(v4);
  }
}

uint64_t sub_10014BB00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10014BB10(uint64_t a1)
{
  [*(id *)(a1 + 32) as_competitionLearnMoreFullDescriptionForExperienceType:*(void *)(a1 + 48)];
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [*(id *)(a1 + 32) as_competitionLearnMoreTitleForExperienceType:*(void *)(a1 + 48)];
  uint64_t v3 = +[UIAlertController alertControllerWithTitle:v2 message:v7 preferredStyle:1];

  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"SHARING_CANCEL" value:&stru_1008D8AB8 table:@"Localizable"];
  uint64_t v6 = +[UIAlertAction actionWithTitle:v5 style:1 handler:0];
  [v3 addAction:v6];

  [*(id *)(a1 + 40) presentViewController:v3 animated:1 completion:0];
}

id sub_10014C63C()
{
  if (qword_10096B560 != -1) {
    dispatch_once(&qword_10096B560, &stru_1008AD8C0);
  }
  BOOL v0 = (void *)qword_10096B558;

  return v0;
}

void sub_10014C690(id a1)
{
  id v4 = +[UIApplication sharedApplication];
  id v1 = [v4 userCachesDirectory];
  uint64_t v2 = +[NSString stringWithFormat:@"%@/FitnessWorkoutIconCache/", v1];
  uint64_t v3 = (void *)qword_10096B558;
  qword_10096B558 = v2;
}

void sub_10014C824(uint64_t a1)
{
  uint64_t v2 = sub_1000FDCC0(*(void **)(a1 + 32));
  uint64_t v3 = sub_10014D230(v2);
  id v4 = +[UIImage imageWithContentsOfCPBitmapFile:v3 flags:0];

  if (v4)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10014CD28;
    block[3] = &unk_1008AC5A8;
    id v38 = *(id *)(a1 + 40);
    id v37 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v5 = v2;
    uint64_t v6 = sub_10014C63C();
    id v7 = +[NSURL fileURLWithPath:v6 isDirectory:1];

    id v8 = +[NSString stringWithFormat:@"%@.plist", @"IconTTL"];
    id v9 = [v7 URLByAppendingPathComponent:v8 isDirectory:0];

    id v10 = [objc_alloc((Class)NSDictionary) initWithContentsOfURL:v9];
    id v11 = [v10 objectForKey:v5];

    if (v11)
    {
      id v12 = +[NSDate date];
      [v12 timeIntervalSinceDate:v11];
      double v14 = v13;

      if (v14 < 1296000.0) {
        goto LABEL_13;
      }
    }
  }
  if (qword_10096B568 != -1) {
    dispatch_once(&qword_10096B568, &stru_1008AD958);
  }
  id v11 = (id)qword_10096B570;
  uint64_t v15 = [v11 objectForKeyedSubscript:v2];
  if (v15)
  {
    id v16 = (void *)v15;
    id v17 = objc_retainBlock(*(id *)(a1 + 40));
    [v16 addObject:v17];
  }
  else
  {
    id v16 = +[NSMutableArray array];
    id v18 = objc_retainBlock(*(id *)(a1 + 40));
    [v16 addObject:v18];

    [v11 setObject:v16 forKeyedSubscript:v2];
    id v19 = *(void **)(a1 + 32);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    void v33[2] = sub_10014CD40;
    void v33[3] = &unk_1008AD910;
    id v34 = v2;
    id v35 = v11;
    id v20 = v19;
    id v32 = v33;
    __int16 v21 = [v20 bundleID];
    uint64_t v22 = +[AMSMediaTask bagSubProfile];
    uint64_t v23 = +[AMSMediaTask bagSubProfileVersion];
    id v24 = +[AMSBag bagForProfile:v22 profileVersion:v23];

    id v25 = objc_alloc((Class)AMSMediaTask);
    id v26 = [v25 initWithType:0 clientIdentifier:kHKHealthAppBundleIdentifier clientVersion:@"1" bag:v24];
    long long v45 = v21;
    id v27 = +[NSArray arrayWithObjects:&v45 count:1];
    [v26 setBundleIdentifiers:v27];

    id v28 = [v26 perform];
    _HKInitializeLogging();
    id v29 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v21;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Downloading info from AMS for bundle identifier %@", (uint8_t *)&buf, 0xCu);
    }
    *(void *)&long long buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472;
    long long v40 = sub_10014D2F0;
    long long v41 = &unk_1008AD9D0;
    id v43 = v20;
    id v44 = v32;
    id v42 = v21;
    id v30 = v21;
    id v31 = v20;
    [v28 addFinishBlock:&buf];

    id v17 = v34;
  }

LABEL_13:
}

uint64_t sub_10014CD28(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_10014CD40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = qword_10096B550;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10014CE30;
  void v10[3] = &unk_1008AD8E8;
  id v11 = v5;
  id v12 = v6;
  id v13 = *(id *)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, v10);
}

void sub_10014CE30(id *a1)
{
  id v1 = a1[4];
  if (v1 && !a1[5])
  {
    id v3 = a1[6];
    id v4 = v1;
    id v5 = v3;
    if (qword_10096B578 != -1) {
      dispatch_once(&qword_10096B578, &stru_1008AD9F0);
    }
    id v6 = dispatch_get_global_queue(-2, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10014DAE0;
    block[3] = &unk_1008ABB38;
    id v26 = v4;
    id v27 = v5;
    id v7 = v4;
    id v8 = v5;
    dispatch_async(v6, block);

    id v9 = +[NSDate date];
    id v10 = a1[6];
    id v11 = sub_10014C63C();
    id v12 = +[NSURL fileURLWithPath:v11 isDirectory:1];

    id v13 = +[NSString stringWithFormat:@"%@.plist", @"IconTTL"];
    id v14 = [v12 URLByAppendingPathComponent:v13 isDirectory:0];

    id v15 = [objc_alloc((Class)NSDictionary) initWithContentsOfURL:v14];
    id v16 = +[NSMutableDictionary dictionary];
    if (v15)
    {
      uint64_t v17 = +[NSMutableDictionary dictionaryWithDictionary:v15];

      id v16 = (void *)v17;
    }
    [v16 setObject:v9 forKeyedSubscript:v10];
    [v16 writeToURL:v14 atomically:1];

    id v18 = [a1[7] objectForKeyedSubscript:a1[6]];
    id v19 = +[NSArray arrayWithArray:v18];

    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    void v21[2] = sub_10014D134;
    void v21[3] = &unk_1008ACD88;
    id v22 = v19;
    id v23 = a1[4];
    id v24 = a1[5];
    id v20 = v19;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v21);
    [a1[7] removeObjectForKey:a1[6]];
  }
}

void sub_10014D134(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_10014D230(void *a1)
{
  id v1 = a1;
  id v2 = sub_10014C63C();
  id v3 = +[NSString stringWithFormat:@"%@%@.cpbitmap", v2, v1];

  return v3;
}

void sub_10014D2B0(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = qword_10096B570;
  qword_10096B570 = v1;

  _objc_release_x1(v1, v2);
}

void sub_10014D2F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    _HKInitializeLogging();
    long long v7 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071CF18(a1, (uint64_t)v6, v7);
    }
    long long v8 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
LABEL_5:
    v8();
    goto LABEL_23;
  }
  if (!v5)
  {
    _HKInitializeLogging();
    id v19 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071CE9C(a1, v19);
    }
    long long v8 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    goto LABEL_5;
  }
  long long v9 = [v5 responseDataItems];
  id v10 = [v9 firstObject];

  id v11 = [v10 objectForKeyedSubscript:@"attributes"];
  id v12 = [v11 objectForKeyedSubscript:@"platformAttributes"];
  id v13 = [v12 objectForKeyedSubscript:@"ios"];

  id v14 = objc_alloc((Class)AMSMediaArtwork);
  id v15 = [v13 objectForKeyedSubscript:@"artwork"];
  id v16 = [v14 initWithDictionary:v15];

  if ([*(id *)(a1 + 40) needsWatchIcon])
  {
    uint64_t v17 = [v13 objectForKeyedSubscript:@"circularArtwork"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v18 = v17;
    }
    else
    {
      id v18 = [v17 firstObject];
    }
    id v20 = v18;
    id v21 = [objc_alloc((Class)AMSMediaArtwork) initWithDictionary:v18];

    id v16 = v21;
  }
  [*(id *)(a1 + 40) preferredAppStoreIconWidth];
  double v23 = v22;
  [*(id *)(a1 + 40) preferredAppStoreIconWidth];
  id v25 = [v16 URLWithSize:AMSLookupItemArtworkCropStyleBoundedBox format:AMSLookupItemArtworkFormatPNG];
  _HKInitializeLogging();
  id v26 = HKLogActivity;
  if (v25)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v34 = v25;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Fetching app icon from AMS for URL %@", buf, 0xCu);
    }
    id v27 = +[HKAppImageManager sharedImageManager];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_10014D6FC;
    v29[3] = &unk_1008AD9A8;
    id v30 = v25;
    id v31 = *(id *)(a1 + 40);
    id v32 = *(id *)(a1 + 48);
    [v27 loadAppImageAtURL:v30 completionHandler:v29];
  }
  else
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      id v34 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "Couldn't find URL for app icon for bundle ID %@", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }

LABEL_23:
}

void sub_10014D6FC(id *a1, void *a2, uint64_t a3, char a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  id v10 = dispatch_get_global_queue(0, 0);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10014D820;
  void v13[3] = &unk_1008AD980;
  char v19 = a4;
  id v14 = v8;
  id v15 = v9;
  id v16 = a1[4];
  id v17 = a1[5];
  id v18 = a1[6];
  id v11 = v9;
  id v12 = v8;
  dispatch_async(v10, v13);
}

void sub_10014D820(uint64_t a1)
{
  if (*(void *)(a1 + 32) && *(unsigned char *)(a1 + 72) && !*(void *)(a1 + 40))
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      int v15 = 138412290;
      uint64_t v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Fetched icon from store for URL: %@", (uint8_t *)&v15, 0xCu);
    }
    unsigned int v8 = [*(id *)(a1 + 56) needsWatchIcon];
    id v9 = *(void **)(a1 + 32);
    if (v8)
    {
      id v10 = v9;
      [v10 size];
      double v12 = v11;
      [v10 size];
      id v14 = +[UIBezierPath bezierPathWithOvalInRect:](UIBezierPath, "bezierPathWithOvalInRect:", 0.0, 0.0, v12, v13);
      [v10 size];
      UIGraphicsBeginImageContextWithOptions(v19, 0, 0.0);
      [v14 addClip];
      [v10 drawAtPoint:CGPointZero.x, CGPointZero.y];

      UIGraphicsGetImageFromCurrentImageContext();
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      UIGraphicsEndImageContext();
    }
    else
    {
      id v5 = v9;
    }
  }
  else
  {
    _HKInitializeLogging();
    uint64_t v2 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v3 = *(void *)(a1 + 48);
      int v15 = 138412546;
      uint64_t v16 = v3;
      __int16 v17 = 2112;
      uint64_t v18 = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Could not fetch icon from store for URL: %@ because of error: %@", (uint8_t *)&v15, 0x16u);
    }
    id v5 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

void sub_10014DA20(id a1)
{
  uint64_t v1 = +[NSFileManager defaultManager];
  uint64_t v2 = sub_10014C63C();
  id v7 = 0;
  unsigned int v3 = [v1 createDirectoryAtPath:v2 withIntermediateDirectories:0 attributes:0 error:&v7];
  id v4 = v7;

  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    _HKInitializeLogging();
    id v6 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071CFA4(v6, (uint64_t)v4);
    }
  }
}

void sub_10014DAE0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  sub_10014D230(*(void **)(a1 + 40));
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v1 writeToCPBitmapFile:v2 flags:0];
}

id sub_10014DF14(uint64_t a1)
{
  return _[*(id *)(a1 + 32) reattachPaletteIfNeededExpanded:0];
}

void sub_10014E674(uint64_t a1)
{
  +[CATransaction begin];
  +[CATransaction setDisableActions:1];
  id v2 = [*(id *)(a1 + 32) imageFactory];
  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v4 = v3[2];
  [v3 imageDimension];
  double v6 = v5;
  [*(id *)(a1 + 32) imageDimension];
  unsigned int v8 = [v2 thumbnailImageForAchievement:v4 size:v6];

  +[CATransaction commit];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014E79C;
  block[3] = &unk_1008ACD88;
  id v9 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v12 = v9;
  id v13 = v8;
  id v10 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10014E79C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 16) == *(void *)(a1 + 40))
  {
    uint64_t v1 = *(void *)(a1 + 48);
    id v2 = [*(id *)(a1 + 32) imageView];
    [v2 setImage:v1];
  }
}

void sub_10014F0C8(id a1)
{
  uint64_t v1 = +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"SELF MATCHES %@", @".+@([A-Za-z0-9-]+\\.)+[A-Za-z]{2}[A-Za-z]*");
  uint64_t v2 = qword_10096B580;
  qword_10096B580 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100151548(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 8);
  id v2 = +[NSNumber numberWithLongLong:*(void *)(a1 + 40)];
  [v1 removeObjectForKey:v2];
}

uint64_t sub_1001515A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001515B8(uint64_t a1)
{
}

uint64_t sub_10015166C(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 32);
  return result;
}

void sub_100151688(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10015173C;
  block[3] = &unk_1008AB8D8;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_10015173C(uint64_t a1)
{
  _HKInitializeLogging();
  dispatch_time_t v2 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[FASC] Restarting activity summary query after error.", v4, 2u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startActivitySummaryQuery];
}

void sub_1001517C0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  _HKInitializeLogging();
  id v10 = (void *)HKLogActivity;
  if (v9)
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071D0C4();
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      double v11 = v10;
      *(_DWORD *)long long buf = 138543618;
      id v28 = v7;
      __int16 v29 = 2050;
      id v30 = [v8 count];
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[FASC] Activity summary query: %{public}@ updated with %{public}zd objects", buf, 0x16u);
    }
    if ([v8 count])
    {
      uint64_t v19 = a1;
      id v20 = v8;
      id v21 = v7;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      id v12 = v8;
      id v13 = [v12 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)v23;
        do
        {
          uint64_t v16 = 0;
          do
          {
            if (*(void *)v23 != v15) {
              objc_enumerationMutation(v12);
            }
            __int16 v17 = *(void **)(*((void *)&v22 + 1) + 8 * (void)v16);
            _HKInitializeLogging();
            uint64_t v18 = HKLogActivity;
            if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)long long buf = 138543362;
              id v28 = v17;
              _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Updated summary: %{public}@", buf, 0xCu);
            }
            uint64_t v16 = (char *)v16 + 1;
          }
          while (v14 != v16);
          id v14 = [v12 countByEnumeratingWithState:&v22 objects:v26 count:16];
        }
        while (v14);
      }

      (*(void (**)(void))(*(void *)(v19 + 40) + 16))();
      id v8 = v20;
      id v7 = v21;
      id v9 = 0;
    }
  }
}

void sub_100151FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100151FC4()
{
  id v0 = [objc_alloc((Class)UILabel) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  uint64_t v1 = +[UIColor whiteColor];
  [v0 setTextColor:v1];

  dispatch_time_t v2 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v2];

  [v0 setNumberOfLines:0];
  [v0 setAllowsDefaultTighteningForTruncation:1];
  [v0 setAdjustsFontSizeToFitWidth:1];
  [v0 setTextAlignment:1];

  return v0;
}

void sub_10015209C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _nextButtonTapped];
}

id sub_100152DCC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:1.0];
  dispatch_time_t v2 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v2 setAlpha:0.0];
}

void sub_100152E28(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 16);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(*(void *)(a1 + 32) + 24));
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;
  id v5 = v2;

  [*(id *)(*(void *)(a1 + 32) + 24) removeFromSuperview];
}

void sub_100153EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100153F08(uint64_t a1, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"SHARING_INVITE_ACCEPT_ERROR" value:&stru_1008D8AB8 table:@"Localizable"];
    [WeakRetained _presentErrorAlertWithMessage:v5];
  }
}

void sub_100154118(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100154140(uint64_t a1, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"SHARING_INVITE_DECLINE_ERROR" value:&stru_1008D8AB8 table:@"Localizable"];
    [WeakRetained _presentErrorAlertWithMessage:v5];
  }
}

void sub_1001541DC(uint64_t a1, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"COMPETITION_IGNORE_ERROR_MESSAGE" value:&stru_1008D8AB8 table:@"Localizable"];
    [WeakRetained _presentErrorAlertWithMessage:v5];
  }
}

void sub_10015430C(uint64_t a1)
{
  id v4 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:0 preferredStyle:1];
  uint64_t v1 = +[NSBundle mainBundle];
  uint64_t v2 = [v1 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
  uint64_t v3 = +[UIAlertAction actionWithTitle:v2 style:0 handler:0];
  [v4 addAction:v3];

  sub_10014AF40(v4);
}

void sub_100154D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100154D24(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100154DB8;
  v2[3] = &unk_1008ADB28;
  char v4 = a2;
  objc_copyWeak(&v3, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
  objc_destroyWeak(&v3);
}

void sub_100154DB8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"SHARING_INVITE_WITHDRAW_ERROR" value:&stru_1008D8AB8 table:@"Localizable"];
    char v4 = +[UIAlertController alertControllerWithTitle:v3 message:0 preferredStyle:1];

    id v5 = +[NSBundle mainBundle];
    double v6 = [v5 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100154F54;
    v8[3] = &unk_1008ADB00;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v7 = +[UIAlertAction actionWithTitle:v6 style:0 handler:v8];
    [v4 addAction:v7];

    sub_10014AF40(v4);
    objc_destroyWeak(&v9);
  }
}

void sub_100154F3C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100154F54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadDataAnimated:0];
}

id sub_100155528(void *a1)
{
  uint64_t v1 = [a1 allKeys];
  uint64_t v2 = [v1 sortedArrayUsingComparator:&stru_1008ADB68];

  return v2;
}

id sub_1001559B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadDataAnimated:1];
}

id sub_100156974(uint64_t a1, void *a2)
{
  id v3 = sub_100155528(a2);
  char v4 = +[NSNumber numberWithInteger:a1];
  id v5 = [v3 indexOfObject:v4];

  return v5;
}

int64_t sub_100156B10(id a1, NSNumber *a2, NSNumber *a3)
{
  return [(NSNumber *)a2 compare:a3];
}

void sub_1001572C0(id a1)
{
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  *(double *)&qword_10096B5B0 = 1.0 / v1;
}

void sub_100158118(uint64_t a1)
{
  double v1 = *(void **)(*(void *)(a1 + 32) + 112);
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  [v1 addObject:v2];
}

void sub_100158204(uint64_t a1)
{
  double v1 = *(void **)(*(void *)(a1 + 32) + 120);
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  [v1 addObject:v2];
}

void sub_10015853C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001585F8;
  block[3] = &unk_1008ADBB0;
  id v6 = *(id *)(a1 + 32);
  char v11 = a2;
  id v9 = v5;
  id v10 = v6;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1001585F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_1001586E8(uint64_t a1)
{
  [*(id *)(a1 + 32) _queue_sortAllWorkoutsByMonthAndYearWithCurrentFilter];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100158784;
  v3[3] = &unk_1008AD938;
  id v2 = *(void **)(a1 + 40);
  v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

uint64_t sub_100158784(uint64_t a1)
{
  [*(id *)(a1 + 32) _runFilterActionFinishedHandlers];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1001588D0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _runAnchoredObjectQueryWithRetryCount:*(void *)(a1 + 40)];
}

void sub_1001588DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40) + 1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _retryAnchoredObjectQueryWithRetryCount:v1];
}

void sub_100158930(id *a1)
{
  [a1[4] _queue_sortAllWorkoutsByMonthAndYearWithCurrentFilter];
  *((unsigned char *)a1[4] + 185) = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001589F4;
  v2[3] = &unk_1008ADC00;
  objc_copyWeak(&v3, a1 + 5);
  objc_copyWeak(&v4, a1 + 6);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&v3);
}

void sub_1001589F4(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v4 = [WeakRetained isCurrentFilterValid];

  id v5 = objc_loadWeakRetained(v2);
  if (v4)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 40));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100158B64;
    void v10[3] = &unk_1008AB8D8;
    id v7 = &v11;
    objc_copyWeak(&v11, v2);
    [v5 setCurrentFilteredTypeIdentifier:v6 completion:v10];
  }
  else
  {
    id v6 = +[CHWorkoutTypeKey emptyKey];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100158BA4;
    v8[3] = &unk_1008AB8D8;
    id v7 = &v9;
    objc_copyWeak(&v9, v2);
    [v5 setCurrentFilteredTypeIdentifier:v6 completion:v8];
  }

  objc_destroyWeak(v7);
}

void sub_100158B4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100158B64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _runAnimatedUpdateHandlers];
}

void sub_100158BA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _runAnimatedUpdateHandlers];
}

BOOL sub_100158D9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 fiui_activityType];
  int v5 = *(unsigned __int8 *)(a1 + 40);
  unsigned int v6 = [v4 isIndoor];
  id v7 = [v3 workoutActivityType];

  BOOL v9 = v7 == *(id *)(a1 + 32) && v5 == v6;
  return v9;
}

BOOL sub_100158E14(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32)) {
    return [a2 fi_swimmingLocationType] == *(id *)(a1 + 32);
  }
  else {
    return [a2 workoutActivityType] == (id)46;
  }
}

BOOL sub_100158E60(id a1, HKWorkout *a2, NSDictionary *a3)
{
  id v3 = a2;
  BOOL v4 = (id)[(HKWorkout *)v3 workoutActivityType] == (id)77
    || (id)[(HKWorkout *)v3 workoutActivityType] == (id)14;

  return v4;
}

id sub_100158EB0(uint64_t a1, uint64_t a2, void *a3)
{
  int v5 = *(void **)(*(void *)(a1 + 32) + 88);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  id v8 = [*(id *)(*(void *)(a1 + 32) + 88) objectForKeyedSubscript:v6];

  id v9 = [v8 compare:v7];
  return v9;
}

void sub_100158FAC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 104) copy];
  [*(id *)(a1 + 32) _runHandlers:v2];
}

void sub_100159078(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) copy];
  [*(id *)(a1 + 32) _runHandlers:v2];
}

void sub_100159144(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 120) copy];
  [*(id *)(a1 + 32) _runHandlers:v2];
}

void sub_10015A2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
}

void sub_10015A2E0(uint64_t a1, void *a2, void *a3, void *a4, double a5, double a6, double a7, double a8)
{
  id v14 = (id *)(a1 + 32);
  id v15 = a4;
  id v16 = a3;
  id v17 = a2;
  id WeakRetained = objc_loadWeakRetained(v14);
  [WeakRetained presentDetailForAchievement:v17 badgeRect:v16 conversionView:a5 cell:a6];
}

id sub_10015A804(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setBadgeHidden:a2];
}

id sub_10015AB8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) spinner];
  [v2 stopAnimating];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10015AC7C;
  _OWORD v5[3] = &unk_1008ABA78;
  uint64_t v6 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10015ACC4;
  v4[3] = &unk_1008ACA80;
  void v4[4] = v6;
  return +[UIView animateWithDuration:0x20000 delay:v5 options:v4 animations:0.2 completion:0.2];
}

void sub_10015AC7C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) loadingView];
  [v1 setAlpha:0.0];
}

void sub_10015ACC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) loadingView];
  [v1 removeFromSuperview];
}

void sub_10015B238(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v2 = qword_10096B5C0;
  qword_10096B5C0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

id sub_10015BE1C()
{
  id v0 = +[OBBundle bundleWithIdentifier:@"com.apple.onboarding.activity"];
  id v1 = +[ARUIMetricColors energyColors];
  uint64_t v2 = [v1 nonGradientTextColor];

  id v3 = [objc_alloc((Class)UIButton) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  BOOL v4 = +[UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];
  int v5 = [v3 titleLabel];
  [v5 setFont:v4];

  uint64_t v6 = [v0 privacyFlow];
  id v7 = [v6 localizedButtonTitle];
  [v3 setTitle:v7 forState:0];

  [v3 setTitleColor:v2 forState:0];
  id v8 = [v2 colorWithAlphaComponent:0.7];
  [v3 setTitleColor:v8 forState:1];

  return v3;
}

void sub_10015C144(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  uint64_t v2 = (void *)qword_10096B5D0;
  qword_10096B5D0 = (uint64_t)v1;

  [(id)qword_10096B5D0 setMinimumFractionDigits:0];
  [(id)qword_10096B5D0 setMaximumFractionDigits:2];
  id v3 = (void *)qword_10096B5D0;

  [v3 setNumberStyle:1];
}

void sub_10015C700(id a1)
{
  id v1 = objc_alloc_init((Class)CLGeocoder);
  uint64_t v2 = qword_10096B5E0;
  qword_10096B5E0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10015C790(id a1)
{
  id v7 = +[UIImage systemImageNamed:@"location.fill"];
  id v1 = +[UIColor secondaryLabelColor];
  uint64_t v2 = [v7 flattenedImageWithColor:v1];
  id v3 = +[UIFont defaultFontForTextStyle:UIFontTextStyleBody];
  BOOL v4 = +[UIImageSymbolConfiguration configurationWithFont:v3];
  uint64_t v5 = [v2 imageWithSymbolConfiguration:v4];
  uint64_t v6 = (void *)qword_10096B5F0;
  qword_10096B5F0 = v5;
}

void sub_10015D630(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_10015D670(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[8] setImage:v5];
  }
}

void sub_10015D6DC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[8] setHidden:0];
    [v4[8] setImage:v6];
    [v4 setNeedsLayout];
    [v4 layoutIfNeeded];
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(void))(v5 + 16))();
    }
  }
}

void sub_10015D780(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[6] setImage:v5];
  }
}

void sub_10015E084(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  BOOL v4 = v3;
  if (v3)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10015E144;
    block[3] = &unk_1008AC350;
    void block[4] = *(void *)(a1 + 32);
    id v6 = v3;
    id v7 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10015E144(uint64_t a1)
{
  id v11 = objc_alloc_init((Class)NSTextAttachment);
  uint64_t v2 = [(id)objc_opt_class() _locationArrowImage];
  [v11 setImage:v2];
  [v11 setBounds:0.0, 0.0, 10.0, 10.0];
  id v3 = objc_alloc_init((Class)NSMutableAttributedString);
  BOOL v4 = +[NSAttributedString attributedStringWithAttachment:v11];
  [v3 appendAttributedString:v4];

  id v5 = [*(id *)(a1 + 40) locality];
  if (v5 || ([*(id *)(a1 + 40) name], (id v5 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v6 = [objc_alloc((Class)NSAttributedString) initWithString:@" "];
    [v3 appendAttributedString:v6];

    id v7 = [objc_alloc((Class)NSAttributedString) initWithString:v5 attributes:0];
    [v3 appendAttributedString:v7];
  }
  id v8 = +[UIColor secondaryLabelColor];
  [v3 addAttribute:NSForegroundColorAttributeName value:v8 range:0, [v3 length]];

  id v9 = [*(id *)(*(void *)(a1 + 32) + 120) font];
  [v3 addAttribute:NSFontAttributeName value:v9 range:0, [v3 length]];

  [*(id *)(*(void *)(a1 + 32) + 120) setAttributedText:v3];
  [*(id *)(a1 + 32) setNeedsLayout];
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10) {
    (*(void (**)(void))(v10 + 16))();
  }
}

void sub_10015F208(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_10096B600;
  qword_10096B600 = (uint64_t)v1;

  id v4 = +[NSLocale currentLocale];
  id v3 = +[NSDateFormatter dateFormatFromTemplate:@"MMMM y" options:0 locale:v4];
  [(id)qword_10096B600 setDateFormat:v3];
}

void sub_10015F8E0(id a1)
{
  id v1 = objc_alloc_init((Class)UILabel);
  uint64_t v2 = (void *)qword_10096B610;
  qword_10096B610 = (uint64_t)v1;

  id v3 = (void *)qword_10096B610;

  [v3 setNumberOfLines:0];
}

void sub_1001607E0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) thumbnailImageForAchievement:*(void *)(a1 + 40) size:*(double *)(a1 + 56) size:*(double *)(a1 + 64)];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001608B0;
  block[3] = &unk_1008ACD88;
  int8x16_t v5 = *(int8x16_t *)(a1 + 40);
  id v3 = (id)v5.i64[0];
  int8x16_t v7 = vextq_s8(v5, v5, 8uLL);
  id v8 = v2;
  id v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001608B0(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) templateUniqueName];
  uint64_t v2 = [*(id *)(a1 + 40) template];
  id v3 = [v2 uniqueName];
  unsigned int v4 = [v3 isEqualToString:v7];

  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = [*(id *)(a1 + 32) badgeView];
    [v6 setImage:v5];
  }
}

void sub_100161820(id a1)
{
  id v1 = objc_alloc_init((Class)CNContactStore);
  uint64_t v2 = qword_10096B620;
  qword_10096B620 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1001618B0(id a1)
{
  id v1 = objc_alloc_init((Class)CNContact);
  uint64_t v2 = qword_10096B630;
  qword_10096B630 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1001621A0(id a1, int a2)
{
  _HKInitializeLogging();
  uint64_t v2 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "The fitness week was redefined underneath of us, bail!", v3, 2u);
  }
  exit(0);
}

void sub_100162384(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100162420;
  _OWORD v5[3] = &unk_1008ABB38;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

id sub_100162420(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 344) currentPhase];
  switch((unint64_t)result)
  {
    case 0uLL:
    case 1uLL:
      [*(id *)(a1 + 40) authorizationStatus];
      id v3 = *(void **)(a1 + 32);
      id result = [v3 _presentWelcomeViewsSetupOnboarding:];
      break;
    case 2uLL:
      id v4 = *(void **)(a1 + 32);
      id result = _[v4 _presentMoveGoalSetupOnboarding];
      break;
    case 3uLL:
      uint64_t v5 = *(void **)(a1 + 32);
      id result = _[v5 _presentExerciseAndStandGoalsSetupOnboarding];
      break;
    case 4uLL:
      id v6 = *(void **)(a1 + 32);
      id result = _[v6 _presentWhatsNewViewSetupOnboarding];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10016282C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 136));
  objc_destroyWeak((id *)(v13 - 128));
  _Unwind_Resume(a1);
}

void sub_1001628A0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[43] setCompletedWelcomeViews];
    id v4 = objc_loadWeakRetained((id *)(a1 + 40));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_100162950;
    _OWORD v5[3] = &unk_1008ABA78;
    void v5[4] = v3;
    [v4 dismissViewControllerAnimated:1 completion:v5];
  }
}

id sub_100162950(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _setupActivityAppAndLoadData];
  *(unsigned char *)(*(void *)(a1 + 32) + 9) = 0;
  return result;
}

void sub_100162988(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(unsigned __int8 *)(a1 + 49);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    uint64_t v6[2] = sub_100162A8C;
    v6[3] = &unk_1008AD668;
    id v7 = *(id *)(a1 + 32);
    id v3 = +[CHNotificationConsentController makeNotificationConsentViewController:v2 buttonHandler:v6];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained pushViewController:v3 animated:1];
  }
  else
  {
    uint64_t v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
  }
}

uint64_t sub_100162A8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100162A9C(uint64_t a1)
{
  id WeakRetained = (void **)objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (char *)[WeakRetained[43] currentPhase];
    if ((unint64_t)(v4 - 2) < 4)
    {
      _HKInitializeLogging();
      uint64_t v5 = (void *)HKLogActivity;
      if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_FAULT)) {
        sub_10071D1A4(v3 + 43, v5);
      }
      goto LABEL_8;
    }
    if (!v4)
    {
LABEL_8:
      [*(id *)(a1 + 32) pushViewController:*(void *)(a1 + 40) animated:1];
      goto LABEL_9;
    }
    if (v4 == (char *)1) {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
LABEL_9:
}

void sub_100162F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100162F70(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained[43] setCompletedWhatsNewViews];
    id WeakRetained = v2;
  }
}

void sub_100162FC0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 312) setAlpha:0.0];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 296) view];
  CGAffineTransformMakeScale(&v3, 1.0, 1.0);
  [v2 setTransform:&v3];
}

id sub_10016303C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 312) removeFromSuperview];
  [*(id *)(a1 + 32) _showCoachingDataCollectionMessageIfNeeded];

  return +[CHNotificationConsentController updateAuthorization];
}

uint64_t sub_1001636DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001636F0(uint64_t a1)
{
  _HKInitializeLogging();
  uint64_t v2 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PhoneSceneDelegate did receive HKStandalonePhoneFitnessModeDidUpdateNotification notification", v4, 2u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setActivityTabBarImage];
}

id sub_10016388C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleTodayShortcut];
}

void sub_100163894(uint64_t a1, void *a2)
{
  CGAffineTransform v3 = [a2 lastObject];
  if (v3)
  {
    id v14 = v3;
    id v4 = objc_alloc_init((Class)NSISO8601DateFormatter);
    uint64_t v5 = +[NSString stringWithFormat:@"%@T00:00:00Z", v14];
    id v6 = [v4 dateFromString:v5];
    id v7 = +[NSTimeZone localTimeZone];
    double v8 = (double)-(uint64_t)[v7 secondsFromGMT];

    id v9 = [v6 dateByAddingTimeInterval:v8];
    if (v9)
    {
      uint64_t v10 = *(void **)(a1 + 32);
      id v11 = [v10 activityTileNavController];
      [v10 _resetToViewController:v11];

      id v12 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
      id v13 = [v12 showActivityOnDate:v9 shareImmediately:0 animated:1 forGoalCompleteNotification:0 goalRecommendation:0];
    }
    CGAffineTransform v3 = v14;
  }
}

void sub_1001639F0(uint64_t a1, void *a2)
{
  CGAffineTransform v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 activityTileNavController];
  [v3 _resetToViewController:v5];

  id v12 = [v4 lastObject];

  if ([v12 isEqualToString:@"move"])
  {
    uint64_t v6 = 0;
LABEL_7:
    id v7 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    id v8 = [v7 showTodayAndShareImmediately:0 animated:0 forGoalCompleteNotification:0 goalRecommendation:0];

    id v9 = [[CHASActivitySetupViewController alloc] initWithPresentationContext:6 goalType:v6 editTodayOnly:0];
    id v10 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v9];
    id v11 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v11 presentViewController:v10 animated:1 completion:0];

    goto LABEL_8;
  }
  if ([v12 isEqualToString:@"exercise"])
  {
    uint64_t v6 = 1;
    goto LABEL_7;
  }
  if ([v12 isEqualToString:@"stand"])
  {
    uint64_t v6 = 2;
    goto LABEL_7;
  }
  id v9 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [(CHASActivitySetupViewController *)v9 presentAppSettingsShowingPane:3];
LABEL_8:
}

id sub_100163B74(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleActivityShareShortcut];
}

void sub_100163B7C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  CGAffineTransform v3 = [v2 activityTileNavController];
  [v2 _resetToViewController:v3];

  id v5 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  id v4 = [v5 navigateToTrophyCaseAnimated:1 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:1];
}

void sub_100163C10(uint64_t a1, void *a2)
{
  id v6 = [a2 lastObject];
  CGAffineTransform v3 = *(void **)(a1 + 32);
  id v4 = [v3 activityTileNavController];
  [v3 _resetToViewController:v4];

  id v5 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [v5 navigateToTrophyCaseSection:v6 withAchievementID:0 animated:1];
}

void sub_100163CAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = [v3 safeObjectAtIndex:1];
  id v4 = [v3 safeObjectAtIndex:2];

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [v5 activityTileNavController];
    [v5 _resetToViewController:v6];

    id v7 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v7 navigateToTrophyCaseSection:v4 withAchievementID:v8 animated:1];
  }
}

void sub_100163D70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v7 = a3;
  id v5 = [v4 activityTileNavController];
  [v4 _resetToViewController:v5];

  id v6 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [v6 showLoad];

  +[WOEffortBridges sendDidViewTrainingLoadAnalyticsFromURL:v7];
}

id sub_100163E08(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleHistoryShortcut];
}

void sub_100163E10(uint64_t a1, void *a2)
{
  id v11 = [a2 lastObject];
  if ([v11 isEqualToString:@"dives"])
  {
    id v3 = +[FIUIWorkoutActivityType activityTypeWithHKWorkoutActivityTypeIdentifier:84 isIndoor:0 metadata:&__NSDictionary0__struct];
    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 activityTileNavController];
    [v4 _resetToViewController:v5];

    id v6 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v6 navigateToWorkoutHistoryWithActivityType:v3 animated:1];
  }
  else if ([v11 isEqualToString:@"mindfulness"])
  {
    id v7 = *(void **)(a1 + 32);
    id v8 = [v7 activityTileNavController];
    [v7 _resetToViewController:v8];

    id v3 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v3 navigateToMindfulnessHistoryAnimated:1];
  }
  else
  {
    if (![v11 isEqualToString:@"workouts"]) {
      goto LABEL_8;
    }
    id v9 = *(void **)(a1 + 32);
    id v10 = [v9 activityTileNavController];
    [v9 _resetToViewController:v10];

    id v3 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v3 navigateToWorkoutHistoryWithActivityType:0 animated:1];
  }

LABEL_8:
}

void sub_100163F8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 objectAtIndexedSubscript:1];
  uint64_t v5 = (int)[v4 intValue];

  id v6 = [v3 objectAtIndexedSubscript:2];

  id v7 = [v6 isEqualToString:@"indoor"];
  if (_HKWorkoutActivityTypeIsValid())
  {
    id v11 = +[FIUIWorkoutActivityType activityTypeWithHKWorkoutActivityTypeIdentifier:v5 isIndoor:v7 metadata:&__NSDictionary0__struct];
    id v8 = *(void **)(a1 + 32);
    id v9 = [v8 activityTileNavController];
    [v8 _resetToViewController:v9];

    id v10 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v10 navigateToWorkoutHistoryWithActivityType:v11 animated:1];
  }
}

void sub_1001640AC(uint64_t a1, void *a2)
{
  id v7 = [a2 lastObject];
  if (v7)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v3 activityTileNavController];
    [v3 _resetToViewController:v4];

    id v5 = [objc_alloc((Class)NSUUID) initWithUUIDString:v7];
    id v6 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v6 showMindfulnessSessionWithUUID:v5];
  }
}

void sub_100164160(uint64_t a1, void *a2)
{
  id v7 = [a2 lastObject];
  if (v7)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v3 activityTileNavController];
    [v3 _resetToViewController:v4];

    id v5 = [objc_alloc((Class)NSUUID) initWithUUIDString:v7];
    id v6 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v6 showWorkoutWithId:v5 activityId:0 page:0];
  }
}

void sub_10016421C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = [v3 safeObjectAtIndex:1];
  id v4 = [v3 safeObjectAtIndex:2];

  if (v10 && v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [v5 activityTileNavController];
    [v5 _resetToViewController:v6];

    id v7 = [objc_alloc((Class)NSUUID) initWithUUIDString:v10];
    id v8 = [objc_alloc((Class)NSUUID) initWithUUIDString:v4];
    id v9 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v9 showWorkoutWithId:v7 activityId:v8 page:0];
  }
}

void sub_10016431C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v11 = [v3 safeObjectAtIndex:1];
  id v4 = [v3 safeObjectAtIndex:2];
  id v5 = [v3 safeObjectAtIndex:3];

  if (v11 && v4)
  {
    id v6 = *(void **)(a1 + 32);
    id v7 = [v6 activityTileNavController];
    [v6 _resetToViewController:v7];

    id v8 = [objc_alloc((Class)NSUUID) initWithUUIDString:v11];
    id v9 = [objc_alloc((Class)NSUUID) initWithUUIDString:v4];
    id v10 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v10 showWorkoutWithId:v8 activityId:v9 page:v5];
  }
}

void sub_10016443C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = [v3 safeObjectAtIndex:1];
  id v4 = [v3 safeObjectAtIndex:2];

  if (v9)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [v5 activityTileNavController];
    [v5 _resetToViewController:v6];

    id v7 = [objc_alloc((Class)NSUUID) initWithUUIDString:v9];
    id v8 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v8 showWorkoutWithId:v7 activityId:0 page:v4];
  }
}

void sub_100164520(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 activityTileNavController];
  [v2 _resetToViewController:v3];

  id v4 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [v4 presentAppSettingsShowingPane:0];
}

void sub_1001645A0(uint64_t a1, void *a2)
{
  id v7 = [a2 safeObjectAtIndex:1];
  if ([v7 isEqualToString:@"goals"])
  {
    uint64_t v3 = 3;
  }
  else if ([v7 isEqualToString:@"health"])
  {
    uint64_t v3 = 2;
  }
  else if ([v7 isEqualToString:@"notifications"])
  {
    uint64_t v3 = 1;
  }
  else if ([v7 isEqualToString:@"units"])
  {
    uint64_t v3 = 4;
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 activityTileNavController];
  [v4 _resetToViewController:v5];

  id v6 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [v6 presentAppSettingsShowingPane:v3];
}

id sub_1001646A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleFriendsShortcut];
}

void sub_1001646AC(uint64_t a1, void *a2)
{
  id v8 = a2;
  if (sub_1000D0350())
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 activityTileNavController];
    [v3 _resetToViewController:v4];

    id v5 = [v8 lastObject];
    id v6 = [v5 integerValue];

    id v7 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
    [v7 showSummaryCardWithIdentifier:v6];
  }
}

id sub_10016475C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleTrendsShortcut];
}

void sub_100164764(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 activityTileNavController];
  [v3 _resetToViewController:v5];

  id v6 = [v4 lastObject];

  id v7 = [v6 integerValue];
  id v8 = [*(id *)(a1 + 32) summaryDeeplinkViewController];
  [v8 showTrendWithIdentifier:v7 animated:0];
}

id sub_100164998(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setFitnessDataCollectionEnabled:0];
}

id sub_1001649A4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setFitnessDataCollectionEnabled:1];
}

uint64_t sub_1001661C4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) seymourNavController];

  if (v2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 seymourNavController];
    [v3 _setSelectedViewController:v4];
  }
  else
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071D3A8();
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100166268(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001662EC;
  block[3] = &unk_1008AD668;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1001662EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001669D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tabBarController];
  uint64_t v3 = [v2 viewControllers];
  unsigned int v4 = [v3 containsObject:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) tabBarController];
    [v5 setSelectedViewController:*(void *)(a1 + 40)];
  }
}

void sub_100166FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100167034(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained browsingConsentAlertCompletion];

  if (v3)
  {
    id v4 = objc_loadWeakRetained(v1);
    id v5 = [v4 browsingConsentAlertCompletion];
    v5[2](v5, 1);

    id v6 = objc_loadWeakRetained(v1);
    [v6 setBrowsingConsentAlertCompletion:0];
  }
}

void sub_1001670F4(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained browsingConsentAlertCompletion];

  if (v3)
  {
    id v4 = objc_loadWeakRetained(v1);
    id v5 = [v4 browsingConsentAlertCompletion];
    v5[2](v5, 0);

    id v6 = objc_loadWeakRetained(v1);
    [v6 setBrowsingConsentAlertCompletion:0];
  }
}

void sub_1001674D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100167510(uint64_t a1, void *a2)
{
  id v14 = a2;
  BOOL v3 = (unint64_t)[v14 length] >= *(void *)(a1 + 40);
  id v4 = v14;
  if (v3)
  {
    id v5 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained(v5);
    id v7 = [WeakRetained passwordEnteredHandler];

    if (v7)
    {
      id v8 = objc_loadWeakRetained(v5);
      id v9 = [v8 passwordEnteredHandler];
      ((void (**)(void, id))v9)[2](v9, v14);

      id v10 = objc_loadWeakRetained(v5);
      [v10 setPasswordEnteredHandler:0];
    }
    id v11 = objc_loadWeakRetained(v5);
    id v12 = [v11 passwordController];
    [v12 dismiss];

    id v13 = objc_loadWeakRetained(v5);
    [v13 setPasswordController:0];

    id v4 = v14;
  }
}

void sub_10016761C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v3 = [WeakRetained passwordEnteredHandler];

  if (v3)
  {
    id v4 = objc_loadWeakRetained(v1);
    id v5 = [v4 passwordEnteredHandler];
    v5[2](v5, 0);

    id v6 = objc_loadWeakRetained(v1);
    [v6 setPasswordEnteredHandler:0];
  }
  id v7 = objc_loadWeakRetained(v1);
  id v8 = [v7 passwordController];
  [v8 dismiss];

  id v9 = objc_loadWeakRetained(v1);
  [v9 setPasswordController:0];
}

id sub_1001679C8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _setupActivityAppAndLoadData];
  *(unsigned char *)(*(void *)(a1 + 32) + 9) = 0;
  return result;
}

id sub_100167C34(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissMirrorViewController];
}

void sub_100169278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100169298(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    ASLoggingInitialize();
    id v2 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received Watch pairing changed notification", v3, 2u);
    }
    [WeakRetained _updateSharingTextForMe];
  }
}

void sub_10016954C(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001695C8;
  v2[3] = &unk_1008ABAA0;
  char v3 = a2;
  void v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_1001695C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id v2 = +[NSCalendar hk_gregorianCalendar];
    unsigned int v3 = [v2 isDateInToday:*(void *)(*(void *)(a1 + 32) + 40)];

    id v4 = +[NSBundle mainBundle];
    id v5 = v4;
    if (v3) {
      CFStringRef v6 = @"MULTIPLE_DEVICES_SHARING_TODAY";
    }
    else {
      CFStringRef v6 = @"MULTIPLE_DEVICES_SHARING_PAST";
    }
    uint64_t v9 = [v4 localizedStringForKey:v6 value:&stru_1008D8AB8 table:@"Localizable"];
    uint64_t v10 = *(void *)(a1 + 32);
    id v11 = *(void **)(v10 + 272);
    *(void *)(v10 + 272) = v9;

    id v12 = *(void **)(a1 + 32);
    [v12 _reloadData];
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 272);
    *(void *)(v7 + 272) = &stru_1008D8AB8;
  }
}

NSString *__cdecl sub_100169B48(id a1, ACHAchievement *a2)
{
  id v2 = [(ACHAchievement *)a2 template];
  unsigned int v3 = [v2 uniqueName];

  return (NSString *)v3;
}

void sub_10016B338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id location)
{
}

void sub_10016B3B4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _setupCellSizes];
    [v2[2] reloadData];
    id WeakRetained = v2;
  }
}

int64_t sub_10016D5F4(id a1, _HKFitnessFriendWorkout *a2, _HKFitnessFriendWorkout *a3)
{
  id v4 = a2;
  id v5 = [(_HKFitnessFriendWorkout *)a3 startDate];
  CFStringRef v6 = [(_HKFitnessFriendWorkout *)v4 startDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

id sub_10016D978(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 relevantEarnedInstance];
  if (v4
    || ([v3 earnedInstances],
        id v5 = objc_claimAutoreleasedReturnValue(),
        [v5 lastObject],
        id v4 = objc_claimAutoreleasedReturnValue(),
        v5,
        v4))
  {
    uint64_t v20 = a1;
    CFStringRef v6 = [v4 value];

    if (v6)
    {
      id v7 = [v4 value];
      id v8 = [v3 template];
      uint64_t v9 = [v8 canonicalUnit];
      [v7 doubleValueForUnit:v9];
      uint64_t v10 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v11 = [v3 template];
    id v12 = [v11 uniqueName];
    id v13 = +[NSCalendar hk_gregorianCalendar];
    id v14 = [v4 earnedDateComponents];
    id v15 = [v13 dateFromComponents:v14];
    id v16 = [*(id *)(*(void *)(v20 + 32) + 32) UUID];
    id v17 = (void *)v10;
    uint64_t v18 = +[_HKFitnessFriendAchievement achievementWithTemplateUniqueName:v12 completedDate:v15 value:v10 friendUUID:v16];
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

id sub_10016DFC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:1];
}

id sub_10016DFCC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:0];
}

void sub_10016EC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location)
{
}

void sub_10016ECCC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  ASLoggingInitialize();
  CFStringRef v6 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109378;
    int v14 = a2;
    __int16 v15 = 2114;
    id v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SetMuteEnabled result: %d/%{public}@", buf, 0x12u);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016EE20;
  block[3] = &unk_1008AE0D0;
  char v11 = a2;
  id v9 = v5;
  char v12 = *(unsigned char *)(a1 + 40);
  id v10 = *(id *)(a1 + 32);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10016EE20(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48) || *(void *)(a1 + 32))
  {
    int v2 = *(unsigned __int8 *)(a1 + 49);
    id v3 = +[NSBundle mainBundle];
    id v4 = v3;
    if (v2) {
      CFStringRef v5 = @"SHARING_UNMUTING_ERROR_%@";
    }
    else {
      CFStringRef v5 = @"SHARING_MUTING_ERROR_%@";
    }
    id v16 = [v3 localizedStringForKey:v5 value:&stru_1008D8AB8 table:@"Localizable"];

    CFStringRef v6 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v16, *(void *)(a1 + 40));
    int v7 = *(unsigned __int8 *)(a1 + 49);
    id v8 = ActivitySharingBundle();
    id v9 = v8;
    if (v7) {
      CFStringRef v10 = @"UNMUTE_NOTIFICATIONS";
    }
    else {
      CFStringRef v10 = @"MUTE_NOTIFICATIONS";
    }
    char v11 = [v8 localizedStringForKey:v10 value:&stru_1008D8AB8 table:@"Localizable"];

    char v12 = +[UIAlertController alertControllerWithTitle:v11 message:v6 preferredStyle:1];
    id v13 = +[NSBundle mainBundle];
    int v14 = [v13 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    __int16 v15 = +[UIAlertAction actionWithTitle:v14 style:0 handler:0];
    [v12 addAction:v15];

    sub_10014AF40(v12);
  }
}

void sub_10016EFF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  ASLoggingInitialize();
  id v4 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 138412290;
    id v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Hiding not allowed, showing alert with message: %@", (uint8_t *)&v11, 0xCu);
  }
  CFStringRef v5 = ActivitySharingBundle();
  CFStringRef v6 = [v5 localizedStringForKey:@"COMPETITION_HIDING_NOT_ALLOWED_TITLE" value:&stru_1008D8AB8 table:@"Localizable"];

  int v7 = +[UIAlertController alertControllerWithTitle:v6 message:v3 preferredStyle:1];
  id v8 = +[NSBundle mainBundle];
  id v9 = [v8 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
  CFStringRef v10 = +[UIAlertAction actionWithTitle:v9 style:0 handler:0];
  [v7 addAction:v10];

  [*(id *)(a1 + 32) presentViewController:v7 animated:1 completion:0];
}

void sub_10016F1A4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  ASLoggingInitialize();
  CFStringRef v6 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109378;
    int v14 = a2;
    __int16 v15 = 2114;
    id v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SetActivityDataVisible result: %d/%{public}@", buf, 0x12u);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016F2F8;
  block[3] = &unk_1008AE0D0;
  char v11 = a2;
  id v9 = v5;
  char v12 = *(unsigned char *)(a1 + 40);
  id v10 = *(id *)(a1 + 32);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10016F2F8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48) || *(void *)(a1 + 32))
  {
    int v2 = *(unsigned __int8 *)(a1 + 49);
    id v3 = +[NSBundle mainBundle];
    id v4 = v3;
    if (v2) {
      CFStringRef v5 = @"SHARING_HIDING_ERROR";
    }
    else {
      CFStringRef v5 = @"SHARING_SHOWING_ERROR";
    }
    id v13 = [v3 localizedStringForKey:v5 value:&stru_1008D8AB8 table:@"Localizable"];

    CFStringRef v6 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v13, *(void *)(a1 + 40));
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
    id v9 = +[UIAlertController alertControllerWithTitle:v8 message:v6 preferredStyle:1];

    id v10 = +[NSBundle mainBundle];
    char v11 = [v10 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    char v12 = +[UIAlertAction actionWithTitle:v11 style:0 handler:0];
    [v9 addAction:v12];

    sub_10014AF40(v9);
  }
}

void sub_10016F4C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10016F5A4;
  v8[3] = &unk_1008ABE08;
  id v9 = *(id *)(a1 + 40);
  [v3 removeFriend:v4 completion:v8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  CFStringRef v6 = [WeakRetained navigationController];
  id v7 = [v6 popViewControllerAnimated:1];
}

void sub_10016F5A4(uint64_t a1, unsigned int a2, void *a3)
{
  id v5 = a3;
  ASLoggingInitialize();
  CFStringRef v6 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 134218242;
    uint64_t v10 = a2;
    __int16 v11 = 2114;
    id v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Removal completion block called with success: %ld, error: %{public}@", buf, 0x16u);
  }
  if (v5 || (a2 & 1) == 0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10016F6E4;
    block[3] = &unk_1008ABA78;
    id v8 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10016F6E4(uint64_t a1)
{
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"SHARING_REMOVE_ERROR" value:&stru_1008D8AB8 table:@"Localizable"];
  +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v3, *(void *)(a1 + 32));
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"SHARE_ACTIVITY" value:&stru_1008D8AB8 table:@"Localizable"];
  CFStringRef v6 = +[UIAlertController alertControllerWithTitle:v5 message:v10 preferredStyle:1];

  id v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
  id v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:0];
  [v6 addAction:v9];

  sub_10014AF40(v6);
}

void sub_10016F870(uint64_t a1)
{
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_10016FCCC;
  v29[3] = &unk_1008ABB38;
  uint64_t v2 = *(void **)(a1 + 40);
  void v29[4] = *(void *)(a1 + 32);
  id v30 = v2;
  id v3 = objc_retainBlock(v29);
  unsigned __int8 v4 = [*(id *)(*(void *)(a1 + 32) + 32) supportsCompetitions];
  id v5 = *(void **)(*(void *)(a1 + 32) + 32);
  if (v4)
  {
    if (![v5 isMyActivityDataCurrentlyHidden])
    {
      ((void (*)(void *))v3[2])(v3);
      goto LABEL_9;
    }
    ASLoggingInitialize();
    CFStringRef v6 = ASLogDefault;
    if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "My activity data is currently hidden, showing unhide confirmation", buf, 2u);
    }
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"COMPETITION_SEND_CONFIRMATION_HIDING" value:&stru_1008D8AB8 table:@"Localizable"];
    id v9 = [*(id *)(*(void *)(a1 + 32) + 32) displayName];
    id v10 = [*(id *)(*(void *)(a1 + 32) + 32) displayName];
    __int16 v11 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v8, v9, v10);

    id v12 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 48) message:v11 preferredStyle:1];
    id v13 = +[NSBundle mainBundle];
    int v14 = [v13 localizedStringForKey:@"SHARING_CANCEL" value:&stru_1008D8AB8 table:@"Localizable"];
    __int16 v15 = +[UIAlertAction actionWithTitle:v14 style:1 handler:0];
    [v12 addAction:v15];

    id v16 = ActivitySharingBundle();
    id v17 = [v16 localizedStringForKey:@"COMPETITION_SEND_CONFIRMATION_SEND_ACTION_HIDING" value:&stru_1008D8AB8 table:@"Localizable"];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    id v26[2] = sub_100170134;
    v26[3] = &unk_1008AD850;
    id v27 = v3;
    uint64_t v18 = +[UIAlertAction actionWithTitle:v17 style:0 handler:v26];
    [v12 addAction:v18];

    [*(id *)(a1 + 32) presentViewController:v12 animated:1 completion:0];
  }
  else
  {
    __int16 v11 = [v5 as_competitionSendConfirmationTitle];
    uint64_t v19 = ActivitySharingBundle();
    uint64_t v20 = [v19 localizedStringForKey:@"COMPETITION_SEND_ERROR_FRIEND_VERSION_TOO_LOW" value:&stru_1008D8AB8 table:@"Localizable"];
    id v21 = [*(id *)(*(void *)(a1 + 32) + 32) displayName];
    id v12 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v20, v21);

    long long v22 = +[UIAlertController alertControllerWithTitle:v11 message:v12 preferredStyle:1];
    long long v23 = +[NSBundle mainBundle];
    long long v24 = [v23 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    long long v25 = +[UIAlertAction actionWithTitle:v24 style:0 handler:0];
    [v22 addAction:v25];

    [*(id *)(a1 + 32) presentViewController:v22 animated:1 completion:0];
  }

LABEL_9:
}

void sub_10016FCCC(uint64_t a1)
{
  ASLoggingInitialize();
  uint64_t v2 = (void *)ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 32);
    unsigned __int8 v4 = v2;
    id v5 = [v3 UUID];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 32);
    *(_DWORD *)long long buf = 138412546;
    id v13 = v5;
    __int16 v14 = 2112;
    uint64_t v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Sending competition request to friend: %@{public}@ - %@", buf, 0x16u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 120);
  uint64_t v9 = *(void *)(v7 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10016FE48;
  void v10[3] = &unk_1008ABE08;
  id v11 = *(id *)(a1 + 40);
  [v8 sendCompetitionRequestToFriend:v9 completion:v10];
}

void sub_10016FE48(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  ASLoggingInitialize();
  uint64_t v6 = ASLogDefault;
  if (os_log_type_enabled(ASLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109378;
    int v13 = a2;
    __int16 v14 = 2114;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Send competition request completion with success: %d, error: %{public}@", buf, 0x12u);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016FF94;
  block[3] = &unk_1008ABAE8;
  char v11 = a2;
  id v9 = v5;
  id v10 = *(id *)(a1 + 32);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10016FF94(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48) || *(void *)(a1 + 32))
  {
    uint64_t v2 = ActivitySharingBundle();
    id v10 = [v2 localizedStringForKey:@"COMPETITION_ERROR_TITLE" value:&stru_1008D8AB8 table:@"Localizable"];

    id v3 = ActivitySharingBundle();
    unsigned __int8 v4 = [v3 localizedStringForKey:@"COMPETITION_SEND_ERROR_MESSAGE" value:&stru_1008D8AB8 table:@"Localizable"];
    id v5 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v4, *(void *)(a1 + 40));

    uint64_t v6 = +[UIAlertController alertControllerWithTitle:v10 message:v5 preferredStyle:1];
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"OK" value:&stru_1008D8AB8 table:@"Localizable"];
    id v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:0];
    [v6 addAction:v9];

    sub_10014AF40(v6);
  }
}

uint64_t sub_100170134(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100170144(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) as_competitionLearnMoreTitleForExperienceType:*(void *)(*(void *)(a1 + 32) + 336)];
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 32) as_competitionLearnMoreFullDescriptionForExperienceType:*(void *)(*(void *)(a1 + 32) + 336)];
  id v3 = +[UIAlertController alertControllerWithTitle:v7 message:v2 preferredStyle:1];
  unsigned __int8 v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"SHARING_CANCEL" value:&stru_1008D8AB8 table:@"Localizable"];
  uint64_t v6 = +[UIAlertAction actionWithTitle:v5 style:1 handler:0];
  [v3 addAction:v6];

  [*(id *)(a1 + 32) presentViewController:v3 animated:1 completion:0];
}

void sub_1001708DC(id a1)
{
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  *(double *)&qword_10096B640 = 1.0 / v1;
}

void sub_100170F04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100170F30(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (*(void *)(a1 + 56) == a3)
  {
    uint64_t v6 = +[UIImage _systemImageNamed:@"checkmark"];
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = [*(id *)(*(void *)(a1 + 32) + 72) objectAtIndexedSubscript:a3];
  id v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  id v12 = sub_100171090;
  int v13 = &unk_1008AD718;
  objc_copyWeak(&v15, (id *)(a1 + 48));
  id v8 = v7;
  id v14 = v8;
  id v9 = +[UIAction actionWithTitle:v5 image:v6 identifier:0 handler:&v10];
  [*(id *)(a1 + 40) addObject:v9, v10, v11, v12, v13];

  objc_destroyWeak(&v15);
}

void sub_100171078(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100171090(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] setEditing:0 animated:1];
    [v3 _updateFilterButtonTitleForWorkoutTypeKey:*(void *)(a1 + 32)];
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10017115C;
    v4[3] = &unk_1008ABB38;
    void v4[4] = v3;
    id v5 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

id sub_10017115C(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 32) setCurrentFilteredTypeIdentifier:*(void *)(a1 + 40)];
}

void sub_1001712F0(_Unwind_Exception *a1)
{
  id v5 = v3;
  objc_destroyWeak(v5);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_100171330(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateFiltersList];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _popViewControllerIfNeeded];

  id v4 = objc_loadWeakRetained(v1);
  [v4 _stopActivityIndicator];
}

void sub_1001713A4(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateFiltersList];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _popViewControllerIfNeeded];
}

void sub_100171404(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateFiltersList];
}

void sub_100172050(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_10096B650;
  qword_10096B650 = (uint64_t)v1;

  id v3 = +[NSLocale currentLocale];
  id v4 = +[NSDateFormatter dateFormatFromTemplate:@"MMMMyyyy" options:0 locale:v3];

  [(id)qword_10096B650 setDateFormat:v4];
}

uint64_t sub_1001724E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1001724FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100172514(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100172990(id a1)
{
  id v1 = sub_10014C63C();
}

void sub_100172C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100172C44(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100172C54(uint64_t a1)
{
}

void sub_100172C5C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100172CBC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 preferredAppStoreIconWidth];
  double v6 = v5;
  id v7 = +[UIScreen mainScreen];
  [v7 scale];
  double v9 = v6 / v8;

  [v4 resizedImageWithNewSize:v9];
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100172E30(uint64_t a1, void *a2)
{
  id v3 = a2;
  _HKInitializeLogging();
  id v4 = (void *)HKLogActivity;
  BOOL v5 = os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      double v6 = *(void **)(a1 + 32);
      id v7 = v4;
      double v8 = [v6 bundleID];
      *(_DWORD *)long long buf = 138412290;
      id v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Round icon for bundleID: %@ is available from NRG.", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    if (v5)
    {
      double v9 = *(void **)(a1 + 32);
      id v10 = v4;
      uint64_t v11 = [v9 bundleID];
      *(_DWORD *)long long buf = 138412290;
      id v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Round icon for bundleID: %@ not available from NRG. Trying store.", buf, 0xCu);
    }
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100172FFC;
    void v13[3] = &unk_1008ABA08;
    uint64_t v12 = *(void *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    +[CHIconCacheStoreLookup fetchIconWithCHIconParameters:v12 withCompletion:v13];
  }
}

uint64_t sub_100172FFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100173124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10017313C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) bundleID];
  id v11 = +[LSApplicationProxy applicationProxyForCompanionIdentifier:v2];

  id v3 = [objc_alloc((Class)HKSource) _init];
  id v4 = [*(id *)(a1 + 32) bundleID];
  [v3 _setBundleIdentifier:v4];

  if (v11 || [v3 _hasFirstPartyBundleID])
  {
    BOOL v5 = [*(id *)(a1 + 32) bundleID];
    id v6 = [*(id *)(a1 + 32) appIconFormat];
    id v7 = +[UIScreen mainScreen];
    [v7 scale];
    uint64_t v8 = +[UIImage _applicationIconImageForBundleIdentifier:format:scale:](UIImage, "_applicationIconImageForBundleIdentifier:format:scale:", v5, v6);
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
}

void sub_100173330(uint64_t a1, void *a2)
{
  id v3 = a2;
  _HKInitializeLogging();
  id v4 = (void *)HKLogActivity;
  BOOL v5 = os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      id v6 = *(void **)(a1 + 32);
      id v7 = v4;
      uint64_t v8 = [v6 bundleID];
      *(_DWORD *)long long buf = 138412290;
      id v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Chiclet icon for bundleID: %@ is available from LaunchServices.", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    if (v5)
    {
      uint64_t v9 = *(void **)(a1 + 32);
      id v10 = v4;
      id v11 = [v9 bundleID];
      *(_DWORD *)long long buf = 138412290;
      id v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Chiclet icon for bundleID: %@ is not available from LaunchServices. Trying store.", buf, 0xCu);
    }
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1001734FC;
    void v13[3] = &unk_1008ABA08;
    uint64_t v12 = *(void *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    +[CHIconCacheStoreLookup fetchIconWithCHIconParameters:v12 withCompletion:v13];
  }
}

uint64_t sub_1001734FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10017376C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10017378C()
{
  if (qword_10096B668 != -1) {
    dispatch_once(&qword_10096B668, &stru_1008AE358);
  }
  id v0 = (void *)qword_10096B660;

  return v0;
}

void sub_1001737E0(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100173894;
  v4[3] = &unk_1008AE2C0;
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v2 _fetchRoundIconWithParameters:v3 completion:v4];
}

void sub_100173894(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v5 = sub_10017378C();
    [v5 setObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forKey:*(void *)(a1 + 32)];

    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v7;
      uint64_t v8 = "Source icon for cacheID: %@ is available.";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, buf, 0xCu);
    }
  }
  else
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v9;
      uint64_t v8 = "Source icon for cacheID: %@ not available.";
      goto LABEL_6;
    }
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100173A54;
  v12[3] = &unk_1008AE298;
  id v10 = *(id *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  id v13 = v10;
  uint64_t v14 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
}

uint64_t sub_100173A54(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), 0);
}

void sub_100173D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100173D84()
{
  if (qword_10096B678 != -1) {
    dispatch_once(&qword_10096B678, &stru_1008AE378);
  }
  id v0 = (void *)qword_10096B670;

  return v0;
}

void sub_100173DD8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_100173E98;
  v6[3] = &unk_1008AE310;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 64);
  id v7 = v4;
  uint64_t v10 = v5;
  id v8 = *(id *)(a1 + 48);
  [v2 _fetchRoundIconWithParameters:v3 completion:v6];
}

void sub_100173E98(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v5 = sub_10017378C();
    [v5 setObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forKey:*(void *)(a1 + 32)];

    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v7;
      id v8 = "Source icon for cacheID: %@ is available.";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v10, 0xCu);
    }
  }
  else
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      id v8 = "Source icon for cacheID: %@ not available.";
      goto LABEL_6;
    }
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10017426C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10017428C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100174340;
  v4[3] = &unk_1008AE2C0;
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v2 _fetchChicletWithParameters:v3 completion:v4];
}

void sub_100174340(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v5 = sub_10017378C();
    [v5 setObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forKey:*(void *)(a1 + 32)];

    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v7;
      id v8 = "Source icon for cacheID: %@ is available.";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, buf, 0xCu);
    }
  }
  else
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v9;
      id v8 = "Source icon for cacheID: %@ not available.";
      goto LABEL_6;
    }
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100174500;
  v12[3] = &unk_1008AE298;
  id v10 = *(id *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  id v13 = v10;
  uint64_t v14 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
}

uint64_t sub_100174500(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), 0);
}

void sub_100174810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100174830(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_1001748F0;
  v6[3] = &unk_1008AE310;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 64);
  id v7 = v4;
  uint64_t v10 = v5;
  id v8 = *(id *)(a1 + 48);
  [v2 _fetchChicletWithParameters:v3 completion:v6];
}

void sub_1001748F0(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v5 = sub_10017378C();
    [v5 setObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forKey:*(void *)(a1 + 32)];

    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v7;
      id v8 = "Source icon for cacheID: %@ is available.";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v10, 0xCu);
    }
  }
  else
  {
    _HKInitializeLogging();
    id v6 = HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      id v8 = "Source icon for cacheID: %@ not available.";
      goto LABEL_6;
    }
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100174A64(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = (void *)qword_10096B660;
  qword_10096B660 = (uint64_t)v1;

  [(id)qword_10096B660 setEvictsObjectsWhenApplicationEntersBackground:0];
  uint64_t v3 = (void *)qword_10096B660;

  [v3 setCountLimit:10];
}

void sub_100174AC0(id a1)
{
  uint64_t v1 = HKCreateSerialDispatchQueueWithQOSClass();
  uint64_t v2 = qword_10096B670;
  qword_10096B670 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1001756A0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) me];
  [*(id *)(a1 + 32) _showDetailForFriend:v2 date:*(void *)(a1 + 40)];
}

void sub_1001757C4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) friendWithUUID:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _showDetailForFriend:v2 date:*(void *)(a1 + 48)];
}

id sub_100175898(uint64_t a1)
{
  return [*(id *)(a1 + 32) didTapInboxBarButtonView:*(void *)(*(void *)(a1 + 32) + 144)];
}

void sub_1001760B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001760E4(id *a1, id a2)
{
  if (a1[6] == a2)
  {
    id v4 = +[UIImage _systemImageNamed:@"checkmark"];
  }
  else
  {
    id v4 = 0;
  }
  uint64_t v5 = ASDisplayModeToString();
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  uint64_t v9 = sub_100176218;
  int v10 = &unk_1008AE3A0;
  objc_copyWeak(v11, a1 + 5);
  v11[1] = a2;
  id v6 = +[UIAction actionWithTitle:v5 image:v4 identifier:0 handler:&v7];

  [a1[4] addObject:v6, v7, v8, v9, v10];
  objc_destroyWeak(v11);
}

void sub_100176200(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100176218(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = +[NSUserDefaults standardUserDefaults];
    [v2 setInteger:*(void *)(a1 + 40) forKey:@"CHFriendListDisplayMode"];

    [WeakRetained[9] setDisplayMode:*(void *)(a1 + 40)];
    [WeakRetained _logFriendListDisplayMode:*(void *)(a1 + 40)];
    [WeakRetained _updateSectionsForCurrentDisplayContext];
    uint64_t v3 = [WeakRetained tableView];
    [v3 reloadData];

    id v4 = [WeakRetained _sortMenu];
    [WeakRetained[15] setMenu:v4];
  }
}

id sub_100176D2C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100176DD8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  [v2 pushViewController:*(void *)(a1 + 40) animated:1];
}

id sub_100176EC4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateOnscreenCellsToNewValues];
}

id sub_100176F50(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateOnscreenCellsToNewValues];
}

void sub_100177640(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateSectionsForCurrentDisplayContext];
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 reloadData];
}

void sub_100177820(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100177898;
  block[3] = &unk_1008ABA78;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100177898(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  uint64_t v1 = [v2 refreshControl];
  [v1 endRefreshing];
}

void sub_100177A5C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) removeAllObjects];
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 reloadData];
}

void sub_100177E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100177E54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _refreshCache];
}

void sub_100177F00(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"FitnessActivityWorkoutsChangedNotification" object:*(void *)(a1 + 32)];
}

void sub_100177FFC(uint64_t a1)
{
  id v22 = objc_alloc_init((Class)NSMutableDictionary);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = [*(id *)(a1 + 32) dataProvider];
  uint64_t v3 = [v2 workoutsByDay];
  id v4 = [v3 allKeys];

  id obj = v4;
  id v5 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v21 = *(void *)v26;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v26 != v21) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(id *)(*((void *)&v25 + 1) + 8 * (void)v7);
        uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 24) calendarIdentifier];
        unsigned __int8 v10 = [v9 isEqual:NSCalendarIdentifierGregorian];

        uint64_t v11 = v8;
        if ((v10 & 1) == 0)
        {
          uint64_t v12 = [*(id *)(*(void *)(a1 + 32) + 24) dateFromComponents:v8];
          uint64_t v11 = _HKActivityCacheDateComponentsFromDate();
        }
        uint64_t v13 = _HKCacheIndexFromDateComponents();
        uint64_t v14 = [*(id *)(a1 + 32) dataProvider];
        id v15 = [v14 workoutsByDay];
        uint64_t v16 = [v15 objectForKeyedSubscript:v8];
        id v17 = [v16 count];

        uint64_t v18 = +[NSNumber numberWithInt:v17 != 0];
        uint64_t v19 = +[NSNumber numberWithLongLong:v13];
        [v22 setObject:v18 forKeyedSubscript:v19];

        uint64_t v7 = (char *)v7 + 1;
      }
      while (v6 != v7);
      id v6 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
    }
    while (v6);
  }

  [*(id *)(a1 + 32) setNumberOfWorkoutsForCacheKey:v22];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001782C8;
  block[3] = &unk_1008AD668;
  id v24 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1001782C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100178388(void *a1)
{
  id v2 = *(void **)(a1[4] + 32);
  id v4 = +[NSNumber numberWithLongLong:a1[6]];
  uint64_t v3 = [v2 objectForKeyedSubscript:v4];
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = [v3 BOOLValue];
}

double sub_1001784A0()
{
  return 2.5;
}

double sub_1001784B4()
{
  id v0 = +[UIScreen mainScreen];
  [v0 bounds];
  if (CGRectGetWidth(v3) >= 375.0) {
    double v1 = 112.0;
  }
  else {
    double v1 = 90.0;
  }

  return v1;
}

double sub_10017851C()
{
  id v0 = +[UIScreen mainScreen];
  [v0 bounds];
  if (CGRectGetWidth(v3) >= 375.0) {
    double v1 = 108.0;
  }
  else {
    double v1 = 88.0;
  }

  return v1;
}

UIColor *sub_100178584()
{
  return +[UIColor colorWithWhite:0.298039216 alpha:1.0];
}

UIColor *sub_10017859C()
{
  return +[UIColor colorWithRed:0.470588235 green:0.470588235 blue:0.501960784 alpha:0.36];
}

id sub_1001785C4()
{
  id v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"IntervalPoolSwimmingAutoSets"];

  return v1;
}

id sub_10017860C()
{
  id v0 = +[LSApplicationWorkspace defaultWorkspace];
  id v1 = [v0 applicationIsInstalled:@"com.apple.MobileSMS"];

  return v1;
}

void sub_100178968(uint64_t a1)
{
  _HKInitializeLogging();
  id v2 = HKLogCoaching;
  if (os_log_type_enabled(HKLogCoaching, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412290;
    uint64_t v33 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CHMoveModeNotificationResponseCoordinator handling notification response %@", buf, 0xCu);
  }
  id v4 = [*(id *)(a1 + 32) notification];
  uint64_t v5 = [v4 request];
  id v6 = [(id)v5 content];
  uint64_t v7 = [v6 categoryIdentifier];

  id v8 = +[FCNotificationRequestConstants moveModeNotificationCategory];
  LOBYTE(v5) = [v7 isEqualToString:v8];

  if ((v5 & 1) == 0)
  {
    uint64_t v9 = +[FCNotificationRequestConstants moveModeChangeModeNotificationCategory];
    unsigned int v10 = [v7 isEqualToString:v9];

    if (v10)
    {
      uint64_t v11 = [*(id *)(a1 + 32) notification];
      uint64_t v12 = [v11 request];
      uint64_t v13 = [v12 content];
      uint64_t v14 = [v13 userInfo];
      id v15 = +[FCMoveModeNotificationConstants nextMoveModeUserInfoKey];
      id v16 = [v14 objectForKeyedSubscript:v15];

      id v17 = [v16 integerValue];
      uint64_t v18 = [*(id *)(a1 + 32) notification];
      uint64_t v19 = [v18 request];
      uint64_t v20 = [v19 content];
      uint64_t v21 = [v20 userInfo];
      id v22 = +[FCMoveModeNotificationConstants notificationTypeUserInfoKey];
      id v23 = [v21 objectForKeyedSubscript:v22];

      id v24 = -[CHMoveModeChangePromptViewController initWithNextMoveMode:notificationType:healthStore:formattingManager:]([CHMoveModeChangePromptViewController alloc], "initWithNextMoveMode:notificationType:healthStore:formattingManager:", v17, [v23 integerValue], *(void *)(a1 + 40), *(void *)(a1 + 48));
      id v25 = objc_alloc_init((Class)UINavigationController);
      id v31 = v24;
      long long v26 = +[NSArray arrayWithObjects:&v31 count:1];
      [v25 setViewControllers:v26 animated:0];

      [*(id *)(a1 + 56) presentViewController:v25 animated:0 completion:0];
LABEL_8:

      goto LABEL_9;
    }
    long long v27 = +[FCNotificationRequestConstants moveModeChangeGoalsNotificationCategory];
    unsigned int v28 = [v7 isEqualToString:v27];

    if (v28)
    {
      id v16 = objc_alloc_init((Class)UINavigationController);
      id v23 = [objc_alloc((Class)FIUIPregnancyStateProvider) initWithHealthStore:*(void *)(a1 + 40)];
      id v24 = [[CHASActivitySetupMetricsCollectionViewController alloc] initWithPresentationContext:6 pregnancyStateProvider:v23];
      id v30 = v24;
      __int16 v29 = +[NSArray arrayWithObjects:&v30 count:1];
      [v16 setViewControllers:v29 animated:0];

      [*(id *)(a1 + 56) presentViewController:v16 animated:0 completion:0];
      goto LABEL_8;
    }
  }
LABEL_9:
}

void sub_100178E6C(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  id v2 = (void *)qword_10096B680;
  qword_10096B680 = (uint64_t)v1;

  [(id)qword_10096B680 setMinimumFractionDigits:0];
  [(id)qword_10096B680 setMaximumFractionDigits:2];
  uint64_t v3 = (void *)qword_10096B680;

  [v3 setNumberStyle:1];
}

void sub_100179954(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSErrorUserInfoKey a10, NSErrorUserInfoKey a11, uint64_t a12, uint64_t a13)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exception_object);
    a10 = NSLocalizedFailureReasonErrorKey;
    id v15 = [v14 reason];
    a12 = (uint64_t)v15;
    a11 = NSLocalizedDescriptionKey;
    id v16 = [v14 name];
    a13 = (uint64_t)v16;
    id v17 = +[NSDictionary dictionaryWithObjects:&a12 forKeys:&a10 count:2];
    uint64_t v18 = +[NSError errorWithDomain:@"com.apple.ObjectiveCException" code:-1 userInfo:v17];

    if (v13) {
      *uint64_t v13 = v18;
    }

    objc_end_catch();
    JUMPOUT(0x100179914);
  }
  _Unwind_Resume(exception_object);
}

id sub_10017A724(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(a1 + 32) + 48);
  long long v2 = *(_OWORD *)(a1 + 56);
  v4[0] = *(_OWORD *)(a1 + 40);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 72);
  return [v1 setTransform:v4];
}

void sub_10017AB54(uint64_t a1)
{
  id v2 = +[UIColor labelColor];
  [*(id *)(a1 + 32) setTextColor:v2];
}

void sub_10017ADA4(uint64_t a1)
{
  id v2 = +[UIColor labelColor];
  [*(id *)(a1 + 32) setTextColor:v2];
}

uint64_t sub_10017BE1C(char *a1, char *a2)
{
  return sub_100480218(*a1, *a2);
}

Swift::Int sub_10017BE28()
{
  return sub_1004802B8();
}

uint64_t sub_10017BE30()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10017BE9C()
{
  return sub_100481084();
}

uint64_t sub_10017BEA4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008AE698, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10017BF04(void *a1@<X8>)
{
  unint64_t v2 = 0x80000001007B5290;
  if (*v1) {
    unint64_t v2 = 0x80000001007B52B0;
  }
  *a1 = 0xD000000000000017;
  a1[1] = v2;
}

uint64_t sub_10017BF40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10017BFB4(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = sub_1000AFA94(&qword_10094B7C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_messageComposerDelegate) = 0;
  uint64_t v9 = v2 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator__replyOptions;
  v12[1] = _swiftEmptyArrayStorage;
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  sub_10017FF5C(a1, v2 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_context) = v4;
  sub_10017C150();
  id v10 = [self defaultCenter];
  [v10 addObserver:v2 selector:"refreshReplyOptions" name:NSCurrentLocaleDidChangeNotification object:0];

  sub_10017F544(a1);
  return v2;
}

uint64_t sub_10017C150()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10008DB18((uint64_t)v4, &qword_10094B7A0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_10094B7B0;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10017C394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_10017C3B4, 0, 0);
}

uint64_t sub_10017C3B4()
{
  uint64_t v1 = v0[3] + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight;
  [*(id *)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28)) isCompetitionActive];
  id v2 = 0;
  if (*(unsigned char *)(v1 + 8) == 2) {
    id v2 = *(id *)v1;
  }
  id v3 = (id)ASActivitySharingRandomizedLocalizedReplyForReplyContextType();

  if (v3)
  {
    v0[4] = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for MainActor();
    v0[5] = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    uint64_t v4 = sub_10017C4E8;
    uint64_t v5 = v7;
    uint64_t v6 = v9;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10017C4E8()
{
  uint64_t v1 = v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_retain();
  static Published.subscript.setter();
  id v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

id sub_10017C5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v98 = a1;
  uint64_t v99 = a2;
  uint64_t v104 = a3;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v95 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v95 - v11;
  __chkstk_darwin(v13);
  id v15 = (char *)&v95 - v14;
  __chkstk_darwin(v16);
  uint64_t v105 = (uint64_t)&v95 - v17;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v23 = (char *)&v95 - v22;
  __chkstk_darwin(v24);
  long long v26 = (char *)&v95 - v25;
  __chkstk_darwin(v27);
  __int16 v29 = (char *)&v95 - v28;
  uint64_t v30 = type metadata accessor for URL();
  uint64_t v31 = *(void *)(v30 - 8);
  id v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v102 = v30;
  uint64_t v103 = v29;
  uint64_t v100 = v31 + 56;
  uint64_t v101 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v29, 1, 1);
  uint64_t v33 = v3 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight;
  id v34 = *(void **)(v33 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28));
  id v35 = [v34 UUID];
  if (v35)
  {
    uint64_t v36 = v35;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v15, 0, 1, v37);
  }
  else
  {
    uint64_t v38 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
  }
  sub_1000AEEC8((uint64_t)v15, v105, (uint64_t *)&unk_1009555F0);
  id result = [v34 contact];
  if (!result)
  {
    __break(1u);
    return result;
  }
  long long v40 = result;
  id v41 = [result primaryDestinationForMessaging];

  uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v42 = *(void **)v33;
  if (*(unsigned char *)(v33 + 8))
  {
    if (*(unsigned char *)(v33 + 8) == 1)
    {
      id v43 = self;
      id v44 = v42;
      id v45 = [v43 snapshotWithActivitySummary:v44];
      NSString v46 = String._bridgeToObjectiveC()();
      sub_1000CD344(v105, (uint64_t)v9);
      uint64_t v47 = type metadata accessor for UUID();
      uint64_t v48 = *(void *)(v47 - 8);
      Class isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v9, 1, v47) != 1)
      {
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v47);
      }
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v51 = (id)ASRichMessagePayloadForGoalCompletion();

      if (v51)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v52 = 0;
        id v44 = v51;
      }
      else
      {
        uint64_t v52 = 1;
      }
      uint64_t v67 = v104;
      uint64_t v81 = v101;

      sub_10008DB18(v105, (uint64_t *)&unk_1009555F0);
      uint64_t v68 = (uint64_t)v103;
      sub_10008DB18((uint64_t)v103, (uint64_t *)&unk_10094B790);
      v81(v23, v52, 1, v102);
      long long v26 = v23;
    }
    else
    {
      uint64_t v71 = self;
      id v72 = v42;
      id v73 = [v71 fitnessFriendWorkoutFromHKWorkout:v72];
      NSString v74 = String._bridgeToObjectiveC()();
      sub_1000CD344(v105, (uint64_t)v6);
      uint64_t v75 = type metadata accessor for UUID();
      uint64_t v76 = *(void *)(v75 - 8);
      Class v77 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v6, 1, v75) != 1)
      {
        Class v77 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v6, v75);
      }
      NSString v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v79 = (id)ASRichMessagePayloadForWorkout();

      if (v79)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v80 = 0;
        id v72 = v79;
      }
      else
      {
        uint64_t v80 = 1;
      }
      uint64_t v68 = (uint64_t)v103;
      uint64_t v67 = v104;
      char v94 = v101;
      uint64_t v93 = v102;

      sub_10008DB18(v105, (uint64_t *)&unk_1009555F0);
      sub_10008DB18(v68, (uint64_t *)&unk_10094B790);
      v94(v20, v80, 1, v93);
      long long v26 = v20;
    }
LABEL_29:
    sub_1000AEEC8((uint64_t)v26, v68, (uint64_t *)&unk_10094B790);
    return (id)sub_1000AEEC8(v68, v67, (uint64_t *)&unk_10094B790);
  }
  long long v53 = v42;
  id v54 = [v53 relevantEarnedInstance];
  if (v54)
  {
    long long v55 = v54;
    unint64_t v96 = v53;
    id v56 = [v53 template];
    id v57 = (id)ASFriendAchievementFromTemplateAndEarnedInstance();

    UIFontDescriptorAttributeName v58 = v57;
    NSString v59 = String._bridgeToObjectiveC()();
    sub_1000CD344(v105, (uint64_t)v12);
    uint64_t v60 = type metadata accessor for UUID();
    uint64_t v61 = *(void *)(v60 - 8);
    Class v62 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v12, 1, v60) != 1)
    {
      Class v62 = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v60);
    }
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int64_t v64 = (id)ASRichMessagePayloadForAchievement();

    if (v64)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v65 = 0;
      uint64_t v66 = v58;
      UIFontDescriptorAttributeName v58 = v64;
      uint64_t v68 = (uint64_t)v103;
      uint64_t v67 = v104;
      unsigned __int8 v70 = v101;
      uint64_t v69 = v102;
    }
    else
    {
      uint64_t v65 = 1;
      uint64_t v68 = (uint64_t)v103;
      uint64_t v67 = v104;
      unsigned __int8 v70 = v101;
      uint64_t v69 = v102;
      uint64_t v66 = v96;
    }

    sub_10008DB18(v105, (uint64_t *)&unk_1009555F0);
    sub_10008DB18(v68, (uint64_t *)&unk_10094B790);
    v70(v26, v65, 1, v69);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v82 = static os_log_type_t.error.getter();
  uint64_t v83 = (void *)HKLogActivity;
  os_log_type_t v84 = v82;
  if (os_log_type_enabled(HKLogActivity, v82))
  {
    uint64_t v85 = v53;
    long long v53 = v83;
    unint64_t v86 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v86 = 138412290;
    uint64_t v106 = v85;
    double v88 = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v87 = v42;

    _os_log_impl((void *)&_mh_execute_header, v53, v84, "Failed to get earned instance for achievement: %@", v86, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v90 = (uint64_t)v103;
  uint64_t v89 = v104;
  uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v101;
  uint64_t v91 = v102;

  sub_10008DB18(v105, (uint64_t *)&unk_1009555F0);
  sub_10008DB18(v90, (uint64_t *)&unk_10094B790);
  return (id)v92(v89, 1, 1, v91);
}

id sub_10017CFAC()
{
  uint64_t v1 = type metadata accessor for Date();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight;
  uint64_t v10 = *(void **)(v9 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28));
  id v11 = [v10 UUID];
  if (!v11)
  {
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_6;
  }
  uint64_t v12 = v11;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id result = [v10 contact];
  if (result)
  {
    uint64_t v14 = result;
    id v15 = [result primaryDestinationForMessaging];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Date.init()();
    return (id)Reply.init(message:isFromMe:friend:recipientAddress:timestamp:)();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10017D240()
{
  sub_1000AFA94(&qword_10094B770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  strcpy((char *)(inited + 32), "activityType");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  sub_10007E2D8(0, &qword_10094B778);
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0x656372756F73;
  *(void *)(inited + 64) = 0xE600000000000000;
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v1;
  unint64_t v2 = sub_100522C10(inited);
  NSString v3 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v2);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

uint64_t sub_10017D44C()
{
  sub_10017F544(v0 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight);

  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator__replyOptions;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10017D510@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingReplyCoordinator();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10017D550(void *a1, uint64_t a2)
{
  swift_getObjectType();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  uint64_t v6 = (void *)HKLogActivity;
  os_log_type_t v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    uint64_t v8 = v6;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = _typeName(_:qualified:)();
    sub_10008F1F4(v10, v11, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    unint64_t v12 = 0xE600000000000000;
    uint64_t v13 = 0x64656C696166;
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x6E776F6E6B6E75;
    if (a2 == 1)
    {
      uint64_t v15 = 1953391987;
      unint64_t v14 = 0xE400000000000000;
    }
    if (a2 != 2)
    {
      uint64_t v13 = v15;
      unint64_t v12 = v14;
    }
    if (a2) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 0x656C6C65636E6163;
    }
    if (a2) {
      unint64_t v17 = v12;
    }
    else {
      unint64_t v17 = 0xE900000000000064;
    }
    uint64_t v19 = sub_10008F1F4(v16, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s Activity sharing reply message sent with result: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  [a1 dismissViewControllerAnimated:1 completion:0 v19, v20];
  return (*(uint64_t (**)(uint64_t))(v2
                                            + OBJC_IVAR____TtCC10FitnessApp31ActivitySharingReplyCoordinator23MessageComposerDelegate_completion))(a2);
}

id sub_10017D820()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingReplyCoordinator.MessageComposerDelegate();
  return [super dealloc];
}

uint64_t variable initialization expression of DivingDataCalculator.delegate()
{
  return 0;
}

uint64_t variable initialization expression of DiveMetrics.diveCount()
{
  return 11565;
}

uint64_t variable initialization expression of DiveMetrics.depthUnit()
{
  return 0;
}

uint64_t variable initialization expression of DiveMetrics.waterTemperatureExtrema()
{
  return 0;
}

uint64_t variable initialization expression of DiveMetrics.rawTemperatureExtrema()
{
  return 0;
}

double variable initialization expression of DivingDataCalculator._metrics@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 11565;
  *(void *)(a1 + 32) = 0xE200000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 11565;
  *(void *)(a1 + 64) = 0xE200000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = 11565;
  *(void *)(a1 + 96) = 0xE200000000000000;
  *(void *)(a1 + 104) = 11565;
  *(void *)(a1 + 112) = 0xE200000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = 1;
  return result;
}

uint64_t variable initialization expression of DivingDataCalculator._chartWidth()
{
  return 0;
}

void *variable initialization expression of DivingDataCalculator.rawDepthSamples()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10017D91C()
{
  return type metadata accessor for ActivitySharingReplyCoordinator();
}

uint64_t type metadata accessor for ActivitySharingReplyCoordinator()
{
  uint64_t result = qword_10094B1D8;
  if (!qword_10094B1D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10017D970()
{
  type metadata accessor for ActivitySharingHighlight();
  if (v0 <= 0x3F)
  {
    sub_10017DA50();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10017DA50()
{
  if (!qword_10094B1E8)
  {
    sub_1000A1370((uint64_t *)&unk_10094B1F0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094B1E8);
    }
  }
}

uint64_t type metadata accessor for ActivitySharingReplyCoordinator.MessageComposerDelegate()
{
  return self;
}

void type metadata accessor for HKWorkoutActivityType(uint64_t a1)
{
}

void type metadata accessor for FCCMoveModeNotificationType(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for _HKWorkoutGoalType(uint64_t a1)
{
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for FIExperienceType(uint64_t a1)
{
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
}

void type metadata accessor for FIUIDistanceUnit(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for FIUISwimmingPaceFormat(uint64_t a1)
{
}

__n128 initializeWithTake for AwardedWorkoutIntent(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VO2MaxRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VO2MaxRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for FIWorkoutSplitMeasurementSystem(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for HKActivityGoalType(uint64_t a1)
{
}

void type metadata accessor for CHASActivitySetupPresentationContext(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
}

void type metadata accessor for MessageComposeResult(uint64_t a1)
{
}

unsigned char *storeEnumTagSinglePayload for ActivitySharingReplyMenuContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017DD84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10017DDAC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingReplyMenuContext()
{
  return &type metadata for ActivitySharingReplyMenuContext;
}

void type metadata accessor for HKWorkoutMetricType(uint64_t a1)
{
}

uint64_t sub_10017DDDC()
{
  return sub_10017E6EC(&qword_10094B580, type metadata accessor for ASFriendListDisplayMode);
}

uint64_t sub_10017DE24@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10017DEA4()
{
  return static Published.subscript.setter();
}

void sub_10017DF20(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10017DF28(uint64_t a1, uint64_t a2)
{
  return sub_10017F0F8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_10017DF54()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_10017DF5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Float._forceBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_10017DFB0(uint64_t a1, uint64_t a2)
{
  char v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_10017E008@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = static Float._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

void sub_10017E030(void *a1@<X8>)
{
  *a1 = *v1;
}

NSNumber sub_10017E03C()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10017E044(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10017E098(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10017E0F0@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

void *sub_10017E118@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10017E12C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_10017E140@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10017E16C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10017E190(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10017E1A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10017E1B8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10017E1CC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10017E1E0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10017E1F4()
{
  return *v0 == 0;
}

uint64_t sub_10017E204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10017E21C(void *result)
{
  *v1 &= ~*result;
  return result;
}

NSNumber sub_10017E238()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10017E240(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Int._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10017E294(uint64_t a1, uint64_t a2)
{
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10017E2EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

BOOL sub_10017E314(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10017E344@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10017E358(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10017E36C(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_10017E380()
{
  Hasher._combine(_:)(*v0);
}

uint64_t sub_10017E3AC(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10017E424(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10017E4A4@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_10017E4E8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_10017E4FC(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10017E504()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

Swift::Int sub_10017E570()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10017E5B8()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10017E600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1001FB808();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

unint64_t sub_10017E644()
{
  unint64_t result = qword_10094B588;
  if (!qword_10094B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094B588);
  }
  return result;
}

_DWORD *sub_10017E698@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10017E6A4()
{
  return sub_10017E6EC(&qword_10094B590, type metadata accessor for FIWorkoutSplitMeasurementSystem);
}

uint64_t sub_10017E6EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10017E734@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10017E744()
{
  sub_10017E6EC((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  sub_10017E6EC(&qword_10094B9A8, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

_DWORD *sub_10017E800@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_10017E810@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_10017E81C()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017E8D8()
{
  sub_10017E6EC((unint64_t *)&qword_10094B980, type metadata accessor for AttributeName);
  sub_10017E6EC(&qword_10094B988, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017E994()
{
  sub_10017E6EC(&qword_10094B950, type metadata accessor for TraitKey);
  sub_10017E6EC(&qword_10094B958, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *sub_10017EA50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_10017EA60@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10017EA6C()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017EB34()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017EBF0()
{
  return sub_10017E6EC(&qword_10094B598, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10017EC38()
{
  return sub_10017E6EC(&qword_10094B5A0, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10017EC80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10017ECAC()
{
  sub_10017E6EC(&qword_10094B630, type metadata accessor for ActivityType);
  sub_10017E6EC(&qword_10094B638, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017ED68()
{
  sub_10017E6EC((unint64_t *)&qword_10094B970, type metadata accessor for OpenExternalURLOptionsKey);
  sub_10017E6EC(&qword_10094B978, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017EE24@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10017EE6C()
{
  sub_10017E6EC(&qword_10094B990, type metadata accessor for FeatureKey);
  sub_10017E6EC(&qword_10094B998, type metadata accessor for FeatureKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10017EF28()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10017EF74()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_10017EFCC()
{
  return Hasher._finalize()();
}

uint64_t sub_10017F034()
{
  return Float.hashValue.getter(*v0);
}

void sub_10017F03C()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10017F070(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_10017F084()
{
  return Double.hashValue.getter(*v0);
}

void sub_10017F08C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10017F0C0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10017F0D0()
{
  return Int.hashValue.getter(*v0);
}

uint64_t sub_10017F0D8()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10017F0E0(uint64_t a1, uint64_t a2)
{
  return sub_10017F0F8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10017F0F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10017F13C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10017F190()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_10017F204(float *a1, float *a2)
{
  return *a1 == *a2;
}

BOOL sub_10017F218(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10017F22C()
{
  return sub_10017E6EC(&qword_10094B5A8, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10017F274()
{
  return sub_10017E6EC(&qword_10094B5B0, type metadata accessor for ActivityType);
}

uint64_t sub_10017F2BC()
{
  return sub_10017E6EC(&qword_10094B5B8, type metadata accessor for ActivityType);
}

uint64_t sub_10017F304()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10017F390()
{
  return sub_10017E6EC(&qword_10094B5C0, type metadata accessor for ActivityType);
}

uint64_t sub_10017F3D8()
{
  return sub_10017E6EC(&qword_10094B5C8, type metadata accessor for HKWorkoutActivityType);
}

uint64_t sub_10017F420()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10017F460()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  v3[3] = v2;
  return _swift_task_switch(sub_10017C3B4, 0, 0);
}

uint64_t sub_10017F50C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10017F544(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivitySharingHighlight();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for HKStatisticsOptions(uint64_t a1)
{
}

void type metadata accessor for AAUIBadgeImageFactoryStackType(uint64_t a1)
{
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for AAUIBadgeImageFactoryStackAlignment(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for Aggregate(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Aggregate(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for TrendsCoachingAverageInformation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for FIUIDistanceType(uint64_t a1)
{
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

uint64_t sub_10017F748()
{
  return sub_10017E6EC(&qword_10094B860, type metadata accessor for Key);
}

uint64_t sub_10017F790()
{
  return sub_10017E6EC(&qword_10094B868, type metadata accessor for Key);
}

uint64_t sub_10017F7D8()
{
  return sub_10017E6EC(&qword_10094B870, type metadata accessor for FeatureKey);
}

uint64_t sub_10017F820()
{
  return sub_10017E6EC(&qword_10094B878, type metadata accessor for FeatureKey);
}

uint64_t sub_10017F868()
{
  return sub_10017E6EC(&qword_10094B880, type metadata accessor for FeatureKey);
}

uint64_t sub_10017F8B0()
{
  return sub_10017E6EC(&qword_10094B888, type metadata accessor for AttributeName);
}

uint64_t sub_10017F8F8()
{
  return sub_10017E6EC(&qword_10094B890, type metadata accessor for AttributeName);
}

uint64_t sub_10017F940()
{
  return sub_10017E6EC(&qword_10094B898, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10017F988()
{
  return sub_10017E6EC(&qword_10094B8A0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10017F9D0()
{
  return sub_10017E6EC(&qword_10094B8A8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_10017FA18()
{
  return sub_10017E6EC(&qword_10094B8B0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_10017FA60()
{
  return sub_10017E6EC(&qword_10094B8B8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_10017FAA8()
{
  return sub_10017E6EC(&qword_10094B8C0, type metadata accessor for CGColorSpace);
}

uint64_t sub_10017FAF0()
{
  return sub_10017E6EC(&qword_10094B8C8, type metadata accessor for HKStatisticsOptions);
}

uint64_t sub_10017FB38()
{
  return sub_10017E6EC(&qword_10094B8D0, type metadata accessor for HKStatisticsOptions);
}

uint64_t sub_10017FB80()
{
  return sub_10017E6EC(&qword_10094B8D8, type metadata accessor for HKStatisticsOptions);
}

uint64_t sub_10017FBC8()
{
  return sub_10017E6EC(&qword_10094B8E0, type metadata accessor for HKStatisticsOptions);
}

uint64_t sub_10017FC10()
{
  return sub_10017E6EC(&qword_10094B8E8, type metadata accessor for TraitKey);
}

uint64_t sub_10017FC58()
{
  return sub_10017E6EC(&qword_10094B8F0, type metadata accessor for TraitKey);
}

uint64_t sub_10017FCA0()
{
  return sub_10017E6EC(&qword_10094B8F8, type metadata accessor for TraitKey);
}

uint64_t sub_10017FCE8()
{
  return sub_10017E6EC(&qword_10094B900, type metadata accessor for Weight);
}

uint64_t sub_10017FD30()
{
  return sub_10017E6EC(&qword_10094B908, type metadata accessor for Weight);
}

uint64_t sub_10017FD78()
{
  return sub_10017E6EC(&qword_10094B910, type metadata accessor for Weight);
}

uint64_t sub_10017FDC0()
{
  return sub_10017E6EC(&qword_10094B918, type metadata accessor for CGColorSpace);
}

uint64_t sub_10017FE08()
{
  return sub_10017E6EC(&qword_10094B920, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10017FE50()
{
  return sub_10017E6EC(&qword_10094B928, type metadata accessor for AttributeName);
}

uint64_t sub_10017FE98()
{
  return sub_10017E6EC(&qword_10094B930, type metadata accessor for Key);
}

unint64_t sub_10017FEE0()
{
  unint64_t result = qword_10094B948;
  if (!qword_10094B948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094B948);
  }
  return result;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

uint64_t sub_10017FF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingHighlight();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Int sub_10018000C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100180054()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100180080()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1001800C4()
{
  return sub_1001800EC();
}

uint64_t sub_1001800D8()
{
  return sub_1001800EC();
}

uint64_t sub_1001800EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100180158()
{
  return sub_100180358();
}

double sub_10018016C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_1001801E4(double a1, double a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(double *)&long long v6 = a1;
  *((double *)&v6 + 1) = a2;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = a1;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_issueLocation) = v6;
  return result;
}

uint64_t sub_1001802D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100180344()
{
  return sub_100180358();
}

uint64_t sub_100180358()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001803C4()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_trackId))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v3 == 2) {
      goto LABEL_8;
    }
    if (v3) {
      goto LABEL_8;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000A06D0();
    char v1 = StringProtocol.isEmptyOrWhiteSpace.getter();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_8;
    }
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 != 2 && (v3 & 1) == 0) {
    return 1;
  }
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 == 2) {
    return 0;
  }
  else {
    return v3 & 1;
  }
}

uint64_t sub_100180598(uint64_t a1, CLLocationDegrees a2, CLLocationDegrees a3)
{
  uint64_t v47 = a1;
  uint64_t v6 = sub_1000AFA94(&qword_10094BDC8);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  __chkstk_darwin(v6);
  id v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094BDD0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094BDD8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10094BDE0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_trackId) = 0;
  uint64_t v19 = v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__trackWorkoutIssueType;
  LOBYTE(v48) = 2;
  sub_1000AFA94(&qword_10094BAF0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  uint64_t v20 = v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__nonTrackWorkoutIssueType;
  LOBYTE(v48) = 2;
  sub_1000AFA94(&qword_10094BB00);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  uint64_t v21 = v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__trackName;
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  Published.init(initialValue:)();
  uint64_t v22 = v43;
  id v23 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
  v23(v21, v10, v43);
  uint64_t v24 = v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__laneCount;
  uint64_t v48 = 8;
  uint64_t v25 = v44;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v24, v25, v46);
  uint64_t v26 = v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__comment;
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  Published.init(initialValue:)();
  v23(v26, v10, v22);
  uint64_t v27 = (uint64_t *)(v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_placeholderComment);
  id v28 = [self mainBundle];
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  *uint64_t v27 = v31;
  v27[1] = v33;
  id v34 = (double *)(v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_issueLocation);
  *id v34 = a2;
  v34[1] = a3;
  v52.CLLocationDegrees latitude = a2;
  v52.CLLocationDegrees longitude = a3;
  MKCoordinateRegion v53 = MKCoordinateRegionMakeWithDistance(v52, 500.0, 500.0);
  CLLocationDegrees latitude = v53.center.latitude;
  CLLocationDegrees longitude = v53.center.longitude;
  CLLocationDegrees latitudeDelta = v53.span.latitudeDelta;
  CLLocationDegrees longitudeDelta = v53.span.longitudeDelta;
  swift_beginAccess();
  uint64_t v48 = *(void *)&latitude;
  unint64_t v49 = *(void *)&longitude;
  CLLocationDegrees v50 = latitudeDelta;
  CLLocationDegrees v51 = longitudeDelta;
  type metadata accessor for MKCoordinateRegion(0);
  Published.init(initialValue:)();
  swift_endAccess();
  long long v39 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_trackId);
  *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_trackId) = v47;

  return v3;
}

uint64_t sub_100180A98()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5 != 2 && (v5 & 1) == 0) {
    return 4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v4) {
    return 5;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 != 2 && (v3 & 1) == 0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return 2 * (v2 & 1);
}

void sub_100180C38()
{
  uint64_t v1 = sub_100180A98();
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = v1;
    if (sub_1001803C4())
    {
      double v4 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_issueLocation);
      double v5 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_issueLocation + 8);
      uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_trackId);
      if (v6)
      {
        uint64_t v21 = (void **)[v6 longLongValue];
        LOBYTE(v22) = 0;
        sub_1000AFA94(&qword_10094BDE8);
        uint64_t v7 = Optional.description.getter();
        uint64_t v9 = v8;
      }
      else
      {
        uint64_t v7 = 0;
        uint64_t v9 = 0;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      if (v21 != 2 && (v21 & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v10 = (uint64_t)v21;
        uint64_t v11 = v22;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      id v12 = 0;
      if (v21 != 2 && (v21 & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        id v12 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v21];
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v21 == 2)
      {
        uint64_t v13 = 0;
        uint64_t v14 = 0;
      }
      else
      {
        uint64_t v13 = (uint64_t)v21;
        uint64_t v14 = v22;
      }
      id v15 = objc_allocWithZone((Class)MKFitnessRAPReport);
      id v16 = sub_100181FDC(v3, v4, v5, v7, v9, v10, v11, v12, v13, v14);
      id v17 = [self sharedService];
      if (v17)
      {
        uint64_t v18 = v17;
        if ([v17 feedbackTicketForFitnessRAPReport:v16])
        {
          uint64_t v25 = sub_1001810EC;
          uint64_t v26 = 0;
          uint64_t v21 = _NSConcreteStackBlock;
          uint64_t v22 = 1107296256;
          id v23 = sub_1001813DC;
          uint64_t v24 = &unk_1008B8078;
          uint64_t v19 = _Block_copy(&v21);
          uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))ASFriendListDisplayMode.id.getter;
          uint64_t v26 = 0;
          uint64_t v21 = _NSConcreteStackBlock;
          uint64_t v22 = 1107296256;
          id v23 = sub_1004AE478;
          uint64_t v24 = &unk_1008B80A0;
          uint64_t v20 = _Block_copy(&v21);
          [(id)swift_unknownObjectRetain() submitWithHandler:v19 networkActivity:v20];

          swift_unknownObjectRelease_n();
          _Block_release(v20);
          _Block_release(v19);
        }
        else
        {
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1001810EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  if (a4)
  {
    swift_errorRetain();
    static WOLog.trackRunning.getter();
    swift_errorRetain();
    swift_errorRetain();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v25 = v5;
      id v15 = (uint8_t *)v14;
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)id v15 = 136315138;
      swift_getErrorValue();
      uint64_t v16 = Error.errorDescription.getter();
      uint64_t v26 = sub_10008F1F4(v16, v17, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received an error from MapKit while submitting report: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v25);
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    id v23 = v8;
  }
  else
  {
    static WOLog.trackRunning.getter();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Successfully submitted report to MapKit", v21, 2u);
      swift_slowDealloc();
    }

    uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    id v23 = v11;
  }
  return v22(v23, v5);
}

uint64_t sub_1001813DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(void *, void *, unint64_t, void *))(a1 + 32);
  if (a3)
  {
    swift_retain();
    id v8 = a2;
    id v9 = v5;
    uint64_t v5 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    swift_retain();
    id v12 = a2;
    unint64_t v11 = 0xF000000000000000;
  }
  id v13 = a4;
  v7(a2, v5, v11, a4);

  sub_100182378((uint64_t)v5, v11);

  return swift_release();
}

uint64_t sub_1001814A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__trackWorkoutIssueType;
  uint64_t v4 = sub_1000AFA94(&qword_10094BDE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__nonTrackWorkoutIssueType;
  uint64_t v6 = sub_1000AFA94(&qword_10094BDD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__trackName;
  uint64_t v8 = sub_1000AFA94(&qword_10094BDD0);
  id v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__issueRegion;
  uint64_t v11 = sub_1000AFA94(&qword_10094BDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__laneCount;
  uint64_t v13 = sub_1000AFA94(&qword_10094BDC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  v9(v0 + OBJC_IVAR____TtC10FitnessApp10TrackIssue__comment, v8);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100181700()
{
  return type metadata accessor for TrackIssue();
}

uint64_t type metadata accessor for TrackIssue()
{
  uint64_t result = qword_10094BAD8;
  if (!qword_10094BAD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100181754()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_10094BAE8, &qword_10094BAF0);
    if (v1 <= 0x3F)
    {
      sub_100181968(319, &qword_10094BAF8, &qword_10094BB00);
      if (v2 <= 0x3F)
      {
        sub_1000DD420(319, &qword_10094BB08);
        if (v3 <= 0x3F)
        {
          sub_1001819B8();
          if (v4 <= 0x3F)
          {
            sub_1000DD420(319, (unint64_t *)&qword_10094BB18);
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100181968(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_1000A1370(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1001819B8()
{
  if (!qword_10094BB10)
  {
    type metadata accessor for MKCoordinateRegion(255);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094BB10);
    }
  }
}

ValueMetadata *type metadata accessor for TrackIssue.NonTrackWorkoutIssue()
{
  return &type metadata for TrackIssue.NonTrackWorkoutIssue;
}

unsigned char *_s10FitnessApp10TrackIssueC17TrackWorkoutIssueOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100181AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackIssue.TrackWorkoutIssue()
{
  return &type metadata for TrackIssue.TrackWorkoutIssue;
}

unint64_t sub_100181B30()
{
  unint64_t result = qword_10094BDB8;
  if (!qword_10094BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BDB8);
  }
  return result;
}

unint64_t sub_100181B88()
{
  unint64_t result = qword_10094BDC0;
  if (!qword_10094BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BDC0);
  }
  return result;
}

uint64_t sub_100181BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC10FitnessApp10TrackIssue_id;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100181C54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TrackIssue();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100181C98()
{
  unint64_t result = qword_10095B840;
  if (!qword_10095B840)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095B840);
  }
  return result;
}

double sub_100181CF0@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

double sub_100181D70(double *a1)
{
  return sub_1001801E4(*a1, a1[1]);
}

uint64_t sub_100181D9C@<X0>(void *a1@<X8>)
{
  return sub_100181ECC(a1);
}

uint64_t sub_100181DB0()
{
  return sub_100181F5C();
}

uint64_t sub_100181DC4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100181E44()
{
  return static Published.subscript.setter();
}

uint64_t sub_100181EB8@<X0>(void *a1@<X8>)
{
  return sub_100181ECC(a1);
}

uint64_t sub_100181ECC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100181F48()
{
  return sub_100181F5C();
}

uint64_t sub_100181F5C()
{
  return static Published.subscript.setter();
}

id sub_100181FDC(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  if (a5)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a7) {
      goto LABEL_3;
    }
LABEL_6:
    NSString v18 = 0;
    if (a10) {
      goto LABEL_4;
    }
LABEL_7:
    NSString v19 = 0;
    goto LABEL_8;
  }
  NSString v17 = 0;
  if (!a7) {
    goto LABEL_6;
  }
LABEL_3:
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a10) {
    goto LABEL_7;
  }
LABEL_4:
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_8:
  id v20 = [v10 initForRunningTrackIssue:a1 trackCoordinate:v17 trackFeatureID:v18 nameOfTrack:a8 numberOfLanes:v19 comment:a2 a3];

  return v20;
}

uint64_t sub_1001820F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_100182108()
{
  return sub_1001821E8();
}

uint64_t sub_10018211C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_100182130@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001821AC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_1001821D4()
{
  return sub_1001821E8();
}

uint64_t sub_1001821E8()
{
  return static Published.subscript.setter();
}

uint64_t sub_100182258()
{
  return sub_1001821E8();
}

uint64_t sub_100182280@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_1001822A8()
{
  return sub_1001821E8();
}

uint64_t sub_1001822D0@<X0>(void *a1@<X8>)
{
  return sub_100181ECC(a1);
}

uint64_t sub_1001822F8()
{
  return sub_100181F5C();
}

uint64_t sub_100182328@<X0>(void *a1@<X8>)
{
  return sub_100181ECC(a1);
}

uint64_t sub_100182350()
{
  return sub_100181F5C();
}

uint64_t sub_100182378(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000939A4(a1, a2);
  }
  return a1;
}

double sub_100182390(double *a1)
{
  return sub_1001801E4(*a1, a1[1]);
}

uint64_t sub_1001823D4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094BED0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + OBJC_IVAR____TtC10FitnessApp22ScrollToTopCoordinator_scrollViewProxy;
  swift_beginAccess();
  sub_10018263C(v11, (uint64_t)v10);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (v12)
  {
    uint64_t result = sub_1001826A4((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_1001826A4((uint64_t)v10);
    v14[1] = 0xD000000000000011;
    v14[2] = 0x80000001007B6090;
    static UnitPoint.top.getter();
    ScrollViewProxy.scrollTo<A>(_:anchor:)();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v12 != 0;
  return result;
}

uint64_t sub_1001825D0()
{
  sub_1001826A4(v0 + OBJC_IVAR____TtC10FitnessApp22ScrollToTopCoordinator_scrollViewProxy);

  return swift_deallocClassInstance();
}

uint64_t sub_100182634()
{
  return type metadata accessor for ScrollToTopCoordinator();
}

uint64_t sub_10018263C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094BED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001826A4(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094BED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100182704()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DateInterval();
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v30 - v9;
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v31 = (char *)&v30 - v12;
  id v13 = [v1 downhillRunEvents:v11];
  if (!v13) {
    return 0;
  }
  uint64_t v14 = v13;
  sub_100182AC4();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v21;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    NSString v19 = (void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v33 = (void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
    unint64_t v34 = v15 & 0xC000000000000001;
    uint64_t v36 = v7;
    id v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v35 = v15;
    do
    {
      if (v34) {
        id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v22 = *(id *)(v15 + 8 * v18 + 32);
      }
      id v23 = v22;
      id v24 = [v22 dateInterval];
      uint64_t v25 = v37;
      static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = *v19;
      (*v19)(v4, v25, v5);
      (*v33)(v4, 0, 1, v5);

      if ((*v20)(v4, 1, v5) == 1)
      {
        sub_100182B04((uint64_t)v4);
      }
      else
      {
        uint64_t v27 = v31;
        v26(v31, v4, v5);
        v26(v36, v27, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (char *)sub_1001E704C(0, *((void *)v21 + 2) + 1, 1, (unint64_t)v21);
        }
        unint64_t v29 = *((void *)v21 + 2);
        unint64_t v28 = *((void *)v21 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v21 = (char *)sub_1001E704C(v28 > 1, v29 + 1, 1, (unint64_t)v21);
        }
        *((void *)v21 + 2) = v29 + 1;
        v26(&v21[((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v29], v36, v5);
      }
      ++v18;
      unint64_t v15 = v35;
    }
    while (v16 != v18);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

unint64_t sub_100182AC4()
{
  unint64_t result = qword_10094BED8;
  if (!qword_10094BED8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094BED8);
  }
  return result;
}

uint64_t sub_100182B04(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100182B64(char a1)
{
  switch(a1)
  {
    case 2:
      id v1 = [self mainBundle];
      NSString v2 = String._bridgeToObjectiveC()();
      NSString v3 = String._bridgeToObjectiveC()();
      id v4 = [v1 localizedStringForKey:v2 value:0 table:v3];

      break;
    default:
      id v1 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      id v4 = [v1 localizedStringForKey:v3 value:0 table:0];
      break;
  }

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100182E0C(char a1)
{
  unint64_t v2 = 0xD000000000000019;
  unint64_t v3 = 0x80000001007B61D0;
  switch(a1)
  {
    case 1:
      unint64_t v2 = 0xD00000000000001BLL;
      id v4 = "ActivityTileSection.History";
      goto LABEL_7;
    case 2:
      unint64_t v2 = 0xD00000000000001FLL;
      id v4 = "ActivityTileSection.TrainerTips";
      goto LABEL_7;
    case 3:
      unint64_t v2 = 0xD000000000000024;
      id v4 = "ActivityTileSection.TrendsOnBoarding";
      goto LABEL_7;
    case 4:
      unint64_t v2 = 0xD000000000000021;
      id v4 = "ActivityTileSection.TrendsMetrics";
      goto LABEL_7;
    case 5:
      unint64_t v2 = 0xD00000000000001ALL;
      id v4 = "ActivityTileSection.Awards";
LABEL_7:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v5 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x7265646165482ELL;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  return 0;
}

uint64_t sub_100182F18(uint64_t a1, char a2)
{
  unint64_t v2 = 0xD000000000000019;
  unint64_t v3 = 0x80000001007B61D0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD00000000000001BLL;
      id v4 = "ActivityTileSection.History";
      goto LABEL_7;
    case 2:
      unint64_t v2 = 0xD00000000000001FLL;
      id v4 = "ActivityTileSection.TrainerTips";
      goto LABEL_7;
    case 3:
      unint64_t v2 = 0xD000000000000024;
      id v4 = "ActivityTileSection.TrendsOnBoarding";
      goto LABEL_7;
    case 4:
      unint64_t v2 = 0xD000000000000021;
      id v4 = "ActivityTileSection.TrendsMetrics";
      goto LABEL_7;
    case 5:
      unint64_t v2 = 0xD00000000000001ALL;
      id v4 = "ActivityTileSection.Awards";
LABEL_7:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v5 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x2E6C6C65432ELL;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100183058()
{
  sub_1000AFA94(&qword_10094BEE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100750560;
  *(void *)(v0 + 32) = type metadata accessor for TodayActivityTile();
  *(void *)(v0 + 40) = &off_1008BAE40;
  *(void *)(v0 + 48) = type metadata accessor for WorkoutsListTableViewCell();
  *(void *)(v0 + 56) = &off_1008D3D78;
  *(void *)(v0 + 64) = type metadata accessor for TrendsOnBoardingActivityTile();
  *(void *)(v0 + 72) = &off_1008C17E0;
  *(void *)(v0 + 80) = type metadata accessor for TrendPairTableViewCell(0);
  *(void *)(v0 + 88) = &off_1008D5050;
  *(void *)(v0 + 96) = type metadata accessor for AwardsActivityTile();
  *(void *)(v0 + 104) = &off_1008C4248;
  *(void *)(v0 + 112) = type metadata accessor for MindfulnessSessionListTableViewCell();
  *(void *)(v0 + 120) = &off_1008BE0E0;
  *(void *)(v0 + 128) = type metadata accessor for StackListTableViewCell();
  *(void *)(v0 + 136) = &off_1008D2280;
  *(void *)(v0 + 144) = type metadata accessor for CatalogTipActivityTile();
  *(void *)(v0 + 152) = &off_1008C37C8;
  return v0;
}

unint64_t sub_100183140(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t assignWithCopy for ActivitySharingTabView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  Swift::String v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  double v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 32);
  NSString v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  NSString v19 = *(void **)(a2 + 40);
  id v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  id v22 = *(void **)(a2 + 48);
  id v23 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v22;
  id v24 = v22;

  uint64_t v25 = *(void **)(a2 + 56);
  uint64_t v26 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v25;
  id v27 = v25;

  unint64_t v28 = *(void **)(a2 + 64);
  unint64_t v29 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v28;
  id v30 = v28;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v31 = *(void **)(a2 + 80);
  uint64_t v32 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v31;
  id v33 = v31;

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  unint64_t v34 = *(void **)(a2 + 96);
  unint64_t v35 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v34;
  id v36 = v34;

  uint64_t v37 = *(void **)(a2 + 104);
  uint64_t v38 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v37;
  id v39 = v37;

  long long v40 = *(void **)(a2 + 112);
  uint64_t v41 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v40;
  id v42 = v40;

  uint64_t v43 = *(void **)(a2 + 120);
  id v44 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v43;
  id v45 = v43;

  uint64_t v46 = *(void **)(a2 + 128);
  uint64_t v47 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v46;
  id v48 = v46;

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  unint64_t v49 = *(void **)(a2 + 200);
  CLLocationDegrees v50 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v49;
  id v51 = v49;

  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ActivitySharingTabView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for ActivitySharingTabView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  long long v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  long long v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();

  long long v8 = *(void **)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);

  id v9 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  long long v10 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_release();
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingTabView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingTabView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1001835E0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1001835FC(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15)
{
  type metadata accessor for ActivitySharingFriendDetailDataProvider();
  swift_allocObject();
  id v38 = a2;
  id v37 = a3;
  swift_retain();
  id v34 = a5;
  id v33 = a6;
  id v21 = a7;
  id v22 = a1;
  id v23 = a8;
  id v24 = a9;
  id v25 = a10;
  swift_retain();
  id v26 = a12;
  id v27 = a13;
  id v28 = a14;
  id v29 = a15;
  id v30 = sub_1005199B4(v38, v37, a4, v34, v33, v21, v22, v23, v24, v25, a11, v26, v27, v28, v29);
  id v31 = objc_allocWithZone((Class)type metadata accessor for ActivitySharingFriendDetailViewController());
  return sub_1004214A4((uint64_t)v30, v29);
}

void sub_100183780(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a10;
  *(void *)(v17 + 24) = a11;
  id v29 = objc_allocWithZone((Class)CHFriendInboxTableViewController);
  aBlock[4] = sub_100187DB4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001871C0;
  aBlock[3] = &unk_1008B82B8;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  id v27 = a9;
  id v18 = a8;
  id v19 = a7;
  id v20 = a6;
  id v21 = a5;
  id v22 = a4;
  id v23 = a3;
  id v24 = a2;
  id v25 = a1;
  swift_release();
  id v26 = [v29 initWithFriendListManager:v25 friendManager:v24 achievementsDataProvider:v23 workoutsDataProvider:v22 workoutFormattingManager:v21 formattingManager:v20 badgeImageFactory:v19 healthStore:v18 fitnessAppContext:v27 makeFriendDetailViewControllerBlock:v28];

  _Block_release(v28);
  if (!v26) {
    __break(1u);
  }
}

uint64_t sub_100183950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)v1;
  uint64_t v40 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_10094BEE8);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094BEF0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  id v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10094BEF8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10094BF00);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v37 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000AFA94(&qword_10094BF08) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100183E08(v1, (uint64_t)v5);
  uint64_t v18 = *(void *)(v1 + 184);
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  sub_10005E5B0((unint64_t *)&qword_10095C150, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailAlertCoordinator);
  uint64_t v19 = static ObservableObject.environmentStore.getter();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v9, &qword_10094BEE8);
  id v20 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *id v20 = v19;
  v20[1] = v18;
  swift_retain();
  sub_10008DB18((uint64_t)v5, &qword_10094BEE8);
  uint64_t v21 = v2[18];
  type metadata accessor for ActivitySharingNavigationCoordinator();
  sub_10005E5B0(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  swift_retain();
  uint64_t v22 = static ObservableObject.environmentStore.getter();
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_10094BEF0);
  id v23 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *id v23 = v22;
  v23[1] = v21;
  sub_10008DB18((uint64_t)v9, &qword_10094BEF0);
  uint64_t v24 = v2[19];
  type metadata accessor for ActivitySharingHighlightDataProvider();
  sub_10005E5B0(&qword_10094BF18, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightDataProvider);
  uint64_t v25 = static ObservableObject.environmentStore.getter();
  uint64_t v26 = v37;
  sub_1000AEF2C((uint64_t)v13, v37, &qword_10094BEF8);
  id v27 = (uint64_t *)(v26 + *(int *)(v15 + 44));
  *id v27 = v25;
  v27[1] = v24;
  swift_retain();
  sub_10008DB18((uint64_t)v13, &qword_10094BEF8);
  uint64_t v28 = v2[21];
  type metadata accessor for ActivitySharingFriendListDataProvider();
  sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  swift_retain();
  uint64_t v29 = static ObservableObject.environmentStore.getter();
  uint64_t v30 = v38;
  sub_1000AEF2C(v26, v38, &qword_10094BF00);
  id v31 = (uint64_t *)(v30 + *(int *)(v39 + 44));
  *id v31 = v29;
  v31[1] = v28;
  sub_10008DB18(v26, &qword_10094BF00);
  uint64_t v32 = v2[11];
  type metadata accessor for ReachableContactsDataSource();
  sub_10005E5B0(&qword_10094BF20, (void (*)(uint64_t))type metadata accessor for ReachableContactsDataSource);
  uint64_t v33 = static ObservableObject.environmentStore.getter();
  uint64_t v34 = v40;
  sub_1000AEF2C(v30, v40, &qword_10094BF08);
  unint64_t v35 = (uint64_t *)(v34 + *(int *)(sub_1000AFA94(&qword_10094BF28) + 36));
  *unint64_t v35 = v33;
  v35[1] = v32;
  swift_retain();
  return sub_10008DB18(v30, &qword_10094BF08);
}

uint64_t sub_100183E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v32 = sub_1000AFA94(&qword_10094BF30);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10094BF38);
  uint64_t v5 = *(void *)(v33 - 8);
  uint64_t v6 = __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v30 = sub_1000AFA94(&qword_10094BF40);
  __chkstk_darwin(v30);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_10094BF48);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + 200);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v35)
  {
    sub_100184304(a1);
    uint64_t v16 = sub_100188124(&qword_10094BF60, &qword_10094BF30, (void (*)(void))sub_1001873A0);
    uint64_t v17 = (ValueMetadata *)v32;
    View.toolbar(_:for:)();
    sub_10008DB18((uint64_t)v4, &qword_10094BF30);
    uint64_t v18 = v33;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v33);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v12, v10, v18);
    swift_storeEnumTagMultiPayload();
    unint64_t v19 = sub_10018734C();
    unint64_t v35 = &type metadata for FriendSetupView;
    unint64_t v36 = v19;
    swift_getOpaqueTypeConformance2();
    unint64_t v35 = v17;
    unint64_t v36 = v16;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v18);
  }
  else
  {
    type metadata accessor for FriendsSetupCoordinator();
    sub_10005E5B0(&qword_10094BF50, (void (*)(uint64_t))type metadata accessor for FriendsSetupCoordinator);
    id v21 = v15;
    uint64_t v22 = ObservedObject.init(wrappedValue:)();
    uint64_t v24 = v23;
    unint64_t v35 = (ValueMetadata *)v22;
    unint64_t v36 = (unint64_t)v23;
    unint64_t v25 = sub_10018734C();
    View.toolbar(_:for:)();

    uint64_t v26 = v29;
    uint64_t v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v12, v14, v31);
    swift_storeEnumTagMultiPayload();
    unint64_t v35 = &type metadata for FriendSetupView;
    unint64_t v36 = v25;
    swift_getOpaqueTypeConformance2();
    uint64_t v28 = sub_100188124(&qword_10094BF60, &qword_10094BF30, (void (*)(void))sub_1001873A0);
    unint64_t v35 = (ValueMetadata *)v32;
    unint64_t v36 = v28;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  }
}

uint64_t sub_100184304(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094BFC0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[0] = *(_OWORD *)(a1 + 160);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000E2384((uint64_t)v45);
  if ((void)v39)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    BOOL v9 = sub_1001D81C8();
    sub_1000E2384((uint64_t)v45);
    if (v9)
    {
      uint64_t v10 = swift_allocObject();
      long long v11 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v10 + 176) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v10 + 192) = v11;
      *(_OWORD *)(v10 + 208) = *(_OWORD *)(a1 + 192);
      *(void *)(v10 + 224) = *(void *)(a1 + 208);
      long long v12 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v10 + 128) = v12;
      long long v13 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v10 + 144) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v10 + 160) = v13;
      long long v14 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v10 + 64) = v14;
      long long v15 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v10 + 96) = v15;
      long long v16 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v10 + 32) = v16;
      uint64_t v33 = sub_10018756C;
      uint64_t v34 = v10;
      long long v35 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      __int16 v38 = 0;
      sub_10006296C(a1);
    }
    else
    {
      uint64_t v18 = *(uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(a1 + 72);
      type metadata accessor for ReachableContactsDataSource();
      sub_10005E5B0(&qword_10094BF20, (void (*)(uint64_t))type metadata accessor for ReachableContactsDataSource);
      swift_retain();
      uint64_t v19 = EnvironmentObject.init()();
      uint64_t v21 = v20;
      unsigned __int8 v22 = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v33 = v18;
      uint64_t v34 = v19;
      *(void *)&long long v35 = v21;
      *((void *)&v35 + 1) = v22;
      *(void *)&long long v36 = v23;
      *((void *)&v36 + 1) = v24;
      *(void *)&long long v37 = v25;
      *((void *)&v37 + 1) = v26;
      __int16 v38 = 256;
    }
    sub_1000AFA94(&qword_10094BF90);
    sub_1000AFA94(&qword_10094BFA0);
    sub_1000A132C(&qword_10094BF88, &qword_10094BF90);
    sub_10018785C(&qword_10094BF98, &qword_10094BFA0, (void (*)(void))sub_10018750C);
    _ConditionalContent<>.init(storage:)();
    long long v27 = v40;
    long long v28 = v41;
    long long v29 = v42;
    char v30 = v43;
    char v31 = v44;
    *(_OWORD *)uint64_t v4 = v39;
    *((_OWORD *)v4 + 1) = v27;
    *((_OWORD *)v4 + 2) = v28;
    *((_OWORD *)v4 + 3) = v29;
    v4[64] = v30;
    v4[65] = v31;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10094BF80);
    sub_100187440();
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    ProgressView<>.init<>()();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10094BF80);
    sub_100187440();
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1001847B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v45 = a3;
  uint64_t v4 = type metadata accessor for PPTTestCase.Name();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  char v44 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  uint64_t v7 = *(void *)(v42 + 64);
  __chkstk_darwin(v6);
  v38[2] = v7;
  long long v41 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094BFC8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10094BFD0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  long long v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_10094BFD8);
  __chkstk_darwin(v48);
  uint64_t v40 = (uint64_t)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_10094BFE0);
  sub_1000A132C(&qword_10094BFE8, &qword_10094BFE0);
  ScrollView.init(_:showsIndicators:content:)();
  char v17 = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
  uint64_t v18 = &v15[*(int *)(v13 + 44)];
  *uint64_t v18 = v17;
  *((void *)v18 + 1) = 0x4024000000000000;
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = 0;
  v18[40] = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = v41;
  uint64_t v19 = v42;
  long long v39 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v21 = v43;
  v39(v41, v49, v43);
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  v38[1] = v22 | 7;
  uint64_t v23 = swift_allocObject();
  long long v24 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v23 + 176) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v23 + 192) = v24;
  *(_OWORD *)(v23 + 208) = *(_OWORD *)(a2 + 192);
  *(void *)(v23 + 224) = *(void *)(a2 + 208);
  long long v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v23 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v23 + 128) = v25;
  long long v26 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v23 + 144) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v23 + 160) = v26;
  long long v27 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v23 + 64) = v27;
  long long v28 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v23 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v23 + 96) = v28;
  long long v29 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v23 + 32) = v29;
  uint64_t v42 = *(void *)(v19 + 32);
  char v30 = v20;
  char v31 = v20;
  uint64_t v32 = v21;
  ((void (*)(uint64_t, char *, uint64_t))v42)(v23 + ((v22 + 232) & ~v22), v30, v21);
  uint64_t v33 = v40;
  sub_1000AEF2C((uint64_t)v15, v40, &qword_10094BFD0);
  uint64_t v34 = (uint64_t (**)())(v33 + *(int *)(v48 + 36));
  *uint64_t v34 = sub_1001876F8;
  v34[1] = (uint64_t (*)())v23;
  void v34[2] = 0;
  v34[3] = 0;
  sub_10006296C(a2);
  sub_10008DB18((uint64_t)v15, &qword_10094BFD0);
  long long v35 = v44;
  PPTTestCase.Name.init(_:)();
  v39(v31, v49, v32);
  uint64_t v36 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v42)(v36 + ((v22 + 16) & ~v22), v31, v32);
  sub_10018785C(&qword_10094BFF0, &qword_10094BFD8, (void (*)(void))sub_1001878D8);
  View.onTest(_:handler:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v47);
  return sub_10008DB18(v33, &qword_10094BFD8);
}

double sub_100184D08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_100184E04(a1, (uint64_t)v11);
  *(_OWORD *)((char *)&v13[8] + 7) = v11[8];
  *(_OWORD *)((char *)&v13[9] + 7) = v11[9];
  *(_OWORD *)((char *)&v13[10] + 7) = v11[10];
  *(void *)((char *)&v13[11] + 7) = v12;
  *(_OWORD *)((char *)&v13[4] + 7) = v11[4];
  *(_OWORD *)((char *)&v13[5] + 7) = v11[5];
  *(_OWORD *)((char *)&v13[6] + 7) = v11[6];
  *(_OWORD *)((char *)&v13[7] + 7) = v11[7];
  *(_OWORD *)((char *)v13 + 7) = v11[0];
  *(_OWORD *)((char *)&v13[1] + 7) = v11[1];
  *(_OWORD *)((char *)&v13[2] + 7) = v11[2];
  *(_OWORD *)((char *)&v13[3] + 7) = v11[3];
  long long v5 = v13[9];
  *(_OWORD *)(a2 + 145) = v13[8];
  *(_OWORD *)(a2 + 161) = v5;
  *(_OWORD *)(a2 + 177) = v13[10];
  *(_OWORD *)(a2 + 192) = *(_OWORD *)((char *)&v13[10] + 15);
  long long v6 = v13[5];
  *(_OWORD *)(a2 + 81) = v13[4];
  *(_OWORD *)(a2 + 97) = v6;
  long long v7 = v13[7];
  *(_OWORD *)(a2 + 113) = v13[6];
  *(_OWORD *)(a2 + 129) = v7;
  long long v8 = v13[1];
  *(_OWORD *)(a2 + 17) = v13[0];
  *(_OWORD *)(a2 + 33) = v8;
  double result = *(double *)&v13[2];
  long long v10 = v13[3];
  *(_OWORD *)(a2 + 49) = v13[2];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 65) = v10;
  return result;
}

uint64_t sub_100184E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((void)v27
    && (swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        uint64_t v4 = *(void *)(v27 + 16),
        swift_bridgeObjectRelease(),
        v4))
  {
    long long v5 = *(void **)(a1 + 56);
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    id v26 = v5;
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    long long v25 = v27;
    uint64_t v24 = v28;
    uint64_t v22 = sub_1001853F4;
  }
  else
  {
    id v26 = 0;
    uint64_t v24 = 0;
    long long v25 = 0uLL;
    uint64_t v22 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((void)v27)
  {
    swift_bridgeObjectRelease();
    long long v6 = *(void **)(a1 + 56);
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    id v21 = v6;
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v18 = v27;
    uint64_t v7 = v28;
    uint64_t v20 = *((void *)&v27 + 1);
    uint64_t v8 = swift_allocObject();
    long long v9 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v8 + 176) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v8 + 192) = v9;
    *(_OWORD *)(v8 + 208) = *(_OWORD *)(a1 + 192);
    *(void *)(v8 + 224) = *(void *)(a1 + 208);
    long long v10 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v8 + 112) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v8 + 128) = v10;
    long long v11 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v8 + 144) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v8 + 160) = v11;
    long long v12 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v8 + 64) = v12;
    long long v13 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v8 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v8 + 96) = v13;
    long long v14 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v8 + 32) = v14;
    sub_10006296C(a1);
    uint64_t v19 = sub_100187B20;
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v20 = 0;
    id v21 = 0;
    uint64_t v15 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v16 = *(void **)(a1 + 56);
  type metadata accessor for ActivitySharingFriendListDataProvider();
  sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  id v23 = v16;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  *(_DWORD *)(a2 + 137) = v27;
  *(_DWORD *)(a2 + 140) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)a2 = 0xD000000000000011;
  *(void *)(a2 + 8) = 0x80000001007B6090;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 32) = v25;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = v18;
  *(void *)(a2 + 96) = v20;
  *(void *)(a2 + 104) = v7;
  *(void *)(a2 + 112) = v19;
  *(void *)(a2 + 120) = v8;
  *(void *)(a2 + 128) = v23;
  *(unsigned char *)(a2 + 136) = 2;
  *(_OWORD *)(a2 + 144) = v27;
  *(void *)(a2 + 160) = v28;
  *(void *)(a2 + 168) = sub_100185694;
  *(void *)(a2 + 176) = 0;
  swift_bridgeObjectRetain();
  sub_100187A58(v26);
  sub_100187A58(v21);
  sub_100187ABC(v21);
  sub_100187ABC(v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001852FC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10018537C()
{
  return sub_1001D7DC8();
}

uint64_t sub_1001853F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivitySharingFriendListDataProvider();
  sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v8 = v7;
  type metadata accessor for ActivitySharingNavigationCoordinator();
  sub_10005E5B0(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  uint64_t v9 = EnvironmentObject.init()();
  uint64_t v11 = v10;
  static Edge.Set.horizontal.getter();
  memset(v14, 0, sizeof(v14));
  char v15 = 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  uint64_t v12 = sub_1000AFA94(&qword_10094C008);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)a1 + *(int *)(v12 + 36), v5, v2);
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v11;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1001855C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 16);
  long long v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider);
  type metadata accessor for ActivitySharingHighlightDataProvider();
  sub_10005E5B0(&qword_10094BF18, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightDataProvider);
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  uint64_t result = EnvironmentObject.init()();
  *a2 = result;
  a2[1] = v12;
  a2[2] = (uint64_t)v7;
  a2[3] = (uint64_t)v8;
  a2[4] = (uint64_t)v9;
  a2[5] = (uint64_t)v10;
  return result;
}

uint64_t sub_100185694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivitySharingFriendListDataProvider();
  sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v8 = v7;
  static Edge.Set.horizontal.getter();
  memset(v11, 0, sizeof(v11));
  char v12 = 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  uint64_t v9 = sub_1000AFA94(&qword_10094C010);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)a1 + *(int *)(v9 + 36), v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100185804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094BED0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *(void *)(a1 + 208);
  uint64_t v11 = type metadata accessor for ScrollViewProxy();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  sub_100187978((uint64_t)v9, (uint64_t)v7);
  uint64_t v13 = v10 + OBJC_IVAR____TtC10FitnessApp22ScrollToTopCoordinator_scrollViewProxy;
  swift_beginAccess();
  sub_1001879E0((uint64_t)v7, v13);
  return swift_endAccess();
}

uint64_t sub_100185968(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PPTTestCase();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v7 = HKLogActivity;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (os_log_type_enabled(v7, v6))
  {
    os_log_t v17 = v7;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v18 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v19);
    int v15 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2080;
    v14[1] = v8 + 14;
    PPTTestCase.parameters.getter();
    _OWORD v14[2] = (char *)&type metadata for Any + 8;
    uint64_t v9 = Dictionary.description.getter();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_10008F1F4(v9, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    os_log_t v12 = v17;
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v15, "%s Running scroll test with options %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t sub_100185C20()
{
  long long v7 = *(_OWORD *)(v0 + 136);
  uint64_t v1 = *(void **)(*((void *)&v7 + 1) + 144);
  if (!v1) {
    goto LABEL_6;
  }
  id v2 = [v1 viewControllers];
  sub_100187B74();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 >= 2)
  {
    uint64_t v5 = *(void **)(*((void *)&v7 + 1) + 144);
    swift_retain();

    return sub_1000E2384((uint64_t)&v7);
  }
  else
  {
LABEL_6:
    static Animation.default.getter();
    sub_1000AFA94((uint64_t *)&unk_1009668A0);
    withAnimation<A>(_:_:)();
    return swift_release();
  }
}

uint64_t sub_100185D64(char *a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v2 - 8);
  os_log_t v153 = (os_log_t)((char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v148 = v4;
  uint64_t v149 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v141 = (char *)&v137 - v10;
  __chkstk_darwin(v9);
  uint64_t v140 = (char *)&v137 - v11;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v156 = (os_log_t)type metadata accessor for Date();
  Class isa = v156[-1].isa;
  uint64_t v16 = __chkstk_darwin(v156);
  long long v152 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v150 = (char *)&v137 - v19;
  __chkstk_darwin(v18);
  id v21 = (char *)&v137 - v20;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v147 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  long long v27 = (char *)&v137 - v26;
  os_log_type_t v28 = static os_log_type_t.default.getter();
  long long v29 = HKLogActivity;
  uint64_t v143 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v144 = v23 + 16;
  v143(v27, a1, v22);
  BOOL v30 = os_log_type_enabled(v29, v28);
  long long v154 = isa;
  uint64_t v151 = v23;
  uint64_t v139 = v8;
  uint64_t v145 = v22;
  if (v30)
  {
    os_log_t v138 = v29;
    uint64_t v31 = swift_slowAlloc();
    char v146 = v21;
    uint64_t v32 = v31;
    v159[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v158 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2080;
    sub_10005E5B0((unint64_t *)&unk_100966E60, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v158 = sub_10008F1F4(v33, v34, v159);
    Class isa = v154;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v142 = *(void (**)(char *, uint64_t))(v151 + 8);
    v142(v27, v22);
    os_log_t v35 = v138;
    _os_log_impl((void *)&_mh_execute_header, v138, v28, "%s handling URL %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v21 = v146;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v142 = *(void (**)(char *, uint64_t))(v23 + 8);
    v142(v27, v22);
  }
  *(_OWORD *)v159 = *(_OWORD *)(v155 + 136);
  uint64_t v36 = (char *)v159[1];
  long long v37 = *(void **)(v159[1] + 144);
  swift_retain();

  sub_1000E2384((uint64_t)v159);
  sub_10056B55C();
  URL._bridgeToObjectiveC()(v38);
  uint64_t v40 = v39;
  id v41 = (id)ASDateFromActivityAppLaunchURL();

  uint64_t v42 = v152;
  if (v41)
  {
    uint64_t v43 = v150;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    char v44 = (void (*)(char *, char *, os_log_t))*((void *)isa + 4);
    os_log_t v45 = v156;
    v44(v14, v43, v156);
    (*((void (**)(char *, void, uint64_t, os_log_t))isa + 7))(v14, 0, 1, v45);
    if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v14, 1, v45) != 1)
    {
      v44(v21, v14, v45);
      goto LABEL_9;
    }
  }
  else
  {
    os_log_t v45 = v156;
    (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v14, 1, 1, v156);
  }
  Date.init()();
  sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095B890);
LABEL_9:
  os_log_type_t v46 = static os_log_type_t.default.getter();
  uint64_t v47 = HKLogActivity;
  (*((void (**)(char *, char *, os_log_t))isa + 2))(v42, v21, v45);
  if (os_log_type_enabled(v47, v46))
  {
    uint64_t v48 = v47;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v150 = v36;
    char v146 = a1;
    uint64_t v50 = v21;
    uint64_t v51 = v49;
    uint64_t v158 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315394;
    uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v51 + 12) = 2080;
    sub_10005E5B0((unint64_t *)&qword_10094C018, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v157 = sub_10008F1F4(v52, v53, &v158);
    os_log_t v45 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v54 = (void (*)(char *, os_log_t))*((void *)isa + 1);
    v54(v42, v45);
    _os_log_impl((void *)&_mh_execute_header, v48, v46, "%s date: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v21 = v50;
    a1 = v146;
    swift_slowDealloc();
  }
  else
  {
    id v54 = (void (*)(char *, os_log_t))*((void *)isa + 1);
    v54(v42, v45);
  }
  os_log_t v55 = v153;
  uint64_t v56 = URL.host.getter();
  uint64_t v58 = v57;
  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v58)
  {
    if (v56 == v59 && v58 == v60)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v61)
    {
LABEL_18:
      id v62 = [*((id *)v155 + 7) me];
      os_log_type_t v63 = static os_log_type_t.default.getter();
      int64_t v64 = (void *)HKLogActivity;
      BOOL v65 = os_log_type_enabled(HKLogActivity, v63);
      if (v62)
      {
        if (v65)
        {
          uint64_t v66 = v64;
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          uint64_t v158 = swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = 136315138;
          uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
          os_log_t v45 = v156;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v66, v63, "%s showing me friend detail", v67, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        swift_retain();
        sub_100371DCC(v62, 0);
        sub_1000E2384((uint64_t)v159);

        goto LABEL_52;
      }
      if (v65)
      {
        NSString v74 = v64;
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        uint64_t v76 = v21;
        *(_DWORD *)uint64_t v75 = 136315138;
        uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        os_log_type_t v77 = v63;
        NSString v78 = "%s failed to show me friend detail";
        id v79 = v74;
LABEL_51:
        _os_log_impl((void *)&_mh_execute_header, v79, v77, v78, v75, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        long long v124 = v76;
        goto LABEL_53;
      }
      goto LABEL_52;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v68 = URL.host.getter();
  uint64_t v70 = v69;
  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v70)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v68 == v71 && v70 == v72)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v80 & 1) == 0)
  {
LABEL_35:
    uint64_t v109 = URL.host.getter();
    uint64_t v111 = v110;
    uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v111)
    {
      if (v109 == v112 && v111 == v113)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_46:
        os_log_type_t v126 = static os_log_type_t.default.getter();
        long long v127 = (void *)HKLogActivity;
        os_log_type_t v128 = v126;
        if (os_log_type_enabled(HKLogActivity, v126))
        {
          long long v129 = v127;
          char v130 = (uint8_t *)swift_slowAlloc();
          uint64_t v158 = swift_slowAlloc();
          *(_DWORD *)char v130 = 136315138;
          uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v129, v128, "%s showing friend inbox view", v130, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        swift_retain();
        sub_1003724B4();
        sub_1000E2384((uint64_t)v159);
        goto LABEL_52;
      }
      char v125 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v125) {
        goto LABEL_46;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    os_log_type_t v131 = static os_log_type_t.default.getter();
    uint64_t v132 = (void *)HKLogActivity;
    os_log_type_t v133 = v131;
    if (os_log_type_enabled(HKLogActivity, v131))
    {
      NSString v74 = v132;
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v158 = swift_slowAlloc();
      uint64_t v76 = v21;
      *(_DWORD *)uint64_t v75 = 136315138;
      uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      NSString v78 = "%s showing friend list";
      id v79 = v74;
      os_log_type_t v77 = v133;
      goto LABEL_51;
    }
LABEL_52:
    long long v124 = v21;
    goto LABEL_53;
  }
LABEL_30:
  URL._bridgeToObjectiveC()(v73);
  os_log_type_t v82 = v81;
  id v83 = (id)ASFriendUUIDFromActivityAppLaunchURL();

  if (!v83)
  {
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v55, 1, 1, v148);
    uint64_t v90 = v147;
    goto LABEL_41;
  }
  os_log_type_t v84 = v141;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v85 = v149;
  unint64_t v86 = *(void (**)(os_log_t, char *, uint64_t))(v149 + 32);
  uint64_t v87 = v84;
  uint64_t v88 = v148;
  v86(v55, v87, v148);
  (*(void (**)(os_log_t, void, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v88);
  int v89 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v85 + 48))(v55, 1, v88);
  uint64_t v90 = v147;
  if (v89 == 1)
  {
LABEL_41:
    sub_10008DB18((uint64_t)v55, (uint64_t *)&unk_1009555F0);
LABEL_42:
    os_log_type_t v114 = static os_log_type_t.default.getter();
    uint64_t v115 = HKLogActivity;
    unint64_t v116 = a1;
    uint64_t v117 = v145;
    v143(v90, v116, v145);
    os_log_type_t v118 = v114;
    if (os_log_type_enabled(v115, v114))
    {
      os_log_t v156 = v115;
      uint64_t v119 = swift_slowAlloc();
      char v146 = v21;
      uint64_t v120 = v119;
      uint64_t v158 = swift_slowAlloc();
      *(_DWORD *)uint64_t v120 = 136315394;
      uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v120 + 12) = 2082;
      sub_10005E5B0((unint64_t *)&unk_100966E60, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v121 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v157 = sub_10008F1F4(v121, v122, &v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v142(v90, v117);
      os_log_t v123 = v156;
      _os_log_impl((void *)&_mh_execute_header, v156, v118, "%s failed to show friend detail for friendUUID %{public}s", (uint8_t *)v120, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      long long v124 = v146;
LABEL_53:
      os_log_t v134 = v45;
      return ((uint64_t (*)(char *, os_log_t))v54)(v124, v134);
    }
    v142(v90, v117);
    goto LABEL_52;
  }
  os_log_t v91 = v55;
  uint64_t v92 = v140;
  v86((os_log_t)v140, (char *)v91, v88);
  uint64_t v93 = (void *)*((void *)v155 + 7);
  Class v94 = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v95 = (char *)[v93 friendWithUUID:v94];

  if (!v95)
  {
    (*(void (**)(char *, uint64_t))(v149 + 8))(v92, v88);
    goto LABEL_42;
  }
  long long v155 = v95;
  os_log_type_t v96 = static os_log_type_t.default.getter();
  uint64_t v97 = HKLogActivity;
  uint64_t v98 = v149;
  uint64_t v99 = v139;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v139, v92, v88);
  uint64_t v100 = v88;
  if (os_log_type_enabled(v97, v96))
  {
    uint64_t v101 = v97;
    char v146 = v21;
    os_log_t v153 = v101;
    uint64_t v102 = swift_slowAlloc();
    uint64_t v158 = swift_slowAlloc();
    *(_DWORD *)uint64_t v102 = 136315394;
    LODWORD(v152) = v96;
    uint64_t v157 = sub_10008F1F4(0xD000000000000016, 0x8000000100750560, &v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v102 + 12) = 2082;
    uint64_t v103 = UUID.description.getter();
    uint64_t v157 = sub_10008F1F4(v103, v104, &v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v105 = *(void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v106 = v99;
    uint64_t v107 = v148;
    v105(v106, v148);
    os_log_t v108 = v153;
    _os_log_impl((void *)&_mh_execute_header, v153, (os_log_type_t)v152, "%s showing friend detail for friendUUID %{public}s", (uint8_t *)v102, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v21 = v146;
    uint64_t v100 = v107;
  }
  else
  {
    uint64_t v105 = *(void (**)(char *, uint64_t))(v98 + 8);
    v105(v99, v100);
  }
  swift_retain();
  Swift::Int v136 = v155;
  sub_100371DCC(v155, 0);
  sub_1000E2384((uint64_t)v159);

  v105(v140, v100);
  long long v124 = v21;
  os_log_t v134 = v156;
  return ((uint64_t (*)(char *, os_log_t))v54)(v124, v134);
}

uint64_t sub_100187138()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100187154@<X0>(uint64_t a1@<X8>)
{
  return sub_100183950(a1);
}

id sub_1001871C0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

double sub_100187228@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1001872B0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100187B28(v1);
  swift_retain();
  return static Published.subscript.setter();
}

unint64_t sub_10018734C()
{
  unint64_t result = qword_10094BF58;
  if (!qword_10094BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BF58);
  }
  return result;
}

unint64_t sub_1001873A0()
{
  unint64_t result = qword_10094BF68;
  if (!qword_10094BF68)
  {
    sub_1000A1370(&qword_10094BF70);
    sub_100187440();
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BF68);
  }
  return result;
}

unint64_t sub_100187440()
{
  unint64_t result = qword_10094BF78;
  if (!qword_10094BF78)
  {
    sub_1000A1370(&qword_10094BF80);
    sub_1000A132C(&qword_10094BF88, &qword_10094BF90);
    sub_10018785C(&qword_10094BF98, &qword_10094BFA0, (void (*)(void))sub_10018750C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BF78);
  }
  return result;
}

unint64_t sub_10018750C()
{
  unint64_t result = qword_10094BFA8;
  if (!qword_10094BFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BFA8);
  }
  return result;
}

uint64_t sub_10018756C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001847B4(a1, v2 + 16, a2);
}

double sub_100187574@<D0>(uint64_t a1@<X8>)
{
  return sub_100184D08(*(void *)(v1 + 16), a1);
}

uint64_t sub_10018757C()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001876F8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100185804(v0 + 16, v2);
}

uint64_t sub_10018775C()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1001877EC(uint64_t a1)
{
  type metadata accessor for ScrollViewProxy();

  return sub_100185968(a1);
}

uint64_t sub_10018785C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001878D8()
{
  unint64_t result = qword_10094BFF8;
  if (!qword_10094BFF8)
  {
    sub_1000A1370(&qword_10094BFD0);
    sub_1000A132C(&qword_10094C000, &qword_10094BFC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094BFF8);
  }
  return result;
}

uint64_t sub_100187978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094BED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001879E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094BED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_100187A58(id result)
{
  if (result)
  {
    id v1 = result;
    swift_retain();
    swift_retain();
    swift_retain();
    return v1;
  }
  return result;
}

void *sub_100187ABC(void *result)
{
  if (result)
  {

    swift_release();
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_100187B20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001855C4(v1 + 16, a1);
}

uint64_t sub_100187B28(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_100187B74()
{
  unint64_t result = qword_1009559C0;
  if (!qword_1009559C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1009559C0);
  }
  return result;
}

uint64_t sub_100187BB4@<X0>(BOOL *a1@<X8>)
{
  return sub_1001823D4(v1, a1);
}

uint64_t sub_100187BD0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_100187C70(void *a1)
{
  return sub_1001835FC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void **)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void **)(v1 + 96), *(void **)(v1 + 104), *(void **)(v1 + 112), *(void **)(v1 + 120));
}

uint64_t sub_100187CBC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100187D3C()
{
  sub_100183780(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_100187D7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100187DB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100187DE0()
{
  unint64_t result = qword_10094C030;
  if (!qword_10094C030)
  {
    sub_1000A1370(&qword_10094BF28);
    sub_100187E80();
    sub_1000A132C(&qword_10094C0B0, &qword_10094C0B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C030);
  }
  return result;
}

unint64_t sub_100187E80()
{
  unint64_t result = qword_10094C038;
  if (!qword_10094C038)
  {
    sub_1000A1370(&qword_10094BF08);
    sub_100187F20();
    sub_1000A132C(&qword_10094C0A0, &qword_10094C0A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C038);
  }
  return result;
}

unint64_t sub_100187F20()
{
  unint64_t result = qword_10094C040;
  if (!qword_10094C040)
  {
    sub_1000A1370(&qword_10094BF00);
    sub_100187FC0();
    sub_1000A132C(&qword_10094C090, &qword_10094C098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C040);
  }
  return result;
}

unint64_t sub_100187FC0()
{
  unint64_t result = qword_10094C048;
  if (!qword_10094C048)
  {
    sub_1000A1370(&qword_10094BEF8);
    sub_100188060();
    sub_1000A132C(&qword_10094C080, &qword_10094C088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C048);
  }
  return result;
}

unint64_t sub_100188060()
{
  unint64_t result = qword_10094C050;
  if (!qword_10094C050)
  {
    sub_1000A1370(&qword_10094BEF0);
    sub_100188124(&qword_10094C058, &qword_10094BEE8, (void (*)(void))sub_10018819C);
    sub_1000A132C(&qword_10094C070, &qword_10094C078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C050);
  }
  return result;
}

uint64_t sub_100188124(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018819C()
{
  unint64_t result = qword_10094C060;
  if (!qword_10094C060)
  {
    sub_1000A1370(&qword_10094C068);
    sub_10018734C();
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_10094BF30);
    sub_100188124(&qword_10094BF60, &qword_10094BF30, (void (*)(void))sub_1001873A0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C060);
  }
  return result;
}

void destroy for MirrorStackedMetricsView(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for MirrorStackedMetricsView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  swift_retain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  id v8 = v6;
  return a1;
}

void *assignWithCopy for MirrorStackedMetricsView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = (void *)a2[4];
  id v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for MirrorStackedMetricsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorStackedMetricsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorStackedMetricsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorStackedMetricsView()
{
  return &type metadata for MirrorStackedMetricsView;
}

uint64_t sub_1001884D4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1001884F0@<X0>(long long *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  __chkstk_darwin(v3);
  uint64_t v42 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WorkoutViewStyle();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10094C108);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000AFA94(&qword_10094C0E8);
  __chkstk_darwin(v37);
  int v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10094C0E0);
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_10094C0D0);
  uint64_t v35 = *(void *)(v19 - 8);
  uint64_t v36 = v19;
  __chkstk_darwin(v19);
  unint64_t v34 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  long long v48 = *a1;
  swift_retain();
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_1000E2384((uint64_t)&v48);
  sub_10008DB18((uint64_t)v9, &qword_10094C100);
  id result = (id)HKWorkoutMetricTypeDescription();
  if (result)
  {
    uint64_t v23 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getOpaqueTypeConformance2();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v26 = v33;
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v33, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v41);
    unint64_t v27 = sub_100188FC0();
    uint64_t v28 = v37;
    View.workoutViewStyle(_:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    sub_10008DB18((uint64_t)v15, &qword_10094C0E8);
    long long v29 = v42;
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v46 = v28;
    unint64_t v47 = v27;
    swift_getOpaqueTypeConformance2();
    BOOL v30 = v34;
    uint64_t v31 = v39;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v31);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v45, v30, v36);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100188A64@<X0>(void *a1@<X8>)
{
  uint64_t v4 = (void *)*((void *)v1 + 2);
  uint64_t v3 = *((void *)v1 + 3);
  uint64_t v5 = (void *)*((void *)v1 + 4);
  sub_100188E10();
  *a1 = v6;
  sub_1000AFA94(&qword_10094C0C0);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1004F8A98(v7);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  long long v13 = *v1;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *v1;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v3;
  *(void *)(v8 + 48) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100188F50;
  *(void *)(v9 + 24) = v8;
  swift_bridgeObjectRetain();
  sub_1000E2358((uint64_t)&v13);
  id v10 = v4;
  id v11 = v5;
  sub_1000AFA94(&qword_10094C0C8);
  sub_1000AFA94(&qword_10094C0D0);
  sub_1000A132C(&qword_10094C0D8, &qword_10094C0C8);
  sub_1000A1370(&qword_10094C0E0);
  sub_1000A1370(&qword_10094C0E8);
  sub_100188FC0();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

double sub_100188C70(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_100188C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001892CC(a5);
}

uint64_t sub_100188CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100188D10(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100188CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100188D10(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100188D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_100188D54(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = Animatable<>.animatableData.modify();
  return sub_100188DC4;
}

void sub_100188DC4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100188E10()
{
  uint64_t v0 = self;
  id v1 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v2 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  return static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
}

uint64_t sub_100188F00()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_100188F50@<X0>(uint64_t a1@<X8>)
{
  return sub_1001884F0((long long *)(v1 + 16), a1);
}

uint64_t sub_100188F58()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100188F90(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

unint64_t sub_100188FC0()
{
  unint64_t result = qword_10094C0F0;
  if (!qword_10094C0F0)
  {
    sub_1000A1370(&qword_10094C0E8);
    swift_getOpaqueTypeConformance2();
    sub_10000CCFC((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C0F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorMetricsViewStackedLayout()
{
  return &type metadata for MirrorMetricsViewStackedLayout;
}

unint64_t sub_100189098()
{
  unint64_t result = qword_10094C110;
  if (!qword_10094C110)
  {
    sub_1000A1370(&qword_10094C0C0);
    sub_1000A132C(&qword_10094C118, &qword_10094C120);
    sub_100189138();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C110);
  }
  return result;
}

unint64_t sub_100189138()
{
  unint64_t result = qword_10094C128;
  if (!qword_10094C128)
  {
    sub_1000A1370(&qword_10094C130);
    sub_1000A1370(&qword_10094C0E0);
    sub_1000A1370(&qword_10094C0E8);
    sub_100188FC0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C128);
  }
  return result;
}

unint64_t sub_100189220()
{
  unint64_t result = qword_10094C138;
  if (!qword_10094C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C138);
  }
  return result;
}

unint64_t sub_100189278()
{
  unint64_t result = qword_10094C140;
  if (!qword_10094C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C140);
  }
  return result;
}

uint64_t sub_1001892CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutSubview();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MetricPlatterConstants();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LayoutSubviews();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_10000CCFC((unint64_t *)&qword_10094C148, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v13 = dispatch thunk of Collection.distance(from:to:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13 > 5)
  {
    __break(1u);
    goto LABEL_8;
  }
  MetricPlatterConstants.init()();
  MetricPlatterConstants.metricMaxHeight.getter();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v16 = v6 + 8;
  int v15 = v17;
  v17(v8, v5);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  dispatch thunk of Collection.distance(from:to:)();
  MetricPlatterConstants.init()();
  MetricPlatterConstants.metricMaxHeight.getter();
  v17(v8, v5);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (result < 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v18 = result;
  uint64_t v24 = v16;
  uint64_t v25 = v15;
  uint64_t v19 = v23;
  if (result)
  {
    uint64_t result = 0;
    uint64_t v20 = (void (**)(char *, uint64_t))(v22 + 8);
    do
    {
      uint64_t v21 = result + 1;
      LayoutSubviews.subscript.getter();
      MetricPlatterConstants.init()();
      MetricPlatterConstants.metricMaxHeight.getter();
      v25(v8, v5);
      static UnitPoint.topLeading.getter();
      char v27 = 0;
      char v26 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      (*v20)(v4, v19);
      uint64_t result = v21;
    }
    while (v18 != v21);
  }
  return result;
}

uint64_t destroy for SleepingSampleMetricLineChart()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SleepingSampleMetricLineChart(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SleepingSampleMetricLineChart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SleepingSampleMetricLineChart(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleMetricLineChart(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleMetricLineChart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleMetricLineChart()
{
  return &type metadata for SleepingSampleMetricLineChart;
}

uint64_t sub_100189994()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1001899B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for BaselineRelativeValue();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for SleepingSampleSingleMetricChartPoint();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v49 = (uint64_t)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v40 = (char *)v35 - v15;
  __chkstk_darwin(v14);
  uint64_t v39 = (uint64_t)v35 - v16;
  if (a2 == a1) {
    return _swiftEmptyArrayStorage;
  }
  void v35[2] = v3;
  uint64_t v17 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v46 = a3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v47 = v18;
  uint64_t v50 = *(void *)(a3 + 16);
  uint64_t v44 = (uint64_t (**)(uint64_t *, uint64_t))(v8 + 88);
  uint64_t v45 = (void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  int v43 = enum case for BaselineRelativeValue.determinate(_:);
  uint64_t v36 = (void (**)(uint64_t *, uint64_t))(v8 + 96);
  uint64_t v37 = (void (**)(uint64_t *, uint64_t))(v8 + 8);
  v35[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v20 = a2;
  uint64_t v21 = a2;
  uint64_t v38 = a2;
  uint64_t v48 = v17;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v22 > a1 || v22 <= v21) {
      goto LABEL_17;
    }
    if (v22 < 1) {
      goto LABEL_18;
    }
    if (v22 > v50) {
      goto LABEL_19;
    }
    uint64_t v23 = v46 + *(void *)(v47 + 72) * v20;
    (*v45)(v10, v23 + *(int *)(v17 + 20), v7);
    int v24 = (*v44)(v10, v7);
    if (v24 == v43)
    {
      (*v36)(v10, v7);
      uint64_t v25 = *v10;
      uint64_t v26 = type metadata accessor for Date();
      char v27 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v40, v23, v26);
      uint64_t v28 = *(void *)(v23 + *(int *)(v17 + 24));
      uint64_t v29 = v42;
      *(void *)&v27[*(int *)(v42 + 20)] = v25;
      *(void *)&v27[*(int *)(v29 + 24)] = v28;
      uint64_t v30 = (uint64_t)v27;
      uint64_t v31 = v39;
      sub_10018B5BC(v30, v39);
      sub_10018B5BC(v31, v49);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (void *)sub_1001E7080(0, v19[2] + 1, 1, (unint64_t)v19);
      }
      unint64_t v33 = v19[2];
      unint64_t v32 = v19[3];
      if (v33 >= v32 >> 1) {
        uint64_t v19 = (void *)sub_1001E7080(v32 > 1, v33 + 1, 1, (unint64_t)v19);
      }
      void v19[2] = v33 + 1;
      sub_10018B5BC(v49, (uint64_t)v19+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v33);
      uint64_t v21 = v38;
    }
    else
    {
      (*v37)(v10, v7);
    }
    ++v20;
    uint64_t v17 = v48;
    if (v22 == a1) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_100189DFC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BaselineRelativeValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for SleepingSampleSingleMetricChartPoint();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v44 = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v38 = (char *)v32 - v11;
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)v32 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return _swiftEmptyArrayStorage;
  }
  v32[1] = v1;
  uint64_t v14 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v15 = a1
      + ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80));
  uint64_t v16 = *(void *)(*(void *)(v14 - 8) + 72);
  uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v17 = v4 + 16;
  uint64_t v18 = v19;
  int v43 = (uint64_t (**)(uint64_t *, uint64_t))(v17 + 72);
  int v42 = enum case for BaselineRelativeValue.determinate(_:);
  unint64_t v34 = (void (**)(uint64_t *, uint64_t))(v17 + 80);
  uint64_t v35 = (void (**)(uint64_t *, uint64_t))(v17 - 8);
  v32[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v36 = v14;
  uint64_t v37 = v17;
  unint64_t v33 = v19;
  do
  {
    v18(v6, v15 + *(int *)(v14 + 20), v3);
    int v21 = (*v43)(v6, v3);
    if (v21 == v42)
    {
      uint64_t v22 = v16;
      (*v34)(v6, v3);
      uint64_t v23 = *v6;
      uint64_t v24 = type metadata accessor for Date();
      uint64_t v25 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v38, v15, v24);
      uint64_t v26 = *(void *)(v15 + *(int *)(v14 + 24));
      uint64_t v27 = v41;
      *(void *)(v25 + *(int *)(v41 + 20)) = v23;
      *(void *)(v25 + *(int *)(v27 + 24)) = v26;
      uint64_t v28 = v39;
      sub_10018B5BC(v25, v39);
      sub_10018B5BC(v28, v44);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = (void *)sub_1001E7080(0, v20[2] + 1, 1, (unint64_t)v20);
      }
      uint64_t v16 = v22;
      uint64_t v18 = v33;
      unint64_t v30 = v20[2];
      unint64_t v29 = v20[3];
      if (v30 >= v29 >> 1) {
        uint64_t v20 = (void *)sub_1001E7080(v29 > 1, v30 + 1, 1, (unint64_t)v20);
      }
      void v20[2] = v30 + 1;
      sub_10018B5BC(v44, (uint64_t)v20+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v30);
      uint64_t v14 = v36;
    }
    else
    {
      (*v35)(v6, v3);
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10018A200@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C158);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_10094C160);
  uint64_t v8 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094C168);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v44 - v16;
  uint64_t v77 = static VerticalAlignment.center.getter();
  sub_10018AF64((uint64_t)&v127);
  uint64_t v75 = v129;
  uint64_t v76 = v127;
  uint64_t v73 = v132;
  uint64_t v74 = v130;
  uint64_t v72 = v133;
  int v63 = v128;
  int v64 = v134;
  uint64_t v71 = v135;
  int v65 = v136;
  uint64_t v69 = v138;
  uint64_t v70 = v137;
  uint64_t v67 = v140;
  uint64_t v68 = v139;
  uint64_t v66 = v141;
  char v86 = 1;
  char v85 = v128;
  unsigned __int8 v84 = v131;
  unsigned __int8 v83 = v134;
  char v82 = v136;
  int v62 = v131;
  uint64_t v78 = a1;
  sub_1000AFA94(&qword_10094C170);
  sub_10018B184();
  Chart.init(content:)();
  sub_1000A132C(&qword_10094C1A0, &qword_10094C158);
  View.chartYAxis(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v17 = v61;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v10, v61);
  uint64_t v18 = &v15[*(int *)(v12 + 44)];
  long long v19 = v80;
  *(_OWORD *)uint64_t v18 = v79;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v81;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  uint64_t v20 = v59;
  sub_10018B300((uint64_t)v15, v59);
  uint64_t v58 = static VerticalAlignment.center.getter();
  sub_10018AF64((uint64_t)&v127);
  uint64_t v21 = v130;
  uint64_t v56 = v129;
  uint64_t v57 = v127;
  uint64_t v44 = v130;
  uint64_t v54 = v133;
  uint64_t v55 = v132;
  uint64_t v53 = v135;
  uint64_t v51 = v138;
  uint64_t v52 = v137;
  uint64_t v50 = v139;
  uint64_t v60 = v141;
  uint64_t v61 = v140;
  char v91 = 1;
  char v90 = v128;
  LOBYTE(v10) = v128;
  int v46 = v128;
  int v47 = v134;
  unsigned __int8 v89 = v131;
  unsigned __int8 v88 = v134;
  LOBYTE(v5) = v134;
  char v87 = v136;
  LOBYTE(v8) = v136;
  int v48 = v136;
  LOBYTE(v17) = v131;
  int v45 = v131;
  uint64_t v49 = v15;
  sub_10018B368(v20, (uint64_t)v15);
  v92[0] = v77;
  v92[1] = 0;
  LOBYTE(v93) = 1;
  *((void *)&v93 + 1) = v76;
  LOBYTE(v94) = v63;
  *((void *)&v94 + 1) = v75;
  *(void *)&long long v95 = v74;
  BYTE8(v95) = v62;
  *(void *)&long long v96 = v73;
  *((void *)&v96 + 1) = v72;
  LOBYTE(v97) = v64;
  *((void *)&v97 + 1) = v71;
  LOBYTE(v98) = v65;
  *((void *)&v98 + 1) = v70;
  *(void *)&long long v99 = v69;
  *((void *)&v99 + 1) = v68;
  *(void *)&long long v100 = v67;
  *((void *)&v100 + 1) = v66;
  long long v22 = v93;
  *a2 = (unint64_t)v77;
  a2[1] = v22;
  long long v23 = v100;
  long long v24 = v98;
  a2[7] = v99;
  a2[8] = v23;
  long long v25 = v96;
  a2[5] = v97;
  a2[6] = v24;
  long long v26 = v94;
  a2[3] = v95;
  a2[4] = v25;
  a2[2] = v26;
  uint64_t v27 = sub_1000AFA94(&qword_10094C1A8);
  sub_10018B368((uint64_t)v15, (uint64_t)a2 + *(int *)(v27 + 48));
  uint64_t v28 = (_OWORD *)((char *)a2 + *(int *)(v27 + 64));
  uint64_t v30 = v57;
  uint64_t v29 = v58;
  v101[0] = v58;
  v101[1] = 0;
  LOBYTE(v102) = 1;
  *((void *)&v102 + 1) = v57;
  LOBYTE(v103) = (_BYTE)v10;
  uint64_t v31 = v55;
  uint64_t v32 = v56;
  *((void *)&v103 + 1) = v56;
  *(void *)&long long v104 = v21;
  BYTE8(v104) = v17;
  *(void *)&long long v105 = v55;
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  *((void *)&v105 + 1) = v54;
  LOBYTE(v106) = v5;
  *((void *)&v106 + 1) = v53;
  LOBYTE(v107) = v8;
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  *((void *)&v107 + 1) = v52;
  *(void *)&long long v108 = v51;
  uint64_t v37 = v50;
  *((void *)&v108 + 1) = v50;
  *(void *)&long long v109 = v61;
  *((void *)&v109 + 1) = v60;
  long long v38 = v102;
  *uint64_t v28 = (unint64_t)v58;
  v28[1] = v38;
  long long v39 = v104;
  long long v28[2] = v103;
  v28[3] = v39;
  long long v40 = v109;
  long long v41 = v107;
  v28[7] = v108;
  v28[8] = v40;
  long long v42 = v106;
  v28[4] = v105;
  v28[5] = v42;
  v28[6] = v41;
  sub_10018B3D0((uint64_t)v92);
  sub_10018B3D0((uint64_t)v101);
  sub_10018B440(v59);
  v110[0] = v29;
  v110[1] = 0;
  char v111 = 1;
  uint64_t v112 = v30;
  char v113 = v46;
  uint64_t v114 = v32;
  uint64_t v115 = v44;
  char v116 = v45;
  uint64_t v117 = v31;
  uint64_t v118 = v34;
  char v119 = v47;
  uint64_t v120 = v33;
  char v121 = v48;
  uint64_t v122 = v35;
  uint64_t v123 = v36;
  uint64_t v124 = v37;
  uint64_t v125 = v61;
  uint64_t v126 = v60;
  sub_10018B4A0((uint64_t)v110);
  sub_10018B440((uint64_t)v49);
  uint64_t v127 = v77;
  uint64_t v128 = 0;
  LOBYTE(v129) = 1;
  uint64_t v130 = v76;
  unsigned __int8 v131 = v63;
  uint64_t v132 = v75;
  uint64_t v133 = v74;
  unsigned __int8 v134 = v62;
  uint64_t v135 = v73;
  uint64_t v136 = v72;
  LOBYTE(v137) = v64;
  uint64_t v138 = v71;
  LOBYTE(v139) = v65;
  uint64_t v140 = v70;
  uint64_t v141 = v69;
  uint64_t v142 = v68;
  uint64_t v143 = v67;
  uint64_t v144 = v66;
  return sub_10018B4A0((uint64_t)&v127);
}

uint64_t sub_10018A908@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for BaselineRelativeValue();
  uint64_t v50 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v49 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000AFA94(&qword_10094C1B0);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094C188);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v59 = a1[2];
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C1B8);
  type metadata accessor for SleepingSampleBaselineBand(0);
  sub_1000A132C(&qword_10094C1C0, &qword_10094C1B8);
  sub_10018B518(&qword_10094C1C8, (void (*)(uint64_t))type metadata accessor for SleepingSampleBaselineBand.Configuration);
  sub_10018B518(&qword_10094C190, (void (*)(uint64_t))type metadata accessor for SleepingSampleBaselineBand);
  uint64_t v56 = v13;
  ForEach<>.init(_:id:content:)();
  uint64_t v14 = *v57;
  uint64_t v15 = *(void *)(*v57 + 16);
  if (!v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
LABEL_8:
    long long v26 = sub_1001899B0(v15, v23, v14);
    uint64_t v27 = v9;
    uint64_t v28 = v26;
    swift_bridgeObjectRelease();
    uint64_t v29 = v57;
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = sub_100189DFC(v30);
    swift_bridgeObjectRelease();
    BOOL v32 = *(void *)(v29[3] + 16) < 0x1EuLL;
    char v33 = *((unsigned char *)v29 + 32);
    uint64_t v35 = v53;
    uint64_t v34 = v54;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v36(v53, v56, v27);
    sub_10018B208();
    uint64_t v37 = v51;
    v36(v51, v35, v27);
    sub_10018B2AC();
    uint64_t v38 = v52;
    long long v39 = &v37[*(int *)(v52 + 48)];
    *(void *)long long v39 = v28;
    *((void *)v39 + 1) = v31;
    v39[16] = v32;
    *(_OWORD *)(v39 + 24) = xmmword_1007508A0;
    *((void *)v39 + 5) = 0;
    *((_OWORD *)v39 + 3) = xmmword_1007508B0;
    *((void *)v39 + 8) = 0x4010000000000000;
    v39[72] = v33;
    uint64_t v40 = v55;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v55, v37, v27);
    uint64_t v41 = v40 + *(int *)(v38 + 48);
    char v42 = v39[16];
    uint64_t v43 = *((void *)v39 + 5);
    uint64_t v44 = *((void *)v39 + 8);
    char v45 = v39[72];
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v39;
    *(unsigned char *)(v41 + 16) = v42;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v39 + 24);
    *(void *)(v41 + 40) = v43;
    *(_OWORD *)(v41 + 48) = *((_OWORD *)v39 + 3);
    *(void *)(v41 + 64) = v44;
    *(unsigned char *)(v41 + 72) = v45;
    int v46 = *(void (**)(char *, uint64_t))(v34 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v56, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v46)(v35, v27);
  }
  uint64_t v48 = v9;
  unint64_t v16 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v17 = enum case for BaselineRelativeValue.indeterminate(_:);
  uint64_t v18 = (void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  long long v19 = (void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v20 = *(void *)(v49 + 72);
  swift_bridgeObjectRetain();
  uint64_t v49 = v15;
  uint64_t v50 = v14;
  uint64_t v21 = v14 + v16 + v20 * (v15 - 1);
  uint64_t v22 = -v20;
  uint64_t v23 = v15;
  while (1)
  {
    sub_10018B620(v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SleepingSampleBaselineRelativeChartPoint);
    (*v18)(v5, v17, v3);
    sub_10018B518(&qword_10094C1D0, (void (*)(uint64_t))&type metadata accessor for BaselineRelativeValue);
    char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    (*v19)(v5, v3);
    uint64_t result = sub_10018B560((uint64_t)v7);
    if (v24) {
      break;
    }
    v21 += v22;
    if (!--v23)
    {
      uint64_t v9 = v48;
      uint64_t v15 = v49;
      uint64_t v14 = v50;
      goto LABEL_8;
    }
  }
  uint64_t v9 = v48;
  uint64_t v15 = v49;
  uint64_t v14 = v50;
  if (v49 >= v23) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10018AF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10018B620(a1, a2, type metadata accessor for SleepingSampleBaselineBand.Configuration);
}

uint64_t sub_10018AF64@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  LOWORD(v14) = 256;
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v9 = static Font.caption2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  id v11 = [self tertiaryLabelColor];
  uint64_t v12 = Color.init(_:)();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v15;
  *(unsigned char *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = v19;
  *(void *)(a1 + 88) = v20;
  *(void *)(a1 + 96) = KeyPath;
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v12;
  sub_1000A1750(v2, v4, v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A06C0(v2, v4, v8);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10018B118@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  char v7 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_1000AFA94(&qword_10094C150);
  return sub_10018A200((uint64_t)v6, (_OWORD *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_10018B17C@<X0>(uint64_t a1@<X8>)
{
  return sub_10018A908(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_10018B184()
{
  unint64_t result = qword_10094C178;
  if (!qword_10094C178)
  {
    sub_1000A1370(&qword_10094C170);
    sub_10018B208();
    sub_10018B2AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C178);
  }
  return result;
}

unint64_t sub_10018B208()
{
  unint64_t result = qword_10094C180;
  if (!qword_10094C180)
  {
    sub_1000A1370(&qword_10094C188);
    sub_10018B518(&qword_10094C190, (void (*)(uint64_t))type metadata accessor for SleepingSampleBaselineBand);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C180);
  }
  return result;
}

unint64_t sub_10018B2AC()
{
  unint64_t result = qword_10094C198;
  if (!qword_10094C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C198);
  }
  return result;
}

uint64_t sub_10018B300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018B368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018B3D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10018B440(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094C168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018B4A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10018B518(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018B560(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018B5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleSingleMetricChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018B620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018B688()
{
  return sub_1000A132C(&qword_10094C1D8, &qword_10094C1E0);
}

uint64_t sub_10018B6C4@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  int v40 = a4;
  uint64_t v39 = a3;
  int v37 = a1;
  int v38 = a2;
  int v50 = a15;
  uint64_t v48 = a14;
  uint64_t v49 = a8;
  uint64_t v47 = a13;
  uint64_t v45 = a7;
  uint64_t v46 = a12;
  uint64_t v43 = a10;
  uint64_t v44 = a11;
  uint64_t v16 = sub_1000AFA94(&qword_10094C1E8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  long long v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v36 - v27;
  uint64_t v29 = (int *)type metadata accessor for MetricDetailView();
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v26, v28, v22);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
  uint64_t v30 = (void *)(a9 + v29[10]);
  unint64_t v51 = sub_10052CB80((uint64_t)_swiftEmptyArrayStorage);
  sub_1000AFA94(&qword_10094C1F0);
  State.init(wrappedValue:)();
  uint64_t v31 = v53;
  *uint64_t v30 = v52;
  v30[1] = v31;
  uint64_t v32 = type metadata accessor for MetricChartData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v21, 1, 1, v32);
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v19, &qword_10094C1E8);
  State.init(wrappedValue:)();
  sub_10008DB18((uint64_t)v21, &qword_10094C1E8);
  *(unsigned char *)a9 = v37;
  *(unsigned char *)(a9 + 1) = v38;
  *(void *)(a9 + 8) = v39;
  *(unsigned char *)(a9 + 16) = v40 & 1;
  uint64_t v33 = v41;
  uint64_t v34 = v42;
  *(void *)(a9 + 24) = 0;
  *(void *)(a9 + 32) = v33;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = v33;
  *(void *)(a9 + v29[12]) = v34;
  uint64_t result = sub_100192E28(v45, a9 + v29[13], (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  *(void *)(a9 + v29[14]) = v49;
  *(void *)(a9 + v29[15]) = v43;
  *(void *)(a9 + v29[16]) = v44;
  *(void *)(a9 + v29[17]) = v46;
  *(void *)(a9 + v29[18]) = v47;
  *(void *)(a9 + v29[19]) = v48;
  *(unsigned char *)(a9 + v29[20]) = v50;
  return result;
}

uint64_t type metadata accessor for MetricDetailView()
{
  uint64_t result = qword_10094C260;
  if (!qword_10094C260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_10018BA68()
{
  double result = 10.0;
  xmmword_100997510 = xmmword_1007509A0;
  *(_OWORD *)&qword_100997520 = xmmword_1007509B0;
  return result;
}

double sub_10018BA88()
{
  xmmword_100997530 = 0uLL;
  double result = 20.0;
  xmmword_100997540 = xmmword_1007509C0;
  return result;
}

uint64_t sub_10018BAA4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.title(_:), v3);
  uint64_t v7 = enum case for Font.Design.rounded(_:);
  uint64_t v8 = type metadata accessor for Font.Design();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  static Font.Weight.semibold.getter();
  uint64_t v10 = static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v2, &qword_10094C448);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_100997550 = v10;
  return result;
}

double sub_10018BC94()
{
  xmmword_100997558 = 0uLL;
  double result = 20.0;
  xmmword_100997568 = xmmword_1007509C0;
  return result;
}

double sub_10018BCB0()
{
  xmmword_100997578 = 0uLL;
  double result = 30.0;
  xmmword_100997588 = xmmword_1007509D0;
  return result;
}

uint64_t sub_10018BCCC()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.footnote(_:), v4);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v8 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100997598 = v8;
  return result;
}

uint64_t sub_10018BEA4()
{
  uint64_t v1 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for MetricDetailView();
  char v2 = *v0;
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  sub_100533F48(v2);
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  swift_getKeyPath();
  swift_getKeyPath();
  if (qword_10094A5B8 != -1) {
    swift_once();
  }
  sub_1000AA6A0();
  swift_retain();
  return AttributedString.subscript.setter();
}

uint64_t sub_10018C048@<X0>(uint64_t a1@<X8>)
{
  char v2 = (char *)v1;
  uint64_t v4 = type metadata accessor for MetricDetailViewModel();
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MetricDetailView();
  uint64_t v7 = *v1;
  sub_10018C284((uint64_t)v6);
  unsigned __int8 v8 = v1[16];
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v22 = *((void *)v1 + 1);
  unsigned __int8 v23 = v8;
  uint64_t v24 = v9;
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  uint64_t v10 = v25;
  unsigned __int8 v11 = v26;
  if (qword_10094A5A0 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_100997550;
  if ((v11 & (v10 == 0)) != 0) {
    uint64_t v13 = (char *)v6;
  }
  else {
    uint64_t v13 = (char *)(v6 + 1);
  }
  if (((1 << v7) & 0x2224471F80) != 0) {
    uint64_t v14 = v6 + 1;
  }
  else {
    uint64_t v14 = (id *)v13;
  }
  if (((1 << v7) & 0x5DDBB8E070) != 0) {
    uint64_t v15 = v6;
  }
  else {
    uint64_t v15 = v14;
  }
  id v16 = *v15;
  char v17 = *((unsigned char *)v6 + *(int *)(v4 + 40));
  id v18 = *v15;
  sub_1000A18EC(v16, v7, v12, 0, 0, 0, (v17 & 1) == 0, a1);

  sub_100192DC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t KeyPath = swift_getKeyPath();
  *(&v21 - 2) = __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_1000A3E18(*v2);
  uint64_t v22 = Color.init(uiColor:)();
  sub_1000A5D60();
  return AttributedString.subscript.setter();
}

uint64_t sub_10018C284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MetricDetailView();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v10 = sub_10018ECDC();
  char v12 = v11;
  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v4 + 40));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v32[1] = v15;
  void v32[2] = v14;
  sub_1000AFA94(&qword_10094C370);
  State.wrappedValue.getter();
  uint64_t v16 = v33;
  if (*(void *)(v33 + 16) && (unint64_t v17 = sub_10052931C(v10, v12 & 1), (v18 & 1) != 0))
  {
    unint64_t v19 = v17;
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v21 = type metadata accessor for MetricDetailViewModel();
    uint64_t v22 = *(void *)(v21 - 8);
    v32[0] = v4;
    uint64_t v23 = v22;
    sub_100192C8C(v20 + *(void *)(v22 + 72) * v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v21);
  }
  else
  {
    uint64_t v21 = type metadata accessor for MetricDetailViewModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  sub_100192C8C(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  type metadata accessor for MetricDetailViewModel();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v9, 1, v21) == 1)
  {
    uint64_t v24 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10018ECDC();
    int v26 = v25 & 1;
    id v27 = sub_1000C4F40(*v6);
    uint64_t v28 = self;
    id v29 = [v28 quantityWithUnit:v27 doubleValue:0.0];
    id v30 = [v28 quantityWithUnit:v27 doubleValue:0.0];
    sub_1000C3140(v24, v26, a1 + *(int *)(v21 + 36));
    Date.init()();

    *(void *)a1 = v29;
    *(void *)(a1 + 8) = v30;
    *(void *)(a1 + 16) = _swiftEmptyArrayStorage;
    *(void *)(a1 + 24) = _swiftEmptyArrayStorage;
    *(void *)(a1 + 32) = v24;
    *(unsigned char *)(a1 + 40) = v26;
    *(unsigned char *)(a1 + *(int *)(v21 + 40)) = 0;
    sub_100192DC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    return sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_100955590);
  }
  else
  {
    sub_100192DC8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    return sub_100192E28((uint64_t)v9, a1, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  }
}

uint64_t sub_10018C628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v2 = type metadata accessor for TaskPriority();
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricDetailView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4 - 8;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = sub_1000AFA94(&qword_10094C2E8);
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_10094C2F0);
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v68 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_10094C2F8);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_10094C300) - 8;
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v1;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_10094C308);
  sub_1000A132C(&qword_10094C310, &qword_10094C308);
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v12 = v1;
  char v13 = *(unsigned char *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  *(void *)&long long v70 = *(void *)(v1 + 8);
  BYTE8(v70) = v13;
  uint64_t v71 = v14;
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  *(void *)&long long v70 = v73;
  BYTE8(v70) = v74;
  sub_100192C8C(v1, (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  uint64_t v66 = v15 | 7;
  uint64_t v67 = v16;
  uint64_t v65 = v16 + v6;
  uint64_t v17 = swift_allocObject();
  int v50 = type metadata accessor for MetricDetailView;
  char v18 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100192E28((uint64_t)v18, v17 + v16, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v19 = sub_1000A132C(&qword_10094C320, &qword_10094C2E8);
  unint64_t v20 = sub_100192160();
  uint64_t v21 = v51;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v21);
  uint64_t v22 = v12;
  long long v70 = *(_OWORD *)(v12 + 32);
  sub_1000AFA94(&qword_10094C330);
  State.wrappedValue.getter();
  uint64_t v48 = v12;
  uint64_t v47 = v18;
  uint64_t v49 = type metadata accessor for MetricDetailView;
  sub_100192C8C(v12, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v67;
  char v25 = v50;
  sub_100192E28((uint64_t)v18, v23 + v67, (uint64_t (*)(void))v50);
  *(void *)&long long v70 = v21;
  *((void *)&v70 + 1) = &type metadata for MetricDataProviderTimeScale;
  uint64_t v71 = v19;
  unint64_t v72 = v20;
  swift_getOpaqueTypeConformance2();
  int v26 = v53;
  uint64_t v27 = v56;
  uint64_t v28 = v68;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v27);
  uint64_t v29 = (uint64_t)v47;
  sub_100192C8C(v22, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v30 + v24;
  uint64_t v32 = v29;
  sub_100192E28(v29, v31, (uint64_t (*)(void))v25);
  uint64_t v33 = v60;
  static TaskPriority.userInitiated.getter();
  uint64_t v34 = (uint64_t)v54;
  uint64_t v35 = &v54[*(int *)(v55 + 44)];
  uint64_t v36 = type metadata accessor for _TaskModifier();
  uint64_t v38 = v61;
  uint64_t v37 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(&v35[*(int *)(v36 + 20)], v33, v62);
  *(void *)uint64_t v35 = &unk_10094C340;
  *((void *)v35 + 1) = v30;
  uint64_t v39 = v58;
  uint64_t v40 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v34, v26, v59);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v37);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v40);
  uint64_t v41 = *(void *)(*(void *)(v48 + *(int *)(v63 + 64))
                  + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates);
  sub_100192C8C(v48, v32, (uint64_t (*)(void))v49);
  uint64_t v42 = swift_allocObject();
  sub_100192E28(v32, v42 + v67, (uint64_t (*)(void))v25);
  uint64_t v43 = v64;
  sub_1000AEF2C(v34, v64, &qword_10094C300);
  uint64_t v44 = sub_1000AFA94(&qword_10094C348);
  *(void *)(v43 + *(int *)(v44 + 52)) = v41;
  uint64_t v45 = (void *)(v43 + *(int *)(v44 + 56));
  *uint64_t v45 = sub_1001922E0;
  v45[1] = v42;
  swift_retain();
  return sub_10008DB18(v34, &qword_10094C300);
}

uint64_t sub_10018CE34@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = static Alignment.top.getter();
  a2[1] = v4;
  uint64_t v5 = sub_1000AFA94(&qword_10094C388);
  return sub_10018CE7C(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_10018CE7C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C390);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094C398);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v38 - v12;
  sub_1000A3E18(*a1);
  uint64_t v14 = Color.init(uiColor:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v43;
  int v42 = v44;
  uint64_t v41 = v45;
  int v40 = v46;
  uint64_t v38 = v48;
  uint64_t v39 = v47;
  char v16 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  uint8_t v6[16] = 0;
  uint64_t v25 = sub_1000AFA94(&qword_10094C3A0);
  sub_10018D144(a1, (uint64_t *)&v6[*(int *)(v25 + 44)]);
  LOBYTE(a1) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v11, &qword_10094C390);
  uint64_t v34 = &v11[*(int *)(v8 + 44)];
  *uint64_t v34 = (char)a1;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_10008DB18((uint64_t)v6, &qword_10094C390);
  sub_1000AEEC8((uint64_t)v11, (uint64_t)v13, &qword_10094C398);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v11, &qword_10094C398);
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v42;
  *(void *)(a2 + 24) = v41;
  *(unsigned char *)(a2 + 32) = v40;
  uint64_t v35 = v38;
  *(void *)(a2 + 40) = v39;
  *(void *)(a2 + 48) = v35;
  *(unsigned char *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v20;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v24;
  *(unsigned char *)(a2 + 96) = 0;
  uint64_t v36 = sub_1000AFA94(&qword_10094C3A8);
  sub_1000AEF2C((uint64_t)v11, a2 + *(int *)(v36 + 48), &qword_10094C398);
  swift_retain();
  sub_10008DB18((uint64_t)v13, &qword_10094C398);
  sub_10008DB18((uint64_t)v11, &qword_10094C398);
  return swift_release();
}

uint64_t sub_10018D144@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v157 = a1;
  long long v198 = a2;
  uint64_t v195 = type metadata accessor for MetricDetailWorkoutListView();
  __chkstk_darwin(v195);
  uint64_t v197 = (uint64_t)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_1000AFA94(&qword_10094C3B0);
  uint64_t v4 = __chkstk_darwin(v196);
  uint64_t v199 = (uint64_t)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v205 = (uint64_t)&v152 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_10094C3B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v192 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_1000AFA94(&qword_10094C3C0);
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v153 = (uint64_t)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10094C3C8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v204 = (uint64_t)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v203 = (uint64_t)&v152 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094C3D0);
  __chkstk_darwin(v14 - 8);
  *(void *)&long long v184 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MetricFormattingHelper();
  __chkstk_darwin(v16 - 8);
  uint64_t v182 = (uint64_t)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for MetricDetailViewModel();
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v178 = (uint64_t)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MetricDetailChartView();
  __chkstk_darwin(v19 - 8);
  long long v181 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1000AFA94(&qword_10094C3D8);
  __chkstk_darwin(v179);
  uint64_t v180 = (uint64_t)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1000AFA94(&qword_10094C3E0);
  uint64_t v22 = __chkstk_darwin(v183);
  uint64_t v208 = (uint64_t)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v207 = (uint64_t)&v152 - v24;
  uint64_t v25 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v25 - 8);
  long long v167 = (char *)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = type metadata accessor for MetricDetailHeaderView();
  __chkstk_darwin(v159);
  unint64_t v162 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1000AFA94(&qword_10094C3E8);
  __chkstk_darwin(v160);
  uint64_t v163 = (uint64_t)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1000AFA94(&qword_10094C3F0);
  __chkstk_darwin(v161);
  uint64_t v166 = (uint64_t)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1000AFA94(&qword_10094C3F8);
  uint64_t v30 = __chkstk_darwin(v165);
  uint64_t v202 = (uint64_t)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v164 = (uint64_t)&v152 - v33;
  __chkstk_darwin(v32);
  uint64_t v206 = (uint64_t)&v152 - v34;
  uint64_t v201 = type metadata accessor for Date();
  *(void *)&long long v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  char v172 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for Calendar.Component();
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v158 = (char *)&v152 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for Calendar();
  uint64_t v171 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v38 = (char *)&v152 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v211 = sub_10007DA24(*a1);
  *((void *)&v211 + 1) = v39;
  sub_1000A06D0();
  uint64_t v40 = Text.init<A>(_:)();
  uint64_t v42 = v41;
  char v44 = v43 & 1;
  static Font.largeTitle.getter();
  uint64_t v45 = Text.font(_:)();
  uint64_t v47 = v46;
  char v49 = v48;
  swift_release();
  sub_1000A06C0(v40, v42, v44);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v188 = Text.fontWeight(_:)();
  uint64_t v187 = v50;
  int v174 = v51;
  uint64_t v189 = v52;
  uint64_t v53 = v47;
  uint64_t v54 = v157;
  sub_1000A06C0(v45, v53, v49 & 1);
  swift_bridgeObjectRelease();
  unsigned __int8 v55 = v54[16];
  uint64_t v56 = *((void *)v54 + 3);
  *(void *)&long long v209 = *((void *)v54 + 1);
  BYTE8(v209) = v55;
  uint64_t v210 = v56;
  sub_1000AFA94(&qword_10094C318);
  State.projectedValue.getter();
  uint64_t v185 = *((void *)&v211 + 1);
  uint64_t v186 = v211;
  uint64_t v177 = v212;
  int v176 = BYTE8(v212);
  int v168 = v54[1];
  static Calendar.current.getter();
  uint64_t v57 = v169;
  uint64_t v58 = v158;
  uint64_t v59 = v170;
  (*(void (**)(char *, void, uint64_t))(v169 + 104))(v158, enum case for Calendar.Component.year(_:), v170);
  uint64_t v60 = v172;
  Date.init()();
  uint64_t v175 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v200 + 8))(v60, v201);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v38, v173);
  if (qword_10094A590 != -1) {
    swift_once();
  }
  char v172 = (char *)*((void *)&xmmword_100997510 + 1);
  uint64_t v173 = xmmword_100997510;
  uint64_t v171 = qword_100997520;
  uint64_t v170 = unk_100997528;
  LODWORD(v169) = static Edge.Set.all.getter();
  LODWORD(v158) = *v54;
  uint64_t v61 = (int *)v159;
  uint64_t v62 = v162;
  sub_10018BEA4();
  sub_10018C048((uint64_t)&v62[v61[7]]);
  unsigned __int8 v64 = v54[16];
  uint64_t v65 = *((void *)v54 + 3);
  *(void *)&long long v211 = *((void *)v54 + 1);
  uint64_t v63 = v211;
  BYTE8(v211) = v64;
  *(void *)&long long v212 = v65;
  State.wrappedValue.getter();
  uint64_t v156 = sub_10050E084(v209, SBYTE8(v209));
  uint64_t v67 = v66;
  *(void *)&long long v209 = v63;
  BYTE8(v209) = v64;
  uint64_t v210 = v65;
  State.projectedValue.getter();
  long long v155 = v211;
  uint64_t v68 = v212;
  LOBYTE(v65) = BYTE8(v212);
  long long v209 = *((_OWORD *)v54 + 2);
  sub_1000AFA94(&qword_10094C330);
  State.projectedValue.getter();
  long long v154 = v211;
  uint64_t v69 = v212;
  long long v70 = &v62[v61[11]];
  uint64_t v71 = (int *)type metadata accessor for MetricDetailView();
  sub_1000AFA94(&qword_10094C1F8);
  State.wrappedValue.getter();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v200 + 56))(v70, 0, 1, v201);
  *uint64_t v62 = (_BYTE)v158;
  *(void *)&v62[v61[6]] = 0x3FE6666666666666;
  unint64_t v72 = (uint64_t *)&v62[v61[8]];
  *unint64_t v72 = v156;
  v72[1] = v67;
  uint64_t v73 = &v62[v61[9]];
  *(_OWORD *)uint64_t v73 = v155;
  *((void *)v73 + 2) = v68;
  v73[24] = v65;
  char v74 = &v62[v61[10]];
  *(_OWORD *)char v74 = v154;
  *((void *)v74 + 2) = v69;
  LOBYTE(v61) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v83 = v163;
  sub_100192C8C((uint64_t)v62, v163, (uint64_t (*)(void))type metadata accessor for MetricDetailHeaderView);
  uint64_t v84 = v83 + *(int *)(v160 + 36);
  *(unsigned char *)uint64_t v84 = (_BYTE)v61;
  *(void *)(v84 + 8) = v76;
  *(void *)(v84 + 16) = v78;
  *(void *)(v84 + 24) = v80;
  *(void *)(v84 + 32) = v82;
  *(unsigned char *)(v84 + 40) = 0;
  sub_100192DC8((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for MetricDetailHeaderView);
  LOBYTE(v61) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v93 = v166;
  sub_1000AEF2C(v83, v166, &qword_10094C3E8);
  uint64_t v94 = v93 + *(int *)(v161 + 36);
  *(unsigned char *)uint64_t v94 = (_BYTE)v61;
  *(void *)(v94 + 8) = v86;
  *(void *)(v94 + 16) = v88;
  *(void *)(v94 + 24) = v90;
  *(void *)(v94 + 32) = v92;
  *(unsigned char *)(v94 + 40) = 0;
  sub_10008DB18(v83, &qword_10094C3E8);
  long long v95 = (unsigned __int8 *)&v54[v71[11]];
  uint64_t v96 = sub_1000AFA94(&qword_10094C200);
  uint64_t v97 = (uint64_t)v167;
  State.wrappedValue.getter();
  uint64_t v98 = type metadata accessor for MetricChartData();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v97, 1, v98) == 1) {
    double v99 = 1.0;
  }
  else {
    double v99 = 0.0;
  }
  sub_10008DB18(v97, &qword_10094C1E8);
  uint64_t v100 = v164;
  sub_1000AEF2C(v93, v164, &qword_10094C3F0);
  *(double *)(v100 + *(int *)(v165 + 36)) = v99;
  sub_10008DB18(v93, &qword_10094C3F0);
  sub_1000AEEC8(v100, v206, &qword_10094C3F8);
  char v101 = *v54;
  uint64_t v102 = v178;
  sub_10018C284(v178);
  uint64_t v103 = v182;
  sub_100192C8C((uint64_t)&v54[v71[13]], v182, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  uint64_t v104 = v184;
  *(void *)&long long v200 = v96;
  uint64_t v201 = (uint64_t)v95;
  State.projectedValue.getter();
  long long v105 = v181;
  sub_100297BB4(v101, 1, v102, v103, v104, v181);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v106 = v180;
  sub_100192C8C((uint64_t)v105, v180, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  long long v107 = (_OWORD *)(v106 + *(int *)(v179 + 36));
  long long v108 = v212;
  *long long v107 = v211;
  v107[1] = v108;
  v107[2] = v213;
  sub_100192DC8((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for MetricDetailChartView);
  if (qword_10094A598 != -1) {
    swift_once();
  }
  long long v184 = xmmword_100997530;
  long long v109 = xmmword_100997540;
  char v110 = static Edge.Set.all.getter();
  uint64_t v111 = v208;
  sub_1000AEF2C(v106, v208, &qword_10094C3D8);
  uint64_t v112 = v111 + *(int *)(v183 + 36);
  *(unsigned char *)uint64_t v112 = v110;
  *(_OWORD *)(v112 + 8) = v184;
  *(_OWORD *)(v112 + 24) = v109;
  *(unsigned char *)(v112 + 40) = 0;
  sub_10008DB18(v106, &qword_10094C3D8);
  sub_1000AEEC8(v111, v207, &qword_10094C3E0);
  uint64_t v113 = v203;
  uint64_t v114 = v192;
  if (v54[v71[20]] == 1)
  {
    sub_10018E73C(v192);
    uint64_t v120 = v194;
    if (qword_10094A5A8 != -1) {
      swift_once();
    }
    long long v184 = xmmword_100997558;
    long long v115 = xmmword_100997568;
    char v116 = static Edge.Set.all.getter();
    uint64_t v117 = v153;
    sub_1000AEF2C(v114, v153, &qword_10094C3B8);
    uint64_t v118 = v117 + *(int *)(v120 + 36);
    *(unsigned char *)uint64_t v118 = v116;
    *(_OWORD *)(v118 + 8) = v184;
    *(_OWORD *)(v118 + 24) = v115;
    *(unsigned char *)(v118 + 40) = 0;
    sub_10008DB18(v114, &qword_10094C3B8);
    sub_1000AEEC8(v117, v113, &qword_10094C3C0);
    uint64_t v119 = 0;
  }
  else
  {
    uint64_t v119 = 1;
    uint64_t v120 = v194;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v193 + 56))(v113, v119, 1, v120);
  uint64_t v121 = v197;
  sub_10018C284(v197);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v190 + 56))(v121, 0, 1, v191);
  uint64_t v122 = *(void **)&v54[v71[15]];
  uint64_t v123 = *(void *)&v54[v71[16]];
  uint64_t v124 = *(void **)&v54[v71[17]];
  uint64_t v125 = *(void **)&v54[v71[18]];
  uint64_t v126 = (int *)v195;
  uint64_t v127 = *(void **)&v54[v71[19]];
  id v128 = v122;
  swift_retain();
  id v129 = v124;
  id v130 = v125;
  id v131 = v127;
  State.projectedValue.getter();
  *(void *)(v121 + v126[5]) = v128;
  *(void *)(v121 + v126[6]) = v123;
  *(void *)(v121 + v126[7]) = v129;
  *(void *)(v121 + v126[8]) = v130;
  *(void *)(v121 + v126[9]) = v131;
  if (qword_10094A5B0 != -1) {
    swift_once();
  }
  int v132 = v174 & 1;
  BOOL v133 = (v168 - 3) < 0xFFFFFFFE;
  long long v200 = xmmword_100997578;
  long long v134 = xmmword_100997588;
  char v135 = static Edge.Set.all.getter();
  uint64_t v136 = v199;
  sub_100192C8C(v121, v199, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  uint64_t v137 = v136 + *(int *)(v196 + 36);
  *(unsigned char *)uint64_t v137 = v135;
  *(_OWORD *)(v137 + 8) = v200;
  *(_OWORD *)(v137 + 24) = v134;
  *(unsigned char *)(v137 + 40) = 0;
  sub_100192DC8(v121, (uint64_t (*)(void))type metadata accessor for MetricDetailWorkoutListView);
  uint64_t v138 = v205;
  sub_1000AEEC8(v136, v205, &qword_10094C3B0);
  char v139 = v132;
  LODWORD(v201) = v132;
  LOBYTE(v209) = v132;
  uint64_t v140 = v202;
  sub_1000AEF2C(v206, v202, &qword_10094C3F8);
  sub_1000AEF2C(v207, v208, &qword_10094C3E0);
  uint64_t v141 = v204;
  sub_1000AEF2C(v113, v204, &qword_10094C3C8);
  sub_1000AEF2C(v138, v136, &qword_10094C3B0);
  uint64_t v142 = v198;
  uint64_t v143 = v188;
  uint64_t v144 = v187;
  *long long v198 = v188;
  v142[1] = v144;
  *((unsigned char *)v142 + 16) = v139;
  uint64_t v145 = v186;
  v142[3] = v189;
  v142[4] = v145;
  uint64_t v146 = v177;
  v142[5] = v185;
  v142[6] = v146;
  *((unsigned char *)v142 + 56) = v176;
  v142[8] = v133;
  *((unsigned char *)v142 + 72) = 1;
  v142[10] = v175;
  *((unsigned char *)v142 + 88) = v169;
  uint64_t v147 = v172;
  v142[12] = v173;
  v142[13] = (uint64_t)v147;
  uint64_t v148 = v170;
  v142[14] = v171;
  v142[15] = v148;
  *((unsigned char *)v142 + 128) = 0;
  uint64_t v149 = (int *)sub_1000AFA94(&qword_10094C400);
  sub_1000AEF2C(v140, (uint64_t)v142 + v149[16], &qword_10094C3F8);
  sub_1000AEF2C(v208, (uint64_t)v142 + v149[20], &qword_10094C3E0);
  sub_1000AEF2C(v141, (uint64_t)v142 + v149[24], &qword_10094C3C8);
  sub_1000AEF2C(v136, (uint64_t)v142 + v149[28], &qword_10094C3B0);
  uint64_t v150 = (char *)v142 + v149[32];
  *(void *)uint64_t v150 = 0;
  v150[8] = 1;
  LOBYTE(v141) = v201;
  sub_1000A1750(v143, v144, v201);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000A1750(v143, v144, v141);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008DB18(v205, &qword_10094C3B0);
  sub_10008DB18(v203, &qword_10094C3C8);
  sub_10008DB18(v207, &qword_10094C3E0);
  sub_10008DB18(v206, &qword_10094C3F8);
  swift_release();
  swift_release();
  sub_1000A06C0(v143, v144, v141);
  swift_bridgeObjectRelease();
  sub_10008DB18(v136, &qword_10094C3B0);
  sub_10008DB18(v204, &qword_10094C3C8);
  sub_10008DB18(v208, &qword_10094C3E0);
  sub_10008DB18(v202, &qword_10094C3F8);
  swift_release();
  swift_release();
  sub_1000A06C0(v143, v144, v209);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018E73C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v2 = type metadata accessor for ControlSize();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v45 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetricDetailView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = sub_1000AFA94(&qword_10094C408);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000AFA94(&qword_10094C410);
  uint64_t v15 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10094C418);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100192C8C(v1, (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = swift_allocObject();
  sub_100192E28((uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v50 = v1;
  sub_1000AFA94(&qword_10094C420);
  sub_1000E20A4();
  Button.init(action:label:)();
  BorderedProminentButtonStyle.init()();
  sub_1000A132C(&qword_10094C430, &qword_10094C408);
  sub_100192D60();
  uint64_t v24 = v41;
  uint64_t v25 = v44;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v24);
  uint64_t v27 = v46;
  uint64_t v26 = v47;
  uint64_t v28 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for ControlSize.large(_:), v48);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  uint64_t v31 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v30 + *(int *)(v31 + 28), v27, v28);
  *uint64_t v30 = KeyPath;
  uint64_t v32 = v43;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v17, v43);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v32);
  id v33 = sub_10005DB50();
  uint64_t v34 = Color.init(uiColor:)();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v51 = v34;
  swift_retain();
  uint64_t v36 = AnyShapeStyle.init<A>(_:)();
  uint64_t v37 = v49;
  sub_1000AEF2C((uint64_t)v21, v49, &qword_10094C418);
  swift_release();
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(sub_1000AFA94(&qword_10094C3B8) + 36));
  *uint64_t v38 = v35;
  v38[1] = v36;
  return sub_10008DB18((uint64_t)v21, &qword_10094C418);
}

uint64_t sub_10018ECDC()
{
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  if (v2)
  {
    State.wrappedValue.getter();
    return v1;
  }
  else
  {
    sub_1000AFA94(&qword_10094C330);
    State.wrappedValue.getter();
    return sub_10050F2FC(v1);
  }
}

uint64_t sub_10018EDA4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094C1E8);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v10 - v4;
  sub_10018ECDC();
  uint64_t v6 = type metadata accessor for MetricChartData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MetricDetailView();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v3, &qword_10094C1E8);
  sub_1000AFA94(&qword_10094C200);
  State.wrappedValue.setter();
  sub_10008DB18((uint64_t)v5, &qword_10094C1E8);
  uint64_t v7 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10018ECDC();
  return sub_10018F588(v7, v8 & 1);
}

uint64_t sub_10018EEE0(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for MetricDetailView();
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = *(void *)(v3 + 64);
  v1[6] = swift_task_alloc();
  sub_1000AFA94(&qword_10094B7A0);
  v1[7] = swift_task_alloc();
  sub_1000AFA94(&qword_10094C1E8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for MainActor();
  v1[11] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10018F050, v5, v4);
}

uint64_t sub_10018F050()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  swift_release();
  sub_10018ECDC();
  uint64_t v7 = type metadata accessor for MetricChartData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_1000AEF2C(v2, v1, &qword_10094C1E8);
  sub_1000AFA94(&qword_10094C200);
  State.wrappedValue.setter();
  sub_10008DB18(v2, &qword_10094C1E8);
  char v8 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_10018ECDC();
  sub_10018F588(v8, v9 & 1);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_100192C8C(v6, v3, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  uint64_t v11 = static MainActor.shared.getter();
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  sub_100192E28(v3, v13 + v12, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
  sub_1000713D0(v4, (uint64_t)&unk_10094C378, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10018F284(unsigned char *a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for MetricDetailView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000AFA94(&qword_10094B7A0);
  uint64_t result = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v12 = *a1;
  unsigned int v13 = *a2;
  if (v13 - 4 < 0x22)
  {
    if (v12 != 1) {
      return result;
    }
    goto LABEL_3;
  }
  if (v13 >= 4)
  {
    if (v12 != 2) {
      return result;
    }
    goto LABEL_3;
  }
  if (!*a1)
  {
LABEL_3:
    uint64_t v14 = type metadata accessor for TaskPriority();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v29 = v15 + 56;
    v28(v11, 1, 1, v14);
    uint64_t v27 = type metadata accessor for MetricDetailView;
    sub_100192C8C((uint64_t)a2, (uint64_t)&v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    uint64_t v26 = type metadata accessor for MainActor();
    uint64_t v16 = static MainActor.shared.getter();
    unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    sub_100192E28((uint64_t)v7, v18 + v17, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    sub_1000713D0((uint64_t)v11, (uint64_t)&unk_10094C358, v18);
    swift_release();
    uint64_t v19 = sub_10018ECDC();
    int v25 = v20;
    v28(v11, 1, 1, v14);
    sub_100192C8C((uint64_t)a2, (uint64_t)v7, (uint64_t (*)(void))v27);
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = &protocol witness table for MainActor;
    sub_100192E28((uint64_t)v7, v22 + v17, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    unint64_t v23 = v22 + ((v17 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v23 = v19;
    *(unsigned char *)(v23 + 8) = v25 & 1;
    sub_1000713D0((uint64_t)v11, (uint64_t)&unk_10094C368, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_10018F588(unsigned int (*a1)(char *, uint64_t, uint64_t), char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for MetricDetailView();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v21 + 64);
  __chkstk_darwin(v5);
  uint64_t v7 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricDetailViewModel();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  unsigned int v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C1ACC(*v2, a1, v4, (uint64_t)v13);
  static Animation.easeInOut.getter();
  uint64_t v22 = v2;
  unint64_t v23 = a1;
  char v24 = v4;
  int v25 = v13;
  withAnimation<A>(_:_:)();
  swift_release();
  if ((v13[*(int *)(v11 + 48)] & 1) == 0)
  {
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    sub_100192C8C((uint64_t)v2, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    type metadata accessor for MainActor();
    uint64_t v15 = static MainActor.shared.getter();
    unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = &protocol witness table for MainActor;
    sub_100192E28((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for MetricDetailView);
    unint64_t v18 = v17 + ((v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v18 = a1;
    *(unsigned char *)(v18 + 8) = v4 != 0;
    sub_1000713D0((uint64_t)v9, (uint64_t)&unk_10094C380, v17);
    swift_release();
  }
  return sub_100192DC8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
}

uint64_t sub_10018F874(uint64_t a1, Swift::UInt a2, char a3, uint64_t a4)
{
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100192C8C(a4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  uint64_t v11 = type metadata accessor for MetricDetailViewModel();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MetricDetailView() + 40));
  uint64_t v14 = v12[1];
  uint64_t v17 = *v12;
  uint64_t v13 = v17;
  uint64_t v18 = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C370);
  State.wrappedValue.getter();
  sub_1005CDD44((uint64_t)v10, a2, v7);
  uint64_t v17 = v13;
  uint64_t v18 = v14;
  uint64_t v16 = v19;
  State.wrappedValue.setter();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018F9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 72) = a6;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a5;
  sub_1000AFA94((uint64_t *)&unk_100955590);
  *(void *)(v6 + 32) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 40) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = v7;
  return _swift_task_switch(sub_10018FAC0, v8, v7);
}

uint64_t sub_10018FAC0()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(char **)(v0 + 16);
  type metadata accessor for MetricDetailView();
  char v3 = *v2;
  int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *int v4 = v0;
  v4[1] = sub_10018FB80;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return sub_100022C14(v5, v3, v6, v1 & 1);
}

uint64_t sub_10018FB80()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10018FCA0, v3, v2);
}

uint64_t sub_10018FCA0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  swift_release();
  static Animation.easeInOut.getter();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = v2 & 1;
  *(void *)(v5 + 40) = v1;
  withAnimation<A>(_:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10008DB18(v1, (uint64_t *)&unk_100955590);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10018FD9C(uint64_t a1, Swift::UInt a2, char a3, uint64_t a4)
{
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AEF2C(a4, (uint64_t)v10, (uint64_t *)&unk_100955590);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MetricDetailView() + 40));
  uint64_t v13 = v11[1];
  uint64_t v16 = *v11;
  uint64_t v12 = v16;
  uint64_t v17 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C370);
  State.wrappedValue.getter();
  sub_1005CDD44((uint64_t)v10, a2, v7);
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t v15 = v18;
  State.wrappedValue.setter();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018FED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Date();
  _OWORD v4[3] = v5;
  void v4[4] = *(void *)(v5 - 8);
  void v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v7;
  v4[9] = v6;
  return _swift_task_switch(sub_10018FFD4, v7, v6);
}

uint64_t sub_10018FFD4()
{
  uint64_t v1 = (char *)v0[2];
  v0[10] = type metadata accessor for MetricDetailView();
  char v2 = *v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100190088;
  uint64_t v4 = v0[6];
  return sub_100719A9C(v4, v2);
}

uint64_t sub_100190088()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1001901A8, v3, v2);
}

uint64_t sub_1001901A8()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_1000AFA94(&qword_10094C1F8);
  State.wrappedValue.setter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_10019028C(uint64_t a1)
{
  type metadata accessor for MetricDetailView();
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 1);
  sub_1000AFA94(&qword_10094C318);
  State.wrappedValue.getter();
  sub_1003F68A8(a1, v2, v3);
}

void sub_100190314(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1007509E0;
  uint64_t v14 = sub_10007CE70(*(unsigned char *)(a1 + 1));
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA64C();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  uint64_t v17 = String.init(format:_:)();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)&v50[0] = v17;
  *((void *)&v50[0] + 1) = v19;
  sub_1000A06D0();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  LOBYTE(v16) = v23 & 1;
  uint64_t v24 = v49;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.body(_:), v49);
  uint64_t v25 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  char v30 = v29;
  swift_release();
  sub_1000A06C0(v20, v22, v16);
  swift_bridgeObjectRelease();
  id v31 = [self keyColors];
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = [v31 nonGradientTextColor];

    if (v33)
    {
      *(void *)&v50[0] = Color.init(uiColor:)();
      uint64_t v34 = Text.foregroundStyle<A>(_:)();
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      char v40 = v39 & 1;
      sub_1000A06C0(v26, v28, v30 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v41 = static Alignment.center.getter();
      sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v50, 0.0, 1, 0.0, 1, v41, v42, v34, v36, v40, v38);
      sub_1000A06C0(v34, v36, v40);
      swift_bridgeObjectRelease();
      long long v43 = v50[7];
      long long v44 = v50[8];
      a2[6] = v50[6];
      a2[7] = v43;
      a2[8] = v44;
      long long v45 = v50[3];
      a2[2] = v50[2];
      a2[3] = v45;
      long long v46 = v50[5];
      a2[4] = v50[4];
      a2[5] = v46;
      long long v47 = v50[1];
      *a2 = v50[0];
      a2[1] = v47;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_1001907BC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a3[9];
    id v10 = (char *)(a1 + v9);
    NSString v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    uint64_t v67 = v13;
    uint64_t v69 = v12;
    v13(v10, v11, v12);
    uint64_t v14 = sub_1000AFA94(&qword_10094C1F8);
    *(void *)&v10[*(int *)(v14 + 28)] = *(void *)&v11[*(int *)(v14 + 28)];
    uint64_t v15 = a3[10];
    uint64_t v16 = a3[11];
    uint64_t v17 = (void *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    __dst = (void **)((char *)v4 + v16);
    uint64_t v20 = (void **)((char *)a2 + v16);
    uint64_t v21 = type metadata accessor for MetricChartData();
    uint64_t v66 = *(void *)(v21 - 8);
    uint64_t v22 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v66 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v22(v20, 1, v21))
    {
      uint64_t v23 = sub_1000AFA94(&qword_10094C1E8);
      uint64_t v24 = __dst;
      memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v26 = *v20;
      uint64_t v24 = __dst;
      char *__dst = *v20;
      uint64_t v27 = *(int *)(v21 + 20);
      uint64_t v28 = (char *)__dst + v27;
      char v29 = (char *)v20 + v27;
      id v30 = v26;
      v67(v28, v29, v69);
      uint64_t v31 = *(int *)(v21 + 24);
      uint64_t v32 = *(void **)((char *)v20 + v31);
      *(void **)((char *)__dst + v31) = v32;
      id v33 = *(void (**)(void **, void, uint64_t, uint64_t))(v66 + 56);
      id v34 = v32;
      v33(__dst, 0, 1, v21);
    }
    uint64_t v35 = sub_1000AFA94(&qword_10094C200);
    *(void **)((char *)v24 + *(int *)(v35 + 28)) = *(void **)((char *)v20 + *(int *)(v35 + 28));
    uint64_t v36 = a3[12];
    uint64_t v37 = a3[13];
    uint64_t v38 = *(void **)((char *)a2 + v36);
    *(void *)((char *)v4 + v36) = v38;
    char v39 = (char *)v4 + v37;
    uint64_t v40 = (uint64_t)a2 + v37;
    uint64_t v41 = *(void **)((char *)a2 + v37);
    *(void *)((char *)v4 + v37) = v41;
    uint64_t v42 = type metadata accessor for MetricFormattingHelper();
    uint64_t v43 = *(int *)(v42 + 20);
    uint64_t v70 = v40 + v43;
    __dsta = &v39[v43];
    uint64_t v44 = type metadata accessor for AttributedString();
    uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_retain();
    id v45 = v38;
    id v46 = v41;
    v68(__dsta, v70, v44);
    uint64_t v47 = *(int *)(v42 + 24);
    uint64_t v48 = *(void **)(v40 + v47);
    *(void *)&v39[v47] = v48;
    uint64_t v49 = a3[14];
    uint64_t v50 = a3[15];
    uint64_t v51 = *(void **)((char *)a2 + v49);
    *(void *)((char *)v4 + v49) = v51;
    uint64_t v52 = *(void **)((char *)a2 + v50);
    *(void *)((char *)v4 + v50) = v52;
    uint64_t v53 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    uint64_t v54 = *(void **)((char *)a2 + v53);
    *(void *)((char *)v4 + v53) = v54;
    uint64_t v55 = a3[18];
    uint64_t v56 = a3[19];
    uint64_t v57 = *(void **)((char *)a2 + v55);
    *(void *)((char *)v4 + v55) = v57;
    uint64_t v58 = *(void **)((char *)a2 + v56);
    *(void *)((char *)v4 + v56) = v58;
    *((unsigned char *)v4 + a3[20]) = *((unsigned char *)a2 + a3[20]);
    id v59 = v48;
    id v60 = v51;
    id v61 = v52;
    swift_retain();
    id v62 = v54;
    id v63 = v57;
    id v64 = v58;
  }
  return v4;
}

void sub_100190B4C(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1000AFA94(&qword_10094C1F8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = (id *)(a1 + a2[11]);
  uint64_t v8 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {

    v6((uint64_t)v7 + *(int *)(v8 + 20), v5);
  }
  sub_1000AFA94(&qword_10094C200);
  swift_release();

  uint64_t v9 = (id *)(a1 + a2[13]);
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  NSString v11 = (char *)v9 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_release();
  uint64_t v13 = *(void **)(a1 + a2[19]);
}

uint64_t sub_100190D64(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  swift_retain();
  uint64_t v65 = v12;
  uint64_t v67 = v11;
  v12(v9, v10, v11);
  uint64_t v13 = sub_1000AFA94(&qword_10094C1F8);
  *(void *)&v9[*(int *)(v13 + 28)] = *(void *)&v10[*(int *)(v13 + 28)];
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  __dst = (void **)(a1 + v15);
  uint64_t v19 = (void **)(a2 + v15);
  uint64_t v20 = type metadata accessor for MetricChartData();
  uint64_t v64 = *(void *)(v20 - 8);
  uint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v21(v19, 1, v20))
  {
    uint64_t v22 = sub_1000AFA94(&qword_10094C1E8);
    uint64_t v23 = __dst;
    memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v24 = *v19;
    uint64_t v23 = __dst;
    char *__dst = *v19;
    uint64_t v25 = *(int *)(v20 + 20);
    uint64_t v26 = (char *)__dst + v25;
    uint64_t v27 = (char *)v19 + v25;
    id v28 = v24;
    v65(v26, v27, v67);
    uint64_t v29 = *(int *)(v20 + 24);
    id v30 = *(void **)((char *)v19 + v29);
    *(void **)((char *)__dst + v29) = v30;
    uint64_t v31 = *(void (**)(void **, void, uint64_t, uint64_t))(v64 + 56);
    id v32 = v30;
    v31(__dst, 0, 1, v20);
  }
  uint64_t v33 = sub_1000AFA94(&qword_10094C200);
  *(void **)((char *)v23 + *(int *)(v33 + 28)) = *(void **)((char *)v19 + *(int *)(v33 + 28));
  uint64_t v34 = a3[12];
  uint64_t v35 = a3[13];
  uint64_t v36 = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = v36;
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  char v39 = *(void **)(a2 + v35);
  *(void *)(a1 + v35) = v39;
  uint64_t v40 = type metadata accessor for MetricFormattingHelper();
  uint64_t v41 = *(int *)(v40 + 20);
  uint64_t v68 = v38 + v41;
  __dsta = (void *)(v37 + v41);
  uint64_t v42 = type metadata accessor for AttributedString();
  uint64_t v66 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
  swift_retain();
  id v43 = v36;
  id v44 = v39;
  v66(__dsta, v68, v42);
  uint64_t v45 = *(int *)(v40 + 24);
  id v46 = *(void **)(v38 + v45);
  *(void *)(v37 + v45) = v46;
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = *(void **)(a2 + v47);
  *(void *)(a1 + v47) = v49;
  uint64_t v50 = *(void **)(a2 + v48);
  *(void *)(a1 + v48) = v50;
  uint64_t v51 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v52 = *(void **)(a2 + v51);
  *(void *)(a1 + v51) = v52;
  uint64_t v53 = a3[18];
  uint64_t v54 = a3[19];
  uint64_t v55 = *(void **)(a2 + v53);
  *(void *)(a1 + v53) = v55;
  uint64_t v56 = *(void **)(a2 + v54);
  *(void *)(a1 + v54) = v56;
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  id v57 = v46;
  id v58 = v49;
  id v59 = v50;
  swift_retain();
  id v60 = v52;
  id v61 = v55;
  id v62 = v56;
  return a1;
}

uint64_t sub_1001910A4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v84 = type metadata accessor for Date();
  uint64_t v82 = *(void *)(v84 - 8);
  uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v82 + 24);
  v83(v8, v9);
  uint64_t v10 = sub_1000AFA94(&qword_10094C1F8);
  *(void *)(v8 + *(int *)(v10 + 28)) = *(void *)(v9 + *(int *)(v10 + 28));
  swift_retain();
  swift_release();
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  uint64_t v85 = a3;
  uint64_t v14 = a3[11];
  uint64_t v15 = (void **)(a1 + v14);
  uint64_t v16 = (void **)(a2 + v14);
  uint64_t v17 = type metadata accessor for MetricChartData();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v22 = v16;
      uint64_t v75 = *v16;
      uint64_t v76 = *v15;
      *uint64_t v15 = *v16;
      id v77 = v75;

      ((void (*)(char *, char *, uint64_t))v83)((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v84);
      uint64_t v78 = *(int *)(v17 + 24);
      uint64_t v79 = *(void **)((char *)v16 + v78);
      uint64_t v80 = *(void **)((char *)v15 + v78);
      *(void **)((char *)v15 + v78) = v79;
      id v81 = v79;

      goto LABEL_7;
    }
    sub_100192DC8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v33 = sub_1000AFA94(&qword_10094C1E8);
    uint64_t v22 = v16;
    memcpy(v15, v16, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v22 = v16;
  uint64_t v23 = *v16;
  *uint64_t v15 = *v16;
  uint64_t v24 = *(int *)(v17 + 20);
  uint64_t v25 = (char *)v15 + v24;
  uint64_t v26 = (char *)v16 + v24;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  id v28 = v23;
  v27(v25, v26, v84);
  uint64_t v29 = *(int *)(v17 + 24);
  id v30 = *(void **)((char *)v16 + v29);
  *(void **)((char *)v15 + v29) = v30;
  uint64_t v31 = *(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56);
  id v32 = v30;
  v31(v15, 0, 1, v17);
LABEL_7:
  uint64_t v34 = sub_1000AFA94(&qword_10094C200);
  *(void **)((char *)v15 + *(int *)(v34 + 28)) = *(void **)((char *)v22 + *(int *)(v34 + 28));
  swift_retain();
  swift_release();
  uint64_t v35 = v85[12];
  uint64_t v36 = *(void **)(a2 + v35);
  uint64_t v37 = *(void **)(a1 + v35);
  *(void *)(a1 + v35) = v36;
  id v38 = v36;

  uint64_t v39 = v85[13];
  uint64_t v40 = (void **)(a1 + v39);
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void **)(a2 + v39);
  id v43 = *v40;
  *uint64_t v40 = v42;
  id v44 = v42;

  uint64_t v45 = type metadata accessor for MetricFormattingHelper();
  uint64_t v46 = *(int *)(v45 + 20);
  uint64_t v47 = (char *)v40 + v46;
  uint64_t v48 = v41 + v46;
  uint64_t v49 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 24))(v47, v48, v49);
  uint64_t v50 = *(int *)(v45 + 24);
  uint64_t v51 = *(void **)(v41 + v50);
  uint64_t v52 = *(void **)((char *)v40 + v50);
  *(void **)((char *)v40 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v85[14];
  uint64_t v55 = *(void **)(a2 + v54);
  uint64_t v56 = *(void **)(a1 + v54);
  *(void *)(a1 + v54) = v55;
  id v57 = v55;

  uint64_t v58 = v85[15];
  id v59 = *(void **)(a2 + v58);
  id v60 = *(void **)(a1 + v58);
  *(void *)(a1 + v58) = v59;
  id v61 = v59;

  *(void *)(a1 + v85[16]) = *(void *)(a2 + v85[16]);
  swift_retain();
  swift_release();
  uint64_t v62 = v85[17];
  id v63 = *(void **)(a2 + v62);
  uint64_t v64 = *(void **)(a1 + v62);
  *(void *)(a1 + v62) = v63;
  id v65 = v63;

  uint64_t v66 = v85[18];
  uint64_t v67 = *(void **)(a2 + v66);
  uint64_t v68 = *(void **)(a1 + v66);
  *(void *)(a1 + v66) = v67;
  id v69 = v67;

  uint64_t v70 = v85[19];
  uint64_t v71 = *(void **)(a2 + v70);
  unint64_t v72 = *(void **)(a1 + v70);
  *(void *)(a1 + v70) = v71;
  id v73 = v71;

  *(unsigned char *)(a1 + v85[20]) = *(unsigned char *)(a2 + v85[20]);
  return a1;
}

uint64_t sub_100191534(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = sub_1000AFA94(&qword_10094C1F8);
  *(void *)&v7[*(int *)(v11 + 28)] = *(void *)&v8[*(int *)(v11 + 28)];
  uint64_t v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for MetricChartData();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    v10((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
    *(void *)((char *)v13 + *(int *)(v15 + 24)) = *(void *)((char *)v14 + *(int *)(v15 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = sub_1000AFA94(&qword_10094C200);
  *(void *)((char *)v13 + *(int *)(v18 + 28)) = *(void *)((char *)v14 + *(int *)(v18 + 28));
  uint64_t v19 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for MetricFormattingHelper();
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = v21 + v23;
  uint64_t v26 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  *(void *)(v20 + *(int *)(v22 + 24)) = *(void *)(v21 + *(int *)(v22 + 24));
  uint64_t v27 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v28 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_1001917D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v54 = type metadata accessor for Date();
  uint64_t v52 = *(void *)(v54 - 8);
  id v53 = *(void (**)(char *, char *, uint64_t))(v52 + 40);
  ((void (*)(uint64_t, uint64_t))v53)(v8, v9);
  uint64_t v10 = sub_1000AFA94(&qword_10094C1F8);
  *(void *)(v8 + *(int *)(v10 + 28)) = *(void *)(v9 + *(int *)(v10 + 28));
  swift_release();
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_release();
  uint64_t v14 = a3[11];
  uint64_t v15 = (void **)(a1 + v14);
  uint64_t v16 = (void **)(a2 + v14);
  uint64_t v17 = type metadata accessor for MetricChartData();
  uint64_t v51 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v51 + 48);
  int v19 = v18(v15, 1, v17);
  int v20 = v18(v16, 1, v17);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v21 = v16;
      uint64_t v48 = *v15;
      *uint64_t v15 = *v16;

      v53((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v54);
      uint64_t v49 = *(int *)(v17 + 24);
      uint64_t v50 = *(void **)((char *)v15 + v49);
      *(void **)((char *)v15 + v49) = *(void **)((char *)v16 + v49);

      goto LABEL_7;
    }
    sub_100192DC8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v22 = sub_1000AFA94(&qword_10094C1E8);
    uint64_t v21 = v16;
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v21 = v16;
  *uint64_t v15 = *v16;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v54);
  *(void **)((char *)v15 + *(int *)(v17 + 24)) = *(void **)((char *)v16 + *(int *)(v17 + 24));
  (*(void (**)(void **, void, uint64_t, uint64_t))(v51 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v23 = sub_1000AFA94(&qword_10094C200);
  *(void **)((char *)v15 + *(int *)(v23 + 28)) = *(void **)((char *)v21 + *(int *)(v23 + 28));
  swift_release();
  uint64_t v24 = a3[12];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  uint64_t v30 = type metadata accessor for MetricFormattingHelper();
  uint64_t v31 = *(int *)(v30 + 20);
  uint64_t v32 = v27 + v31;
  uint64_t v33 = v28 + v31;
  uint64_t v34 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = *(int *)(v30 + 24);
  uint64_t v36 = *(void **)(v27 + v35);
  *(void *)(v27 + v35) = *(void *)(v28 + v35);

  uint64_t v37 = a3[14];
  id v38 = *(void **)(a1 + v37);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);

  uint64_t v39 = a3[15];
  uint64_t v40 = *(void **)(a1 + v39);
  *(void *)(a1 + v39) = *(void *)(a2 + v39);

  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  uint64_t v41 = a3[17];
  uint64_t v42 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = *(void *)(a2 + v41);

  uint64_t v43 = a3[18];
  id v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = a3[19];
  uint64_t v46 = *(void **)(a1 + v45);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);

  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_100191BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191BF4);
}

uint64_t sub_100191BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C1F8);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + a3[10]);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000AFA94(&qword_10094C200);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = *(void *)(v12 - 8);
      uint64_t v9 = a3[11];
      goto LABEL_9;
    }
    uint64_t v14 = type metadata accessor for MetricFormattingHelper();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[13];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_100191D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191D8C);
}

uint64_t sub_100191D8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C1F8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[10]) = (a2 - 1);
    return result;
  }
  uint64_t v12 = sub_1000AFA94(&qword_10094C200);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for MetricFormattingHelper();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a4[13];

  return v15(v17, a2, a2, v16);
}

void sub_100191F10()
{
  sub_100192080();
  if (v0 <= 0x3F)
  {
    sub_1001920D8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for MetricFormattingHelper();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100192080()
{
  if (!qword_10094C270)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094C270);
    }
  }
}

void sub_1001920D8()
{
  if (!qword_10094C278)
  {
    sub_1000A1370(&qword_10094C1E8);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094C278);
    }
  }
}

uint64_t sub_100192134()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100192150@<X0>(uint64_t *a1@<X8>)
{
  return sub_10018CE34(*(char **)(v1 + 16), a1);
}

unint64_t sub_100192160()
{
  unint64_t result = qword_10094C328;
  if (!qword_10094C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C328);
  }
  return result;
}

uint64_t sub_1001921B8()
{
  return sub_10018EDA4();
}

uint64_t sub_100192210()
{
  uint64_t v2 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000DBD6C;
  return sub_10018EEE0(v3);
}

uint64_t sub_1001922E0(unsigned char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  uint64_t v4 = (unsigned __int8 *)(v1
                         + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_10018F284(a1, v4);
}

uint64_t sub_100192354(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_10018FED0(a1, v5, v6, v7);
}

uint64_t sub_100192444(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000DBD6C;
  return sub_10018F9F4(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100192574()
{
  return sub_100192878((uint64_t (*)(void, void, void, void))sub_10018FD9C);
}

uint64_t sub_1001925A4()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  uint64_t v4 = v3 + v1[9];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1000AFA94(&qword_10094C1F8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = (id *)(v3 + v1[11]);
  uint64_t v8 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {

    v6((uint64_t)v7 + *(int *)(v8 + 20), v5);
  }
  sub_1000AFA94(&qword_10094C200);
  swift_release();

  uint64_t v9 = (id *)(v3 + v1[13]);
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  char v11 = (char *)v9 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10019284C()
{
  return sub_100192878((uint64_t (*)(void, void, void, void))sub_10018F874);
}

uint64_t sub_100192878(uint64_t (*a1)(void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001928A8()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  uint64_t v4 = v3 + v1[9];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1000AFA94(&qword_10094C1F8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = (id *)(v3 + v1[11]);
  uint64_t v8 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {

    v6((uint64_t)v7 + *(int *)(v8 + 20), v5);
  }
  sub_1000AFA94(&qword_10094C200);
  swift_release();

  uint64_t v9 = (id *)(v3 + v1[13]);
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  char v11 = (char *)v9 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100192B5C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10005DB5C;
  return sub_10018F9F4(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100192C8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100192CF8()
{
  uint64_t v1 = *(void *)(type metadata accessor for MetricDetailView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10019028C(v2);
}

void sub_100192D58(_OWORD *a1@<X8>)
{
  sub_100190314(*(void *)(v1 + 16), a1);
}

unint64_t sub_100192D60()
{
  unint64_t result = qword_10094C438;
  if (!qword_10094C438)
  {
    type metadata accessor for BorderedProminentButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C438);
  }
  return result;
}

uint64_t sub_100192DC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100192E28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100192E9C()
{
  return 8;
}

uint64_t sub_100192EA8()
{
  return swift_release();
}

uint64_t sub_100192EB0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100192EC4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100192EDC()
{
  return 8;
}

uint64_t sub_100192EF0()
{
  return sub_1000A132C(&qword_10094C460, &qword_10094C348);
}

unsigned char *storeEnumTagSinglePayload for MetricDetailViewStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100192FF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricDetailViewStyle()
{
  return &type metadata for MetricDetailViewStyle;
}

unint64_t sub_100193034()
{
  unint64_t result = qword_10094C468;
  if (!qword_10094C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C468);
  }
  return result;
}

uint64_t sub_100193094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100197DC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001930BC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1001930C8(uint64_t a1)
{
  unint64_t v2 = sub_10007E530();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100193104(uint64_t a1)
{
  unint64_t v2 = sub_10007E530();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100193140(uint64_t a1, void *a2, unsigned int a3)
{
  Hasher.init(_seed:)();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  sub_1000932C0(v7, a3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!(_BYTE)a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)((a3 >> 8) & 1);
  return Hasher._finalize()();
}

uint64_t sub_100193200()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

Swift::Int sub_100193274()
{
  if (*(unsigned char *)(v0 + 17)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return sub_100193140(*(void *)v0, *(void **)(v0 + 8), v1 | *(unsigned __int8 *)(v0 + 16));
}

void sub_100193294()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  Swift::UInt v3 = *((unsigned __int8 *)v0 + 17);
  sub_1000932C0(*(Swift::String *)v0, *((unsigned char *)v0 + 16));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v2 || v2 == 2)
  {
    Hasher._combine(_:)(v1);
  }
  else if (v2 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)(v3);
}

Swift::Int sub_100193340()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt v4 = *(unsigned __int8 *)(v0 + 17);
  Hasher.init(_seed:)();
  v6._countAndFlagsBits = v2;
  v6._object = v1;
  sub_1000932C0(v6, v3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v3 || v3 == 2)
  {
    Hasher._combine(_:)(v2);
  }
  else if (v3 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

uint64_t sub_100193400(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 17)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  if (*(unsigned char *)(a2 + 17)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100196B10(*(void *)a1, *(void *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

id sub_100193440()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryConfigurationProvider();
  return [super dealloc];
}

uint64_t sub_1001934FC()
{
  return type metadata accessor for SummaryConfigurationProvider();
}

uint64_t sub_100193508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithCopy for CardTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1000917F8(v7, v8, v9);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for CardTemplate(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CardTemplate(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1000917F8(v5, v6, v7);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardTemplate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CardTemplate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 1;
    }
  }
  return result;
}

void sub_1001936C0(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  int v12 = *(unsigned __int8 *)(a1 + 16);
  if (v12 == 2)
  {
    if ((~a2 & 0x30) != 0 || !sub_1003B00E0(*(void *)a1, a3)) {
      goto LABEL_18;
    }
  }
  else if (v12 == 3)
  {
    if (!(v11 | v10)) {
      goto LABEL_18;
    }
    if (v10 == 6 && v11 == 0)
    {
      if ((a2 & 2) == 0) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v10 == 5 && !v11)
      {
        if ((~a2 & 6) == 0) {
          goto LABEL_16;
        }
LABEL_18:
        uint64_t v14 = _swiftEmptyArrayStorage;
        goto LABEL_19;
      }
      if (v10 == 7 && !v11 && (a2 & 0x10) == 0) {
        goto LABEL_18;
      }
    }
  }
LABEL_16:
  if ((sub_1003B0140(v10, v11, v12, (uint64_t)&off_1008AFB30) & 1) != 0 && (a2 & 0x40) == 0) {
    goto LABEL_18;
  }
  uint64_t v15 = &off_1008AFC90;
  switch(v12)
  {
    case 1:
      id v16 = a5;
      uint64_t v14 = sub_1001970B4(a4, (uint64_t)v16);

      break;
    case 3:
      if (v10 != 1 || v11)
      {
        uint64_t v15 = (&off_1008B87C8)[v10];
        goto LABEL_34;
      }
      int v20 = &type metadata for FitnessFeatures;
      unint64_t v21 = sub_1000EAAD8();
      v19[0] = 4;
      char v17 = isFeatureEnabled(_:)();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v19);
      uint64_t v14 = _swiftEmptyArrayStorage;
      if ((v17 & 1) != 0 && (a2 & 8) == 0 && a2 < 0 && (a2 & 1) == 0)
      {
        uint64_t v15 = &off_1008AFC68;
        goto LABEL_34;
      }
      break;
    default:
LABEL_34:
      swift_bridgeObjectRetain();
      id v18 = a5;
      sub_100091494(v10, v11, v12);
      uint64_t v14 = sub_100196D14((uint64_t)v15, (uint64_t)v18, v10, v11, v12);
      sub_1000917F8(v10, v11, v12);
      swift_bridgeObjectRelease();

      break;
  }
LABEL_19:
  *a6 = v14;
}

void sub_1001938FC(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  int v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    sub_100091494(v1, v2, v3);
    sub_100091494(v1, v2, v3);
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10008F1F4(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100091494(v1, v2, v3);
    uint64_t v10 = String.init<A>(describing:)();
    sub_10008F1F4(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v1, v2, v3);
    sub_1000917F8(v1, v2, v3);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%s loaded card type from stored configuration: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_100193B08(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  char v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
    sub_1001C8E54(0, v2, 0);
    uint64_t v5 = a1 + 32;
    char v3 = _swiftEmptyArrayStorage;
    do
    {
      sub_10008E75C(v5, (uint64_t)v21);
      uint64_t v6 = v22;
      uint64_t v7 = v23;
      sub_10007E4EC(v21, v22);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
      uint64_t v10 = v9;
      char v12 = v11;
      uint64_t v13 = v22;
      uint64_t v14 = v23;
      sub_10007E4EC(v21, v22);
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C8E54(0, v3[2] + 1, 1);
        char v3 = v24;
      }
      unint64_t v17 = v3[2];
      unint64_t v16 = v3[3];
      if (v17 >= v16 >> 1)
      {
        sub_1001C8E54(v16 > 1, v17 + 1, 1);
        char v3 = v24;
      }
      v3[2] = v17 + 1;
      id v18 = &v3[3 * v17];
      void v18[4] = v8;
      v18[5] = v10;
      *((unsigned char *)v18 + 48) = v12;
      *((unsigned char *)v18 + 49) = v15 & 1;
      v5 += 40;
      --v2;
    }
    while (v2);
    uint64_t v1 = v20;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v21[0] = v3;
  v1;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100197E98();
  return swift_bridgeObjectRelease();
}

void *sub_100193D28(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001C8E84(0, v1, 0);
    char v3 = (char *)(a1 + 48);
    do
    {
      uint64_t v4 = *((void *)v3 - 2);
      uint64_t v5 = *((void *)v3 - 1);
      char v6 = *v3;
      sub_100091494(v4, v5, *v3);
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1001C8E84(v7 > 1, v8 + 1, 1);
      }
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[3 * v8];
      void v9[4] = v4;
      v9[5] = v5;
      *((unsigned char *)v9 + 48) = v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100193E1C(unsigned int a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v43 = _swiftEmptyArrayStorage;
  if ((a1 & 0x40) == 0) {
    sub_1001E3C58((uint64_t)&off_1008AFB30);
  }
  if ((~(_BYTE)a1 & 6) != 0)
  {
    uint64_t v4 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1001E70B4(0, v43[2] + 1, 1, v43);
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_1001E70B4((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    unint64_t v7 = &v4[3 * v6];
    *((_OWORD *)v7 + 2) = xmmword_100750CD0;
    *((unsigned char *)v7 + 48) = 3;
    uint64_t v43 = v4;
  }
  if ((a1 & 2) == 0)
  {
    unint64_t v8 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v8 = sub_1001E70B4(0, v43[2] + 1, 1, v43);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      unint64_t v8 = sub_1001E70B4((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    char v11 = &v8[3 * v10];
    *((_OWORD *)v11 + 2) = xmmword_100750CE0;
    *((unsigned char *)v11 + 48) = 3;
    uint64_t v43 = v8;
  }
  uint64_t v41 = &type metadata for FitnessFeatures;
  unint64_t v12 = sub_1000EAAD8();
  unint64_t v42 = v12;
  LOBYTE(v39) = 4;
  char v13 = isFeatureEnabled(_:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v39);
  uint64_t v14 = a1 & 1;
  if (a1 & 9) == 0 && (v13)
  {
    char v15 = v43;
    if ((a1 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_26;
  }
  os_log_type_t v16 = static os_log_type_t.default.getter();
  unint64_t v17 = (void *)HKLogActivity;
  os_log_type_t v18 = v16;
  if (os_log_type_enabled(HKLogActivity, v16))
  {
    log = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315906;
    uint64_t v38 = v20;
    uint64_t v21 = _typeName(_:qualified:)();
    *(void *)&long long v39 = sub_10008F1F4(v21, v22, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 1024;
    uint64_t v41 = &type metadata for FitnessFeatures;
    unint64_t v42 = v12;
    LOBYTE(v39) = 4;
    char v23 = isFeatureEnabled(_:)();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v39);
    LODWORD(v39) = v23 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 18) = 1024;
    LODWORD(v39) = (a1 >> 3) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 24) = 1024;
    uint64_t v14 = a1 & 1;
    LODWORD(v39) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, v18, "%s removing load card.\nisFeatureEnabled: %{BOOL}d,\nuserProfile contains standalone: %{BOOL}d,\nuserProfile contains fitnessJr: %{BOOL}d", (uint8_t *)v19, 0x1Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  char v15 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v15 = sub_1001E70B4(0, v15[2] + 1, 1, v15);
  }
  unint64_t v25 = v15[2];
  unint64_t v24 = v15[3];
  if (v25 >= v24 >> 1) {
    char v15 = sub_1001E70B4((void *)(v24 > 1), v25 + 1, 1, v15);
  }
  void v15[2] = v25 + 1;
  uint64_t v26 = &v15[3 * v25];
  *((_OWORD *)v26 + 2) = xmmword_100750CF0;
  *((unsigned char *)v26 + 48) = 3;
  uint64_t v43 = v15;
  if (v14)
  {
LABEL_26:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v15 = sub_1001E70B4(0, v15[2] + 1, 1, v15);
    }
    unint64_t v28 = v15[2];
    unint64_t v27 = v15[3];
    if (v28 >= v27 >> 1) {
      char v15 = sub_1001E70B4((void *)(v27 > 1), v28 + 1, 1, v15);
    }
    void v15[2] = v28 + 1;
    uint64_t v29 = &v15[3 * v28];
    *((_OWORD *)v29 + 2) = xmmword_100750D00;
    *((unsigned char *)v29 + 48) = 3;
    uint64_t v43 = v15;
  }
LABEL_31:
  uint64_t v30 = sub_100193D28(a2);
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_1001974D0(v31, (uint64_t)v30);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v38 = a2;
  uint64_t v33 = v32[2];
  if (v33)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v32 + 6;
    do
    {
      char v35 = *v34;
      long long v39 = *((_OWORD *)v34 - 1);
      char v40 = v35;
      sub_1001946B4((uint64_t)&v39, (uint64_t)&v38);
      v34 += 24;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease_n();
    return v38;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_10019434C(char a1, uint64_t a2)
{
  char v3 = v2;
  swift_getObjectType();
  unint64_t v6 = sub_100193D28(a2);
  if ((a1 & 0x40) == 0)
  {
    unint64_t v7 = _swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_9;
  }
  unint64_t v7 = sub_1000D1C2C(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  unint64_t v10 = v8 >> 1;
  unint64_t v11 = v9 + 1;
  if (v8 >> 1 <= v9)
  {
    unint64_t v7 = sub_1000D1C2C((void *)(v8 > 1), v9 + 1, 1, v7);
    unint64_t v8 = v7[3];
    unint64_t v10 = v8 >> 1;
  }
  v7[2] = v11;
  unint64_t v12 = &v7[3 * v9];
  *((_OWORD *)v12 + 2) = xmmword_100750D10;
  *((_WORD *)v12 + 24) = 0;
  int64_t v13 = v9 + 2;
  if (v10 <= v11) {
    unint64_t v7 = sub_1000D1C2C((void *)(v8 > 1), v13, 1, v7);
  }
  v7[2] = v13;
  uint64_t v14 = &v7[3 * v11];
  *((_OWORD *)v14 + 2) = xmmword_100750D20;
  *((_WORD *)v14 + 24) = 0;
  if ((a1 & 2) != 0)
  {
LABEL_9:
    if ((a1 & 4) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v7 = sub_1000D1C2C(0, v7[2] + 1, 1, v7);
      }
      unint64_t v16 = v7[2];
      unint64_t v15 = v7[3];
      if (v16 >= v15 >> 1) {
        unint64_t v7 = sub_1000D1C2C((void *)(v15 > 1), v16 + 1, 1, v7);
      }
      v7[2] = v16 + 1;
      unint64_t v17 = &v7[3 * v16];
      *((_OWORD *)v17 + 2) = xmmword_100750CD0;
      *((_WORD *)v17 + 24) = 259;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v7 = sub_1000D1C2C(0, v7[2] + 1, 1, v7);
    }
    unint64_t v19 = v7[2];
    unint64_t v18 = v7[3];
    if (v19 >= v18 >> 1) {
      unint64_t v7 = sub_1000D1C2C((void *)(v18 > 1), v19 + 1, 1, v7);
    }
    v7[2] = v19 + 1;
    uint64_t v20 = &v7[3 * v19];
    *((_OWORD *)v20 + 2) = xmmword_100750CE0;
    *((_WORD *)v20 + 24) = 3;
  }
LABEL_20:
  if ((a1 & 0x81) == 0x80)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v7 = sub_1000D1C2C(0, v7[2] + 1, 1, v7);
    }
    unint64_t v22 = v7[2];
    unint64_t v21 = v7[3];
    if (v22 >= v21 >> 1) {
      unint64_t v7 = sub_1000D1C2C((void *)(v21 > 1), v22 + 1, 1, v7);
    }
    v7[2] = v22 + 1;
    char v23 = &v7[3 * v22];
    *((_OWORD *)v23 + 2) = xmmword_100750D00;
    *((_WORD *)v23 + 24) = 259;
  }
  unint64_t v24 = v3;
  uint64_t v25 = sub_100197868((uint64_t)v7, (uint64_t)v6, v24);

  swift_bridgeObjectRelease();
  uint64_t v34 = a2;
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = (char *)(v25 + 49);
    do
    {
      char v28 = *(v27 - 1);
      char v29 = *v27;
      long long v31 = *(_OWORD *)(v27 - 17);
      char v32 = v28;
      char v33 = v29;
      sub_100194DBC((uint64_t)&v31, &v34);
      v27 += 24;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    return v34;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_1001946B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  unint64_t v7 = (void *)HKLogActivity;
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(HKLogActivity, v6))
  {
    sub_100091494(v3, v4, v5);
    sub_100091494(v3, v4, v5);
    log = v7;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = _typeName(_:qualified:)();
    sub_10008F1F4(v10, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100091494(v3, v4, v5);
    uint64_t v12 = String.init<A>(describing:)();
    sub_10008F1F4(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v3, v4, v5);
    sub_1000917F8(v3, v4, v5);
    _os_log_impl((void *)&_mh_execute_header, log, v8, "%s removing card type %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  sub_100091494(v3, v4, v5);
  uint64_t v14 = sub_10019806C(a2, v3, v4, v5);
  uint64_t result = sub_1000917F8(v3, v4, v5);
  int64_t v16 = *(void *)(*(void *)a2 + 16);
  if (v16 >= v14) {
    return sub_1001C694C(v14, v16);
  }
  __break(1u);
  return result;
}

uint64_t sub_100194918(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  if ((sub_1003B0140(*(void *)a1, v6, v7, a2) & 1) == 0)
  {
    os_log_type_t v8 = (uint64_t *)&a3[OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_userRemovedCardTypes];
    swift_beginAccess();
    uint64_t v9 = *v8;
    sub_100091494(v5, v6, v7);
    swift_bridgeObjectRetain();
    char v10 = sub_1003B0AF0(v5, v6, v7, v9);
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);
    if ((v10 & 1) == 0) {
      return 1;
    }
  }
  os_log_type_t v11 = static os_log_type_t.default.getter();
  uint64_t v12 = HKLogActivity;
  sub_100091494(v5, v6, v7);
  sub_100091494(v5, v6, v7);
  sub_100091494(v5, v6, v7);
  sub_100091494(v5, v6, v7);
  if (os_log_type_enabled(v12, v11))
  {
    sub_100091494(v5, v6, v7);
    swift_bridgeObjectRetain();
    unint64_t v13 = a3;
    sub_100091494(v5, v6, v7);
    swift_bridgeObjectRetain();
    char v23 = v13;
    log = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315906;
    uint64_t v15 = _typeName(_:qualified:)();
    sub_10008F1F4(v15, v16, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_100091494(v5, v6, v7);
    uint64_t v17 = String.init<A>(describing:)();
    sub_10008F1F4(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);
    sub_1000917F8(v5, v6, v7);
    *(_WORD *)(v14 + 22) = 1024;
    sub_1003B0140(v5, v6, v7, a2);
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);
    *(_WORD *)(v14 + 28) = 1024;
    unint64_t v19 = (uint64_t *)&v23[OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_userRemovedCardTypes];
    swift_beginAccess();
    uint64_t v20 = *v19;
    sub_100091494(v5, v6, v7);
    swift_bridgeObjectRetain();
    sub_1003B0AF0(v5, v6, v7, v20);
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);

    sub_1000917F8(v5, v6, v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    sub_1000917F8(v5, v6, v7);
    _os_log_impl((void *)&_mh_execute_header, log, v11, "%s filtering out card template %s from templatesToAdd.\nactiveTypes contains template: %{BOOL}d,\nuserRemovedCardTypes contains template: %{BOOL}d", (uint8_t *)v14, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = a3;
    sub_1000917F8(v5, v6, v7);
    sub_1000917F8(v5, v6, v7);
    swift_bridgeObjectRelease();
    sub_1000917F8(v5, v6, v7);

    sub_1000917F8(v5, v6, v7);
  }
  return 0;
}

uint64_t sub_100194DBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 17);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  os_log_type_t v8 = (void *)HKLogActivity;
  os_log_type_t v9 = v7;
  if (os_log_type_enabled(HKLogActivity, v7))
  {
    sub_100091494(v3, v4, v5);
    sub_100091494(v3, v4, v5);
    log = v8;
    char v21 = v6;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = _typeName(_:qualified:)();
    sub_10008F1F4(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_100091494(v3, v4, v5);
    uint64_t v13 = String.init<A>(describing:)();
    sub_10008F1F4(v13, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v3, v4, v5);
    sub_1000917F8(v3, v4, v5);
    _os_log_impl((void *)&_mh_execute_header, log, v9, "%s adding card template %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v6 = v21;
    swift_slowDealloc();
  }
  uint64_t v15 = (void *)*a2;
  sub_100091494(v3, v4, v5);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v15;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000D1C2C(0, v15[2] + 1, 1, v15);
    uint64_t v15 = (void *)result;
    *a2 = result;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    uint64_t result = (uint64_t)sub_1000D1C2C((void *)(v17 > 1), v18 + 1, 1, v15);
    uint64_t v15 = (void *)result;
    *a2 = result;
  }
  void v15[2] = v18 + 1;
  unint64_t v19 = &v15[3 * v18];
  void v19[4] = v3;
  v19[5] = v4;
  *((unsigned char *)v19 + 48) = v5;
  *((unsigned char *)v19 + 49) = v6;
  return result;
}

void sub_10019506C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  char v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    sub_100091494(v1, v2, v3);
    sub_100091494(v1, v2, v3);
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_10008F1F4(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100091494(v1, v2, v3);
    uint64_t v10 = String.init<A>(describing:)();
    sub_10008F1F4(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(v1, v2, v3);
    sub_1000917F8(v1, v2, v3);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%s loaded cardType: %s to userRemovedCardTypes.", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_100195268(uint64_t a1, unint64_t a2, char a3)
{
  swift_getObjectType();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v7 = (void *)HKLogActivity;
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(HKLogActivity, v6))
  {
    sub_100091494(a1, a2, a3);
    sub_100091494(a1, a2, a3);
    log = v7;
    uint64_t v9 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = _typeName(_:qualified:)();
    sub_10008F1F4(v10, v11, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100091494(a1, a2, a3);
    uint64_t v12 = String.init<A>(describing:)();
    sub_10008F1F4(v12, v13, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(a1, a2, a3);
    sub_1000917F8(a1, a2, a3);
    _os_log_impl((void *)&_mh_execute_header, log, v8, "%s Inserting cardType: %s to userRemovedCardTypes.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  sub_100091494(a1, a2, a3);
  sub_1001E8EB4((uint64_t)v25, a1, a2, a3);
  uint64_t v14 = v25[0];
  uint64_t v15 = v25[1];
  char v16 = v26;
  swift_endAccess();
  sub_1000917F8(v14, v15, v16);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C518);
  sub_100198538(&qword_10094C520, &qword_10094C518, (void (*)(void))sub_10007E584);
  uint64_t v17 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = [self standardUserDefaults];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v22 = @"ActivityDashboardUserRemovedCardTypes";
  [v20 setObject:isa forKey:v22];

  swift_release();
  return sub_1000939A4(v17, v19);
}

uint64_t sub_100195614(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  uint64_t v9 = (void *)HKLogActivity;
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(HKLogActivity, v8))
  {
    sub_100091494(a1, a2, a3);
    sub_100091494(a1, a2, a3);
    log = v9;
    uint64_t v11 = swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    uint64_t v31 = sub_10008F1F4(v12, v13, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v31 = a1;
    unint64_t v32 = a2;
    char v33 = a3;
    sub_100091494(a1, a2, a3);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v31 = sub_10008F1F4(v14, v15, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000917F8(a1, a2, a3);
    sub_1000917F8(a1, a2, a3);
    _os_log_impl((void *)&_mh_execute_header, log, v10, "%s Removing cardType: %s from userRemovedCardTypes.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  char v16 = (uint64_t *)(v4 + OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_userRemovedCardTypes);
  swift_beginAccess();
  uint64_t v17 = sub_100195AA8(a1, a2, a3);
  uint64_t v19 = v18;
  char v21 = v20;
  swift_endAccess();
  sub_100198058(v17, v19, v21);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v31 = *v16;
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C518);
  sub_100198538(&qword_10094C520, &qword_10094C518, (void (*)(void))sub_10007E584);
  uint64_t v22 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  id v25 = [self standardUserDefaults];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  unint64_t v27 = @"ActivityDashboardUserRemovedCardTypes";
  [v25 setObject:isa forKey:v27];

  swift_release();
  return sub_1000939A4(v22, v24);
}

uint64_t sub_1001959B0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100195A30(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100195AA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  v42._countAndFlagsBits = a1;
  v42._object = (void *)a2;
  sub_1000932C0(v42, a3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)();
  }
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_63:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  BOOL v13 = a1 != 7;
  BOOL v14 = a1 != 6;
  BOOL v15 = a1 != 5;
  BOOL v16 = a1 != 4;
  BOOL v17 = a1 != 3;
  BOOL v18 = a1 != 2;
  BOOL v19 = a1 == 1;
  if (a2)
  {
    BOOL v13 = 1;
    BOOL v14 = 1;
    BOOL v15 = 1;
    BOOL v16 = 1;
    BOOL v17 = 1;
    BOOL v18 = 1;
    BOOL v19 = 0;
  }
  BOOL v20 = a3 == 3;
  if (a3 != 3) {
    BOOL v19 = 0;
  }
  BOOL v40 = v19;
  if (a3 != 3) {
    BOOL v13 = 1;
  }
  BOOL v39 = v13;
  char v21 = a3 != 3 || v14;
  char v38 = v21;
  char v22 = a3 != 3 || v15;
  char v23 = a3 != 3 || v16;
  char v36 = v23;
  char v37 = v22;
  char v24 = a3 != 3 || v17;
  char v25 = a3 != 3 || v18;
  char v34 = v25;
  char v35 = v24;
  if (a2 | a1) {
    BOOL v20 = 0;
  }
  BOOL v33 = v20;
  while (2)
  {
    char v26 = (uint64_t *)(v12 + 24 * v10);
    uint64_t v27 = *v26;
    switch(*((unsigned char *)v26 + 16))
    {
      case 1:
        if (a3 == 1)
        {
          BOOL v28 = v27 == a1 && v26[1] == a2;
          if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            goto LABEL_60;
          }
        }
        goto LABEL_33;
      case 2:
        if (a3 != 2) {
          goto LABEL_33;
        }
        goto LABEL_32;
      case 3:
        switch(v27)
        {
          case 1:
            if (v40) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 2:
            if ((v34 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 3:
            if ((v35 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 4:
            if ((v36 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 5:
            if ((v37 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 6:
            if ((v38 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_33;
          case 7:
            if (!v39) {
              goto LABEL_60;
            }
            goto LABEL_33;
          default:
            if (v33) {
              goto LABEL_60;
            }
            goto LABEL_33;
        }
      default:
        if (a3) {
          goto LABEL_33;
        }
LABEL_32:
        if (v27 != a1)
        {
LABEL_33:
          unint64_t v10 = (v10 + 1) & v11;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_63;
          }
          continue;
        }
LABEL_60:
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = *v3;
        uint64_t v41 = *v3;
        *id v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001EC090();
          uint64_t v30 = v41;
        }
        uint64_t v31 = *(void *)(*(void *)(v30 + 48) + 24 * v10);
        sub_10019620C(v10);
        *id v3 = v41;
        swift_bridgeObjectRelease();
        return v31;
    }
  }
}

uint64_t sub_100195E34(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 39;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 39;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001EC424();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_10019665C(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100195F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000A6D70((unint64_t *)&qword_10095B840);
  swift_bridgeObjectRetain();
  uint64_t v29 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v28 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    char v24 = v2;
    uint64_t v25 = v6;
    uint64_t v26 = a2;
    uint64_t v27 = ~v11;
    BOOL v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_1000A6D70((unint64_t *)&unk_100955610);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v27;
      if (((*(void *)(v28 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        uint64_t v6 = v25;
        a2 = v26;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    BOOL v19 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v30 = *v19;
    *BOOL v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1001EC404();
      uint64_t v21 = v30;
    }
    uint64_t v6 = v25;
    a2 = v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v26, *(void *)(v21 + 48) + v16 * v12, v5);
    sub_100196808(v12);
    *BOOL v19 = v30;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
}

unint64_t sub_10019620C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v29 = v4;
      do
      {
        uint64_t v11 = 24 * v6;
        uint64_t v12 = v3;
        uint64_t v13 = *(void *)(v3 + 48) + 24 * v6;
        uint64_t v15 = *(void *)v13;
        uint64_t v14 = *(void **)(v13 + 8);
        uint64_t v16 = *(unsigned __int8 *)(v13 + 16);
        Hasher.init(_seed:)();
        switch(v16)
        {
          case 1:
            swift_bridgeObjectRetain();
            v18._countAndFlagsBits = v15;
            v18._object = v14;
            String.append(_:)(v18);
            String.hash(into:)();
            swift_bridgeObjectRelease();
            String.hash(into:)();
            break;
          case 2:
            v19._countAndFlagsBits = 0x5F646E657274;
            v19._object = (void *)0xE600000000000000;
            String.append(_:)(v19);
            goto LABEL_10;
          case 3:
            String.hash(into:)();
            swift_bridgeObjectRelease();
            break;
          default:
            v17._countAndFlagsBits = 0x5F63697274656DLL;
            v17._object = (void *)0xE700000000000000;
            String.append(_:)(v17);
LABEL_10:
            _print_unlocked<A, B>(_:_:)();
            String.hash(into:)();
            swift_bridgeObjectRelease();
            Hasher._combine(_:)(v15);
            break;
        }
        Swift::Int v20 = Hasher._finalize()();
        sub_1000917F8(v15, (uint64_t)v14, v16);
        unint64_t v21 = v20 & v7;
        if (v2 >= (uint64_t)v9)
        {
          uint64_t v4 = v29;
          uint64_t v3 = v12;
          if (v21 < v9) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v29;
          uint64_t v3 = v12;
          if (v21 >= v9) {
            goto LABEL_17;
          }
        }
        if (v2 >= (uint64_t)v21)
        {
LABEL_17:
          uint64_t v22 = *(void *)(v3 + 48);
          unint64_t v23 = v22 + 24 * v2;
          char v24 = (long long *)(v22 + v11);
          if (24 * v2 < v11 || v23 >= (unint64_t)v24 + 24 || (v25 = v2 == v6, int64_t v2 = v6, !v25))
          {
            long long v10 = *v24;
            *(void *)(v23 + 16) = *((void *)v24 + 2);
            *(_OWORD *)unint64_t v23 = v10;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v26 = *(void *)(v3 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
    JUMPOUT(0x10019662CLL);
  }
  *(void *)(v3 + 16) = v28;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_10019665C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100196808(int64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      unint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      BOOL v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1000A6D70((unint64_t *)&qword_10095B840);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_100196B10(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  unsigned __int8 v8 = a1;
  switch((char)a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      if (a1 == a4 && a2 == a5) {
        return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
      }
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if (v10) {
        return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
      }
      return result;
    case 2:
      uint64_t result = 0;
      if (a6 == 2) {
        goto LABEL_10;
      }
      return result;
    case 3:
      switch(a1)
      {
        case 1:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 1) {
            return result;
          }
          goto LABEL_38;
        case 2:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 2) {
            return result;
          }
          goto LABEL_38;
        case 3:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 3) {
            return result;
          }
          goto LABEL_38;
        case 4:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 4) {
            return result;
          }
          goto LABEL_38;
        case 5:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 5) {
            return result;
          }
          goto LABEL_38;
        case 6:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 6) {
            return result;
          }
          goto LABEL_38;
        case 7:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 0;
          if (a4 != 7) {
            return result;
          }
LABEL_38:
          if (a5) {
            return result;
          }
          return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
        default:
          if (a6 != 3 || (a5 | a4) != 0) {
            return 0;
          }
          return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
      }
    default:
      uint64_t result = 0;
      if ((_BYTE)a6) {
        return result;
      }
LABEL_10:
      if (a4 == v8) {
        return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
      }
      return result;
  }
}

void *sub_100196D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v44 = *(void *)(a1 + 16);
  if (!v44) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v43 = a1 + 32;
  BOOL v8 = a3 != 7;
  BOOL v9 = a3 != 6;
  BOOL v10 = a3 != 5;
  BOOL v11 = a3 != 4;
  BOOL v12 = a3 != 3;
  BOOL v13 = a3 != 2;
  BOOL v14 = a3 != 1;
  if (a4)
  {
    BOOL v8 = 1;
    BOOL v9 = 1;
    BOOL v10 = 1;
    BOOL v11 = 1;
    BOOL v12 = 1;
    BOOL v13 = 1;
    BOOL v14 = 1;
  }
  BOOL v15 = a5 == 3;
  if (a5 != 3) {
    BOOL v8 = 1;
  }
  BOOL v42 = v8;
  char v16 = a5 != 3 || v9;
  char v41 = v16;
  char v17 = a5 != 3 || v10;
  char v18 = a5 != 3 || v11;
  char v39 = v18;
  char v40 = v17;
  char v19 = a5 != 3 || v12;
  char v20 = a5 != 3 || v13;
  char v37 = v20;
  char v38 = v19;
  char v21 = a5 != 3 || v14;
  if (a4 | a3) {
    BOOL v15 = 0;
  }
  char v35 = v15;
  char v36 = v21;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  unint64_t v23 = _swiftEmptyArrayStorage;
  do
  {
    int v24 = *(unsigned __int8 *)(v43 + v22);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v25 = *(void *)(v45 + 16);
    if (v25)
    {
      uint64_t v26 = v25 - 1;
      for (int64_t i = (unsigned __int8 *)(v45 + 49); v24 != *i; i += 24)
      {
LABEL_32:
        if (!v26) {
          goto LABEL_66;
        }
LABEL_33:
        --v26;
      }
      uint64_t v28 = *(void *)(i - 17);
      switch(*(i - 1))
      {
        case 1u:
          if (a5 == 1)
          {
            BOOL v29 = v28 == a3 && *(void *)(i - 9) == a4;
            if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_27;
            }
          }
          goto LABEL_32;
        case 2u:
          if (a5 == 2) {
            goto LABEL_45;
          }
          goto LABEL_32;
        case 3u:
          switch(v28)
          {
            case 1:
              if ((v36 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 2:
              if ((v37 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 3:
              if ((v38 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 4:
              if ((v39 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 5:
              if ((v40 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 6:
              if ((v41 & 1) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            case 7:
              if (!v42) {
                goto LABEL_27;
              }
              goto LABEL_32;
            default:
              char v30 = v35;
              if (!v26) {
                char v30 = 1;
              }
              if (v30) {
                goto LABEL_66;
              }
              goto LABEL_33;
          }
        default:
          if (a5) {
            goto LABEL_32;
          }
LABEL_45:
          if (v28 != a3) {
            goto LABEL_32;
          }
LABEL_27:
          swift_bridgeObjectRelease();
          break;
      }
    }
    else
    {
LABEL_66:
      swift_bridgeObjectRelease();
      sub_100091494(a3, a4, a5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v23 = sub_1000D1C2C(0, v23[2] + 1, 1, v23);
      }
      unint64_t v32 = v23[2];
      unint64_t v31 = v23[3];
      if (v32 >= v31 >> 1) {
        unint64_t v23 = sub_1000D1C2C((void *)(v31 > 1), v32 + 1, 1, v23);
      }
      void v23[2] = v32 + 1;
      unint64_t v33 = &v23[3 * v32];
      void v33[4] = a3;
      v33[5] = a4;
      *((unsigned char *)v33 + 48) = a5;
      *((unsigned char *)v33 + 49) = v24;
    }
    ++v22;
  }
  while (v22 != v44);
  swift_bridgeObjectRelease();
  return v23;
}

void *sub_1001970B4(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v8 - 8);
  BOOL v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(a1 + 16);
  if (v38)
  {
    BOOL v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v36 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    char v37 = v12;
    uint64_t v35 = *(void *)(v11 + 56);
    unint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    char v30 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    v28[3] = v2;
    BOOL v29 = (void (**)(char *, uint64_t))(v11 - 8);
    long long v28[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    char v40 = _swiftEmptyArrayStorage;
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    v28[1] = (v11 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v31 = v10;
    uint64_t v32 = v11;
    while (1)
    {
      v37(v10, v36 + v35 * v13, v4);
      BOOL v14 = *v34;
      (*v34)(v10, 0, 1, v4);
      if ((*v33)(v10, 1, v4) == 1) {
        break;
      }
      (*v30)(v7, v10, v4);
      BOOL v15 = v7;
      uint64_t v16 = UUID.uuidString.getter();
      uint64_t v18 = v17;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v19 = *(void *)(v41 + 16);
      if (v19)
      {
        char v20 = (unsigned char *)(v41 + 49);
        while (1)
        {
          if ((*v20 & 1) == 0 && *(v20 - 1) == 1)
          {
            BOOL v21 = *(void *)(v20 - 17) == v16 && *(void *)(v20 - 9) == v18;
            if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
          }
          v20 += 24;
          if (!--v19) {
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v15;
        (*v29)(v15, v4);
        BOOL v10 = v31;
      }
      else
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v7 = v15;
        (*v29)(v15, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v40 = sub_1000D1C2C(0, v40[2] + 1, 1, v40);
        }
        BOOL v10 = v31;
        unint64_t v23 = v40[2];
        unint64_t v22 = v40[3];
        if (v23 >= v22 >> 1) {
          char v40 = sub_1000D1C2C((void *)(v22 > 1), v23 + 1, 1, v40);
        }
        int v24 = v40;
        v40[2] = v23 + 1;
        uint64_t v25 = &v24[3 * v23];
        v25[4] = v16;
        v25[5] = v18;
        *((_WORD *)v25 + 24) = 1;
      }
      if (++v13 == v38)
      {
        v14(v10, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    char v40 = _swiftEmptyArrayStorage;
    v26(v10, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v40;
}

void *sub_1001974D0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v39 = (unsigned __int8 *)(a2 + 48);
  uint64_t v40 = a1 + 32;
  uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_3:
  if (v4 <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v49 = v5;
  unint64_t v50 = v6;
  unint64_t v7 = v4;
  while (1)
  {
    if (v7 == v50)
    {
      __break(1u);
      JUMPOUT(0x100197838);
    }
    unint64_t v8 = v2;
    unint64_t v4 = v7 + 1;
    uint64_t v9 = v3;
    uint64_t v10 = *(void *)(v3 + 16);
    if (v10) {
      break;
    }
LABEL_7:
    unint64_t v7 = v4;
    unint64_t v2 = v8;
    uint64_t v3 = v9;
    uint64_t v5 = v49;
    if (v4 == v8) {
      return v5;
    }
  }
  uint64_t v11 = v40 + 24 * v7;
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *(void *)(v11 + 8);
  int v14 = *(unsigned __int8 *)(v11 + 16);
  BOOL v15 = *(void *)v11 != 7;
  BOOL v16 = v13 != 6;
  BOOL v17 = v13 != 5;
  BOOL v18 = v13 != 4;
  BOOL v19 = v13 != 3;
  BOOL v20 = v13 != 2;
  BOOL v21 = v13 != 1;
  if (v12)
  {
    BOOL v15 = 1;
    BOOL v16 = 1;
    BOOL v17 = 1;
    BOOL v18 = 1;
    BOOL v19 = 1;
    BOOL v20 = 1;
    BOOL v21 = 1;
  }
  if (v14 != 3) {
    BOOL v15 = 1;
  }
  BOOL v48 = v15;
  char v22 = v14 != 3 || v16;
  char v47 = v22;
  char v23 = v14 != 3 || v17;
  char v24 = v14 != 3 || v18;
  char v45 = v24;
  char v46 = v23;
  char v25 = v14 != 3 || v19;
  char v26 = v14 != 3 || v20;
  char v43 = v26;
  char v44 = v25;
  char v27 = v14 != 3 || v21;
  if (v12 | v13) {
    BOOL v28 = 0;
  }
  else {
    BOOL v28 = v14 == 3;
  }
  BOOL v41 = v28;
  char v42 = v27;
  BOOL v29 = v39;
  while (2)
  {
    uint64_t v30 = *((void *)v29 - 2);
    uint64_t v31 = *((void *)v29 - 1);
    int v33 = *v29;
    v29 += 24;
    char v32 = v33;
    switch(v33)
    {
      case 1:
        if (v14 == 1)
        {
          BOOL v34 = v30 == v13 && v31 == v12;
          if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            goto LABEL_66;
          }
        }
        goto LABEL_38;
      case 2:
        if (v14 != 2) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        switch(v30)
        {
          case 1:
            if (v42) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 1;
            break;
          case 2:
            if (v43) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 2;
            break;
          case 3:
            if (v44) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 3;
            break;
          case 4:
            if (v45) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 4;
            break;
          case 5:
            if (v46) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 5;
            break;
          case 6:
            if (v47) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 6;
            break;
          case 7:
            if (v48) {
              goto LABEL_38;
            }
            uint64_t v12 = 0;
            uint64_t v13 = 7;
            break;
          default:
            if (v41) {
              goto LABEL_66;
            }
            goto LABEL_38;
        }
        goto LABEL_66;
      default:
        if (v14) {
          goto LABEL_38;
        }
LABEL_37:
        if (v30 != v13)
        {
LABEL_38:
          if (!--v10) {
            goto LABEL_7;
          }
          continue;
        }
LABEL_66:
        uint64_t v3 = v9;
        unint64_t v2 = v8;
        uint64_t v5 = v49;
        sub_100091494(v13, v12, v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C8E84(0, v49[2] + 1, 1);
          uint64_t v5 = v49;
        }
        unint64_t v36 = v5[2];
        unint64_t v35 = v5[3];
        if (v36 >= v35 >> 1)
        {
          sub_1001C8E84(v35 > 1, v36 + 1, 1);
          uint64_t v5 = v49;
        }
        _DWORD v5[2] = v36 + 1;
        char v37 = &v5[3 * v36];
        v37[4] = v13;
        v37[5] = v12;
        *((unsigned char *)v37 + 48) = v32;
        if (v4 != v8) {
          goto LABEL_3;
        }
        return v5;
    }
  }
}

uint64_t sub_100197868(uint64_t result, uint64_t a2, char *a3)
{
  uint64_t v4 = result;
  uint64_t v18 = *(void *)(result + 16);
  if (v18)
  {
    unint64_t v5 = 0;
    unint64_t v6 = (char *)(result + 49);
    unint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v17 = result;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v8 = *(void *)(v6 - 17);
      uint64_t v9 = *(void *)(v6 - 9);
      char v10 = *(v6 - 1);
      char v11 = *v6;
      v21[0] = v8;
      v21[1] = v9;
      char v22 = v10;
      char v23 = v11;
      sub_100091494(v8, v9, v10);
      char v12 = sub_100194918((uint64_t)v21, a2, a3);
      if (v3)
      {
        sub_1000917F8(v8, v9, v10);
        swift_release();
        goto LABEL_15;
      }
      if (v12)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        char v24 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1001C8E54(0, v7[2] + 1, 1);
          unint64_t v7 = v24;
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        unint64_t v15 = v14 + 1;
        if (v14 >= v13 >> 1)
        {
          uint64_t result = sub_1001C8E54(v13 > 1, v14 + 1, 1);
          unint64_t v15 = v14 + 1;
          unint64_t v7 = v24;
        }
        v7[2] = v15;
        BOOL v16 = &v7[3 * v14];
        void v16[4] = v8;
        v16[5] = v9;
        *((unsigned char *)v16 + 48) = v10;
        *((unsigned char *)v16 + 49) = v11;
        uint64_t v4 = v17;
      }
      else
      {
        uint64_t result = sub_1000917F8(v8, v9, v10);
      }
      ++v5;
      v6 += 24;
      if (v18 == v5) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v7 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_100197A14(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if (v1 < 1) {
    return 0;
  }
  uint64_t v2 = 0;
  uint64_t v3 = *a1;
LABEL_5:
  int v5 = *(unsigned __int8 *)(v3 + v2);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = *(void *)(v14 + 16);
  if (!v6) {
    goto LABEL_15;
  }
  unint64_t v7 = (unsigned char *)(v14 + 49);
  do
  {
    BOOL v8 = *v7 != 1 && *(v7 - 1) == 0;
    if (v8 && v5 == *(v7 - 17))
    {
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v2 >= v1) {
        return v2;
      }
      goto LABEL_5;
    }
    v7 += 24;
    --v6;
  }
  while (v6);
LABEL_15:
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v2 >= --v1) {
      return v2;
    }
    int v9 = *(unsigned __int8 *)(v3 + v1);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v10 = *(void *)(v14 + 16);
    if (v10)
    {
      char v11 = (unsigned char *)(v14 + 49);
      while (1)
      {
        BOOL v12 = *v11 != 1 && *(v11 - 1) == 0;
        if (v12 && v9 == *(v11 - 17)) {
          break;
        }
        v11 += 24;
        if (!--v10) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      if (v3)
      {
        char v4 = *(unsigned char *)(v3 + v2);
        *(unsigned char *)(v3 + v2) = *(unsigned char *)(v3 + v1);
        *(unsigned char *)(v3 + v1) = v4;
        goto LABEL_4;
      }
      __break(1u);
      return 0;
    }
  }
}

void *sub_100197BCC(char a1)
{
  uint64_t v2 = sub_10071BD70(a1);
  id v3 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005EC1AC(v2);
  }
  uint64_t v4 = v2[2];
  v14[0] = (uint64_t)(v2 + 4);
  v14[1] = v4;
  id v5 = v3;
  unint64_t v6 = sub_100197A14(v14);

  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v2[2] < v6)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    int v9 = sub_100369080((uint64_t)v2, (uint64_t)(v2 + 4), 0, (2 * v6) | 1);
    goto LABEL_10;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  unint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7[2];
  swift_release();
  if (v8 != v6) {
    goto LABEL_19;
  }
  int v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    int v9 = _swiftEmptyArrayStorage;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  unint64_t v10 = v2[2];
  if (v10 < v6)
  {
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    sub_100369080((uint64_t)v2, (uint64_t)(v2 + 4), v6, (2 * v10) | 1);
    goto LABEL_16;
  }
  swift_unknownObjectRetain_n();
  char v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    char v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  swift_release();
  if (v12 != v10 - v6) {
    goto LABEL_21;
  }
  if (!swift_dynamicCastClass()) {
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100197DC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100197E98()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_didSetToDefaultConfiguration) = 0;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000AFA94(&qword_10094C4B8);
  sub_100198538(&qword_10094C508, &qword_10094C4B8, (void (*)(void))sub_10007E818);
  uint64_t v1 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  id v4 = [self standardUserDefaults];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  char v6 = @"ActivityDashboardCardConfigurationKey";
  [v4 setObject:isa forKey:v6];

  swift_release();
  return sub_1000939A4(v1, v3);
}

uint64_t sub_100198058(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1000917F8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_10019806C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (!v5) {
    return 0;
  }
  char v6 = a4;
  uint64_t v8 = a2;
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  BOOL v11 = a2 != 7;
  BOOL v12 = a2 != 6;
  BOOL v13 = a2 != 5;
  BOOL v14 = a2 != 4;
  BOOL v15 = a2 != 3;
  BOOL v16 = a2 != 2;
  BOOL v17 = a2 != 1;
  if (a3)
  {
    BOOL v11 = 1;
    BOOL v12 = 1;
    BOOL v13 = 1;
    BOOL v14 = 1;
    BOOL v15 = 1;
    BOOL v16 = 1;
    BOOL v17 = 1;
  }
  BOOL v18 = a4 == 3;
  char v19 = a4 != 3 || v11;
  char v20 = a4 != 3 || v12;
  char v21 = a4 != 3 || v13;
  char v22 = a4 != 3 || v14;
  char v56 = v22;
  char v57 = v21;
  char v23 = a4 != 3 || v15;
  char v24 = a4 != 3 || v16;
  char v54 = v24;
  char v55 = v23;
  char v25 = a4 != 3 || v17;
  if (a3 | a2) {
    BOOL v18 = 0;
  }
  BOOL v52 = v18;
  char v53 = v25;
  while (2)
  {
    uint64_t v26 = v4[v9 + 4];
    switch(LOBYTE(v4[v9 + 6]))
    {
      case 1:
        if (v6 == 1)
        {
          BOOL v27 = v26 == v8 && v4[v9 + 5] == a3;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            goto LABEL_57;
          }
        }
        goto LABEL_30;
      case 2:
        if (v6 != 2) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 3:
        switch(v26)
        {
          case 1:
            if ((v53 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 2:
            if ((v54 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 3:
            if ((v55 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 4:
            if ((v56 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 5:
            if ((v57 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 6:
            if ((v20 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          case 7:
            if ((v19 & 1) == 0) {
              goto LABEL_57;
            }
            goto LABEL_30;
          default:
            if (v52) {
              goto LABEL_57;
            }
            goto LABEL_30;
        }
      default:
        if (v6) {
          goto LABEL_30;
        }
LABEL_29:
        if (v26 != v8)
        {
LABEL_30:
          ++v10;
          v9 += 3;
          if (v5 == v10) {
            return v5;
          }
          continue;
        }
LABEL_57:
        char v49 = v20;
        char v50 = v19;
        uint64_t v51 = a3;
        unint64_t v28 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_106;
        }
        if (v28 != v5)
        {
          char v59 = v6;
          uint64_t v58 = v8;
          while (2)
          {
            unint64_t v34 = v4[2];
            if (v28 < v34)
            {
              unint64_t v35 = &v4[v9];
              uint64_t v36 = v4[v9 + 7];
              switch(LOBYTE(v4[v9 + 9]))
              {
                case 1:
                  if (v6 != 1) {
                    goto LABEL_76;
                  }
                  BOOL v37 = v36 == v8 && v4[v9 + 8] == v51;
                  if (!v37 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                    goto LABEL_76;
                  }
                  goto LABEL_62;
                case 2:
                  if (v6 == 2) {
                    goto LABEL_75;
                  }
                  goto LABEL_76;
                case 3:
                  switch(v36)
                  {
                    case 1:
                      if (v53) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 2:
                      if (v54) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 3:
                      if (v55) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 4:
                      if (v56) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 5:
                      if (v57) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 6:
                      if (v49) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    case 7:
                      if (v50) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                    default:
                      if (!v52) {
                        goto LABEL_76;
                      }
                      goto LABEL_62;
                  }
                default:
                  if (v6) {
                    goto LABEL_76;
                  }
LABEL_75:
                  if (v36 == v8) {
                    goto LABEL_62;
                  }
LABEL_76:
                  if (v28 == v10) {
                    goto LABEL_61;
                  }
                  if (v10 >= v34) {
                    goto LABEL_104;
                  }
                  uint64_t v38 = 3 * v10;
                  uint64_t v39 = (uint64_t)&v4[3 * v10 + 4];
                  uint64_t v40 = *(void *)(v39 + 8);
                  char v62 = *(unsigned char *)(v39 + 17);
                  uint64_t v42 = v35[7];
                  uint64_t v41 = v35[8];
                  char v43 = *((unsigned char *)v35 + 72);
                  char v64 = BYTE1(v4[v9 + 9]);
                  uint64_t v61 = *(void *)v39;
                  char v63 = *(unsigned char *)(v39 + 16);
                  sub_100091494(*(void *)v39, v40, v63);
                  sub_100091494(v42, v41, v43);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    id v4 = sub_1005EC1C0(v4);
                  }
                  char v44 = &v4[v38];
                  uint64_t v45 = v4[v38 + 4];
                  uint64_t v46 = v4[v38 + 5];
                  v44[4] = v42;
                  v44[5] = v41;
                  char v47 = v4[v38 + 6];
                  *((unsigned char *)v44 + 48) = v43;
                  *((unsigned char *)v44 + 49) = v64;
                  sub_1000917F8(v45, v46, v47);
                  if (v28 >= v4[2]) {
                    goto LABEL_105;
                  }
                  BOOL v29 = &v4[v9];
                  uint64_t v30 = v4[v9 + 7];
                  uint64_t v31 = v4[v9 + 8];
                  v29[7] = v61;
                  v29[8] = v40;
                  char v32 = v4[v9 + 9];
                  *((unsigned char *)v29 + 72) = v63;
                  *((unsigned char *)v29 + 73) = v62;
                  sub_1000917F8(v30, v31, v32);
                  *(void *)a1 = v4;
                  char v6 = v59;
                  uint64_t v8 = v58;
LABEL_61:
                  if (__OFADD__(v10++, 1)) {
                    goto LABEL_103;
                  }
LABEL_62:
                  ++v28;
                  v9 += 3;
                  if (v28 != v4[2]) {
                    continue;
                  }
                  return v10;
              }
            }
            break;
          }
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
          JUMPOUT(0x1001984D8);
        }
        return v10;
    }
  }
}

uint64_t sub_100198538(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001985D0()
{
  unint64_t result = qword_10094C558;
  if (!qword_10094C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C558);
  }
  return result;
}

void destroy for PaceTargetValue(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for PaceTargetValue(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = v3;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for PaceTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for PaceTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaceTargetValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaceTargetValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaceTargetValue()
{
  return &type metadata for PaceTargetValue;
}

uint64_t sub_100198808()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100198824()
{
  uint64_t v1 = type metadata accessor for LocalizationFeature();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = *(double *)v0;
  if (sub_100198B9C(*(double *)v0, *(void *)(v0 + 16), *(unsigned char *)(v0 + 32) & 1))
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationFeature.workout(_:), v1);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    id v6 = *(void **)(v0 + 8);
    id v7 = [self meterUnit];
    id v8 = [self quantityWithUnit:v7 doubleValue:v5];

    FIUIDistanceTypeForActivityType();
    uint64_t v9 = FIUIPaceFormatForDistanceType();
    id v10 = [v6 localizedPaceStringWithDistance:v8 overDuration:v9 paceFormat:FIUIDistanceTypeForActivityType() distanceType:1.0];

    if (v10)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100198A2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MetricText();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100198824();
  uint64_t v7 = *(void *)(v1 + 16);
  FIUIDistanceTypeForActivityType();
  if (FIUIPaceFormatForDistanceType() == 4)
  {
    id v8 = [*(id *)(v1 + 8) localizedSpeedUnitStringForActivityType:v7];
    if (v8)
    {
      uint64_t v9 = v8;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  MetricText.init(value:unit:description:stale:includesSlashes:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
}

uint64_t sub_100198B9C(double a1, uint64_t a2, char a3)
{
  FIUIDistanceTypeForActivityType();
  if (FIUIPaceFormatForDistanceType() == 4
    && a1 >= 0.0
    && (sub_10007E2D8(0, (unint64_t *)&qword_10094B780),
        sub_10007E2D8(0, (unint64_t *)&qword_100968CF0),
        uint64_t v5 = (void *)static FIUIWorkoutActivityType.indoorCycle.getter(),
        char v6 = static NSObject.== infix(_:_:)(),
        v5,
        (v6 & 1) != 0))
  {
    char v7 = 0;
  }
  else
  {
    FIUIDistanceTypeForActivityType();
    uint64_t v8 = FIUIPaceFormatForDistanceType();
    char v7 = a3 | (a1 < 0.0);
    if (v8 != 4) {
      char v7 = 0;
    }
  }
  return v7 & 1;
}

unint64_t sub_100198C80()
{
  unint64_t result = qword_10094C570;
  if (!qword_10094C570)
  {
    type metadata accessor for MetricText();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C570);
  }
  return result;
}

uint64_t destroy for AwardViewActionContext(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AwardViewActionContext(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v4;
  id v7 = (id)v5;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AwardViewActionContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = (void *)a2[4];
  long long v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TrendsCardFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AwardViewActionContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardViewActionContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardViewActionContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardViewActionContext()
{
  return &type metadata for AwardViewActionContext;
}

void *sub_100198F40(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    id v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    BOOL v13 = (int *)type metadata accessor for AwardsCard();
    uint64_t v14 = v13[5];
    BOOL v15 = &v10[v14];
    BOOL v16 = &v11[v14];
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    sub_100091494(*(void *)v16, v18, v19);
    *(void *)BOOL v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
    uint64_t v20 = v13[10];
    char v21 = *(void **)&v11[v20];
    *(void *)&v10[v20] = v21;
    uint64_t v22 = v13[11];
    char v23 = *(void **)&v11[v22];
    *(void *)&v10[v22] = v23;
    uint64_t v24 = v13[12];
    char v25 = *(void **)&v11[v24];
    *(void *)&v10[v24] = v25;
    uint64_t v26 = v13[13];
    BOOL v27 = *(void **)&v11[v26];
    *(void *)&v10[v26] = v27;
    uint64_t v28 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    BOOL v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)((char *)a2 + v28 + 24);
    swift_bridgeObjectRetain();
    id v32 = v21;
    id v33 = v23;
    id v34 = v25;
    id v35 = v27;
    if (v31)
    {
      uint64_t v36 = *((void *)v30 + 4);
      *((void *)v29 + 3) = v31;
      *((void *)v29 + 4) = v36;
      (**(void (***)(char *, char *, uint64_t))(v31 - 8))(v29, v30, v31);
    }
    else
    {
      long long v37 = *((_OWORD *)v30 + 1);
      *(_OWORD *)BOOL v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v37;
      *((void *)v29 + 4) = *((void *)v30 + 4);
    }
    uint64_t v38 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    uint64_t v41 = type metadata accessor for GeometryProxy();
    uint64_t v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      uint64_t v43 = sub_1000AFA94(&qword_10094C580);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    uint64_t v44 = sub_1000AFA94(&qword_10094C588);
    *(void *)&v39[*(int *)(v44 + 28)] = *(void *)&v40[*(int *)(v44 + 28)];
  }
  swift_retain();
  return a1;
}

void *sub_1001992C0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for AwardsCard();
  uint64_t v12 = v11[5];
  BOOL v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)BOOL v13 = v15;
  *((void *)v13 + 1) = v16;
  char v20 = v13[16];
  v13[16] = v17;
  sub_1000917F8(v18, v19, v20);
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[10];
  uint64_t v22 = *(void **)&v8[v21];
  char v23 = *(void **)&v9[v21];
  *(void *)&v8[v21] = v23;
  id v24 = v23;

  uint64_t v25 = v11[11];
  uint64_t v26 = *(void **)&v8[v25];
  BOOL v27 = *(void **)&v9[v25];
  *(void *)&v8[v25] = v27;
  id v28 = v27;

  uint64_t v29 = v11[12];
  uint64_t v30 = *(void **)&v8[v29];
  uint64_t v31 = *(void **)&v9[v29];
  *(void *)&v8[v29] = v31;
  id v32 = v31;

  uint64_t v33 = v11[13];
  id v34 = *(void **)&v8[v33];
  id v35 = *(void **)&v9[v33];
  *(void *)&v8[v33] = v35;
  id v36 = v35;

  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v37 = a3[7];
  uint64_t v38 = (uint64_t)a1 + v37;
  uint64_t v39 = (void *)((char *)a2 + v37);
  uint64_t v40 = *(void *)((char *)a2 + v37 + 24);
  if (*(void *)((char *)a1 + v37 + 24))
  {
    if (v40)
    {
      sub_10009EDF0((uint64_t *)v38, v39);
      goto LABEL_13;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
  }
  else if (v40)
  {
    *(void *)(v38 + 24) = v40;
    *(void *)(v38 + 32) = v39[4];
    (**(void (***)(uint64_t, char *))(v40 - 8))(v38, (char *)v39);
    goto LABEL_13;
  }
  long long v41 = *(_OWORD *)v39;
  long long v42 = *((_OWORD *)v39 + 1);
  *(void *)(v38 + 32) = v39[4];
  *(_OWORD *)uint64_t v38 = v41;
  *(_OWORD *)(v38 + 16) = v42;
LABEL_13:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v43 = a3[9];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = type metadata accessor for GeometryProxy();
  uint64_t v47 = *(void *)(v46 - 8);
  BOOL v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
    goto LABEL_18;
  }
  if (v50)
  {
LABEL_18:
    uint64_t v51 = sub_1000AFA94(&qword_10094C580);
    memcpy(v44, v45, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
LABEL_19:
  uint64_t v52 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v44[*(int *)(v52 + 28)] = *(void *)&v45[*(int *)(v52 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1001996D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AwardsCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
  *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
  *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
  uint64_t v16 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  char v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)char v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  uint64_t v20 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for GeometryProxy();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_1000AFA94(&qword_10094C580);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v21[*(int *)(v26 + 28)] = *(void *)&v22[*(int *)(v26 + 28)];
  return a1;
}

char *sub_100199990(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AwardsCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  char v16 = v15[16];
  uint64_t v17 = *(void *)v14;
  uint64_t v18 = *((void *)v14 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  char v19 = v14[16];
  v14[16] = v16;
  sub_1000917F8(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  swift_bridgeObjectRelease();
  uint64_t v20 = v12[10];
  uint64_t v21 = *(void **)&v9[v20];
  *(void *)&v9[v20] = *(void *)&v10[v20];

  uint64_t v22 = v12[11];
  uint64_t v23 = *(void **)&v9[v22];
  *(void *)&v9[v22] = *(void *)&v10[v22];

  uint64_t v24 = v12[12];
  uint64_t v25 = *(void **)&v9[v24];
  *(void *)&v9[v24] = *(void *)&v10[v24];

  uint64_t v26 = v12[13];
  BOOL v27 = *(void **)&v9[v26];
  *(void *)&v9[v26] = *(void *)&v10[v26];

  uint64_t v28 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (*(void *)&a1[v28 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v28]);
  }
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  uint64_t v32 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v33 = &a1[v32];
  id v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for GeometryProxy();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v33, v34, v35);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    uint64_t v40 = sub_1000AFA94(&qword_10094C580);
    memcpy(v33, v34, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_13:
  uint64_t v41 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v33[*(int *)(v41 + 28)] = *(void *)&v34[*(int *)(v41 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100199D14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AwardsCard();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 24);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v16 = sub_1000AFA94(&qword_10094C588);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[9];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_100199EAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for AwardsCard();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[7] + 24) = a2;
  }
  else
  {
    uint64_t v15 = sub_1000AFA94(&qword_10094C588);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_10019A038(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AwardsCardView();
  sub_1000AEF2C(a1 + *(int *)(v2 + 28), (uint64_t)v7, &qword_10094C750);
  if (!v8) {
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
  long long v3 = sub_10007E4EC(v7, v8);
  uint64_t v4 = a1 + *(int *)(v2 + 20);
  memset(v6, 0, sizeof(v6));
  sub_1005044C4(v4, (uint64_t)v6, *v3);
  sub_10008DB18((uint64_t)v6, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
}

void sub_10019A0E0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  id v4 = v3;
  [v2 setUniqueName:];
}

uint64_t sub_10019A150()
{
  uint64_t v1 = (int *)type metadata accessor for AwardsCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for AwardsCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));
  swift_bridgeObjectRelease();

  uint64_t v8 = v3 + v1[7];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  uint64_t v9 = v3 + v1[9];
  uint64_t v10 = type metadata accessor for GeometryProxy();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  sub_1000AFA94(&qword_10094C588);
  swift_release();

  return swift_deallocObject();
}

id sub_10019A3CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 template];
  *a2 = result;
  return result;
}

uint64_t sub_10019A414()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10019A450()
{
  uint64_t v1 = *(void *)(type metadata accessor for AwardsCardView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10019A038(v2);
}

uint64_t sub_10019A4B0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_10019A50C(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView] = 0;
  *(void *)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_observers] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_presentationContext] = a1;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C828);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = self;
  id v5 = [v4 bundleForClass:ObjCClassFromMetadata];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:0 table:v7];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v4 bundleForClass:ObjCClassFromMetadata];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:0 table:v12];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingViewController();
  id v15 = [super initWithTitle:v9 detailText:v14 icon:0 contentLayout:3];

  return v15;
}

void sub_10019A7AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094C820);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  NSString v7 = &v29[-v6];
  id v8 = (objc_class *)type metadata accessor for ActivitySetupThreeRingsOnboardingViewController();
  v30.receiver = v0;
  v30.super_class = v8;
  [super viewDidLoad];
  id v9 = [self boldButton];
  [v9 addTarget:v1 action:"didTapAcceptButton" forControlEvents:64];
  sub_10007E2D8(0, (unint64_t *)&qword_10094C828);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v11 = self;
  id v12 = [v11 bundleForClass:ObjCClassFromMetadata];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:0 table:v14];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setTitle:v16 forState:0];

  id v17 = v9;
  UIButton.configuration.getter();
  uint64_t v18 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v7, 1, v18))
  {
    sub_10019B930((uint64_t)v7, (uint64_t)v5);
    UIButton.configuration.setter();

    sub_10019B998((uint64_t)v7);
  }
  else
  {
    id v19 = (id)BPSPillSelectedColor();
    uint64_t v20 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.backgroundColor.setter();
    v20(v29, 0);
    UIButton.configuration.setter();
  }
  id v21 = [v1 buttonTray];
  [v21 addButton:v17];

  if (*(void *)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_presentationContext] == 4)
  {
    id v22 = [self linkButton];
    [v22 addTarget:v1 action:"didTapSkipButton" forControlEvents:64];
    id v23 = [v11 bundleForClass:ObjCClassFromMetadata];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v23 localizedStringForKey:v24 value:0 table:v25];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v22 setTitle:v27 forState:0];

    id v28 = [v1 buttonTray];
    [v28 addButton:v22];
  }
  sub_10019B010();
}

void sub_10019AC7C(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingViewController();
  [super viewDidAppear:a1 & 1];
  sub_10019B458();
  uint64_t v3 = *(char **)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView];
  if (v3)
  {
    uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer];
    id v5 = v3;
    id v6 = [v4 player];
    [v6 play];
  }
}

void sub_10019AD70(char a1)
{
  uint64_t v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingViewController();
  [super viewDidDisappear:a1 & 1];
  uint64_t v4 = OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView;
  id v5 = *(void **)&v2[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView];
  if (v5)
  {
    id v6 = v5;
    sub_1006F495C();

    objc_super v7 = *(void **)&v2[v4];
    if (v7)
    {
      [v7 removeFromSuperview];
      id v5 = *(void **)&v2[v4];
    }
    else
    {
      id v5 = 0;
    }
  }
  *(void *)&v2[v4] = 0;
}

void sub_10019AE5C()
{
  id v3 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:*(void *)&v0[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_presentationContext]];
  [v3 setDelegate:[v0 delegate]];
  swift_unknownObjectRelease();
  id v1 = [v0 navigationController];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 pushViewController:v3 animated:1];
  }
}

uint64_t sub_10019B010()
{
  id v1 = self;
  id v2 = [v1 defaultCenter];
  id v3 = self;
  id v4 = [v3 mainQueue];
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v19 = sub_10019B920;
  uint64_t v20 = v5;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_1000711BC;
  uint64_t v18 = &unk_1008B89E8;
  id v6 = _Block_copy(&v15);
  swift_release();
  id v7 = [v2 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v4 usingBlock:v6];
  _Block_release(v6);

  id v8 = [v1 defaultCenter];
  id v9 = [v3 mainQueue];
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v19 = sub_10019B928;
  uint64_t v20 = v10;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_1000711BC;
  uint64_t v18 = &unk_1008B8A10;
  NSString v11 = _Block_copy(&v15);
  swift_release();
  id v12 = [v8 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v9 usingBlock:v11];
  _Block_release(v11);

  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10074E640;
  *(void *)(v13 + 56) = swift_getObjectType();
  *(void *)(v13 + 32) = v7;
  *(void *)(v13 + 88) = swift_getObjectType();
  *(void *)(v13 + 64) = v12;
  *(void *)(v0 + OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_observers) = v13;
  return swift_bridgeObjectRelease();
}

void sub_10019B2E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_10019B458();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView);
    uint64_t v5 = v4;

    if (v4)
    {
      id v6 = [*(id *)&v5[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer] player];
      [v6 play];
    }
  }
}

void sub_10019B3B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView;
    id v3 = *(void **)(Strong + OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView);
    if (v3 && (id v4 = v3, sub_1006F495C(), v4, (v5 = *(void **)&v1[v2]) != 0))
    {
      [v5 removeFromSuperview];
      id v6 = *(void **)&v1[v2];
    }
    else
    {
      id v6 = 0;
    }
    *(void *)&v1[v2] = 0;
  }
}

void sub_10019B458()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)type metadata accessor for ActivitySetupThreeRingsOnboardingVideoView()) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 contentView];
  [v3 addSubview:v2];

  id v4 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100751160;
  id v6 = [v2 leadingAnchor];
  id v7 = [v1 contentView];
  id v8 = [v7 leadingAnchor];

  id v9 = [v6 constraintEqualToAnchor:v8];
  *(void *)(v5 + 32) = v9;
  id v10 = [v2 trailingAnchor];
  id v11 = [v1 contentView];
  id v12 = [v11 trailingAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12];
  *(void *)(v5 + 40) = v13;
  id v14 = [v2 topAnchor];
  id v15 = [v1 contentView];
  id v16 = [v15 topAnchor];

  id v17 = [v14 constraintEqualToAnchor:v16 constant:30.0];
  *(void *)(v5 + 48) = v17;
  id v18 = [v2 bottomAnchor];
  id v19 = [v1 contentView];
  id v20 = [v19 bottomAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  *(void *)(v5 + 56) = v21;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];

  id v23 = *(void **)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView];
  *(void *)&v1[OBJC_IVAR___CHASActivitySetupThreeRingsOnboardingViewController_videoView] = v2;
}

id sub_10019B7EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySetupThreeRingsOnboardingViewController()
{
  return self;
}

uint64_t sub_10019B8E8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10019B920()
{
}

void sub_10019B928()
{
}

uint64_t sub_10019B930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019B998(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094C820);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019B9F8(uint64_t a1)
{
  return a1;
}

id sub_10019BA58(uint64_t a1)
{
  return sub_10019BB1C(a1, type metadata accessor for ActivityChartData);
}

uint64_t type metadata accessor for ActivityChartData()
{
  return self;
}

id sub_10019BB00()
{
  return sub_10019BB1C(0, type metadata accessor for ActivityChartDataCache);
}

id sub_10019BB1C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  [super dealloc];
}

uint64_t sub_10019BBE4()
{
  return type metadata accessor for ActivityChartDataCache();
}

uint64_t destroy for MirrorPauseResumeButton(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for MirrorPauseResumeButton(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MirrorPauseResumeButton(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for ReachableContact(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MirrorPauseResumeButton(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorPauseResumeButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorPauseResumeButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorPauseResumeButton()
{
  return &type metadata for MirrorPauseResumeButton;
}

uint64_t sub_10019BE04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10019BE20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v27 = sub_1000AFA94(&qword_10094C8D0);
  uint64_t v2 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094C8D8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_10094C8E0) - 8;
  __chkstk_darwin(v28);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10094C8E8) - 8;
  __chkstk_darwin(v30);
  uint64_t v29 = (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v1;
  long long v36 = v1[1];
  *(_OWORD *)uint64_t v37 = v12;
  id v13 = (_OWORD *)swift_allocObject();
  long long v14 = v1[1];
  v13[1] = *v1;
  v13[2] = v14;
  void v13[3] = v1[2];
  uint64_t v32 = v1;
  sub_10019CB54(v37);
  sub_1000E2358((uint64_t)&v36);
  sub_1000AFA94(&qword_10094C8F0);
  sub_1000A132C(&qword_10094C8F8, &qword_10094C8F0);
  Button.init(action:label:)();
  swift_retain();
  char v15 = WorkoutStatePublisher.isGymKit.getter();
  sub_1000E2384((uint64_t)&v36);
  if (v15) {
    double v16 = 0.35;
  }
  else {
    double v16 = 1.0;
  }
  uint64_t v17 = v27;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v8, v4, v27);
  *(double *)&v8[*(int *)(v6 + 44)] = v16;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  swift_retain();
  char v18 = WorkoutStatePublisher.isGymKit.getter();
  sub_1000E2384((uint64_t)&v36);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v18 & 1;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v10, &qword_10094C8D8);
  id v21 = (uint64_t *)&v10[*(int *)(v28 + 44)];
  *id v21 = KeyPath;
  v21[1] = (uint64_t)sub_1000DBE18;
  void v21[2] = v20;
  sub_10008DB18((uint64_t)v8, &qword_10094C8D8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v22 = v29;
  sub_1000AEF2C((uint64_t)v10, v29, &qword_10094C8E0);
  id v23 = (_OWORD *)(v22 + *(int *)(v30 + 44));
  long long v24 = v34;
  *id v23 = v33;
  v23[1] = v24;
  void v23[2] = v35;
  sub_10008DB18((uint64_t)v10, &qword_10094C8E0);
  return sub_10019CB98(v22, v31);
}

uint64_t sub_10019C21C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  id v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DataLinkCommand();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  long long v12 = (char *)v25 - v11;
  __chkstk_darwin(v10);
  long long v14 = (char *)v25 - v13;
  uint64_t v31 = (void *)a1;
  long long v34 = *(_OWORD *)(a1 + 16);
  swift_retain();
  LOBYTE(a1) = WorkoutStatePublisher.workoutPaused.getter();
  sub_1000E2384((uint64_t)&v34);
  char v15 = (unsigned int *)&enum case for DataLinkCommand.resume(_:);
  if ((a1 & 1) == 0) {
    char v15 = (unsigned int *)&enum case for DataLinkCommand.pause(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v14, *v15, v5);
  static WOLog.dataLink.getter();
  double v16 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v16(v12, v14, v5);
  uint64_t v28 = v4;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v33 = v26;
    uint64_t v27 = v6;
    *(_DWORD *)id v19 = 136315138;
    v25[1] = v19 + 4;
    v16(v9, v12, v5);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v32 = sub_10008F1F4(v20, v21, &v33);
    uint64_t v22 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v23 = *(void (**)(char *, uint64_t))(v22 + 8);
    v23(v12, v5);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Sending %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v12, v5);
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  if (*v31)
  {
    swift_retain();
    dispatch thunk of DataLinkClient.send(command:acknowledged:)();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v23)(v14, v5);
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_10019CC10();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10019C628(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.dataLink.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109378;
    LODWORD(v14) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2080;
    uint64_t v14 = a2;
    sub_1000AFA94(&qword_10094C908);
    uint64_t v11 = Optional.description.getter();
    uint64_t v14 = sub_10008F1F4(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received %{BOOL}d with error %s", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

__n128 sub_10019C868@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  sub_10019C8E4(a1, (uint64_t)&v13);
  uint64_t v7 = v13;
  char v8 = v14;
  char v9 = v15;
  uint64_t v10 = v18;
  __n128 result = v17;
  long long v12 = v16;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 25) = v9;
  *(_OWORD *)(a2 + 32) = v12;
  *(__n128 *)(a2 + 48) = result;
  *(void *)(a2 + 64) = v10;
  return result;
}

uint64_t sub_10019C8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094AD68 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_100998148;
  long long v14 = *(_OWORD *)(a1 + 16);
  swift_retain();
  sub_1000E2358((uint64_t)&v14);
  WorkoutStatePublisher.workoutPaused.getter();
  sub_1000E2384((uint64_t)&v14);
  uint64_t v8 = Image.init(systemName:)();
  static Font.Weight.semibold.getter();
  uint64_t v9 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  uint64_t v10 = static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = static Color.white.getter();
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = KeyPath;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = result;
  *(void *)(a2 + 48) = v12;
  return result;
}

uint64_t sub_10019CAC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10019BE20(a1);
}

uint64_t sub_10019CB04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10019CB44()
{
  return sub_10019C21C(v0 + 16);
}

double sub_10019CB4C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10019C868(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

id *sub_10019CB54(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_10019CB88()
{
  return swift_deallocObject();
}

uint64_t sub_10019CB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10019CC10()
{
  unint64_t result = qword_10094C900;
  if (!qword_10094C900)
  {
    type metadata accessor for DataLinkMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C900);
  }
  return result;
}

unint64_t sub_10019CC6C()
{
  unint64_t result = qword_10094C910;
  if (!qword_10094C910)
  {
    sub_1000A1370(&qword_10094C8E8);
    sub_10019CCE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C910);
  }
  return result;
}

unint64_t sub_10019CCE8()
{
  unint64_t result = qword_10094C918;
  if (!qword_10094C918)
  {
    sub_1000A1370(&qword_10094C8E0);
    sub_10019CD88();
    sub_1000A132C(&qword_10094C930, &qword_10094C938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C918);
  }
  return result;
}

unint64_t sub_10019CD88()
{
  unint64_t result = qword_10094C920;
  if (!qword_10094C920)
  {
    sub_1000A1370(&qword_10094C8D8);
    sub_1000A132C(&qword_10094C928, &qword_10094C8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C920);
  }
  return result;
}

uint64_t sub_10019CE28()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DialogUtilities()
{
  return self;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailHeaderView()
{
  return &type metadata for ActivitySharingFriendDetailHeaderView;
}

uint64_t sub_10019CE6C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_10019CE88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ActivitySharingAvatarProvider();
  sub_1005B6D30(a1, 120.0);
  uint64_t v57 = Image.init(uiImage:)();
  char v56 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v54 = a1;
  id result = [a1 displayName];
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    uint64_t v58 = v14;
    uint64_t v59 = v16;
    sub_1000A06D0();
    uint64_t v17 = Text.init<A>(_:)();
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    static Font.largeTitle.getter();
    uint64_t v22 = Text.font(_:)();
    uint64_t v24 = v23;
    char v26 = v25;
    swift_release();
    char v27 = v26 & 1;
    sub_1000A06C0(v17, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v28 = Text.bold()();
    uint64_t v53 = v29;
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    sub_1000A06C0(v22, v24, v27);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = swift_getKeyPath();
    char v50 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    sub_10019D238(v54, (uint64_t)&v58);
    uint64_t v42 = v58;
    uint64_t v43 = v59;
    char v55 = v60;
    uint64_t v44 = v61;
    char v73 = 0;
    char v71 = v33;
    char v69 = 0;
    char v65 = 0;
    char v63 = v60;
    *(_DWORD *)(a2 + 9) = v58;
    *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v58 + 3);
    *(_DWORD *)(a2 + 49) = *(_DWORD *)v72;
    *(_DWORD *)(a2 + 52) = *(_DWORD *)&v72[3];
    *(_DWORD *)(a2 + 73) = *(_DWORD *)v70;
    *(_DWORD *)(a2 + 76) = *(_DWORD *)&v70[3];
    int v45 = *(_DWORD *)v68;
    *(_DWORD *)(a2 + 108) = *(_DWORD *)&v68[3];
    *(_DWORD *)(a2 + 105) = v45;
    int v46 = *(_DWORD *)v67;
    *(_DWORD *)(a2 + 124) = *(_DWORD *)&v67[3];
    *(_DWORD *)(a2 + 121) = v46;
    int v47 = *(_DWORD *)v66;
    *(_DWORD *)(a2 + 132) = *(_DWORD *)&v66[3];
    *(_DWORD *)(a2 + 129) = v47;
    LOBYTE(v47) = v65;
    int v48 = *(_DWORD *)v64;
    *(_DWORD *)(a2 + 172) = *(_DWORD *)&v64[3];
    *(_DWORD *)(a2 + 169) = v48;
    LOBYTE(v48) = v63;
    int v49 = *(_DWORD *)v62;
    *(_DWORD *)(a2 + 196) = *(_DWORD *)&v62[3];
    *(_DWORD *)(a2 + 193) = v49;
    *(void *)a2 = v57;
    *(unsigned char *)(a2 + 8) = v56;
    *(void *)(a2 + 16) = v5;
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = v9;
    *(void *)(a2 + 40) = v11;
    *(unsigned char *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = v28;
    *(void *)(a2 + 64) = v53;
    *(unsigned char *)(a2 + 72) = v33;
    *(void *)(a2 + 80) = v31;
    *(void *)(a2 + 88) = KeyPath;
    *(void *)(a2 + 96) = 2;
    *(unsigned char *)(a2 + 104) = 0;
    *(void *)(a2 + 112) = v51;
    *(unsigned char *)(a2 + 120) = 1;
    *(unsigned char *)(a2 + 128) = v50;
    *(void *)(a2 + 136) = v35;
    *(void *)(a2 + 144) = v37;
    *(void *)(a2 + 152) = v39;
    *(void *)(a2 + 160) = v41;
    *(unsigned char *)(a2 + 168) = v47;
    *(void *)(a2 + 176) = v42;
    *(void *)(a2 + 184) = v43;
    *(unsigned char *)(a2 + 192) = v48;
    *(void *)(a2 + 200) = v44;
    swift_retain();
    sub_1000A1750(v28, v53, v33);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000A1750(v42, v43, v55);
    swift_bridgeObjectRetain();
    sub_1000A06C0(v42, v43, v55);
    swift_bridgeObjectRelease();
    sub_1000A06C0(v28, v53, v33);
    swift_release();
    swift_release();
    swift_release();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10019D238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 contact];
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [v3 relationship];

    id v6 = [v5 cloudKitAddress];
    if (v6)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  sub_1000A06D0();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.subheadline.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  char v17 = v16 & 1;
  sub_1000A06C0(v7, v9, v11);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v18 = Text.foregroundColor(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  swift_release();
  sub_1000A06C0(v12, v14, v17);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v22 & 1;
  *(void *)(a2 + 24) = v24;
  return result;
}

void *sub_10019D3D8@<X0>(void *a1@<X8>)
{
  id v3 = *v1;
  static HorizontalAlignment.center.getter();
  sub_10019CE88(v3, (uint64_t)v5);
  *(_OWORD *)((char *)&v5[44] + 7) = *(_OWORD *)&v5[18];
  *(_OWORD *)((char *)&v5[46] + 7) = *(_OWORD *)&v5[20];
  *(_OWORD *)((char *)&v5[48] + 7) = *(_OWORD *)&v5[22];
  *(_OWORD *)((char *)&v5[50] + 7) = *(_OWORD *)&v5[24];
  *(_OWORD *)((char *)&v5[36] + 7) = *(_OWORD *)&v5[10];
  *(_OWORD *)((char *)&v5[38] + 7) = *(_OWORD *)&v5[12];
  *(_OWORD *)((char *)&v5[40] + 7) = *(_OWORD *)&v5[14];
  *(_OWORD *)((char *)&v5[42] + 7) = *(_OWORD *)&v5[16];
  *(_OWORD *)((char *)&v5[28] + 7) = *(_OWORD *)&v5[2];
  *(_OWORD *)((char *)&v5[30] + 7) = *(_OWORD *)&v5[4];
  *(_OWORD *)((char *)&v5[32] + 7) = *(_OWORD *)&v5[6];
  *(_OWORD *)((char *)&v5[34] + 7) = *(_OWORD *)&v5[8];
  *(_OWORD *)((char *)&v5[26] + 7) = *(_OWORD *)v5;
  char v6 = 0;
  static Alignment.center.getter();
  sub_1004DC7C8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)__src, 0.0, 1, 0.0, 1);
  sub_10019D558((uint64_t)v5);
  return memcpy(a1, __src, 0x158uLL);
}

uint64_t sub_10019D558(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 184);
  char v7 = *(unsigned char *)(a1 + 192);
  swift_release();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_10019D620()
{
  unint64_t result = qword_10094C9D8;
  if (!qword_10094C9D8)
  {
    sub_1000A1370(&qword_10094C9E0);
    sub_10019D69C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C9D8);
  }
  return result;
}

unint64_t sub_10019D69C()
{
  unint64_t result = qword_10094C9E8;
  if (!qword_10094C9E8)
  {
    sub_1000A1370(&qword_10094C9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C9E8);
  }
  return result;
}

uint64_t sub_10019D6F8()
{
  return sub_1001800EC();
}

uint64_t sub_10019D70C()
{
  return sub_1001800EC();
}

void sub_10019D720()
{
  id v1 = [*(id *)(v0 + 16) unitManager];
  if (v1)
  {
    uint64_t v2 = v1;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v5)
    {
      if (v5 == 1) {
        id v3 = [self kilocalorieUnit];
      }
      else {
        id v3 = [self jouleUnitWithMetricPrefix:9];
      }
    }
    else
    {
      id v3 = [self largeCalorieUnit];
    }
    id v4 = v3;
    [v2 setUserActiveEnergyBurnedUnit:v4];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10019D840()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_10019D8B4()
{
  id v1 = [*(id *)(v0 + 16) unitManager];
  if (v1)
  {
    uint64_t v2 = v1;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v4) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = 4;
    }
    [v2 setUserDistanceUnit:v3 forDistanceType:3];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10019D970()
{
  return sub_1001800EC();
}

uint64_t sub_10019D984()
{
  return sub_1001800EC();
}

uint64_t sub_10019D998()
{
  return sub_1001800EC();
}

uint64_t sub_10019D9AC()
{
  return sub_1001800EC();
}

uint64_t sub_10019D9C0()
{
  return sub_1001800EC();
}

uint64_t sub_10019D9D4()
{
  return sub_1001800EC();
}

uint64_t sub_10019D9E8()
{
  return sub_1001800EC();
}

void sub_10019D9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*(id *)(v3 + 16) unitManager];
  if (v5)
  {
    uint64_t v6 = v5;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v8) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = 3;
    }
    [v6 setUserDistanceUnit:v7 forDistanceType:a3];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10019DAC4()
{
  return sub_1001800EC();
}

uint64_t sub_10019DAD8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (((((a1 & 1) == 0) ^ LOBYTE(aBlock[0])) & 1) == 0)
  {
    uint64_t v22 = v5;
    uint64_t v13 = (void *)v2[3];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:LOBYTE(aBlock[0])];
    NSString v15 = String._bridgeToObjectiveC()();
    aBlock[0] = 0;
    unsigned int v16 = [v13 setNumber:v14 forKey:v15 error:aBlock];

    id v17 = aBlock[0];
    if (!v16)
    {
      uint64_t v18 = v17;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    sub_1000DF004();
    uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_1001A0110;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008B8BB0;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

void sub_10019DEB4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[4] = sub_10019DF60;
  void v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10000D15C;
  v3[3] = &unk_1008B8BD8;
  uint64_t v2 = _Block_copy(v3);
  [v1 forceNanoSyncWithOptions:0 completion:v2];
  _Block_release(v2);
}

void sub_10019DF60(char a1, uint64_t a2)
{
  if ((a1 & 1) == 0)
  {
    os_log_type_t v3 = static os_log_type_t.default.getter();
    uint64_t v4 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v3))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v5 = v4;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v8 = 0;
      }
      *uint64_t v7 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v3, "[UnitSettingsDataProvider] Failed to nano sync after updating track unit: %@", v6, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10019E10C()
{
  return sub_1001800EC();
}

void *sub_10019E120(void *a1, void *a2, int a3, int a4)
{
  int v45 = a3;
  int v46 = a4;
  uint64_t v43 = a1;
  id v44 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_10094CE10);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094CE18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000AFA94(&qword_10094CE20);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10094CE28);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v4[5] = _swiftEmptyArrayStorage;
  uint64_t v18 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__energyUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v17, v14);
  uint64_t v19 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__poolLengthUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v13, v39);
  uint64_t v20 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__cyclingWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v21(v20, v10, v7);
  uint64_t v22 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__walkingAndRunningWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v22, v10, v7);
  uint64_t v23 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__crossCountrySkiingWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v23, v10, v7);
  uint64_t v24 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__downhillSnowSportsWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v24, v10, v7);
  char v25 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__rowingWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v25, v10, v7);
  char v26 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__paddleSportsWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v26, v10, v7);
  char v27 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__skatingSportsWorkoutsUnit;
  char v48 = 0;
  Published.init(initialValue:)();
  v21(v27, v10, v7);
  uint64_t v28 = (char *)v4 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__trackWorkoutsUnit;
  char v48 = 1;
  uint64_t v29 = v40;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v28, v29, v42);
  uint64_t v30 = v43;
  v4[2] = v43;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v31 = objc_allocWithZone((Class)HKKeyValueDomain);
  id v32 = v30;
  id v33 = v44;
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = [v31 initWithCategory:0 domainName:v34 healthStore:v33];

  _OWORD v4[3] = v35;
  void v4[4] = [objc_allocWithZone((Class)HKNanoSyncControl) initWithHealthStore:v33];
  swift_beginAccess();
  char v47 = v45;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  char v47 = v46;
  Published.init(initialValue:)();
  swift_endAccess();
  sub_10019EB5C();
  sub_10019F20C();
  id v36 = v35;
  swift_retain();
  [v36 startObservation:v4];

  swift_release();
  return v4;
}

uint64_t sub_10019E738()
{
  [*(id *)(v0 + 24) stopObservation:v0];
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = self;
  swift_bridgeObjectRetain();
  id v3 = [v2 defaultCenter];
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = v1 + 32;
    swift_bridgeObjectRetain();
    id v7 = v4;
    do
    {
      sub_10008F484(v6, (uint64_t)v21);
      sub_10007E4EC(v21, v21[3]);
      [v7 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v21);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  else
  {

    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__isWheelchairUser;
  uint64_t v9 = sub_1000AFA94(&qword_1009687D0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__isAppleMoveTime, v9);
  uint64_t v11 = v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__energyUnit;
  uint64_t v12 = sub_1000AFA94(&qword_10094CE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__poolLengthUnit;
  uint64_t v14 = sub_1000AFA94(&qword_10094CE20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__cyclingWorkoutsUnit;
  uint64_t v16 = sub_1000AFA94(&qword_10094CE18);
  id v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  v17(v15, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__walkingAndRunningWorkoutsUnit, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__crossCountrySkiingWorkoutsUnit, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__downhillSnowSportsWorkoutsUnit, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__rowingWorkoutsUnit, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__paddleSportsWorkoutsUnit, v16);
  v17(v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__skatingSportsWorkoutsUnit, v16);
  uint64_t v18 = v0 + OBJC_IVAR____TtC10FitnessApp25UnitsSettingsDataProvider__trackWorkoutsUnit;
  uint64_t v19 = sub_1000AFA94(&qword_10094CE10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  return v0;
}

uint64_t sub_10019EAB0()
{
  sub_10019E738();

  return swift_deallocClassInstance();
}

uint64_t sub_10019EB08()
{
  return type metadata accessor for UnitsSettingsDataProvider();
}

uint64_t type metadata accessor for UnitsSettingsDataProvider()
{
  uint64_t result = qword_10094CA80;
  if (!qword_10094CA80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10019EB5C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = [v1 unitManager];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v3 = v2;
  id v4 = [v2 userActiveEnergyBurnedUnit];

  sub_1001A6F40(v4);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D720();
  id v5 = [v1 unitManager];
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = v5;
  id v7 = [v5 userDistanceUnitForDistanceType:3];

  sub_10055B460((uint64_t)v7);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D8B4();
  id v8 = [v1 unitManager];
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  id v10 = [v8 userDistanceUnitForDistanceType:2];

  sub_1002384A8((uint64_t)v10);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_100751590, (uint64_t)&unk_1007515B8, 2);
  id v11 = [v1 unitManager];
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = v11;
  id v13 = [v11 userDistanceUnitForDistanceType:1];

  sub_1002384A8((uint64_t)v13);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_1007515D8, (uint64_t)&unk_100751600, 1);
  id v14 = [v1 unitManager];
  if (!v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = v14;
  id v16 = [v14 userDistanceUnitForDistanceType:6];

  sub_1002384A8((uint64_t)v16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_100751620, (uint64_t)&unk_100751648, 6);
  id v17 = [v1 unitManager];
  if (!v17)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v18 = v17;
  id v19 = [v17 userDistanceUnitForDistanceType:7];

  sub_1002384A8((uint64_t)v19);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_100751668, (uint64_t)&unk_100751690, 7);
  id v20 = [v1 unitManager];
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v21 = v20;
  id v22 = [v20 userDistanceUnitForDistanceType:9];

  sub_1002384A8((uint64_t)v22);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_1007516B0, (uint64_t)&unk_1007516D8, 9);
  id v23 = [v1 unitManager];
  if (!v23)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v24 = v23;
  id v25 = [v23 userDistanceUnitForDistanceType:8];

  sub_1002384A8((uint64_t)v25);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_1007516F8, (uint64_t)&unk_100751720, 8);
  id v26 = [v1 unitManager];
  if (!v26)
  {
LABEL_23:
    __break(1u);
    return;
  }
  char v27 = v26;
  id v28 = [v26 userDistanceUnitForDistanceType:10];

  char v29 = sub_1002384A8((uint64_t)v28) & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019D9FC((uint64_t)&unk_100751740, (uint64_t)&unk_100751768, 10);
  v30._object = (void *)0x80000001007B68F0;
  v30._countAndFlagsBits = 0xD000000000000013;
  id v31 = (void *)HKKeyValueDomain.number(for:)(v30);
  if (v32)
  {
    swift_errorRelease();
    id v33 = 0;
  }
  else
  {
    id v33 = v31;
    if (v31) {
      [v31 integerValue];
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10019DAD8(v29);
}

uint64_t sub_10019F20C()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  if (qword_10094A6E0 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_100997870;
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 mainQueue];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  id v22 = sub_10019F984;
  uint64_t v23 = v7;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  id v20 = sub_1000711BC;
  uint64_t v21 = &unk_1008B8B60;
  id v8 = _Block_copy(&v18);
  swift_release();
  id v9 = [v2 addObserverForName:v5 object:0 queue:v6 usingBlock:v8];
  _Block_release(v8);

  id v10 = [v1 defaultCenter];
  uint64_t v11 = kFIUIFitnessUnitPreferencesDidChangeNotification;
  id v12 = [v4 mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  id v22 = sub_10019F98C;
  uint64_t v23 = v13;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  id v20 = sub_1000711BC;
  uint64_t v21 = &unk_1008B8B88;
  id v14 = _Block_copy(&v18);
  swift_release();
  id v15 = [v10 addObserverForName:v11 object:0 queue:v12 usingBlock:v14];
  _Block_release(v14);

  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10074E640;
  *(void *)(v16 + 56) = swift_getObjectType();
  *(void *)(v16 + 32) = v9;
  *(void *)(v16 + 88) = swift_getObjectType();
  *(void *)(v16 + 64) = v15;
  *(void *)(v0 + 40) = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019F514()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    return sub_100074898((uint64_t)&v7);
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000DEDB4((uint64_t)v6);
  if (!*((void *)&v8 + 1)) {
    return sub_100074898((uint64_t)&v7);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    char v5 = v6[0];
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v7) = v5;
      return static Published.subscript.setter();
    }
  }
  return result;
}

uint64_t sub_10019F670()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10019EB5C();
    return swift_release();
  }
  return result;
}

void sub_10019F714()
{
  sub_1000DD420(319, (unint64_t *)&qword_100968730);
  if (v0 <= 0x3F)
  {
    sub_1000DD420(319, &qword_10094CA90);
    if (v1 <= 0x3F)
    {
      sub_1000DD420(319, &qword_10094CA98);
      if (v2 <= 0x3F)
      {
        sub_1000DD420(319, &qword_10094CAA0);
        if (v3 <= 0x3F)
        {
          sub_1000DD420(319, (unint64_t *)&unk_10094CAA8);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_10019F90C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UnitsSettingsDataProvider();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10019F94C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10019F984()
{
  return sub_10019F514();
}

uint64_t sub_10019F98C()
{
  return sub_10019F670();
}

uint64_t sub_10019F994@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_10019FA14()
{
}

uint64_t sub_10019FA8C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FAA0()
{
}

uint64_t sub_10019FB18@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_10019FB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t sub_10019FBDC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FC08@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_10019FC1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  return sub_10019DAD8(v1);
}

uint64_t sub_10019FCE8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FD14@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FD40@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FD6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FD98@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FDC4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_10019FDD8()
{
  return sub_1001821E8();
}

uint64_t sub_10019FDEC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_10019FE00()
{
  return sub_1001821E8();
}

uint64_t sub_10019FE14@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_10019FE3C()
{
  return sub_1001821E8();
}

uint64_t sub_10019FE6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_10019FE98@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FEEC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FF40@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FF94@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_10019FFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10019FFE8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_1001A0010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001A003C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_1001A0064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001A0090@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_1001A00B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1001A00E4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

void sub_1001A0110()
{
  sub_10019DEB4(v0);
}

uint64_t sub_1001A0118@<X0>(unsigned char *a1@<X8>)
{
  return sub_100182130(a1);
}

uint64_t sub_1001A0140()
{
  return sub_1001821E8();
}

uint64_t sub_1001A0168()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DF004();
  id v9 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1001A03D0;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008B8C00;
  id v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1001A03F0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)a1 + v9 + 24) = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = a3[6];
    id v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)((char *)a2 + v11 + 24);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }
    else
    {
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)id v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
    uint64_t v17 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  swift_retain();
  return a1;
}

char *sub_1001A05B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  long long v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)long long v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  *((void *)v13 + 4) = *((void *)v14 + 4);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v16] = a2[v16];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_1001A06D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A06E8);
}

uint64_t sub_1001A06E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001A07B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A07C4);
}

uint64_t sub_1001A07C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1001A0888(uint64_t a1, void (*a2)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for DashboardCardView();
  sub_1000AEF2C(a1 + *(int *)(v4 + 24), (uint64_t)v13, &qword_10094C750);
  if (!v14) {
    return sub_10008DB18((uint64_t)v13, &qword_10094C750);
  }
  int v5 = sub_10007E4EC(v13, v14);
  uint64_t v6 = (void *)(a1 + *(int *)(v4 + 20));
  memset(v12, 0, sizeof(v12));
  uint64_t v7 = *v5;
  uint64_t v8 = v6[3];
  uint64_t v9 = v6[4];
  unint64_t v10 = sub_10007E4EC(v6, v8);
  a2(v10, v12, v7, v8, v9);
  sub_10008DB18((uint64_t)v12, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v13);
}

uint64_t sub_1001A098C()
{
  return sub_1001A09D8((void (*)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))sub_100676328);
}

uint64_t sub_1001A09A8()
{
  return sub_1001A09D8((void (*)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))sub_100677794);
}

uint64_t sub_1001A09D8(void (*a1)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for DashboardCardView() - 8);
  return sub_1001A0888(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

unint64_t sub_1001A0A44()
{
  unint64_t result = qword_10094D2A8;
  if (!qword_10094D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2A8);
  }
  return result;
}

unint64_t sub_1001A0A9C()
{
  unint64_t result = qword_10094D2B0;
  if (!qword_10094D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2B0);
  }
  return result;
}

unint64_t sub_1001A0AF4()
{
  unint64_t result = qword_10094D2B8;
  if (!qword_10094D2B8)
  {
    sub_1000A1370(qword_10094D2C0);
    sub_1001A0A9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2B8);
  }
  return result;
}

uint64_t sub_1001A0B68()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v0, qword_1009975B0);
  sub_1000876DC(v0, (uint64_t)qword_1009975B0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001A0BCC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D370);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D378);
  __chkstk_darwin(v1);
  sub_1001A1208();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001007B6990;
  v2._countAndFlagsBits = 0xD000000000000019;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_10094D380);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1001A0D5C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001A0D80()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1001A0DB8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  Swift::String v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *Swift::String v2 = v1;
  v2[1] = sub_1001A0E60;
  return _swift_task_switch(sub_1001A188C, 0, 0);
}

uint64_t sub_1001A0E60(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1001A0F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10005DB5C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_1001A102C()
{
  unint64_t result = qword_10094D2D8;
  if (!qword_10094D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2D8);
  }
  return result;
}

unint64_t sub_1001A1084()
{
  unint64_t result = qword_10094D2E0;
  if (!qword_10094D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2E0);
  }
  return result;
}

uint64_t sub_1001A10D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1001A111C()
{
  return IntentParameter.wrappedValue.setter();
}

void (*sub_1001A115C(void *a1))(void *a1)
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1001A11B8;
}

void sub_1001A11B8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_1001A1208()
{
  unint64_t result = qword_10094D2E8;
  if (!qword_10094D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2E8);
  }
  return result;
}

uint64_t sub_1001A125C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1001A1FD0();
  unint64_t v5 = sub_1001A2078();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_1001A12C8()
{
  unint64_t result = qword_10094D2F0;
  if (!qword_10094D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2F0);
  }
  return result;
}

unint64_t sub_1001A1320()
{
  unint64_t result = qword_10094D2F8;
  if (!qword_10094D2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D2F8);
  }
  return result;
}

unint64_t sub_1001A1378()
{
  unint64_t result = qword_10094D300;
  if (!qword_10094D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D300);
  }
  return result;
}

uint64_t sub_1001A13CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A13E8@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A5C0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009975B0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001A1490(uint64_t a1)
{
  unint64_t v2 = sub_1001A1FD0();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1001A14DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1001A1FD0();
  unint64_t v6 = sub_1001A2024();
  unint64_t v7 = sub_1001A2078();
  *unint64_t v4 = v2;
  v4[1] = sub_1001A15A8;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1001A15A8()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1001A16B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001A1B80();
  *a1 = result;
  return result;
}

uint64_t sub_1001A16D8(uint64_t a1)
{
  unint64_t v2 = sub_1001A1208();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenHistoryIntent()
{
  return &type metadata for OpenHistoryIntent;
}

void *sub_1001A1728(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CatalogTipCardFactory(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CatalogTipCardFactory(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OpenHistoryIntent.HistoryFilterOptionsProvider()
{
  return &type metadata for OpenHistoryIntent.HistoryFilterOptionsProvider;
}

unint64_t sub_1001A1814()
{
  unint64_t result = qword_10094D310;
  if (!qword_10094D310)
  {
    sub_1000A1370(&qword_10094D318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D310);
  }
  return result;
}

uint64_t sub_1001A1870()
{
  return _swift_task_switch(sub_1001A188C, 0, 0);
}

uint64_t sub_1001A188C()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  v0[2] = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D390);
  static AppDependencyManager.shared.getter();
  uint64_t v1 = AppDependency.__allocating_init(key:manager:)();
  v0[3] = v1;
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009596F0 + dword_1009596F0);
  unint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1001A19B8;
  return v4(v1);
}

uint64_t sub_1001A19B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1001A1B14, 0, 0);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1001A1B14()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001A1B80()
{
  uint64_t v20 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v19 = sub_1000AFA94(&qword_10094D330);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v24 = 0;
  __int16 v25 = 512;
  uint64_t v14 = type metadata accessor for IntentDialog();
  long long v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v23 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v16 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t v17 = AppDependency.__allocating_init(key:manager:)();
  *(void *)&long long v21 = v16;
  *((void *)&v21 + 1) = v17;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v20);
  sub_1001A1F28();
  sub_1001A1F7C();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
}

unint64_t sub_1001A1F28()
{
  unint64_t result = qword_10094D348;
  if (!qword_10094D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D348);
  }
  return result;
}

unint64_t sub_1001A1F7C()
{
  unint64_t result = qword_10094D350;
  if (!qword_10094D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D350);
  }
  return result;
}

unint64_t sub_1001A1FD0()
{
  unint64_t result = qword_10094D358;
  if (!qword_10094D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D358);
  }
  return result;
}

unint64_t sub_1001A2024()
{
  unint64_t result = qword_10094D360;
  if (!qword_10094D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D360);
  }
  return result;
}

unint64_t sub_1001A2078()
{
  unint64_t result = qword_10094D368;
  if (!qword_10094D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D368);
  }
  return result;
}

uint64_t sub_1001A20CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1001A2144()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutActivityCacheContainer();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutActivityCacheContainer()
{
  return self;
}

uint64_t sub_1001A21AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A2220()
{
  return sub_1001A22C0();
}

uint64_t sub_1001A2234()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1001A22AC()
{
  return sub_1001A22C0();
}

uint64_t sub_1001A22C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_1000AFA94(&qword_10094B7A0);
  v3[4] = swift_task_alloc();
  return _swift_task_switch(sub_1001A23C0, 0, 0);
}

uint64_t sub_1001A23C0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  _OWORD v4[3] = 0;
  void v4[4] = v3;
  sub_1005CF37C(v1, (uint64_t)&unk_10094D6B0, (uint64_t)v4);
  sub_10008DB18(v1, &qword_10094B7A0);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1001A24E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_1001A2500, 0, 0);
}

uint64_t sub_1001A2500()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1001A2F18();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001A2590(char *a1, char *a2)
{
  uint64_t v83 = a1;
  uint64_t v4 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v4 - 8);
  uint64_t v86 = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v78 = (char *)&v78 - v7;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  id v81 = (void (*)(uint64_t, char *, uint64_t))((char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v82 = (char *)&v78 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v78 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v90 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v78 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v78 - v22;
  *(void *)&double v25 = __chkstk_darwin(v24).n128_u64[0];
  char v27 = (char *)&v78 - v26;
  id v80 = *(id *)(v2 + 64);
  uint64_t v84 = a2;
  id v28 = [v80 formattedHeartRate:a2 context:@"WorkoutDetailDisplayContext" v25];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v91 = v28;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v87 = v2;
  uint64_t v88 = v23;
  char v29 = *(void **)(v2 + 24);
  uint64_t v89 = v20;
  if (v29)
  {
    id v30 = [v29 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31(v14, v23, v15);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v32(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v31(v27, v14, v15);
      uint64_t v33 = v87;
      uint64_t v34 = v15;
      uint64_t v36 = (uint64_t)v81;
      uint64_t v35 = (uint64_t)v82;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v32(v14, 1, 1, v15);
  }
  uint64_t v33 = v87;
  uint64_t v34 = v15;
  uint64_t v36 = (uint64_t)v81;
  uint64_t v35 = (uint64_t)v82;
  id v37 = [*(id *)(v87 + 16) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095B890);
  if (!v29)
  {
    v32((char *)v35, 1, 1, v34);
    uint64_t v38 = (uint64_t)v88;
    uint64_t v39 = v89;
LABEL_12:
    id v43 = [*(id *)(v33 + 16) endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10008DB18(v35, (uint64_t *)&unk_10095B890);
    goto LABEL_14;
  }
LABEL_8:
  id v40 = [v29 endDate];
  if (v40)
  {
    uint64_t v41 = v40;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = 1;
  }
  uint64_t v38 = (uint64_t)v88;
  uint64_t v39 = v89;
  v32((char *)v36, v42, 1, v34);
  sub_1000AEEC8(v36, v35, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v35, 1, v34) == 1) {
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v39, v35, v34);
LABEL_14:
  id v44 = v84;
  int v45 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 16);
  uint64_t v84 = v27;
  v45(v38, v27, v34);
  uint64_t v46 = (uint64_t)v90;
  id v81 = v45;
  v45((uint64_t)v90, v39, v34);
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  uint64_t v47 = sub_10033A6D0(v38, v46, 0, 1, 0, 1, 1, 10.0, 90.0);
  char v48 = sub_1001A59C4((unint64_t)v83, v47);
  int v49 = sub_1002687F4(v47);
  id v50 = [v80 fitnessUIFormattingManager];
  [v44 doubleValue];
  id v51 = [v50 localizedStringWithBeatsPerMinute:1 requirePositiveValue:YES];

  uint64_t v85 = v16;
  uint64_t v82 = (char *)v47;
  uint64_t v83 = v48;
  uint64_t v79 = v49;
  uint64_t v52 = v34;
  if (v51)
  {
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  char v56 = self;
  id v57 = [v56 mainBundle];
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = [v57 localizedStringForKey:v58 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1007509E0;
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = sub_1000AA64C();
  if (!v55)
  {
    id v61 = [v56 mainBundle];
    NSString v62 = String._bridgeToObjectiveC()();
    id v63 = [v61 localizedStringForKey:v62 value:0 table:0];

    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v64;
  }
  uint64_t v65 = (uint64_t)v78;
  *(void *)(v60 + 32) = v53;
  *(void *)(v60 + 40) = v55;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v66 = objc_allocWithZone((Class)NSAttributedString);
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v68 = [v66 initWithString:v67];

  uint64_t v69 = (uint64_t)v88;
  uint64_t v70 = v84;
  char v71 = (void (*)(char *, char *, uint64_t))v81;
  v81((uint64_t)v88, v84, v52);
  char v73 = v89;
  uint64_t v72 = (uint64_t)v90;
  v71(v90, v89, v52);
  char v74 = (void *)swift_retain();
  sub_100377610(0, 0, 0xE000000000000000, v68, v83, 1, v69, v72, v65, (uint64_t)v79, 0, v74);
  uint64_t v75 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v65, 0, 1, v75);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1001A58D4(v65, v86);
  swift_retain();
  static Published.subscript.setter();
  sub_10008DB18(v65, &qword_10094D448);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v91 = v82;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v76 = *(void (**)(char *, uint64_t))(v85 + 8);
  v76(v73, v52);
  return ((uint64_t (*)(char *, uint64_t))v76)(v70, v52);
}

void sub_1001A2F18()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v1;
  void v8[4] = sub_1001A5974;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1005CF57C;
  v8[3] = &unk_1008B8E38;
  uint64_t v7 = _Block_copy(v8);
  swift_release();
  [v2 heartRateDataForWorkout:v3 workoutActivity:v4 completion:v7];
  _Block_release(v7);
}

uint64_t sub_1001A304C(unint64_t a1, char *a2, void *a3, uint64_t a4)
{
  id v216 = a3;
  unint64_t v207 = (unint64_t)a2;
  unint64_t v211 = a1;
  uint64_t v5 = type metadata accessor for WorkoutChartViewModel(0);
  unint64_t v206 = *(void *)(v5 - 8);
  unint64_t v6 = *(void *)(v206 + 64);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v198 = (uint64_t)v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v208 = (uint64_t)v180 - v9;
  __chkstk_darwin(v8);
  uint64_t v209 = (uint64_t)v180 - v10;
  uint64_t v205 = type metadata accessor for Logger();
  uint64_t v204 = *(void **)(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v203 = (char *)v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v201 = (char *)v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v202 = (char *)v180 - v15;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v212 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v199 = (char *)v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v200 = (char *)v180 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v210 = (char *)v180 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  long long v214 = (char *)v180 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  long long v213 = (char *)v180 - v26;
  __chkstk_darwin(v25);
  long long v215 = (char *)v180 - v27;
  uint64_t v217 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  id v30 = (char *)v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v36 = result;
  if (a4)
  {
    swift_errorRetain();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    uint64_t v38 = (void *)HKLogWorkouts;
    os_log_type_t v39 = v37;
    if (!os_log_type_enabled(HKLogWorkouts, v37))
    {
      swift_release();
      return swift_errorRelease();
    }
    swift_errorRetain();
    swift_errorRetain();
    id v40 = v38;
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315138;
    swift_getErrorValue();
    uint64_t v42 = Error.localizedDescription.getter();
    uint64_t v218 = sub_10008F1F4(v42, v43, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v39, "Error getting heart rates: %s", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    return swift_release();
  }
  unint64_t v185 = v6;
  uint64_t v197 = v16;
  uint64_t v188 = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v195 = static OS_dispatch_queue.main.getter();
  uint64_t v44 = swift_allocObject();
  id v45 = v216;
  *(void *)(v44 + 16) = v36;
  *(void *)(v44 + 24) = v45;
  long long v223 = sub_1001A59BC;
  uint64_t v224 = v44;
  aBlock = _NSConcreteStackBlock;
  uint64_t v220 = 1107296256;
  long long v221 = sub_100070394;
  long long v222 = &unk_1008B8E88;
  uint64_t v46 = _Block_copy(&aBlock);
  id v184 = v45;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock = _swiftEmptyArrayStorage;
  uint64_t v47 = sub_1000677AC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v48 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
  unint64_t v49 = sub_100075AF8();
  uint64_t v187 = v48;
  unint64_t v186 = v49;
  id v50 = (char *)v36;
  uint64_t v51 = v217;
  uint64_t v189 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v52 = (void *)v195;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v46);

  uint64_t v53 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v196 = v30;
  uint64_t v195 = v28 + 8;
  uint64_t v191 = v53;
  v53(v30, v51);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v192 = v34;
  uint64_t v194 = v31;
  uint64_t v193 = v32 + 8;
  uint64_t v190 = v54;
  v54(v34, v31);
  unint64_t v55 = v211;
  if (!v211) {
    return swift_release();
  }
  if (v211 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v56 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v57 = v197;
  NSString v58 = v50;
  id v59 = v196;
  if (!v56) {
    return swift_release();
  }
  uint64_t v60 = (void *)*((void *)v50 + 3);
  id v61 = v215;
  if (!v60) {
    goto LABEL_18;
  }
  id v62 = v60;
  id v63 = [v62 endDate];
  if (!v63)
  {
    uint64_t v68 = (uint64_t)v202;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v212 + 56))(v202, 1, 1, v197);
    goto LABEL_17;
  }
  uint64_t v64 = v63;
  uint64_t v65 = v214;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v66 = v212;
  NSString v67 = *(void (**)(char *, char *, uint64_t))(v212 + 32);
  uint64_t v68 = (uint64_t)v202;
  uint64_t v69 = v65;
  uint64_t v70 = v197;
  v67(v202, v69, v197);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v68, 0, 1, v70);
  uint64_t v71 = v70;
  id v61 = v215;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v68, 1, v71) == 1)
  {
LABEL_17:

    sub_10008DB18(v68, (uint64_t *)&unk_10095B890);
    uint64_t v57 = v197;
LABEL_18:
    id v75 = [*((id *)v50 + 2) startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v62 = [*((id *)v50 + 2) endDate];
    char v74 = v213;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_19;
  }
  uint64_t v72 = v213;
  uint64_t v57 = v197;
  v67(v213, (char *)v68, v197);
  id v73 = [v62 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  char v74 = v72;
LABEL_19:

  uint64_t v76 = (char *)(v212 + 16);
  id v77 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
  uint64_t v78 = (uint64_t)v214;
  v77(v214, v61, v57);
  uint64_t v79 = (uint64_t)v210;
  uint64_t v202 = v76;
  uint64_t v183 = v77;
  v77(v210, v74, v57);
  v180[1] = type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  unint64_t v211 = sub_10033A6D0(v78, v79, 0, 1, 0, 1, 1, 10.0, 90.0);
  long long v181 = sub_1001A59C4(v55, v211);
  id v81 = (void *)*((void *)v58 + 2);
  id v80 = (void *)*((void *)v58 + 3);
  type metadata accessor for WorkoutHeartRateInfo();
  swift_allocObject();
  id v82 = v80;
  uint64_t v83 = sub_100367C30(v81, v80);
  uint64_t v84 = v203;
  static WOLog.app.getter();
  swift_retain_n();
  uint64_t v85 = Logger.logObject.getter();
  os_log_type_t v86 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = (uint8_t *)swift_slowAlloc();
    aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 136315138;
    v180[0] = v87 + 4;
    swift_retain();
    uint64_t v88 = sub_100367680();
    unint64_t v90 = v89;
    swift_release();
    uint64_t v218 = sub_10008F1F4(v88, v90, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "[HeartRate] Loaded heartRateInfo: %s", v87, 0xCu);
    swift_arrayDestroy();
    id v59 = v196;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  ((void (*)(char *, uint64_t))v204[1])(v84, v205);
  uint64_t v91 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = v58;
  *(void *)(v92 + 24) = v83;
  long long v223 = sub_1001A6834;
  uint64_t v224 = v92;
  aBlock = _NSConcreteStackBlock;
  uint64_t v220 = 1107296256;
  long long v221 = sub_100070394;
  long long v222 = &unk_1008B8ED8;
  uint64_t v93 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v94 = v192;
  static DispatchQoS.unspecified.getter();
  aBlock = _swiftEmptyArrayStorage;
  uint64_t v95 = v217;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v93);

  v191(v59, v95);
  v190(v94, v194);
  double v96 = COERCE_DOUBLE(sub_100367310());
  uint64_t v97 = 0;
  if (v98)
  {
    uint64_t v99 = v211;
  }
  else
  {
    uint64_t v99 = v211;
    if (v96 > 0.0) {
      uint64_t v97 = sub_10036745C();
    }
  }
  uint64_t v205 = v97;
  uint64_t v204 = sub_1002687F4(v99);
  id v100 = [*((id *)v58 + 8) fitnessUIFormattingManager];
  if (v216) {
    [v184 doubleValue];
  }
  else {
    double v101 = -1.0;
  }
  id v102 = [v100 localizedStringWithBeatsPerMinute:1 requirePositiveValue:v101];

  uint64_t v182 = v83;
  if (v102)
  {
    uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v105 = v104;
  }
  else
  {
    uint64_t v103 = 0;
    uint64_t v105 = 0;
  }
  uint64_t v106 = self;
  id v107 = [v106 mainBundle];
  NSString v108 = String._bridgeToObjectiveC()();
  id v109 = [v107 localizedStringForKey:v108 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_1007509E0;
  *(void *)(v110 + 56) = &type metadata for String;
  *(void *)(v110 + 64) = sub_1000AA64C();
  if (!v105)
  {
    id v111 = [v106 mainBundle];
    NSString v112 = String._bridgeToObjectiveC()();
    id v113 = [v111 localizedStringForKey:v112 value:0 table:0];

    uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v105 = v114;
  }
  *(void *)(v110 + 32) = v103;
  *(void *)(v110 + 40) = v105;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v216 = v106;
  id v115 = [v106 mainBundle];
  NSString v116 = String._bridgeToObjectiveC()();
  id v117 = [v115 localizedStringForKey:v116 value:0 table:0];

  uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v120 = v119;

  id v121 = objc_allocWithZone((Class)NSAttributedString);
  NSString v122 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v123 = [v121 initWithString:v122];

  uint64_t v124 = (uint64_t)v214;
  uint64_t v125 = v197;
  uint64_t v126 = v183;
  v183(v214, v215, v197);
  uint64_t v127 = (uint64_t)v210;
  v126(v210, v213, v125);
  id v128 = (void *)*((void *)v58 + 7);
  uint64_t v129 = v205;
  swift_retain();
  swift_retain();
  uint64_t v130 = v209;
  sub_100377610(0, v118, v120, v123, v181, 1, v124, v127, v209, (uint64_t)v204, v129, v128);
  id v131 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v132 = v208;
  sub_1001A6B48(v130, v208, type metadata accessor for WorkoutChartViewModel);
  uint64_t v133 = *(unsigned __int8 *)(v206 + 80);
  long long v134 = (void *)((v133 + 24) & ~v133);
  unint64_t v135 = ((unint64_t)v134 + v185 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v185 = v135 + 8;
  uint64_t v203 = (char *)(v133 | 7);
  uint64_t v136 = swift_allocObject();
  *(void *)(v136 + 16) = v58;
  uint64_t v204 = v134;
  sub_1000C8EC8(v132, (uint64_t)v134 + v136, type metadata accessor for WorkoutChartViewModel);
  unint64_t v206 = v135;
  *(void *)(v136 + v135) = v211;
  long long v223 = sub_1001A6840;
  uint64_t v224 = v136;
  aBlock = _NSConcreteStackBlock;
  uint64_t v220 = 1107296256;
  long long v221 = sub_100070394;
  long long v222 = &unk_1008B8F28;
  uint64_t v137 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v138 = v192;
  static DispatchQoS.unspecified.getter();
  aBlock = _swiftEmptyArrayStorage;
  char v139 = v196;
  uint64_t v140 = v217;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v137);

  v191(v139, v140);
  v190(v138, v194);
  unint64_t v141 = v207;
  if (!v207)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1001A6BB0(v130, type metadata accessor for WorkoutChartViewModel);
    uint64_t v177 = *(void (**)(char *, uint64_t))(v212 + 8);
    uint64_t v178 = v197;
    v177(v213, v197);
    return ((uint64_t (*)(char *, uint64_t))v177)(v215, v178);
  }
  uint64_t v142 = v212;
  if (v207 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v143 = result;
  }
  else
  {
    uint64_t v143 = *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v144 = v197;
  uint64_t v145 = v214;
  uint64_t v146 = (uint64_t)v201;
  if (v143)
  {
    if ((v141 & 0xC000000000000001) != 0)
    {
      id v147 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      id v147 = *(id *)(v141 + 32);
    }
    uint64_t v148 = v147;
    swift_bridgeObjectRelease();
    id v149 = [v148 date];

    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v150 = *(void (**)(void))(v142 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v150)(v146, v145, v144);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v142 + 56))(v146, 0, 1, v144);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v146, 1, v144) != 1)
    {
      uint64_t v201 = v58;
      uint64_t v151 = v200;
      v150();
      Date.addingTimeInterval(_:)();
      uint64_t v152 = (uint64_t)v210;
      uint64_t v153 = v183;
      v183(v210, v151, v144);
      uint64_t v154 = (uint64_t)v199;
      v153(v199, v145, v144);
      swift_allocObject();
      id v184 = (id)sub_10033A6D0(v152, v154, 0, 1, 0, 1, 1, 10.0, 90.0);
      unint64_t v207 = (unint64_t)sub_1001A59C4(v141, (uint64_t)v184);
      long long v155 = v145;
      id v156 = [v216 mainBundle];
      NSString v157 = String._bridgeToObjectiveC()();
      uint64_t v158 = v144;
      id v159 = [v156 localizedStringForKey:v157 value:0 table:0];

      uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v162 = v161;

      id v163 = [objc_allocWithZone((Class)NSAttributedString) init];
      uint64_t v164 = (uint64_t)v210;
      v153(v210, v200, v158);
      uint64_t v165 = (uint64_t)v199;
      v153(v199, v155, v158);
      uint64_t v166 = v201;
      long long v167 = (void *)swift_retain();
      uint64_t v168 = v208;
      sub_100377610(0, v160, v162, v163, (void *)v207, 1, v164, v165, v208, (uint64_t)_swiftEmptyArrayStorage, 0, v167);
      id v216 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v169 = v198;
      sub_1001A6B48(v168, v198, type metadata accessor for WorkoutChartViewModel);
      uint64_t v170 = swift_allocObject();
      *(void *)(v170 + 16) = v166;
      sub_1000C8EC8(v169, (uint64_t)v204 + v170, type metadata accessor for WorkoutChartViewModel);
      *(void *)(v170 + v206) = v184;
      long long v223 = sub_1001A6A38;
      uint64_t v224 = v170;
      aBlock = _NSConcreteStackBlock;
      uint64_t v220 = 1107296256;
      long long v221 = sub_100070394;
      long long v222 = &unk_1008B8F78;
      uint64_t v171 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      char v172 = v192;
      static DispatchQoS.unspecified.getter();
      aBlock = _swiftEmptyArrayStorage;
      uint64_t v173 = v196;
      uint64_t v174 = v217;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v175 = v216;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v171);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v191(v173, v174);
      v190(v172, v194);
      sub_1001A6BB0(v168, type metadata accessor for WorkoutChartViewModel);
      int v176 = *(void (**)(char *, uint64_t))(v212 + 8);
      v176(v214, v158);
      v176(v200, v158);
      sub_1001A6BB0(v209, type metadata accessor for WorkoutChartViewModel);
      v176(v213, v158);
      return ((uint64_t (*)(char *, uint64_t))v176)(v215, v158);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v146, 1, 1, v144);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001A6BB0(v209, type metadata accessor for WorkoutChartViewModel);
  uint64_t v179 = *(void (**)(char *, uint64_t))(v142 + 8);
  v179(v213, v144);
  v179(v215, v144);
  return sub_10008DB18(v146, (uint64_t *)&unk_10095B890);
}

uint64_t sub_1001A4B40(uint64_t a1, uint64_t a2)
{
  return static Published.subscript.setter();
}

uint64_t sub_1001A4BDC()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001A4C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094D448);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - v10;
  sub_1001A6B48(a2, (uint64_t)&v15 - v10, type metadata accessor for WorkoutChartViewModel);
  uint64_t v12 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1001A58D4((uint64_t)v11, (uint64_t)v9);
  swift_retain();
  static Published.subscript.setter();
  sub_10008DB18((uint64_t)v11, &qword_10094D448);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v16 = a3;
  swift_retain();
  swift_retain();
  static Published.subscript.setter();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v16)
    {
      *(void *)(v16 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate + 8) = v14;
      swift_unknownObjectWeakAssign();
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1001A4E94()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__averageHeartRate;
  uint64_t v2 = sub_1000AFA94(&qword_10094D6D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__heartRateInfo;
  uint64_t v4 = sub_1000AFA94(&qword_10094D6C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutData;
  uint64_t v6 = sub_1000AFA94(&qword_10094D6C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutProperties;
  uint64_t v8 = sub_1000AFA94(&qword_10094D6B8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_1001A4FDC()
{
  uint64_t v0 = sub_100268534();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__averageHeartRate;
  uint64_t v2 = sub_1000AFA94(&qword_10094D6D0);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__heartRateInfo;
  uint64_t v4 = sub_1000AFA94(&qword_10094D6C8);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutData;
  uint64_t v6 = sub_1000AFA94(&qword_10094D6C0);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutProperties;
  uint64_t v8 = sub_1000AFA94(&qword_10094D6B8);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A5160()
{
  return type metadata accessor for WorkoutDetailHeartRateDataStore();
}

uint64_t type metadata accessor for WorkoutDetailHeartRateDataStore()
{
  uint64_t result = qword_10094D410;
  if (!qword_10094D410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001A51B4()
{
  sub_1001A5324();
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_10094D430, &qword_10094D438);
    if (v1 <= 0x3F)
    {
      sub_100181968(319, &qword_10094D440, &qword_10094D448);
      if (v2 <= 0x3F)
      {
        sub_100181968(319, &qword_10094D450, (uint64_t *)&unk_10094D458);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1001A5324()
{
  if (!qword_10094D420)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_10094D428);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094D420);
    }
  }
}

uint64_t sub_1001A538C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailHeartRateDataStore();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A53CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001A5404()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A5444()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  void v3[5] = v2;
  return _swift_task_switch(sub_1001A2500, 0, 0);
}

void *sub_1001A54F0(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_10094D6B8);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  __chkstk_darwin(v5);
  uint64_t v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AFA94(&qword_10094D6C0);
  uint64_t v7 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10094D448);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_10094D6C8);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v4 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__heartRateInfo;
  uint64_t v36 = 0;
  swift_retain();
  sub_1000AFA94(&qword_10094D438);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v21 = v4 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutData;
  uint64_t v22 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
  sub_1001A58D4((uint64_t)v15, (uint64_t)v13);
  Published.init(initialValue:)();
  sub_10008DB18((uint64_t)v15, &qword_10094D448);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21, v9, v27);
  uint64_t v23 = v4 + OBJC_IVAR____TtC10FitnessApp31WorkoutDetailHeartRateDataStore__postWorkoutProperties;
  uint64_t v36 = 0;
  sub_1000AFA94((uint64_t *)&unk_10094D458);
  uint64_t v24 = v28;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23, v24, v30);
  id v25 = [objc_allocWithZone((Class)NSAttributedString) init];
  swift_beginAccess();
  id v35 = v25;
  sub_10007E2D8(0, (unint64_t *)&qword_10094D428);
  Published.init(initialValue:)();
  swift_endAccess();
  swift_release();
  return sub_10026952C(v31, v32, v33, v34);
}

uint64_t sub_1001A58D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094D448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A593C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A5974(unint64_t a1, char *a2, void *a3, uint64_t a4)
{
  return sub_1001A304C(a1, a2, a3, a4);
}

uint64_t sub_1001A597C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A59BC()
{
  return sub_1001A4B40(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

char *sub_1001A59C4(unint64_t a1, uint64_t a2)
{
  uint64_t v103 = a2;
  uint64_t v3 = type metadata accessor for NSIndexSetIterator();
  unint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v83 - v8;
  uint64_t v10 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v108 = (uint64_t)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v107 = (char *)&v83 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094D6D8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = (void *)type metadata accessor for Date();
  uint64_t v95 = *(v20 - 1);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v106 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v104 = (void (**)(char *, uint64_t))((char *)&v83 - v24);
  uint64_t v25 = __chkstk_darwin(v23);
  id v102 = (char *)&v83 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v100 = (uint64_t)&v83 - v28;
  __chkstk_darwin(v27);
  uint64_t v94 = (char *)&v83 - v29;
  if (a1 >> 62) {
    goto LABEL_82;
  }
  uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    id v109 = v20;
    char v98 = v17;
    uint64_t v99 = v19;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v57 = _swiftEmptyDictionarySingleton;
LABEL_30:
      uint64_t v58 = v57[8];
      uint64_t v92 = (uint64_t)(v57 + 8);
      uint64_t v59 = 1 << *((unsigned char *)v57 + 32);
      uint64_t v60 = -1;
      if (v59 < 64) {
        uint64_t v60 = ~(-1 << v59);
      }
      unint64_t v61 = v60 & v58;
      uint64_t v94 = (char *)(v95 + 16);
      uint64_t v104 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v105 = (char *)(v95 + 32);
      uint64_t v93 = (char *)((unint64_t)(v59 + 63) >> 6);
      uint64_t v91 = v93 - 1;
      double v101 = v57;
      uint64_t result = (char *)swift_bridgeObjectRetain();
      uint64_t v100 = 0;
      a1 = (unint64_t)_swiftEmptyArrayStorage;
      if (v61)
      {
LABEL_33:
        uint64_t v103 = (v61 - 1) & v61;
        unint64_t v62 = __clz(__rbit64(v61)) | (v100 << 6);
      }
      else
      {
        while (1)
        {
          uint64_t v68 = v100 + 1;
          if (__OFADD__(v100, 1)) {
            goto LABEL_78;
          }
          if (v68 < (uint64_t)v93)
          {
            unint64_t v69 = *(void *)(v92 + 8 * v68);
            if (v69) {
              goto LABEL_38;
            }
            uint64_t v70 = v100 + 2;
            ++v100;
            if (v68 + 1 < (uint64_t)v93)
            {
              unint64_t v69 = *(void *)(v92 + 8 * v70);
              if (v69) {
                goto LABEL_41;
              }
              uint64_t v100 = v68 + 1;
              if (v68 + 2 < (uint64_t)v93)
              {
                unint64_t v69 = *(void *)(v92 + 8 * (v68 + 2));
                if (v69)
                {
                  v68 += 2;
                  goto LABEL_38;
                }
                uint64_t v70 = v68 + 3;
                uint64_t v100 = v68 + 2;
                if (v68 + 3 < (uint64_t)v93) {
                  break;
                }
              }
            }
          }
LABEL_52:
          uint64_t v71 = sub_1000AFA94(&qword_10094D6E0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v17, 1, 1, v71);
          uint64_t v103 = 0;
LABEL_53:
          sub_1000AEEC8((uint64_t)v17, (uint64_t)v19, &qword_10094D6D8);
          uint64_t v72 = sub_1000AFA94(&qword_10094D6E0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v19, 1, v72) == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            return (char *)a1;
          }
          id v102 = (char *)a1;
          id v73 = *(void **)&v19[*(int *)(v72 + 48)];
          char v74 = *(void (**)(char *, char *, void *))v105;
          (*(void (**)(char *, char *, void *))v105)(v106, v19, v20);
          id v75 = v73;
          NSIndexSet.makeIterator()();

          sub_1000677AC(&qword_10094D6E8, (void (*)(uint64_t))&type metadata accessor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()();
          if (v111)
          {
            uint64_t v76 = *v104;
            (*v104)(v9, v3);
            uint64_t v77 = 0;
          }
          else
          {
            uint64_t v77 = (uint64_t)v110;
            dispatch thunk of IteratorProtocol.next()();
            if ((v111 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v110 < v77) {
                  uint64_t v77 = (uint64_t)v110;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v111 != 1);
            }
            uint64_t v76 = *v104;
            (*v104)(v9, v3);
          }
          id v78 = v75;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()();
          if (v111)
          {
            v76(v7, v3);
            uint64_t v79 = 0;
          }
          else
          {
            uint64_t v79 = (uint64_t)v110;
            dispatch thunk of IteratorProtocol.next()();
            if ((v111 & 1) == 0)
            {
              do
              {
                if (v79 <= (uint64_t)v110) {
                  uint64_t v79 = (uint64_t)v110;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v111 != 1);
            }
            v76(v7, v3);
          }
          uint64_t v80 = (uint64_t)v107;
          uint64_t v20 = v109;
          v74(v107, v106, v109);
          uint64_t v81 = v97;
          *(double *)(v80 + *(int *)(v97 + 24)) = (double)v77;
          *(double *)(v80 + *(int *)(v81 + 28)) = (double)v79;
          *(double *)(v80 + *(int *)(v81 + 20)) = ((double)v77 + (double)v79) * 0.5;
          sub_1001A6B48(v80, v108, type metadata accessor for WorkoutChartDataElement);
          a1 = (unint64_t)v102;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = sub_1001E7108(0, *(void *)(a1 + 16) + 1, 1, a1);
          }
          uint64_t v17 = v98;
          unint64_t v4 = *(void *)(a1 + 16);
          unint64_t v82 = *(void *)(a1 + 24);
          if (v4 >= v82 >> 1) {
            a1 = sub_1001E7108(v82 > 1, v4 + 1, 1, a1);
          }
          *(void *)(a1 + 16) = v4 + 1;
          sub_1000C8EC8(v108, a1+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v4, type metadata accessor for WorkoutChartDataElement);

          uint64_t result = (char *)sub_1001A6BB0((uint64_t)v107, type metadata accessor for WorkoutChartDataElement);
          uint64_t v19 = v99;
          unint64_t v61 = v103;
          if (v103) {
            goto LABEL_33;
          }
        }
        unint64_t v69 = *(void *)(v92 + 8 * v70);
        if (!v69)
        {
          while (1)
          {
            uint64_t v68 = v70 + 1;
            if (__OFADD__(v70, 1)) {
              goto LABEL_84;
            }
            if (v68 >= (uint64_t)v93)
            {
              uint64_t v100 = (uint64_t)v91;
              goto LABEL_52;
            }
            unint64_t v69 = *(void *)(v92 + 8 * v68);
            ++v70;
            if (v69) {
              goto LABEL_38;
            }
          }
        }
LABEL_41:
        uint64_t v68 = v70;
LABEL_38:
        uint64_t v103 = (v69 - 1) & v69;
        unint64_t v62 = __clz(__rbit64(v69)) + (v68 << 6);
        uint64_t v100 = v68;
      }
      id v63 = v101;
      (*(void (**)(char *, unint64_t, void *))(v95 + 16))(v17, v101[6] + *(void *)(v95 + 72) * v62, v20);
      uint64_t v64 = v63[7];
      uint64_t v65 = sub_1000AFA94(&qword_10094D6E0);
      uint64_t v66 = *(void **)(v64 + 8 * v62);
      *(void *)&v17[*(int *)(v65 + 48)] = v66;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v17, 0, 1, v65);
      id v67 = v66;
      goto LABEL_53;
    }
    uint64_t result = (char *)self;
    uint64_t v93 = result;
    if (v30 < 1) {
      break;
    }
    unint64_t v84 = v4;
    uint64_t v32 = 0;
    uint64_t v92 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    uint64_t v91 = (char *)(a1 & 0xC000000000000001);
    unint64_t v90 = (char **)(v95 + 8);
    double v101 = _swiftEmptyDictionarySingleton;
    uint64_t v85 = (void (**)(void (**)(char *, uint64_t), unint64_t, void *))(v95 + 16);
    uint64_t v89 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration;
    unint64_t v87 = a1;
    uint64_t v88 = v30;
    os_log_type_t v86 = v7;
    while (1)
    {
      if (v91) {
        uint64_t v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v38 = (char *)*(id *)(a1 + 8 * v32 + 32);
      }
      uint64_t v7 = v38;
      uint64_t v20 = v101;
      id v39 = [v38 date];
      uint64_t v40 = v100;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v41 = v102;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Date.timeIntervalSince(_:)();
      uint64_t v42 = v94;
      Date.addingTimeInterval(_:)();
      uint64_t v19 = *v90;
      unint64_t v43 = v41;
      uint64_t v17 = (char *)v90;
      uint64_t v44 = v109;
      ((void (*)(char *, void *))*v90)(v43, v109);
      uint64_t v45 = v40;
      unint64_t v4 = (unint64_t)v42;
      ((void (*)(uint64_t, void *))v19)(v45, v44);
      uint64_t v105 = v7;
      id v46 = [v7 quantity];
      a1 = (unint64_t)[v93 _countPerMinuteUnit];
      [v46 doubleValueForUnit:a1];
      double v48 = v47;

      if (v20[2])
      {
        unint64_t v49 = sub_100529660(v4);
        if (v50)
        {
          if ((~*(void *)&v48 & 0x7FF0000000000000) == 0) {
            goto LABEL_79;
          }
          if (v48 <= -9.22337204e18) {
            goto LABEL_80;
          }
          if (v48 >= 9.22337204e18) {
            goto LABEL_81;
          }
          [*(id *)(v20[7] + 8 * v49) addIndex:(uint64_t)v48];
          uint64_t v20 = v109;
          goto LABEL_7;
        }
      }
      (*v85)(v104, v4, v109);
      if ((~*(void *)&v48 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v48 <= -9.22337204e18) {
        goto LABEL_76;
      }
      if (v48 >= 9.22337204e18) {
        goto LABEL_77;
      }
      id v51 = [objc_allocWithZone((Class)NSMutableIndexSet) initWithIndex:(uint64_t)v48];
      if (!v51)
      {
        swift_bridgeObjectRetain();
        unint64_t v52 = sub_100529660((uint64_t)v104);
        char v54 = v53;
        swift_bridgeObjectRelease();
        uint64_t v7 = v86;
        if (v54)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v110 = v20;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1004F20AC();
            uint64_t v20 = v110;
          }
          unint64_t v56 = v20[6] + *(void *)(v95 + 72) * v52;
          uint64_t v20 = v109;
          ((void (*)(unint64_t, void *))v19)(v56, v109);
          os_log_type_t v37 = *(char **)(v110[7] + 8 * v52);
          double v101 = v110;
          sub_1005DC524(v52, (uint64_t)v110);
          swift_bridgeObjectRelease();
        }
        else
        {
          os_log_type_t v37 = 0;
          uint64_t v20 = v109;
        }
        ((void (*)(void, void *))v19)(v104, v20);

        a1 = v87;
        goto LABEL_8;
      }
      uint64_t v33 = (uint64_t)v51;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v110 = v20;
      uint64_t v35 = v33;
      uint64_t v36 = v104;
      sub_1004EF404(v35, (uint64_t)v104, v34);
      double v101 = v110;
      swift_bridgeObjectRelease();
      uint64_t v20 = v109;
      ((void (*)(void, void *))v19)(v36, v109);
LABEL_7:
      a1 = v87;
      os_log_type_t v37 = v105;
      uint64_t v7 = v86;
LABEL_8:
      ++v32;

      ((void (*)(unint64_t, void *))v19)(v4, v20);
      if (v88 == v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v98;
        uint64_t v19 = v99;
        uint64_t v57 = v101;
        unint64_t v4 = v84;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1001A67F4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A6834()
{
  return sub_1001A4BDC();
}

uint64_t sub_1001A6840()
{
  return sub_1001A6A5C();
}

uint64_t sub_1001A6868()
{
  uint64_t v1 = (int *)(type metadata accessor for WorkoutChartViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[12];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v3 + v1[13], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A6A38()
{
  return sub_1001A6A5C();
}

uint64_t sub_1001A6A5C()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutChartViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1001A4C58(*(void *)(v0 + 16), v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A6B48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001A6BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDashboardMetricCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnitSettingsEnergyUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A6D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1001A6DB4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for UnitSettingsEnergyUnit()
{
  return &type metadata for UnitSettingsEnergyUnit;
}

void *sub_1001A6DCC()
{
  return &protocol witness table for String;
}

unint64_t sub_1001A6DD8(char a1)
{
  unint64_t result = 0xD000000000000029;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD00000000000002DLL;
    }
    else {
      return 0xD00000000000002BLL;
    }
  }
  return result;
}

BOOL sub_1001A6E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1001A6E4C(void *a1@<X8>)
{
  *a1 = &off_1008B2D38;
}

unint64_t sub_1001A6E5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001A6DD8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001A6E8C()
{
  unint64_t result = qword_10094D6F0;
  if (!qword_10094D6F0)
  {
    sub_1000A1370(&qword_10094D6F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D6F0);
  }
  return result;
}

unint64_t sub_1001A6EEC()
{
  unint64_t result = qword_10094D700;
  if (!qword_10094D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D700);
  }
  return result;
}

uint64_t sub_1001A6F40(void *a1)
{
  int v2 = self;
  id v3 = [v2 largeCalorieUnit];
  sub_1000A6534();
  char v4 = static NSObject.== infix(_:_:)();

  if (v4) {
    return 0;
  }
  id v6 = [v2 kilocalorieUnit];
  char v7 = static NSObject.== infix(_:_:)();

  if (v7) {
    return 1;
  }
  id v8 = [v2 jouleUnitWithMetricPrefix:9];
  char v9 = static NSObject.== infix(_:_:)();

  if ((v9 & 1) == 0)
  {
    os_log_type_t v10 = static os_log_type_t.error.getter();
    uint64_t v11 = (void *)HKLogActivity;
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(HKLogActivity, v10))
    {
      id v13 = a1;
      uint64_t v14 = v11;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      id v17 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v16 = v13;

      _os_log_impl((void *)&_mh_execute_header, v14, v12, "Unexpected energy units %@. Setting energy units to kilojoules", v15, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  return 2;
}

id sub_1001A7154(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR___CHWelcomeViewController_buttonHandler];
  *uint64_t v5 = a2;
  v5[1] = a3;
  v3[OBJC_IVAR___CHWelcomeViewController_fitnessPlusAvailable] = a1;
  id v6 = self;
  sub_10008A670(a2);
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for WelcomeViewController();
  id v11 = [super initWithTitle:v10 detailText:0 icon:0 contentLayout:2];
  sub_10005E5F8(a2);

  return v11;
}

void sub_1001A7330()
{
  v52.receiver = v0;
  v52.super_class = (Class)type metadata accessor for WelcomeViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v2 = v1;
  id v3 = self;
  id v4 = [v3 secondarySystemGroupedBackgroundColor];
  [v2 setBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 sharedBehavior];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v7 = v6;
  [v6 isStandalonePhoneFitnessMode];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  id v51 = v3;
  swift_bridgeObjectRelease();
  id v9 = [self smm_systemImageNamed:v8];

  id v10 = [v5 sharedBehavior];
  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v11 = v10;
  [v10 isStandalonePhoneFitnessMode];

  os_log_type_t v12 = self;
  id v13 = [v12 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v12 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 addBulletedListItemWithTitle:v16 description:v20 image:v9];

  if (*((unsigned char *)v0 + OBJC_IVAR___CHWelcomeViewController_fitnessPlusAvailable) == 1)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [self smm_systemImageNamed:v21];

    id v23 = [v12 mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v27 = [v12 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v27 localizedStringForKey:v28 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 addBulletedListItemWithTitle:v26 description:v30 image:v22];
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = [self smm_systemImageNamed:v31];

  id v33 = [v12 mainBundle];
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [v12 mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 addBulletedListItemWithTitle:v36 description:v40 image:v32];

  id v41 = [self boldButton];
  [v41 addTarget:v0 action:"didTapContinueButton" forControlEvents:64];
  id v42 = [v12 mainBundle];
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v42 localizedStringForKey:v43 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v41 setTitle:v45 forState:0];

  id v46 = v41;
  id v47 = [v51 tertiarySystemGroupedBackgroundColor];
  [v46 setTintColor:v47];

  id v48 = v46;
  NSString v49 = String._bridgeToObjectiveC()();
  [v48 setAccessibilityIdentifier:v49];

  id v50 = [v0 buttonTray];
  [v50 addButton:v48];

  [v0 setModalInPresentation:1];
}

id sub_1001A7CA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WelcomeViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WelcomeViewController()
{
  return self;
}

uint64_t sub_1001A7D10()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1001A7D48()
{
  return sub_100716738(*(void *)(v0 + 16));
}

void destroy for ActivitySharingHighlightsSectionView(uint64_t a1)
{
  swift_release();

  objc_super v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for ActivitySharingHighlightsSectionView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  id v6 = (void *)a2[4];
  id v7 = (void *)a2[5];
  a1[4] = v6;
  a1[5] = v7;
  swift_retain();
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  id v11 = v7;
  return a1;
}

void *assignWithCopy for ActivitySharingHighlightsSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  id v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  id v10 = (void *)a2[4];
  id v11 = (void *)a1[4];
  a1[4] = v10;
  id v12 = v10;

  id v13 = (void *)a2[5];
  NSString v14 = (void *)a1[5];
  a1[5] = v13;
  id v15 = v13;

  return a1;
}

uint64_t assignWithTake for ActivitySharingHighlightsSectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  id v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlightsSectionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlightsSectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightsSectionView()
{
  return &type metadata for ActivitySharingHighlightsSectionView;
}

uint64_t sub_1001A7FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A7FD4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v47 = sub_1000AFA94(&qword_10094D740);
  __chkstk_darwin(v47);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_10094D748);
  __chkstk_darwin(v48);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_10094D750);
  __chkstk_darwin(v53);
  id v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_10094D758);
  uint64_t v51 = *(void *)(v55 - 8);
  uint64_t v10 = __chkstk_darwin(v55);
  NSString v49 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v50 = (char *)&v46 - v12;
  uint64_t v56 = sub_1000AFA94(&qword_10094D760);
  __chkstk_darwin(v56);
  NSString v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000AFA94(&qword_10094D768);
  __chkstk_darwin(v52);
  NSString v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_10094D770);
  __chkstk_darwin(v57);
  char v54 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v18 = v62;
    if ((void)v62)
    {
      uint64_t v46 = a1;
      if (*(void *)(v62 + 16))
      {
        uint64_t v19 = static Axis.Set.horizontal.getter();
        __chkstk_darwin(v19);
        *(&v46 - 2) = v18;
        *(&v46 - 1) = (uint64_t)v2;
        sub_1000AFA94(&qword_10094D7F0);
        sub_1001A90A8();
        ScrollView.init(_:showsIndicators:content:)();
        swift_bridgeObjectRelease();
        static Edge.Set.horizontal.getter();
        long long v62 = 0u;
        long long v63 = 0u;
        char v64 = 1;
        SafeAreaPaddingModifier.init(edges:insets:)();
        char v20 = static Edge.Set.bottom.getter();
        EdgeInsets.init(_all:)();
        uint64_t v22 = v21;
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        uint64_t v28 = v27;
        sub_1000AEF2C((uint64_t)v5, (uint64_t)v7, &qword_10094D740);
        id v29 = &v7[*(int *)(v48 + 36)];
        *id v29 = v20;
        *((void *)v29 + 1) = v22;
        *((void *)v29 + 2) = v24;
        *((void *)v29 + 3) = v26;
        *((void *)v29 + 4) = v28;
        v29[40] = 0;
        sub_10008DB18((uint64_t)v5, &qword_10094D740);
        char v30 = static Edge.Set.horizontal.getter();
        uint64_t v31 = static SafeAreaRegions.all.getter();
        sub_1000AEF2C((uint64_t)v7, (uint64_t)v9, &qword_10094D748);
        uint64_t v32 = v53;
        id v33 = &v9[*(int *)(v53 + 36)];
        *(void *)id v33 = v31;
        v33[8] = v30;
        sub_10008DB18((uint64_t)v7, &qword_10094D748);
        unint64_t v34 = sub_1001A8E5C();
        unint64_t v35 = sub_1001A904C();
        NSString v36 = v49;
        View.scrollTargetBehavior<A>(_:)();
        sub_10008DB18((uint64_t)v9, &qword_10094D750);
        id v37 = v50;
        uint64_t v38 = v51;
        uint64_t v39 = v55;
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v50, v36, v55);
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v16, v37, v39);
        swift_storeEnumTagMultiPayload();
        sub_1000AFA94(&qword_10094D788);
        sub_1001A8D44();
        uint64_t v58 = v32;
        uint64_t v59 = &type metadata for HighlightsPagingScrollTargetBehavior;
        unint64_t v60 = v34;
        unint64_t v61 = v35;
        swift_getOpaqueTypeConformance2();
        uint64_t v40 = (uint64_t)v54;
        _ConditionalContent<>.init(storage:)();
        sub_1000AEF2C(v40, (uint64_t)v14, &qword_10094D770);
        swift_storeEnumTagMultiPayload();
        sub_1001A8C78();
        _ConditionalContent<>.init(storage:)();
        sub_10008DB18(v40, &qword_10094D770);
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v39);
      }
      else
      {
        swift_bridgeObjectRelease();
        char v42 = static Edge.Set.all.getter();
        *NSString v16 = 0;
        *(_OWORD *)(v16 + 8) = xmmword_100751F70;
        v16[24] = v42;
        *((_OWORD *)v16 + 2) = xmmword_100751F80;
        *((_OWORD *)v16 + 3) = xmmword_100751F90;
        v16[64] = 0;
        *(_OWORD *)(v16 + 72) = 0u;
        *(_OWORD *)(v16 + 88) = 0u;
        v16[104] = 1;
        swift_storeEnumTagMultiPayload();
        sub_1000AFA94(&qword_10094D788);
        sub_1001A8D44();
        unint64_t v43 = sub_1001A8E5C();
        unint64_t v44 = sub_1001A904C();
        *(void *)&long long v62 = v53;
        *((void *)&v62 + 1) = &type metadata for HighlightsPagingScrollTargetBehavior;
        *(void *)&long long v63 = v43;
        *((void *)&v63 + 1) = v44;
        swift_getOpaqueTypeConformance2();
        uint64_t v45 = (uint64_t)v54;
        _ConditionalContent<>.init(storage:)();
        sub_1000AEF2C(v45, (uint64_t)v14, &qword_10094D770);
        swift_storeEnumTagMultiPayload();
        sub_1001A8C78();
        _ConditionalContent<>.init(storage:)();
        return sub_10008DB18(v45, &qword_10094D770);
      }
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_1001A8C78();
      return _ConditionalContent<>.init(storage:)();
    }
  }
  else
  {
    type metadata accessor for ActivitySharingHighlightDataProvider();
    sub_1001A923C(&qword_10094BF18, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightDataProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A87D8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094D808);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0x4024000000000000;
  v8[16] = 0;
  sub_1000AFA94(&qword_10094D810);
  v20[1] = a1;
  long long v21 = *a2;
  id v9 = (void *)*((void *)a2 + 2);
  uint64_t v10 = (void *)*((void *)a2 + 3);
  uint64_t v12 = (void *)*((void *)a2 + 4);
  uint64_t v11 = (void *)*((void *)a2 + 5);
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = a2[1];
  v13[1] = *a2;
  v13[2] = v14;
  void v13[3] = a2[2];
  swift_bridgeObjectRetain();
  sub_1001A91A8((uint64_t)&v21);
  id v15 = v9;
  id v16 = v10;
  id v17 = v12;
  id v18 = v11;
  sub_1000AFA94(&qword_10094D818);
  type metadata accessor for UUID();
  type metadata accessor for ActivitySharingHighlightViewWrapper(0);
  sub_1000A132C(&qword_10094D820, &qword_10094D818);
  sub_1001A923C(&qword_10094D828, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightViewWrapper);
  sub_1001A923C(&qword_10094D830, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlight);
  ForEach<>.init(_:content:)();
  sub_1000AEF2C((uint64_t)v8, a3, &qword_10094D808);
  *(_WORD *)(a3 + *(int *)(sub_1000AFA94(&qword_10094D7F0) + 36)) = 256;
  return sub_10008DB18((uint64_t)v8, &qword_10094D808);
}

uint64_t sub_1001A8A2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Calendar();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A91D4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
  uint64_t v11 = (void *)a2[2];
  uint64_t v12 = (void *)a2[3];
  uint64_t v13 = (void *)a2[4];
  long long v14 = (void *)a2[5];
  *(void *)&v10[v8[7]] = v11;
  *(void *)&v10[v8[8]] = v12;
  *(void *)&v10[v8[9]] = v13;
  *(void *)&v10[v8[10]] = v14;
  v10[v8[11]] = 0;
  id v15 = v11;
  id v16 = v12;
  id v17 = v13;
  id v18 = v14;
  static Calendar.autoupdatingCurrent.getter();
  FIUIRelativeDateTimeFormatter.init(calendar:)();
  uint64_t v19 = v8[13];
  id v20 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v20 setDateStyle:1];
  *(void *)&v10[v19] = v20;
  sub_1001A91D4((uint64_t)v10, a3, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  long long v21 = (uint64_t *)(a3 + *(int *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) + 20));
  type metadata accessor for ActivitySharingNavigationCoordinator();
  sub_1001A923C(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  *long long v21 = EnvironmentObject.init()();
  v21[1] = v22;
  return sub_1001A9284((uint64_t)v10);
}

uint64_t sub_1001A8C34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A7FD4(a1);
}

unint64_t sub_1001A8C78()
{
  unint64_t result = qword_10094D778;
  if (!qword_10094D778)
  {
    sub_1000A1370(&qword_10094D770);
    sub_1001A8D44();
    sub_1000A1370(&qword_10094D750);
    sub_1001A8E5C();
    sub_1001A904C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D778);
  }
  return result;
}

unint64_t sub_1001A8D44()
{
  unint64_t result = qword_10094D780;
  if (!qword_10094D780)
  {
    sub_1000A1370(&qword_10094D788);
    sub_1001A8EFC(&qword_10094D790, &qword_10094D798, (void (*)(void))sub_1001A8E08);
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D780);
  }
  return result;
}

unint64_t sub_1001A8E08()
{
  unint64_t result = qword_10094D7A0;
  if (!qword_10094D7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7A0);
  }
  return result;
}

unint64_t sub_1001A8E5C()
{
  unint64_t result = qword_10094D7B8;
  if (!qword_10094D7B8)
  {
    sub_1000A1370(&qword_10094D750);
    sub_1001A8EFC(&qword_10094D7C0, &qword_10094D748, (void (*)(void))sub_1001A8F7C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7B8);
  }
  return result;
}

uint64_t sub_1001A8EFC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A8F7C()
{
  unint64_t result = qword_10094D7C8;
  if (!qword_10094D7C8)
  {
    sub_1000A1370(&qword_10094D740);
    sub_1000A132C(&qword_10094D7D0, &qword_10094D7D8);
    sub_1001A923C((unint64_t *)&qword_10094D7E0, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7C8);
  }
  return result;
}

unint64_t sub_1001A904C()
{
  unint64_t result = qword_10094D7E8;
  if (!qword_10094D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7E8);
  }
  return result;
}

uint64_t sub_1001A90A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A87D8(*(void *)(v1 + 16), *(long long **)(v1 + 24), a1);
}

unint64_t sub_1001A90A8()
{
  unint64_t result = qword_10094D7F8;
  if (!qword_10094D7F8)
  {
    sub_1000A1370(&qword_10094D7F0);
    sub_1000A132C(&qword_10094D800, &qword_10094D808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D7F8);
  }
  return result;
}

uint64_t sub_1001A9148()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001A91A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001A8A2C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1001A91A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001A91D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001A923C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A9284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivitySharingHighlightViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001A92E4()
{
  unint64_t result = qword_10094D838;
  if (!qword_10094D838)
  {
    sub_1000A1370(&qword_10094D840);
    sub_1001A8C78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D838);
  }
  return result;
}

unint64_t sub_1001A9360@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A96F0(*a1);
  *a2 = result;
  return result;
}

void sub_1001A938C(void *a1@<X8>)
{
  *a1 = &off_1008B2D60;
}

id sub_1001A93CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GoalDay();
  return [super dealloc];
}

uint64_t type metadata accessor for GoalDay()
{
  return self;
}

uint64_t getEnumTagSinglePayload for GoalDay.Day(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GoalDay.Day(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A9590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalDay.Day()
{
  return &type metadata for GoalDay.Day;
}

unint64_t sub_1001A95CC()
{
  unint64_t result = qword_10094D888;
  if (!qword_10094D888)
  {
    sub_1000A1370(&qword_10094D890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D888);
  }
  return result;
}

unint64_t sub_1001A962C()
{
  unint64_t result = qword_10094D898;
  if (!qword_10094D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D898);
  }
  return result;
}

unint64_t sub_1001A9684()
{
  unint64_t result = qword_10094D8A0;
  if (!qword_10094D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D8A0);
  }
  return result;
}

void sub_1001A96D8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*v1 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day);
}

unint64_t sub_1001A96F0(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t destroy for IntervalsHeroView(id *a1)
{
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

void *initializeWithCopy for IntervalsHeroView(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  id v8 = v3;
  swift_retain();
  swift_retain();
  id v9 = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IntervalsHeroView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for HistoryCardFactory(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntervalsHeroView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  long long v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryCardFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalsHeroView()
{
  return &type metadata for IntervalsHeroView;
}

uint64_t sub_1001A99D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A99F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(_OWORD *)(v2 + 32);
  swift_retain();
  IntervalsMetricsPublisher.intervalStartDate.getter();
  sub_1000E2384((uint64_t)&v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095B890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, a1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    long long v16 = *(_OWORD *)(v2 + 48);
    swift_retain();
    WorkoutStatePublisher.pauseTimes.getter();
    sub_1000E2384((uint64_t)&v16);
    swift_retain();
    WorkoutStatePublisher.lastUnbalancedPauseStart.getter();
    sub_1000E2384((uint64_t)&v16);
    Date.offset(until:pauseTimes:lastUnbalancedPauseStart:)();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1001A9C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v115 = a2;
  uint64_t v105 = type metadata accessor for WorkoutViewStyle();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v103 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Date();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v4 = __chkstk_darwin(v94);
  uint64_t v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v92 = (uint64_t)&v90 - v7;
  uint64_t v99 = type metadata accessor for AnimatingOpenGoalTimeRing();
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000AFA94(&qword_10094D8C0);
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  char v98 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000AFA94(&qword_10094D8C8);
  uint64_t v10 = __chkstk_darwin(v114);
  uint64_t v96 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v101 = (uint64_t)&v90 - v12;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v13 - 8);
  uint64_t v91 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for MirrorIntervalTimeView();
  uint64_t v15 = __chkstk_darwin(v110);
  long long v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v95 = (uint64_t)&v90 - v18;
  uint64_t v111 = sub_1000AFA94(&qword_10094D8D0);
  __chkstk_darwin(v111);
  uint64_t v113 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_10094D8D8);
  __chkstk_darwin(v108);
  long long v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94(&qword_10094D8E0);
  __chkstk_darwin(v112);
  id v109 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for UUID();
  __chkstk_darwin(v23 - 8);
  uint64_t v24 = type metadata accessor for StepType();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v120 = *(_OWORD *)(a1 + 32);
  swift_retain();
  uint64_t v28 = IntervalsMetricsPublisher.intervalThisStep.getter();
  sub_1000E2384((uint64_t)&v120);
  uint64_t v107 = v24;
  uint64_t v106 = v25;
  if (v28)
  {
    uint64_t v29 = a1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for StepType.rest(_:), v24);
    sub_1001AAF50();
    static NLSessionActivityGoal.makeOpenGoal()();
    uint64_t v29 = a1;
    id v30 = *(id *)(a1 + 24);
    UUID.init()();
    type metadata accessor for WorkoutStep();
    swift_allocObject();
    WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
  }
  uint64_t v31 = (void *)WorkoutStep.goal.getter();
  swift_release();
  id v32 = [v31 goalTypeIdentifier];

  if (v32 == (id)2)
  {
    swift_retain();
    uint64_t v57 = (uint64_t)v91;
    IntervalsMetricsPublisher.intervalStartDate.getter();
    sub_1000E2384((uint64_t)&v120);
    swift_retain();
    uint64_t v58 = IntervalsMetricsPublisher.intervalThisStep.getter();
    sub_1000E2384((uint64_t)&v120);
    if (!v58)
    {
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v27, enum case for StepType.rest(_:), v107);
      sub_1001AAF50();
      static NLSessionActivityGoal.makeOpenGoal()();
      id v59 = *(id *)(v29 + 24);
      UUID.init()();
      type metadata accessor for WorkoutStep();
      swift_allocObject();
      uint64_t v58 = WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
    }
    unint64_t v60 = (int *)v110;
    long long v116 = *(_OWORD *)(v29 + 48);
    swift_retain();
    uint64_t v61 = WorkoutStatePublisher.pauseTimes.getter();
    sub_1000E2384((uint64_t)&v116);
    swift_retain();
    WorkoutStatePublisher.lastUnbalancedPauseStart.getter();
    sub_1000E2384((uint64_t)&v116);
    if (qword_10094A5C8 != -1) {
      swift_once();
    }
    uint64_t v62 = qword_1009975C8;
    sub_1000AEEC8(v57, (uint64_t)v17, (uint64_t *)&unk_10095B890);
    *(void *)&v17[v60[5]] = v58;
    *(void *)&v17[v60[6]] = v61;
    v17[v60[8]] = 1;
    long long v63 = &v17[v60[9]];
    *(void *)long long v63 = v62;
    v63[8] = 0;
    v17[v60[10]] = 0;
    uint64_t v64 = v95;
    sub_1001AB288((uint64_t)v17, v95);
    sub_1001AB2EC(v64, (uint64_t)v21);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10094D908);
    sub_1000A132C(&qword_10094D900, &qword_10094D908);
    sub_1001AB240(&qword_10094D910, (void (*)(uint64_t))type metadata accessor for MirrorIntervalTimeView);
    uint64_t v65 = (uint64_t)v109;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v65, v113, &qword_10094D8E0);
    swift_storeEnumTagMultiPayload();
    sub_1001AB064();
    sub_1001AB134();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v65, &qword_10094D8E0);
    return sub_1001AB350(v64, (uint64_t (*)(void))type metadata accessor for MirrorIntervalTimeView);
  }
  else if (v32 == (id)1)
  {
    swift_retain();
    uint64_t v33 = IntervalsMetricsPublisher.intervalThisStep.getter();
    sub_1000E2384((uint64_t)&v120);
    if (!v33)
    {
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v27, enum case for StepType.rest(_:), v107);
      sub_1001AAF50();
      static NLSessionActivityGoal.makeOpenGoal()();
      id v34 = *(id *)(v29 + 24);
      UUID.init()();
      type metadata accessor for WorkoutStep();
      swift_allocObject();
      WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
    }
    unint64_t v35 = (void *)WorkoutStep.goal.getter();
    swift_release();
    id v36 = [v35 goalTypeIdentifier];

    if (qword_10094A5C8 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_1009975C8;
    if (qword_10094B128 != -1) {
      swift_once();
    }
    double v38 = *(double *)&qword_100998908;
    swift_retain();
    IntervalsMetricsPublisher.intervalProgress.getter();
    double v40 = v39;
    sub_1000E2384((uint64_t)&v120);
    double v41 = 0.0;
    if (v40 >= 0.0) {
      double v41 = v40;
    }
    if (v41 <= 1.0) {
      double v42 = v41;
    }
    else {
      double v42 = 1.0;
    }
    float v43 = v38;
    swift_retain();
    uint64_t v44 = IntervalsMetricsPublisher.intervalThisStep.getter();
    sub_1000E2384((uint64_t)&v120);
    if (!v44)
    {
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v27, enum case for StepType.rest(_:), v107);
      sub_1001AAF50();
      static NLSessionActivityGoal.makeOpenGoal()();
      id v45 = *(id *)(v29 + 24);
      UUID.init()();
      type metadata accessor for WorkoutStep();
      swift_allocObject();
      uint64_t v44 = WorkoutStep.init(_:goal:activityType:uuid:displayName:)();
    }
    swift_retain();
    IntervalsMetricsPublisher.intervalDistance.getter();
    uint64_t v47 = v46;
    sub_1000E2384((uint64_t)&v120);
    id v48 = *(id *)v29;
    uint64_t v49 = FIUIDistanceTypeForActivityType();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v50 = v116;
    char v51 = BYTE8(v116);
    uint64_t v52 = v117;
    char v53 = v118;
    id v54 = v48;
    *(void *)long long v21 = v36;
    *((void *)v21 + 1) = v37;
    *((float *)v21 + 4) = v43;
    *((double *)v21 + 3) = v42;
    *((void *)v21 + 4) = v44;
    *((void *)v21 + 5) = v47;
    *((void *)v21 + 6) = v54;
    *((void *)v21 + 7) = v49;
    *((void *)v21 + 8) = v50;
    v21[72] = v51;
    *((void *)v21 + 10) = v52;
    v21[88] = v53;
    *((_OWORD *)v21 + 6) = v119;
    swift_retain();
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10094D908);
    sub_1000A132C(&qword_10094D900, &qword_10094D908);
    sub_1001AB240(&qword_10094D910, (void (*)(uint64_t))type metadata accessor for MirrorIntervalTimeView);
    uint64_t v55 = (uint64_t)v109;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v55, v113, &qword_10094D8E0);
    swift_storeEnumTagMultiPayload();
    sub_1001AB064();
    sub_1001AB134();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v55, &qword_10094D8E0);

    return swift_release();
  }
  else
  {
    Date.init()();
    uint64_t v66 = v92;
    sub_1001A99F0((uint64_t)v6, v92);
    uint64_t v67 = v93;
    uint64_t v68 = v94;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v6, v94);
    id v69 = [self mainBundle];
    NSString v70 = String._bridgeToObjectiveC()();
    id v71 = [v69 localizedStringForKey:v70 value:0 table:0];

    uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v74 = v73;

    id v75 = (double (*)(uint64_t))swift_allocObject();
    long long v76 = *(_OWORD *)(v29 + 16);
    *((_OWORD *)v75 + 1) = *(_OWORD *)v29;
    *((_OWORD *)v75 + 2) = v76;
    long long v77 = *(_OWORD *)(v29 + 48);
    *((_OWORD *)v75 + 3) = *(_OWORD *)(v29 + 32);
    *((_OWORD *)v75 + 4) = v77;
    uint64_t v78 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v97, v66, v68);
    uint64_t v79 = v99;
    uint64_t v80 = (uint64_t *)(v78 + *(int *)(v99 + 20));
    *uint64_t v80 = v72;
    v80[1] = v74;
    uint64_t v81 = (double (**)(uint64_t))(v78 + *(int *)(v79 + 24));
    *uint64_t v81 = sub_1001AAFF0;
    v81[1] = v75;
    uint64_t v82 = v104;
    uint64_t v83 = v103;
    uint64_t v84 = v105;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v105);
    sub_1001AAFF8(v29);
    uint64_t v85 = sub_1001AB240(&qword_10094D8F0, (void (*)(uint64_t))type metadata accessor for AnimatingOpenGoalTimeRing);
    os_log_type_t v86 = v98;
    View.workoutViewStyle(_:)();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
    sub_1001AB350(v78, (uint64_t (*)(void))type metadata accessor for AnimatingOpenGoalTimeRing);
    *(void *)&long long v116 = v79;
    *((void *)&v116 + 1) = v85;
    swift_getOpaqueTypeConformance2();
    uint64_t v87 = (uint64_t)v96;
    uint64_t v88 = v102;
    View.accessibility(identifier:)();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v86, v88);
    uint64_t v89 = v101;
    sub_1000AEEC8(v87, v101, &qword_10094D8C8);
    sub_1000AEF2C(v89, v113, &qword_10094D8C8);
    swift_storeEnumTagMultiPayload();
    sub_1001AB064();
    sub_1001AB134();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v89, &qword_10094D8C8);
  }
}

double sub_1001AAC98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A99F0(a1, (uint64_t)v5);
  Date.timeIntervalSince(_:)();
  double v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1001AAD88()
{
  uint64_t v1 = type metadata accessor for WorkoutViewStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094D8A8);
  __chkstk_darwin(v5);
  double v7 = (uint64_t *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v8 = v0[1];
  v13[0] = *v0;
  v13[1] = v8;
  long long v9 = v0[3];
  v13[2] = v0[2];
  void v13[3] = v9;
  *double v7 = static Alignment.center.getter();
  v7[1] = v10;
  uint64_t v11 = sub_1000AFA94(&qword_10094D8B0);
  sub_1001A9C40((uint64_t)v13, (uint64_t)v7 + *(int *)(v11 + 44));
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v1);
  sub_1000A132C(&qword_10094D8B8, &qword_10094D8A8);
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v7, &qword_10094D8A8);
}

unint64_t sub_1001AAF50()
{
  unint64_t result = qword_10094D8E8;
  if (!qword_10094D8E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094D8E8);
  }
  return result;
}

uint64_t sub_1001AAF90()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

double sub_1001AAFF0(uint64_t a1)
{
  return sub_1001AAC98(a1);
}

uint64_t sub_1001AAFF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  id v3 = *(id *)a1;
  swift_retain();
  swift_retain();
  id v4 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1001AB064()
{
  unint64_t result = qword_10094D8F8;
  if (!qword_10094D8F8)
  {
    sub_1000A1370(&qword_10094D8E0);
    sub_1000A132C(&qword_10094D900, &qword_10094D908);
    sub_1001AB240(&qword_10094D910, (void (*)(uint64_t))type metadata accessor for MirrorIntervalTimeView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D8F8);
  }
  return result;
}

unint64_t sub_1001AB134()
{
  unint64_t result = qword_10094D918;
  if (!qword_10094D918)
  {
    sub_1000A1370(&qword_10094D8C8);
    type metadata accessor for AnimatingOpenGoalTimeRing();
    sub_1001AB240(&qword_10094D8F0, (void (*)(uint64_t))type metadata accessor for AnimatingOpenGoalTimeRing);
    swift_getOpaqueTypeConformance2();
    sub_1001AB240((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D918);
  }
  return result;
}

uint64_t sub_1001AB240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AB288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorIntervalTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorIntervalTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001AB3B0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1001AB528()
{
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for WorkoutDetailedPowerViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  uint64_t v3 = self;
  id v4 = [v3 systemBackgroundColor];
  [v2 setBackgroundColor:v4];

  id v5 = [v0 navigationItem];
  id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"close"];
  [v5 setRightBarButtonItem:v6];

  id v7 = [v0 navigationItem];
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setTitle:v11];

  uint64_t v12 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedPowerViewController_powerController];
  id v13 = [v12 view];
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v14 = v13;
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v15 = [v12 view];
  if (!v15)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = v15;
  id v17 = [v3 clearColor];
  [v16 setBackgroundColor:v17];

  id v18 = [v0 view];
  if (!v18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v19 = v18;
  id v20 = [v12 view];
  if (v20)
  {
    long long v21 = v20;
    [v19 addSubview:v20];

    [v0 addChildViewController:v12];
    [v12 didMoveToParentViewController:v0];
    sub_1001ABA88();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1001AB88C(char a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WorkoutDetailedPowerViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  [v3 configureWithOpaqueBackground];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 systemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = v5;
  id v8 = [v4 systemBackgroundColor];
  [v7 setShadowColor:v8];

  id v9 = [v1 navigationItem];
  [v9 setScrollEdgeAppearance:v7];

  id v10 = [v1 tabBarController];
  if (v10)
  {
    NSString v11 = v10;
    id v12 = [v10 tabBar];

    id v13 = [objc_allocWithZone((Class)UITabBarAppearance) init];
    [v12 setScrollEdgeAppearance:v13];
  }
}

void sub_1001ABA88()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751160;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedPowerViewController_powerController];
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v4 = v3;
  id v5 = [v3 topAnchor];

  id v6 = [v0 view];
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v7 = v6;
  id v8 = [v6 safeAreaLayoutGuide];

  id v9 = [v8 topAnchor];
  id v10 = [v5 constraintEqualToAnchor:v9];

  *(void *)(v1 + 32) = v10;
  id v11 = [v2 view];
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v12 = v11;
  id v13 = [v11 leadingAnchor];

  id v14 = [v0 view];
  if (!v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v15 = v14;
  id v16 = [v14 safeAreaLayoutGuide];

  id v17 = [v16 leadingAnchor];
  id v18 = [v13 constraintEqualToAnchor:v17];

  *(void *)(v1 + 40) = v18;
  id v19 = [v2 view];
  if (!v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v20 = v19;
  id v21 = [v19 trailingAnchor];

  id v22 = [v0 view];
  if (!v22)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v23 = v22;
  id v24 = [v22 safeAreaLayoutGuide];

  id v25 = [v24 trailingAnchor];
  id v26 = [v21 constraintEqualToAnchor:v25];

  *(void *)(v1 + 48) = v26;
  id v27 = [v2 view];
  if (!v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v28 = v27;
  id v29 = [v27 bottomAnchor];

  id v30 = [v0 view];
  if (!v30)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v31 = v30;
  id v32 = self;
  id v33 = [v31 safeAreaLayoutGuide];

  id v34 = [v33 bottomAnchor];
  id v35 = [v29 constraintEqualToAnchor:v34];

  *(void *)(v1 + 56) = v35;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];
}

id sub_1001ABEA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailedPowerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailedPowerViewController()
{
  return self;
}

unint64_t sub_1001ABF94()
{
  unint64_t result = qword_10094C810;
  if (!qword_10094C810)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094C810);
  }
  return result;
}

id sub_1001ABFD4(void *a1, void *a2, void *a3, void *a4, char a5)
{
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailedPowerViewController_workout] = a1;
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailedPowerViewController_workoutActivity] = a2;
  id v11 = a2;
  id v12 = a1;
  id v13 = v11;
  id v14 = v5;
  id v15 = v12;
  id v16 = [a4 dataCalculator];
  type metadata accessor for WorkoutDetailPowerDataStore();
  swift_allocObject();
  id v17 = a4;
  id v18 = sub_100530610(v15, a2, v16, v17);

  *(void *)&v14[OBJC_IVAR___CHWorkoutDetailedPowerViewController_dataStore] = v18;
  sub_1001AC1C0();
  swift_retain();
  id v19 = a3;
  uint64_t v20 = ObservedObject.init(wrappedValue:)();
  uint64_t v22 = v21;
  char v35 = 0;
  State.init(wrappedValue:)();
  char v23 = v29;
  uint64_t v24 = v30;
  id v25 = &v14[OBJC_IVAR___CHWorkoutDetailedPowerViewController_powerView];
  *(void *)id v25 = v20;
  *((void *)v25 + 1) = v22;
  *((void *)v25 + 2) = v19;
  v25[24] = a5;
  v25[32] = v23;
  *((void *)v25 + 5) = v24;
  uint64_t v29 = v20;
  uint64_t v30 = v22;
  id v31 = v19;
  char v32 = a5;
  char v33 = v23;
  uint64_t v34 = v24;
  objc_allocWithZone((Class)sub_1000AFA94(&qword_10094D978));
  swift_retain();
  id v26 = v19;
  swift_retain();
  *(void *)&v14[OBJC_IVAR___CHWorkoutDetailedPowerViewController_powerController] = UIHostingController.init(rootView:)();

  v28.receiver = v14;
  v28.super_class = (Class)type metadata accessor for WorkoutDetailedPowerViewController();
  return [super initWithNibName:0 bundle:0];
}

unint64_t sub_1001AC1C0()
{
  unint64_t result = qword_10094D970;
  if (!qword_10094D970)
  {
    type metadata accessor for WorkoutDetailPowerDataStore();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D970);
  }
  return result;
}

uint64_t sub_1001AC218()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_1009975C8 = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for MirrorHeroGraphicsMetricsViewLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MirrorHeroGraphicsMetricsViewLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AC3D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorHeroGraphicsMetricsViewLayout()
{
  return &type metadata for MirrorHeroGraphicsMetricsViewLayout;
}

uint64_t sub_1001AC40C(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1001AC474(a8, a1, a2, a3, a9, *v9);
}

unint64_t sub_1001AC420()
{
  unint64_t result = qword_10094D980;
  if (!qword_10094D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D980);
  }
  return result;
}

uint64_t sub_1001AC474(uint64_t a1, double a2, double a3, double a4, uint64_t a5, int a6)
{
  int v72 = a6;
  uint64_t v9 = type metadata accessor for LayoutSubview();
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v63 - v14;
  uint64_t v73 = type metadata accessor for MetricPlatterConstants();
  double v71 = *(double *)(v73 - 8);
  __chkstk_darwin(v73);
  *(void *)&double v70 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LayoutSubviews();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  char v23 = (char *)&v63 - v22;
  __chkstk_darwin(v21);
  id v25 = (char *)&v63 - v24;
  id v26 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v69 = a1;
  v26((char *)&v63 - v24, a1, v16);
  sub_1001AD004();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v27 = dispatch thunk of Collection.distance(from:to:)();
  v26(v23, (uint64_t)v25, v16);
  uint64_t v74 = v9;
  if (v27 == 5)
  {
    BOOL v28 = 1;
  }
  else
  {
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    BOOL v28 = dispatch thunk of Collection.distance(from:to:)() == 4;
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  v29(v23, v16);
  v26(v20, (uint64_t)v25, v16);
  if (v28)
  {
    v29(v20, v16);
    v29(v25, v16);
    uint64_t v30 = v73;
    double v32 = v70;
    double v31 = v71;
  }
  else
  {
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v33 = dispatch thunk of Collection.distance(from:to:)();
    v29(v20, v16);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v25, v16);
    uint64_t v30 = v73;
    double v32 = v70;
    double v31 = v71;
    if (v33 != 3)
    {
      __break(1u);
      goto LABEL_25;
    }
  }
  double v71 = a2;
  char v35 = self;
  id v36 = [v35 currentDevice];
  char v37 = UIDevice.isLargeDisplayZoomEnabled.getter();

  double v38 = 60.0;
  if (v37) {
    double v38 = 61.0;
  }
  uint64_t v73 = *(void *)&v38;
  id v39 = [v35 currentDevice];
  char v40 = UIDevice.isLargeDisplayZoomEnabled.getter();

  double v41 = 69.0;
  if (v40) {
    double v41 = 80.0;
  }
  double v70 = v41;
  id v42 = [v35 currentDevice];
  char v43 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if (v43) {
    double v44 = 84.0;
  }
  else {
    double v44 = 65.0;
  }
  double v67 = v44;
  id v45 = [v35 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v46 = [v35 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v47 = [v35 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v48 = [v35 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  MetricPlatterConstants.init()();
  MetricPlatterConstants.metricMaxHeight.getter();
  uint64_t v50 = v49;
  char v51 = *(void (**)(void, uint64_t))(*(void *)&v31 + 8);
  v51(*(void *)&v32, v30);
  double v70 = *(double *)&v50;
  double v64 = a4;
  uint64_t v73 = *(void *)&a4;
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  dispatch thunk of Collection.distance(from:to:)();
  uint64_t v52 = v68;
  LayoutSubviews.subscript.getter();
  if (qword_10094A5C8 != -1) {
    swift_once();
  }
  static UnitPoint.topLeading.getter();
  char v77 = 0;
  char v76 = 0;
  LayoutSubview.place(at:anchor:proposal:)();
  char v53 = *(void (**)(char *, uint64_t))(v75 + 8);
  v75 += 8;
  double v67 = *(double *)&v53;
  v53(v52, v74);
  MetricPlatterConstants.init()();
  MetricPlatterConstants.metricMaxHeight.getter();
  v51(*(void *)&v32, v30);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (dispatch thunk of Collection.distance(from:to:)() == 2)
  {
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v77 = 0;
    char v76 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    return (*(uint64_t (**)(char *, uint64_t))&v67)(v52, v74);
  }
  double v54 = (v64 + -7.0) * 0.5;
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v55 = dispatch thunk of Collection.distance(from:to:)();
  double v63 = v54;
  if (v55 == 5)
  {
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v77 = 0;
    char v76 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    uint64_t v56 = v74;
    double v57 = v67;
    (*(void (**)(char *, uint64_t))&v67)(v52, v74);
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v77 = 0;
    char v76 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    (*(void (**)(char *, uint64_t))&v57)(v52, v56);
  }
  else
  {
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v58 = dispatch thunk of Collection.distance(from:to:)();
    double v57 = v67;
    if (v58 == 4)
    {
      LayoutSubviews.subscript.getter();
      static UnitPoint.topLeading.getter();
      char v77 = 0;
      char v76 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      (*(void (**)(char *, uint64_t))&v57)(v52, v74);
    }
  }
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (!__OFSUB__(result, 2))
  {
    id v59 = v66;
    LayoutSubviews.subscript.getter();
    unint64_t v60 = v65;
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v77 = 0;
    char v76 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    static UnitPoint.topLeading.getter();
    char v77 = 0;
    char v76 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    uint64_t v61 = v60;
    uint64_t v62 = v74;
    (*(void (**)(char *, uint64_t))&v57)(v61, v74);
    return (*(uint64_t (**)(char *, uint64_t))&v57)(v59, v62);
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1001AD004()
{
  unint64_t result = qword_10094C148;
  if (!qword_10094C148)
  {
    type metadata accessor for LayoutSubviews();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C148);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PlaceholderTextView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PlaceholderTextView()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PlaceholderTextView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PlaceholderTextView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderTextView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceholderTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderTextView()
{
  return &type metadata for PlaceholderTextView;
}

uint64_t sub_1001AD1A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001AD1BC@<X0>(uint64_t a1@<X8>)
{
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.footnote.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1000A06C0(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = static HierarchicalShapeStyle.secondary.getter();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = KeyPath;
  *(_WORD *)(a1 + 40) = 1;
  *(unsigned char *)(a1 + 42) = 1;
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

unint64_t sub_1001AD2CC()
{
  unint64_t result = qword_10094D988;
  if (!qword_10094D988)
  {
    sub_1000A1370(&qword_10094D990);
    sub_1001AD36C();
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D988);
  }
  return result;
}

unint64_t sub_1001AD36C()
{
  unint64_t result = qword_10094D998;
  if (!qword_10094D998)
  {
    sub_1000A1370(&qword_10094D9A0);
    sub_1001AD3E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D998);
  }
  return result;
}

unint64_t sub_1001AD3E8()
{
  unint64_t result = qword_10094D9A8;
  if (!qword_10094D9A8)
  {
    sub_1000A1370(&qword_10094D9B0);
    sub_1000A132C(&qword_10094D9B8, &qword_10094D9C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D9A8);
  }
  return result;
}

void *sub_1001AD490(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  char v10 = (void *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler);
  *char v10 = 0;
  v10[1] = 0;
  v1[15] = a1;
  v1[16] = 0x8000000000000000;
  id v11 = a1;
  v1[14] = sub_100522D78((uint64_t)_swiftEmptyArrayStorage);
  v1[17] = _swiftEmptyArrayStorage;
  static Date.distantPast.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v1 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_lastRecommendationUpdate, v9, v6);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = v13;
  uint64_t v15 = sub_10005810C((uint64_t)v5, (uint64_t)&unk_10094DBC8, (uint64_t)v14);

  v1[16] = v15;
  swift_release();
  return v1;
}

uint64_t sub_1001AD6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_1001AD6D4, 0, 0);
}

uint64_t sub_1001AD6D4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1001AD7DC;
    v2[7] = Strong;
    return _swift_task_switch(sub_1001AD914, Strong, 0);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1001AD7DC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t sub_1001AD8F4()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_1001AD914, v0, 0);
}

uint64_t sub_1001AD914()
{
  uint64_t v1 = *(void *)(v0 + 56);
  static os_log_type_t.default.getter();
  id v2 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  if (*(void *)(v1 + 128) >> 62 == 1)
  {
    static os_log_type_t.default.getter();
    id v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    sub_1001B31F4();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for SubscriptionToken();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v6 = SubscriptionToken.init(eventHub:)();
    swift_getObjectType();
    type metadata accessor for RecommendationsUpdated();
    swift_unknownObjectRetain();
    swift_retain();
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
    swift_release();
    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
    static os_log_type_t.default.getter();
    id v7 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    *(void *)(v1 + 128) = v6 | 0x4000000000000000;
    swift_retain();
    swift_release();
    sub_1001ADBAC();
    swift_release();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1001ADBAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v23 - v10;
  Date.init()();
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler);
  if (!v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v24 = v4;
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler + 8);
  uint64_t v14 = v1 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_lastRecommendationUpdate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v14, v5);
  swift_retain();
  Date.timeIntervalSince(_:)();
  double v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, v5);
  if (v16 <= 5.0)
  {
    v17(v11, v5);
    return sub_10005E5F8(v12);
  }
  else
  {
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 24))(v14, v11, v5);
    swift_endAccess();
    uint64_t v18 = type metadata accessor for TaskPriority();
    uint64_t v19 = (uint64_t)v24;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v24, 1, 1, v18);
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = 0;
    void v21[3] = 0;
    void v21[4] = v20;
    v21[5] = v12;
    v21[6] = v13;
    swift_retain();
    sub_1000713D0(v19, (uint64_t)&unk_10094DBD8, (uint64_t)v21);
    swift_release();
    sub_10005E5F8(v12);
    return ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
  }
}

uint64_t sub_1001ADECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint8_t v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return _swift_task_switch(sub_1001ADEF0, 0, 0);
}

uint64_t sub_1001ADEF0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 144) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1001AE004, Strong, 0);
  }
  else
  {
    static os_log_type_t.default.getter();
    id v2 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    (*(void (**)(void))(v0 + 128))();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1001AE004()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 144) + 120);
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  swift_release();
  return _swift_task_switch(sub_1001AE07C, 0, 0);
}

uint64_t sub_1001AE07C()
{
  uint64_t v1 = (char *)v0[19];
  id v2 = *(void **)&v1[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v0[20] = v2;
  id v3 = v2;

  uint64_t v4 = swift_task_alloc();
  v0[21] = v4;
  *(void *)(v4 + 16) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[22] = v5;
  uint64_t v6 = sub_1000AFA94(&qword_10094DBE0);
  *uint64_t v5 = v0;
  v5[1] = sub_1001AE1A0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 13, 0, 0, 0xD000000000000024, 0x80000001007B71F0, sub_1001B391C, v4, v6);
}

uint64_t sub_1001AE1A0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1001AE758;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_1001AE2BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001AE2BC()
{
  *(void *)(v0 + 192) = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 200) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1001AE4A0, Strong, 0);
  }
  else
  {
    os_log_type_t v2 = static os_log_type_t.default.getter();
    id v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    BOOL v5 = os_log_type_enabled(HKLogActivity, v2);
    uint64_t v6 = *(void *)(v0 + 192);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = v3;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      uint64_t v9 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 112) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v4, "[SeymourWorkoutRecommendationDataProvider] Received %ld updated recommendations", v8, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      uint64_t v10 = swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t))(v0 + 128))(v10);
    id v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1001AE4A0()
{
  *(void *)(*(void *)(v0 + 200) + 136) = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_1001AE520, 0, 0);
}

uint64_t sub_1001AE520()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v4 = *(void *)(v0 + 192);
    swift_bridgeObjectRetain();
    BOOL v5 = v2;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    uint64_t v7 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v3, "[SeymourWorkoutRecommendationDataProvider] Received %ld updated recommendations", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    uint64_t v8 = swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t))(v0 + 128))(v8);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1001AE66C()
{
  *(void *)(*(void *)(v0 + 208) + 136) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_1001AE6EC, 0, 0);
}

uint64_t sub_1001AE6EC()
{
  uint64_t v1 = swift_errorRelease();
  (*(void (**)(uint64_t))(v0 + 128))(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001AE758()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 160);
  swift_task_dealloc();

  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v4 = (void *)HKLogActivity;
  os_log_type_t v5 = v3;
  if (os_log_type_enabled(HKLogActivity, v3))
  {
    uint64_t v6 = *(void *)(v1 + 184);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = v4;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v16 = v9;
    *(void *)(v1 + 88) = v6;
    swift_errorRetain();
    sub_1000AFA94(&qword_10095C080);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v1 + 96) = sub_10008F1F4(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v5, "[SeymourWorkoutRecommendationDataProvider] Failed to fetch recommendations: %s.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v1 + 208) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1001AE66C, Strong, 0);
  }
  else
  {
    uint64_t v13 = swift_errorRelease();
    (*(void (**)(uint64_t))(v1 + 128))(v13);
    uint64_t v14 = *(uint64_t (**)(void))(v1 + 8);
    return v14();
  }
}

uint64_t sub_1001AE9C0()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_lastRecommendationUpdate;
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10005E5F8(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler));
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1001AEA74()
{
  return type metadata accessor for SeymourWorkoutRecommendationDataProvider();
}

uint64_t type metadata accessor for SeymourWorkoutRecommendationDataProvider()
{
  uint64_t result = qword_10094DA08;
  if (!qword_10094DA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001AEAC8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SeymourWorkoutRecommendationDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for SeymourWorkoutRecommendationDataProvider.State()
{
  return swift_release();
}

void *assignWithCopy for SeymourWorkoutRecommendationDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SeymourWorkoutRecommendationDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeymourWorkoutRecommendationDataProvider.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SeymourWorkoutRecommendationDataProvider.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1001AECFC(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1001AED18(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1001AED28(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SeymourWorkoutRecommendationDataProvider.State()
{
  return &type metadata for SeymourWorkoutRecommendationDataProvider.State;
}

uint64_t initializeBufferWithCopyOfBuffer for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1001AEDAC(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1001AEDAC(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

void destroy for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t a1)
{
}

void sub_1001AEDC8(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t assignWithCopy for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1001AEDAC(*(id *)a2, v4);
  os_log_type_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1001AEDC8(v5, v6);
  return a1;
}

uint64_t initializeWithTake for ActivitySharingHighlight.HighlightType(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  os_log_type_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1001AEDC8(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001AEF08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1001AEF10(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus()
{
  return &type metadata for SeymourWorkoutRecommendationDataProvider.SeymourArtworkCacheStatus;
}

uint64_t sub_1001AEF2C()
{
  return v0;
}

uint64_t sub_1001AEF38(uint64_t a1, uint64_t a2)
{
  void v3[5] = a2;
  void v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_1001AEF5C, v2, 0);
}

uint64_t sub_1001AEF5C()
{
  uint64_t v20 = v0;
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    int v4 = (void *)v0[5];
    uint64_t v5 = v0[4];
    swift_bridgeObjectRetain_n();
    log = v2;
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)char v6 = 136315138;
    v19[0] = v7;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    v19[1] = 91;
    void v19[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = v5;
    v8._object = v4;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._object = (void *)0x80000001007B7070;
    v9._countAndFlagsBits = 0xD000000000000021;
    String.append(_:)(v9);
    v0[3] = sub_10008F1F4(91, 0xE100000000000000, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "[SeymourWorkoutRecommendationDataProvider][%s] Fetching catalog item view model.", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v11 = v0[5];
  uint64_t v10 = v0[6];
  uint64_t v12 = v0[4];
  uint64_t v13 = sub_1001B36D0(&qword_10094DB78, (void (*)(uint64_t))type metadata accessor for SeymourWorkoutRecommendationDataProvider);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[7] = v14;
  uint64_t v14[2] = v10;
  void v14[3] = v12;
  void v14[4] = v11;
  double v15 = (void *)swift_task_alloc();
  v0[8] = v15;
  uint64_t v16 = type metadata accessor for CatalogItemViewModel();
  *double v15 = v0;
  v15[1] = sub_1001AF24C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v10, v13, 0xD000000000000031, 0x80000001007B7030, sub_1001B34C0, v14, v16);
}

uint64_t sub_1001AF24C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    int v4 = sub_1001AF38C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    swift_task_dealloc();
    int v4 = sub_1001AF370;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001AF370()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1001AF38C()
{
  swift_task_dealloc();
  os_log_type_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001AF3F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094DB98);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = __chkstk_darwin(v8);
  uint64_t v12 = *(void **)(*(void *)(a2 + 120) + OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  id v15 = v12;
  swift_bridgeObjectRetain();
  sub_1001B0A88(a3, a4, (void (*)(id))sub_1001B3560, v14, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1001AF57C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    sub_1000AFA94(&qword_10094DB98);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    sub_1001B31F4();
    swift_allocError();
    *uint64_t v3 = 2;
    sub_1000AFA94(&qword_10094DB98);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_1001AF60C(uint64_t a1, double a2, double a3)
{
  *(void *)(v4 + 144) = v3;
  *(double *)(v4 + 128) = a2;
  *(double *)(v4 + 136) = a3;
  *(void *)(v4 + 120) = a1;
  sub_1000AFA94(&qword_10094B7A0);
  *(void *)(v4 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_1001AF6A8, v3, 0);
}

uint64_t sub_1001AF6A8()
{
  uint64_t v1 = v0;
  os_log_type_t v2 = static os_log_type_t.default.getter();
  uint64_t v3 = (void *)HKLogActivity;
  os_log_type_t v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    id v5 = *(id *)(v0 + 120);
    log = v3;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    *(void *)(v0 + 112) = v5;
    id v8 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v5;

    _os_log_impl((void *)&_mh_execute_header, log, v4, "[SeymourWorkoutRecommendationDataProvider] Looking up artwork for %@", v6, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v9 = *(void *)(v0 + 144) + 112;
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  if (!*(void *)(*(void *)v9 + 16)) {
    goto LABEL_12;
  }
  id v11 = *(id *)(v0 + 120);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_100529734((uint64_t)v11);
  unint64_t v13 = *(void **)(v0 + 120);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();

LABEL_12:
    uint64_t v30 = *(void *)(v1 + 144);
    uint64_t v29 = *(void *)(v1 + 152);
    uint64_t v32 = *(void *)(v1 + 128);
    uint64_t v31 = *(void *)(v1 + 136);
    uint64_t v33 = *(void **)(v1 + 120);
    uint64_t v34 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v29, 1, 1, v34);
    uint64_t v35 = sub_1001B36D0(&qword_10094DB78, (void (*)(uint64_t))type metadata accessor for SeymourWorkoutRecommendationDataProvider);
    id v36 = (void *)swift_allocObject();
    id v36[2] = v30;
    v36[3] = v35;
    v36[4] = v33;
    v36[5] = v30;
    v36[6] = v33;
    v36[7] = v32;
    v36[8] = v31;
    id v37 = v33;
    swift_retain_n();
    id v38 = v37;
    uint64_t v39 = sub_1006CA354(v29, (uint64_t)&unk_10094DB80, (uint64_t)v36);
    *(void *)(v1 + 184) = v39;
    swift_beginAccess();
    id v40 = v38;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = *(void *)v9;
    *(void *)uint64_t v9 = 0x8000000000000000;
    sub_1004EF5DC(v39, 0, v40, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v9 = v52;
    swift_bridgeObjectRelease();

    swift_endAccess();
    id v42 = (void *)swift_task_alloc();
    *(void *)(v1 + 192) = v42;
    uint64_t v43 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
    uint64_t v44 = sub_1000AFA94(&qword_10095C080);
    *id v42 = v1;
    v42[1] = sub_1001AFE84;
    uint64_t v45 = v1 + 88;
    uint64_t v46 = v39;
    uint64_t v47 = v43;
    goto LABEL_13;
  }
  uint64_t v15 = *(void *)(v10 + 56) + 16 * v12;
  uint64_t v16 = *(void **)v15;
  *(void *)(v1 + 160) = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_1001AEDAC(v16, v17);
  swift_bridgeObjectRelease();

  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = (void *)HKLogActivity;
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(HKLogActivity, v18))
  {
    id v21 = *(id *)(v1 + 120);
    loga = v19;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138412290;
    *(void *)(v1 + 104) = v21;
    uint64_t v24 = v16;
    char v25 = v17;
    id v26 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v21;

    char v17 = v25;
    uint64_t v16 = v24;
    _os_log_impl((void *)&_mh_execute_header, loga, v20, "[SeymourWorkoutRecommendationDataProvider] Found artwork in cache for %@.", v22, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  if (v17)
  {
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void *))(v1 + 8);
    return v27(v16);
  }
  swift_retain();
  id v48 = (void *)swift_task_alloc();
  *(void *)(v1 + 168) = v48;
  uint64_t v49 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
  uint64_t v44 = sub_1000AFA94(&qword_10095C080);
  *id v48 = v1;
  v48[1] = sub_1001AFCD0;
  uint64_t v45 = v1 + 96;
  uint64_t v46 = (uint64_t)v16;
  uint64_t v47 = v49;
LABEL_13:
  return Task.value.getter(v45, v46, v47, v44, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001AFCD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    os_log_type_t v4 = sub_1001B00BC;
  }
  else {
    os_log_type_t v4 = sub_1001AFDFC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001AFDFC()
{
  uint64_t v1 = (void *)v0[20];
  sub_1001AEDC8(v1, 0);
  sub_1001AEDC8(v1, 0);
  uint64_t v2 = v0[12];
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1001AFE84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    os_log_type_t v4 = sub_1001B013C;
  }
  else {
    os_log_type_t v4 = sub_1001AFFB0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001AFFB0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void *)v0[15];
  uint64_t v3 = (void *)v0[11];
  swift_beginAccess();
  id v4 = v2;
  id v5 = v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_1004EF5DC((uint64_t)v3, 1, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();

  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(id))v0[1];
  return v7(v5);
}

uint64_t sub_1001B00BC()
{
  uint64_t v1 = *(void **)(v0 + 160);
  sub_1001AEDC8(v1, 0);
  sub_1001AEDC8(v1, 0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001B013C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001B01A8(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(double *)(v8 + 48) = a2;
  *(double *)(v8 + 56) = a3;
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a6;
  return _swift_task_switch(sub_1001B01D0, a7, 0);
}

uint64_t sub_1001B01D0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = sub_1001B36D0(&qword_10094DB78, (void (*)(uint64_t))type metadata accessor for SeymourWorkoutRecommendationDataProvider);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  long long v10 = *(_OWORD *)(v0 + 32);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v10;
  *(void *)(v5 + 40) = v2;
  *(void *)(v5 + 48) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
  *uint64_t v6 = v0;
  v6[1] = sub_1001B0334;
  uint64_t v8 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v10, v4, 0xD00000000000002FLL, 0x80000001007B7000, sub_1001B3368, v5, v7);
}

uint64_t sub_1001B0334()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[4];
    return _swift_task_switch(sub_1001B0470, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1001B0470()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001B04D4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094DB88);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v34 = v10;
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  unint64_t v13 = (void *)HKLogActivity;
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(HKLogActivity, v12))
  {
    id v15 = a2;
    uint64_t v30 = a1;
    id v16 = v15;
    os_log_t v28 = v13;
    uint64_t v29 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a2;
    os_log_type_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = a4;
    os_log_type_t v20 = (void *)v19;
    uint64_t v31 = v11;
    *(_DWORD *)os_log_type_t v18 = 138412290;
    id v35 = v16;
    id v21 = v16;
    a3 = v29;
    uint64_t v11 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v20 = v16;
    a1 = v30;

    os_log_t v22 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, v14, "[SeymourWorkoutRecommendationDataProvider] Fetching artwork for %@.", v18, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    a4 = v33;
    swift_slowDealloc();
    a2 = v32;
    swift_slowDealloc();
  }
  uint64_t v23 = *(void **)(*(void *)(a3 + 120) + OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25 + v24, v11, v8);
  id v26 = a2;
  id v27 = v23;
  sub_100485D1C(a4, (uint64_t)sub_1001B3448, v25);
  swift_release();
}

uint64_t sub_1001B07AC(void *a1, void *a2)
{
  if (a1)
  {
    a1;
    os_log_type_t v3 = static os_log_type_t.default.getter();
    uint64_t v4 = (void *)HKLogActivity;
    os_log_type_t v5 = v3;
    if (os_log_type_enabled(HKLogActivity, v3))
    {
      id v6 = a2;
      log = v4;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v9 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v6;

      _os_log_impl((void *)&_mh_execute_header, log, v5, "[SeymourWorkoutRecommendationDataProvider] Fetched artwork for %@.", v7, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_1000AFA94(&qword_10094DB88);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    os_log_type_t v11 = static os_log_type_t.error.getter();
    os_log_type_t v12 = (void *)HKLogActivity;
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      id v14 = a2;
      id v15 = v12;
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)id v16 = 138412290;
      id v18 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v14;

      _os_log_impl((void *)&_mh_execute_header, v15, v13, "[SeymourWorkoutRecommendationDataProvider] Failed to fetch artwork for %@.", v16, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_1001B31F4();
    swift_allocError();
    *uint64_t v19 = 3;
    sub_1000AFA94(&qword_10094DB88);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_1001B0A88(uint64_t a1, void *a2, void (*a3)(id), uint64_t a4, uint64_t a5)
{
  uint64_t v108 = a5;
  id v109 = a3;
  uint64_t v102 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v101 = *(void *)(v102 - 8);
  uint64_t v8 = *(void *)(v101 + 64);
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v100 = (char *)&v90 - v10;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v103 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v104 = (char *)&v90 - v15;
  __chkstk_darwin(v16);
  id v18 = (char *)&v90 - v17;
  uint64_t v107 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v116 = &type metadata for SeymourWorkoutRecommendation;
  uint64_t v117 = &off_1008D0940;
  uint64_t v114 = a1;
  uint64_t v115 = a2;
  sub_1000AFA94(&qword_10094DBA8);
  uint64_t inited = swift_initStackObject();
  long long v98 = xmmword_1007509E0;
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_100522E98(inited);
  uint64_t v23 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (*(void *)(v22 + 16) && (unint64_t v25 = sub_1000DA1C0(v23, v24), (v26 & 1) != 0))
  {
    sub_10008F484(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v110);
  }
  else
  {
    long long v111 = 0u;
    long long v110 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v111 + 1))
  {
    sub_100074898((uint64_t)&v110);
    goto LABEL_10;
  }
  uint64_t v97 = v18;
  if (!swift_dynamicCast())
  {
LABEL_10:
    static os_log_type_t.error.getter();
    uint64_t v47 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10074E640;
    *(void *)(v48 + 56) = &type metadata for String;
    unint64_t v49 = sub_1000AA64C();
    *(void *)(v48 + 64) = v49;
    *(void *)(v48 + 32) = 0xD00000000000002ALL;
    *(void *)(v48 + 40) = 0x80000001007B70F0;
    uint64_t v50 = v114;
    char v51 = v115;
    *(void *)&long long v110 = 0;
    *((void *)&v110 + 1) = 0xE000000000000000;
    id v52 = v47;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    *(void *)&long long v110 = 91;
    *((void *)&v110 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v53._countAndFlagsBits = v50;
    v53._object = v51;
    String.append(_:)(v53);
    swift_bridgeObjectRelease();
    v54._countAndFlagsBits = 0xD000000000000021;
    v54._object = (void *)0x80000001007B7070;
    String.append(_:)(v54);
    long long v55 = v110;
    *(void *)(v48 + 96) = &type metadata for String;
    *(void *)(v48 + 104) = v49;
    *(_OWORD *)(v48 + 72) = v55;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    v109(0);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v114);
  }
  uint64_t v96 = a4;
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  uint64_t v94 = v112;
  uint64_t v95 = v113;
  static os_log_type_t.default.getter();
  id v27 = (void *)HKLogActivity;
  uint64_t v93 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10074E640;
  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v29 = sub_1000AA64C();
  *(void *)(v28 + 64) = v29;
  *(void *)(v28 + 32) = 0xD00000000000002ALL;
  *(void *)(v28 + 40) = 0x80000001007B70F0;
  unint64_t v92 = 0x80000001007B70F0;
  uint64_t v31 = v114;
  uint64_t v30 = v115;
  *(void *)&long long v110 = 0;
  *((void *)&v110 + 1) = 0xE000000000000000;
  id v32 = v27;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  *(void *)&long long v110 = 91;
  *((void *)&v110 + 1) = 0xE100000000000000;
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = v31;
  v33._object = v30;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 0xD000000000000021;
  v34._object = (void *)0x80000001007B7070;
  String.append(_:)(v34);
  long long v35 = v110;
  *(void *)(v28 + 96) = &type metadata for String;
  *(void *)(v28 + 104) = v29;
  *(_OWORD *)(v28 + 72) = v35;
  uint64_t v36 = v94;
  os_log(_:dso:log:_:_:)();

  uint64_t v37 = v95;
  swift_bridgeObjectRelease();
  uint64_t v38 = v108;
  uint64_t v39 = *(void **)(v108 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  NSString v40 = String._bridgeToObjectiveC()();
  id v41 = [v39 objectForKey:v40];

  if (v41)
  {
    static os_log_type_t.default.getter();
    id v42 = (void *)HKLogActivity;
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_100752410;
    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = v29;
    *(void *)(v43 + 32) = 0xD00000000000002ALL;
    *(void *)(v43 + 40) = v92;
    *(void *)(v43 + 96) = &type metadata for String;
    *(void *)(v43 + 104) = v29;
    *(void *)(v43 + 72) = v36;
    *(void *)(v43 + 80) = v37;
    *(void *)(v43 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v43 + 144) = sub_1001B36D0(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v43 + 112) = v41;
    id v44 = v42;
    id v45 = v41;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v46 = v45;
    v109(v41);
  }
  else
  {
    uint64_t v57 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v58 = (void *)swift_allocObject();
    v58[2] = v57;
    void v58[3] = v36;
    id v59 = v109;
    v58[4] = v37;
    v58[5] = v59;
    uint64_t v60 = v96;
    v58[6] = v96;
    uint64_t v61 = v58;
    sub_10008E75C((uint64_t)&v114, (uint64_t)&v110);
    uint64_t v62 = swift_allocObject();
    uint64_t v93 = v62;
    sub_100093E60(&v110, v62 + 16);
    *(void *)(v62 + 56) = v59;
    *(void *)(v62 + 64) = v60;
    swift_retain_n();
    swift_bridgeObjectRetain();
    double v63 = v105;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    sub_10007E4EC((void *)(v38 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), *(void *)(v38 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24));
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v64 = v106;
    unint64_t v65 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v98;
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 16))(v66 + v65, v63, v107);
    double v67 = v100;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_1001B3638;
    *(void *)(v68 + 24) = v61;
    unint64_t v92 = (unint64_t)v61;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_1001B364C;
    *(void *)(v69 + 24) = v68;
    uint64_t v70 = v101;
    double v71 = v99;
    uint64_t v72 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v67, v102);
    unint64_t v73 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v74 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v74 + v73, v71, v72);
    uint64_t v75 = (uint64_t (**)(uint64_t *))(v74 + ((v8 + v73 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v75 = sub_1001B3668;
    v75[1] = (uint64_t (*)(uint64_t *))v69;
    swift_retain();
    id v109 = (void (*)(id))((char *)&type metadata for () + 8);
    char v76 = v104;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v72);
    uint64_t v77 = swift_allocObject();
    uint64_t v78 = v93;
    *(void *)(v77 + 16) = sub_1001B3640;
    *(void *)(v77 + 24) = v78;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = sub_1001B369C;
    *(void *)(v79 + 24) = v77;
    uint64_t v80 = v90;
    uint64_t v81 = v103;
    uint64_t v82 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v103, v76, v91);
    unint64_t v83 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    uint64_t v84 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v84 + v83, v81, v82);
    uint64_t v85 = (uint64_t (**)(uint64_t))(v84 + ((v13 + v83 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v85 = sub_1001B36B8;
    v85[1] = (uint64_t (*)(uint64_t))v79;
    swift_retain();
    os_log_type_t v86 = v97;
    Promise.init(asyncOperation:)();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
    v87(v76, v82);
    uint64_t v88 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
    uint64_t v89 = swift_allocObject();
    *(void *)(v89 + 16) = 0;
    *(void *)(v89 + 24) = 0;
    v88(sub_10006D8B4, v89);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v87(v86, v82);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v114);
}

uint64_t sub_1001B173C(void *a1, void (*a2)(void), uint64_t a3, char *a4)
{
  id v109 = a4;
  uint64_t v102 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v101 = *(void *)(v102 - 8);
  uint64_t v7 = *(void *)(v101 + 64);
  uint64_t v8 = __chkstk_darwin(v102);
  uint64_t v9 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v90 - v10;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v103 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v90 - v17;
  __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v90 - v18;
  uint64_t v19 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v107 = *(void *)(v19 - 8);
  uint64_t v108 = v19;
  __chkstk_darwin(v19);
  uint64_t v106 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114[3] = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  v114[4] = &off_1008C0440;
  v114[0] = a1;
  id v21 = [a1 metadata];
  if (!v21)
  {
    long long v110 = 0u;
    long long v111 = 0u;
    goto LABEL_10;
  }
  unint64_t v22 = v21;
  uint64_t v100 = v13;
  uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v23 + 16) || (unint64_t v26 = sub_1000DA1C0(v24, v25), (v27 & 1) == 0))
  {
    long long v110 = 0u;
    long long v111 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v111 + 1))
  {
LABEL_10:
    sub_100074898((uint64_t)&v110);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v48 = a2;
    static os_log_type_t.error.getter();
    unint64_t v49 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_10074E640;
    *(void *)(v50 + 56) = &type metadata for String;
    unint64_t v51 = sub_1000AA64C();
    *(void *)(v50 + 64) = v51;
    *(void *)(v50 + 32) = 0xD00000000000002ALL;
    *(void *)(v50 + 40) = 0x80000001007B70F0;
    id v52 = (void *)v114[0];
    id v53 = v49;
    id v54 = [v52 description];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;

    *(void *)(v50 + 96) = &type metadata for String;
    *(void *)(v50 + 104) = v51;
    *(void *)(v50 + 72) = v55;
    *(void *)(v50 + 80) = v57;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    v48(0);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v114);
  }
  uint64_t v91 = v12;
  uint64_t v98 = v112;
  uint64_t v99 = v113;
  LODWORD(v97) = static os_log_type_t.default.getter();
  uint64_t v28 = (void *)HKLogActivity;
  uint64_t v94 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10074E640;
  *(void *)(v29 + 56) = &type metadata for String;
  unint64_t v30 = sub_1000AA64C();
  *(void *)(v29 + 64) = v30;
  *(void *)(v29 + 32) = 0xD00000000000002ALL;
  *(void *)(v29 + 40) = 0x80000001007B70F0;
  unint64_t v92 = 0x80000001007B70F0;
  uint64_t v31 = (void *)v114[0];
  id v96 = v28;
  id v32 = [v31 description];
  uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  *(void *)(v29 + 96) = &type metadata for String;
  *(void *)(v29 + 104) = v30;
  unint64_t v93 = v30;
  *(void *)(v29 + 72) = v95;
  *(void *)(v29 + 80) = v34;
  uint64_t v35 = v98;
  uint64_t v36 = v96;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v37 = v109;
  uint64_t v38 = *(void **)&v109[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache];
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [v38 objectForKey:v39];

  if (v40)
  {
    static os_log_type_t.default.getter();
    id v41 = (void *)HKLogActivity;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_100752410;
    unint64_t v43 = v93;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v43;
    *(void *)(v42 + 32) = 0xD00000000000002ALL;
    *(void *)(v42 + 40) = v92;
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v43;
    uint64_t v44 = v99;
    *(void *)(v42 + 72) = v35;
    *(void *)(v42 + 80) = v44;
    *(void *)(v42 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v42 + 144) = sub_1001B36D0(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v42 + 112) = v40;
    id v45 = v41;
    id v46 = v40;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v47 = v46;
    a2(v40);
  }
  else
  {
    uint64_t v59 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v60 = (void *)swift_allocObject();
    uint64_t v97 = v60;
    v60[2] = v59;
    v60[3] = v35;
    v60[4] = v99;
    v60[5] = a2;
    v60[6] = a3;
    sub_10008E75C((uint64_t)v114, (uint64_t)&v110);
    uint64_t v61 = swift_allocObject();
    id v96 = (id)v61;
    sub_100093E60(&v110, v61 + 16);
    *(void *)(v61 + 56) = a2;
    *(void *)(v61 + 64) = a3;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v62 = v106;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    uint64_t v63 = *(void *)&v37[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
    id v109 = *(char **)&v37[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
    sub_10007E4EC(&v37[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], v63);
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v64 = v107;
    unint64_t v65 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 16))(v66 + v65, v62, v108);
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v67 = swift_allocObject();
    uint64_t v68 = v97;
    *(void *)(v67 + 16) = sub_1001B3638;
    *(void *)(v67 + 24) = v68;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_1001B3D54;
    *(void *)(v69 + 24) = v67;
    uint64_t v70 = v101;
    uint64_t v71 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v9, v11, v102);
    unint64_t v72 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    unint64_t v73 = (v7 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v74 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v74 + v72, v9, v71);
    uint64_t v75 = (void *)(v74 + v73);
    *uint64_t v75 = sub_1001B3D84;
    v75[1] = v69;
    swift_retain();
    id v109 = (char *)&type metadata for () + 8;
    char v76 = v104;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v71);
    uint64_t v77 = swift_allocObject();
    id v78 = v96;
    *(void *)(v77 + 16) = sub_1001B3D1C;
    *(void *)(v77 + 24) = v78;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = sub_1001B3D6C;
    *(void *)(v79 + 24) = v77;
    uint64_t v80 = v100;
    uint64_t v81 = v103;
    uint64_t v82 = v91;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v103, v76, v91);
    unint64_t v83 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    uint64_t v84 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v84 + v83, v81, v82);
    uint64_t v85 = (void *)(v84 + ((v14 + v83 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v85 = sub_1001B3D88;
    v85[1] = v79;
    swift_retain();
    os_log_type_t v86 = v105;
    Promise.init(asyncOperation:)();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
    v87(v76, v82);
    uint64_t v88 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v89 = swift_allocObject();
    *(void *)(v89 + 16) = 0;
    *(void *)(v89 + 24) = 0;
    v88(sub_10006D36C, v89);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v87(v86, v82);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v108);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v114);
}

uint64_t sub_1001B22D0(void *a1, void (*a2)(void), uint64_t a3, char *a4)
{
  long long v111 = a4;
  uint64_t v7 = sub_1000AFA94(&qword_10094DBA0);
  uint64_t v104 = *(void *)(v7 - 8);
  uint64_t v105 = v7;
  uint64_t v8 = *(void *)(v104 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v92 - v11;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v106 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v107 = (char *)&v92 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v92 - v19;
  uint64_t v21 = type metadata accessor for CatalogLockupPlaceholder();
  uint64_t v109 = *(void *)(v21 - 8);
  uint64_t v110 = v21;
  __chkstk_darwin(v21);
  uint64_t v108 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116[3] = type metadata accessor for MindfulnessSessionViewModel();
  v116[4] = &off_1008C0428;
  v116[0] = a1;
  id v23 = a1;
  uint64_t v24 = MindfulnessSessionViewModel.metadata.getter();
  if (!v24)
  {
    long long v112 = 0u;
    long long v113 = 0u;
    goto LABEL_10;
  }
  uint64_t v25 = v24;
  uint64_t v103 = v20;
  uint64_t v26 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v25 + 16) || (unint64_t v28 = sub_1000DA1C0(v26, v27), (v29 & 1) == 0))
  {
    long long v112 = 0u;
    long long v113 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v25 + 56) + 32 * v28, (uint64_t)&v112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v113 + 1))
  {
LABEL_10:
    sub_100074898((uint64_t)&v112);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v50 = a2;
    static os_log_type_t.error.getter();
    unint64_t v51 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_10074E640;
    *(void *)(v52 + 56) = &type metadata for String;
    unint64_t v53 = sub_1000AA64C();
    *(void *)(v52 + 64) = v53;
    *(void *)(v52 + 32) = 0xD00000000000002ALL;
    *(void *)(v52 + 40) = 0x80000001007B70F0;
    id v54 = (void *)v116[0];
    id v55 = v51;
    id v56 = [v54 description];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;

    *(void *)(v52 + 96) = &type metadata for String;
    *(void *)(v52 + 104) = v53;
    *(void *)(v52 + 72) = v57;
    *(void *)(v52 + 80) = v59;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    v50(0);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v116);
  }
  uint64_t v93 = v14;
  uint64_t v94 = v13;
  uint64_t v101 = v114;
  uint64_t v102 = v115;
  LODWORD(v100) = static os_log_type_t.default.getter();
  unint64_t v30 = (void *)HKLogActivity;
  uint64_t v97 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10074E640;
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v32 = sub_1000AA64C();
  *(void *)(v31 + 64) = v32;
  *(void *)(v31 + 32) = 0xD00000000000002ALL;
  *(void *)(v31 + 40) = 0x80000001007B70F0;
  unint64_t v95 = 0x80000001007B70F0;
  uint64_t v33 = (void *)v116[0];
  id v99 = v30;
  id v34 = [v33 description];
  uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  *(void *)(v31 + 96) = &type metadata for String;
  *(void *)(v31 + 104) = v32;
  unint64_t v96 = v32;
  *(void *)(v31 + 72) = v98;
  *(void *)(v31 + 80) = v36;
  uint64_t v37 = v101;
  uint64_t v38 = v99;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  NSString v39 = v111;
  id v40 = *(void **)&v111[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache];
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v40 objectForKey:v41];

  if (v42)
  {
    static os_log_type_t.default.getter();
    unint64_t v43 = (void *)HKLogActivity;
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_100752410;
    unint64_t v45 = v96;
    *(void *)(v44 + 56) = &type metadata for String;
    *(void *)(v44 + 64) = v45;
    *(void *)(v44 + 32) = 0xD00000000000002ALL;
    *(void *)(v44 + 40) = v95;
    *(void *)(v44 + 96) = &type metadata for String;
    *(void *)(v44 + 104) = v45;
    uint64_t v46 = v102;
    *(void *)(v44 + 72) = v37;
    *(void *)(v44 + 80) = v46;
    *(void *)(v44 + 136) = type metadata accessor for CatalogItemViewModel();
    *(void *)(v44 + 144) = sub_1001B36D0(&qword_10094DBB8, (void (*)(uint64_t))type metadata accessor for CatalogItemViewModel);
    *(void *)(v44 + 112) = v42;
    id v47 = v43;
    id v48 = v42;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    id v49 = v48;
    a2(v42);
  }
  else
  {
    uint64_t v61 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v62 = (void *)swift_allocObject();
    uint64_t v100 = v62;
    v62[2] = v61;
    v62[3] = v37;
    v62[4] = v102;
    v62[5] = a2;
    v62[6] = a3;
    sub_10008E75C((uint64_t)v116, (uint64_t)&v112);
    uint64_t v63 = swift_allocObject();
    id v99 = (id)v63;
    sub_100093E60(&v112, v63 + 16);
    *(void *)(v63 + 56) = a2;
    *(void *)(v63 + 64) = a3;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v64 = v108;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
    uint64_t v65 = *(void *)&v39[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
    long long v111 = *(char **)&v39[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
    sub_10007E4EC(&v39[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], v65);
    sub_1000AFA94(&qword_10094DBB0);
    uint64_t v66 = v109;
    unint64_t v67 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, char *, uint64_t))(v66 + 16))(v68 + v67, v64, v110);
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_bridgeObjectRelease();
    uint64_t v69 = swift_allocObject();
    uint64_t v70 = v100;
    *(void *)(v69 + 16) = sub_1001B3638;
    *(void *)(v69 + 24) = v70;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = sub_1001B3D54;
    *(void *)(v71 + 24) = v69;
    uint64_t v73 = v104;
    uint64_t v72 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v10, v12, v105);
    unint64_t v74 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    unint64_t v75 = (v8 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v76 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v76 + v74, v10, v72);
    uint64_t v77 = (void *)(v76 + v75);
    *uint64_t v77 = sub_1001B3D84;
    v77[1] = v71;
    swift_retain();
    long long v111 = (char *)&type metadata for () + 8;
    id v78 = v107;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v12, v72);
    uint64_t v79 = swift_allocObject();
    id v80 = v99;
    *(void *)(v79 + 16) = sub_1001B3D1C;
    *(void *)(v79 + 24) = v80;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = sub_1001B3D6C;
    *(void *)(v81 + 24) = v79;
    uint64_t v82 = v93;
    unint64_t v83 = v106;
    uint64_t v84 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v106, v78, v94);
    unint64_t v85 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    uint64_t v86 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v86 + v85, v83, v84);
    uint64_t v87 = (void *)(v86 + ((v15 + v85 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v87 = sub_1001B3D88;
    v87[1] = v81;
    swift_retain();
    uint64_t v88 = v103;
    Promise.init(asyncOperation:)();
    uint64_t v89 = *(void (**)(char *, uint64_t))(v82 + 8);
    v89(v78, v84);
    uint64_t v90 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = 0;
    *(void *)(v91 + 24) = 0;
    v90(sub_10006D36C, v91);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v89(v88, v84);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v116);
}

uint64_t sub_1001B2E20()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1001B2E40, v0, 0);
}

uint64_t sub_1001B2E40()
{
  uint64_t v1 = v0[2];
  unint64_t v2 = *(void *)(v1 + 128);
  v0[3] = v2;
  if (v2 >> 62)
  {
    if (*(void *)(v1 + 128) >> 62 == 1)
    {
      uint64_t v5 = *(void *)(v1 + 136);
      id v6 = (uint64_t (*)(uint64_t))v0[1];
      return v6(v5);
    }
    else
    {
      sub_1001B31F4();
      swift_allocError();
      *uint64_t v7 = 1;
      swift_willThrow();
      uint64_t v8 = (uint64_t (*)(void))v0[1];
      return v8();
    }
  }
  else
  {
    swift_retain();
    os_log_type_t v3 = (void *)swift_task_alloc();
    v0[4] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_10095C080);
    *os_log_type_t v3 = v0;
    v3[1] = sub_1001B2FD4;
    return Task.value.getter(v4, v2, (char *)&type metadata for () + 8, v4, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_1001B2FD4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_1001B3D20;
  }
  else
  {
    uint64_t v4 = sub_1001B310C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1001B310C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(void *)(v1 + 128) >> 62 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 136);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    sub_1001B31F4();
    swift_allocError();
    *uint64_t v5 = 1;
    swift_willThrow();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

unint64_t sub_1001B31F4()
{
  unint64_t result = qword_10094DB60;
  if (!qword_10094DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10094DB60);
  }
  return result;
}

uint64_t sub_1001B3248()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B3298(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1000DBD6C;
  *(void *)(v7 + 48) = v5;
  *(void *)(v7 + 56) = v6;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v4;
  return _swift_task_switch(sub_1001B01D0, v8, 0);
}

void sub_1001B3368(uint64_t a1)
{
  sub_1001B04D4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1001B3378()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094DB88);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001B3448(void *a1)
{
  sub_1000AFA94(&qword_10094DB88);
  unint64_t v3 = *(void **)(v1 + 16);

  return sub_1001B07AC(a1, v3);
}

void sub_1001B34C0(uint64_t a1)
{
  sub_1001AF3F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1001B34CC()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094DB98);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1001B3560(void *a1)
{
  sub_1000AFA94(&qword_10094DB98);

  return sub_1001AF57C(a1);
}

uint64_t sub_1001B35D4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001B360C()
{
  return sub_1001B3BC4((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B3640(uint64_t a1)
{
  return sub_100483B90(a1, (void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 56));
}

uint64_t sub_1001B364C(void *a1)
{
  return sub_100483CF8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001B3668(uint64_t *a1)
{
  return sub_10048C728(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B3670()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_1001B367C(uint64_t a1, uint64_t a2)
{
  return sub_1001B3C50(a1, a2, &qword_10094DBA0, sub_10048B8F8);
}

uint64_t sub_1001B369C(uint64_t a1)
{
  return sub_1004836C0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001B36B8(uint64_t a1)
{
  return sub_10048B6B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B36C0()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1001B36D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B3718()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001B3750()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B3790()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10005DB5C;
  void v3[5] = v2;
  return _swift_task_switch(sub_1001AD6D4, 0, 0);
}

uint64_t sub_1001B383C()
{
  return sub_1001B3BC4((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001B3868()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10005DB5C;
  *(void *)(v3 + 136) = v2;
  *(_OWORD *)(v3 + 120) = v4;
  return _swift_task_switch(sub_1001ADEF0, 0, 0);
}

uint64_t sub_1001B391C(uint64_t a1)
{
  return sub_100487F64(a1, *(void *)(v1 + 16));
}

uint64_t getEnumTagSinglePayload for SeymourWorkoutRecommendationDataProviderError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SeymourWorkoutRecommendationDataProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B3A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeymourWorkoutRecommendationDataProviderError()
{
  return &type metadata for SeymourWorkoutRecommendationDataProviderError;
}

unint64_t sub_1001B3AC0()
{
  unint64_t result = qword_10094DBE8;
  if (!qword_10094DBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DBE8);
  }
  return result;
}

uint64_t sub_1001B3B14()
{
  return sub_1001B3BC4((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B3B44()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B3B7C()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_1001B3B88()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1001B3B98()
{
  return sub_1001B3BC4((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B3BC4(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B3C24(uint64_t a1)
{
  return sub_1004836E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1001B3C38()
{
  return sub_10001EC00(&qword_10094DBA0);
}

uint64_t sub_1001B3C44()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1001B3C50(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1001B3D54(void *a1)
{
  return sub_1001B364C(a1);
}

uint64_t sub_1001B3D6C(uint64_t a1)
{
  return sub_1001B369C(a1);
}

char *sub_1001B3D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for WorkoutsListContentView());
  uint64_t v7 = v3;
  id v8 = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView] = v8;

  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for WorkoutsListTableViewCell();
  uint64_t v10 = (char *)[v14 initWithStyle:a1 reuseIdentifier:v9];

  uint64_t v11 = *(void *)&v10[OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView];
  uint64_t v12 = v10;
  [v12 addSubview:v11];
  sub_1001B3EEC();

  return v12;
}

void sub_1001B3EEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 leadingAnchor];
  id v9 = [v1 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 trailingAnchor];
  id v12 = [v1 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 bottomAnchor];
  id v15 = [v1 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

uint64_t sub_1001B430C(void *a1, void *a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  char v13 = a5 & 1;
  id v14 = *(unsigned char **)(v7 + OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a6;
  void v16[4] = a7;
  uint64_t v17 = *(void **)&v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout];
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout] = a1;
  swift_retain();
  sub_10008A670(a6);
  id v18 = a1;

  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_achievementCount] = a4;
  uint64_t v19 = *(void **)&v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager];
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager] = a3;
  id v20 = a3;

  v14[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_diveDisplayStyle] = v13;
  sub_100717ADC(v18, a2, v20, a4, v13, (uint64_t)sub_1001B605C, (uint64_t)v16);
  [v14 configureWithCurrentWorkout];
  swift_release();

  return swift_release();
}

uint64_t sub_1001B4488(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1001B6068;
  *(void *)(v5 + 24) = a1;
  void v8[4] = sub_1001B6080;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100535118;
  v8[3] = &unk_1008B9B10;
  id v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  [(id)v4 performWithoutAnimation:v6];
  _Block_release(v6);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    if (a2) {
      a2(result);
    }
    return swift_release();
  }
  return result;
}

void sub_1001B45F0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong invalidateIntrinsicContentSize];
  }
}

id sub_1001B4718()
{
  return sub_1001B5960(type metadata accessor for WorkoutsListTableViewCell);
}

uint64_t type metadata accessor for WorkoutsListTableViewCell()
{
  return self;
}

char *sub_1001B4764(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout] = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager] = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_achievementCount] = 0;
  v4[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_diveDisplayStyle] = 1;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView;
  id v10 = objc_allocWithZone((Class)UIView);
  id v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView;
  id v14 = [objc_allocWithZone((Class)type metadata accessor for WorkoutCellImageLabelView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v13] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_dateLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v15] = v16;

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for WorkoutsListContentView();
  uint64_t v17 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView;
  uint64_t v19 = *(void **)&v17[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView];
  id v20 = v17;
  id v21 = v19;
  id v22 = sub_10049E184();
  [v21 setBackgroundColor:v22];

  id v23 = [*(id *)&v17[v18] layer];
  [v23 setCornerRadius:sub_10049E1B0()];

  uint64_t v24 = *(void **)&v17[v18];
  [v24 addSubview:*(void *)&v20[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView]];
  [v24 addSubview:*(void *)&v20[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_dateLabel]];
  [v20 addSubview:v24];
  sub_1001B4A34();

  return v20;
}

void sub_1001B4A34()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100752640;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView];
  id v4 = [v3 topAnchor];
  id v5 = [v0 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5 constant:sub_10049E1C0()];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 leadingAnchor];
  id v8 = [v0 leadingAnchor];
  sub_10049E1C0();
  id v10 = [v7 constraintEqualToAnchor:v8 constant:v9];

  *(void *)(v2 + 40) = v10;
  id v11 = [v3 trailingAnchor];
  id v12 = [v0 trailingAnchor];
  sub_10049E1C0();
  id v14 = [v11 constraintEqualToAnchor:v12 constant:-v13];

  *(void *)(v2 + 48) = v14;
  id v15 = [v3 bottomAnchor];
  id v16 = [v0 bottomAnchor];
  sub_10049E1C0();
  id v18 = [v15 constraintEqualToAnchor:v16 constant:-v17];

  *(void *)(v2 + 56) = v18;
  uint64_t v19 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView];
  id v20 = [v19 leadingAnchor];
  id v21 = [v3 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:16.0];

  *(void *)(v2 + 64) = v22;
  id v23 = [v19 topAnchor];
  id v24 = [v3 topAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v2 + 72) = v25;
  id v26 = [v19 bottomAnchor];
  id v27 = [v3 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v2 + 80) = v28;
  id v29 = [v19 trailingAnchor];
  id v30 = [v3 trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:-16.0];

  *(void *)(v2 + 88) = v31;
  specialized Array._endMutation()();
  unint64_t v67 = v2;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752650;
  uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_dateLabel];
  id v34 = [v33 leadingAnchor];
  id v35 = [v3 leadingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:16.0];

  uint64_t v68 = v36;
  *(void *)(inited + 32) = v36;
  id v37 = [v33 topAnchor];
  uint64_t v38 = OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel;
  id v39 = [*(id *)&v19[OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel] lastBaselineAnchor];
  id v40 = [v37 constraintGreaterThanOrEqualToAnchor:v39 constant:10.0];

  uint64_t v66 = v40;
  *(void *)(inited + 40) = v40;
  id v41 = [v33 lastBaselineAnchor];
  id v42 = [*(id *)&v19[OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel] lastBaselineAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(inited + 48) = v43;
  id v44 = [v33 trailingAnchor];
  id v45 = [v3 trailingAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45 constant:-16.0];

  id v47 = [v33 lastBaselineAnchor];
  id v48 = [*(id *)&v19[v38] lastBaselineAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  id v50 = [self sharedApplication];
  id v51 = [v50 preferredContentSizeCategory];

  LOBYTE(v50) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v50)
  {
    swift_arrayDestroy();
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
      BOOL v64 = __OFADD__(v63, 3);
      uint64_t v53 = v63 + 3;
      if (!v64)
      {
LABEL_4:
        sub_1005708D8(v53);
        specialized Array._endMutation()();
        id v54 = v68;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_5:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v55 = v66;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v56 = v43;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
LABEL_20:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v53 = v52 + 3;
      if (!__OFADD__(v52, 3)) {
        goto LABEL_4;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  if (!(v67 >> 62))
  {
    uint64_t v57 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v58 = v57 + 2;
    if (!__OFADD__(v57, 2)) {
      goto LABEL_12;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  BOOL v64 = __OFADD__(v65, 2);
  uint64_t v58 = v65 + 2;
  if (v64) {
    goto LABEL_23;
  }
LABEL_12:
  sub_1005708D8(v58);
  specialized Array._endMutation()();
  id v59 = v46;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_24:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v60 = v49;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
LABEL_16:
  uint64_t v61 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v61 activateConstraints:isa];
}

void sub_1001B538C()
{
  uint64_t v1 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v1);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager);
    if (v3)
    {
      id v22 = v2;
      id v23 = v3;
      id v4 = [v23 formattedDateForWorkout:v22 context:@"WorkoutsListDisplayContext"];
      id v5 = [v4 string];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10074E640;
      *(void *)(inited + 32) = NSFontAttributeName;
      id v7 = self;
      id v8 = NSFontAttributeName;
      id v9 = [v7 preferredFontForTextStyle:UIFontTextStyleFootnote];
      uint64_t v10 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
      *(void *)(inited + 40) = v9;
      *(void *)(inited + 64) = v10;
      *(void *)(inited + 72) = NSForegroundColorAttributeName;
      id v11 = self;
      id v12 = NSForegroundColorAttributeName;
      id v13 = [v11 secondaryLabelColor];
      *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      *(void *)(inited + 80) = v13;
      sub_1000DFC2C(inited);
      id v14 = objc_allocWithZone((Class)NSAttributedString);
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10008F6EC((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v14 initWithString:v15 attributes:isa];

      [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_dateLabel) setAttributedText:v17];
      id v18 = v22;
      id v19 = v23;
      sub_10020F97C(v18, v19, v24);
      sub_1001B5A54((uint64_t)v24);
      sub_10008F6EC((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      sub_1000AFA94((uint64_t *)&unk_10096AA80);
      sub_1001B5C10();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v20 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      sub_1001B5C6C();
      id v21 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      UIView.annotate(with:)();

      sub_1001B5CC0((uint64_t)v24);
    }
  }
}

void sub_1001B585C()
{
  swift_getObjectType();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView);
  [*(id *)(v1 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView) setImage:0];
  [*(id *)(v1 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView) setImage:0];
  *(void *)(v1 + OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount) = 0;
  [*(id *)(v1 + OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView) setHidden:1];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView);
  id v3 = sub_10049E184();
  [v2 setBackgroundColor:v3];
}

id sub_1001B5948()
{
  return sub_1001B5960(type metadata accessor for WorkoutsListContentView);
}

id sub_1001B5960(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutsListContentView()
{
  return self;
}

unint64_t sub_1001B5A38()
{
  return 0xD000000000000019;
}

uint64_t sub_1001B5A54(uint64_t a1)
{
  id v4 = *(void **)(a1 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v2 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1001B5C10()
{
  unint64_t result = qword_10094C760;
  if (!qword_10094C760)
  {
    sub_1000A1370((uint64_t *)&unk_10096AA80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C760);
  }
  return result;
}

unint64_t sub_1001B5C6C()
{
  unint64_t result = qword_10094DC80;
  if (!qword_10094DC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DC80);
  }
  return result;
}

uint64_t sub_1001B5CC0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 224);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1001B5E74()
{
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_achievementCount] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_diveDisplayStyle] = 1;
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView;
  id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView;
  id v4 = [objc_allocWithZone((Class)type metadata accessor for WorkoutCellImageLabelView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_dateLabel;
  id v6 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v5] = v6;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001B5FDC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001B6014()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1001B605C()
{
  return sub_1001B4488(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

void sub_1001B6068()
{
}

uint64_t sub_1001B6070()
{
  return swift_deallocObject();
}

uint64_t sub_1001B6080()
{
  return sub_100447A90(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1001B6088()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1001B60C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = type metadata accessor for URLComponents();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v35 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v32 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)v32 - v12;
  __chkstk_darwin(v14);
  id v16 = (char *)v32 - v15;
  uint64_t v17 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  id v40 = v16;
  URLQueryItem.init(name:value:)();
  id v39 = v13;
  URLQueryItem.init(name:value:)();
  uint64_t v38 = v10;
  URLQueryItem.init(name:value:)();
  id v37 = v7;
  URLQueryItem.init(name:value:)();
  id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (!v20(v19, 1, v1))
  {
    sub_1000AFA94(&qword_10095B800);
    uint64_t v33 = v2;
    uint64_t v21 = *(void *)(v5 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v23 = swift_allocObject();
    v32[1] = v23;
    *(_OWORD *)(v23 + 16) = xmmword_1007526C0;
    unint64_t v24 = v23 + v22;
    uint64_t v34 = v1;
    id v25 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 16);
    v25(v24, v40, v4);
    v25(v24 + v21, v39, v4);
    v25(v24 + 2 * v21, v38, v4);
    uint64_t v26 = 3 * v21;
    uint64_t v2 = v33;
    v25(v24 + v26, v37, v4);
    uint64_t v1 = v34;
    URLComponents.queryItems.setter();
  }
  if (v20(v19, 1, v1))
  {
    id v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v37, v4);
    v27(v38, v4);
    v27(v39, v4);
    v27(v40, v4);
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v36, 1, 1, v28);
  }
  else
  {
    id v29 = v35;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v35, v19, v1);
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v29, v1);
    id v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v37, v4);
    v30(v38, v4);
    v30(v39, v4);
    v30(v40, v4);
  }
  return sub_1001B6614((uint64_t)v19);
}

uint64_t type metadata accessor for TrendsRadarHandler()
{
  return self;
}

uint64_t sub_1001B6614(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DD20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for TrendsCoachingUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrendsCoachingUserInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  return a1;
}

__n128 initializeWithTake for TrendsCoachingUserInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TrendsCoachingUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsCoachingUserInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 43)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsCoachingUserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 43) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 43) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsCoachingUserInfo()
{
  return &type metadata for TrendsCoachingUserInfo;
}

void *initializeBufferWithCopyOfBuffer for ActivitySharingFriendListSectionView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ActivitySharingFriendListSectionView()
{
  return swift_release();
}

void *assignWithCopy for ActivitySharingFriendListSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for ActivitySharingFriendListSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendListSectionView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendListSectionView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendListSectionView()
{
  return &type metadata for ActivitySharingFriendListSectionView;
}

uint64_t sub_1001B6A1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B6A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094DD28);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094DD30);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v17)
    {
      uint64_t v13 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v13;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a1;
      *(void *)(v14 + 24) = a2;
      swift_retain();
      sub_1000AFA94(&qword_10094DD88);
      sub_1000AFA94(&qword_10094DD48);
      sub_1000A132C(&qword_10094DD90, &qword_10094DD88);
      sub_1001B7678();
      uint64_t v16 = a3;
      sub_1001B78F0(&qword_10094DD98, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDateItemGroup);
      ForEach<>.init(_:content:)();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
      swift_storeEnumTagMultiPayload();
      sub_1001B7604();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_1001B7604();
      return _ConditionalContent<>.init(storage:)();
    }
  }
  else
  {
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_1001B78F0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B6DBC(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DD68);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094DD58);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = self;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v13 = [v11 stringWithEitherTodayOrLongStyleDateFromDate:isa];

  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0xE000000000000000;
  }
  *(void *)int v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  uint8_t v4[16] = 1;
  uint64_t v17 = sub_1000AFA94(&qword_10094DDA0);
  sub_1001B7220(v14, v16, (uint64_t)&v4[*(int *)(v17 + 44)]);
  swift_bridgeObjectRelease();
  char v18 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v10, &qword_10094DD68);
  id v19 = &v10[*(int *)(v5 + 36)];
  *id v19 = v18;
  *(_OWORD *)(v19 + 8) = xmmword_100752730;
  *(_OWORD *)(v19 + 24) = xmmword_1007509A0;
  v19[40] = 0;
  sub_10008DB18((uint64_t)v4, &qword_10094DD68);
  uint64_t v20 = sub_1000AEF2C((uint64_t)v10, (uint64_t)v8, &qword_10094DD58);
  __chkstk_darwin(v20);
  *(&v22 - 2) = a1;
  sub_1000AFA94(&qword_10094DD78);
  sub_1001B7700();
  sub_1001B77A0();
  Section<>.init(header:content:)();
  return sub_10008DB18((uint64_t)v10, &qword_10094DD58);
}

uint64_t sub_1001B7048()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1001B7198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001B788C(a1, a2);
  uint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ActivitySharingFriendListItemView() + 20));
  type metadata accessor for ActivitySharingNavigationCoordinator();
  sub_1001B78F0(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  uint64_t result = EnvironmentObject.init()();
  *uint64_t v3 = result;
  v3[1] = v5;
  return result;
}

uint64_t sub_1001B7220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v39 = sub_1000AFA94(&qword_10094DDC0) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000AFA94(&qword_10094DDC8);
  __chkstk_darwin(v6 - 8);
  id v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094DDD0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000AFA94(&qword_10094DDD8) - 8;
  uint64_t v12 = __chkstk_darwin(v41);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v40 = (uint64_t)&v35 - v15;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  uint64_t v36 = v19;
  char v21 = v20 & 1;
  uint64_t v22 = enum case for Text.Case.uppercase(_:);
  uint64_t v23 = type metadata accessor for Text.Case();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v37, v22, v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, v23);
  uint64_t KeyPath = swift_getKeyPath();
  id v27 = v38;
  sub_1000AEF2C(v25, (uint64_t)v38 + *(int *)(v39 + 36), &qword_10094DDC8);
  *id v27 = KeyPath;
  sub_1000AEF2C((uint64_t)v27, (uint64_t)&v11[*(int *)(v9 + 44)], &qword_10094DDC0);
  *(void *)uint64_t v11 = v16;
  *((void *)v11 + 1) = v18;
  v11[16] = v21;
  *((void *)v11 + 3) = v36;
  sub_1000A1750(v16, v18, v21);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v27, &qword_10094DDC0);
  sub_10008DB18(v25, &qword_10094DDC8);
  sub_1000A06C0(v16, v18, v21);
  swift_bridgeObjectRelease();
  uint64_t v28 = static Color.gray.getter();
  uint64_t v29 = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_10094DDD0);
  id v30 = (uint64_t *)&v14[*(int *)(v41 + 44)];
  *id v30 = v29;
  v30[1] = v28;
  sub_10008DB18((uint64_t)v11, &qword_10094DDD0);
  uint64_t v31 = v40;
  sub_1001B7948((uint64_t)v14, v40);
  sub_1000AEF2C(v31, (uint64_t)v14, &qword_10094DDD8);
  uint64_t v32 = v42;
  sub_1000AEF2C((uint64_t)v14, v42, &qword_10094DDD8);
  uint64_t v33 = v32 + *(int *)(sub_1000AFA94(&qword_10094DDE0) + 48);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 1;
  sub_10008DB18(v31, &qword_10094DDD8);
  return sub_10008DB18((uint64_t)v14, &qword_10094DDD8);
}

uint64_t sub_1001B75F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B6A38(*v1, v1[1], a1);
}

unint64_t sub_1001B7604()
{
  unint64_t result = qword_10094DD38;
  if (!qword_10094DD38)
  {
    sub_1000A1370(&qword_10094DD30);
    sub_1001B7678();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DD38);
  }
  return result;
}

unint64_t sub_1001B7678()
{
  unint64_t result = qword_10094DD40;
  if (!qword_10094DD40)
  {
    sub_1000A1370(&qword_10094DD48);
    sub_1001B7700();
    sub_1001B77A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DD40);
  }
  return result;
}

unint64_t sub_1001B7700()
{
  unint64_t result = qword_10094DD50;
  if (!qword_10094DD50)
  {
    sub_1000A1370(&qword_10094DD58);
    sub_1000A132C(&qword_10094DD60, &qword_10094DD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DD50);
  }
  return result;
}

unint64_t sub_1001B77A0()
{
  unint64_t result = qword_10094DD70;
  if (!qword_10094DD70)
  {
    sub_1000A1370(&qword_10094DD78);
    sub_1001B78F0(&qword_10094DD80, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DD70);
  }
  return result;
}

uint64_t sub_1001B7844()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B787C(uint64_t a1)
{
  return sub_1001B6DBC(a1);
}

uint64_t sub_1001B7884()
{
  return sub_1001B7048();
}

uint64_t sub_1001B788C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingFriendListItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B78F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B7948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094DDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001B79B4()
{
  unint64_t result = qword_10094DDE8;
  if (!qword_10094DDE8)
  {
    sub_1000A1370(&qword_10094DDF0);
    sub_1001B7604();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DDE8);
  }
  return result;
}

uint64_t sub_1001B7A34()
{
  return DateInterval.contains(_:)() & 1;
}

uint64_t sub_1001B7A68()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DEA0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094DEA8);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_10094DE98);
  sub_1000258C4(v5, qword_1009975D8);
  sub_1000876DC(v5, (uint64_t)qword_1009975D8);
  sub_1001B87D4();
  EnumURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007B75C0;
  v6._countAndFlagsBits = 0xD000000000000016;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EnumURLRepresentation.StringInterpolation.Token.rawValue<A>(_:), v0);
  EnumURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EnumURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_1001B7C54()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_1009975F0);
  sub_1000876DC(v5, (uint64_t)qword_1009975F0);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_1001B7DBC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  sub_1000AFA94(&qword_10094DE80);
  uint64_t v7 = sub_1000AFA94(&qword_10094DE88);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v37 = *(void *)(v8 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v31 = v7 - 8;
  uint64_t v32 = 4 * v37;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100752870;
  unint64_t v11 = v10 + v9;
  *(unsigned char *)(v10 + v9) = 0;
  uint64_t v33 = v10;
  unint64_t v34 = v10 + v9;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v35 = v6 + 56;
  uint64_t v36 = v12;
  uint64_t v13 = v39;
  v12(v5, 1, 1, v39);
  uint64_t v38 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v14 = *(void *)(v38 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  v15(v2, 1, 1, v38);
  v29[1] = v16;
  id v30 = v15;
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v17 = v37;
  uint64_t v18 = (unsigned char *)(v11 + v37);
  uint64_t v19 = v31;
  v29[0] = &v18[*(int *)(v31 + 56)];
  *uint64_t v18 = 1;
  LocalizedStringResource.init(stringLiteral:)();
  char v20 = v36;
  v36(v5, 1, 1, v13);
  v15(v2, 1, 1, v38);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v21 = 2 * v17;
  unint64_t v22 = v34;
  uint64_t v23 = (unsigned char *)(v34 + 2 * v17);
  v29[0] = &v23[*(int *)(v19 + 56)];
  *uint64_t v23 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v24 = v39;
  v20(v5, 1, 1, v39);
  uint64_t v25 = v38;
  uint64_t v26 = v30;
  v30(v2, 1, 1, v38);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v22 + v21 + v37) = 3;
  LocalizedStringResource.init(stringLiteral:)();
  id v27 = v36;
  v36(v5, 1, 1, v24);
  v26(v2, 1, 1, v25);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v34 + v32) = 4;
  LocalizedStringResource.init(stringLiteral:)();
  v27(v5, 1, 1, v39);
  v26(v2, 1, 1, v25);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100522FD0(v33);
  qword_100997608 = result;
  return result;
}

uint64_t sub_1001B82CC(unsigned __int8 *a1, char *a2)
{
  return sub_10047F910(*a1, *a2);
}

unint64_t sub_1001B82DC()
{
  unint64_t result = qword_10094DDF8;
  if (!qword_10094DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DDF8);
  }
  return result;
}

Swift::Int sub_1001B8330()
{
  return Hasher._finalize()();
}

uint64_t sub_1001B841C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001B84F0()
{
  return Hasher._finalize()();
}

unint64_t sub_1001B85D8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001B8FF0(*a1);
  *a2 = result;
  return result;
}

void sub_1001B8608(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7105633;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x736C616F67;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x68746C616568;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "notifications");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0x7374696E75;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1001B86C0()
{
  unint64_t result = qword_10094DE00;
  if (!qword_10094DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE00);
  }
  return result;
}

unint64_t sub_1001B8718()
{
  unint64_t result = qword_10094DE08;
  if (!qword_10094DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE08);
  }
  return result;
}

unint64_t sub_1001B8770()
{
  unint64_t result = qword_10094DE10;
  if (!qword_10094DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE10);
  }
  return result;
}

void *sub_1001B87C4()
{
  return &protocol witness table for String;
}

unint64_t sub_1001B87D4()
{
  unint64_t result = qword_10094DE18;
  if (!qword_10094DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE18);
  }
  return result;
}

unint64_t sub_1001B882C()
{
  unint64_t result = qword_10094DE20;
  if (!qword_10094DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE20);
  }
  return result;
}

uint64_t sub_1001B8880@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A5D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_10094DE98);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009975D8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1001B8930()
{
  unint64_t result = qword_10094DE28;
  if (!qword_10094DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE28);
  }
  return result;
}

unint64_t sub_1001B8988()
{
  unint64_t result = qword_10094DE30;
  if (!qword_10094DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE30);
  }
  return result;
}

unint64_t sub_1001B89E0()
{
  unint64_t result = qword_10094DE38;
  if (!qword_10094DE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE38);
  }
  return result;
}

unint64_t sub_1001B8A38()
{
  unint64_t result = qword_10094DE40;
  if (!qword_10094DE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE40);
  }
  return result;
}

uint64_t sub_1001B8A8C()
{
  sub_1001B8F88();
  uint64_t v2 = URLRepresentableEnum.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_1001B8B20@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094A5D8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009975F0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001B8BC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B8C18(uint64_t a1)
{
  unint64_t v2 = sub_1001B87D4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001B8C68()
{
  unint64_t result = qword_10094DE50;
  if (!qword_10094DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE50);
  }
  return result;
}

unint64_t sub_1001B8CC0()
{
  unint64_t result = qword_10094DE58;
  if (!qword_10094DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE58);
  }
  return result;
}

unint64_t sub_1001B8D18()
{
  unint64_t result = qword_10094DE60;
  if (!qword_10094DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE60);
  }
  return result;
}

uint64_t sub_1001B8D6C()
{
  if (qword_10094A5E0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B8DC8(uint64_t a1)
{
  unint64_t v2 = sub_1001B8A38();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001B8E18()
{
  unint64_t result = qword_10094DE68;
  if (!qword_10094DE68)
  {
    sub_1000A1370(&qword_10094DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE68);
  }
  return result;
}

void sub_1001B8E74(void *a1@<X8>)
{
  *a1 = &off_1008B2E20;
}

unsigned char *storeEnumTagSinglePayload for SettingsEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B8F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsEnum()
{
  return &type metadata for SettingsEnum;
}

unint64_t sub_1001B8F88()
{
  unint64_t result = qword_10094DE90;
  if (!qword_10094DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DE90);
  }
  return result;
}

uint64_t sub_1001B8FDC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_1001B8FF0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B2D88, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t destroy for WorkoutDetailPowerView(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for WorkoutDetailPowerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unsigned int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  id v5 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutDetailPowerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  unsigned int v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutDetailPowerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  unsigned int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailPowerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailPowerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailPowerView()
{
  return &type metadata for WorkoutDetailPowerView;
}

uint64_t sub_1001B927C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B9298@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v30 = type metadata accessor for TaskPriority();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GeometryProxy();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_1000AFA94(&qword_10094DEB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.leading.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v13 = sub_1000AFA94(&qword_10094DEB8);
  sub_1001B9588(a2, &v12[*(int *)(v13 + 44)]);
  long long v14 = *a2;
  uint64_t v15 = (void *)*((void *)a2 + 2);
  long long v31 = a2[2];
  long long v32 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  long long v18 = a2[1];
  *((_OWORD *)v17 + 1) = *a2;
  *((_OWORD *)v17 + 2) = v18;
  *((_OWORD *)v17 + 3) = a2[2];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_1000E2358((uint64_t)&v32);
  id v19 = v15;
  sub_1000E2358((uint64_t)&v31);
  static TaskPriority.userInitiated.getter();
  uint64_t v20 = sub_1000AFA94(&qword_10094DED0);
  uint64_t v21 = v29;
  unint64_t v22 = (char *)(v29 + *(int *)(v20 + 36));
  uint64_t v23 = type metadata accessor for _TaskModifier();
  uint64_t v24 = v28;
  uint64_t v25 = v30;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(&v22[*(int *)(v23 + 20)], v6, v30);
  *(void *)unint64_t v22 = &unk_10094DEC8;
  *((void *)v22 + 1) = v17;
  sub_1000AEF2C((uint64_t)v12, v21, &qword_10094DEB0);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  return sub_10008DB18((uint64_t)v12, &qword_10094DEB0);
}

uint64_t sub_1001B9588@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v170 = a1;
  NSString v157 = a2;
  uint64_t v148 = type metadata accessor for WorkoutDetailChartView();
  uint64_t v2 = __chkstk_darwin(v148);
  uint64_t v151 = (uint64_t)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v147 = (char *)&v146 - v4;
  uint64_t v5 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v5 - 8);
  uint64_t v167 = (uint64_t)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = (id *)type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v168 = (uint64_t (*)(uint64_t))*(v169 - 1);
  __chkstk_darwin(v169);
  uint64_t v152 = (uint64_t)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094DEE8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v165 = (uint64_t)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v173 = (uint64_t)&v146 - v11;
  uint64_t v158 = type metadata accessor for Divider();
  uint64_t v174 = *(void *)(v158 - 8);
  uint64_t v12 = __chkstk_darwin(v158);
  uint64_t v146 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v164 = (char *)&v146 - v15;
  __chkstk_darwin(v14);
  char v172 = (char *)&v146 - v16;
  uint64_t v17 = type metadata accessor for AttributedString();
  __chkstk_darwin(v17 - 8);
  uint64_t v166 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DynamicTypeSize();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1000AFA94(&qword_10094DEF0);
  uint64_t v23 = *(void *)(v163 - 8);
  uint64_t v24 = __chkstk_darwin(v163);
  uint64_t v161 = (char *)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v171 = (char *)&v146 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v146 - v29;
  __chkstk_darwin(v28);
  long long v32 = (char *)&v146 - v31;
  id v149 = self;
  id v33 = [v149 mainBundle];
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  uint64_t v184 = v36;
  unint64_t v185 = v38;
  unint64_t v150 = sub_1000A06D0();
  uint64_t v184 = Text.init<A>(_:)();
  unint64_t v185 = v39;
  LOBYTE(v186) = v40 & 1;
  uint64_t v187 = v41;
  LODWORD(v156) = enum case for DynamicTypeSize.large(_:);
  long long v155 = *(void (**)(char *))(v20 + 104);
  v155(v22);
  View.dynamicTypeSize(_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v153 = v20 + 8;
  uint64_t v154 = v42;
  v42(v22, v19);
  sub_1000A06C0(v184, (uint64_t)v185, (char)v186);
  swift_bridgeObjectRelease();
  uint64_t v162 = v23;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  id v159 = v32;
  uint64_t v44 = v163;
  v43(v32, v30, v163);
  long long v189 = *v170;
  id v45 = (id *)*((void *)&v189 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000E2384((uint64_t)&v189);
  AttributedString.init(_:)();
  uint64_t v184 = Text.init(_:)();
  unint64_t v185 = v46;
  LOBYTE(v186) = v47 & 1;
  uint64_t v187 = v48;
  ((void (*)(char *, void, uint64_t))v155)(v22, v156, v19);
  View.dynamicTypeSize(_:)();
  v154(v22, v19);
  sub_1000A06C0(v184, (uint64_t)v185, (char)v186);
  swift_bridgeObjectRelease();
  uint64_t v160 = v30;
  v43(v171, v30, v44);
  Divider.init()();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v49 = v167;
  static Published.subscript.getter();
  uint64_t v50 = v49;
  swift_release();
  swift_release();
  sub_1000E2384((uint64_t)&v189);
  if ((*((unsigned int (**)(uint64_t, uint64_t, id *))v168 + 6))(v49, 1, v169) == 1)
  {
    sub_10008DB18(v49, &qword_10094D448);
  }
  else
  {
    uint64_t v51 = v148;
    uint64_t v52 = (uint64_t)v147;
    uint64_t v53 = v151;
    uint64_t v54 = v152;
    sub_1001BB6FC(v50, v152);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000E2384((uint64_t)&v189);
    uint64_t v55 = v184;
    if (v184)
    {
      uint64_t v168 = type metadata accessor for WorkoutChartViewModel;
      sub_1001BB760(v54, v52, type metadata accessor for WorkoutChartViewModel);
      *(void *)(v52 + *(int *)(v51 + 20)) = v55;
      swift_retain();
      id v56 = v164;
      Divider.init()();
      sub_1001BB760(v52, v53, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      uint64_t v57 = v174;
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
      id v59 = v146;
      uint64_t v169 = v45;
      uint64_t v60 = v158;
      v58(v146, v56, v158);
      uint64_t v61 = v53;
      uint64_t v62 = v165;
      sub_1001BB760(v61, v165, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      uint64_t v63 = sub_1000AFA94(&qword_10094DF08);
      v58((char *)(v62 + *(int *)(v63 + 48)), v59, v60);
      swift_release();
      BOOL v64 = *(void (**)(char *, uint64_t))(v57 + 8);
      v64(v56, v60);
      sub_1001BB7C8(v52, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      sub_1001BB7C8(v152, v168);
      uint64_t v65 = v60;
      id v45 = v169;
      v64(v59, v65);
      sub_1001BB7C8(v151, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      uint64_t v66 = sub_1000AFA94(&qword_10094DEF8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v62, 0, 1, v66);
      sub_1001BB828(v62, v173);
      unint64_t v67 = v170;
      goto LABEL_7;
    }
    sub_1001BB7C8(v54, type metadata accessor for WorkoutChartViewModel);
  }
  unint64_t v67 = v170;
  uint64_t v68 = sub_1000AFA94(&qword_10094DEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v173, 1, 1, v68);
LABEL_7:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000E2384((uint64_t)&v189);
  uint64_t v69 = v184;
  if (v184)
  {
    if (*(void *)(v184 + 16))
    {
      double v70 = COERCE_DOUBLE(sub_100682078());
      if ((v71 & 1) == 0 && v70 > 0.0)
      {
        sub_100691B70(v69, [v45[8] fitnessUIFormattingManager], &v184);
        uint64_t v170 = (_OWORD *)v184;
        uint64_t v169 = v185;
        uint64_t v168 = v186;
        uint64_t v167 = v187;
        uint64_t v166 = v188;
        goto LABEL_14;
      }
    }
    swift_release();
  }
  uint64_t v170 = 0;
  uint64_t v169 = 0;
  uint64_t v168 = 0;
  uint64_t v167 = 0;
  uint64_t v166 = 0;
LABEL_14:
  long long v180 = v67[2];
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  if (v175 == 1)
  {
    id v72 = [v149 mainBundle];
    NSString v73 = String._bridgeToObjectiveC()();
    id v74 = [v72 localizedStringForKey:v73 value:0 table:0];

    uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v77 = v76;

    *(void *)&long long v180 = v75;
    *((void *)&v180 + 1) = v77;
    uint64_t v78 = Text.init<A>(_:)();
    uint64_t v80 = v79;
    LOBYTE(v77) = v81 & 1;
    static Font.footnote.getter();
    uint64_t v82 = Text.font(_:)();
    uint64_t v84 = v83;
    char v86 = v85;
    swift_release();
    sub_1000A06C0(v78, v80, v77);
    swift_bridgeObjectRelease();
    LODWORD(v180) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v87 = Text.foregroundStyle<A>(_:)();
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v93 = v92 & 1;
    sub_1000A06C0(v82, v84, v86 & 1);
    swift_bridgeObjectRelease();
    uint64_t v175 = v87;
    uint64_t v176 = v89;
    uint64_t v177 = v93;
    uint64_t v178 = v91;
    char v179 = 0;
  }
  else
  {
    if (*((unsigned char *)v67 + 24))
    {
      uint64_t v153 = 0;
      uint64_t v152 = 0;
      uint64_t v151 = 0;
      long long v155 = 0;
      int v116 = 255;
      goto LABEL_20;
    }
    id v94 = [v149 mainBundle];
    NSString v95 = String._bridgeToObjectiveC()();
    id v96 = [v94 localizedStringForKey:v95 value:0 table:0];

    uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v99 = v98;

    *(void *)&long long v180 = v97;
    *((void *)&v180 + 1) = v99;
    uint64_t v100 = Text.init<A>(_:)();
    uint64_t v102 = v101;
    LOBYTE(v99) = v103 & 1;
    static Font.footnote.getter();
    uint64_t v104 = Text.font(_:)();
    uint64_t v106 = v105;
    char v108 = v107;
    swift_release();
    sub_1000A06C0(v100, v102, v99);
    swift_bridgeObjectRelease();
    LODWORD(v180) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v109 = Text.foregroundStyle<A>(_:)();
    uint64_t v111 = v110;
    uint64_t v113 = v112;
    uint64_t v115 = v114 & 1;
    sub_1000A06C0(v104, v106, v108 & 1);
    swift_bridgeObjectRelease();
    uint64_t v175 = v109;
    uint64_t v176 = v111;
    uint64_t v177 = v115;
    uint64_t v178 = v113;
    char v179 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  uint64_t v152 = *((void *)&v180 + 1);
  uint64_t v153 = v180;
  uint64_t v151 = v181;
  long long v155 = v182;
  int v116 = v183;
LABEL_20:
  LODWORD(v154) = v116;
  uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
  char v118 = v160;
  uint64_t v119 = v163;
  v117(v160, v159, v163);
  long long v120 = v161;
  v117(v161, v171, v119);
  id v156 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
  id v121 = v164;
  uint64_t v122 = v158;
  v156(v164, v172, v158);
  uint64_t v123 = v165;
  sub_1000AEF2C(v173, v165, &qword_10094DEE8);
  LOBYTE(v180) = 1;
  uint64_t v124 = v157;
  v117(v157, v118, v119);
  uint64_t v125 = (int *)sub_1000AFA94(&qword_10094DF00);
  v117(&v124[v125[12]], v120, v119);
  uint64_t v126 = v122;
  v156(&v124[v125[16]], v121, v122);
  sub_1000AEF2C(v123, (uint64_t)&v124[v125[20]], &qword_10094DEE8);
  uint64_t v127 = &v124[v125[24]];
  id v128 = v170;
  *(void *)uint64_t v127 = v170;
  uint64_t v129 = v128;
  uint64_t v170 = v128;
  uint64_t v130 = v169;
  *((void *)v127 + 1) = v169;
  id v131 = v130;
  uint64_t v169 = v130;
  uint64_t v132 = v168;
  *((void *)v127 + 2) = v168;
  uint64_t v133 = v132;
  uint64_t v168 = v132;
  uint64_t v134 = v167;
  *((void *)v127 + 3) = v167;
  uint64_t v135 = v134;
  uint64_t v167 = v134;
  uint64_t v136 = v166;
  *((void *)v127 + 4) = v166;
  uint64_t v137 = v136;
  uint64_t v166 = v136;
  uint64_t v138 = &v124[v125[28]];
  uint64_t v139 = v153;
  uint64_t v140 = v152;
  *(void *)uint64_t v138 = v153;
  *((void *)v138 + 1) = v140;
  LOBYTE(v123) = v151;
  uint64_t v141 = (uint64_t)v155;
  *((void *)v138 + 2) = v151;
  *((void *)v138 + 3) = v141;
  LOBYTE(v120) = (_BYTE)v154;
  v138[32] = (char)v154;
  uint64_t v142 = &v124[v125[32]];
  LOBYTE(v136) = v180;
  *(void *)uint64_t v142 = 0;
  v142[8] = (char)v136;
  sub_1001BB57C(v129, v131, v133, v135, v137);
  sub_1001BB5E8(v139, v140, v123, v141, v120);
  sub_10008DB18(v173, &qword_10094DEE8);
  uint64_t v143 = *(void (**)(char *, uint64_t))(v174 + 8);
  v174 += 8;
  v143(v172, v126);
  uint64_t v144 = *(void (**)(char *, uint64_t))(v162 + 8);
  v144(v171, v119);
  v144(v159, v119);
  sub_1001BB63C(v139, v140, v123, v141, v120);
  sub_1001BB690((uint64_t)v170, v169, v168, v167, v166);
  sub_10008DB18(v165, &qword_10094DEE8);
  v143(v164, v126);
  v144(v161, v119);
  return ((uint64_t (*)(char *, uint64_t))v144)(v160, v119);
}

uint64_t sub_1001BA858(uint64_t a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = a2;
  type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v4;
  v2[17] = v3;
  return _swift_task_switch(sub_1001BA8F0, v4, v3);
}

uint64_t sub_1001BA8F0()
{
  *(_OWORD *)(v0 + 48) = *(_OWORD *)*(void *)(v0 + 104);
  *(void *)(v0 + 144) = *(void *)(v0 + 56);
  swift_retain();
  return _swift_task_switch(sub_1001BA96C, 0, 0);
}

uint64_t sub_1001BA96C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001BAA38;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1001BAA38()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001BAB34, 0, 0);
}

uint64_t sub_1001BAB34()
{
  sub_1000E2384(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_1001BAB98, v1, v2);
}

uint64_t sub_1001BAB98()
{
  swift_release();
  swift_retain();
  uint64_t v1 = sub_10026868C((void *)(v0 + 16));
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for WorkoutChartViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t v27 = v1;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000E2384(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 96);
    if (v5)
    {
      if (*(void *)(v5 + 16)) {
        sub_100682078();
      }
      swift_release();
    }
    id v6 = [self mainBundle];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 localizedStringForKey:v7 value:0 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    uint64_t v12 = (uint64_t *)(v3 + *(int *)(v4 + 24));
    *uint64_t v12 = v9;
    v12[1] = v11;
    swift_bridgeObjectRelease();
    uint64_t v1 = v27;
  }
  ((void (*)(uint64_t, void))v1)(v0 + 16, 0);
  sub_1000E2384(v0 + 48);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000E2384(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 80);
  if (v13)
  {
    GeometryProxy.size.getter();
    uint64_t v15 = v13 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
    *(double *)uint64_t v15 = v14 + -2.0;
    *(unsigned char *)(v15 + 8) = 0;
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000E2384(v0 + 48);
  uint64_t v16 = *(void *)(v0 + 88);
  if (!v16 || (uint64_t v17 = *(void *)(v16 + 16), swift_release(), !v17))
  {
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v19 = *(void **)(v18 + 16);
    type metadata accessor for FunctionalThresholdPowerStore();
    swift_allocObject();
    id v20 = v19;
    FunctionalThresholdPowerStore.init(with:)();
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v18 + 32);
    uint64_t v21 = (_OWORD *)swift_allocObject();
    long long v23 = *(_OWORD *)(v18 + 16);
    long long v22 = *(_OWORD *)(v18 + 32);
    v21[1] = *(_OWORD *)v18;
    void v21[2] = v23;
    void v21[3] = v22;
    sub_1000E2358(v0 + 48);
    id v24 = v20;
    sub_1000E2358(v0 + 64);
    dispatch thunk of FunctionalThresholdPowerStore.fetchMostRecentAppleFTP(completion:)();
    swift_release();
    swift_release();
  }
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

double sub_1001BAFE0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)*((void *)v1 + 2);
  *(_OWORD *)id v8 = *(long long *)((char *)v1 + 24);
  *(void *)&v8[16] = *((void *)v1 + 5);
  long long v9 = *v1;
  long long v10 = *(_OWORD *)&v8[8];
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *v1;
  *(void *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 40) = *(long long *)((char *)v1 + 24);
  *(void *)(v4 + 56) = *((void *)v1 + 5);
  sub_1000E2358((uint64_t)&v9);
  id v5 = v3;
  sub_1000E2358((uint64_t)&v10);
  char v6 = static Edge.Set.all.getter();
  *(void *)a1 = sub_1001BB0AC;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = xmmword_100752B90;
  *(_OWORD *)(a1 + 40) = xmmword_100752B90;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1001BB0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001B9298(a1, (long long *)(v2 + 16), a2);
}

uint64_t sub_1001BB0B4()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001BB190()
{
  uint64_t v2 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v3 = v0 + 16;
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_10005DB5C;
  return sub_1001BA858(v3, v4);
}

uint64_t sub_1001BB264(uint64_t a1, uint64_t a2)
{
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *char v6 = v3;
  v6[1] = sub_1000DBD6C;
  return sub_10052E118(a1, a2, v2);
}

uint64_t sub_1001BB318@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001BB398(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1001BB410@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001BB494()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001BB518()
{
  return State.wrappedValue.setter();
}

id sub_1001BB57C(id result, void *a2, void *a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_retain();
    id v7 = a2;
    id v8 = a3;
    swift_bridgeObjectRetain();
    return a5;
  }
  return result;
}

uint64_t sub_1001BB5E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_1001BB600(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1001BB600(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000A1750(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001BB63C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_1001BB654(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1001BB654(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000A06C0(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

void sub_1001BB690(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  if (a1)
  {
    swift_release();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001BB6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BB760(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001BB7C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001BB828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094DEE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001BB894()
{
  unint64_t result = qword_10094DF10;
  if (!qword_10094DF10)
  {
    sub_1000A1370(&qword_10094DF18);
    sub_1001BB910();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DF10);
  }
  return result;
}

unint64_t sub_1001BB910()
{
  unint64_t result = qword_10094DF20;
  if (!qword_10094DF20)
  {
    sub_1000A1370(&qword_10094DF28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094DF20);
  }
  return result;
}

uint64_t type metadata accessor for CalendarCache()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TrainingLoadOnboardingNavigationView.Page(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BBA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadOnboardingNavigationView.Page()
{
  return &type metadata for TrainingLoadOnboardingNavigationView.Page;
}

_OWORD *sub_1001BBA94(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *(void *)unsigned int v4 = *a2;
      *((void *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = a2[2];
    if (v9)
    {
      uint64_t v10 = a2[3];
      *((void *)v4 + 2) = v9;
      *((void *)v4 + 3) = v10;
      swift_retain();
    }
    else
    {
      v4[1] = *((_OWORD *)a2 + 1);
    }
    uint64_t v11 = a2[5];
    *((void *)v4 + 4) = a2[4];
    *((void *)v4 + 5) = v11;
    *((unsigned char *)v4 + 48) = *((unsigned char *)a2 + 48);
    *((void *)v4 + 7) = a2[7];
    *((unsigned char *)v4 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v12 = a2[9];
    uint64_t v13 = *(int *)(a3 + 36);
    double v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    *((void *)v4 + 9) = v12;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *double v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1001BBC44(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 36);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    unsigned int v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1001BBD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1001BBE8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v9)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[3];
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_10008DB18(a1 + v12, &qword_10094DFC8);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1001BC088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001BC1A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v9)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[3];
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v11;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_release();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    sub_10008DB18(a1 + v12, &qword_10094DFC8);
    uint64_t v15 = sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DismissAction();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001BC378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BC38C);
}

uint64_t sub_1001BC38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_10094DFD0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001BC440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BC454);
}

uint64_t sub_1001BC454(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_10094DFD0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadOnboardingNavigationView()
{
  uint64_t result = qword_10094E030;
  if (!qword_10094E030) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001BC54C()
{
  sub_1001BC5F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001BC5F4()
{
  if (!qword_10094E040)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094E040);
    }
  }
}

uint64_t sub_1001BC64C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_1001BC668@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1001BC680(void *a1@<X8>)
{
  *a1 = &off_1008B2E48;
}

uint64_t sub_1001BC690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  uint64_t v26 = *(void *)(OnboardingNavigationView - 8);
  uint64_t v4 = *(void *)(v26 + 64);
  __chkstk_darwin(OnboardingNavigationView - 8);
  uint64_t v5 = sub_1000AFA94(&qword_10094E090);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  uint64_t v28 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v36 = *(ValueMetadata **)(v1 + 32);
  *(void *)&long long v37 = v9;
  sub_1000AFA94(&qword_10094E098);
  State.projectedValue.getter();
  uint64_t v36 = v31;
  long long v37 = v32;
  uint64_t v30 = v1;
  v25[3] = sub_1000AFA94((uint64_t *)&unk_10095F6C0);
  void v25[2] = sub_1000AFA94(&qword_10094E0A0);
  v25[1] = sub_1000A132C(&qword_10094E0A8, (uint64_t *)&unk_10095F6C0);
  v25[0] = sub_1000A132C(&qword_10094E0B0, (uint64_t *)&unk_10095F6C0);
  sub_1000A132C(&qword_10094E0B8, (uint64_t *)&unk_10095F6C0);
  uint64_t v10 = sub_1000A1370(&qword_10094E0C0);
  uint64_t v11 = sub_1000A1370(&qword_10094E0C8);
  WorkoutsAddUpuint64_t View = type metadata accessor for TrainingLoadWorkoutsAddUpView();
  uint64_t v13 = sub_1000A1370(&qword_10094E0D0);
  uint64_t v14 = sub_1001BE69C(&qword_10094E0D8, (void (*)(uint64_t))&type metadata accessor for TrainingLoadWorkoutsAddUpView);
  unint64_t v15 = sub_1001BDEEC();
  uint64_t v31 = &type metadata for TrainingLoadOnboardingFlowToolbarCancelButton;
  *(void *)&long long v32 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = (ValueMetadata *)WorkoutsAddUpView;
  *(void *)&long long v32 = v13;
  *((void *)&v32 + 1) = v14;
  uint64_t v33 = OpaqueTypeConformance2;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  unint64_t v18 = sub_1001BDF40();
  unint64_t v19 = sub_1001BDF94();
  uint64_t v31 = (ValueMetadata *)v10;
  *(void *)&long long v32 = &type metadata for TrainingLoadOnboardingNavigationView.Page;
  *((void *)&v32 + 1) = v11;
  uint64_t v33 = v17;
  unint64_t v34 = v18;
  unint64_t v35 = v19;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(path:root:)();
  uint64_t v20 = *(void *)(v2 + 56);
  LOBYTE(v31) = *(unsigned char *)(v2 + 48);
  *(void *)&long long v32 = v20;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  LOBYTE(v31) = (_BYTE)v36;
  sub_1001BE218(v2, (uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1001BE280((uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  sub_1000A132C(&qword_10094E128, &qword_10094E090);
  uint64_t v23 = v27;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v8, v23);
}

uint64_t sub_1001BCAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  uint64_t v4 = *(void *)(OnboardingNavigationView - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(OnboardingNavigationView - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  WorkoutsAddUpuint64_t View = type metadata accessor for TrainingLoadWorkoutsAddUpView();
  uint64_t v8 = *(void *)(WorkoutsAddUpView - 8);
  __chkstk_darwin(WorkoutsAddUpView);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E0C0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  sub_1001BE218(a1, (uint64_t)v6);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v26 = v15 + v5;
  uint64_t v16 = swift_allocObject();
  sub_1001BE280((uint64_t)v6, v16 + v15);
  TrainingLoadWorkoutsAddUpView.init(onNext:)();
  uint64_t v30 = a1;
  uint64_t v17 = sub_1000AFA94(&qword_10094E0D0);
  uint64_t v18 = sub_1001BE69C(&qword_10094E0D8, (void (*)(uint64_t))&type metadata accessor for TrainingLoadWorkoutsAddUpView);
  unint64_t v19 = sub_1001BDEEC();
  uint64_t v31 = &type metadata for TrainingLoadOnboardingFlowToolbarCancelButton;
  unint64_t v32 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, WorkoutsAddUpView);
  sub_1001BE218(v25, (uint64_t)v6);
  uint64_t v21 = swift_allocObject();
  sub_1001BE280((uint64_t)v6, v21 + v15);
  sub_1000AFA94(&qword_10094E0C8);
  uint64_t v31 = (ValueMetadata *)WorkoutsAddUpView;
  unint64_t v32 = v17;
  uint64_t v33 = v18;
  uint64_t v34 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1001BDF40();
  sub_1001BDF94();
  uint64_t v22 = v27;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v22);
}

uint64_t sub_1001BCEA4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v74 = a3;
  NewInsightsDailyuint64_t View = type metadata accessor for TrainingLoadNewInsightsDailyView();
  uint64_t v59 = *(void *)(NewInsightsDailyView - 8);
  __chkstk_darwin(NewInsightsDailyView);
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_10094E118);
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v60 = (uint64_t)&v58 - v8;
  EffortExplanationuint64_t View = type metadata accessor for TrainingLoadEffortExplanationView();
  uint64_t v62 = *(void *)(EffortExplanationView - 8);
  __chkstk_darwin(EffortExplanationView);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000AFA94(&qword_10094E138);
  __chkstk_darwin(v70);
  uint64_t v72 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_10094E140);
  __chkstk_darwin(v64);
  uint64_t v65 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_10094E100);
  __chkstk_darwin(v71);
  uint64_t v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  uint64_t v15 = *(void *)(OnboardingNavigationView - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(OnboardingNavigationView - 8);
  WorkoutsAddUpuint64_t View = type metadata accessor for TrainingLoadWorkoutsAddUpView();
  uint64_t v17 = *(void *)(WorkoutsAddUpView - 8);
  __chkstk_darwin(WorkoutsAddUpView);
  unint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10094E0C0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v27 = (char *)&v58 - v26;
  if (*v68)
  {
    if (*v68 == 1)
    {
      sub_1001BE218(v69, (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v29 = swift_allocObject();
      sub_1001BE280((uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
      TrainingLoadEffortExplanationView.init(isStandalone:onNext:)();
      uint64_t v30 = v62;
      uint64_t v31 = EffortExplanationView;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v10, EffortExplanationView);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = sub_1000A1370(&qword_10094E0D0);
      uint64_t v33 = sub_1001BE69C(&qword_10094E0D8, (void (*)(uint64_t))&type metadata accessor for TrainingLoadWorkoutsAddUpView);
      unint64_t v34 = sub_1001BDEEC();
      uint64_t v75 = &type metadata for TrainingLoadOnboardingFlowToolbarCancelButton;
      unint64_t v76 = v34;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v75 = (ValueMetadata *)WorkoutsAddUpView;
      unint64_t v76 = v32;
      uint64_t v77 = v33;
      uint64_t v78 = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      sub_1001BE69C(&qword_10094E108, (void (*)(uint64_t))&type metadata accessor for TrainingLoadEffortExplanationView);
      uint64_t v36 = (uint64_t)v66;
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C(v36, v72, &qword_10094E100);
      swift_storeEnumTagMultiPayload();
      sub_1001BE010();
      sub_1001BE16C();
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v36, &qword_10094E100);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
    }
    else
    {
      uint64_t v50 = v69;
      sub_1001BE218(v69, (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v51 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v52 = swift_allocObject();
      sub_1001BE280((uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v52 + v51);
      TrainingLoadNewInsightsDailyView.init(onConfirm:)();
      sub_1001BE218(v50, (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v53 = swift_allocObject();
      sub_1001BE280((uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v53 + v51);
      uint64_t v54 = v59;
      uint64_t v55 = NewInsightsDailyView;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v7, v4, NewInsightsDailyView);
      id v56 = (uint64_t (**)())&v7[*(int *)(v73 + 36)];
      *id v56 = sub_1001BE808;
      v56[1] = (uint64_t (*)())v53;
      void v56[2] = 0;
      v56[3] = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v4, v55);
      uint64_t v57 = v60;
      sub_1001BE820((uint64_t)v7, v60);
      sub_1000AEF2C(v57, v72, &qword_10094E118);
      swift_storeEnumTagMultiPayload();
      sub_1001BE010();
      sub_1001BE16C();
      _ConditionalContent<>.init(storage:)();
      return sub_10008DB18(v57, &qword_10094E118);
    }
  }
  else
  {
    uint64_t v68 = (unsigned char *)v24;
    uint64_t v38 = v69;
    uint64_t v62 = v25;
    sub_1001BE218(v69, (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v39 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v40 = swift_allocObject();
    sub_1001BE280((uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v40 + v39);
    uint64_t v41 = TrainingLoadWorkoutsAddUpView.init(onNext:)();
    __chkstk_darwin(v41);
    *(&v58 - 2) = v38;
    uint64_t v42 = sub_1000AFA94(&qword_10094E0D0);
    uint64_t v43 = sub_1001BE69C(&qword_10094E0D8, (void (*)(uint64_t))&type metadata accessor for TrainingLoadWorkoutsAddUpView);
    unint64_t v44 = sub_1001BDEEC();
    uint64_t v75 = &type metadata for TrainingLoadOnboardingFlowToolbarCancelButton;
    unint64_t v76 = v44;
    uint64_t v45 = swift_getOpaqueTypeConformance2();
    id v46 = (ValueMetadata *)WorkoutsAddUpView;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, ValueMetadata *))(v17 + 8))(v19, v46);
    uint64_t v47 = v62;
    uint64_t v48 = v68;
    (*(void (**)(char *, char *, unsigned char *))(v62 + 32))(v27, v23, v68);
    (*(void (**)(char *, char *, unsigned char *))(v47 + 16))(v65, v27, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = v46;
    unint64_t v76 = v42;
    uint64_t v77 = v43;
    uint64_t v78 = v45;
    swift_getOpaqueTypeConformance2();
    sub_1001BE69C(&qword_10094E108, (void (*)(uint64_t))&type metadata accessor for TrainingLoadEffortExplanationView);
    uint64_t v49 = (uint64_t)v66;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v49, v72, &qword_10094E100);
    swift_storeEnumTagMultiPayload();
    sub_1001BE010();
    sub_1001BE16C();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v49, &qword_10094E100);
    return (*(uint64_t (**)(char *, unsigned char *))(v47 + 8))(v27, v48);
  }
}

uint64_t sub_1001BD914()
{
  return swift_release();
}

uint64_t sub_1001BD9A8(uint64_t a1, char a2)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094E098);
  State.wrappedValue.getter();
  uint64_t v3 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1001E713C(0, v7[2] + 1, 1, v7);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_1001E713C((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  *((unsigned char *)v3 + v5 + 32) = a2;
  State.wrappedValue.setter();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BDAB0(uint64_t (**a1)(uint64_t))
{
  sub_1000AFA94(&qword_10094DEE0);
  uint64_t result = State.wrappedValue.setter();
  if (*a1) {
    return (*a1)(result);
  }
  return result;
}

uint64_t sub_1001BDB20()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1001BDB78(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DismissAction();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a2 == 1)
  {
    uint64_t v10 = *(void *)(a3 + 72);
    LOBYTE(v17) = *(unsigned char *)(a3 + 64);
    uint64_t v18 = v10;
    sub_1000AFA94(&qword_10094DEE0);
    uint64_t HasSeenTrainingLoadOnboarding = State.wrappedValue.getter();
    if (v19 == 1)
    {
      if (qword_10094AEE0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1000AFA94(&qword_10095F7D0);
      sub_1000876DC(v12, (uint64_t)qword_100998578);
      char v19 = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
      if (qword_10094AA90 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_100997DB0;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(void *)&v16[-16] = v13;
      v16[-8] = 1;
      uint64_t v17 = v13;
      sub_1001BE69C((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      uint64_t HasSeenTrainingLoadOnboarding = FISetHasSeenTrainingLoadOnboarding();
    }
    uint64_t v15 = *(void (**)(uint64_t))(a3 + 16);
    if (v15) {
      v15(HasSeenTrainingLoadOnboarding);
    }
    type metadata accessor for TrainingLoadOnboardingNavigationView();
    sub_1004E7580((uint64_t)v9);
    DismissAction.callAsFunction()();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1001BDE50()
{
  return sub_1000A132C(&qword_10094E080, (uint64_t *)&unk_10095F6C0);
}

unint64_t sub_1001BDE90()
{
  unint64_t result = qword_10094E088;
  if (!qword_10094E088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E088);
  }
  return result;
}

uint64_t sub_1001BDEE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BCAE0(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001BDEEC()
{
  unint64_t result = qword_10094E0E0;
  if (!qword_10094E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E0E0);
  }
  return result;
}

unint64_t sub_1001BDF40()
{
  unint64_t result = qword_10094E0E8;
  if (!qword_10094E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E0E8);
  }
  return result;
}

unint64_t sub_1001BDF94()
{
  unint64_t result = qword_10094E0F0;
  if (!qword_10094E0F0)
  {
    sub_1000A1370(&qword_10094E0C8);
    sub_1001BE010();
    sub_1001BE16C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E0F0);
  }
  return result;
}

unint64_t sub_1001BE010()
{
  unint64_t result = qword_10094E0F8;
  if (!qword_10094E0F8)
  {
    sub_1000A1370(&qword_10094E100);
    type metadata accessor for TrainingLoadWorkoutsAddUpView();
    sub_1000A1370(&qword_10094E0D0);
    sub_1001BE69C(&qword_10094E0D8, (void (*)(uint64_t))&type metadata accessor for TrainingLoadWorkoutsAddUpView);
    sub_1001BDEEC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001BE69C(&qword_10094E108, (void (*)(uint64_t))&type metadata accessor for TrainingLoadEffortExplanationView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E0F8);
  }
  return result;
}

unint64_t sub_1001BE16C()
{
  unint64_t result = qword_10094E110;
  if (!qword_10094E110)
  {
    sub_1000A1370(&qword_10094E118);
    sub_1001BE69C(&qword_10094E120, (void (*)(uint64_t))&type metadata accessor for TrainingLoadNewInsightsDailyView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E110);
  }
  return result;
}

uint64_t sub_1001BE218(uint64_t a1, uint64_t a2)
{
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(OnboardingNavigationView - 8) + 16))(a2, a1, OnboardingNavigationView);
  return a2;
}

uint64_t sub_1001BE280(uint64_t a1, uint64_t a2)
{
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(OnboardingNavigationView - 8) + 32))(a2, a1, OnboardingNavigationView);
  return a2;
}

uint64_t sub_1001BE2E4(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for TrainingLoadOnboardingNavigationView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1001BDB78(a1, a2, v6);
}

uint64_t sub_1001BE364(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(unsigned char *)(v6 + 32) = a3;
  swift_retain();
  swift_retain();

  return Button.init(action:label:)();
}

uint64_t sub_1001BE424@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1001BE494()
{
  uint64_t v1 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000AFA94(&qword_10094E148);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *v0;
  uint64_t v7 = v0[1];
  char v8 = *((unsigned char *)v0 + 16);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  char v13 = v8;
  sub_1000AFA94(&qword_10094E150);
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  ToolbarItem<>.init(placement:content:)();
  sub_1000A132C(&qword_10094E160, &qword_10094E148);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1001BE67C()
{
  sub_100391954(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001BE69C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001BE6E8()
{
  return sub_1001BE894(1);
}

uint64_t sub_1001BE6F4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TrainingLoadOnboardingNavigationView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1001BCEA4(a1, v6, a2);
}

uint64_t sub_1001BE778()
{
  return sub_1001BE790((uint64_t (*)(uint64_t))sub_1001BDAB0);
}

uint64_t sub_1001BE790(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for TrainingLoadOnboardingNavigationView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1001BE808()
{
  return sub_1001BE790((uint64_t (*)(uint64_t))sub_1001BDB20);
}

uint64_t sub_1001BE820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094E118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BE88C()
{
  return sub_1001BE894(2);
}

uint64_t sub_1001BE894(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TrainingLoadOnboardingNavigationView() - 8);
  return sub_1001BD9A8(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1001BE8FC()
{
  return sub_1001BD914();
}

uint64_t sub_1001BE91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrainingLoadOnboardingFlowToolbarCancelButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TrainingLoadOnboardingFlowToolbarCancelButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadOnboardingFlowToolbarCancelButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadOnboardingFlowToolbarCancelButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadOnboardingFlowToolbarCancelButton()
{
  return &type metadata for TrainingLoadOnboardingFlowToolbarCancelButton;
}

uint64_t sub_1001BEAA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BEB38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BEB54()
{
  return sub_1001BE364(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1001BEB60()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BEBA0()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_1001BEBF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BEC7C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (int *)type metadata accessor for CardConfigurationView();
  uint64_t v16 = (uint64_t *)((char *)a9 + v15[5]);
  *uint64_t v16 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094DFC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (char *)a9 + v15[6];
  LOBYTE(v90) = 0;
  State.init(wrappedValue:)();
  uint64_t v18 = *((void *)&v93 + 1);
  *uint64_t v17 = v93;
  *((void *)v17 + 1) = v18;
  uint64_t v19 = v15[9];
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 1;
  *(void *)(v20 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v20 + 32) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)a9 + v19) = v20;
  uint64_t v21 = a8;
  uint64_t v75 = v15[13];
  *(uint64_t *)((char *)a9 + v75) = (uint64_t)_swiftEmptyArrayStorage;
  *(uint64_t *)((char *)a9 + v15[7]) = (uint64_t)a1;
  *(uint64_t *)((char *)a9 + v15[8]) = (uint64_t)a2;
  uint64_t v22 = (char *)a9 + v15[10];
  *(void *)uint64_t v22 = a3;
  v22[8] = a4 & 1;
  uint64_t v23 = (char *)a9 + v15[11];
  *(void *)uint64_t v23 = a5;
  uint64_t v24 = a9;
  v23[8] = a6 & 1;
  id v74 = a1;
  id v25 = a2;
  unint64_t v26 = sub_1004471B8();
  uint64_t v83 = v15[12];
  *(uint64_t *)((char *)v24 + v83) = v26;
  uint64_t v27 = (uint64_t *)((char *)v24 + v15[14]);
  *uint64_t v27 = a7;
  v27[1] = v21;
  *(void *)&long long v93 = v26;
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094E170);
  sub_1000A132C(&qword_10094E178, &qword_10094E170);
  uint64_t v28 = Sequence.sorted<A>(key:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v89 = v24;
  uint64_t v29 = sub_1006DE344((void (*)(long long *__return_ptr, char *))sub_1001C3FEC, (uint64_t)v88, v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = v29[2];
  if (!v30)
  {

    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = _swiftEmptyArrayStorage;
    goto LABEL_45;
  }
  uint64_t v78 = v29 + 4;
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v33 = v83;
  unint64_t v34 = v25;
  uint64_t v76 = v30;
  id v77 = v25;
  char v81 = v24;
  do
  {
    uint64_t v79 = v32;
    uint64_t v80 = v31;
    unint64_t v35 = &v78[5 * v31];
    uint64_t v36 = v35 + 3;
    uint64_t v37 = v35[3];
    uint64_t v38 = v35[4];
    sub_10007E4EC(v35, v37);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    LOBYTE(v41) = 7;
    switch(v42)
    {
      case 1:
        sub_1000917F8(v40, v39, 1);
        LOBYTE(v41) = 8;
        break;
      case 2:
        break;
      case 3:
        unint64_t v41 = 0x704050809030600uLL >> (8 * v40);
        break;
      default:
        LOBYTE(v41) = byte_10075319A[(char)v40];
        break;
    }
    uint64_t v43 = sub_1001C60B0(v41)[2];
    swift_bridgeObjectRelease();
    if (!v43)
    {
      sub_1000AFA94(&qword_10094E180);
      uint64_t v50 = (void *)swift_allocObject();
      *((_OWORD *)v50 + 1) = xmmword_1007509E0;
      sub_10008E75C((uint64_t)v35, (uint64_t)(v50 + 4));
      goto LABEL_38;
    }
    uint64_t v44 = *v36;
    uint64_t v45 = v35[4];
    sub_10007E4EC(v35, *v36);
    uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(v44, v45);
    unint64_t v48 = 7;
    switch(v49)
    {
      case 0:
        unint64_t v48 = byte_10075319A[(char)v46];
        break;
      case 1:
        sub_1000917F8(v46, v47, 1);
        unint64_t v48 = 8;
        break;
      case 2:
        break;
      case 3:
        unint64_t v48 = 0x704050809030600uLL >> (8 * v46);
        break;
      default:
        JUMPOUT(0);
    }
    unint64_t v51 = sub_1001C60B0(v48);
    uint64_t v52 = v51[2];
    if (v52)
    {
      uint64_t v53 = v51 + 4;
      swift_bridgeObjectRetain();
      uint64_t v54 = 0;
      uint64_t v50 = _swiftEmptyArrayStorage;
      char v85 = v53;
      uint64_t v87 = v52;
      while (1)
      {
        uint64_t v55 = *(uint64_t *)((char *)v24 + v33);
        if (*(void *)(v55 + 16) && (int v56 = *((unsigned __int8 *)v53 + v54), v57 = sub_1000D5C14(v48), (v58 & 1) != 0))
        {
          unint64_t v59 = v48;
          uint64_t v60 = v50;
          uint64_t v61 = *(void *)(*(void *)(v55 + 56) + 8 * v57);
          uint64_t v62 = *(void *)(v61 + 16);
          if (v62)
          {
            uint64_t v63 = v61 + 32;
            swift_bridgeObjectRetain_n();
            do
            {
              sub_10008E75C(v63, (uint64_t)&v93);
              uint64_t v65 = v94;
              uint64_t v64 = v95;
              sub_10007E4EC(&v93, v94);
              uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16))(v65, v64);
              if (v68)
              {
                sub_1000917F8(v66, v67, v68);
              }
              else if (v56 == v66)
              {
                swift_bridgeObjectRelease();
                sub_100093E60(&v93, (uint64_t)&v90);
                swift_bridgeObjectRelease();
                uint64_t v24 = v81;
                uint64_t v33 = v83;
                uint64_t v50 = v60;
                goto LABEL_30;
              }
              _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v93);
              v63 += 40;
              --v62;
            }
            while (v62);
            swift_bridgeObjectRelease();
            uint64_t v24 = v81;
            uint64_t v33 = v83;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t v50 = v60;
          uint64_t v92 = 0;
          long long v90 = 0u;
          long long v91 = 0u;
          swift_bridgeObjectRelease();
LABEL_30:
          unint64_t v48 = v59;
          uint64_t v53 = v85;
          uint64_t v52 = v87;
          if (*((void *)&v91 + 1))
          {
            sub_100093E60(&v90, (uint64_t)&v93);
            sub_100093E60(&v93, (uint64_t)&v90);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v50 = sub_10009569C(0, v50[2] + 1, 1, v50);
            }
            unint64_t v70 = v50[2];
            unint64_t v69 = v50[3];
            if (v70 >= v69 >> 1) {
              uint64_t v50 = sub_10009569C((void *)(v69 > 1), v70 + 1, 1, v50);
            }
            v50[2] = v70 + 1;
            sub_100093E60(&v90, (uint64_t)&v50[5 * v70 + 4]);
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v92 = 0;
          long long v90 = 0u;
          long long v91 = 0u;
        }
        sub_10008DB18((uint64_t)&v90, &qword_10094CEF0);
LABEL_17:
        if ((void *)++v54 == v52)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v30 = v76;
          unint64_t v34 = v77;
          goto LABEL_38;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v50 = _swiftEmptyArrayStorage;
LABEL_38:
    uint64_t v32 = v79;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v32 = sub_1001E71B0(0, v79[2] + 1, 1, v79);
    }
    unint64_t v72 = v32[2];
    unint64_t v71 = v32[3];
    if (v72 >= v71 >> 1) {
      uint64_t v32 = sub_1001E71B0((void *)(v71 > 1), v72 + 1, 1, v32);
    }
    void v32[2] = v72 + 1;
    v32[v72 + 4] = v50;
    uint64_t v31 = v80 + 1;
  }
  while (v80 + 1 != v30);

  swift_release();
  swift_bridgeObjectRelease_n();
LABEL_45:

  uint64_t result = swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v24 + v75) = (uint64_t)v32;
  return result;
}