uint64_t sub_100005618(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100005758(a3);
  v13 = *(void *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1004F2BDC();
LABEL_7:
    v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      v19 = (void *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    v21 = (void *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_10000C258(result, a4 & 1);
  result = sub_100005758(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_100005758(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_100005794(a1, v2);
}

unint64_t sub_100005794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100005830(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1000058F4(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094CEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100005954(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_100005A18(uint64_t a1)
{
  View = (int *)type metadata accessor for FitnessPlusUpNextView();
  uint64_t v3 = *((void *)View - 1);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(View);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + View[7];
  uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v11 = v9 + *(int *)(Card + 36);
  if (!*(unsigned char *)(v11 + 16))
  {
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
    sub_1000D2848(a1, (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v12;
    sub_1000D27E0((uint64_t)v5, (uint64_t)v15 + v14, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    swift_bridgeObjectRetain();
    sub_1000713D0((uint64_t)v8, (uint64_t)&unk_10095FB50, (uint64_t)v15);
    swift_release();
  }
  uint64_t v16 = a1 + View[6];
  char v17 = *(unsigned char *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  LOBYTE(v22[0]) = v17;
  v22[1] = v18;
  LOBYTE(v21[0]) = 1;
  sub_1000AFA94(&qword_10094DEE0);
  uint64_t result = State.wrappedValue.setter();
  if (*(unsigned char *)(v9 + *(int *)(Card + 40)) == 1 || *(unsigned char *)(v11 + 16) == 1)
  {
    sub_1000AEF2C(a1 + View[8], (uint64_t)v22, &qword_10094C750);
    if (v23)
    {
      v20 = sub_10007E4EC(v22, v23);
      memset(v21, 0, sizeof(v21));
      sub_100010B58(v9, (uint64_t)v21, *v20, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard, (void (*)(char *, char *))sub_1004FDF98, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
      sub_10008DB18((uint64_t)v21, &qword_100955A00);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v22);
    }
    else
    {
      return sub_10008DB18((uint64_t)v22, &qword_10094C750);
    }
  }
  return result;
}

uint64_t sub_100005D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100005D9C()
{
  unint64_t result = qword_100950468;
  if (!qword_100950468)
  {
    sub_1000A1370(&qword_100950470);
    sub_1000A132C(&qword_1009503B0, &qword_1009503A0);
    sub_1000A132C(&qword_1009503B8, &qword_100950390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950468);
  }
  return result;
}

unint64_t sub_100005E60()
{
  unint64_t result = qword_100969F98;
  if (!qword_100969F98)
  {
    sub_1000A1370(&qword_100969FA0);
    sub_1000A132C(&qword_100969FA8, &qword_100969FB0);
    sub_1000A132C(&qword_100969FB8, &qword_100969FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969F98);
  }
  return result;
}

uint64_t assignWithCopy for TrendsSplashScreen(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
    goto LABEL_7;
  }
  sub_10009EDF0((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  sub_10009EDF0((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  return a1;
}

uint64_t sub_100005FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000603C(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000101E4(a1, a2, v6);
}

uint64_t sub_1000060BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for FitnessPlusUpNextView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void sub_100006130()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__lastAnchor);
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__lastAnchor) = v2;
  id v4 = v2;
}

uint64_t sub_100006170()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unint64_t sub_100006248()
{
  unint64_t result = qword_10095BF80;
  if (!qword_10095BF80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10095BF80);
  }
  return result;
}

void sub_100006288()
{
  if (!qword_10095EEF0)
  {
    type metadata accessor for Artwork();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095EEF0);
    }
  }
}

uint64_t sub_1000062E0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  v3[2] = v2;
  return _swift_task_switch(sub_100012D00, v2, 0);
}

uint64_t sub_100006388(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1000AEEC8((uint64_t)&v6, v3, &qword_1009547D8);
  return swift_continuation_resume();
}

uint64_t sub_1000063EC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1000064F0()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 32) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000195C8, v2, v1);
}

uint64_t sub_100006584(uint64_t *a1, uint64_t a2)
{
  Swift::Int v5 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v138 = _minimumMergeRunLength(_:)(v5);
  if (v138 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_178;
    }
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_1004BFF90(0, v5, 1, a1, a2);
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_155:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_186;
  }
  uint64_t v146 = a2;
  Swift::Int v144 = v5;
  uint64_t v148 = v2;
  v135 = a1;
  if (v5 < 2)
  {
    __dst = &_swiftEmptyArrayStorage[4];
    v137 = _swiftEmptyArrayStorage;
    if (v5 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      v147 = (char *)_swiftEmptyArrayStorage;
LABEL_142:
      if (v12 >= 2)
      {
        uint64_t v125 = *v135;
        do
        {
          unint64_t v126 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_173;
          }
          if (!v125) {
            goto LABEL_185;
          }
          uint64_t v127 = *(void *)&v147[16 * v126 + 32];
          uint64_t v128 = *(void *)&v147[16 * v12 + 24];
          v129 = (Swift::UInt *)(v125 + 16 * *(void *)&v147[16 * v12 + 16]);
          swift_bridgeObjectRetain();
          sub_1004BFB78((Swift::UInt *)(v125 + 16 * v127), v129, v125 + 16 * v128, __dst, a2);
          if (v148) {
            goto LABEL_154;
          }
          swift_bridgeObjectRelease();
          if (v128 < v127) {
            goto LABEL_174;
          }
          v130 = v147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v130 = sub_1001EEF68((uint64_t)v147);
          }
          if (v126 >= *((void *)v130 + 2)) {
            goto LABEL_175;
          }
          v131 = v130 + 32;
          v132 = &v130[16 * v126 + 32];
          *(void *)v132 = v127;
          *((void *)v132 + 1) = v128;
          v133 = v130;
          unint64_t v134 = *((void *)v130 + 2);
          if (v12 > v134) {
            goto LABEL_176;
          }
          memmove(&v131[16 * v12 - 16], &v131[16 * v12], 16 * (v134 - v12));
          v147 = v133;
          *((void *)v133 + 2) = v134 - 1;
          unint64_t v12 = v134 - 1;
          BOOL v102 = v134 > 2;
          a2 = v146;
        }
        while (v102);
      }
      swift_bridgeObjectRelease();
      v137[2] = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    v137 = (void *)v8;
    __dst = (Swift::UInt *)(v8 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v136 = *a1 + 8;
  v147 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v11 = v144;
  uint64_t v149 = v10;
LABEL_16:
  Swift::Int v13 = v9 + 1;
  Swift::Int v140 = v9;
  if (v9 + 1 >= v11) {
    goto LABEL_49;
  }
  uint64_t v14 = v10 + 16 * v13;
  unsigned int v15 = *(unsigned __int16 *)(v14 + 8);
  if ((v15 >> 8) - 2 < 5) {
    goto LABEL_29;
  }
  uint64_t v16 = v10 + 16 * v9;
  unsigned int v17 = *(unsigned __int16 *)(v16 + 8);
  if ((v17 >> 8) - 2 < 5) {
    goto LABEL_29;
  }
  if (!*(void *)(a2 + 16)) {
    goto LABEL_29;
  }
  Swift::UInt v18 = *(void *)v14;
  Swift::UInt v19 = *(void *)v16;
  sub_100529F54(*(void *)v14, *(unsigned __int16 *)(v14 + 8));
  uint64_t v10 = v149;
  a2 = v146;
  if ((v20 & 1) == 0) {
    goto LABEL_29;
  }
  if (!*(void *)(v146 + 16)) {
    goto LABEL_29;
  }
  sub_100529F54(v19, v17);
  uint64_t v10 = v149;
  a2 = v146;
  if ((v21 & 1) == 0) {
    goto LABEL_29;
  }
  if (*(void *)(v146 + 16)
    && (v22 = sub_100529F54(v18, v15), uint64_t v10 = v149, a2 = v146, (v23 & 1) != 0)
    && *(void *)(v146 + 16)
    && (uint64_t v24 = *(void *)(*(void *)(v146 + 56) + 8 * v22),
        unint64_t v25 = sub_100529F54(v19, v17),
        uint64_t v10 = v149,
        a2 = v146,
        (v26 & 1) != 0))
  {
    BOOL v27 = *(void *)(*(void *)(v146 + 56) + 8 * v25) < v24;
    uint64_t v9 = v140;
    Swift::Int v28 = v140 + 2;
    if (v140 + 2 >= v11) {
      goto LABEL_48;
    }
  }
  else
  {
LABEL_29:
    uint64_t v9 = v140;
    Swift::Int v28 = v140 + 2;
    if (v140 + 2 >= v11)
    {
      Swift::Int v13 = v140 + 2;
      goto LABEL_92;
    }
    BOOL v27 = 0;
  }
  Swift::Int v29 = v13;
  v30 = (unsigned __int16 *)(v136 + 16 * v28);
  while (1)
  {
    unsigned int v31 = *v30;
    if ((v31 >> 8) - 2 >= 5)
    {
      uint64_t v32 = v10 + 16 * v29;
      unsigned int v33 = *(unsigned __int16 *)(v32 + 8);
      if ((v33 >> 8) - 2 >= 5)
      {
        if (*(void *)(a2 + 16))
        {
          Swift::UInt v34 = *((void *)v30 - 1);
          Swift::UInt v35 = *(void *)v32;
          sub_100529F54(v34, *v30);
          uint64_t v10 = v149;
          a2 = v146;
          if (v36)
          {
            if (*(void *)(v146 + 16))
            {
              sub_100529F54(v35, v33);
              uint64_t v10 = v149;
              a2 = v146;
              if (v37)
              {
                if (*(void *)(v146 + 16))
                {
                  unint64_t v38 = sub_100529F54(v34, v31);
                  uint64_t v10 = v149;
                  a2 = v146;
                  if (v39)
                  {
                    if (*(void *)(v146 + 16))
                    {
                      uint64_t v40 = *(void *)(*(void *)(v146 + 56) + 8 * v38);
                      unint64_t v41 = sub_100529F54(v35, v33);
                      uint64_t v10 = v149;
                      a2 = v146;
                      if (v42)
                      {
                        if (v27 == *(void *)(*(void *)(v146 + 56) + 8 * v41) >= v40) {
                          goto LABEL_47;
                        }
                        goto LABEL_45;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (v27) {
      break;
    }
LABEL_45:
    v30 += 8;
    Swift::Int v43 = v28 + 1;
    Swift::Int v29 = v28;
    Swift::Int v28 = v43;
    if (v43 >= v11)
    {
      Swift::Int v28 = v43;
LABEL_47:
      uint64_t v9 = v140;
LABEL_48:
      Swift::Int v13 = v28;
      if (v27) {
        goto LABEL_77;
      }
LABEL_49:
      if (v13 < v11) {
        goto LABEL_50;
      }
LABEL_92:
      v69 = v147;
      if (v13 < v9) {
        goto LABEL_172;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v69 = sub_1001EE868(0, *((void *)v147 + 2) + 1, 1, v147);
      }
      unint64_t v71 = *((void *)v69 + 2);
      unint64_t v70 = *((void *)v69 + 3);
      unint64_t v12 = v71 + 1;
      uint64_t v10 = v149;
      if (v71 >= v70 >> 1)
      {
        v123 = sub_1001EE868((char *)(v70 > 1), v71 + 1, 1, v69);
        uint64_t v10 = v149;
        v69 = v123;
      }
      *((void *)v69 + 2) = v12;
      v72 = v69 + 32;
      v73 = &v69[16 * v71 + 32];
      *(void *)v73 = v140;
      *((void *)v73 + 1) = v13;
      Swift::Int v141 = v13;
      v147 = v69;
      if (v71)
      {
        v143 = v69 + 32;
        while (1)
        {
          unint64_t v74 = v12 - 1;
          if (v12 >= 4)
          {
            v79 = &v72[16 * v12];
            uint64_t v80 = *((void *)v79 - 8);
            uint64_t v81 = *((void *)v79 - 7);
            BOOL v85 = __OFSUB__(v81, v80);
            uint64_t v82 = v81 - v80;
            if (v85) {
              goto LABEL_161;
            }
            uint64_t v84 = *((void *)v79 - 6);
            uint64_t v83 = *((void *)v79 - 5);
            BOOL v85 = __OFSUB__(v83, v84);
            uint64_t v77 = v83 - v84;
            char v78 = v85;
            if (v85) {
              goto LABEL_162;
            }
            unint64_t v86 = v12 - 2;
            v87 = &v72[16 * v12 - 32];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v85 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v85) {
              goto LABEL_164;
            }
            BOOL v85 = __OFADD__(v77, v90);
            uint64_t v91 = v77 + v90;
            if (v85) {
              goto LABEL_167;
            }
            if (v91 >= v82)
            {
              v109 = &v72[16 * v74];
              uint64_t v111 = *(void *)v109;
              uint64_t v110 = *((void *)v109 + 1);
              BOOL v85 = __OFSUB__(v110, v111);
              uint64_t v112 = v110 - v111;
              if (v85) {
                goto LABEL_171;
              }
              BOOL v102 = v77 < v112;
              goto LABEL_130;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v103 = *((void *)v69 + 4);
              uint64_t v104 = *((void *)v69 + 5);
              BOOL v85 = __OFSUB__(v104, v103);
              uint64_t v96 = v104 - v103;
              char v97 = v85;
              goto LABEL_124;
            }
            uint64_t v76 = *((void *)v69 + 4);
            uint64_t v75 = *((void *)v69 + 5);
            BOOL v85 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            char v78 = v85;
          }
          if (v78) {
            goto LABEL_163;
          }
          unint64_t v86 = v12 - 2;
          v92 = &v72[16 * v12 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v95 = __OFSUB__(v93, v94);
          uint64_t v96 = v93 - v94;
          char v97 = v95;
          if (v95) {
            goto LABEL_166;
          }
          v98 = &v72[16 * v74];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v85 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v85) {
            goto LABEL_169;
          }
          if (__OFADD__(v96, v101)) {
            goto LABEL_170;
          }
          if (v96 + v101 >= v77)
          {
            BOOL v102 = v77 < v101;
LABEL_130:
            if (v102) {
              unint64_t v74 = v86;
            }
            goto LABEL_132;
          }
LABEL_124:
          if (v97) {
            goto LABEL_165;
          }
          v105 = &v72[16 * v74];
          uint64_t v107 = *(void *)v105;
          uint64_t v106 = *((void *)v105 + 1);
          BOOL v85 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v85) {
            goto LABEL_168;
          }
          if (v108 < v96) {
            goto LABEL_15;
          }
LABEL_132:
          unint64_t v113 = v74 - 1;
          if (v74 - 1 >= v12)
          {
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
            goto LABEL_180;
          }
          if (!v10) {
            goto LABEL_183;
          }
          v114 = &v72[16 * v113];
          uint64_t v115 = *(void *)v114;
          unint64_t v116 = v74;
          v117 = &v72[16 * v74];
          uint64_t v118 = *((void *)v117 + 1);
          v119 = (Swift::UInt *)(v10 + 16 * *(void *)v114);
          v120 = (Swift::UInt *)(v10 + 16 * *(void *)v117);
          unint64_t v121 = v10 + 16 * v118;
          swift_bridgeObjectRetain();
          sub_1004BFB78(v119, v120, v121, __dst, v146);
          if (v148)
          {
LABEL_154:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v137[2] = 0;
            goto LABEL_155;
          }
          swift_bridgeObjectRelease();
          if (v118 < v115) {
            goto LABEL_158;
          }
          v69 = v147;
          if (v116 > *((void *)v147 + 2)) {
            goto LABEL_159;
          }
          *(void *)v114 = v115;
          v72 = v143;
          *(void *)&v143[16 * v113 + 8] = v118;
          unint64_t v122 = *((void *)v147 + 2);
          if (v116 >= v122) {
            goto LABEL_160;
          }
          unint64_t v12 = v122 - 1;
          memmove(v117, v117 + 16, 16 * (v122 - 1 - v116));
          *((void *)v147 + 2) = v122 - 1;
          Swift::Int v11 = v144;
          uint64_t v10 = v149;
          if (v122 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v9 = v141;
      a2 = v146;
      if (v141 >= v11) {
        goto LABEL_142;
      }
      goto LABEL_16;
    }
  }
  uint64_t v9 = v140;
LABEL_77:
  if (v28 >= v9)
  {
    if (v9 >= v28)
    {
      Swift::Int v13 = v28;
      if (v28 >= v11) {
        goto LABEL_92;
      }
    }
    else
    {
      Swift::Int v60 = v9;
      uint64_t v61 = 16 * v28 - 16;
      uint64_t v62 = 16 * v9;
      Swift::Int v63 = v28;
      do
      {
        if (v60 != --v63)
        {
          if (!v10) {
            goto LABEL_184;
          }
          v65 = (_OWORD *)(v10 + v62);
          v66 = (_OWORD *)(v10 + v61);
          uint64_t v67 = *(void *)(v10 + v62);
          __int16 v68 = *(_WORD *)(v10 + v62 + 8);
          if (v62 != v61 || v65 >= v66 + 1) {
            _OWORD *v65 = *v66;
          }
          uint64_t v64 = v10 + v61;
          *(void *)uint64_t v64 = v67;
          *(_WORD *)(v64 + 8) = v68;
        }
        ++v60;
        v61 -= 16;
        v62 += 16;
      }
      while (v60 < v63);
      Swift::Int v13 = v28;
      uint64_t v9 = v140;
      if (v28 >= v11) {
        goto LABEL_92;
      }
    }
LABEL_50:
    if (__OFSUB__(v13, v9)) {
      goto LABEL_177;
    }
    if (v13 - v9 >= v138)
    {
      uint64_t v9 = v140;
      goto LABEL_92;
    }
    Swift::Int v44 = v140 + v138;
    if (__OFADD__(v140, v138)) {
      goto LABEL_179;
    }
    if (v44 >= v11) {
      Swift::Int v44 = v11;
    }
    if (v44 >= v140)
    {
      uint64_t v9 = v140;
      if (v13 != v44)
      {
        uint64_t v45 = v10 + 16 * v13;
        Swift::Int v139 = v44;
        do
        {
          uint64_t v142 = v45;
          Swift::Int v46 = v9;
          do
          {
            unsigned int v47 = *(unsigned __int16 *)(v45 + 8);
            if ((v47 >> 8) - 2 < 5) {
              break;
            }
            unsigned int v48 = *(unsigned __int16 *)(v45 - 8);
            if ((v48 >> 8) - 2 < 5) {
              break;
            }
            if (!*(void *)(a2 + 16)) {
              break;
            }
            Swift::UInt v49 = *(void *)v45;
            Swift::UInt v50 = *(void *)(v45 - 16);
            sub_100529F54(*(void *)v45, *(unsigned __int16 *)(v45 + 8));
            if ((v51 & 1) == 0) {
              break;
            }
            if (!*(void *)(a2 + 16)) {
              break;
            }
            sub_100529F54(v50, v48);
            if ((v52 & 1) == 0) {
              break;
            }
            if (!*(void *)(a2 + 16)) {
              break;
            }
            unint64_t v53 = sub_100529F54(v49, v47);
            if ((v54 & 1) == 0) {
              break;
            }
            if (!*(void *)(a2 + 16)) {
              break;
            }
            uint64_t v55 = *(void *)(*(void *)(a2 + 56) + 8 * v53);
            unint64_t v56 = sub_100529F54(v50, v48);
            if ((v57 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * v56) >= v55) {
              break;
            }
            if (!v149) {
              goto LABEL_182;
            }
            Swift::UInt v58 = *(void *)v45;
            __int16 v59 = *(_WORD *)(v45 + 8);
            *(_OWORD *)uint64_t v45 = *(_OWORD *)(v45 - 16);
            *(_WORD *)(v45 - 8) = v59;
            *(void *)(v45 - 16) = v58;
            v45 -= 16;
            ++v46;
          }
          while (v13 != v46);
          ++v13;
          uint64_t v9 = v140;
          uint64_t v45 = v142 + 16;
        }
        while (v13 != v139);
        Swift::Int v13 = v139;
        Swift::Int v11 = v144;
      }
      goto LABEL_92;
    }
LABEL_180:
    __break(1u);
  }
  __break(1u);
LABEL_182:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000700C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000070A4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100007154()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100011E98();
    return swift_release();
  }
  return result;
}

void sub_1000071AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_10008A680(0x2Fu);
  }
}

uint64_t sub_100007204()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[18] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[19] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10000F360;
    uint64_t v3 = v0[8];
    return InvitationDestinationService.fetchInvitationDestinationGroups(for:)(v3);
  }
  else
  {
    sub_10060F5D4();
    uint64_t v4 = swift_allocError();
    *Swift::Int v5 = 1;
    swift_willThrow();
    v0[24] = v4;
    v0[25] = _convertErrorToNSError(_:)();
    type metadata accessor for MainActor();
    v0[26] = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10060F194, v7, v6);
  }
}

uint64_t type metadata accessor for ActivityDashboardEditButtonCell()
{
  return self;
}

uint64_t sub_1000073B0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000744C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_100007538()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_100027D50();
  }
}

id sub_10000758C()
{
  id result = [objc_allocWithZone((Class)ARUIRenderer) init];
  qword_1009984F0 = (uint64_t)result;
  return result;
}

void sub_1000075C0(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

void sub_100007614()
{
  if (!qword_1009511B0)
  {
    type metadata accessor for Calendar();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009511B0);
    }
  }
}

uint64_t sub_10000766C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000076B4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1000077F0()
{
  if (!qword_10095DB70)
  {
    type metadata accessor for DateInterval();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10095DB70);
    }
  }
}

uint64_t sub_1000078BC()
{
  if (*(unsigned char *)(v0 + 97))
  {
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(unsigned char **)(v0 + 32);
    char v4 = sub_10069DD90();
    v3[v2] = FIDeviceMeetsMinimumOSVersionDaytona();
    static os_log_type_t.default.getter();
    id v5 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 0;
    *(void *)(v7 + 32) = v3;
    *(unsigned char *)(v7 + 40) = v4 & 1;
    uint64_t v8 = v3;
    sub_1000713D0(v1, (uint64_t)&unk_1009687F8, v7);
    swift_release();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    *(void *)(v0 + 88) = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100019A34, v12, v11);
  }
}

void sub_100007A94()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000E94A8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100007B80()
{
  return swift_errorRetain();
}

uint64_t sub_100007BB4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100007C60(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)a1;
  sub_10008A670(v2);
  return a1;
}

uint64_t sub_100007CA4(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10007E2D8(0, &qword_10095BC50);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100007D28()
{
  uint64_t result = type metadata accessor for RemoteParticipant();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100007E30()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10000EC58, 0, 0);
}

uint64_t sub_100007F48(uint64_t a1, unsigned int *a2, void (*a3)(uint64_t), uint64_t *a4)
{
  uint64_t v7 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Font.TextStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *a2, v10);
  uint64_t v14 = enum case for Font.Design.rounded(_:);
  uint64_t v15 = type metadata accessor for Font.Design();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v9, v14, v15);
  uint64_t v17 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  a3(v17);
  uint64_t v18 = static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v9, &qword_10094C448);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a4 = v18;
  return result;
}

uint64_t sub_100008144()
{
  uint64_t result = type metadata accessor for InvitationDestinationService();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SecureCloudClient();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100008210()
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v4 = sub_100655EB4;
  }
  else
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[6];
    uint64_t v7 = v2[3];
    v2[12] = v2[2];
    v2[13] = v7;
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v6);
    char v4 = sub_10002E2F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

id sub_10000836C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DataLinkMonitor()) init];
  qword_100997F10 = (uint64_t)result;
  return result;
}

uint64_t sub_10000839C()
{
  uint64_t result = type metadata accessor for ActivitySharingHighlight();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FIUIRelativeDateTimeFormatter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100008480()
{
  sub_1000656A0(*(void **)(v0 + 88), *(void *)(v0 + 96));
  uint64_t v1 = *(void *)(v0 + 56);
  sub_10003D5A8(*(void **)(v0 + 32), v1);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/App/FitnessAppContext.swift";
  *(void *)(v2 + 24) = 89;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 197;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000EA63C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1000085AC()
{
  uint64_t result = type metadata accessor for Calendar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000864C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v3, &qword_10095F798);
    swift_release();
    uint64_t v4 = v0[43];
    uint64_t v5 = v0[44];
    return _swift_task_switch(sub_1004D5894, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[39];
    uint64_t v6 = v0[40];
    uint64_t v8 = v0[37];
    uint64_t v9 = v0[38];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[27], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[50] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[51] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10000F800;
    uint64_t v13 = v0[27];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 52, v13);
  }
}

uint64_t sub_100008848()
{
  uint64_t result = type metadata accessor for ActivityTypeKeyMigrator();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for HistoryDataProvider()
{
  return self;
}

void sub_1000088FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v4._countAndFlagsBits = 0xD00000000000007BLL;
  v4._object = (void *)0x80000001007C3030;
  v5._object = (void *)0x80000001007C30D0;
  v5._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v4, v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (sub_1000454C8())
  {
    id v6 = sub_100382B58();
    if (!v6) {
      return;
    }
  }
  else
  {
    if ((sub_100047994() & 1) == 0) {
      return;
    }
    id v6 = sub_100382E88();
    if (!v6) {
      return;
    }
  }
  id v7 = objc_allocWithZone((Class)UINavigationController);
  id v8 = v6;
  id v9 = [v7 initWithRootViewController:v8];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong presentModelOnSummaryTabWithViewController:v9];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_100008AE8()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllSkillLevels()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 188;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C18);
  *uint64_t v3 = v0;
  v3[1] = sub_10000E26C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E35B4, v2, v4);
}

uint64_t sub_100008C44(uint64_t a1)
{
  return a1;
}

void sub_100008C84()
{
  if (!qword_10094C600)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094C600);
    }
  }
}

uint64_t sub_100008CDC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR___WODataLinkMonitor_currentWorkoutState;
  uint64_t v15 = &OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
  if (*(void *)&v3[OBJC_IVAR___WODataLinkMonitor_currentWorkoutState] != a1)
  {
    uint64_t v34 = v11;
    static WOLog.dataLink.getter();
    uint64_t v16 = v3;
    uint64_t v17 = Logger.logObject.getter();
    int v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v33))
    {
      os_log_t v30 = v17;
      uint64_t v31 = v10;
      uint64_t v18 = swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      int v32 = a2;
      unint64_t v19 = 0xE600000000000000;
      uint64_t v20 = 0x657669746341;
      switch(a1)
      {
        case 0:
          goto LABEL_8;
        case 1:
          uint64_t v20 = 0xD00000000000001ELL;
          unint64_t v19 = 0x80000001007C8BE0;
          goto LABEL_8;
        case 2:
          uint64_t v20 = 0x726F576E49746F4ELL;
          unint64_t v19 = 0xEC00000074756F6BLL;
          goto LABEL_8;
        case 3:
          unint64_t v19 = 0x80000001007C8BC0;
          uint64_t v20 = 0xD000000000000012;
LABEL_8:
          uint64_t v35 = sub_10008F1F4(v20, v19, v36);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 12) = 2080;
          uint64_t v21 = *(void *)&v3[v14];
          unint64_t v22 = 0xE600000000000000;
          uint64_t v23 = 0x657669746341;
          switch(v21)
          {
            case 0:
              break;
            case 1:
              uint64_t v23 = 0xD00000000000001ELL;
              unint64_t v22 = 0x80000001007C8BE0;
              break;
            case 2:
              uint64_t v23 = 0x726F576E49746F4ELL;
              unint64_t v22 = 0xEC00000074756F6BLL;
              break;
            case 3:
              unint64_t v22 = 0x80000001007C8BC0;
              uint64_t v23 = 0xD000000000000012;
              break;
            default:

              uint64_t v35 = v21;
              goto LABEL_22;
          }
          uint64_t v35 = sub_10008F1F4(v23, v22, v36);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v24 = v30;
          _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v33, "Updating workout state to %s from %s", (uint8_t *)v18, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v34);
          uint64_t v15 = &OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
          LOBYTE(a2) = v32;
          goto LABEL_13;
        default:

          uint64_t v35 = a1;
LABEL_22:
          uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          return result;
      }
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v34);
LABEL_13:
    *(void *)&v3[v14] = a1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong updateWorkoutState:a1 shouldShowTimeout:a2 & 1];
      swift_unknownObjectRelease();
    }
    char v26 = *(void **)&v16[OBJC_IVAR___WODataLinkMonitor_metricPlatterAnalytics];
    if (a1)
    {
      if (a1 == 2) {
        sub_10026A164();
      }
    }
    else
    {
      v26[2] = 0;
      v26[3] = 0;
      swift_bridgeObjectRelease();
      v26[4] = 0;
      unint64_t v27 = sub_100523460((uint64_t)_swiftEmptyArrayStorage);
      swift_beginAccess();
      v26[5] = v27;
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v28 = *(void *)&v3[v15[285]];
  dispatch thunk of DataLinkClient.sessionUUID.getter();
  sub_100031844(v28, (uint64_t)v8, *(uint64_t **)&v3[v14]);
  return sub_1000CD2E4((uint64_t)v8);
}

uint64_t sub_1000091D0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100009290()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllBodyFocuses()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 158;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C30);
  *uint64_t v3 = v0;
  v3[1] = sub_10000A3F0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E3554, v2, v4);
}

uint64_t sub_1000093EC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000094AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = type metadata accessor for TaskPriority();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100058A1C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  a4(0);
  return swift_task_create();
}

uint64_t sub_100009630()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100009710()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Navigator()
{
  return self;
}

uint64_t sub_1000097E8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10065BF40;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_100062AB0;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_100009930()
{
  if (!qword_1009672E8)
  {
    type metadata accessor for DateComponents();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009672E8);
    }
  }
}

uint64_t sub_100009988()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000099C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100009A10()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllCatalogThemes()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 198;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C10);
  *uint64_t v3 = v0;
  v3[1] = sub_10000BD54;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E359C, v2, v4);
}

uint64_t sub_100009B6C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100009C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_10001A348, 0, 0);
}

void *sub_100009D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v45 - 8);
  uint64_t v6 = __chkstk_darwin(v45);
  char v42 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v46 = (char *)&v35 - v8;
  uint64_t v9 = _swiftEmptyArrayStorage;
  unint64_t v53 = _swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v38 = (uint64_t *)(a2 + OBJC_IVAR___CHHistoryDataProvider_historyItemIDsPendingDeletion);
  swift_beginAccess();
  uint64_t v39 = v10;
  if (v10)
  {
    uint64_t v35 = v2;
    uint64_t v11 = 0;
    uint64_t v37 = a1 + 32;
    uint64_t v41 = v5 + 16;
    uint64_t v36 = v5;
    Swift::Int v44 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v12 = v42;
    do
    {
      uint64_t v40 = v11;
      sub_10008E75C(v37 + 40 * v11, (uint64_t)&v50);
      uint64_t v13 = *v38;
      uint64_t v15 = v51;
      uint64_t v14 = v52;
      sub_10007E4EC(&v50, v51);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      v16(v15, v14);
      if (*(void *)(v13 + 16)
        && (sub_100067AC4((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID), uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)(), v18 = -1 << *(unsigned char *)(v13 + 32), v19 = v17 & ~v18, ((*(void *)(v13 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0))
      {
        uint64_t v43 = ~v18;
        uint64_t v20 = *(void *)(v36 + 72);
        uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
        while (1)
        {
          uint64_t v22 = v45;
          v21(v12, *(void *)(v13 + 48) + v20 * v19, v45);
          sub_100067AC4((unint64_t *)&unk_100955610, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          os_log_t v24 = *v44;
          (*v44)(v12, v22);
          if (v23) {
            break;
          }
          unint64_t v19 = (v19 + 1) & v43;
          if (((*(void *)(v13 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        v24(v46, v45);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v50);
      }
      else
      {
LABEL_10:
        swift_bridgeObjectRelease();
        (*v44)(v46, v45);
        sub_100093E60(&v50, (uint64_t)v47);
        unint64_t v25 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C9084(0, v25[2] + 1, 1);
          unint64_t v25 = v53;
        }
        unint64_t v27 = v25[2];
        unint64_t v26 = v25[3];
        if (v27 >= v26 >> 1) {
          sub_1001C9084(v26 > 1, v27 + 1, 1);
        }
        uint64_t v28 = v48;
        uint64_t v29 = v49;
        uint64_t v30 = sub_1000DDC00((uint64_t)v47, v48);
        __chkstk_darwin(v30);
        int v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v33 + 16))(v32);
        sub_1004BDD70(v27, (uint64_t)v32, (uint64_t *)&v53, v28, v29);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v47);
      }
      uint64_t v11 = v40 + 1;
    }
    while (v40 + 1 != v39);
    return v53;
  }
  return v9;
}

uint64_t type metadata accessor for FitnessAppDelegate()
{
  return self;
}

void sub_10000A2B0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10001EEC4(v1);
  }
  sub_10002828C();
}

uint64_t type metadata accessor for DataLinkMonitor()
{
  return self;
}

uint64_t sub_10000A3F0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10065BF40;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_100043300;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000A538()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10001D95C, v3, v2);
}

void sub_10000A67C()
{
  sub_1000077F0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10000A778()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000A814(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = a1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_1000E82F4((uint64_t)v4, v5);
  return swift_endAccess();
}

uint64_t sub_10000A8C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_10000BA74, v3, v2);
}

uint64_t sub_10000AA0C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_10000AAAC()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_10000EEC0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10000ABA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);

  sub_10005E5F8(v2);
  return a1;
}

uint64_t sub_10000ABE4()
{
  uint64_t v0 = type metadata accessor for UserDefaultsKeys();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000AFA94(&qword_100952268);
  sub_1000258C4(v4, qword_100952248);
  sub_1000876DC(v4, (uint64_t)qword_100952248);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for UserDefaultsKeys.personalizedExperienceEnabled(_:), v0);
  v6[15] = 1;
  return TestProperty.init(_:fallback:)();
}

Swift::Int sub_10000ADCC(uint64_t *a1)
{
  uint64_t v146 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v146 - 8);
  uint64_t v3 = __chkstk_darwin(v146);
  Swift::Int v139 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::Int v138 = (char *)&v127 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_138;
    }
    if (v6) {
      return sub_100220828(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_146;
  }
  Swift::Int v129 = result;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    v135 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v128 = v11;
      uint64_t v118 = v136;
      if (v14 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_133;
          }
          if (!v119) {
            goto LABEL_145;
          }
          unint64_t v121 = v13;
          unint64_t v122 = v13 + 32;
          uint64_t v123 = *(void *)&v13[16 * v120 + 32];
          uint64_t v124 = *(void *)&v13[16 * v14 + 24];
          sub_100220A9C((char *)(v119 + 40 * v123), (char *)(v119 + 40 * *(void *)&v122[16 * v14 - 16]), (char *)(v119 + 40 * v124), v135);
          if (v118) {
            goto LABEL_100;
          }
          if (v124 < v123) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v121 = sub_1001EEF68((uint64_t)v121);
          }
          if (v120 >= *((void *)v121 + 2)) {
            goto LABEL_135;
          }
          uint64_t v125 = &v121[16 * v120 + 32];
          *(void *)uint64_t v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v121 + 2);
          if (v14 > v126) {
            goto LABEL_136;
          }
          uint64_t v13 = v121;
          memmove(&v121[16 * v14 + 16], &v121[16 * v14 + 32], 16 * (v126 - v14));
          *((void *)v121 + 2) = v126 - 1;
          unint64_t v14 = v126 - 1;
        }
        while (v126 > 2);
      }
      swift_bridgeObjectRelease();
      v128[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v128 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1000AFA94((uint64_t *)&unk_100955630);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v10 + 16) = v9;
    uint64_t v128 = (void *)v10;
    v135 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  v137 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v15 = v12++;
    Swift::Int v133 = v15;
    if (v12 < v6)
    {
      v130 = v13;
      uint64_t v16 = *a1;
      sub_10008E75C(*a1 + 40 * v12, (uint64_t)&v143);
      sub_10008E75C(v16 + 40 * v15, (uint64_t)v140);
      Swift::Int v134 = v6;
      uint64_t v18 = v144;
      uint64_t v17 = v145;
      sub_10007E4EC(&v143, v144);
      unint64_t v19 = v138;
      (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v18, v17);
      uint64_t v20 = v141;
      uint64_t v21 = v142;
      sub_10007E4EC(v140, v141);
      uint64_t v22 = v139;
      uint64_t v23 = v20;
      Swift::Int v6 = v134;
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v23, v21);
      LODWORD(v132) = static Date.> infix(_:_:)();
      os_log_t v24 = *v137;
      unint64_t v25 = v22;
      uint64_t v26 = v146;
      (*v137)(v25, v146);
      unint64_t v27 = v19;
      Swift::Int v15 = v133;
      v24(v27, v26);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
      Swift::Int v12 = v15 + 2;
      uint64_t v131 = v16;
      if (v15 + 2 < v6)
      {
        uint64_t v28 = v16 + 40 * v15 + 40;
        while (1)
        {
          sub_10008E75C(v28 + 40, (uint64_t)&v143);
          sub_10008E75C(v28, (uint64_t)v140);
          uint64_t v30 = v144;
          uint64_t v29 = v145;
          sub_10007E4EC(&v143, v144);
          uint64_t v31 = v138;
          (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
          uint64_t v32 = v141;
          uint64_t v33 = v142;
          sub_10007E4EC(v140, v141);
          uint64_t v34 = v139;
          (*(void (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
          LODWORD(v32) = static Date.> infix(_:_:)();
          uint64_t v35 = v146;
          v24(v34, v146);
          v24(v31, v35);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v132 ^ v32)) {
            break;
          }
          ++v12;
          v28 += 40;
          Swift::Int v6 = v134;
          if (v134 == v12)
          {
            Swift::Int v12 = v134;
            Swift::Int v15 = v133;
            goto LABEL_23;
          }
        }
        Swift::Int v15 = v133;
        Swift::Int v6 = v134;
      }
LABEL_23:
      uint64_t v13 = v130;
      if (v132)
      {
        if (v12 < v15) {
          goto LABEL_139;
        }
        if (v15 < v12) {
          break;
        }
      }
    }
    if (v12 < v6) {
      goto LABEL_33;
    }
LABEL_52:
    if (v12 < v15) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1001EE868(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v63 = *((void *)v13 + 2);
    unint64_t v62 = *((void *)v13 + 3);
    unint64_t v14 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v13 = sub_1001EE868((char *)(v62 > 1), v63 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v14;
    uint64_t v64 = v13 + 32;
    v65 = &v13[16 * v63 + 32];
    *(void *)v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      Swift::Int v134 = v12;
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          unint64_t v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_121;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_122;
          }
          unint64_t v78 = v14 - 2;
          v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_124;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_127;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_131;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_90;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v13 + 4);
            uint64_t v96 = *((void *)v13 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_84;
          }
          uint64_t v68 = *((void *)v13 + 4);
          uint64_t v67 = *((void *)v13 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_123;
        }
        unint64_t v78 = v14 - 2;
        uint64_t v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_126;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_129;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_130;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_90:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v89) {
          goto LABEL_125;
        }
        char v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_128;
        }
        if (v100 < v88) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v106 = a1;
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v108 = v13;
        v109 = &v64[16 * v105];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = v64;
        unint64_t v112 = v66;
        unint64_t v113 = &v64[16 * v66];
        uint64_t v114 = *((void *)v113 + 1);
        uint64_t v115 = v136;
        sub_100220A9C((char *)(v107 + 40 * *(void *)v109), (char *)(v107 + 40 * *(void *)v113), (char *)(v107 + 40 * v114), v135);
        uint64_t v136 = v115;
        if (v115)
        {
LABEL_100:
          v117 = v128;
          swift_bridgeObjectRelease();
          v117[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v114 < v110) {
          goto LABEL_118;
        }
        if (v112 > *((void *)v108 + 2)) {
          goto LABEL_119;
        }
        *(void *)v109 = v110;
        *(void *)&v111[16 * v105 + 8] = v114;
        unint64_t v116 = *((void *)v108 + 2);
        if (v112 >= v116) {
          goto LABEL_120;
        }
        uint64_t v13 = v108;
        unint64_t v14 = v116 - 1;
        memmove(v113, v113 + 16, 16 * (v116 - 1 - v112));
        uint64_t v64 = v111;
        *((void *)v108 + 2) = v116 - 1;
        a1 = v106;
        Swift::Int v12 = v134;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v6 = a1[1];
    if (v12 >= v6)
    {
      uint64_t v11 = v128;
      goto LABEL_103;
    }
  }
  Swift::Int v36 = v12;
  v132 = a1;
  uint64_t v37 = v130;
  uint64_t v38 = 40 * v12 - 40;
  uint64_t v39 = 40 * v15;
  do
  {
    if (v15 != --v36)
    {
      if (!v131) {
        goto LABEL_144;
      }
      uint64_t v40 = v131 + v39;
      uint64_t v41 = v131 + v38;
      sub_100093E60((long long *)(v131 + v39), (uint64_t)&v143);
      uint64_t v42 = *(void *)(v41 + 32);
      long long v43 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v43;
      *(void *)(v40 + 32) = v42;
      sub_100093E60(&v143, v41);
    }
    ++v15;
    v38 -= 40;
    v39 += 40;
  }
  while (v15 < v36);
  uint64_t v13 = v37;
  a1 = v132;
  Swift::Int v15 = v133;
  Swift::Int v6 = v134;
  if (v12 >= v134) {
    goto LABEL_52;
  }
LABEL_33:
  if (__OFSUB__(v12, v15)) {
    goto LABEL_137;
  }
  if (v12 - v15 >= v129) {
    goto LABEL_52;
  }
  if (__OFADD__(v15, v129)) {
    goto LABEL_140;
  }
  if (v15 + v129 >= v6) {
    Swift::Int v44 = v6;
  }
  else {
    Swift::Int v44 = v15 + v129;
  }
  if (v44 >= v15)
  {
    if (v12 != v44)
    {
      v130 = v13;
      uint64_t v45 = 40 * v12 - 40;
      v132 = (uint64_t *)v44;
      do
      {
        Swift::Int v46 = v15;
        Swift::Int v134 = v45;
        while (1)
        {
          Swift::Int v47 = v12;
          uint64_t v48 = *a1 + v45;
          sub_10008E75C(v48 + 40, (uint64_t)&v143);
          sub_10008E75C(v48, (uint64_t)v140);
          uint64_t v49 = v144;
          uint64_t v50 = v145;
          sub_10007E4EC(&v143, v144);
          uint64_t v51 = a1;
          uint64_t v52 = v138;
          (*(void (**)(uint64_t, uint64_t))(v50 + 32))(v49, v50);
          uint64_t v53 = v141;
          uint64_t v54 = v142;
          sub_10007E4EC(v140, v141);
          uint64_t v55 = v139;
          (*(void (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
          LOBYTE(v53) = static Date.> infix(_:_:)();
          unint64_t v56 = *v137;
          char v57 = v55;
          uint64_t v58 = v146;
          (*v137)(v57, v146);
          v56(v52, v58);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v59 = *v51;
          if (!*v51) {
            goto LABEL_142;
          }
          a1 = v51;
          uint64_t v60 = v59 + v45;
          sub_100093E60((long long *)(v59 + v45 + 40), (uint64_t)&v143);
          long long v61 = *(_OWORD *)(v60 + 16);
          *(_OWORD *)(v60 + 40) = *(_OWORD *)v60;
          *(_OWORD *)(v60 + 56) = v61;
          *(void *)(v60 + 72) = *(void *)(v60 + 32);
          sub_100093E60(&v143, v60);
          v45 -= 40;
          ++v46;
          Swift::Int v12 = v47;
          if (v47 == v46) {
            goto LABEL_43;
          }
        }
        a1 = v51;
        Swift::Int v12 = v47;
LABEL_43:
        ++v12;
        Swift::Int v15 = v133;
        uint64_t v45 = v134 + 40;
      }
      while ((uint64_t *)v12 != v132);
      Swift::Int v12 = (Swift::Int)v132;
      uint64_t v13 = v130;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000B878()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v3, &qword_10095F798);
    swift_release();
    uint64_t v4 = v0[41];
    uint64_t v5 = v0[42];
    return _swift_task_switch(sub_1004D59D8, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[37];
    uint64_t v6 = v0[38];
    uint64_t v8 = v0[35];
    uint64_t v9 = v0[36];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[27], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    Swift::Int v15 = (int *)((char *)v10 + *v10);
    Swift::Int v12 = (void *)swift_task_alloc();
    v0[49] = v12;
    *Swift::Int v12 = v0;
    v12[1] = sub_10000BFC4;
    uint64_t v13 = v0[27];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 50, v13);
  }
}

uint64_t sub_10000BA74()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v2 + 48))(*(void *)(v0 + 72), 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    int v5 = *(_DWORD *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 64);
    sub_1000B0528(*(void *)(v0 + 40) + *(void *)(v0 + 184), v6, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
    Tip.status.getter();
    sub_1000C98F0(v6, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v7, v1);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    if (v8 == v5)
    {
      if (qword_10094AED8 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1000AFA94(&qword_10095F7D0);
      sub_1000876DC(v9, (uint64_t)qword_100998560);
      *(unsigned char *)(v0 + 220) = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
    }
    sub_10008DB18(*(void *)(v0 + 72), &qword_10095F798);
    uint64_t v10 = static MainActor.shared.getter();
    *(void *)(v0 + 200) = v10;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10000A8C8;
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 72);
    return AsyncStream.Iterator.next(isolation:)(v13, v10, &protocol witness table for MainActor, v12);
  }
}

uint64_t sub_10000BD54()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100655E08;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_10006204C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t type metadata accessor for ActivitySharingNavigationCoordinator()
{
  return self;
}

uint64_t sub_10000BF10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10001574C(a1, v4, v5, v6);
}

uint64_t sub_10000BFC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 216);
  uint64_t v3 = *(void *)(*v0 + 208);
  uint64_t v4 = *(void *)(*v0 + 200);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 360);
  uint64_t v6 = *(void *)(v1 + 352);
  return _swift_task_switch(sub_1000E59CC, v6, v5);
}

void sub_10000C164()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000E383C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10000C258(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AFA94(&qword_10095FE80);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = v3;
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v29;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000C50C()
{
  v1[18] = v0;
  type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100012170, v3, v2);
}

uint64_t sub_10000C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[13] = v6;
  v4[14] = v5;
  return _swift_task_switch(sub_10001A200, v6, v5);
}

uint64_t type metadata accessor for ActivityQueryExecutor()
{
  return self;
}

uint64_t sub_10000C660(void *a1, void *a2, __int16 a3)
{
  uint64_t v4 = a1;
  if ((a3 & 0xFF00) == 0x200)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v4;
  }
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR___CHHistoryDataProvider_stackHistoryItems);
  *(void *)&v27[0] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005F430(v7);
  uint64_t v8 = *(void *)&v27[0];
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(*(void *)&v27[0] + 16);
  if (!v9)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  unint64_t v10 = 0;
  uint64_t v11 = *(void *)&v27[0] + 32;
  uint64_t v22 = *(void *)(*(void *)&v27[0] + 16);
  int64_t v23 = a2;
  while (v10 < *(void *)(v8 + 16))
  {
    sub_10008E75C(v11, (uint64_t)v27);
    if (sub_1004B8914(v27, a2, a3))
    {
      sub_100093E60(v27, (uint64_t)v24);
      unint64_t v12 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C9084(0, v12[2] + 1, 1);
        unint64_t v12 = v28;
      }
      unint64_t v14 = v12[2];
      unint64_t v13 = v12[3];
      if (v14 >= v13 >> 1) {
        sub_1001C9084(v13 > 1, v14 + 1, 1);
      }
      uint64_t v15 = v25;
      uint64_t v16 = v26;
      uint64_t v17 = sub_1000DDC00((uint64_t)v24, v25);
      __chkstk_darwin(v17);
      unint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v19);
      sub_1004BDD70(v14, (uint64_t)v19, (uint64_t *)&v28, v15, v16);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v24);
      uint64_t v9 = v22;
      a2 = v23;
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
    }
    ++v10;
    v11 += 40;
    if (v9 == v10)
    {
      uint64_t v4 = v28;
      goto LABEL_15;
    }
  }
  __break(1u);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_10000C8C8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for Navigator()) init];
  qword_100998320 = (uint64_t)result;
  return result;
}

void sub_10000C8F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    sub_1000656EC(a2, a5, a7 & 1);
  }
}

uint64_t sub_10000C970()
{
  uint64_t v0 = type metadata accessor for Calendar();
  sub_1000258C4(v0, qword_100997640);
  sub_1000876DC(v0, (uint64_t)qword_100997640);
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_10000C9BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  char v7 = ServiceSubscription.isSubscribed(date:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return a2(v7 & 1);
}

uint64_t sub_10000CB00()
{
  uint64_t result = type metadata accessor for Calendar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000CBA0()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllTrainerReferences()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 208;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C08);
  *uint64_t v3 = v0;
  v3[1] = sub_10000DE60;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E3584, v2, v4);
}

uint64_t sub_10000CCFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CD44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CD8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CDD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CE1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CE64(char a1)
{
  *(unsigned char *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10005828C, v3, v2);
}

uint64_t type metadata accessor for FitnessSettingsProvider()
{
  return self;
}

uint64_t sub_10000D00C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10000D0B0()
{
  uint64_t result = type metadata accessor for SecureCloudClient();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10000D15C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t type metadata accessor for ActivityDashboardEntryLinksButtonCell()
{
  return self;
}

void sub_10000D1F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10000D270()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllCatalogModalityReferences()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 168;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C28);
  *uint64_t v3 = v0;
  v3[1] = sub_1000097E8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E356C, v2, v4);
}

uint64_t type metadata accessor for RingCoordinator()
{
  return self;
}

uint64_t sub_10000D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100014AFC, v6, v5);
}

uint64_t sub_10000D488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10000F084, v6, v5);
}

uint64_t sub_10000D520()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000D610()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100655BB0;
  }
  else
  {
    uint64_t v5 = v2[11];
    uint64_t v4 = v2[12];
    uint64_t v6 = v2[10];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_100019688;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_10000D754()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10008A680(0x2Eu);
  }
}

uint64_t sub_10000D7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000140F0, v6, v5);
}

uint64_t sub_10000D844()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MetricDetailViewModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000D93C()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000D9E8()
{
  uint64_t v0 = type metadata accessor for Calendar.Identifier();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  sub_1000258C4(v4, qword_100997610);
  sub_1000876DC(v4, (uint64_t)qword_100997610);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  Calendar.init(identifier:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10000DB08()
{
  uint64_t v1 = v0[11];
  sub_10007E4EC((void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(v0[4] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
  dispatch thunk of CatalogClientProtocol.queryAllMusicGenres()();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 178;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_1000AFA94(&qword_100966C20);
  *uint64_t v3 = v0;
  v3[1] = sub_10000EF3C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E35CC, v2, v4);
}

uint64_t sub_10000DC64()
{
  uint64_t v1 = v0[8];
  sub_10007E4EC((void *)(v0[5] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_contentAvailabilityClient), *(void *)(v0[5] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_contentAvailabilityClient + 24));
  dispatch thunk of ContentAvailabilityClientProtocol.queryStorefrontLanguageCode()();
  uint64_t v2 = swift_task_alloc();
  v0[9] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 217;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100008210;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E35E4, v2, &type metadata for String);
}

uint64_t sub_10000DDB8()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_10000DDEC()
{
  return dispatch thunk of UnfairLock.acquire<A>(_:)();
}

uint64_t sub_10000DE60()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10065BF40;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_1000D9CE4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000DFA8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000E837C, v1, v0);
}

void sub_10000E0E4()
{
  if (!qword_10094BE30)
  {
    type metadata accessor for ScrollViewProxy();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10094BE30);
    }
  }
}

id sub_10000E13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_notificationCenterObservers] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_forceUpdateNotifyToken] = -1;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_fetchRequests] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_activityDataProvider] = a1;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_fitnessPlusSubscriptionProvider] = a2;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_healthStore] = a3;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_seymourAvailabilityManager] = a4;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_trendsAvailabilityManager] = a5;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_wheelchairCache] = a6;
  sub_1000AFA94(&qword_10094F9A8);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 28) = 0;
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = 1;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState] = v13;
  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for SummaryUserProfileProvider();
  return [super init];
}

uint64_t sub_10000E26C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10065BF40;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_10003EABC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000E3B4()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000E424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100010EB0, v6, v5);
}

uint64_t sub_10000E4BC()
{
  uint64_t result = type metadata accessor for GregorianDayRange();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void *sub_10000E5F8(unint64_t a1)
{
  unint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v4) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v14 = v2;
    uint64_t v6 = 0;
    unint64_t v2 = a1 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v2) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 contactIdentifier:v14];
      if (v9)
      {
        unint64_t v10 = v9;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v13 = v12;

        sub_1006F707C(v11, v13);
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v4 == v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000E788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000E7CC()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    uint64_t v5 = sub_10020ABE8;
  }
  else
  {
    uint64_t v6 = (void *)v2[15];
    swift_release();

    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    uint64_t v5 = sub_10001580C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10000E8EC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_10000E940()
{
  uint64_t result = type metadata accessor for CompletedWorkoutShareItemProvider();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivitySharingSettings();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummaryChangeListener()
{
  return self;
}

uint64_t sub_10000EB00()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10000DFA8;
  return sub_10000C50C();
}

uint64_t sub_10000EBAC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  v3[3] = v2;
  return _swift_task_switch(sub_1000191E8, 0, 0);
}

uint64_t sub_10000EC58()
{
  uint64_t v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10000ECC0()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = swift_task_alloc();
  v0[63] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v2 + 24) = 129;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 261;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[64] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000EAE44;
  uint64_t v4 = v0[59];
  uint64_t v5 = v0[57];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E35FC, v2, v5);
}

uint64_t sub_10000EDC8()
{
  uint64_t result = type metadata accessor for MetricFormattingHelper();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_10000EEC0()
{
  if (!qword_1009551B0)
  {
    type metadata accessor for AttributedString();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009551B0);
    }
  }
}

uint64_t type metadata accessor for SummaryUserProfileProvider()
{
  return self;
}

uint64_t sub_10000EF3C()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10065BF40;
  }
  else
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[9];
    uint64_t v6 = v2[10];
    v2[15] = v2[2];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_10005AB90;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000F084()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    unint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_10000F9A0;
    return sub_1000104A4();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

void *sub_10000F18C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 contactProperty];
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = [v7 contact];

        id v10 = [v9 identifier];
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v13 = v12;

        sub_1006F707C(v11, v13);
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      ++v4;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000F360(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10060F0E8;
  }
  else
  {

    uint64_t v4 = sub_100011614;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10000F47C()
{
  type metadata accessor for WidgetCenter();
  static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();

  return swift_release();
}

uint64_t type metadata accessor for FitnessAppBadgeAggregator()
{
  return self;
}

void *sub_10000F4E8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10006B590((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for RemoteParticipant();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10000F604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000F64C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10000E3B4, 0, 0);
}

void sub_10000F7A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100049ECC();
  }
}

uint64_t sub_10000F800()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 216);
  uint64_t v3 = *(void *)(*v0 + 208);
  uint64_t v4 = *(void *)(*v0 + 200);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 376);
  uint64_t v6 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_1000E578C, v6, v5);
}

uint64_t sub_10000F9A0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 80);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1000E8B30, v4, v3);
}

uint64_t sub_10000FAE0()
{
  uint64_t result = type metadata accessor for ContentAvailability();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_10000FB58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    uint64_t v4 = &qword_100955A00;
    while (1)
    {
      sub_10008E75C(v2, (uint64_t)v53);
      uint64_t v6 = v54;
      uint64_t v5 = v55;
      sub_10007E4EC(v53, v54);
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 16))(v6);
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static HealthDataConstants.workoutSessionQueueIdentifierProperty.getter();
        if (*(void *)(v8 + 16) && (unint64_t v11 = sub_1000DA1C0(v9, v10), (v12 & 1) != 0))
        {
          sub_10008F484(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v49);
        }
        else
        {
          long long v49 = 0u;
          long long v50 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v50 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v13 = v4;
            uint64_t v15 = (uint64_t)v51;
            uint64_t v14 = v52;
            sub_10008E75C((uint64_t)v53, (uint64_t)&v49);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v51 = v3;
            unint64_t v18 = sub_1000DA1C0(v15, v14);
            uint64_t v19 = v3[2];
            BOOL v20 = (v17 & 1) == 0;
            uint64_t v21 = v19 + v20;
            if (__OFADD__(v19, v20))
            {
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
            char v22 = v17;
            if (v3[3] >= v21)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1004F3EE8();
              }
            }
            else
            {
              sub_1004EBA50(v21, isUniquelyReferenced_nonNull_native);
              unint64_t v23 = sub_1000DA1C0(v15, v14);
              if ((v22 & 1) != (v24 & 1)) {
                goto LABEL_62;
              }
              unint64_t v18 = v23;
            }
            uint64_t v3 = v51;
            swift_bridgeObjectRelease();
            if ((v22 & 1) == 0)
            {
              v3[(v18 >> 6) + 8] |= 1 << v18;
              uint64_t v25 = (uint64_t *)(v3[6] + 16 * v18);
              *uint64_t v25 = v15;
              v25[1] = v14;
              *(void *)(v3[7] + 8 * v18) = _swiftEmptyArrayStorage;
              uint64_t v26 = v3[2];
              uint64_t v27 = v26 + 1;
              BOOL v28 = __OFADD__(v26, 1);
              swift_bridgeObjectRetain();
              if (v28) {
                goto LABEL_60;
              }
              v3[2] = v27;
            }
            swift_bridgeObjectRetain();
            uint64_t v29 = v3[7];
            swift_bridgeObjectRelease();
            uint64_t v30 = *(void **)(v29 + 8 * v18);
            char v31 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v29 + 8 * v18) = v30;
            if ((v31 & 1) == 0)
            {
              uint64_t v30 = sub_1001E7334(0, v30[2] + 1, 1, v30);
              *(void *)(v29 + 8 * v18) = v30;
            }
            unint64_t v33 = v30[2];
            unint64_t v32 = v30[3];
            if (v33 >= v32 >> 1)
            {
              uint64_t v30 = sub_1001E7334((void *)(v32 > 1), v33 + 1, 1, v30);
              *(void *)(v29 + 8 * v18) = v30;
            }
            uint64_t v4 = v13;
            v30[2] = v33 + 1;
            sub_100093E60(&v49, (uint64_t)&v30[5 * v33 + 4]);
            swift_bridgeObjectRelease();
          }
          goto LABEL_5;
        }
      }
      else
      {
        long long v49 = 0u;
        long long v50 = 0u;
      }
      sub_10008DB18((uint64_t)&v49, v4);
LABEL_5:
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v53);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
  }
  uint64_t v3 = _swiftEmptyDictionarySingleton;
LABEL_32:
  *(void *)&long long v49 = _swiftEmptyArrayStorage;
  uint64_t v34 = v3 + 8;
  uint64_t v35 = 1 << *((unsigned char *)v3 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & v3[8];
  int64_t v38 = (unint64_t)(v35 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  if (!v37) {
    goto LABEL_36;
  }
LABEL_35:
  unint64_t v40 = __clz(__rbit64(v37));
  v37 &= v37 - 1;
  for (unint64_t i = v40 | (v39 << 6); ; unint64_t i = __clz(__rbit64(v43)) + (v39 << 6))
  {
    uint64_t v45 = (uint64_t *)(v3[6] + 16 * i);
    uint64_t v46 = v45[1];
    uint64_t v47 = *(void *)(v3[7] + 8 * i);
    v53[0] = *v45;
    v53[1] = v46;
    v53[2] = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1003D609C((unint64_t *)&v49, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_35;
    }
LABEL_36:
    if (__OFADD__(v39++, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v39 >= v38) {
      goto LABEL_57;
    }
    unint64_t v43 = v34[v39];
    if (!v43) {
      break;
    }
LABEL_50:
    unint64_t v37 = (v43 - 1) & v43;
  }
  int64_t v44 = v39 + 1;
  if (v39 + 1 >= v38) {
    goto LABEL_57;
  }
  unint64_t v43 = v34[v44];
  if (v43) {
    goto LABEL_49;
  }
  int64_t v44 = v39 + 2;
  if (v39 + 2 >= v38) {
    goto LABEL_57;
  }
  unint64_t v43 = v34[v44];
  if (v43) {
    goto LABEL_49;
  }
  int64_t v44 = v39 + 3;
  if (v39 + 3 >= v38) {
    goto LABEL_57;
  }
  unint64_t v43 = v34[v44];
  if (v43) {
    goto LABEL_49;
  }
  int64_t v44 = v39 + 4;
  if (v39 + 4 >= v38) {
    goto LABEL_57;
  }
  unint64_t v43 = v34[v44];
  if (v43) {
    goto LABEL_49;
  }
  int64_t v44 = v39 + 5;
  if (v39 + 5 >= v38)
  {
LABEL_57:
    swift_release();
    swift_bridgeObjectRelease();
    return v49;
  }
  unint64_t v43 = v34[v44];
  if (v43)
  {
LABEL_49:
    int64_t v39 = v44;
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v39 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v39 >= v38) {
      goto LABEL_57;
    }
    unint64_t v43 = v34[v39];
    ++v44;
    if (v43) {
      goto LABEL_50;
    }
  }
LABEL_61:
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_62:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100010050(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_1000100D8()
{
  return sub_100027EFC(&OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange);
}

uint64_t sub_1000100F8()
{
  return sub_1000C8F98(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100010124()
{
  return sub_1000C0F54(*(char **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_100010154()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10003E3AC(v0 + v2, v3);
}

uint64_t sub_1000101E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v6 = *(void *)(View - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(View - 8);
  uint64_t v8 = sub_1000AFA94(&qword_10094B7A0);
  uint64_t result = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((unsigned char *)a2 + 16))
  {
    uint64_t v12 = *a2;
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
    sub_1000D2848(a3, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v12;
    sub_1000D27E0((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
    swift_bridgeObjectRetain();
    sub_1000713D0((uint64_t)v11, (uint64_t)&unk_10095FB30, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000103B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_10005DB5C;
  return sub_1000241B8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000104A4()
{
  v1[6] = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v4;
  v1[12] = v3;
  return _swift_task_switch(sub_100034794, v4, v3);
}

uint64_t sub_100010598(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000AFA94(a5);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000106F0()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MetricFormattingHelper();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Calendar.Component();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Date.FormatStyle();
          if (v4 <= 0x3F)
          {
            type metadata accessor for AxisMarkValues();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100010974(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1000DE358(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_100006584(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100010A88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100010B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), void (*a6)(char *, char *), uint64_t (*a7)(void))
{
  uint64_t v13 = a4(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v26 - v14;
  sub_1000D2848(a1, (uint64_t)v26 - v14, a5);
  size_t v16 = *(char **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (!v16) {
    return sub_1000E370C((uint64_t)v15, a7);
  }
  char v17 = &v15[*(int *)(v13 + 20)];
  int v18 = v17[16];
  if ((v15[*(int *)(v13 + 28)] & 1) == 0)
  {
    if (v18 != 3) {
      return sub_1000E370C((uint64_t)v15, a7);
    }
    uint64_t v21 = *(void *)v17;
    uint64_t v20 = *((void *)v17 + 1);
    if (v21 ^ 4 | v20)
    {
      if (v21 ^ 5 | v20) {
        return sub_1000E370C((uint64_t)v15, a7);
      }
      char v22 = *(void **)(*(void *)&v16[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                     + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider);
      unint64_t v23 = v16;
      char v24 = v22;
      sub_10002E16C();
    }
    else
    {
      sub_1000AEF2C(a2, (uint64_t)v27, &qword_100955A00);
      if (!v28)
      {
        sub_10008DB18((uint64_t)v27, &qword_100955A00);
        return sub_1000E370C((uint64_t)v15, a7);
      }
      sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
      char v24 = v16;
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_14;
      }
      unint64_t v23 = (char *)v26[1];
      [v24 dismissViewControllerAnimated:0 completion:0];
      [v24 presentViewController:v23 animated:1 completion:0];
    }

LABEL_14:
    return sub_1000E370C((uint64_t)v15, a7);
  }
  if (v18 != 3 || *(_OWORD *)v17 != 0)
  {
    uint64_t v19 = v16;
    a6(v15, v19);
  }
  return sub_1000E370C((uint64_t)v15, a7);
}

void sub_100010D88()
{
  sub_100010E54();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100010E54()
{
  if (!qword_1009502E8)
  {
    sub_1000A1370(&qword_10094C580);
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009502E8);
    }
  }
}

uint64_t sub_100010EB0()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v0[7] = v0[2];
  return _swift_task_switch(sub_1000E45F8, v1, 0);
}

unint64_t sub_100010FF4()
{
  unint64_t result = qword_10095F2E8;
  if (!qword_10095F2E8)
  {
    sub_1000A1370(&qword_10095F290);
    sub_1000A1370(&qword_10095F2B8);
    sub_10007C79C(&qword_10095F2C0, &qword_10095F2B8, (void (*)(void))sub_1000E0FC4);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F2E8);
  }
  return result;
}

void *assignWithCopy for ActivitySharingHighlightDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1000111B0(uint64_t a1)
{
  unint64_t v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  CFStringRef v6 = @"range";
  uint64_t v7 = v3;
  uint64_t v5 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  [v2 postNotificationName:@"ActivitySummaryCacheChangedNotification" object:v4 userInfo:v5];
}

uint64_t sub_10001127C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_100011614()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 96);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = 0;
    CFStringRef v6 = *(void (**)(void, uint64_t, void))(v3 + 16);
    v3 += 16;
    uint64_t v39 = v1 + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    unint64_t v40 = v6;
    uint64_t v38 = *(void *)(v3 + 56);
    uint64_t v47 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v35 = v4;
    uint64_t v36 = v2;
    unint64_t v37 = (void (**)(uint64_t, uint64_t))(v3 - 8);
    do
    {
      uint64_t v13 = *(void *)(v0 + 112);
      uint64_t v14 = *(void *)(v0 + 88);
      v40(*(void *)(v0 + 136), v39 + v5 * v38, *(void *)(v0 + 120));
      uint64_t v15 = InvitationDestinationGroup.destination.getter();
      uint64_t v17 = v16;
      InvitationDestinationGroup.preferredDestination.getter();
      uint64_t v18 = InvitationDestination.serviceIdentifier.getter();
      uint64_t v43 = v19;
      uint64_t v44 = v18;
      uint64_t v46 = *v47;
      (*v47)(v13, v14);
      uint64_t v20 = InvitationDestinationGroup.additionalDestinations.getter();
      int64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v41 = v15;
        uint64_t v42 = v5;
        sub_1000ABAB8(0, v21, 0);
        unint64_t v22 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        uint64_t v45 = *(void *)(v35 + 72);
        unint64_t v23 = *(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16);
        do
        {
          uint64_t v24 = *(void *)(v0 + 104);
          uint64_t v25 = *(void *)(v0 + 88);
          v23(v24, v22, v25);
          uint64_t v26 = InvitationDestination.serviceIdentifier.getter();
          uint64_t v28 = v27;
          v46(v24, v25);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1000ABAB8(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v30 = _swiftEmptyArrayStorage[2];
          unint64_t v29 = _swiftEmptyArrayStorage[3];
          if (v30 >= v29 >> 1) {
            sub_1000ABAB8(v29 > 1, v30 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v30 + 1;
          char v31 = &_swiftEmptyArrayStorage[2 * v30];
          v31[4] = v26;
          v31[5] = v28;
          v22 += v45;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        uint64_t v2 = v36;
        uint64_t v15 = v41;
        uint64_t v5 = v42;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v5;
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 120);
      uint64_t v9 = (objc_class *)type metadata accessor for ReachableDestination();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      unint64_t v11 = (uint64_t *)&v10[OBJC_IVAR___CHReachableDestination_destination];
      *unint64_t v11 = v15;
      v11[1] = v17;
      int64_t v12 = &v10[OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier];
      *(void *)int64_t v12 = v44;
      *((void *)v12 + 1) = v43;
      *(void *)&v10[OBJC_IVAR___CHReachableDestination_additionalServiceIdentifiers] = _swiftEmptyArrayStorage;
      *(void *)(v0 + 40) = v10;
      *(void *)(v0 + 48) = v9;
      [super init];
      (*v37)(v7, v8);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v5 != v2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 176) = _swiftEmptyArrayStorage;
  type metadata accessor for MainActor();
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100012B30, v33, v32);
}

uint64_t sub_100011A54()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DBD6C;
  v3[2] = v2;
  return _swift_task_switch(sub_1000CD3AC, v2, 0);
}

void sub_100011AFC()
{
  type metadata accessor for ShelfLockupAttributedTagStrings();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Artwork();
    if (v1 <= 0x3F)
    {
      sub_100006288();
      if (v2 <= 0x3F)
      {
        type metadata accessor for URL();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_100011C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for CatalogModalityReference();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE48);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_10000D270, 0, 0);
}

uint64_t sub_100011D84()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *unint64_t v2 = *(unsigned char *)(v1 + 32);
  unint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_100011E98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v6[5] = v1;
  swift_retain();
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_100953730, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_100011FBC()
{
  uint64_t v1 = *(void **)(v0 + 256);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100012040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for CatalogTheme();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE18);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_100009A10, 0, 0);
}

uint64_t sub_100012170()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = type metadata accessor for SmallAwardsCardView();
  v0[22] = v2;
  uint64_t v3 = *(void **)(v1 + *(int *)(v2 + 28));
  v0[23] = v3;
  if (v3 && (uint64_t v4 = *(void **)(v1 + *(int *)(v2 + 40))) != 0)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1000E84A8;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100006388;
    v0[13] = &unk_1008BC298;
    v0[14] = v5;
    [v4 thumbnailImageForAchievement:v3 size:v0 + 10 completion:90.0];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100012450(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100011D84;
  return v5(v2 + 32);
}

uint64_t sub_100012650()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = (void *)qword_10096B5A8;
  qword_10096B5A8 = (uint64_t)v0;

  qword_10096B598 = +[NSCalendar hk_gregorianCalendarWithUTCTimeZone];

  return _objc_release_x1();
}

uint64_t sub_1000126AC(uint64_t a1)
{
  return a1;
}

void sub_10001271C()
{
  id v0 = [self mainScreen];
  [v0 scale];
  uint64_t v2 = v1;

  qword_100998300 = v2;
}

id sub_1000127D8()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:1];
  [v0 setGeneratesDecimalNumbers:0];
  id result = [v0 setMaximumFractionDigits:0];
  qword_100961008 = (uint64_t)v0;
  return result;
}

uint64_t sub_100012920(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_1000129F4()
{
  swift_beginAccess();
  sub_1000AFA94(&qword_10095A608);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  return _swift_task_switch(sub_100017B30, 0, 0);
}

uint64_t sub_100012B30()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = (void (*)(uint64_t, void))v0[9];
  swift_release();
  v2(v1, 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100012BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  uint64_t v8 = type metadata accessor for InvitationDestination();
  v7[11] = v8;
  v7[12] = *(void *)(v8 - 8);
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for InvitationDestinationGroup();
  v7[15] = v9;
  v7[16] = *(void *)(v9 - 8);
  v7[17] = swift_task_alloc();
  return _swift_task_switch(sub_100007204, 0, 0);
}

uint64_t sub_100012D00()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_experienceType) = FIExperienceTypeWithHealthStore();
  sub_1000CD40C();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100012D7C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100968EB0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100968EB8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100968EC0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for TrendsCardView(0) + 20);
  if (*(unsigned char *)(v11 + *(int *)(type metadata accessor for TrendsCard() + 24)) == 1)
  {
    sub_10001E340(a1, (uint64_t)v10);
    sub_1000AEF2C((uint64_t)v10, (uint64_t)v7, &qword_100968EC0);
    swift_storeEnumTagMultiPayload();
    sub_1000E08D8();
    sub_1000E0B98();
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v10;
    uint64_t v13 = &qword_100968EC0;
  }
  else
  {
    sub_1006BA6CC(a1, (uint64_t)v4);
    sub_1000AEF2C((uint64_t)v4, (uint64_t)v7, &qword_100968EB0);
    swift_storeEnumTagMultiPayload();
    sub_1000E08D8();
    sub_1000E0B98();
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v4;
    uint64_t v13 = &qword_100968EB0;
  }
  return sub_10008DB18(v12, v13);
}

uint64_t sub_100012FAC()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  return sub_100073E98();
}

unint64_t sub_10001302C()
{
  unint64_t result = qword_10096A028[0];
  if (!qword_10096A028[0])
  {
    sub_1000A1370(&qword_100960040);
    sub_1000A1370(&qword_100969F68);
    sub_1000E0A88();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10096A028);
  }
  return result;
}

uint64_t sub_100013174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for TrainerReference();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE08);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_10000CBA0, 0, 0);
}

uint64_t sub_100013364@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v27 = a5;
  int v26 = a3;
  uint64_t v28 = a10;
  uint64_t v29 = a6;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v25[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v21 = (int *)type metadata accessor for AwardsCard();
  uint64_t v22 = a9 + v21[5];
  *(_OWORD *)uint64_t v22 = xmmword_100750D20;
  *(unsigned char *)(v22 + 16) = 3;
  sub_1000CD344(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v16);
    unint64_t v23 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    unint64_t v23 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32);
    v23((uint64_t)v20, v16, v17);
  }
  uint64_t result = v23(a9, v20, v17);
  *(unsigned char *)(a9 + v21[6]) = a2 & 1;
  *(unsigned char *)(a9 + v21[7]) = v26 & 1;
  *(unsigned char *)(a9 + v21[8]) = a4 & 1;
  *(void *)(a9 + v21[9]) = v27;
  *(void *)(a9 + v21[10]) = v29;
  *(void *)(a9 + v21[11]) = v30;
  *(void *)(a9 + v21[12]) = v31;
  *(void *)(a9 + v21[13]) = v28;
  return result;
}

uint64_t sub_1000135B0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100022BA0, 0, 0);
}

uint64_t sub_1000136AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 56);
  char v7 = *(unsigned char *)(v1 + 64);
  unsigned __int8 v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000DBD6C;
  return sub_100037660(a1, v4, v5, v8, v13, v11, v6, v7);
}

uint64_t sub_1000137BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  BOOL v8 = a5 > 3u;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1000DBD6C;
  return sub_100022C14(a1, a5, v8, 1);
}

unint64_t sub_100013880()
{
  unint64_t result = qword_10095F310;
  if (!qword_10095F310)
  {
    sub_1000A1370(&qword_10095F268);
    sub_1000A1370(&qword_10095F2F0);
    sub_10007C79C(&qword_10095F2F8, &qword_10095F2F0, (void (*)(void))sub_1000E2004);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F310);
  }
  return result;
}

uint64_t assignWithCopy for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100013A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for BodyFocus();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE58);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_100009290, 0, 0);
}

uint64_t sub_100013B94(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100013CA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005DB5C;
  return sub_1000295D0(a1, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_100013E18()
{
  unint64_t result = qword_10094D278;
  if (!qword_10094D278)
  {
    sub_1000A1370(&qword_10094D280);
    sub_1000949F4();
    sub_1000A1370(&qword_10094CF00);
    sub_100094954();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D278);
  }
  return result;
}

id sub_100013ED0()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TrendsSplashVideoView();
  [super didMoveToWindow];
  id v1 = [v0 window];

  id result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player];
  if (result)
  {
    uint64_t v3 = &selRef_pause;
    if (v1) {
      uint64_t v3 = &selRef_play;
    }
    return [result *v3];
  }
  return result;
}

uint64_t sub_100013F60@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = (void *)result;
  if (result)
  {
    *(void *)(result + OBJC_IVAR___CHFitnessAppContext_playlists) = v3;
    swift_bridgeObjectRetain();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v5 == 0;
  return result;
}

uint64_t sub_100013FFC(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100029678, v5, v4);
}

uint64_t sub_1000140F0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_100084218();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100014194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for MusicGenre();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE38);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_10000DB08, 0, 0);
}

uint64_t sub_1000142C4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[3];
  ServiceSubscriptionRequest.init(authenticationBehavior:cacheBehavior:)();
  sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient + 24));
  dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)();
  uint64_t v3 = swift_task_alloc();
  v0[19] = v3;
  *(void *)(v3 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(void *)(v3 + 24) = 129;
  *(unsigned char *)(v3 + 32) = 2;
  *(void *)(v3 + 40) = 147;
  *(void *)(v3 + 48) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10000D610;
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1000E3624, v3, v6);
}

uint64_t sub_100014420(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  unsigned __int8 v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005DB5C;
  return sub_1000137BC(a1, v4, v5, v6, v7);
}

uint64_t sub_1000144E4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  *(void *)(v0 + 184) = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  sub_1000B0528(v5 + v6, v1, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  *(void *)(v0 + 192) = sub_1000B7550(&qword_10095F6B8, (void (*)(uint64_t))type metadata accessor for CustomizeSummaryTip);
  Tip.statusUpdates.getter();
  sub_1000C98F0(v1, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *(_DWORD *)(v0 + 216) = enum case for Tips.Status.invalidated(_:);
  uint64_t v7 = static MainActor.shared.getter();
  *(void *)(v0 + 200) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10000A8C8;
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 72);
  return AsyncStream.Iterator.next(isolation:)(v10, v7, &protocol witness table for MainActor, v9);
}

unint64_t sub_10001468C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    os_log_type_t v3 = static os_log_type_t.error.getter();
    uint64_t v4 = (void *)HKLogActivity;
    os_log_type_t v5 = v3;
    if (os_log_type_enabled(HKLogActivity, v3))
    {
      swift_errorRetain();
      swift_errorRetain();
      log = v4;
      uint64_t v6 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315394;
      uint64_t v7 = _typeName(_:qualified:)();
      sub_10008F1F4(v7, v8, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2080;
      swift_getErrorValue();
      Error.localizedDescription.getter();
      sub_1000AFA94((uint64_t *)&unk_100958790);
      uint64_t v9 = Optional.description.getter();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_10008F1F4(v9, v11, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v5, "%s failed to load last move mode category sample with error: %s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    goto LABEL_17;
  }
  if (!a2)
  {
LABEL_17:
    sub_1000AFA94(&qword_100953718);
    return CheckedContinuation.resume(returning:)();
  }
  if (!(a2 >> 62))
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_8:
  unint64_t result = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_19:
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    self;
    if (!swift_dynamicCastObjCClass()) {

    }
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 8 * result + 32);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_100014974()
{
  unint64_t result = qword_100951740;
  if (!qword_100951740)
  {
    sub_1000A1370(&qword_100951738);
    sub_1000A1370(&qword_10094C420);
    sub_1000E20A4();
    swift_getOpaqueTypeConformance2();
    sub_10000CD44((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100951740);
  }
  return result;
}

unint64_t sub_100014A54()
{
  unint64_t result = qword_100968F48;
  if (!qword_100968F48)
  {
    sub_1000A1370(&qword_100968F50);
    sub_1000A1370(&qword_100968F58);
    sub_1000E21E8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968F48);
  }
  return result;
}

uint64_t sub_100014AFC()
{
  uint64_t v1 = *(char **)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingFriendDetailAlertCoordinator];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  uint64_t v5 = *(void *)(v3 + 112);
  *(void *)(v3 + 112) = sub_10049964C;
  *(void *)(v3 + 120) = v4;
  swift_retain();
  swift_retain();
  uint64_t v6 = v1;
  sub_10005E5F8(v5);
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100014BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  v4[4] = a4;
  uint64_t v5 = type metadata accessor for SkillLevel();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095FE28);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_100008AE8, 0, 0);
}

void *sub_100014D08(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for DayIndex();
  uint64_t v7 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  unint64_t v63 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v9 - 8);
  unint64_t v62 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for GregorianDayRange();
  uint64_t v11 = *(void *)(v61 - 8);
  uint64_t v12 = __chkstk_darwin(v61);
  uint64_t v60 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v59 = (char *)v48 - v14;
  uint64_t v58 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v58 - 8);
  uint64_t v16 = __chkstk_darwin(v58);
  char v57 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)v48 - v18;
  uint64_t v80 = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    v48[2] = v2;
    v48[1] = a1;
    uint64_t v20 = a1 + 32;
    uint64_t v56 = a2 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
    uint64_t v71 = a2;
    uint64_t v55 = a2 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange;
    swift_beginAccess();
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v53 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v51 = (void (**)(char *, uint64_t))(v5 + 8);
    long long v50 = (void (**)(char *, uint64_t))(v7 + 8);
    long long v49 = (void (**)(char *, uint64_t))(v15 + 8);
    int64_t v21 = _swiftEmptyArrayStorage;
    uint64_t v22 = v55;
    unint64_t v23 = v63;
    while (1)
    {
      unint64_t v66 = v21;
      uint64_t v67 = v20;
      uint64_t v68 = v19;
      sub_10008E75C(v20, (uint64_t)&v77);
      uint64_t v24 = v78;
      uint64_t v25 = v79;
      sub_10007E4EC(&v77, v78);
      (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
      swift_getKeyPath();
      v74[0] = v71;
      uint64_t v70 = sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v69 = *v54;
      int v26 = v59;
      uint64_t v27 = v61;
      v69(v59, v22, v61);
      uint64_t v28 = (uint64_t)v62;
      GregorianDayRange.dayIndexRange.getter();
      uint64_t v29 = *v53;
      (*v53)(v26, v27);
      (*v52)(v23, v28, v73);
      sub_10008DB18(v28, &qword_100950728);
      swift_getKeyPath();
      v74[0] = v71;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v30 = v60;
      v69(v60, v22, v27);
      uint64_t v31 = v64;
      GregorianDayRange.gregorianCalendar.getter();
      v29(v30, v27);
      uint64_t v32 = v57;
      DayIndex.startDate(in:)();
      (*v51)(v31, v65);
      (*v50)(v23, v73);
      sub_1000858A8((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v33 = v72;
      uint64_t v34 = v58;
      LOBYTE(v30) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v35 = *v49;
      (*v49)(v32, v34);
      v35(v33, v34);
      if (v30) {
        break;
      }
      sub_100093E60(&v77, (uint64_t)v74);
      uint64_t v36 = v66;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v80 = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001C9084(0, v36[2] + 1, 1);
        uint64_t v36 = v80;
      }
      uint64_t v38 = v68;
      unint64_t v40 = v36[2];
      unint64_t v39 = v36[3];
      if (v40 >= v39 >> 1) {
        sub_1001C9084(v39 > 1, v40 + 1, 1);
      }
      uint64_t v41 = v75;
      uint64_t v42 = v76;
      uint64_t v43 = sub_1000DDC00((uint64_t)v74, v75);
      __chkstk_darwin(v43);
      uint64_t v45 = (char *)v48 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v46 + 16))(v45);
      sub_1004BDD70(v40, (uint64_t)v45, (uint64_t *)&v80, v41, v42);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v74);
      int64_t v21 = v80;
      uint64_t v20 = v67 + 40;
      uint64_t v19 = v38 - 1;
      if (!v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v77);
    swift_bridgeObjectRelease();
    return v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_10001550C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100955568 + dword_100955568);
  return v6(a1, v4);
}

uint64_t sub_1000155C4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100015650()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100068518, 0, 0);
}

uint64_t sub_10001574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  uint64_t v5 = type metadata accessor for SecureCloudClient();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_10001D830, 0, 0);
}

uint64_t sub_10001580C()
{
  uint64_t v1 = (void *)v0[11];
  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  id v5 = [v1 currentItem];
  if (v5)
  {
    uint64_t v6 = v5;
    CMTimeEpoch epoch = kCMTimeZero.epoch;
    v0[2] = kCMTimeZero.value;
    v0[3] = *(void *)&kCMTimeZero.timescale;
    v0[4] = epoch;
    v0[5] = v2;
    v0[6] = v3;
    v0[7] = v4;
    [v5 setLoopTimeRange:];
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_1000158E0(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 104);
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  [v1 addObject:v2];
}

uint64_t sub_100015934(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_100015964@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for AwardsCardView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10007FA6C(a1, a2, v8, a3);
}

uint64_t sub_1000159EC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10007E2D8(0, (unint64_t *)&qword_100955C20);
  sub_100015BBC(&qword_10094F2E0, (unint64_t *)&qword_100955C20);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1001E9B7C(&v9, v6, (unint64_t *)&qword_100955C20, (uint64_t)CNContact_ptr, &qword_10094F2E8);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1001E9B7C(&v9, v8, (unint64_t *)&qword_100955C20, (uint64_t)CNContact_ptr, &qword_10094F2E8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100015BBC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10007E2D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100015C00()
{
  sub_100016094(319, (unint64_t *)&qword_100951050, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_1000E24B8();
    if (v1 <= 0x3F)
    {
      sub_100016094(319, &qword_100968738, (uint64_t (*)(uint64_t))type metadata accessor for CHFriendsSetupPhase, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100015DA4()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100016040(319, (unint64_t *)&qword_100951050, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F)
    {
      sub_100016040(319, &qword_1009595E0, (void (*)(uint64_t))&type metadata accessor for IntroSheet);
      if (v2 <= 0x3F)
      {
        sub_100016040(319, &qword_1009595E8, (void (*)(uint64_t))&type metadata accessor for WhatsNewSheet);
        if (v3 <= 0x3F)
        {
          sub_100016040(319, &qword_1009595F0, (void (*)(uint64_t))&type metadata accessor for ContentAvailability);
          if (v4 <= 0x3F)
          {
            sub_100016040(319, &qword_1009595F8, (void (*)(uint64_t))&type metadata accessor for NoticePrivacyPreference);
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100016040(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100016094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1000160F8()
{
  unint64_t result = qword_10094C6F0;
  if (!qword_10094C6F0)
  {
    sub_1000A1370(&qword_10094C6F8);
    sub_1000A1370(&qword_10094C700);
    sub_1000A132C(&qword_10094C708, &qword_10094C700);
    sub_1000818CC();
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_10094C710);
    sub_1000A132C(&qword_10094C718, &qword_10094C710);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C6F0);
  }
  return result;
}

uint64_t sub_100016240()
{
  uint64_t v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_1000A132C(&qword_10095F7C8, &qword_10095F7A8);
  unint64_t v2 = (void *)swift_task_alloc();
  v0[47] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1000E5A30;
  uint64_t v3 = v0[24];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

void sub_10001633C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v112 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v113 = (char *)&v91 - v7;
  __chkstk_darwin(v6);
  uint64_t v119 = (char *)&v91 - v8;
  uint64_t v122 = type metadata accessor for ImpressionMetrics();
  uint64_t v114 = *(void *)(v122 - 8);
  uint64_t v9 = __chkstk_darwin(v122);
  uint64_t v111 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v116 = (char *)&v91 - v11;
  uint64_t v124 = type metadata accessor for IndexPath();
  uint64_t v121 = *(void *)(v124 - 8);
  uint64_t v12 = __chkstk_darwin(v124);
  uint64_t v115 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v123 = (char *)&v91 - v14;
  uint64_t v15 = sub_1000AFA94(&qword_1009556D0);
  __chkstk_darwin(v15 - 8);
  v117 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  unint64_t v120 = *(void (***)(void, void))(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v25 = (void *)Strong,
        int v26 = (char *)*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context),
        v25,
        id v27 = *(id *)&v26[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider],
        v26,
        id v28 = [v27 name],
        v27,
        v28))
  {
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v118 = (void (*)(void, void, void))static OS_dispatch_queue.main.getter();
    v130 = sub_1004D8FC4;
    uint64_t v131 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    Swift::Int v129 = &unk_1008CC400;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000B7550((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v30 = v118;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    ((void (**)(char *, uint64_t))v120)[1](v23, v21);
  }
  swift_beginAccess();
  uint64_t v31 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  uint64_t v32 = v124;
  if (v31)
  {
    int v33 = v31[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility];

    if (v33 == 2)
    {
      swift_beginAccess();
      uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v34)
      {
        uint64_t v35 = v34;
        id v36 = [v34 collectionView];

        unint64_t v120 = (void (**)(void, void))v36;
        if (v36)
        {
          swift_beginAccess();
          uint64_t v37 = swift_unknownObjectWeakLoadStrong();
          if (v37)
          {
            uint64_t v38 = (void *)v37;
            uint64_t v39 = *(void *)(v37 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker);
            swift_retain();

            unint64_t v40 = (uint64_t *)(v39 + 40);
            swift_beginAccess();
            *(void *)(v39 + 40) = _swiftEmptyDictionarySingleton;
            swift_bridgeObjectRelease();
            uint64_t v103 = v39;
            sub_10001C250();
            ImpressionsCalculator.removeAllElements()();
            swift_release();
            id v41 = [v120 indexPathsForVisibleItems];
            uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v43 = *(void *)(v42 + 16);
            uint64_t v101 = v42;
            if (v43)
            {
              char v97 = v40;
              uint64_t v44 = v121 + 16;
              uint64_t v118 = *(void (**)(void, void, void))(v121 + 16);
              unint64_t v45 = v42
                  + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
              uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56);
              uint64_t v107 = *(void *)(v121 + 72);
              uint64_t v108 = (unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
              uint64_t v106 = (void (**)(char *, char *, uint64_t))(v121 + 32);
              unint64_t v105 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
              uint64_t v102 = (void (**)(char *, uint64_t, uint64_t))(v114 + 32);
              uint64_t v96 = (void (**)(char *, char *, uint64_t))(v114 + 16);
              uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56);
              uint64_t v110 = (void (**)(uint64_t, uint64_t))(v121 + 8);
              uint64_t v100 = (void (**)(char *, uint64_t))(v114 + 8);
              swift_bridgeObjectRetain();
              v109 = v46;
              unint64_t v95 = (unint64_t)v46 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
              uint64_t v47 = (uint64_t)v119;
              uint64_t v48 = v117;
              long long v49 = v123;
              uint64_t v121 = v44;
              while (1)
              {
                v118(v48, v45, v32);
                long long v50 = *v109;
                (*v109)(v48, 0, 1, v32);
                if ((*v108)(v48, 1, v32) == 1) {
                  goto LABEL_35;
                }
                (*v106)(v49, v48, v32);
                v51.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
                uint64_t v52 = v122;
                Class isa = v51.super.isa;
                id v54 = [v120 cellForItemAtIndexPath:v51.super.isa];

                if (v54) {
                  break;
                }
LABEL_15:
                long long v49 = v123;
                (*v110)((uint64_t)v123, v32);
                v45 += v107;
                if (!--v43)
                {
                  v50(v48, 1, 1, v32);
                  goto LABEL_35;
                }
              }
              type metadata accessor for ActivityDashboardCardCell();
              uint64_t v55 = swift_dynamicCastClass();
              if (v55)
              {
                uint64_t v56 = v55 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card;
                swift_beginAccess();
                sub_1000AEF2C(v56, (uint64_t)aBlock, &qword_10094CEF0);
                if (v129)
                {
                  sub_10008E75C((uint64_t)aBlock, (uint64_t)&v125);
                  sub_10008DB18((uint64_t)aBlock, &qword_10094CEF0);
                  uint64_t v57 = v126;
                  uint64_t v58 = v127;
                  sub_10007E4EC(&v125, v126);
                  uint64_t v59 = IndexPath.item.getter();
                  uint64_t v47 = (uint64_t)v119;
                  (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v58 + 64))(0, 0, v59, v57, v58);
                  uint64_t v60 = v122;
                  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v125);
                  uint64_t v61 = *v105;
                  if ((*v105)(v47, 1, v60) != 1)
                  {
                    unint64_t v62 = v116;
                    uint64_t v99 = *v102;
                    v99(v116, v47, v60);
                    uint64_t v63 = v60;
                    uint64_t v64 = v123;
                    Class v65 = IndexPath._bridgeToObjectiveC()().super.isa;
                    id v66 = [v120 layoutAttributesForItemAtIndexPath:v65];

                    if (v66)
                    {
                      id v98 = v66;
                      [v66 frame];
                      uint64_t v67 = v64;
                      uint64_t v68 = v124;
                      v118(v115, v67, v124);
                      uint64_t v69 = (uint64_t)v113;
                      (*v96)(v113, v62, v63);
                      uint64_t v70 = *v104;
                      (*v104)(v69, 0, 1, v63);
                      uint64_t v71 = v97;
                      swift_beginAccess();
                      if (v61(v69, 1, v63) == 1)
                      {
                        sub_10008DB18(v69, (uint64_t *)&unk_10095F740);
                        swift_bridgeObjectRetain();
                        uint64_t v72 = v115;
                        unint64_t v93 = sub_100529B44(v115);
                        char v74 = v73;
                        swift_bridgeObjectRelease();
                        uint64_t v75 = v110;
                        uint64_t v94 = (unint64_t)v110 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
                        if (v74)
                        {
                          uint64_t v92 = v70;
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          uint64_t v77 = *v71;
                          uint64_t v125 = *v71;
                          *uint64_t v71 = 0x8000000000000000;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          {
                            sub_1004F2D88();
                            uint64_t v77 = v125;
                          }
                          int64_t v78 = v93;
                          unint64_t v79 = *(void *)(v77 + 48) + v93 * v107;
                          uint64_t v91 = *v75;
                          uint64_t v32 = v124;
                          v91(v79, v124);
                          uint64_t v80 = v125;
                          uint64_t v81 = v112;
                          uint64_t v82 = v122;
                          v99(v112, *(void *)(v125 + 56) + *(void *)(v114 + 72) * v78, v122);
                          sub_1005DCBB8(v78, v80);
                          *uint64_t v71 = v80;
                          uint64_t v83 = (uint64_t)v81;
                          swift_bridgeObjectRelease();
                          v92((uint64_t)v81, 0, 1, v82);
                          v91(v115, v32);
                        }
                        else
                        {
                          uint64_t v83 = (uint64_t)v112;
                          v70((uint64_t)v112, 1, 1, v122);
                          uint64_t v32 = v124;
                          (*v75)(v72, v124);
                        }
                        sub_10008DB18(v83, (uint64_t *)&unk_10095F740);
                        uint64_t v47 = (uint64_t)v119;
                        uint64_t v86 = v122;
                      }
                      else
                      {
                        uint64_t v84 = v111;
                        v99(v111, v69, v63);
                        char v85 = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v125 = *v71;
                        *uint64_t v71 = 0x8000000000000000;
                        uint64_t v86 = v63;
                        uint64_t v87 = (uint64_t)v84;
                        uint64_t v88 = v115;
                        sub_1004EFB94(v87, v115, v85);
                        *uint64_t v71 = v125;
                        swift_bridgeObjectRelease();
                        (*v110)(v88, v68);
                        uint64_t v47 = (uint64_t)v119;
                        uint64_t v32 = v68;
                      }
                      swift_endAccess();
                      sub_10001C250();
                      char v89 = v116;
                      ImpressionsCalculator.addElement(_:at:)();

                      swift_release();
                      (*v100)(v89, v86);
                    }
                    else
                    {
                      (*v100)(v62, v63);
                      uint64_t v47 = (uint64_t)v119;
                      uint64_t v32 = v124;
                    }
                    uint64_t v48 = v117;
                    goto LABEL_14;
                  }
                }
                else
                {
                  sub_10008DB18((uint64_t)aBlock, &qword_10094CEF0);
                  (*v104)(v47, 1, 1, v52);
                }
                sub_10008DB18(v47, (uint64_t *)&unk_10095F740);
                uint64_t v32 = v124;
              }
LABEL_14:

              goto LABEL_15;
            }
            uint64_t v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56);
            swift_bridgeObjectRetain();
            v90(v117, 1, 1, v32);
LABEL_35:
            swift_bridgeObjectRelease_n();
            swift_release();
          }
        }
      }
    }
  }
}

uint64_t sub_1000172E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v7 = type metadata accessor for AccountFitnessSettingsChanged();
  v5[7] = v7;
  v5[8] = *(void *)(v7 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Calendar();
  v5[13] = v9;
  v5[14] = *(void *)(v9 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v5[16] = v10;
  void *v10 = v5;
  v10[1] = sub_1000EB6DC;
  v10[3] = a4;
  v10[4] = *a4;
  return _swift_task_switch(sub_100028F1C, 0, 0);
}

void sub_1000174CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR___CHHistoryDataProvider_mindfulnessSessionDataProvider);

    [v2 startMindfulnessSessionQueryIfNeeded];
  }
}

uint64_t sub_100017544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CatalogTipCardView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_1000AFA94(&qword_100960038);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002C01C(v1, v16);
  sub_1000E9C60(v1, (uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for CatalogTipCardView);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1000E920C((uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  sub_1000AFA94(&qword_100969F68);
  sub_1000E0A88();
  View.onTapGesture(count:perform:)();
  swift_release();
  memcpy(v17, v16, 0x20BuLL);
  sub_1000E09AC((uint64_t)v17);
  uint64_t v12 = static Alignment.center.getter();
  double v14 = sub_1000E0C44(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v12, v13);
  return (*(uint64_t (**)(unsigned char *, uint64_t, double))(v7 + 8))(v9, v6, v14);
}

void sub_1000177A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1000177EC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1000A1750(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1000179E0()
{
  unint64_t result = qword_100968F08;
  if (!qword_100968F08)
  {
    sub_1000A1370(&qword_100968F10);
    type metadata accessor for TrendsStack();
    sub_1000A1370(&qword_100953238);
    sub_10000F604(&qword_100968F18, (void (*)(uint64_t))type metadata accessor for TrendsStack);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100968F20, &qword_100968F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968F08);
  }
  return result;
}

uint64_t sub_100017B30()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000A132C(&qword_10095CBD0, &qword_10095CBC8);
  uint64_t v5 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsHighlightStateCancellable) = v5;
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100017C50(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_52;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = _swiftEmptyArrayStorage;
      uint64_t v7 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v4)
        {
          unint64_t v9 = v6[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_50;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          sub_1000AFA94(&qword_100960020);
          uint64_t v12 = (void *)swift_allocObject();
          int64_t v13 = j__malloc_size(v12);
          uint64_t v14 = v13 - 32;
          if (v13 < 32) {
            uint64_t v14 = v13 - 17;
          }
          uint64_t v15 = v14 >> 4;
          v12[2] = v11;
          v12[3] = 2 * (v14 >> 4);
          unint64_t v16 = (unint64_t)(v12 + 4);
          uint64_t v17 = v6[3] >> 1;
          if (v6[2])
          {
            if (v12 != v6 || v16 >= (unint64_t)&v6[2 * v17 + 4]) {
              memmove(v12 + 4, v6 + 4, 16 * v17);
            }
            v6[2] = 0;
          }
          uint64_t v7 = (void *)(v16 + 16 * v17);
          uint64_t v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          uint64_t v6 = v12;
        }
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          break;
        }
        *uint64_t v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5) {
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_53;
      }
    }
    uint64_t v4 = 0;
    uint64_t v20 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    char v21 = &_swiftEmptyArrayStorage[4];
    do
    {
      uint64_t v22 = *(void **)(a1 + 8 * v20 + 32);
      if (v4)
      {
        id v23 = v22;
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          goto LABEL_49;
        }
      }
      else
      {
        unint64_t v24 = v6[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_51;
        }
        int64_t v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1) {
          uint64_t v26 = 1;
        }
        else {
          uint64_t v26 = v25;
        }
        sub_1000AFA94(&qword_100960020);
        id v27 = (void *)swift_allocObject();
        int64_t v28 = j__malloc_size(v27);
        uint64_t v29 = v28 - 32;
        if (v28 < 32) {
          uint64_t v29 = v28 - 17;
        }
        uint64_t v30 = v29 >> 4;
        long long v27[2] = v26;
        v27[3] = 2 * (v29 >> 4);
        uint64_t v31 = v27 + 4;
        uint64_t v32 = v6[3] >> 1;
        char v21 = &v27[2 * v32 + 4];
        uint64_t v33 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        if (v6[2])
        {
          if (v27 != v6 || v31 >= &v6[2 * v32 + 4]) {
            memmove(v31, v6 + 4, 16 * v32);
          }
          id v35 = v22;
          v6[2] = 0;
        }
        else
        {
          id v36 = v22;
        }
        swift_release();
        uint64_t v6 = v27;
        BOOL v19 = __OFSUB__(v33, 1);
        uint64_t v4 = v33 - 1;
        if (v19) {
          goto LABEL_49;
        }
      }
      *char v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_53:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  unint64_t v37 = v6[3];
  if (v37 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v38 = v37 >> 1;
  BOOL v19 = __OFSUB__(v38, v4);
  uint64_t v39 = v38 - v4;
  if (!v19)
  {
    v6[2] = v39;
    return (uint64_t)v6;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_100017F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a7;
  v8[23] = a8;
  v8[20] = a5;
  v8[21] = a6;
  v8[19] = a4;
  uint64_t v9 = type metadata accessor for Logger();
  v8[24] = v9;
  v8[25] = *(void *)(v9 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[29] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[30] = v11;
  v8[31] = v10;
  return _swift_task_switch(sub_100033650, v11, v10);
}

uint64_t sub_100018038(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  swift_release();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

void sub_1000182F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000183B8()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_100058A1C((uint64_t)v3);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100958B70;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000185F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100018678()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.title2(_:), v7);
  uint64_t v11 = enum case for Font.Design.rounded(_:);
  uint64_t v12 = type metadata accessor for Font.Design();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v6, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  static Font.system(_:design:weight:)();
  sub_1000AAAA4((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v14 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100998318 = v14;
  return result;
}

uint64_t sub_100018934()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.Weight.medium.getter();
  uint64_t v7 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  static Font.system(size:weight:design:)();
  sub_1000AAAA4((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v8 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100997900 = v8;
  return result;
}

id sub_100018AEC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQueryRetryInterval] = 0x3FC3333333333333;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQuery] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyCalculationRetryInterval] = 0x3FC3333333333333;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyQuery] = 0;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_watchSourcePredicate;
  uint64_t v4 = self;
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 _predicateForObjectsFromAppleWatches];
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore] = a1;
  id v6 = a1;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for ActivityQueryExecutor();
  return [super init];
}

uint64_t sub_100018C7C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

void sub_100018CDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) & 1) == 0)
  {
    static os_log_type_t.default.getter();
    id v13 = HKLogActivity;
    goto LABEL_5;
  }
  uint64_t v12 = v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastWatchCloudKitAccountFetchTimestamp;
  swift_beginAccess();
  sub_100005D34(v12, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10095B890);
    static os_log_type_t.default.getter();
    id v13 = HKLogActivity;
LABEL_5:
    os_log(_:dso:log:_:_:)();

LABEL_6:
    sub_10002142C();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v15 = v14;
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v17 = (void *)HKLogActivity;
  os_log_type_t v18 = v16;
  if (os_log_type_enabled(HKLogActivity, v16))
  {
    BOOL v19 = v17;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134217984;
    double v22 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v18, "Application active, time since last fetch of watch cloudKit status: %f", v20, 0xCu);
    swift_slowDealloc();
  }
  char v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v9, v5);
  v21(v11, v5);
  if (v15 > 3600.0) {
    goto LABEL_6;
  }
}

uint64_t sub_100019144(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000191E8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 32) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100024638, v2, v1);
}

uint64_t sub_10001927C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(unsigned char *)(v0 + 97) = *(unsigned char *)(v0 + 96);
  return _swift_task_switch(sub_1000078BC, 0, 0);
}

uint64_t sub_100019340(uint64_t a1)
{
  return a1;
}

uint64_t sub_100019380()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000194CC()
{
  uint64_t v1 = v0[45];
  v0[48] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_1000A132C(&qword_10095F7C8, &qword_10095F7A8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[49] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000E57F0;
  uint64_t v3 = v0[24];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1000195C8()
{
  uint64_t v1 = v0[3];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v0[5] = v0[2];
  return _swift_task_switch(sub_1000E4714, v1, 0);
}

uint64_t sub_100019688()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v9 = v0[7];
  Date.init()();
  char v12 = ServiceSubscription.isSubscribed(date:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(v12 & 1);
}

uint64_t sub_1000197B0()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    sub_1002F1A20((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
  }
  uint64_t v0 = (void *)sub_100030D20();
  unint64_t v1 = sub_10002E954();
  sub_1000DF454(v1, v0);
  uint64_t v3 = (uint64_t)sub_1000DDF78(v2);
  swift_bridgeObjectRelease();
  if (v3 < 0) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = ((unint64_t)v3 >> 62) & 1;
  }
  if (v4 != 1)
  {
    if (*(uint64_t *)(v3 + 16) >= 50) {
      int64_t v5 = 50;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  int64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (v5 >= 50) {
    int64_t v5 = 50;
  }
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (v17 < 0)
  {
LABEL_38:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v11 < v5)
  {
    __break(1u);
    goto LABEL_35;
  }
LABEL_9:
  if ((v3 & 0xC000000000000001) != 0 && v5)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100955C20);
    Swift::Int v6 = 0;
    do
    {
      Swift::Int v7 = v6 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v6);
      Swift::Int v6 = v7;
    }
    while (v5 != v7);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v4 = v9;
    uint64_t v11 = v10;
    int64_t v5 = v12;
    swift_release_n();
    uint64_t v3 = v8;
    if (v5)
    {
LABEL_18:
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      double v14 = (void *)swift_dynamicCastClass();
      if (!v14)
      {
        swift_unknownObjectRelease();
        double v14 = _swiftEmptyArrayStorage;
      }
      uint64_t v15 = v14[2];
      swift_release();
      if (!__OFSUB__((unint64_t)v5 >> 1, v11))
      {
        if (v15 == ((unint64_t)v5 >> 1) - v11)
        {
          uint64_t v13 = (void *)swift_dynamicCastClass();
          if (!v13)
          {
            swift_unknownObjectRelease();
            uint64_t v13 = _swiftEmptyArrayStorage;
          }
          goto LABEL_24;
        }
        goto LABEL_36;
      }
LABEL_35:
      __break(1u);
LABEL_36:
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v4 = v3 + 32;
    int64_t v5 = (2 * v5) | 1;
    if (v5) {
      goto LABEL_18;
    }
  }
  uint64_t v13 = sub_10036A014(v3, v4, v11, v5);
LABEL_24:
  swift_unknownObjectRelease();
  sub_100030898((unint64_t)v13);

  return swift_release();
}

uint64_t sub_100019A34()
{
  unint64_t v1 = (void *)v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = 0;
  id v2 = v1;
  static Published.subscript.setter();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100019B7C()
{
  id v0 = [self _preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline weight:UIFontWeightSemibold];
  if (v0)
  {
    id v1 = [self fontWithDescriptor:v0 size:0.0];
  }
  else
  {
    id v1 = [objc_allocWithZone((Class)UIFont) init];
  }
  qword_100998198 = (uint64_t)v1;
}

void sub_100019C28(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[*a2] = 1;
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_10005E658();
  }
}

unint64_t sub_100019CB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FC58);
  id v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    int64_t v12 = (void *)(v2[7] + 16 * result);
    *int64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100019F04(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a2)
  {
    static os_log_type_t.error.getter();
    uint64_t v4 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1007509E0;
    id v6 = v4;
    sub_1000AFA94(&qword_10094C908);
    uint64_t v7 = Optional.description.getter();
    uint64_t v9 = v8;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_1000AA64C();
    *(void *)(v5 + 32) = v7;
    *(void *)(v5 + 40) = v9;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      int64_t v12 = (void *)Strong;
      *(void *)(Strong + OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedActivitySharingCount) = a4;
      uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v13)
      {
        [v13 aggregator:v12 didUpdateActivitySharingBadgeCount:a4];
        swift_unknownObjectRelease();
      }
      sub_1000736F0(0, 0);
    }
  }
  sub_10002828C();
}

void sub_10001A080()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    sub_100073E98();
  }
}

uint64_t sub_10001A134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = (void (*)(uint64_t (*)(uint64_t), void *))Promise.operation.getter();
  char v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a4;
  v10[5] = a5;
  swift_retain();
  swift_retain();
  v9(sub_1000E2A58, v10);
  swift_release();

  return swift_release();
}

uint64_t sub_10001A200()
{
  id v1 = [*(id *)(v0 + 88) currentItem];
  id v2 = v1;
  if (v1)
  {
    *(void *)(v0 + 120) = [v1 asset];

    sub_1000AFA94(&qword_10094FDA8);
    uint64_t v3 = static AVPartialAsyncProperty<A>.duration.getter();
    *(void *)(v0 + 128) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10000E7CC;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 64, v3);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10001A348()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 16);
  static Log.default.getter();
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  v6._countAndFlagsBits = 0xD000000000000059;
  v6._object = (void *)0x80000001007BEBD0;
  v5._object = (void *)0x80000001007D2BC0;
  Logger.trace(file:function:)(v6, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v1, v3);
  uint64_t v8 = v4 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator;
  *(void *)(v0 + 88) = *(void *)(v4 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
  uint64_t v9 = *(void *)(v8 + 8);
  *(void *)(v0 + 96) = v9;
  if (v9 < 0)
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 64);
    swift_retain();
    static Log.default.getter();
    v15._countAndFlagsBits = 0xD000000000000016;
    v16._countAndFlagsBits = 0xD00000000000006FLL;
    v16._object = (void *)0x80000001007CF090;
    v15._object = (void *)0x80000001007CF100;
    Logger.trace(file:function:)(v16, v15);
    v7(v13, v14);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1000EA780;
    uint64_t v18 = *(void *)(v0 + 24);
    return AppCoordinator.activate(with:)(v18);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 56);
    sub_10003D5A8(*(void **)(v0 + 32), v10);
    uint64_t v11 = swift_task_alloc();
    *(void *)(v0 + 120) = v11;
    *(void *)(v11 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/App/FitnessAppContext.swift";
    *(void *)(v11 + 24) = 89;
    *(unsigned char *)(v11 + 32) = 2;
    *(void *)(v11 + 40) = 197;
    *(void *)(v11 + 48) = v10;
    int64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v12;
    *int64_t v12 = v0;
    v12[1] = sub_1000EA63C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
}

void sub_10001A5D4(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t *)(a3 + 16);
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v11 = (uint64_t *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      if (v10 < 1)
      {
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(a1 + 8 * v12 + 32);
        }
        uint64_t v14 = v13;
        ++v12;
        v24[0] = v13;
        sub_1006F7878((uint64_t *)v24, v11, a4, a5);
      }
      while (v10 != v12);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  if (!a2)
  {
LABEL_10:
    swift_beginAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    static Published.subscript.setter();
    return;
  }
  id v23 = a2;
  os_log_type_t v15 = static os_log_type_t.default.getter();
  Swift::String v16 = (void *)HKLogActivity;
  os_log_type_t v17 = v15;
  if (os_log_type_enabled(HKLogActivity, v15))
  {
    id v18 = v23;
    BOOL v19 = v16;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    char v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    v24[0] = v18;
    id v22 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v21 = a2;

    _os_log_impl((void *)&_mh_execute_header, v19, v17, "ReachableContactDataSource fetching destinations failed: %@", v20, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10001A8A0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AFA94(&qword_10094E818);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_1000AFA94(&qword_10094E820);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10001AA48()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094C530);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v5 = &v0[OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider__currentCardConfiguration];
  unint64_t v12 = _swiftEmptyArrayStorage;
  unint64_t v6 = v0;
  sub_1000AFA94(&qword_10094C4B8);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_userRemovedCardTypes] = &_swiftEmptySetSingleton;
  v6[OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_didSetToDefaultConfiguration] = 0;

  int64_t v7 = (objc_class *)type metadata accessor for SummaryConfigurationProvider();
  v11.receiver = v6;
  v11.super_class = v7;
  [super init];
  sub_100038D14();
  sub_100020B50();

  return v8;
}

void sub_10001ABA8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 scale];
  double v3 = v2;

  id v4 = [v0 mainScreen];
  [v4 nativeScale];
  double v6 = v5;

  byte_100998089 = v3 < v6;
}

void sub_10001AC4C(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  double v6 = *(void (**)(id, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  int64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a4;
  v6(v10, sub_1001A7D48, v8, a4);
  swift_release();
  swift_release();
}

uint64_t sub_10001B040(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  id v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_10007E2D8(0, &qword_100950778);
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001B114()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  type metadata accessor for TrainingLoadTrackingTip();
  sub_1000B7550(&qword_10095F6B0, (void (*)(uint64_t))type metadata accessor for TrainingLoadTrackingTip);
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_1000A132C(&qword_10095F7C0, &qword_10095F7A0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v4 = static MainActor.shared.getter();
  v0[43] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[44] = v5;
  v0[45] = v7;
  return _swift_task_switch(sub_100016240, v5, v7);
}

uint64_t sub_10001B2DC(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ActivityDashboardViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {

    }
    [v5 detachPalette];
  }
  sub_100051DB8();
  return sub_1000E91EC();
}

uint64_t sub_10001B398()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F7D0);
  sub_1000258C4(v0, qword_100998548);
  sub_1000876DC(v0, (uint64_t)qword_100998548);
  uint64_t v5 = &type metadata for FitnessFeatures;
  unint64_t v6 = sub_1000EAAD8();
  v4[0] = 4;
  char v1 = isFeatureEnabled(_:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v4);
  if (v1) {
    char v2 = FIIsTinkerVegaOrFitnessJunior() ^ 1;
  }
  else {
    char v2 = 0;
  }
  type metadata accessor for TrainingLoadTrackingTip();
  v4[0] = v2;
  sub_1000AFA94(&qword_100963D78);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t type metadata accessor for BackgroundTaskAssertion()
{
  return self;
}

void sub_10001B5A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = (void *)Strong;
    __chkstk_darwin(Strong);
    dispatch thunk of UnfairLock.acquire<A>(_:)();
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    sub_1000D3F84(1);
    sub_100075DA8();
    swift_bridgeObjectRelease();
  }
}

void sub_10001B6B4(uint64_t a1)
{
  char v2 = self;
  sub_1000CA154(a1, (uint64_t)v8);
  uint64_t v3 = swift_allocObject();
  long long v4 = v8[1];
  *(_OWORD *)(v3 + 16) = v8[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v8[2];
  *(void *)(v3 + 64) = v9;
  aBlock[4] = sub_100591214;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100066A00;
  void aBlock[3] = &unk_1008CF778;
  uint64_t v5 = _Block_copy(aBlock);
  swift_release();
  id v6 = [v2 scheduledTimerWithTimeInterval:0 repeats:v5 block:2.0];
  _Block_release(v5);
}

uint64_t sub_10001B7C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100038C60, 0, 0);
}

void sub_10001B8E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 uniqueName];
  if (v3)
  {
    long long v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_10001B948()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000183B8();
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR___CHCloudDeviceProvider_accountDeviceProvider);
  id v5 = [self defaultCenter];
  [v5 addObserver:v4 selector:"deviceListChangedWithNotification:" name:AKDeviceListChangedNotification object:0];

  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  swift_retain();
  sub_1000713D0((uint64_t)v3, (uint64_t)&unk_100959678, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10001BAB4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001BB3C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AwardsCardView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_100017C50(v6);
  swift_bridgeObjectRelease();
  v12[1] = v7;
  swift_getKeyPath();
  sub_1000809EC(a2, (uint64_t)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AwardsCardView);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  sub_100005FD8((uint64_t)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100015964;
  *(void *)(v10 + 24) = v9;
  sub_1000AFA94(&qword_10094C720);
  sub_1000AFA94(&qword_10094C6F8);
  sub_1000A132C(&qword_10094C728, &qword_10094C720);
  sub_1000DFB54();
  sub_1000160F8();
  return ForEach<>.init(_:id:content:)();
}

void *sub_10001BDAC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  id v11 = (int *)type metadata accessor for TrendsCard();
  uint64_t v12 = v11[5];
  unint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)unint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  char v20 = v13[16];
  v13[16] = v17;
  sub_1000917F8(v18, v19, v20);
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v21 = v11[9];
  id v22 = &v8[v21];
  id v23 = &v9[v21];
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = v23[8];
  *(void *)id v22 = v24;
  v22[8] = (char)v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[6];
  uint64_t v26 = (uint64_t)a1 + v25;
  id v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25 + 24);
  if (!*(void *)((char *)a1 + v25 + 24))
  {
    if (v28)
    {
      *(void *)(v26 + 24) = v28;
      *(void *)(v26 + 32) = *((void *)v27 + 4);
      (**(void (***)(uint64_t, char *))(v28 - 8))(v26, v27);
      goto LABEL_13;
    }
LABEL_12:
    long long v29 = *(_OWORD *)v27;
    long long v30 = *((_OWORD *)v27 + 1);
    *(void *)(v26 + 32) = *((void *)v27 + 4);
    *(_OWORD *)uint64_t v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    goto LABEL_13;
  }
  if (!v28)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v26, (uint64_t *)v27);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10001C028()
{
  uint64_t v1 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094C648);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094C650);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v11 = sub_1000AFA94(&qword_10094C658);
  sub_10004C708(v0, (uint64_t)&v7[*(int *)(v11 + 44)]);
  uint64_t v12 = static Alignment.center.getter();
  sub_1000E0CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v12, v13);
  sub_10008DB18((uint64_t)v7, &qword_10094C648);
  static AccessibilityChildBehavior.combine.getter();
  sub_1000E1D9C();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v10, &qword_10094C650);
}

uint64_t sub_10001C250()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ImpressionsCalculator.Configuration();
  __chkstk_darwin(v2 - 8);
  if (*(void *)(v0 + 32))
  {
    uint64_t v3 = *(void *)(v0 + 32);
  }
  else
  {
    type metadata accessor for ImpressionsCalculator();
    static ImpressionsCalculator.Configuration.half.getter();
    swift_unknownObjectRetain();
    uint64_t v3 = ImpressionsCalculator.__allocating_init(configuration:tracker:)();
    *(void *)(v1 + 32) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_10001C330(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100955580 + dword_100955580);
  return v6(a1, v4);
}

uint64_t sub_10001C3E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  uint64_t v28 = *(void *)(a1 + 224);
  uint64_t v29 = *(void *)(a1 + 216);
  uint64_t v26 = *(void *)(a1 + 240);
  uint64_t v27 = *(void *)(a1 + 232);
  uint64_t v24 = *(void *)(a1 + 256);
  uint64_t v25 = *(void *)(a1 + 248);
  uint64_t v22 = *(void *)(a1 + 272);
  uint64_t v23 = *(void *)(a1 + 264);
  long long v20 = *(_OWORD *)(a1 + 296);
  long long v21 = *(_OWORD *)(a1 + 280);
  long long v18 = *(_OWORD *)(a1 + 328);
  long long v19 = *(_OWORD *)(a1 + 312);
  long long v16 = *(_OWORD *)(a1 + 360);
  long long v17 = *(_OWORD *)(a1 + 344);
  long long v14 = *(_OWORD *)(a1 + 392);
  long long v15 = *(_OWORD *)(a1 + 376);
  long long v12 = *(_OWORD *)(a1 + 424);
  long long v13 = *(_OWORD *)(a1 + 408);
  long long v10 = *(_OWORD *)(a1 + 456);
  long long v11 = *(_OWORD *)(a1 + 440);
  long long v8 = *(_OWORD *)(a1 + 488);
  long long v9 = *(_OWORD *)(a1 + 472);
  long long v6 = *(_OWORD *)(a1 + 520);
  long long v7 = *(_OWORD *)(a1 + 504);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A06C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1000E0508(v29, v28, v27, v26, v25, v24, v23, v22, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6);
  return a1;
}

uint64_t sub_10001C6C8()
{
  v1[3] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955730);
  v1[10] = v4;
  v1[11] = *(void *)(v4 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ServiceSubscription();
  v1[13] = v5;
  v1[14] = *(void *)(v5 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ServiceSubscriptionRequest();
  v1[16] = v6;
  v1[17] = *(void *)(v6 - 8);
  v1[18] = swift_task_alloc();
  return _swift_task_switch(sub_1000142C4, 0, 0);
}

uint64_t sub_10001C8FC()
{
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[32];
  sub_1000B0528(v0[13] + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip, v1, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  sub_1000B7550(&qword_10095F6B8, (void (*)(uint64_t))type metadata accessor for CustomizeSummaryTip);
  Tip.shouldDisplayUpdates.getter();
  sub_1000C98F0(v1, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
  AsyncMapSequence.base.getter();
  sub_1000A132C(&qword_10095F7C0, &qword_10095F7A0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v5 = static MainActor.shared.getter();
  v0[45] = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v0[46] = v6;
  v0[47] = v8;
  return _swift_task_switch(sub_1000194CC, v6, v8);
}

uint64_t sub_10001CAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_10095D148);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095D150);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v11 - 8);
  long long v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000AEF2C(a1, (uint64_t)v10, &qword_10095D150);
  sub_1000AEF2C(a2, (uint64_t)v7, &qword_10095D148);
  uint64_t v14 = *(void *)(v2 + 24);
  swift_retain();
  sub_10004256C((uint64_t)v10, (uint64_t)v7, v14, v13);
  uint64_t v15 = v2 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  swift_beginAccess();
  sub_1000E9440((uint64_t)v13, v15);
  uint64_t result = swift_endAccess();
  long long v17 = *(void (**)(uint64_t))(v2 + 32);
  if (v17)
  {
    uint64_t v18 = swift_retain();
    v17(v18);
    return sub_10005E5F8((uint64_t)v17);
  }
  return result;
}

uint64_t sub_10001CCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1000AFA94(&qword_10094B7A0);
  v4[3] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[11] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10000CE64;
  return sub_10001C6C8();
}

id sub_10001CF58(char *a1)
{
  uint64_t v2 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_amsBag];
  uint64_t v3 = OBJC_IVAR___CHFitnessAppContext_eventHub;
  uint64_t v4 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_navigator];
  uint64_t v5 = (objc_class *)type metadata accessor for SeymourNotificationResponseCoordinator();
  long long v9 = *(_OWORD *)&a1[v3];
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag] = v2;
  *(_OWORD *)&v6[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub] = v9;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator] = v4;
  v10.receiver = v6;
  v10.super_class = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v7 = [super init];

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

uint64_t sub_10001D054()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  sub_1000258C4(v3, qword_100997628);
  sub_1000876DC(v3, (uint64_t)qword_100997628);
  id v4 = [self hk_gregorianCalendarWithUTCTimeZone];
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  Locale.init(identifier:)();
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
  return Calendar.locale.setter();
}

uint64_t sub_10001D180(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1000465D0;
  return v6(a1);
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for FitnessAppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t sub_10001D2E8(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_100967240);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_1000E7A14();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v11 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v10 = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10001D518()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
  *(void *)(v0 + 56) = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
  if (*(unsigned char *)(v1 + v2) & 1) != 0 || ([*(id *)(v0 + 40) hasAnyFriendsSetup]) {
    goto LABEL_5;
  }
  uint64_t v3 = (uint64_t (*)())[self sharedBehavior];
  if (!v3)
  {
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v6 = v3;
  unint64_t v7 = (unint64_t)[v3 fitnessMode];

  if ((v7 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
LABEL_5:
    *(void *)(v0 + 72) = type metadata accessor for MainActor();
    *(void *)(v0 + 80) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v9;
    char v11 = sub_10001927C;
  }
  else
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 64) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    char v11 = sub_10069BF20;
  }
  uint64_t v3 = v11;
  uint64_t v4 = v8;
  uint64_t v5 = v10;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10001D830()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 64) + 16))(*(void *)(v0 + 72), (uint64_t)Strong + OBJC_IVAR___CHInvitationDestinationCoordinator_secureCloudClient, *(void *)(v0 + 56));

    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10000F64C;
    return SecureCloudClient.activate()();
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_10001D95C()
{
  uint64_t v1 = v0[6];
  swift_release();
  uint64_t v2 = sub_100022358();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  v0[5] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10001DA70()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1000AEEC8((uint64_t)v5, (uint64_t)v6, &qword_100955A00);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_10008DB18((uint64_t)v6, &qword_100955A00);
  }
  return 0;
}

uint64_t sub_10001DD64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = a1 + v14;
  long long v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  swift_bridgeObjectRetain();
  return a1;
}

void sub_10001DE4C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    sub_10008A680(0x2Cu);
  }
}

void sub_10001DEA4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    sub_10008A680(0x29u);
  }
}

uint64_t sub_10001DEFC()
{
  NSString v1 = *(void **)(v0 + 184);
  swift_release();
  id v2 = *(void **)(v0 + 120);

  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v3 = *(void **)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 144);
    [v2 size];
    uint64_t v6 = v5 + *(int *)(v4 + 56);
    char v7 = *(unsigned char *)(v6 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)v6;
    *(unsigned char *)(v0 + 96) = v7;
    *(void *)(v0 + 104) = v8;
    *(void *)(v0 + 120) = v9;
    *(void *)(v0 + 128) = v10;
    *(unsigned char *)(v0 + 136) = 0;
    sub_1000AFA94(&qword_100950380);
    State.wrappedValue.setter();
    id v11 = v2;
    uint64_t v12 = Image.init(uiImage:)();
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v5 + *(int *)(v4 + 60));
    *(void *)(v0 + 120) = v12;
    sub_1000AFA94(&qword_100950388);
    State.wrappedValue.setter();
  }
  else
  {
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10001E024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100960088);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100960090);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100962E90);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  long long v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProgressView<>.init<>()();
  uint64_t v17 = *(void *)(v1 + 48);
  LOBYTE(v27[0]) = *(unsigned char *)(v1 + 40);
  *((void *)&v27[0] + 1) = v17;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  if (v29) {
    double v18 = 0.0;
  }
  else {
    double v18 = 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  *(double *)&v9[*(int *)(v7 + 44)] = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v19 = static Alignment.center.getter();
  sub_1000E0F68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, INFINITY, 0, v19, v20);
  sub_10008DB18((uint64_t)v9, &qword_100960088);
  sub_1000CA154(v1, (uint64_t)v27);
  uint64_t v21 = swift_allocObject();
  long long v22 = v27[1];
  *(_OWORD *)(v21 + 16) = v27[0];
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = v27[2];
  *(void *)(v21 + 64) = v28;
  sub_1000E1BC4((uint64_t)v12, (uint64_t)v16);
  uint64_t v23 = (void (**)())&v16[*(int *)(v14 + 44)];
  *uint64_t v23 = sub_1000E6B60;
  v23[1] = (void (*)())v21;
  v23[2] = 0;
  v23[3] = 0;
  sub_10008DB18((uint64_t)v12, &qword_100960090);
  return sub_1000E192C((uint64_t)v16, v26);
}

uint64_t sub_10001E340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v24 = sub_1000AFA94(&qword_100968F00);
  __chkstk_darwin(v24);
  uint64_t v23 = (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100968F70);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100968F78);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100968EE8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for TrendsCardView(0);
  uint64_t v14 = a1 + v13[5];
  uint64_t v15 = type metadata accessor for TrendsCard();
  uint64_t v16 = v14 + *(int *)(v15 + 36);
  int v17 = *(unsigned __int8 *)(v16 + 8);
  if ((v17 - 1) >= 2)
  {
    uint64_t v23 = v10;
    if (v17)
    {
      swift_storeEnumTagMultiPayload();
      sub_10001BAB4(&qword_100968EE0, &qword_100968EE8, (void (*)(void))sub_1000E8DD0, (void (*)(void))sub_1000E0B70);
      return _ConditionalContent<>.init(storage:)();
    }
    else
    {
      uint64_t v21 = v15;
      sub_1000AEF2C(a1 + v13[6], (uint64_t)v26, &qword_10094C750);
      _OWORD v27[3] = v21;
      v27[4] = (uint64_t)&off_1008D1370;
      long long v22 = sub_1000B1710(v27);
      sub_1000EA4B0(v14, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TrendsCard);
      v27[5] = *(void *)(a1 + v13[8]);
      sub_100030478((uint64_t)v26, (uint64_t)v9);
      swift_storeEnumTagMultiPayload();
      sub_1000E8DD0();
      sub_1000E0B70();
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C((uint64_t)v12, (uint64_t)v6, &qword_100968EE8);
      swift_storeEnumTagMultiPayload();
      sub_10001BAB4(&qword_100968EE0, &qword_100968EE8, (void (*)(void))sub_1000E8DD0, (void (*)(void))sub_1000E0B70);
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18((uint64_t)v12, &qword_100968EE8);
      return sub_1000E8D7C((uint64_t)v26);
    }
  }
  else
  {
    uint64_t v18 = *(void *)v16;
    swift_bridgeObjectRetain();
    uint64_t v19 = v23;
    sub_1006BB124(a1, v14, v18, v23);
    swift_bridgeObjectRelease();
    sub_1000AEF2C(v19, (uint64_t)v9, &qword_100968F00);
    swift_storeEnumTagMultiPayload();
    sub_1000E8DD0();
    sub_1000E0B70();
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C((uint64_t)v12, (uint64_t)v6, &qword_100968EE8);
    swift_storeEnumTagMultiPayload();
    sub_10001BAB4(&qword_100968EE0, &qword_100968EE8, (void (*)(void))sub_1000E8DD0, (void (*)(void))sub_1000E0B70);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v12, &qword_100968EE8);
    return sub_10008DB18(v19, &qword_100968F00);
  }
}

id sub_10001E7E0(char *a1, void *a2)
{
  sub_10008E75C((uint64_t)&a1[OBJC_IVAR___CHFitnessAppContext_contentAvailabilityClient], (uint64_t)v10);
  uint64_t v4 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider];
  uint64_t v6 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_eventHub];
  uint64_t v5 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_eventHub + 8];
  sub_10008E75C((uint64_t)&a1[OBJC_IVAR___CHFitnessAppContext_privacyPreferenceClient], (uint64_t)v9);
  objc_allocWithZone((Class)type metadata accessor for FitnessAppBadgeAggregator());
  swift_retain();
  swift_unknownObjectRetain();
  id v7 = sub_10002EBF0(a2, (uint64_t)v10, v4, v6, v5, (uint64_t)v9);

  swift_release();
  swift_unknownObjectRelease();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

uint64_t assignWithCopy for FitnessPlusCardDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000908B0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000904DC(v6, v7, v8);
  return a1;
}

void *sub_10001E94C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94(&qword_10094F2B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000DECA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001EA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a68)
  {
    sub_1000A06C0(a4, a5, a6 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000A06C0(a38, a39, a40 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1006F0FE4(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19 & 1);
    sub_1000A06C0(a23, a24, a25 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000A06C0(a50, a51, a52 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001EC00(uint64_t *a1)
{
  uint64_t v2 = sub_1000AFA94(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10001ECA4()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v2 + v1[10], v3);
  uint64_t v5 = v2 + v1[11];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10001EE38(uint64_t *a1)
{
  uint64_t v2 = sub_1000AFA94(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_10001EEC4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedEngagementBadges;
  *(void *)(v1 + OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedEngagementBadges) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong aggregator:v1 didUpdateEngagmentBadgeCount:*(void *)(*(void *)(v1 + v2) + 16)];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1000736F0(sub_1000EA99C, v4);
  return swift_release_n();
}

void *sub_10001EF90(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v6 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int64_t v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  uint64_t v12 = (void *)((v10 + 8 + v7) & ~v10);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v14 = v13(v11, 1, v8);
  int v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (v15)
    {
      int v16 = *(_DWORD *)(v9 + 84);
      size_t v17 = *(void *)(v9 + 64);
LABEL_6:
      if (v16) {
        size_t v18 = v17;
      }
      else {
        size_t v18 = v17 + 1;
      }
      memcpy(v11, v12, v18);
      goto LABEL_12;
    }
    (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  else
  {
    if (v15)
    {
      (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
      int v16 = *(_DWORD *)(v9 + 84);
      size_t v17 = *(void *)(v9 + 64);
      goto LABEL_6;
    }
    (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v11, v12, v8);
  }
LABEL_12:
  uint64_t v19 = *(void *)(v9 + 64) + ((v10 + 16) & ~v10);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v19;
  }
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 24))(((unint64_t)a1 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), ((unint64_t)a2 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

void sub_10001F3AC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a6;
  if (!v11)
  {
    uint64_t v27 = v10;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v13 = [v9 countByEnumeratingWithState:&v32 objects:v38 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v33;
      do
      {
        for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v33 != v15) {
            objc_enumerationMutation(v9);
          }
          size_t v17 = *(void **)(*((void *)&v32 + 1) + 8 * i);
          size_t v18 = [v17 sourceRevision];
          uint64_t v19 = [v18 productType];
          id v20 = [v19 containsString:@"Watch"];

          [v17 _setIsWatchWorkout:v20];
        }
        id v14 = [v9 countByEnumeratingWithState:&v32 objects:v38 count:16];
      }
      while (v14);
    }
    uint64_t v21 = (id *)(a1 + 32);
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v23 = WeakRetained;
    id v11 = 0;
    id v10 = v27;
    if (!WeakRetained) {
      goto LABEL_22;
    }
    if (WeakRetained[172])
    {
      id v24 = objc_loadWeakRetained(v21);
      [v24 _handleInitialResults:v9];

      *((unsigned char *)v23 + 172) = 0;
LABEL_15:
      *((unsigned char *)v23 + 185) = 0;
LABEL_22:

      goto LABEL_23;
    }
    if ([v27 count])
    {
      id v25 = objc_loadWeakRetained(v21);
      [v25 _handleRemovedObjects:v27];

      if (![v9 count]) {
        goto LABEL_21;
      }
    }
    else if (![v9 count])
    {
      goto LABEL_15;
    }
    os_unfair_lock_lock((os_unfair_lock_t)v23 + 42);
    [*((id *)v23 + 2) insertSamples:v9];
    os_unfair_lock_unlock((os_unfair_lock_t)v23 + 42);
LABEL_21:
    [v23 _recreateFilterObjects];
    objc_initWeak(&location, *((id *)v23 + 25));
    uint64_t v26 = *((void *)v23 + 19);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_100158930;
    v28[3] = &unk_1008ADC28;
    v28[4] = v23;
    objc_copyWeak(&v29, v21);
    objc_copyWeak(&v30, &location);
    dispatch_async(v26, v28);
    objc_destroyWeak(&v30);
    objc_destroyWeak(&v29);
    objc_destroyWeak(&location);
    goto LABEL_22;
  }
  _HKInitializeLogging();
  uint64_t v12 = HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
    sub_10071D12C((uint64_t)v11, v12);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001588DC;
  block[3] = &unk_1008AD518;
  v37[1] = *(id *)(a1 + 40);
  objc_copyWeak(v37, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(v37);
LABEL_23:
}

uint64_t sub_10001F708(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain_n();
  id v7 = a3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_1000DE358(v6);
  }
  uint64_t v8 = *(void *)(v6 + 16);
  v11[0] = v6 + 32;
  v11[1] = v8;
  swift_bridgeObjectRetain();
  id v9 = v7;
  sub_1000246F8(v11, a2, v9);
  swift_bridgeObjectRelease();

  *a1 = v6;
  return swift_bridgeObjectRelease_n();
}

void sub_10001F7DC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR___CHHistoryDataProvider_allMindfulnessSessions) = a2;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v5 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    v5[OBJC_IVAR___CHHistoryDataProvider_hasInitialMindfulnessSessions] = 1;
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    id v7 = (void *)v6;
    sub_10005E658();
  }
}

double sub_10001F8B8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 nativeBounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v15.origin.x = v3;
  v15.origin.y = v5;
  v15.size.width = v7;
  v15.size.height = v9;
  double Width = CGRectGetWidth(v15);
  id v11 = [v0 mainScreen];
  [v11 nativeScale];
  double v13 = v12;

  double result = Width / v13;
  *(double *)&qword_100998080 = Width / v13;
  return result;
}

void sub_10001F984()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  CGFloat v3 = (uint64_t *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    CGFloat v5 = (char *)Strong;
    double v6 = *(char **)(*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                  + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
    CGFloat v7 = *(os_unfair_lock_s **)&v6[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState];
    uint64_t v8 = (uint64_t)&v7[4];
    CGFloat v9 = v7 + 7;
    id v10 = v6;
    os_unfair_lock_lock(v9);
    sub_1000E64BC(v8, (uint64_t)&v19);
    os_unfair_lock_unlock(v9);
    unint64_t v11 = v19;
    LOBYTE(v8) = v20;

    if (v8)
    {
      static os_log_type_t.default.getter();
      id v12 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      double v13 = &v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      *(void *)double v13 = 1;
      v13[8] = 1;
    }
    else
    {
      id v14 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
      *CGFloat v3 = v14;
      (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
      id v15 = v14;
      LOBYTE(v14) = _dispatchPreconditionTest(_:)();
      (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
      if ((v14 & 1) == 0)
      {
        __break(1u);
        return;
      }
      int v16 = &v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      int v17 = v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state + 8];
      sub_100070C4C(v11);
      if (v17 == 1)
      {
        sub_100061560(v11);
        sub_10004E8F0();
      }
      *(void *)int v16 = v11;
      v16[8] = 0;
    }
  }
}

void sub_10001FBE0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Class v65 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for DispatchTime();
  uint64_t v62 = *(void *)(v71 - 8);
  uint64_t v5 = __chkstk_darwin(v71);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v54 - v7;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v69 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v54 - v18;
  char v20 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_observer];
  uint64_t v70 = v15;
  if (v20)
  {
    id v21 = v20;
    static WOLog.trainingLoad.getter();
    id v22 = v21;
    id v23 = Logger.logObject.getter();
    LODWORD(v59) = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, (os_log_type_t)v59))
    {
      os_log_t v56 = v23;
      uint64_t v57 = v14;
      uint64_t v58 = v2;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      aBlock[0] = v55;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v25 = _typeName(_:qualified:)();
      uint64_t v72 = (void *)sub_10008F1F4(v25, v26, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      id v27 = [v22 activationUUID];
      if (v27)
      {
        uint64_t v28 = v27;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v29 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v11, 0, 1, v29);
      }
      else
      {
        uint64_t v30 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
      }
      sub_1000AEEC8((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_1009555F0);
      uint64_t v31 = Optional.description.getter();
      unint64_t v33 = v32;
      sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_1009555F0);
      uint64_t v72 = (void *)sub_10008F1F4(v31, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      os_log_t v34 = v56;
      _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v59, "%s Clearing Old HKWorkoutEffortRelationshipQuery with activation uuid %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v14 = v57;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v57);
      uint64_t v2 = v58;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    }
    [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_healthStore] stopQuery:v22];
  }
  uint64_t v35 = v2;
  swift_getKeyPath();
  aBlock[0] = (uint64_t)v1;
  sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v36 = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery;
  uint64_t v37 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery];
  swift_getKeyPath();
  aBlock[0] = (uint64_t)v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v37 >= *(void *)&v1[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__maxRepeatCountOfEffortRelationshipQueryBeforeDelaying])
  {
    unint64_t v38 = v69;
    static WOLog.trainingLoad.getter();
    uint64_t v39 = v1;
    unint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v59 = v39;
      uint64_t v43 = v42;
      os_log_t v56 = (os_log_t)swift_slowAlloc();
      aBlock[0] = (uint64_t)v56;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v44 = _typeName(_:qualified:)();
      uint64_t v58 = v35;
      uint64_t v57 = v14;
      uint64_t v72 = (void *)sub_10008F1F4(v44, v45, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2048;
      swift_getKeyPath();
      uint64_t v72 = v59;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v46 = *(void **)&v1[v36];

      uint64_t v72 = v46;
      uint64_t v35 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s Delaying Retrying Effort relationship query. Retry count %ld ", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v39 = v59;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v57);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v14);
    }
    swift_getKeyPath();
    aBlock[0] = (uint64_t)v39;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((unsigned __int128)(*(uint64_t *)&v1[v36] * (__int128)10) >> 64 == (10 * *(void *)&v1[v36]) >> 63)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v47 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v48 = v60;
      static DispatchTime.now()();
      long long v49 = v61;
      + infix(_:_:)();
      uint64_t v70 = *(void *)(v62 + 8);
      ((void (*)(char *, uint64_t))v70)(v48, v71);
      uint64_t v50 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = (uint64_t)sub_100221244;
      aBlock[5] = v50;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100070394;
      void aBlock[3] = (uint64_t)&unk_1008BC4C8;
      NSIndexPath v51 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v52 = v63;
      static DispatchQoS.unspecified.getter();
      uint64_t v72 = _swiftEmptyArrayStorage;
      sub_1000858A8((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      uint64_t v53 = v65;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v51);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v35);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v66);
      ((void (*)(char *, uint64_t))v70)(v49, v71);
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1000521D4();
  }
}

uint64_t sub_1000206B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  *(void *)(a1 + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(a1 + OBJC_IVAR___CHHistoryDataProvider_stackHistoryItems) = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR___CHHistoryDataProvider_historyFilterValues) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1000208C8(v8);
  return swift_bridgeObjectRelease();
}

void sub_1000207C0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR___CHHistoryDataProvider_mindfulnessSessionDataProvider);

    aBlock[4] = sub_1000E87CC;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007CA4;
    void aBlock[3] = &unk_1008CB4D0;
    uint64_t v6 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v5 allMindfulnessSessionsWithCompletion:v6];
    _Block_release(v6);
  }
}

uint64_t sub_1000208C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v10 = (uint64_t *)(v2 + OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers);
    uint64_t result = swift_beginAccess();
    uint64_t v11 = *v10;
    uint64_t v12 = *(void *)(*v10 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = v11 + 40;
      do
      {
        uint64_t v14 = *(void (**)(uint64_t *))(v13 - 8);
        uint64_t v15 = a1;
        swift_retain();
        v14(&v15);
        swift_release();
        v13 += 16;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100020A64(void *a1)
{
  return sub_100020A98(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100020A6C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100020A98(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

unint64_t sub_100020AC4(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    uint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100020B50()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  id v2 = [self standardUserDefaults];
  id v3 = [v2 dataForKey:@"ActivityDashboardUserRemovedCardTypes"];

  if (!v3)
  {
    swift_release();
    return;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  sub_1000AFA94(&qword_10094C538);
  sub_100198538(&qword_10094C540, &qword_10094C538, (void (*)(void))sub_100059218);
  unint64_t v32 = v6;
  uint64_t v33 = v4;
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v31 = v36[0];
  os_log_type_t v7 = static os_log_type_t.default.getter();
  char v8 = (void *)HKLogActivity;
  os_log_type_t v9 = v7;
  if (os_log_type_enabled(HKLogActivity, v7))
  {
    log = v8;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = _typeName(_:qualified:)();
    *(void *)&long long v34 = sub_10008F1F4(v12, v13, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v9, "%s Loading userRemovedCardTypes:", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_userRemovedCardTypes);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = *v14 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(*v14 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(*v14 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v21++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v20) {
      goto LABEL_33;
    }
    unint64_t v27 = *(void *)(v16 + 8 * v21);
    if (!v27) {
      break;
    }
LABEL_28:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_12:
    uint64_t v24 = *(void *)(v15 + 48) + 24 * v23;
    char v25 = *(unsigned char *)(v24 + 16);
    long long v34 = *(_OWORD *)v24;
    char v35 = v25;
    sub_10019506C((uint64_t)&v34);
  }
  int64_t v28 = v21 + 1;
  if (v21 + 1 >= v20) {
    goto LABEL_33;
  }
  unint64_t v27 = *(void *)(v16 + 8 * v28);
  if (v27) {
    goto LABEL_27;
  }
  int64_t v28 = v21 + 2;
  if (v21 + 2 >= v20) {
    goto LABEL_33;
  }
  unint64_t v27 = *(void *)(v16 + 8 * v28);
  if (v27) {
    goto LABEL_27;
  }
  int64_t v28 = v21 + 3;
  if (v21 + 3 >= v20) {
    goto LABEL_33;
  }
  unint64_t v27 = *(void *)(v16 + 8 * v28);
  if (v27) {
    goto LABEL_27;
  }
  int64_t v28 = v21 + 4;
  if (v21 + 4 >= v20) {
    goto LABEL_33;
  }
  unint64_t v27 = *(void *)(v16 + 8 * v28);
  if (v27) {
    goto LABEL_27;
  }
  int64_t v28 = v21 + 5;
  if (v21 + 5 >= v20)
  {
LABEL_33:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1001EF8E4(v31);
    swift_bridgeObjectRelease();
    *uint64_t v14 = v29;
    swift_bridgeObjectRelease();
    sub_1000939A4(v33, v32);
    swift_release();
    return;
  }
  unint64_t v27 = *(void *)(v16 + 8 * v28);
  if (v27)
  {
LABEL_27:
    int64_t v21 = v28;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v21 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v21 >= v20) {
      goto LABEL_33;
    }
    unint64_t v27 = *(void *)(v16 + 8 * v21);
    ++v28;
    if (v27) {
      goto LABEL_28;
    }
  }
LABEL_35:
  __break(1u);
}

void sub_100020FB0(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 67109120;
    v15[3] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FitnessAppBadgeAggregator: updateAmeliaBadge, hasBadge: %{BOOL}d", v14, 8u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(unsigned char *)(v4 + OBJC_IVAR___CHFitnessAppBadgeAggregator_hasAmeliaBadge) = a1 & 1;
  sub_1000736F0(a2, a3);
}

uint64_t sub_100021154(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v3[20] = swift_getObjectType();
  uint64_t v4 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  v3[21] = v4;
  v3[22] = *(void *)(v4 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v3[25] = v5;
  v3[26] = *(void *)(v5 - 8);
  v3[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  v3[28] = v6;
  v3[29] = *(void *)(v6 - 8);
  v3[30] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[31] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000511C4, v8, v7);
}

uint64_t sub_100021354()
{
  return sub_10002137C(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_10002137C(uint64_t *a1, uint64_t a2, unsigned __int8 a3, Swift::UInt a4, char a5)
{
  uint64_t v9 = a2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache;
  swift_beginAccess();
  if (*(void *)(*(void *)v9 + 16) && (sub_1000C9334(a3, a4, a5 & 1), (v10 & 1) != 0)) {
    uint64_t v11 = swift_retain();
  }
  else {
    uint64_t v11 = 0;
  }
  *a1 = v11;
  return swift_release();
}

void sub_10002142C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountFetchInProgress;
  char v2 = v0[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountFetchInProgress];
  static os_log_type_t.default.getter();
  id v7 = HKLogActivity;
  if (v2)
  {
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    os_log(_:dso:log:_:_:)();

    v0[v1] = 1;
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_nanoSystemSettingsManager];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    aBlock[4] = sub_10069EE08;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10069D788;
    void aBlock[3] = &unk_1008D5620;
    uint64_t v5 = _Block_copy(aBlock);
    uint64_t v6 = v0;
    swift_release();
    [v3 getAccountsInfo:v5];
    _Block_release(v5);
  }
}

void sub_1000215BC(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&aBlock[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || a3)
  {
    os_log_type_t v19 = static os_log_type_t.default.getter();
    int64_t v20 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v19))
    {
      swift_errorRetain();
      swift_errorRetain();
      int64_t v21 = v20;
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      unint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 138412290;
      if (a3)
      {
        swift_errorRetain();
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        aBlock[0] = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v24 = 0;
      }
      *unint64_t v23 = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v19, "Failed to fetch phone account info with error: %@", v22, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = a1 & 1;
    *(void *)(v17 + 24) = a4;
    aBlock[4] = sub_1000E706C;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008D57D8;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_1000219D4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000E8F3C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008C7850;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10008AA94((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_100021E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100021EA8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  *(_WORD *)(v5 + 64) = 0;
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  *(_OWORD *)(v5 + 16) = v15;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = a5;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  sub_10002946C();
  swift_retain();
  [v12 addObserver:v5];
  swift_release();
  swift_release();

  return v5;
}

id sub_100021F9C(double a1)
{
  id v2 = [objc_allocWithZone((Class)UIView) init];
  id v3 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashVideoView());
  uint64_t v4 = (char *)sub_10003FDF0();
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v5 window];

    id v7 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player];
    if (v7)
    {
      uint64_t v8 = &selRef_pause;
      if (v6) {
        uint64_t v8 = &selRef_play;
      }
      [v7 *v8];
    }
    double v9 = a1 + -15.0 + -15.0;
    if (qword_10094AE00 != -1) {
      swift_once();
    }
    UIRoundToScale();
    [v5 setFrame:((v9 + -160.0) * 0.5, 0.0, 160.0, v10)];
    [v2 addSubview:v5];
  }
  return v2;
}

void sub_100022108()
{
  uint64_t v0 = type metadata accessor for BadgingCountsUpdated();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v9 = (void *)Strong;
    if ((*(unsigned char *)(Strong + OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour) & 1) == 0)
    {
      static Log.default.getter();
      v10._countAndFlagsBits = 0xD000000000000065;
      v10._object = (void *)0x80000001007B9E10;
      v11._object = (void *)0x80000001007B9E80;
      v11._countAndFlagsBits = 0xD000000000000013;
      Logger.trace(file:function:)(v10, v11);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1000DE218(v12);
      swift_bridgeObjectRelease();
      BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)();
      swift_getObjectType();
      dispatch thunk of EventHubProtocol.publish<A>(_:)();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

void *sub_100022358()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_100950728);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for GregorianDayRange();
  uint64_t v6 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DayIndex();
  uint64_t v9 = *(void *)(v31 - 8);
  uint64_t v10 = __chkstk_darwin(v31);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  long long v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  unint64_t v27 = (char *)&v26 - v16;
  swift_getKeyPath();
  uint64_t v29 = v0 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
  uint64_t v36 = v0;
  uint64_t v28 = sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v17 = v0 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange;
  swift_beginAccess();
  uint64_t v18 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v30);
  GregorianDayRange.dayIndexRange.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  os_log_type_t v19 = &v5[*(int *)(v3 + 44)];
  uint64_t v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v19, v31);
  sub_10008DB18((uint64_t)v5, &qword_100950728);
  DayIndex.init(integerLiteral:)();
  int64_t v21 = v27;
  static DayIndex.- infix(_:_:)();
  unint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v20);
  v22(v15, v20);
  swift_getKeyPath();
  uint64_t v35 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange);
  uint64_t v33 = v21;
  uint64_t v34 = v1;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1000DF7B0((uint64_t (*)(long long *))sub_100221004, (uint64_t)v32, v23);
  v22(v21, v20);
  return v24;
}

uint64_t sub_100022704()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v4;
  swift_release();
  sub_1000693DC((uint64_t)v2, (uint64_t)&unk_1009507A8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10002287C()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v4;
  swift_release();
  sub_1000693DC((uint64_t)v2, (uint64_t)&unk_100950798, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1000229F4(id *a1, int *a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7((char *)a1 + a2[7], v5);
  uint64_t v8 = (char *)a1 + a2[8];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100022B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_100022BA0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100022C14(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = v4;
  *(unsigned char *)(v5 + 129) = a4;
  *(unsigned char *)(v5 + 128) = a2;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 80) = swift_getObjectType();
  sub_1000AFA94(&qword_10094B7A0);
  *(void *)(v5 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_100068D00, 0, 0);
}

uint64_t sub_100022E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v46 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_10094F3C8);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  uint64_t v4 = *(void *)(v39 + 64);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v38 = (char *)&v35 - v6;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  os_log_type_t v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Artwork();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v45 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100960970);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2;
  uint64_t v20 = v2 + OBJC_IVAR____TtC10FitnessApp21TipArtworkImageLoader__image;
  v47[0] = 0;
  sub_1000AFA94(&qword_100950278);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v20, v18, v15);
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_1000E363C(v46, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_release();
    sub_1000233B0(v46);
    sub_1000233B0((uint64_t)v11);
  }
  else
  {
    uint64_t v35 = v12;
    uint64_t v36 = v13;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v45, v11, v12);
    sub_10007E4EC(v47, v47[3]);
    int64_t v21 = v38;
    dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1006F2DEC;
    *(void *)(v22 + 24) = v2;
    uint64_t v23 = v2;
    uint64_t v25 = v39;
    uint64_t v24 = v40;
    uint64_t v26 = v37;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v37, v21, v40);
    unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v28 + v27, v26, v24);
    uint64_t v29 = (uint64_t (**)(void **))(v28 + ((v4 + v27 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v29 = sub_100495B48;
    v29[1] = (uint64_t (*)(void **))v22;
    swift_retain();
    uint64_t v30 = v41;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
    uint64_t v31 = v43;
    unint64_t v32 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    v32(sub_10006D8B4, v33);
    swift_release();
    swift_release();
    swift_release();
    sub_1000233B0(v46);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v35);
    uint64_t v19 = v23;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v47);
  return v19;
}

uint64_t sub_1000233B0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009512E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ActivityDayHistogram()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_10002345C(char a1, char a2, char a3, char a4)
{
  uint64_t v8 = self;
  unsigned int v9 = [v8 isRunningInStoreDemoMode];
  id v10 = [v8 sharedApplication];
  unsigned int v11 = [v10 launchedToTest];

  id v12 = [self standardUserDefaults];
  NSString v13 = String._bridgeToObjectiveC()();
  unsigned int v14 = [v12 BOOLForKey:v13];

  uint64_t v15 = 0x1000000000000;
  if (!v11) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = 0x10000000000;
  if (!v9) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = &_mh_execute_header;
  if (!v14) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 0x1000000;
  if ((a4 & 1) == 0) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = 0x10000;
  if ((a3 & 1) == 0) {
    uint64_t v19 = 0;
  }
  uint64_t v20 = 256;
  if ((a2 & 1) == 0) {
    uint64_t v20 = 0;
  }
  return v20 & 0xFFFFFFFFFFFFFFFELL | a1 & 1 | v19 | v18 | v16 | v15 | (unint64_t)v17;
}

uint64_t sub_1000235BC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v27 - v9;
  uint64_t v11 = v2 + *(int *)(type metadata accessor for ActivityRingsCardView() + 24);
  uint64_t v12 = type metadata accessor for ActivityRingsCard();
  NSString v13 = *(void **)(v11 + *(int *)(v12 + 36));
  if (v13)
  {
    unsigned int v14 = *(void **)(v11 + *(int *)(v12 + 44));
    if (v14)
    {
      if (a1)
      {
        if (a1 != 1)
        {
          id v23 = v13;
          id v24 = v14;
          id v17 = [v23 appleStandHours];
          id v22 = [v23 appleStandHoursGoal];
          if (qword_10094AE20 != -1) {
            swift_once();
          }
          sub_100265548(v17, v22, qword_100998318, (uint64_t)v10);
          goto LABEL_20;
        }
        id v15 = v13;
        id v16 = v14;
        id v17 = [v15 appleExerciseTime];
        id v18 = [v15 appleExerciseTimeGoal];
      }
      else
      {
        id v20 = v13;
        id v21 = v14;
        if ([v20 activityMoveMode] != (id)2)
        {
          id v17 = [v20 activeEnergyBurned];
          id v22 = [v20 activeEnergyBurnedGoal];
          if (qword_10094AE20 != -1) {
            swift_once();
          }
          sub_100045F18(v17, v22, v21, qword_100998318, 0, (uint64_t)v10);
          goto LABEL_20;
        }
        id v17 = [v20 appleMoveTime];
        id v18 = [v20 appleMoveTimeGoal];
      }
      id v22 = v18;
      if (qword_10094AE20 != -1) {
        swift_once();
      }
      sub_10026509C(v17, v22, qword_100998318, 0, (uint64_t)v10);
LABEL_20:

      sub_1000AEF2C((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_10095BFD0);
      uint64_t v25 = type metadata accessor for AttributedString();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v25) == 1)
      {
        AttributedString.init()();

        sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095BFD0);
        return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095BFD0);
      }
      else
      {
        sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095BFD0);

        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(a2, v8, v25);
      }
    }
  }

  return AttributedString.init()();
}

float sub_1000239CC@<S0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for ActivityRingsCardView();
  uint64_t v42 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v43 = v5;
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ActivityRingsCard();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + v4[6];
  unsigned int v14 = *(void **)(v13 + v7[9]);
  uint64_t v15 = v1 + v4[5];
  char v16 = *(unsigned char *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  uint64_t v18 = *(void *)(v15 + 16);
  char v46 = v16;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  id v40 = v14;
  sub_1000AFA94(&qword_1009603F0);
  State.wrappedValue.getter();
  if (v49)
  {
    if (v49 == 1) {
      double v19 = (v50 + -15.0 + -15.0) / 3.0;
    }
    else {
      double v19 = 80.0;
    }
  }
  else
  {
    double v19 = (v50 + -15.0 + -15.0) * 0.5 + -24.0;
  }
  int v20 = *(unsigned __int8 *)(v13 + v7[12]);
  uint64_t v44 = v6;
  unint64_t v45 = v14;
  if (v20 == 2)
  {
    if (!v14 || [v40 _wheelchairUse] != (id)2) {
      goto LABEL_9;
    }
  }
  else if ((v20 & 1) == 0)
  {
LABEL_9:
    int v21 = 1;
    goto LABEL_12;
  }
  int v21 = 2;
LABEL_12:
  int v41 = v21;
  sub_1000AEF2C(v13 + v7[10], (uint64_t)v12, (uint64_t *)&unk_10095B890);
  uint64_t v22 = type metadata accessor for Date();
  unsigned __int8 v23 = 1;
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22);
  sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095B890);
  sub_1000C0774(v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
  if (v24 == 1)
  {
    uint64_t v25 = *(void **)&v9[v7[9]];
    if (v25) {
      unsigned __int8 v23 = [v25 paused];
    }
    else {
      unsigned __int8 v23 = 0;
    }
  }
  sub_1000C0CEC((uint64_t)v9);
  char v26 = *(unsigned char *)(*(void *)(v2 + v4[8] + 8) + 16);
  uint64_t v27 = (uint64_t)v44;
  sub_1000C0774(v2, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ActivityRingsCardView);
  unint64_t v28 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v29 = swift_allocObject();
  sub_10003017C(v27, v29 + v28);
  uint64_t v30 = self;
  [v30 preferredActivityRingThicknessForDiameter:v19];
  double v32 = v31;
  [v30 preferredActivityRingInterspacingForDiameter:v19];
  double v34 = v33;
  uint64_t v35 = v45;
  if (v45) {
    unsigned __int8 v23 = [v40 paused];
  }
  float result = v19;
  float v37 = v32;
  *(void *)a1 = v35;
  float v38 = v34;
  *(unsigned char *)(a1 + 8) = v23;
  *(float *)(a1 + 12) = result;
  *(float *)(a1 + 16) = v37;
  *(float *)(a1 + 20) = v38;
  *(_WORD *)(a1 + 24) = 258;
  *(unsigned char *)(a1 + 26) = 0;
  *(unsigned char *)(a1 + 27) = v41;
  *(unsigned char *)(a1 + 28) = v26;
  *(void *)(a1 + 32) = sub_1000E7DEC;
  *(void *)(a1 + 40) = v29;
  return result;
}

uint64_t sub_100023DE8(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  uint64_t v4 = v1 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  uint64_t v5 = type metadata accessor for CatalogTipSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v2 + 24) = a1;
  type metadata accessor for CatalogTipDataProvider();
  swift_allocObject();
  swift_retain_n();
  *(void *)(v2 + 16) = CatalogTipDataProvider.init(dependencies:)();
  sub_1000E5650();
  swift_retain();
  swift_retain();
  dispatch thunk of CatalogTipDataProvider.delegate.setter();
  swift_release();
  swift_retain();
  dispatch thunk of CatalogTipDataProvider.activate()();
  swift_release();
  swift_release();
  return v2;
}

void sub_100023EE4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  int out_token = -1;
  uint64_t v3 = (const char *)HKStandalonePhoneFitnessModeDidUpdateNotification;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v4 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_100669250;
  aBlock[5] = v6;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10069BDE4;
  void aBlock[3] = (uint64_t)&unk_1008D4980;
  uint64_t v7 = _Block_copy(aBlock);
  swift_release();
  LODWORD(v3) = notify_register_dispatch(v3, &out_token, v4, v7);
  _Block_release(v7);

  if (v3 || (int v15 = out_token, out_token == -1))
  {
    os_log_type_t v8 = static os_log_type_t.error.getter();
    uint64_t v9 = (void *)HKLogActivity;
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(HKLogActivity, v8))
    {
      uint64_t v11 = v9;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v13 = _typeName(_:qualified:)();
      sub_10008F1F4(v13, v14, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v10, "%s failed to register for HKStandalonePhoneFitnessModeDidUpdateNotification notification", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000AFA94(&qword_10094F328);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1007509E0;
    *(_DWORD *)(v16 + 32) = v15;
    *(void *)(v1 + OBJC_IVAR___CHOnboardingCoordinator_notifyTokens) = v16;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000241B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v13;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  type metadata accessor for MainActor();
  v8[11] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100062EF0, v10, v9);
}

uint64_t sub_100024260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CatalogTipSectionItem();
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  int v15 = (int *)type metadata accessor for CatalogTipCardView();
  sub_1000E9C60(a1, (uint64_t)a3 + v15[5], (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
  sub_1000AEF2C(a2, (uint64_t)a3 + v15[6], &qword_10094C750);
  uint64_t v16 = type metadata accessor for CatalogTipCard();
  sub_1000AEF2C(a1 + *(int *)(v16 + 36), (uint64_t)v11, (uint64_t *)&unk_100955650);
  uint64_t v17 = type metadata accessor for CatalogTipSection();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v11, 1, v17) == 1)
  {
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_100955650);
    uint64_t v18 = type metadata accessor for Artwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
  }
  else
  {
    sub_1000E9C60((uint64_t)&v11[*(int *)(v17 + 36)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    sub_1000E9C00((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    double v19 = &v8[*(int *)(v6 + 20)];
    uint64_t v20 = type metadata accessor for Artwork();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v14, v19, v20);
    sub_1000E9C00((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
  }
  uint64_t v22 = *(void *)(a1 + *(int *)(v16 + 40));
  type metadata accessor for TipArtworkImageLoader();
  swift_allocObject();
  swift_retain();
  sub_100022E0C((uint64_t)v14, v22);
  unsigned __int8 v23 = (uint64_t *)((char *)a3 + v15[7]);
  sub_1000E76AC();
  uint64_t v24 = ObservedObject.init(wrappedValue:)();
  uint64_t v26 = v25;
  sub_10008DB18(a2, &qword_10094C750);
  uint64_t result = sub_1000E9C00(a1, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
  *unsigned __int8 v23 = v24;
  v23[1] = v26;
  return result;
}

uint64_t sub_100024638()
{
  uint64_t v1 = v0[3];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v0[5] = v0[2];
  return _swift_task_switch(sub_1000718F0, v1, 0);
}

void sub_1000246F8(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v203 = type metadata accessor for Locale.Language();
  uint64_t v6 = *(void *)(v203 - 8);
  uint64_t v7 = __chkstk_darwin(v203);
  v201 = (char *)&v178 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v185 = (char *)&v178 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v178 - v11;
  uint64_t v202 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v202 - 8);
  uint64_t v14 = __chkstk_darwin(v202);
  v200 = (char *)&v178 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v184 = (char *)&v178 - v17;
  __chkstk_darwin(v16);
  double v19 = (char *)&v178 - v18;
  uint64_t v20 = sub_1000AFA94(&qword_100952F38);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  v199 = (char *)&v178 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  v183 = (char *)&v178 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v178 - v25;
  v187 = a1;
  Swift::Int v27 = a1[1];
  swift_bridgeObjectRetain_n();
  unint64_t v28 = a3;
  Swift::Int v186 = _minimumMergeRunLength(_:)(v27);
  if (v186 >= v27)
  {
    if (v27 < 0) {
      goto LABEL_181;
    }
    if (v27)
    {
      swift_bridgeObjectRetain();
      unint64_t v31 = v28;
      id v32 = (id)v28;
      sub_1004BF75C(0, v27, 1, v187, a2);
      swift_bridgeObjectRelease_n();

      unint64_t v28 = v31;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_159;
  }
  if (v27 >= 0) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = v27 + 1;
  }
  if (v27 < -1) {
    goto LABEL_189;
  }
  uint64_t v204 = a2;
  Swift::Int v190 = v27;
  id v193 = (id)v28;
  if (v27 < 2)
  {
    v192 = (unsigned __int16 *)&_swiftEmptyArrayStorage[4];
    v182 = _swiftEmptyArrayStorage;
    if (v27 == 1)
    {
      v178 = v26;
      v179 = v19;
      v180 = v12;
      goto LABEL_13;
    }
    uint64_t v35 = (char *)_swiftEmptyArrayStorage;
    unint64_t v28 = _swiftEmptyArrayStorage[2];
LABEL_144:
    if (v28 >= 2)
    {
      v163 = (unsigned __int16 *)*v187;
      v205 = (unsigned __int16 *)*v187;
      do
      {
        unint64_t v164 = v28 - 2;
        if (v28 < 2) {
          goto LABEL_176;
        }
        if (!v163) {
          goto LABEL_188;
        }
        uint64_t v165 = *(void *)&v35[16 * v164 + 32];
        uint64_t v166 = *(void *)&v35[16 * v28 + 24];
        uint64_t v167 = *(void *)&v35[16 * v28 + 16];
        v207 = &v163[8 * v165];
        v206 = &v163[8 * v167];
        v168 = &v163[8 * v166];
        uint64_t v169 = v204;
        swift_bridgeObjectRetain();
        id v170 = v193;
        uint64_t v171 = v195;
        sub_1004BEF24(v207, v206, v168, v192, v169, v170);
        uint64_t v195 = v171;
        if (v171) {
          goto LABEL_156;
        }
        swift_bridgeObjectRelease();

        if (v166 < v165) {
          goto LABEL_177;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v35 = sub_1001EEF68((uint64_t)v35);
        }
        if (v164 >= *((void *)v35 + 2)) {
          goto LABEL_178;
        }
        v172 = &v35[16 * v164 + 32];
        *(void *)v172 = v165;
        *((void *)v172 + 1) = v166;
        unint64_t v173 = *((void *)v35 + 2);
        if (v28 > v173) {
          goto LABEL_179;
        }
        memmove(&v35[16 * v28 + 16], &v35[16 * v28 + 32], 16 * (v173 - v28));
        *((void *)v35 + 2) = v173 - 1;
        unint64_t v28 = v173 - 1;
        v163 = v205;
      }
      while (v173 > 2);
    }
    swift_bridgeObjectRelease();
    v182[2] = 0;
    unint64_t v28 = (unint64_t)v193;
LABEL_158:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_159:
    swift_bridgeObjectRelease();

    return;
  }
  v178 = v26;
  v179 = v19;
  v180 = v12;
  unint64_t v28 = v29 >> 1;
  uint64_t v30 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v30 + 16) = v28;
  v182 = (void *)v30;
  v192 = (unsigned __int16 *)(v30 + 32);
LABEL_13:
  double v33 = 0;
  double v34 = (unsigned __int16 *)*v187;
  v197 = (void (**)(unint64_t, uint64_t))(v6 + 8);
  v198 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v35 = (char *)_swiftEmptyArrayStorage;
  v206 = v34;
  v181 = v34 + 4;
  uint64_t v36 = v190;
LABEL_16:
  uint64_t v37 = (uint64_t)v33;
  double v33 = (unsigned __int16 *)((char *)v33 + 1);
  v188 = v35;
  if ((uint64_t)v33 >= v36) {
    goto LABEL_58;
  }
  if (!*(void *)(a2 + 16)
    || (unint64_t v28 = a2,
        float v38 = &v206[8 * v37],
        Swift::UInt v39 = *(void *)v38,
        int v40 = v38[4],
        unint64_t v41 = sub_100529EDC(*(void *)&v206[8 * (void)v33], v206[8 * (void)v33 + 4]),
        (v42 & 1) == 0)
    || !*(void *)(a2 + 16)
    || (uint64_t v43 = *(void *)(*(void *)(a2 + 56) + 8 * v41), v44 = sub_100529EDC(v39, v40), (v45 & 1) == 0))
  {
    uint64_t v54 = (unsigned __int16 *)(v37 + 2);
    if (v37 + 2 >= v190) {
      goto LABEL_57;
    }
    int v55 = 0;
    goto LABEL_25;
  }
  v207 = v33;
  uint64_t v189 = v37;
  uint64_t v46 = *(void *)(*(void *)(v28 + 56) + 8 * v44);
  uint64_t v47 = self;
  id v48 = [v47 currentLocale];
  char v49 = v179;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v50 = (unint64_t)v180;
  Locale.language.getter();
  (*v198)(v49, v202);
  uint64_t v51 = (uint64_t)v178;
  unint64_t v28 = v50;
  Locale.Language.languageCode.getter();
  (*v197)(v50, v203);
  uint64_t v52 = type metadata accessor for Locale.LanguageCode();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
  {
    sub_10008DB18(v51, &qword_100952F38);
  }
  else
  {
    Locale.LanguageCode.identifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
    unint64_t v28 = (unint64_t)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v161 = [v47 characterDirectionForLanguage:v28];

    if (v161 == (id)2)
    {
      BOOL v162 = v43 < v46;
      goto LABEL_137;
    }
  }
  BOOL v162 = v46 < v43;
LABEL_137:
  int v55 = v162;
  uint64_t v37 = v189;
  double v33 = v207;
  uint64_t v54 = (unsigned __int16 *)(v189 + 2);
  if (v189 + 2 >= v190) {
    goto LABEL_43;
  }
LABEL_25:
  uint64_t v189 = v37;
  os_log_t v56 = &v181[8 * (void)v54];
  while (1)
  {
    unint64_t v28 = v204;
    if (*(void *)(v204 + 16))
    {
      uint64_t v57 = &v206[8 * (void)v33];
      Swift::UInt v58 = *(void *)v57;
      int v59 = v57[4];
      unint64_t v60 = sub_100529EDC(*((void *)v56 - 1), *v56);
      if (v61)
      {
        if (*(void *)(v28 + 16))
        {
          uint64_t v62 = *(unsigned __int16 **)(*(void *)(v28 + 56) + 8 * v60);
          unint64_t v63 = sub_100529EDC(v58, v59);
          if (v64)
          {
            uint64_t v65 = *(void *)(*(void *)(v28 + 56) + 8 * v63);
            v207 = (unsigned __int16 *)self;
            id v66 = [v207 currentLocale];
            uint64_t v67 = v184;
            static Locale._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v68 = v185;
            Locale.language.getter();
            (*v198)(v67, v202);
            uint64_t v69 = v183;
            Locale.Language.languageCode.getter();
            unint64_t v28 = (unint64_t)v69;
            (*v197)((unint64_t)v68, v203);
            uint64_t v70 = type metadata accessor for Locale.LanguageCode();
            uint64_t v71 = *(void *)(v70 - 8);
            if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v71 + 48))(v28, 1, v70) == 1)
            {
              sub_10008DB18(v28, &qword_100952F38);
            }
            else
            {
              Locale.LanguageCode.identifier.getter();
              v205 = v62;
              (*(void (**)(unint64_t, uint64_t))(v71 + 8))(v28, v70);
              uint64_t v62 = v205;
              unint64_t v28 = (unint64_t)String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v73 = [v207 characterDirectionForLanguage:v28];

              if (v73 == (id)2)
              {
                BOOL v74 = (uint64_t)v62 < v65;
                goto LABEL_38;
              }
            }
            BOOL v74 = v65 < (uint64_t)v62;
LABEL_38:
            int v75 = v74;
            if (v55 != v75) {
              goto LABEL_42;
            }
            goto LABEL_33;
          }
        }
      }
    }
    if (v55) {
      break;
    }
LABEL_33:
    uint64_t v72 = (unsigned __int16 *)((char *)v54 + 1);
    v56 += 8;
    double v33 = v54;
    uint64_t v54 = v72;
    if ((uint64_t)v72 >= v190)
    {
      uint64_t v54 = v72;
LABEL_42:
      uint64_t v37 = v189;
LABEL_43:
      double v33 = v54;
      if (v55) {
        goto LABEL_46;
      }
LABEL_58:
      if ((uint64_t)v33 >= v190) {
        goto LABEL_85;
      }
      uint64_t v35 = v188;
      if (__OFSUB__(v33, v37)) {
        goto LABEL_180;
      }
      if ((uint64_t)v33 - v37 >= v186) {
        goto LABEL_86;
      }
      uint64_t v86 = (unsigned __int16 *)(v37 + v186);
      if (__OFADD__(v37, v186)) {
        goto LABEL_182;
      }
      if ((uint64_t)v86 >= v190) {
        uint64_t v86 = (unsigned __int16 *)v190;
      }
      unint64_t v87 = v204;
      if ((uint64_t)v86 < v37)
      {
LABEL_183:
        __break(1u);
        goto LABEL_184;
      }
      if (v33 == v86) {
        goto LABEL_86;
      }
      uint64_t v88 = &v206[8 * (void)v33];
      uint64_t v189 = v37;
      v191 = v86;
      while (2)
      {
        v194 = v88;
        v207 = v33;
        while (2)
        {
          if (*(void *)(v87 + 16))
          {
            Swift::UInt v89 = *((void *)v88 - 2);
            int v90 = *(v88 - 4);
            unint64_t v28 = v87;
            unint64_t v91 = sub_100529EDC(*(void *)v88, v88[4]);
            if (v92)
            {
              if (*(void *)(v87 + 16))
              {
                unint64_t v93 = *(unsigned __int16 **)(*(void *)(v87 + 56) + 8 * v91);
                unint64_t v28 = v87;
                unint64_t v94 = sub_100529EDC(v89, v90);
                if (v95)
                {
                  uint64_t v96 = *(void *)(*(void *)(v87 + 56) + 8 * v94);
                  v205 = (unsigned __int16 *)self;
                  id v97 = [v205 currentLocale];
                  id v98 = v200;
                  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v99 = v201;
                  Locale.language.getter();
                  (*v198)(v98, v202);
                  uint64_t v100 = v199;
                  Locale.Language.languageCode.getter();
                  unint64_t v28 = (unint64_t)v100;
                  (*v197)((unint64_t)v99, v203);
                  uint64_t v101 = type metadata accessor for Locale.LanguageCode();
                  uint64_t v102 = *(void *)(v101 - 8);
                  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v102 + 48))(v28, 1, v101) == 1)
                  {
                    sub_10008DB18(v28, &qword_100952F38);
                    goto LABEL_78;
                  }
                  Locale.LanguageCode.identifier.getter();
                  v196 = v93;
                  (*(void (**)(unint64_t, uint64_t))(v102 + 8))(v28, v101);
                  unint64_t v93 = v196;
                  unint64_t v28 = (unint64_t)String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  id v103 = [v205 characterDirectionForLanguage:v28];

                  BOOL v104 = v103 == (id)2;
                  unint64_t v87 = v204;
                  if (v104) {
                    BOOL v105 = (uint64_t)v93 < v96;
                  }
                  else {
LABEL_78:
                  }
                    BOOL v105 = v96 < (uint64_t)v93;
                  double v33 = v207;
                  if (!v105) {
                    break;
                  }
                  if (!v206) {
                    goto LABEL_185;
                  }
                  Swift::UInt v106 = *(void *)v88;
                  unsigned __int16 v107 = v88[4];
                  *(_OWORD *)uint64_t v88 = *((_OWORD *)v88 - 1);
                  *(v88 - 4) = v107;
                  *((void *)v88 - 2) = v106;
                  v88 -= 8;
                  if (v33 == (unsigned __int16 *)++v37) {
                    break;
                  }
                  continue;
                }
              }
            }
          }
          break;
        }
        double v33 = (unsigned __int16 *)((char *)v33 + 1);
        uint64_t v88 = v194 + 8;
        uint64_t v37 = v189;
        if (v33 != v191) {
          continue;
        }
        break;
      }
      double v33 = v191;
LABEL_85:
      uint64_t v35 = v188;
LABEL_86:
      if ((uint64_t)v33 < v37) {
        goto LABEL_175;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_1001EE868(0, *((void *)v35 + 2) + 1, 1, v35);
      }
      unint64_t v109 = *((void *)v35 + 2);
      unint64_t v108 = *((void *)v35 + 3);
      unint64_t v28 = v109 + 1;
      if (v109 >= v108 >> 1) {
        uint64_t v35 = sub_1001EE868((char *)(v108 > 1), v109 + 1, 1, v35);
      }
      *((void *)v35 + 2) = v28;
      uint64_t v110 = v35 + 32;
      uint64_t v111 = &v35[16 * v109 + 32];
      *(void *)uint64_t v111 = v37;
      *((void *)v111 + 1) = v33;
      if (v109)
      {
        v207 = v33;
        v191 = (unsigned __int16 *)(v35 + 32);
        while (1)
        {
          unint64_t v112 = v28 - 1;
          if (v28 >= 4)
          {
            v117 = &v110[16 * v28];
            uint64_t v118 = *((void *)v117 - 8);
            uint64_t v119 = *((void *)v117 - 7);
            BOOL v123 = __OFSUB__(v119, v118);
            uint64_t v120 = v119 - v118;
            if (v123) {
              goto LABEL_164;
            }
            uint64_t v122 = *((void *)v117 - 6);
            uint64_t v121 = *((void *)v117 - 5);
            BOOL v123 = __OFSUB__(v121, v122);
            uint64_t v115 = v121 - v122;
            char v116 = v123;
            if (v123) {
              goto LABEL_165;
            }
            unint64_t v124 = v28 - 2;
            uint64_t v125 = &v110[16 * v28 - 32];
            uint64_t v127 = *(void *)v125;
            uint64_t v126 = *((void *)v125 + 1);
            BOOL v123 = __OFSUB__(v126, v127);
            uint64_t v128 = v126 - v127;
            if (v123) {
              goto LABEL_167;
            }
            BOOL v123 = __OFADD__(v115, v128);
            uint64_t v129 = v115 + v128;
            if (v123) {
              goto LABEL_170;
            }
            if (v129 >= v120)
            {
              v147 = &v110[16 * v112];
              uint64_t v149 = *(void *)v147;
              uint64_t v148 = *((void *)v147 + 1);
              BOOL v123 = __OFSUB__(v148, v149);
              uint64_t v150 = v148 - v149;
              if (v123) {
                goto LABEL_174;
              }
              BOOL v140 = v115 < v150;
              goto LABEL_124;
            }
          }
          else
          {
            if (v28 != 3)
            {
              uint64_t v141 = *((void *)v35 + 4);
              uint64_t v142 = *((void *)v35 + 5);
              BOOL v123 = __OFSUB__(v142, v141);
              uint64_t v134 = v142 - v141;
              char v135 = v123;
              goto LABEL_118;
            }
            uint64_t v114 = *((void *)v35 + 4);
            uint64_t v113 = *((void *)v35 + 5);
            BOOL v123 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            char v116 = v123;
          }
          if (v116) {
            goto LABEL_166;
          }
          unint64_t v124 = v28 - 2;
          v130 = &v110[16 * v28 - 32];
          uint64_t v132 = *(void *)v130;
          uint64_t v131 = *((void *)v130 + 1);
          BOOL v133 = __OFSUB__(v131, v132);
          uint64_t v134 = v131 - v132;
          char v135 = v133;
          if (v133) {
            goto LABEL_169;
          }
          uint64_t v136 = &v110[16 * v112];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v123 = __OFSUB__(v137, v138);
          uint64_t v139 = v137 - v138;
          if (v123) {
            goto LABEL_172;
          }
          if (__OFADD__(v134, v139)) {
            goto LABEL_173;
          }
          if (v134 + v139 >= v115)
          {
            BOOL v140 = v115 < v139;
LABEL_124:
            if (v140) {
              unint64_t v112 = v124;
            }
            goto LABEL_126;
          }
LABEL_118:
          if (v135) {
            goto LABEL_168;
          }
          long long v143 = &v110[16 * v112];
          uint64_t v145 = *(void *)v143;
          uint64_t v144 = *((void *)v143 + 1);
          BOOL v123 = __OFSUB__(v144, v145);
          uint64_t v146 = v144 - v145;
          if (v123) {
            goto LABEL_171;
          }
          if (v146 < v134) {
            goto LABEL_15;
          }
LABEL_126:
          unint64_t v151 = v112 - 1;
          if (v112 - 1 >= v28)
          {
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
            goto LABEL_183;
          }
          if (!v206) {
            goto LABEL_186;
          }
          v152 = &v110[16 * v151];
          uint64_t v153 = *(void *)v152;
          unint64_t v154 = v112;
          v155 = &v110[16 * v112];
          uint64_t v156 = *(void *)v155;
          uint64_t v157 = *((void *)v155 + 1);
          v205 = &v206[8 * *(void *)v152];
          v196 = &v206[8 * v156];
          v194 = &v206[8 * v157];
          uint64_t v158 = v204;
          swift_bridgeObjectRetain();
          unint64_t v28 = (unint64_t)v193;
          uint64_t v159 = v195;
          sub_1004BEF24(v205, v196, v194, v192, v158, (void *)v28);
          uint64_t v195 = v159;
          if (v159)
          {
LABEL_156:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v28 = (unint64_t)v193;

            v182[2] = 0;
            goto LABEL_158;
          }
          swift_bridgeObjectRelease();

          if (v157 < v153) {
            goto LABEL_161;
          }
          if (v154 > *((void *)v35 + 2)) {
            goto LABEL_162;
          }
          *(void *)v152 = v153;
          uint64_t v110 = (char *)v191;
          *(void *)&v191[8 * v151 + 4] = v157;
          unint64_t v160 = *((void *)v35 + 2);
          if (v154 >= v160) {
            goto LABEL_163;
          }
          unint64_t v28 = v160 - 1;
          memmove(v155, v155 + 16, 16 * (v160 - 1 - v154));
          *((void *)v35 + 2) = v160 - 1;
          double v33 = v207;
          if (v160 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v28 = 1;
LABEL_15:
      uint64_t v36 = v190;
      a2 = v204;
      if ((uint64_t)v33 >= v190) {
        goto LABEL_144;
      }
      goto LABEL_16;
    }
  }
  uint64_t v37 = v189;
LABEL_46:
  if ((uint64_t)v54 >= v37)
  {
    if (v37 < (uint64_t)v54)
    {
      uint64_t v76 = 16 * (void)v54 - 16;
      uint64_t v77 = 16 * v37;
      int64_t v78 = v54;
      uint64_t v79 = v37;
      uint64_t v80 = v206;
      do
      {
        int64_t v78 = (unsigned __int16 *)((char *)v78 - 1);
        if ((unsigned __int16 *)v79 != v78)
        {
          if (!v80) {
            goto LABEL_187;
          }
          uint64_t v82 = &v80[(unint64_t)v77 / 2];
          uint64_t v83 = (unsigned __int16 *)((char *)v80 + v76);
          uint64_t v84 = *(void *)&v80[(unint64_t)v77 / 2];
          unsigned __int16 v85 = v80[(unint64_t)v77 / 2 + 4];
          if (v77 != v76 || v82 >= v83 + 8) {
            *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          }
          uint64_t v81 = (char *)v80 + v76;
          *(void *)uint64_t v81 = v84;
          *((_WORD *)v81 + 4) = v85;
        }
        ++v79;
        v76 -= 16;
        v77 += 16;
      }
      while (v79 < (uint64_t)v78);
    }
LABEL_57:
    double v33 = v54;
    goto LABEL_58;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  id v174 = v193;

  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  id v175 = v193;

  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  id v176 = v193;

  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_188:
  id v177 = v193;

  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_189:

  swift_bridgeObjectRelease_n();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000257C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10095F7D0);
  sub_1000258C4(v3, a2);
  sub_1000876DC(v3, (uint64_t)a2);
  type metadata accessor for TrainingLoadTrackingTip();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10002586C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  sub_1000258C4(v5, a2);
  sub_1000876DC(v5, (uint64_t)a2);
  return a3();
}

uint64_t *sub_1000258C4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100025928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_1000AFA94(&qword_10095F798);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_1000AFA94(&qword_10095F7A0);
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = type metadata accessor for CustomizeSummaryTip();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v7 = sub_1000AFA94(&qword_10095F7A8);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for MainActor();
  v4[20] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[21] = v9;
  v4[22] = v8;
  return _swift_task_switch(sub_1000144E4, v9, v8);
}

uint64_t sub_100025B50()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_100966890);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_1000AFA94(&qword_10095DD50);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC((void *)(v0 + OBJC_IVAR___CHFitnessAppContext_bookmarkClient), *(void *)(v0 + OBJC_IVAR___CHFitnessAppContext_bookmarkClient + 24));
  dispatch thunk of BookmarkClientProtocol.queryAllPlaylists()();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000EA5F8;
  *(void *)(v13 + 24) = v12;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v15 + v14, v5, v1);
  uint64_t v16 = (uint64_t (**)(uint64_t *))(v15 + ((v3 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = sub_10006D370;
  v16[1] = (uint64_t (*)(uint64_t *))v13;
  sub_1000AFA94((uint64_t *)&unk_1009668A0);
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  uint64_t v17 = v21;
  uint64_t v18 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  v18(sub_10006D8C0, v19);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v17);
}

uint64_t sub_100025E78()
{
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  *(_OWORD *)(v0 + 16) = v2[0];
  swift_retain();
  sub_1000AFA94(&qword_100951570);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(v2, v0 + 32);
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)(v0 + 72) = SubscriptionToken.init(eventHub:)();
  *(unsigned char *)(v0 + 80) = 2;
  return v0;
}

uint64_t sub_100025F6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = a3;
  uint64_t v11 = *(void (**)(id, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_10007E2D8(0, &qword_100950760);
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a4)
  {
    sub_10007E2D8(0, &qword_100967250);
    a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  v11(v12, v9, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100026084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100950218);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  double v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v37 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - v12;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v17._countAndFlagsBits = 0xD00000000000007BLL;
  v17._object = (void *)0x80000001007C3030;
  v18._object = (void *)0x80000001007C3150;
  v18._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v17, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_privacyPreferenceClient), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_privacyPreferenceClient + 24));
  dispatch thunk of PrivacyPreferenceClientProtocol.fetchNoticePrivacyPreference(ignoreCaches:)();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000E52F0;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v34, v8, v3);
  unint64_t v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v21, v3);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v24 = sub_1000E2B9C;
  v24[1] = (uint64_t (*)(uint64_t))v20;
  uint64_t v25 = v35;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100382890;
  *(void *)(v26 + 24) = 0;
  unint64_t v28 = v36;
  uint64_t v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v36, v25, v37);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v28, v27);
  unint64_t v31 = (void *)(v30 + ((v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v31 = sub_1001B3D88;
  v31[1] = v26;
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v25, v27);
}

uint64_t sub_100026534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100959618);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  double v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v37 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - v12;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v17._countAndFlagsBits = 0xD00000000000007BLL;
  v17._object = (void *)0x80000001007C3030;
  v18._object = (void *)0x80000001007C3100;
  v18._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v17, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_engagementClient), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_engagementClient + 24));
  dispatch thunk of EngagementClientProtocol.queryWhatsNewSheet()();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000E5330;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v34, v8, v3);
  unint64_t v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v21, v3);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v24 = sub_1000E2C50;
  v24[1] = (uint64_t (*)(uint64_t))v20;
  uint64_t v25 = v35;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1003828E0;
  *(void *)(v26 + 24) = 0;
  unint64_t v28 = v36;
  uint64_t v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v36, v25, v37);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v28, v27);
  unint64_t v31 = (uint64_t (**)(uint64_t))(v30 + ((v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v31 = sub_1001B36B8;
  v31[1] = (uint64_t (*)(uint64_t))v26;
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v25, v27);
}

id sub_1000269E0(char *a1, uint64_t a2, uint64_t a3)
{
  sub_10008E75C((uint64_t)&a1[OBJC_IVAR___CHFitnessAppContext_contentAvailabilityClient], (uint64_t)v15);
  sub_10008E75C((uint64_t)&a1[OBJC_IVAR___CHFitnessAppContext_engagementClient], (uint64_t)v14);
  sub_10008E75C((uint64_t)&a1[OBJC_IVAR___CHFitnessAppContext_privacyPreferenceClient], (uint64_t)v13);
  uint64_t v7 = *(void *)&a1[OBJC_IVAR___CHFitnessAppContext_eventHub];
  uint64_t v6 = *(const char **)&a1[OBJC_IVAR___CHFitnessAppContext_eventHub + 8];
  uint64_t v8 = self;
  swift_unknownObjectRetain();
  id v9 = [v8 standardUserDefaults];
  id v10 = objc_allocWithZone((Class)type metadata accessor for SeymourDiscoverySheetCoordinator());
  id v11 = sub_100072B38(a2, (uint64_t)v15, (uint64_t)v14, (uint64_t)v13, a3, v7, v6, v9);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v11;
}

unint64_t sub_100026B6C()
{
  unint64_t result = qword_100953138;
  if (!qword_100953138)
  {
    sub_1000A1370(&qword_100953030);
    sub_1000A1370(&qword_100953020);
    sub_1000A1370(&qword_100953080);
    sub_1000A1370(&qword_100953018);
    sub_1000A1370(&qword_100951F78);
    sub_1000A1370(&qword_100953010);
    sub_1000A1370(&qword_100953070);
    sub_1000A1370(&qword_100953008);
    sub_1000A132C(&qword_100953068, &qword_100953008);
    swift_getOpaqueTypeConformance2();
    sub_1000C29A0(&qword_100953078, &qword_100953070);
    swift_getOpaqueTypeConformance2();
    sub_1000C29A0((unint64_t *)&qword_100951F80, &qword_100951F78);
    swift_getOpaqueTypeConformance2();
    sub_1000C2E04();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953138);
  }
  return result;
}

uint64_t sub_100026DBC(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v24 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100955F38);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DF004();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.userInteractive(_:), v9);
  uint64_t v13 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1000E3908(v22, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v23;
  *(void *)(v15 + 16) = v23;
  sub_1000E3970((uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  aBlock[4] = sub_1000E67D4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008D07A8;
  Swift::String v17 = _Block_copy(aBlock);
  id v18 = v16;
  static DispatchQoS.unspecified.getter();
  unint64_t v28 = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  uint64_t v19 = v24;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  return swift_release();
}

uint64_t sub_100027194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100950088);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  double v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v37 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - v12;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v17._countAndFlagsBits = 0xD00000000000007BLL;
  v17._object = (void *)0x80000001007C3030;
  v18._object = (void *)0x80000001007C3170;
  v18._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v17, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailabilityClient), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailabilityClient + 24));
  dispatch thunk of ContentAvailabilityClientProtocol.queryContentAvailability()();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000E52B0;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v34, v8, v3);
  unint64_t v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v21, v3);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v24 = sub_1000E2C14;
  v24[1] = (uint64_t (*)(uint64_t))v20;
  uint64_t v25 = v35;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100382868;
  *(void *)(v26 + 24) = 0;
  unint64_t v28 = v36;
  uint64_t v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v36, v25, v37);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v28, v27);
  unint64_t v31 = (void *)(v30 + ((v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v31 = sub_1001B3D88;
  v31[1] = v26;
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v25, v27);
}

uint64_t sub_100027640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100959620);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  double v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v37 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - v12;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v17._countAndFlagsBits = 0xD00000000000007BLL;
  v17._object = (void *)0x80000001007C3030;
  v18._object = (void *)0x80000001007C3130;
  v18._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v17, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10007E4EC((void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_engagementClient), *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_engagementClient + 24));
  dispatch thunk of EngagementClientProtocol.queryIntroSheet()();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000E5370;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v34, v8, v3);
  unint64_t v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v21, v3);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v24 = sub_1000E2C8C;
  v24[1] = (uint64_t (*)(uint64_t))v20;
  uint64_t v25 = v35;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1003828B8;
  *(void *)(v26 + 24) = 0;
  unint64_t v28 = v36;
  uint64_t v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v36, v25, v37);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v28, v27);
  unint64_t v31 = (void *)(v30 + ((v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v31 = sub_1001B3D88;
  v31[1] = v26;
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v25, v27);
}

uint64_t sub_100027AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_100027BE8((uint64_t)v5);
}

uint64_t sub_100027BE8(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v2 - 8);
  sub_100027CE8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000AFA94(&qword_10094C6A0);
  Binding.wrappedValue.setter();
  return sub_100027C88(a1);
}

uint64_t sub_100027C88(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094C580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100027CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100027D50()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095F710);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC((void *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_avatarSettingsProvider), *(void *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_avatarSettingsProvider+ 24));
  dispatch thunk of AvatarSettingsCoordinating.fetchAvatarSettings()();
  uint64_t v4 = type metadata accessor for AvatarSettings();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10008DB18((uint64_t)v3, &qword_10095F710);
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = (void *)AvatarSettings.contact.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  dispatch thunk of AccountButton.updateContact(_:)();
}

uint64_t sub_100027EBC()
{
  return sub_100027EFC(&OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek);
}

uint64_t sub_100027EDC()
{
  return sub_100027EFC(&OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries);
}

uint64_t sub_100027EFC(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100027F40()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[16];
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v19 = v0[15];
  uint64_t v17 = v0[19];
  uint64_t v7 = type metadata accessor for OSSignposter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  Swift::String v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000AEF2C(v2, v1, &qword_10095CB70);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  sub_1000AEEC8(v1, v10 + v9, &qword_10095CB70);
  *(void *)(v10 + ((v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  v0[6] = sub_100070490;
  v0[7] = v10;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008CC4C8;
  uint64_t v11 = _Block_copy(v0 + 2);
  swift_release();
  static DispatchQoS.unspecified.getter();
  v0[12] = _swiftEmptyArrayStorage;
  sub_1000B7550((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v21);
  sub_10008DB18(v2, &qword_10095CB70);
  uint64_t v12 = static MainActor.shared.getter();
  v0[43] = v12;
  if (v12)
  {
    swift_getObjectType();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  v0[44] = v13;
  v0[45] = v15;
  return _swift_task_switch(sub_100016240, v13, v15);
}

void sub_10002828C()
{
  uint64_t v1 = OBJC_IVAR___CHBackgroundTaskAssertion_state;
  if (*(unsigned char *)(v0 + OBJC_IVAR___CHBackgroundTaskAssertion_state) == 1
    && (uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR___CHBackgroundTaskAssertion_identifier),
        (*(unsigned char *)(v0 + OBJC_IVAR___CHBackgroundTaskAssertion_identifier + 8) & 1) == 0))
  {
    uint64_t v3 = *v2;
    id v4 = [self sharedApplication];
    [v4 endBackgroundTask:v3];

    *uint64_t v2 = 0;
    *((unsigned char *)v2 + 8) = 1;
    *(unsigned char *)(v0 + v1) = 3;
  }
  else
  {
    static os_log_type_t.error.getter();
    id v5 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
}

uint64_t sub_1000283AC()
{
  uint64_t v1 = (void *)v0[11];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000DF004();
  uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  v0[6] = sub_100368CE0;
  v0[7] = v3;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10069BDE4;
  v0[5] = &unk_1008C3408;
  id v4 = _Block_copy(v0 + 2);
  id v5 = v1;
  swift_release();
  uint64_t v6 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)&v5[OBJC_IVAR____TtC10FitnessApp34ActivitySharingCloudDeviceProvider_activitySharingCloudDevicesChangedToken];
  swift_beginAccess();
  notify_register_dispatch((const char *)(v6 + 32), v7, v2, v4);
  swift_endAccess();
  _Block_release(v4);
  swift_release();

  uint64_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000E4C24;
  return sub_1000E5104();
}

uint64_t sub_100028584()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[16];
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v19 = v0[15];
  uint64_t v17 = v0[19];
  uint64_t v7 = type metadata accessor for OSSignposter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  Swift::String v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000AEF2C(v2, v1, &qword_10095CB70);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  sub_1000AEEC8(v1, v10 + v9, &qword_10095CB70);
  *(void *)(v10 + ((v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  v0[6] = sub_100070490;
  v0[7] = v10;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008CC518;
  uint64_t v11 = _Block_copy(v0 + 2);
  swift_release();
  static DispatchQoS.unspecified.getter();
  v0[12] = _swiftEmptyArrayStorage;
  sub_1000B7550((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v21);
  sub_10008DB18(v2, &qword_10095CB70);
  uint64_t v12 = static MainActor.shared.getter();
  v0[45] = v12;
  if (v12)
  {
    swift_getObjectType();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  v0[46] = v13;
  v0[47] = v15;
  return _swift_task_switch(sub_1000194CC, v13, v15);
}

uint64_t sub_100028968(int a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a4;
  *(_DWORD *)(v15 + 40) = a1;
  aBlock[4] = sub_1000EA984;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008BC248;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a3;
  swift_errorRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000677F4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_100028C70()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100028CD0()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (char *)result;
    swift_beginAccess();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004F8C20(v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_100046424(v7);
    swift_release();
    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
    *uint64_t v3 = v9;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    id v10 = v9;
    LOBYTE(v9) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v9)
    {
      __chkstk_darwin(result);
      *(void *)&v14[-16] = v5;
      uint64_t v11 = sub_100094B24((uint64_t)v8, (void (*)(long long *__return_ptr, void, uint64_t))sub_100094C7C);
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v5;
        *(void *)(v12 + 24) = v11;
        uint64_t v13 = v5;
        sub_10008A354((uint64_t)sub_1000ABEA0, v12);

        return swift_release();
      }
      else
      {

        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100028F1C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithKey:v4 ascending:0];
  v0[5] = v5;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithKey:v7 ascending:0];
  v0[6] = v8;

  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  v9[2] = v5;
  v9[3] = v8;
  v9[4] = v2;
  v9[5] = v1;
  id v10 = (void *)swift_task_alloc();
  v0[8] = v10;
  uint64_t v11 = sub_1000AFA94(&qword_100953710);
  void *v10 = v0;
  v10[1] = sub_100007E30;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000028, 0x80000001007BCEC0, sub_1000EB6C8, v9, v11);
}

uint64_t sub_1000290F4()
{
  uint64_t v1 = sub_1000AFA94(&qword_100959630);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ContentAvailability();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v16 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailablity;
  swift_beginAccess();
  sub_1000AEF2C(v11, (uint64_t)v3, &qword_100959630);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for ContentAvailability.available(_:), v4);
    sub_1000293DC(&qword_100966E40, (void (*)(uint64_t))&type metadata accessor for ContentAvailability);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v16[3] == v16[1] && v16[4] == v16[2])
    {
      swift_bridgeObjectRelease_n();
      uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
      v12(v8, v4);
      v12(v10, v4);
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  sub_10008DB18((uint64_t)v3, &qword_100959630);
  return 0;
}

uint64_t sub_1000293DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100029424()
{
  **(void **)(v0 + 16) = *(void *)(*(void *)(v0 + 24)
                                     + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_10002946C()
{
  sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
  id v1 = [(id)swift_getObjCClassFromMetadata() activityMoveModeChangeType];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    id v4 = objc_allocWithZone((Class)HKObserverQuery);
    v7[4] = sub_1000EB6D4;
    v7[5] = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    uint64_t v7[2] = sub_10001AC4C;
    v7[3] = &unk_1008BE908;
    uint64_t v5 = _Block_copy(v7);
    swift_retain();
    id v6 = [v4 initWithSampleType:v2 predicate:0 updateHandler:v5];

    _Block_release(v5);
    swift_release();
    swift_release();
    [*(id *)(v0 + 32) executeQuery:v6];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000295D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a8;
  v8[8] = v13;
  v8[5] = a6;
  v8[6] = a7;
  _OWORD v8[3] = a4;
  v8[4] = a5;
  type metadata accessor for MainActor();
  v8[9] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000CEA30, v10, v9);
}

uint64_t sub_100029678()
{
  uint64_t v13 = v0;
  id v1 = (uint64_t *)v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_release();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v2);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v1, v2);
  if (v4)
  {
    id v6 = (void *)v0[4];
    uint64_t v7 = v0[5];
    swift_getKeyPath();
    v0[2] = v7;
    sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = (void *)sub_10000C660(v6, *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter), *(_WORD *)(v7 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter + 8));
    swift_bridgeObjectRetain();
    sub_1000DFBC0(&v12);
    uint64_t v8 = v0[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = v12;
    swift_getKeyPath();
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    v0[3] = v8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000298FC()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v4 setFormattingContext:2];
  uint64_t v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v8 = [v5 dateFormatFromTemplate:v6 options:0 locale:isa];

  [v4 setDateFormat:v8];
  return v4;
}

uint64_t sub_100029B0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_errorRetain();
  id v16 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v17 = static MainActor.shared.getter();
  Swift::String v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = a4;
  v18[5] = v14;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a6;
  swift_release();
  sub_1000713D0((uint64_t)v12, (uint64_t)&unk_100950788, (uint64_t)v18);
  return swift_release();
}

unint64_t sub_100029CC0(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_100967230);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  [v7 isRunningInStoreDemoMode];
  id v8 = [v7 sharedApplication];
  [v8 launchedToTest];

  sub_10007E4EC(a1, a1[3]);
  sub_1000E7A14();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  }
  char v29 = 0;
  char v9 = KeyedDecodingContainer.decode(_:forKey:)();
  char v28 = 1;
  char v10 = KeyedDecodingContainer.decode(_:forKey:)();
  char v27 = 2;
  char v11 = KeyedDecodingContainer.decode(_:forKey:)();
  char v26 = 3;
  int v22 = KeyedDecodingContainer.decode(_:forKey:)();
  char v25 = 4;
  int v21 = KeyedDecodingContainer.decode(_:forKey:)();
  char v24 = 5;
  HIDWORD(v20) = KeyedDecodingContainer.decode(_:forKey:)();
  char v23 = 6;
  char v13 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  uint64_t v14 = 0x1000000000000;
  if ((v13 & 1) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = 0x10000000000;
  if ((v20 & 0x100000000) == 0) {
    uint64_t v15 = 0;
  }
  id v16 = &_mh_execute_header;
  if ((v21 & 1) == 0) {
    id v16 = 0;
  }
  uint64_t v17 = 0x1000000;
  if ((v22 & 1) == 0) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 0x10000;
  if ((v11 & 1) == 0) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = 256;
  if ((v10 & 1) == 0) {
    uint64_t v19 = 0;
  }
  return v19 & 0xFFFFFFFFFFFFFFFELL | v9 & 1 | v18 | v17 | (unint64_t)v16 | v15 | v14;
}

void *initializeBufferWithCopyOfBuffer for ActivitySharingHighlightDataProvider.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void sub_10002A008(uint64_t a1)
{
  sub_10002A028(a1, v1, 0x2Cu);
}

void sub_10002A028(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_10008A680(a3);
  }
}

uint64_t destroy for Histogram1D()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_10002A0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v13 = (void *)Strong;
    uint64_t v14 = *(void **)(Strong + OBJC_IVAR___CHHistoryDataProvider_queue);
    id v19 = v14;

    if (v14)
    {
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = a2;
      *(void *)(v15 + 24) = a1;
      aBlock[4] = sub_1000E87C4;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      void aBlock[3] = &unk_1008CB520;
      id v16 = _Block_copy(aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      static DispatchQoS.unspecified.getter();
      uint64_t v20 = _swiftEmptyArrayStorage;
      sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v17 = v19;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v16);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10002A3AC()
{
  swift_getObjectType();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 1);
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 2);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 3);
  char v4 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 4);
  char v5 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 5);
  char v6 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 6);
  char v14 = *(unsigned char *)(v0 + OBJC_IVAR___CHOnboardingCoordinator_criteria);
  char v15 = v1;
  char v16 = v2;
  char v17 = v3;
  char v18 = v4;
  char v19 = v5;
  char v20 = v6;
  sub_1000E7910();
  uint64_t v7 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v9 = v8;
  id v10 = [self standardUserDefaults];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v12 = String._bridgeToObjectiveC()();
  [v10 setObject:isa forKey:v12];

  sub_1000939A4(v7, v9);
  return swift_release();
}

void sub_10002A620(uint64_t a1)
{
  os_log_type_t v2 = static os_log_type_t.default.getter();
  char v3 = (void *)HKLogActivity;
  os_log_type_t v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    char v5 = v3;
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)char v6 = 136315138;
    uint64_t v7 = _typeName(_:qualified:)();
    sub_10008F1F4(v7, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v4, "%s stopping Activity goal query", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v9 = OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery;
  id v10 = *(void **)(a1 + OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery);
  if (v10)
  {
    char v11 = *(void **)(a1 + OBJC_IVAR___CHOnboardingCoordinator_healthStore);
    id v12 = v10;
    [v11 stopQuery:v12];
    char v13 = *(void **)(a1 + v9);
    *(void *)(a1 + v9) = 0;
  }
}

id sub_10002A7C0()
{
  uint64_t v1 = type metadata accessor for EventDispatchStrategy();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  os_log_type_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DF004();
  id v5 = v0;
  static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for EventDispatchStrategy.async(_:), v1);
  v12[3] = type metadata accessor for DispatchTimerProvider();
  v12[4] = (uint64_t)&protocol witness table for DispatchTimerProvider;
  sub_1000B1710(v12);
  DispatchTimerProvider.init()();
  type metadata accessor for EventHub();
  swift_allocObject();
  uint64_t v6 = EventHub.init(queue:dispatchStrategy:timerProvider:)();
  type metadata accessor for ContentAvailabilityClient();
  swift_retain();
  static OS_dispatch_queue.main.getter();
  uint64_t v7 = ContentAvailabilityClient.__allocating_init(eventHub:queue:)();

  unint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for SeymourAvailabilityManager(0));
  id v9 = sub_100040580(v7, v6, v8);
  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

void sub_10002A9BC(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = static os_log_type_t.default.getter();
  os_log_type_t v4 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v3))
  {
    swift_errorRetain();
    swift_errorRetain();
    id v5 = v4;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 8) = 2112;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v8 = 0;
    }
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v3, "Notification authorization granted: %{BOOL}d, error: %@", (uint8_t *)v6, 0x12u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void destroy for AwardEntity(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t initializeWithCopy for ActivityDayHistogram(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002AD10()
{
  uint64_t v33 = v0;
  uint64_t v1 = (void *)v0[17];
  if (v1)
  {
    os_log_type_t v2 = static os_log_type_t.default.getter();
    uint64_t v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      uint64_t v31 = v0[17];
      id v5 = v1;
      log = v3;
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315394;
      uint64_t v8 = _typeName(_:qualified:)();
      v0[3] = sub_10008F1F4(v8, v9, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2112;
      v0[4] = v5;
      id v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v31;

      _os_log_impl((void *)&_mh_execute_header, log, v4, "%s last move mode sample: %@", (uint8_t *)v6, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v12 = v0[14];
    uint64_t v11 = v0[15];
    uint64_t v14 = v0[12];
    uint64_t v13 = v0[13];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[11];
    uint64_t v17 = v0[5];
    *(unsigned char *)(v17 + 64) = [v1 value] == (id)2;
    static Calendar.current.getter();
    id v18 = [v1 _creationDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v18) = Calendar.isDateInToday(_:)();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    *(unsigned char *)(v17 + 65) = v18 & 1;
    type metadata accessor for MainActor();
    v0[18] = static MainActor.shared.getter();
    uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10028E05C, v20, v19);
  }
  else
  {
    os_log_type_t v21 = static os_log_type_t.default.getter();
    int v22 = (void *)HKLogActivity;
    os_log_type_t v23 = v21;
    if (os_log_type_enabled(HKLogActivity, v21))
    {
      char v24 = v22;
      char v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)char v25 = 136315138;
      uint64_t v26 = _typeName(_:qualified:)();
      v0[2] = sub_10008F1F4(v26, v27, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v23, "%s no last move mode sample; defaulting isAppleMoveTime and didSwitchMoveModeToday to false",
        v25,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_10002B178@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char v42 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10095FFF8);
  __chkstk_darwin(v3 - 8);
  id v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000AFA94(&qword_100960000);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v47 = &v40[-v10];
  sub_1000239CC((uint64_t)&v94);
  uint64_t v60 = v94;
  int v11 = v96;
  unsigned int v12 = v97;
  unsigned int v13 = v98;
  int v45 = v99;
  int v46 = v95;
  int v43 = v101;
  int v44 = v100;
  int v58 = v103;
  int v59 = v102;
  uint64_t v56 = v105;
  uint64_t v57 = v104;
  uint64_t v14 = a1 + *(int *)(type metadata accessor for ActivityRingsCardView() + 20);
  uint64_t v16 = *(void *)(v14 + 8);
  unint64_t v17 = *(void *)(v14 + 16);
  LOBYTE(v72) = *(unsigned char *)v14;
  char v15 = v72;
  uint64_t v73 = v16;
  unint64_t v74 = v17;
  sub_1000AFA94(&qword_1009603F0);
  State.wrappedValue.getter();
  LOBYTE(v72) = v15;
  uint64_t v73 = v16;
  unint64_t v74 = v17;
  State.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v18 = v107;
  uint64_t v54 = v108;
  uint64_t v55 = v106;
  char v19 = v109;
  uint64_t v52 = v111;
  uint64_t v53 = v110;
  LOBYTE(v72) = v15;
  uint64_t v73 = v16;
  unint64_t v74 = v17;
  State.wrappedValue.getter();
  uint64_t v20 = 8 * (char)v64;
  uint64_t v21 = *(void *)((char *)&unk_1007698B8 + v20);
  uint64_t v50 = *(void *)((char *)&unk_1007698D0 + v20);
  uint64_t v51 = v21;
  uint64_t v49 = *(void *)((char *)&unk_1007698E8 + v20);
  int v48 = static Edge.Set.all.getter();
  char v63 = v18;
  char v62 = v19;
  unsigned __int8 v61 = 0;
  *(void *)id v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v22 = sub_1000AFA94(&qword_100960418);
  sub_10003DC34(a1, (uint64_t)&v5[*(int *)(v22 + 44)]);
  uint64_t v23 = static Alignment.center.getter();
  sub_1000E0CFC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v9, 0.0, 1, INFINITY, 0, v23, v24);
  sub_10008DB18((uint64_t)v5, &qword_10095FFF8);
  char v25 = v47;
  sub_1000AEEC8((uint64_t)v9, (uint64_t)v47, &qword_100960000);
  char v26 = v63;
  LOBYTE(a1) = v62;
  unsigned __int8 v27 = v61;
  int v41 = v61;
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v9, &qword_100960000);
  *(void *)&long long v64 = v60;
  LOBYTE(v5) = v45;
  char v28 = v46;
  BYTE8(v64) = v46;
  HIDWORD(v64) = v11;
  *(void *)&long long v65 = __PAIR64__(v13, v12);
  BYTE8(v65) = v45;
  char v30 = v43;
  char v29 = v44;
  BYTE9(v65) = v44;
  BYTE10(v65) = v43;
  BYTE11(v65) = v59;
  BYTE12(v65) = v58;
  *(void *)&long long v66 = v57;
  *((void *)&v66 + 1) = v56;
  *(void *)&long long v67 = v55;
  BYTE8(v67) = v26;
  *(void *)&long long v68 = v54;
  BYTE8(v68) = a1;
  *(void *)&long long v69 = v53;
  *((void *)&v69 + 1) = v52;
  LOBYTE(v70) = v48;
  *((void *)&v70 + 1) = v51;
  *(void *)&v71[0] = 0;
  *((void *)&v71[0] + 1) = v50;
  *(void *)&v71[1] = v49;
  BYTE8(v71[1]) = v27;
  long long v31 = v67;
  uint64_t v32 = v42;
  v42[2] = v66;
  v32[3] = v31;
  long long v33 = v65;
  *uint64_t v32 = v64;
  v32[1] = v33;
  long long v34 = v68;
  long long v35 = v69;
  long long v36 = v70;
  *(_OWORD *)((char *)v32 + 121) = *(_OWORD *)((char *)v71 + 9);
  long long v37 = v71[0];
  v32[6] = v36;
  v32[7] = v37;
  v32[4] = v34;
  v32[5] = v35;
  uint64_t v38 = sub_1000AFA94(&qword_100960420);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v32 + *(int *)(v38 + 48), &qword_100960000);
  sub_100007C60((uint64_t)&v64);
  sub_10008DB18((uint64_t)v25, &qword_100960000);
  sub_10008DB18((uint64_t)v9, &qword_100960000);
  uint64_t v72 = v60;
  LOBYTE(v73) = v28;
  HIDWORD(v73) = v11;
  unint64_t v74 = __PAIR64__(v13, v12);
  char v75 = (char)v5;
  char v76 = v29;
  char v77 = v30;
  char v78 = v59;
  char v79 = v58;
  uint64_t v80 = v57;
  uint64_t v81 = v56;
  uint64_t v82 = v55;
  char v83 = v26;
  uint64_t v84 = v54;
  char v85 = a1;
  uint64_t v86 = v53;
  uint64_t v87 = v52;
  char v88 = v48;
  uint64_t v89 = v51;
  uint64_t v90 = 0;
  uint64_t v91 = v50;
  uint64_t v92 = v49;
  char v93 = v41;
  return sub_10000ABA0((uint64_t)&v72);
}

__n128 initializeWithTake for SeymourBrowsingCoordinator.Style(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10002B710()
{
  int v58 = v0;
  uint64_t v1 = *(void **)(v0[17] + 16);
  v0[14] = 0;
  id v2 = [v1 allAuthKitAccountsWithError:v0 + 14];
  uint64_t v3 = (void *)v0[14];
  if (!v2)
  {
    id v17 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    char v19 = (void *)HKLogActivity;
    os_log_type_t v20 = v18;
    if (os_log_type_enabled(HKLogActivity, v18))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v21 = v19;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      v0[15] = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Error while fetching account devices %@", v22, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    goto LABEL_39;
  }
  uint64_t v4 = v2;
  sub_10007E2D8(0, &qword_100950FC8);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = v3;

  unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    int v48 = v0;
    if (v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    int v48 = v0;
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        goto LABEL_43;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(v5 + 8 * i + 32);
        }
        uint64_t v10 = v9;
        id v11 = [v9 aa_altDSID];
        if (v11)
        {
          unsigned int v12 = v11;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v13 = [objc_allocWithZone((Class)AKDeviceListRequestContext) init];
          NSString v14 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v13 setAltDSID:v14];

          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v13 setOperatingSystems:isa];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v16 = v57;
      uint64_t v0 = v48;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_21:
  v0[18] = v16;
  swift_bridgeObjectRelease();
  v0[16] = _swiftEmptyArrayStorage;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v0[19] = v25;
    if (v25)
    {
LABEL_23:
      if (v25 >= 1)
      {
        v0[20] = 0;
        uint64_t v26 = v0[18];
        if ((v26 & 0xC000000000000001) != 0) {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v27 = *(id *)(v26 + 32);
        }
        id v28 = v27;
        v0[21] = v27;
        char v29 = (void *)swift_task_alloc();
        v0[22] = v29;
        *char v29 = v0;
        v29[1] = sub_100236654;
        uint64_t v30 = v0[17];
        v29[28] = v28;
        v29[29] = v30;
        return _swift_task_switch(sub_100237244, 0, 0);
      }
LABEL_43:
      __break(1u);
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[19] = v25;
    if (v25) {
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = _swiftEmptyArrayStorage[2];
  if (v31)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v32 = &_swiftEmptyArrayStorage[8];
    do
    {
      uint64_t v33 = *(v32 - 3);
      uint64_t v34 = *(v32 - 1);
      uint64_t v54 = *(v32 - 2);
      uint64_t v55 = *(v32 - 4);
      uint64_t v35 = v32[1];
      uint64_t v36 = v32[3];
      uint64_t v52 = v32[2];
      uint64_t v53 = *v32;
      uint64_t v37 = v32[5];
      uint64_t v38 = v32[7];
      uint64_t v50 = v32[6];
      uint64_t v51 = v32[4];
      os_log_type_t v39 = static os_log_type_t.default.getter();
      int v40 = (void *)HKLogActivity;
      os_log_type_t v56 = v39;
      if (os_log_type_enabled(HKLogActivity, v39))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        log = v40;
        uint64_t v41 = swift_slowAlloc();
        unint64_t v57 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 136315138;
        v48[2] = v55;
        void v48[3] = v33;
        v48[4] = v54;
        v48[5] = v34;
        v48[6] = v53;
        v48[7] = v35;
        v48[8] = v52;
        v48[9] = v36;
        v48[10] = v51;
        v48[11] = v37;
        v48[12] = v50;
        v48[13] = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = String.init<A>(describing:)();
        *(void *)(v41 + 4) = sub_10008F1F4(v42, v43, (uint64_t *)&v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, log, v56, "Loaded account device %s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      v32 += 12;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v0 = v48;
  int v44 = *(os_unfair_lock_s **)(v48[17] + 32);
  *(void *)(swift_task_alloc() + 16) = _swiftEmptyArrayStorage;
  int v45 = v44 + 4;
  v44 += 6;
  os_unfair_lock_lock(v44);
  sub_10000766C(v45);
  os_unfair_lock_unlock(v44);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_39:
  int v46 = (uint64_t (*)(void))v0[1];
  return v46();
}

uint64_t sub_10002BF94()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10002BFD4(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  swift_release();

  return swift_deallocObject();
}

void *sub_10002C01C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v17 = a2;
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = a1 + *(int *)(type metadata accessor for CatalogTipCardView() + 20);
  uint64_t v8 = type metadata accessor for CatalogTipCard();
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  unint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  int v12 = *(unsigned __int8 *)(v9 + 16);
  sub_100092088((uint64_t)v6);
  LODWORD(v10) = sub_100092DA4((uint64_t)v6, v10, v11, v12);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  if (v10 == 2)
  {
    uint64_t v13 = static HorizontalAlignment.leading.getter();
    sub_1006ED980(a1, (uint64_t)v20);
    char v21 = 0;
    memcpy(&v22[7], v20, 0x121uLL);
    v19[0] = v13;
    v19[1] = 0;
    LOBYTE(v19[2]) = 0;
    memcpy((char *)&v19[2] + 1, v22, 0x128uLL);
    sub_1006F0FFC((uint64_t)v19);
  }
  else
  {
    if (*(unsigned char *)(v7 + *(int *)(v8 + 24)) == 1)
    {
      uint64_t v14 = static VerticalAlignment.top.getter();
      sub_1006EDFD8(a1, (uint64_t)v20);
      char v21 = 0;
      memcpy(&v18[7], v20, 0x199uLL);
      v23[0] = v14;
      v23[1] = 0;
      LOBYTE(v23[2]) = 0;
      memcpy((char *)&v23[2] + 1, v18, 0x1A0uLL);
      sub_1006F0FF4((uint64_t)v23);
    }
    else
    {
      uint64_t v15 = static HorizontalAlignment.leading.getter();
      sub_100043AB8(a1, (uint64_t)v20);
      char v21 = 0;
      memcpy(&v18[7], v20, 0x1F1uLL);
      v23[0] = v15;
      v23[1] = 0;
      LOBYTE(v23[2]) = 0;
      memcpy((char *)&v23[2] + 1, v18, 0x1F8uLL);
      sub_1000E16B4((uint64_t)v23);
    }
    sub_1000AEEC8((uint64_t)v23, (uint64_t)v19, &qword_100969FC8);
    sub_1000AFA94(&qword_100969FB0);
    sub_1000AFA94(&qword_100969FC0);
    sub_1000A132C(&qword_100969FA8, &qword_100969FB0);
    sub_1000A132C(&qword_100969FB8, &qword_100969FC0);
    _ConditionalContent<>.init(storage:)();
    memcpy(v19, v22, 0x20AuLL);
    sub_1000E1368((uint64_t)v19);
  }
  sub_1000AEEC8((uint64_t)v19, (uint64_t)v18, &qword_100969FD0);
  sub_1000AFA94(&qword_100969F90);
  sub_1000AFA94(&qword_100969FA0);
  sub_1000A132C(&qword_100969F88, &qword_100969F90);
  sub_100005E60();
  _ConditionalContent<>.init(storage:)();
  return memcpy(v17, v23, 0x20BuLL);
}

void sub_10002C3BC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    _HKInitializeLogging();
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_ERROR)) {
      sub_10071D05C();
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    unint64_t v10 = +[NSDate date];
    [v10 timeIntervalSinceReferenceDate];
    double v12 = v11;
    [*(id *)(a1 + 32) timeIntervalSinceReferenceDate];
    double v14 = v13;

    _HKInitializeLogging();
    uint64_t v15 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v16 = v15;
      int v17 = 134218240;
      id v18 = [v8 count];
      __int16 v19 = 2048;
      double v20 = v12 - v14;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[FASC] Fetched %lu activity summaries in %f seconds", (uint8_t *)&v17, 0x16u);
    }
    if ([v8 count]) {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
}

unint64_t sub_10002C5AC()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dataForKey:v1];

  if (v2)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    sub_1000AFA94(&qword_10096A840);
    sub_100093928(&qword_10096A858, (void (*)(void))sub_1000E6994);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_1000939A4(v3, v5);
    swift_release();
    return v8;
  }
  else
  {
    unint64_t v6 = sub_1005242D4((uint64_t)_swiftEmptyArrayStorage);
    swift_release();
    return v6;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AccountDevice(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_10002C78C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    uint64_t v14 = v4;
    uint64_t v15 = v1;
    unint64_t v10 = *(void **)(result + OBJC_IVAR___CHHistoryDataProvider_queue);
    if (v10)
    {
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1000E8790;
      aBlock[5] = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      void aBlock[3] = &unk_1008CB548;
      double v12 = _Block_copy(aBlock);
      id v13 = v10;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      unint64_t v16 = _swiftEmptyArrayStorage;
      sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v12);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10002CA8C()
{
  id v0 = [self activityRingGroupForRingType:3];
  id v1 = [v0 forCompanion];

  if (qword_10094AE90 != -1) {
    swift_once();
  }
  id v2 = [objc_allocWithZone((Class)ARUIRingsView) initWithRingGroup:v1 renderer:qword_1009984F0];

  id v3 = [self clearColor];
  [v2 setBackgroundColor:v3];

  uint64_t v4 = ARUIRingsView.nilRings(animated:)();
  return v4;
}

uint64_t sub_10002CB9C()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v0 - 8);
  id v2 = &v21[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  id v9 = &v21[-v8];
  unint64_t v10 = self;
  id v11 = [v10 standardUserDefaults];
  NSString v12 = String._bridgeToObjectiveC()();
  unsigned int v22 = [v11 BOOLForKey:v12];

  id v13 = [v10 standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 objectForKey:v14];

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_100074830((uint64_t)v23, (uint64_t)v24);
  if (!v25)
  {
    sub_10008DB18((uint64_t)v24, &qword_100955A00);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_10;
  }
  int v16 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, v16 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_10:
    sub_10008DB18((uint64_t)v2, (uint64_t *)&unk_10095B890);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v9, v2, v3);
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v18 = v17;
  __int16 v19 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v19(v7, v3);
  v19(v9, v3);
  if (v18 < 600.0) {
    return v22;
  }
  else {
    return 0;
  }
}

void *sub_10002CEFC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  *uint64_t v8 = *v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  *((void *)v8 + 2) = *((void *)v9 + 2);
  swift_retain();
  swift_release();
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  uint64_t v10 = a3[6];
  uint64_t v53 = a1;
  id v11 = (char *)a1 + v10;
  NSString v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  NSString v14 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v15 = v14[5];
  int v16 = &v11[v15];
  double v17 = &v12[v15];
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *((void *)v17 + 1);
  char v20 = v17[16];
  sub_100091494(*(void *)v17, v19, v20);
  uint64_t v21 = *(void *)v16;
  uint64_t v22 = *((void *)v16 + 1);
  *(void *)int v16 = v18;
  *((void *)v16 + 1) = v19;
  char v23 = v16[16];
  v16[16] = v20;
  sub_1000917F8(v21, v22, v23);
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  v11[v14[8]] = v12[v14[8]];
  uint64_t v24 = v14[9];
  uint64_t v25 = *(void **)&v11[v24];
  uint64_t v26 = *(void **)&v12[v24];
  *(void *)&v11[v24] = v26;
  id v27 = v26;

  uint64_t v28 = v14[10];
  char v29 = &v11[v28];
  uint64_t v30 = &v12[v28];
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
LABEL_11:
    uint64_t v36 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
LABEL_12:
  uint64_t v37 = v14[11];
  uint64_t v38 = *(void **)&v11[v37];
  os_log_type_t v39 = *(void **)&v12[v37];
  *(void *)&v11[v37] = v39;
  id v40 = v39;

  v11[v14[12]] = v12[v14[12]];
  uint64_t v41 = v51[7];
  uint64_t v42 = (uint64_t)v53 + v41;
  unint64_t v43 = (char *)v52 + v41;
  uint64_t v44 = *(void *)((char *)v52 + v41 + 24);
  if (!*(void *)((char *)v53 + v41 + 24))
  {
    if (v44)
    {
      *(void *)(v42 + 24) = v44;
      *(void *)(v42 + 32) = *((void *)v43 + 4);
      (**(void (***)(uint64_t, char *))(v44 - 8))(v42, v43);
      goto LABEL_19;
    }
LABEL_18:
    long long v45 = *(_OWORD *)v43;
    long long v46 = *((_OWORD *)v43 + 1);
    *(void *)(v42 + 32) = *((void *)v43 + 4);
    *(_OWORD *)uint64_t v42 = v45;
    *(_OWORD *)(v42 + 16) = v46;
    goto LABEL_19;
  }
  if (!v44)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v42);
    goto LABEL_18;
  }
  sub_10009EDF0((uint64_t *)v42, (uint64_t *)v43);
LABEL_19:
  uint64_t v47 = v51[8];
  int v48 = (void *)((char *)v53 + v47);
  uint64_t v49 = (void *)((char *)v52 + v47);
  *int v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  *(void *)((char *)v53 + v51[9]) = *(void *)((char *)v52 + v51[9]);
  return v53;
}

uint64_t sub_10002D318()
{
  return sub_10002D338(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10002D338(uint64_t a1, char a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache);
  swift_beginAccess();
  v7[16] = a2;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_10002D3DC(v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_10002DBB4, (uint64_t)v7);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002D3DC(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_10002D554((unint64_t *)((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    id v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_10002D554((unint64_t *)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

uint64_t sub_10002D554(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v25 = a2;
  uint64_t v31 = a4;
  uint64_t v26 = a1;
  uint64_t v5 = type metadata accessor for MetricDetailViewModel();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5 - 8);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29) {
      return sub_10002D7EC(v26, v25, v27, (void *)a3);
    }
    unint64_t v21 = *(void *)(v28 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v29) {
        return sub_10002D7EC(v26, v25, v27, (void *)a3);
      }
      unint64_t v21 = *(void *)(v28 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v29) {
          return sub_10002D7EC(v26, v25, v27, (void *)a3);
        }
        unint64_t v21 = *(void *)(v28 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    int v16 = (unsigned __int8 *)(*(void *)(a3 + 48) + 24 * v15);
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t v18 = v16[16];
    uint64_t v19 = *v16;
    sub_1000A3BF0(*(void *)(a3 + 56) + *(void *)(v30 + 72) * v15, (uint64_t)v8);
    LOBYTE(v17) = v31(v19, v17, v18, v8);
    uint64_t result = sub_10006A4B8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    if (v17)
    {
      *(unint64_t *)((char *)v26 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_10002D7EC(v26, v25, v27, (void *)a3);
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v29) {
    return sub_10002D7EC(v26, v25, v27, (void *)a3);
  }
  unint64_t v21 = *(void *)(v28 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v29) {
      return sub_10002D7EC(v26, v25, v27, (void *)a3);
    }
    unint64_t v21 = *(void *)(v28 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10002D7EC(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v41 = a1;
  uint64_t v7 = type metadata accessor for MetricDetailViewModel();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v40 - v10;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v43 = v9;
  sub_1000AFA94(&qword_10095C4F8);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = result;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v41;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  uint64_t v16 = v43;
  uint64_t v42 = a4;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      uint64_t v46 = v14;
      unint64_t v18 = v17 | (v14 << 6);
    }
    else
    {
      uint64_t v19 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_42;
      }
      if (v19 >= v40) {
        return v12;
      }
      unint64_t v20 = v41[v19];
      uint64_t v21 = v14 + 1;
      if (!v20)
      {
        uint64_t v21 = v14 + 2;
        if (v14 + 2 >= v40) {
          return v12;
        }
        unint64_t v20 = v41[v21];
        if (!v20)
        {
          uint64_t v21 = v14 + 3;
          if (v14 + 3 >= v40) {
            return v12;
          }
          unint64_t v20 = v41[v21];
          if (!v20)
          {
            uint64_t v22 = v14 + 4;
            if (v14 + 4 >= v40) {
              return v12;
            }
            unint64_t v20 = v41[v22];
            if (!v20)
            {
              while (1)
              {
                uint64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v21 >= v40) {
                  return v12;
                }
                unint64_t v20 = v41[v21];
                ++v22;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v21 = v14 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v20 - 1) & v20;
      uint64_t v46 = v21;
      unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    uint64_t v23 = a4[7];
    uint64_t v24 = (unsigned __int8 *)(a4[6] + 24 * v18);
    Swift::UInt v25 = *v24;
    Swift::UInt v26 = *((void *)v24 + 1);
    unsigned __int8 v27 = v24[16];
    uint64_t v28 = v44;
    uint64_t v29 = *(void *)(v45 + 72);
    sub_1000A3BF0(v23 + v29 * v18, v44);
    sub_1000C19A0(v28, v16, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v25);
    if ((v27 & 1) == 0) {
      Hasher._combine(_:)(3uLL);
    }
    Hasher._combine(_:)(v26);
    uint64_t result = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v33 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v43;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v30) >> 6;
      uint64_t v16 = v43;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v36 = v32 == v35;
        if (v32 == v35) {
          unint64_t v32 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v32);
      }
      while (v37 == -1);
      unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(void *)(v15 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    uint64_t v38 = *(void *)(v12 + 48) + 24 * v33;
    *(unsigned char *)uint64_t v38 = v25;
    *(void *)(v38 + 8) = v26;
    *(unsigned char *)(v38 + 16) = v27;
    uint64_t result = sub_1000C19A0(v16, *(void *)(v12 + 56) + v33 * v29, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v42;
    uint64_t v14 = v46;
    if (!a3) {
      return v12;
    }
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

BOOL sub_10002DBB4(char a1)
{
  return qword_100764018[a1] != *(unsigned __int8 *)(v1 + 16);
}

id sub_10002DBD4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSuiteName:v1];

  if (v2)
  {
    uint64_t v3 = kASActivitySharingIsSetup;
    id v4 = v2;
    id v2 = [v4 BOOLForKey:v3];
    os_log_type_t v5 = static os_log_type_t.default.getter();
    uint64_t v6 = (void *)HKLogActivity;
    os_log_type_t v7 = v5;
    if (os_log_type_enabled(HKLogActivity, v5))
    {
      uint64_t v8 = v6;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v7, "Checking defaults for fitness friends setup: %{BOOL}d", v9, 8u);
      swift_slowDealloc();
    }
  }
  return v2;
}

uint64_t sub_10002DD3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a7;
  int v28 = a6;
  uint64_t v27 = a5;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = a8;
    uint64_t v30 = a3;
    uint64_t v31 = v20;
    *(_DWORD *)uint64_t v19 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v24 = v12;
    uint64_t v21 = StaticString.description.getter();
    uint64_t v30 = sub_10008F1F4(v21, v22, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v30 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v25;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
    if (a2)
    {
LABEL_3:
      uint64_t v31 = a1;
      swift_errorRetain();
      sub_1000AFA94(&qword_10095FD60);
      return CheckedContinuation.resume(throwing:)();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (a2) {
      goto LABEL_3;
    }
  }
  sub_1000AFA94(&qword_10095FD60);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10002E16C()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = v10;
  if (v12 >= 2u)
  {
    if (!(v10 ^ 1 | v11)) {
      return result;
    }
  }
  else
  {
    sub_1000904DC(v10, v11, v12);
  }
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  type metadata accessor for MainActor();
  id v6 = v0;
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  _OWORD v8[3] = &protocol witness table for MainActor;
  v8[4] = v6;
  sub_1000713D0((uint64_t)v3, (uint64_t)&unk_100966B58, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_10002E2F0()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  Class isa = (Class)[v2 localizations];

  if (!isa)
  {
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  sub_1000AFA94(&qword_10094D178);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007509E0;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v4;
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v1 preferredLocalizationsFromArray:isa forPreferences:v7];

  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    Locale.init(identifier:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    static Locale.autoupdatingCurrent.getter();
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10002E4A8()
{
  swift_getObjectType();
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  BOOL v3 = os_log_type_enabled(HKLogActivity, v0);
  if (v3)
  {
    uint64_t v4 = v1;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10008F1F4(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v2, "%s did receive summariesDidChange notification", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  __chkstk_darwin(v3);
  dispatch thunk of UnfairLock.acquire<A>(_:)();
  LOBYTE(v9) = 0;
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  sub_1000D3F84(0);
  sub_100075DA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002E6A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = a8;
  int v27 = a7;
  uint64_t v26 = a6;
  LODWORD(v10) = a3;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    int v24 = v10;
    uint64_t v10 = v18;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v25 = a9;
    uint64_t v23 = v19;
    uint64_t v30 = a4;
    v31[0] = v19;
    *(_DWORD *)uint64_t v10 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v20 = StaticString.description.getter();
    uint64_t v30 = sub_10008F1F4(v20, v21, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2048;
    uint64_t v30 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v10) = v24;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v29);
  if (v10)
  {
    v31[0] = a1;
    swift_errorRetain();
    sub_1000AFA94(&qword_10095FDF0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    v31[0] = a1;
    v31[1] = a2;
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_10095FDF0);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10002E954()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  BOOL v3 = (uint64_t *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *BOOL v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.notOnQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    id v6 = [objc_allocWithZone((Class)_PSContactSuggester) init];
    unint64_t v7 = _swiftEmptyArrayStorage;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v9 = [v6 contactSuggestionsWithMaxSuggestions:10 excludeContactsWithIdentifiers:isa];

    sub_10007E2D8(0, &qword_10096A4A8);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    uint64_t v11 = sub_10000E5F8(v10);
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v12 = v11[2];
    if (v12)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)v11[i + 4];
        if (v14)
        {
          id v15 = v14;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v7 = (void *)v18;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1000159EC((unint64_t)v7);

    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10002EBF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_appBadgeCount] = 0;
  *(void *)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedActivitySharingCount] = 0;
  *(void *)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedEngagementBadges] = &_swiftEmptySetSingleton;
  v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_hasAmeliaBadge] = 0;
  v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour] = 0;
  *(void *)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_engagementAppBadgeProvider] = a3;
  *(void *)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_activitySharingClient] = a1;
  sub_10008E75C(a2, (uint64_t)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_contentAvailabilityClient]);
  uint64_t v13 = &v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_eventHub];
  *uint64_t v13 = a4;
  v13[1] = a5;
  sub_10008E75C(a6, (uint64_t)&v6[OBJC_IVAR___CHFitnessAppBadgeAggregator_privacyPreferenceClient]);
  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for FitnessAppBadgeAggregator();
  swift_retain();
  id v14 = a1;
  swift_unknownObjectRetain();
  id v15 = [super init];
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = [v16 defaultCenter];
  uint64_t v19 = qword_10094A690;
  id v20 = v17;
  if (v19 != -1) {
    swift_once();
  }
  [v18 addObserver:v20 selector:"onAvailabilityChange:" name:qword_100997810 object:0];

  _s10FitnessApp24HistoryViewActionContextVwxx_0(a6);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a2);
  return v20;
}

uint64_t sub_10002EDD8()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = type metadata accessor for OSSignposter();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10002EF1C()
{
  uint64_t v1 = sub_1000AFA94(&qword_100959628);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for NoticePrivacyPreference();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_userDefaults);
  NSString v9 = String._bridgeToObjectiveC()();
  LOBYTE(v8) = [v8 BOOLForKey:v9];

  if (v8) {
    return 0;
  }
  uint64_t v10 = v0 + OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_noticePrivacyPreference;
  swift_beginAccess();
  sub_1000AEF2C(v10, (uint64_t)v3, &qword_100959628);
  uint64_t v11 = 1;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10008DB18((uint64_t)v3, &qword_100959628);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v16 = NoticePrivacyPreference.state.getter();
  char v17 = v12 & 1;
  v15[7] = 1;
  sub_10002F1B4();
  sub_10002F160();
  char v13 = static PortableEnum<>.== infix(_:_:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v13 & 1) == 0) {
    return 0;
  }
  return v11;
}

unint64_t sub_10002F160()
{
  unint64_t result = qword_100950240;
  if (!qword_100950240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950240);
  }
  return result;
}

unint64_t sub_10002F1B4()
{
  unint64_t result = qword_100950238;
  if (!qword_100950238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950238);
  }
  return result;
}

uint64_t sub_10002F208()
{
  uint64_t v0 = sub_1000AFA94(&qword_10095F7D0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AFA94(&qword_100963D30);
  type metadata accessor for Tips.Rule();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100752410;
  if (qword_10094AED0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1000876DC(v0, (uint64_t)qword_100998548);
  uint64_t v5 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16);
  v5(v3, v4, v0);
  Tips.Rule.init<A>(_:_:)();
  if (qword_10094AED8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1000876DC(v0, (uint64_t)qword_100998560);
  swift_beginAccess();
  v5(v3, v6, v0);
  Tips.Rule.init<A>(_:_:)();
  if (qword_10094AEE0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000876DC(v0, (uint64_t)qword_100998578);
  swift_beginAccess();
  v5(v3, v7, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10002F570(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = sub_1000AFA94((uint64_t *)&unk_100955730);
  uint64_t v5 = *(void *)(v45 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  NSString v9 = (char *)&v42 - v8;
  uint64_t v48 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v10 = *(void *)(v46 + 64);
  uint64_t v11 = __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v42 - v13;
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v42 - v14;
  uint64_t v15 = type metadata accessor for ServiceSubscriptionRequest();
  uint64_t v51 = *(void *)(v15 - 8);
  uint64_t v52 = v15;
  __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ServiceSubscriptionRequest.init(authenticationBehavior:cacheBehavior:)();
  uint64_t v43 = v2;
  sub_10007E4EC((void *)(v2 + 32), *(void *)(v2 + 56));
  uint64_t v42 = v9;
  dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = a1;
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000EAC34;
  *(void *)(v19 + 24) = v17;
  id v20 = v44;
  unint64_t v21 = v9;
  uint64_t v22 = v45;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v44, v21, v45);
  unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v24 = (v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v23, v20, v22);
  uint64_t v26 = (uint64_t (**)(uint64_t))(v25 + v24);
  *uint64_t v26 = sub_1000E2BD8;
  v26[1] = (uint64_t (*)(uint64_t))v19;
  swift_retain();
  int v27 = v53;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v42, v22);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v18;
  v28[3] = a2;
  v28[4] = v43;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1002468E0;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = v46;
  uint64_t v31 = v47;
  unint64_t v32 = v27;
  uint64_t v33 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v47, v32, v48);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v34, v31, v33);
  BOOL v36 = (uint64_t (**)(uint64_t))(v35 + ((v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
  *BOOL v36 = sub_1001B36B8;
  v36[1] = (uint64_t (*)(uint64_t))v29;
  swift_retain();
  swift_retain();
  uint64_t v37 = v49;
  Promise.init(asyncOperation:)();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38(v53, v33);
  os_log_type_t v39 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = 0;
  *(void *)(v40 + 24) = 0;
  v39(sub_10006D8B4, v40);
  swift_release();
  swift_release();
  v38(v37, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v52);
}

uint64_t sub_10002FAD0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 88) = a3;
  *(void *)(v5 + 96) = v4;
  *(unsigned char *)(v5 + 193) = a4;
  *(unsigned char *)(v5 + 192) = a2;
  *(void *)(v5 + 80) = a1;
  *(void *)(v5 + 104) = swift_getObjectType();
  sub_1000AFA94((uint64_t *)&unk_1009546B0);
  *(void *)(v5 + 112) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DateInterval();
  *(void *)(v5 + 120) = v6;
  *(void *)(v5 + 128) = *(void *)(v6 - 8);
  *(void *)(v5 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_100067C74, 0, 0);
}

uint64_t sub_10002FBD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  uint64_t v46 = v3;
  __chkstk_darwin(v2);
  uint64_t v42 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActivityRingsCardView();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  uint64_t v9 = type metadata accessor for AdaptiveStackType();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v38 = (char *)&v36 - v14;
  uint64_t v40 = sub_1000AFA94(&qword_1009603E0);
  uint64_t v44 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v48 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000AFA94(&qword_1009603E8);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  os_log_type_t v39 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v6 + 28);
  uint64_t v37 = v1;
  uint64_t v19 = (char *)(v1 + v18);
  char v20 = *v19;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  char v49 = v20;
  uint64_t v50 = v21;
  uint64_t v51 = v22;
  sub_1000AFA94(&qword_1009603F0);
  State.wrappedValue.getter();
  unint64_t v23 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
  if (v52 >= 2u) {
    unint64_t v23 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *v23, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
  static VerticalAlignment.top.getter();
  static HorizontalAlignment.leading.getter();
  unint64_t v24 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C0774(v1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ActivityRingsCardView);
  unint64_t v25 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v26 = swift_allocObject();
  sub_10003017C((uint64_t)v24, v26 + v25);
  sub_1000AFA94(&qword_1009603F8);
  sub_1000A132C(&qword_100960400, &qword_1009603F8);
  AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)();
  uint64_t v27 = v42;
  uint64_t v28 = v37;
  sub_100092088(v42);
  sub_1000C0774(v28, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ActivityRingsCardView);
  uint64_t v29 = swift_allocObject();
  sub_10003017C((uint64_t)v24, v29 + v25);
  sub_1000A132C(&qword_100960408, &qword_1009603E0);
  sub_1000C0E68((unint64_t *)&qword_100960410, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v30 = v39;
  uint64_t v31 = v27;
  uint64_t v32 = v40;
  uint64_t v33 = v45;
  unint64_t v34 = v48;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v32);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v47, v30, v43);
}

uint64_t sub_10003017C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityRingsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000301E0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_100955060);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AEEC8((uint64_t)(v3 + 28), (uint64_t)&v21, &qword_1009687C0);
  sub_1000AEEC8((uint64_t)&v21, (uint64_t)&v22, &qword_1009687C0);
  char v10 = v22;
  if (v22 == 2)
  {
    UIViewRepresentableContext.coordinator.getter();
    char v11 = *(unsigned char *)(v20 + 16);
    swift_release();
    char v12 = v11 & v3[25];
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    if (v10)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      char v12 = 1;
    }
    else
    {
      UIViewRepresentableContext.coordinator.getter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      char v13 = *(unsigned char *)(v20 + 16);
      swift_release();
      if (v13) {
        char v12 = 0;
      }
      else {
        char v12 = v3[25];
      }
    }
  }
  sub_10003CF80(a1, v12 & 1);
  UIViewRepresentableContext.coordinator.getter();
  *(unsigned char *)(v20 + 16) = 0;
  swift_release();
  if (v3[27])
  {
    uint64_t v14 = (SEL *)(v3[27] == 1 ? &selRef_defaultSpriteSheet : &selRef_wheelchairSpriteSheet);
    id v15 = [self *v14];
    if (v15)
    {
      id v16 = v15;
      id v17 = [a1 ringGroup];
      if (v3[8]) {
        id v18 = 0;
      }
      else {
        id v18 = v16;
      }
      [v17 setSpriteSheet:v18];

      id v19 = [a1 ringGroup];
      [v19 playSpriteAnimation];
    }
  }
}

uint64_t sub_100030478(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for TrendsSplashScreen(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

char *sub_100030570()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v31 - 8);
  uint64_t v4 = __chkstk_darwin(v31);
  long long v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar;
  uint64_t v10 = qword_10094A5F8;
  char v11 = v0;
  if (v10 != -1) {
    swift_once();
  }
  char v12 = &v11[v9];
  uint64_t v13 = sub_1000876DC(v1, (uint64_t)qword_100997640);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v14(v12, v13, v1);
  id v15 = objc_allocWithZone((Class)HKDateCache);
  Class isa = Calendar._bridgeToObjectiveC()().super.isa;
  id v17 = [v15 initWithCalendar:isa];

  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_dateCache] = v17;
  id v18 = v30;
  v14(v30, v13, v1);
  id v19 = [objc_allocWithZone((Class)NSDate) init];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Calendar.startOfDay(for:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v29 + 8);
  char v21 = v6;
  uint64_t v22 = v31;
  v20(v21, v31);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v18, v1);
  Class v23 = Date._bridgeToObjectiveC()().super.isa;
  v20(v8, v22);
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentDeviceDate] = v23;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate] = v23;
  unint64_t v24 = v23;

  unint64_t v25 = (objc_class *)type metadata accessor for ActivityDateCache();
  v32.receiver = v11;
  v32.super_class = v25;
  uint64_t v26 = (char *)[super init];
  [*(id *)&v26[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_dateCache] ch_addObserver:v26];

  return v26;
}

uint64_t sub_100030898(unint64_t a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static os_log_type_t.default.getter();
  id v6 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  unint64_t v25 = _swiftEmptyDictionarySingleton;
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v24 = v9;
      sub_1006F7354(&v25, &v24);

      ++v8;
      if (v11 == v7)
      {
        swift_bridgeObjectRelease();
        char v12 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  char v12 = _swiftEmptyDictionarySingleton;
LABEL_13:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
  uint64_t v14 = sub_1000DF044((uint64_t)v12);
  if (ASManateeContainerEnabled())
  {
    id v15 = (void *)swift_allocObject();
    v15[2] = v13;
    v15[3] = v1;
    _DWORD v15[4] = v12;
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v17;
    v18[5] = v14;
    v18[6] = sub_1000E6470;
    v18[7] = v15;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000713D0((uint64_t)v5, (uint64_t)&unk_10096A4C0, (uint64_t)v18);
  }
  else
  {
    uint64_t v19 = sub_1001EF044((uint64_t)v14);
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v13;
    v20[3] = v1;
    v20[4] = v12;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v1;
    *(void *)(v21 + 24) = v13;
    swift_retain_n();
    swift_retain_n();
    sub_1006F6C7C(v19, (uint64_t)sub_1006F8630, (uint64_t)v20, (uint64_t)sub_1006F867C, v21);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_100030C60()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100030CA0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100030CE0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100030D20()
{
  id v1 = [objc_allocWithZone((Class)CNFavorites) initWithContactStore:*(void *)(v0 + 24)];
  id v2 = [v1 entries];
  sub_10007E2D8(0, (unint64_t *)&unk_10096A4B0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v4 = sub_10000F18C(v3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v4[2];
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      uint64_t v7 = (void *)v4[i + 4];
      if (v7)
      {
        id v8 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  os_log_type_t v9 = static os_log_type_t.default.getter();
  uint64_t v10 = (void *)HKLogActivity;
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(HKLogActivity, v9))
  {
    char v12 = v10;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v11, "Found %ld suggestions from Favorites.", v13, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v14 = sub_1000159EC((unint64_t)_swiftEmptyArrayStorage);

  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10003102C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  id v6 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v8 = (char *)aBlock - v7;
  Date.init()();
  if ([*(id *)&v0[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_workoutProvider] dataAvailable])
  {
    os_log_type_t v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_operationQueue];
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v0;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v10, v6, v2);
    *(void *)(v12 + v11) = ObjectType;
    aBlock[4] = sub_1000707E0;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008C0600;
    uint64_t v13 = _Block_copy(aBlock);
    uint64_t v14 = v0;
    swift_release();
    [v9 addOperationWithBlock:v13];
    _Block_release(v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

void sub_10003126C(void *a1, char *a2)
{
  uint64_t v4 = self;
  id v5 = [v4 defaultCenter];
  [v5 addObserver:a2 selector:"didReceiveNotificationWithNote:" name:UIApplicationSignificantTimeChangeNotification object:0];

  id v6 = [v4 defaultCenter];
  if (qword_10094AF68 != -1) {
    swift_once();
  }
  [v6 addObserver:a2 selector:"didReceiveNotificationWithNote:" name:qword_1009985E0 object:0];

  id v7 = [v4 defaultCenter];
  if (qword_10094A6E0 != -1) {
    swift_once();
  }
  [v7 addObserver:a2 selector:"wheelchairUseChangedWithNote:" name:qword_100997870 object:0];

  if ((uint64_t)[a1 numberOfActivitySummaries] >= 1) {
    sub_10003102C();
  }
  id v8 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_workoutProvider];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  v12[4] = sub_1000E8EE0;
  uint64_t v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100070394;
  v12[3] = &unk_1008CAD10;
  unint64_t v10 = _Block_copy(v12);
  unint64_t v11 = a2;
  swift_release();
  [v8 addUpdateHandler:v10];
  _Block_release(v10);
}

uint64_t sub_1000314B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v7 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  v4[20] = v7;
  v4[21] = *(void *)(v7 + 64);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  sub_1000AFA94(&qword_10095F798);
  char v4[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Tips.Status();
  v4[25] = v8;
  v4[26] = *(void *)(v8 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = sub_1000AFA94(&qword_10095F7A0);
  v4[29] = swift_task_alloc();
  v4[30] = sub_1000AFA94(&qword_10095F7A8);
  v4[31] = swift_task_alloc();
  uint64_t v9 = sub_1000AFA94(&qword_10095F7B0);
  v4[32] = v9;
  v4[33] = *(void *)(v9 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v10 = sub_1000AFA94(&qword_10095F7B8);
  v4[35] = v10;
  v4[36] = *(void *)(v10 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = type metadata accessor for MainActor();
  v4[40] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[41] = v12;
  v4[42] = v11;
  return _swift_task_switch(sub_10001B114, v12, v11);
}

uint64_t sub_100031844(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  v181 = a3;
  unint64_t v194 = a1;
  uint64_t v195 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100958BE8);
  __chkstk_darwin(v3 - 8);
  v172 = (char *)&v168 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094B7A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v180 = (char *)&v168 - v9;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v190 = v10;
  uint64_t v191 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v187 = (char *)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  id v193 = (char *)&v168 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v175 = (char *)&v168 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v174 = (char *)&v168 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v173 = (char *)&v168 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v178 = (char *)&v168 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v171 = (char *)&v168 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v169 = (char *)&v168 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  id v170 = (char *)&v168 - v29;
  __chkstk_darwin(v28);
  v179 = (char *)&v168 - v30;
  uint64_t v31 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v31 - 8);
  v185 = (uint64_t (**)(char *, uint64_t))((char *)&v168 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v192 = type metadata accessor for MirroredWidgetAttributes.ContentState();
  __chkstk_darwin(v192);
  v184 = (char *)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_1000AFA94(&qword_100958BF0);
  uint64_t v183 = *(void *)(v182 - 8);
  uint64_t v34 = __chkstk_darwin(v182);
  id v177 = (char *)&v168 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = v35;
  __chkstk_darwin(v34);
  uint64_t v189 = (char *)&v168 - v36;
  v197 = (char *)type metadata accessor for MirroredWidgetAttributes();
  uint64_t v186 = *((void *)v197 - 1);
  uint64_t v37 = __chkstk_darwin(v197);
  v196 = (char *)&v168 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v198 = (char *)&v168 - v39;
  uint64_t v40 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v40 - 8);
  uint64_t v42 = (char *)&v168 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for UUID();
  uint64_t v44 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v43 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v168 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v45);
  uint64_t v50 = (char *)&v168 - v49;
  __chkstk_darwin(v48);
  v188 = (char *)&v168 - v51;
  uint64_t v52 = type metadata accessor for DispatchPredicate();
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v55 = (uint64_t *)((char *)&v168 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000DF004();
  *uint64_t v55 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v53 + 104))(v55, enum case for DispatchPredicate.onQueue(_:), v52);
  uint64_t v56 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v55, v52);
  if ((v56 & 1) == 0)
  {
    __break(1u);
    goto LABEL_83;
  }
  sub_1000CD344(v195, (uint64_t)v42);
  if (v44[6](v42, 1, v43) == 1)
  {
    sub_10008DB18((uint64_t)v42, (uint64_t *)&unk_1009555F0);
    unint64_t v57 = v193;
    static WOLog.dataLink.getter();
    int v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "No active session, tearing down all activities.", v60, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v191 + 8))(v57, v190);
    sub_1000AFA94(&qword_100958BF8);
    unint64_t v61 = static Activity.activities.getter();
    uint64_t v56 = v61;
    if (!(v61 >> 62))
    {
      char v62 = (uint64_t *)(v61 & 0xFFFFFFFFFFFFFF8);
      uint64_t v63 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v63)
      {
LABEL_7:
        if (v63 >= 1)
        {
          uint64_t v64 = 0;
          v198 = (char *)(v56 & 0xC000000000000001);
          v197 = (char *)&type metadata for () + 8;
          uint64_t v65 = v56;
          while (1)
          {
            if (v198)
            {
              uint64_t v66 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v66 = *(void *)(v56 + 8 * v64 + 32);
              swift_retain();
            }
            uint64_t v67 = type metadata accessor for TaskPriority();
            uint64_t v68 = *(void *)(v67 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v8, 1, 1, v67);
            long long v69 = (void *)swift_allocObject();
            v69[2] = 0;
            long long v70 = v69 + 2;
            v69[3] = 0;
            v69[4] = v66;
            int v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48))(v8, 1, v67);
            swift_retain();
            if (v71 == 1)
            {
              sub_10008DB18((uint64_t)v8, &qword_10094B7A0);
              if (!*v70) {
                goto LABEL_18;
              }
            }
            else
            {
              TaskPriority.rawValue.getter();
              (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v67);
              if (!*v70)
              {
LABEL_18:
                uint64_t v72 = 0;
                uint64_t v74 = 0;
                goto LABEL_19;
              }
            }
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v72 = dispatch thunk of Actor.unownedExecutor.getter();
            uint64_t v74 = v73;
            swift_unknownObjectRelease();
LABEL_19:
            uint64_t v75 = swift_allocObject();
            *(void *)(v75 + 16) = &unk_100958C08;
            *(void *)(v75 + 24) = v69;
            if (v74 | v72)
            {
              uint64_t v202 = 0;
              uint64_t v203 = 0;
              uint64_t v204 = v72;
              uint64_t v205 = v74;
            }
            ++v64;
            swift_task_create();
            swift_release();
            swift_release();
            uint64_t v56 = v65;
            if (v63 == v64) {
              return swift_bridgeObjectRelease();
            }
          }
        }
        __break(1u);
        goto LABEL_87;
      }
      return swift_bridgeObjectRelease();
    }
LABEL_83:
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    if (v63) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  char v76 = (uint64_t (**)(char *, uint64_t))v44;
  char v77 = v188;
  v44[4](v188, (uint64_t)v42, v43);
  char v78 = v44[2];
  uint64_t v195 = v43;
  v78(v50, (uint64_t)v77, v43);
  MirroredWidgetAttributes.init(uuid:)();
  swift_retain();
  MirroredWidgetAttributes.ContentState.init(publisher:)();
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8)
                                                                                              + 56))(v185, 1, 1, v79);
  sub_10036D31C(&qword_100958C10);
  sub_10036D31C(&qword_100958C18);
  sub_10036D31C(&qword_100958C20);
  ActivityContent.init(state:staleDate:relevanceScore:)();
  unint64_t v201 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v80 = sub_1000AFA94(&qword_100958BF8);
  unint64_t v81 = static Activity.activities.getter();
  unint64_t v82 = v81;
  if (v81 >> 62) {
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v83 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v185 = (uint64_t (**)(char *, uint64_t))v44;
  char v62 = &v206;
  v184 = (char *)v80;
  if (!v83)
  {
    swift_bridgeObjectRelease();
    v196 = 0;
    unint64_t v93 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_40;
    }
LABEL_44:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v102) {
      goto LABEL_48;
    }
    goto LABEL_41;
  }
  if (v83 < 1)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v84 = 0;
  char v85 = 0;
  unint64_t v192 = v82 & 0xC000000000000001;
  id v193 = (char *)v83;
  uint64_t v86 = (void (**)(char *, char *))(v186 + 8);
  uint64_t v87 = (void (**)(char *, uint64_t))(v76 + 1);
  unint64_t v194 = v82;
  do
  {
    if (v192)
    {
      uint64_t v89 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v89 = *(void *)(v82 + 8 * (void)v85 + 32);
      swift_retain();
    }
    uint64_t v90 = v196;
    Activity.attributes.getter();
    MirroredWidgetAttributes.uuid.getter();
    (*v86)(v90, v197);
    MirroredWidgetAttributes.uuid.getter();
    LOBYTE(v90) = static UUID.== infix(_:_:)();
    uint64_t v91 = *v87;
    uint64_t v92 = v195;
    (*v87)(v47, v195);
    v91(v50, v92);
    if (v90)
    {
      if (v84)
      {
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
      }
      uint64_t v84 = (char *)v89;
      char v88 = v193;
      unint64_t v82 = v194;
    }
    else
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      char v88 = v193;
      if (*(void *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      unint64_t v82 = v194;
    }
    ++v85;
  }
  while (v88 != v85);
  v196 = v84;
  swift_bridgeObjectRelease();
  unint64_t v93 = v201;
  char v76 = v185;
  if (v201 >> 62) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v94 = *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (!v94) {
    goto LABEL_48;
  }
LABEL_41:
  swift_bridgeObjectRetain();
  unsigned __int8 v95 = v179;
  static WOLog.dataLink.getter();
  swift_bridgeObjectRetain_n();
  int v96 = Logger.logObject.getter();
  os_log_type_t v97 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v96, v97))
  {
    unsigned int v98 = (uint8_t *)swift_slowAlloc();
    v200 = (void *)swift_slowAlloc();
    *(_DWORD *)unsigned int v98 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v99 = Array.description.getter();
    unint64_t v101 = v100;
    swift_bridgeObjectRelease();
    uint64_t v199 = sub_10008F1F4(v99, v101, (uint64_t *)&v200);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "Ending stale activities %s", v98, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v76 = v185;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v191 + 8))(v179, v190);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v191 + 8))(v95, v190);
  }
  uint64_t v103 = type metadata accessor for TaskPriority();
  uint64_t v104 = (uint64_t)v180;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v180, 1, 1, v103);
  uint64_t v105 = (void *)swift_allocObject();
  v105[2] = 0;
  v105[3] = 0;
  v105[4] = v93;
  sub_1000713D0(v104, (uint64_t)&unk_100958C30, (uint64_t)v105);
  swift_release();
LABEL_48:
  char v62 = v181;
  if (!v181)
  {
    uint64_t v114 = v196;
    if (v196)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v115 = v178;
      static WOLog.dataLink.getter();
      swift_retain_n();
      char v116 = Logger.logObject.getter();
      os_log_type_t v117 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v118 = v114;
        uint64_t v119 = (uint8_t *)swift_slowAlloc();
        uint64_t v120 = swift_slowAlloc();
        uint64_t v199 = (uint64_t)v114;
        v200 = (void *)v120;
        *(_DWORD *)uint64_t v119 = 136315138;
        swift_retain();
        uint64_t v121 = String.init<A>(describing:)();
        uint64_t v199 = sub_10008F1F4(v121, v122, (uint64_t *)&v200);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v116, v117, "Updating current activity %s with new content", v119, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v191 + 8))(v115, v190);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v115, v190);
        uint64_t v118 = v114;
      }
      long long v143 = v177;
      uint64_t v144 = type metadata accessor for TaskPriority();
      uint64_t v145 = (uint64_t)v180;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v180, 1, 1, v144);
      uint64_t v146 = v183;
      v147 = v189;
      uint64_t v148 = v182;
      (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v143, v189, v182);
      unint64_t v149 = (*(unsigned __int8 *)(v146 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
      uint64_t v150 = (char *)swift_allocObject();
      *((void *)v150 + 2) = 0;
      *((void *)v150 + 3) = 0;
      *((void *)v150 + 4) = v118;
      (*(void (**)(char *, char *, uint64_t))(v146 + 32))(&v150[v149], v143, v148);
      swift_retain();
      sub_1000713D0(v145, (uint64_t)&unk_100958C50, (uint64_t)v150);
      swift_release_n();
      swift_release();
      (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
      goto LABEL_78;
    }
    swift_bridgeObjectRelease();
    type metadata accessor for ActivityAuthorizationInfo();
    swift_allocObject();
    ActivityAuthorizationInfo.init()();
    if (ActivityAuthorizationInfo.areActivitiesEnabled.getter())
    {
      BOOL v123 = v170;
      static WOLog.dataLink.getter();
      unint64_t v124 = Logger.logObject.getter();
      os_log_type_t v125 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v126 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v126 = 0;
        _os_log_impl((void *)&_mh_execute_header, v124, v125, "Live activities are enabled", v126, 2u);
        swift_slowDealloc();
      }

      uint64_t v127 = *(void (**)(char *, uint64_t))(v191 + 8);
      v191 += 8;
      v127(v123, v190);
      uint64_t v128 = type metadata accessor for PushType();
      uint64_t v129 = (uint64_t)v172;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v172, 1, 1, v128);
      uint64_t v159 = static Activity.request(attributes:content:pushType:)();
      sub_10008DB18(v129, &qword_100958BE8);
      unint64_t v160 = v169;
      static WOLog.dataLink.getter();
      swift_retain_n();
      id v161 = Logger.logObject.getter();
      os_log_type_t v162 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v161, v162))
      {
        unint64_t v164 = (uint8_t *)swift_slowAlloc();
        uint64_t v165 = swift_slowAlloc();
        v196 = (char *)v127;
        uint64_t v199 = v159;
        v200 = (void *)v165;
        *(_DWORD *)unint64_t v164 = 136315138;
        swift_retain();
        uint64_t v166 = String.init<A>(describing:)();
        uint64_t v199 = sub_10008F1F4(v166, v167, (uint64_t *)&v200);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v161, v162, "Started activity: %s", v164, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        swift_release();
        ((void (*)(char *, uint64_t))v196)(v160, v190);
      }
      else
      {
        swift_release_n();

        swift_release();
        v127(v160, v190);
      }
      goto LABEL_77;
    }
    unint64_t v151 = v171;
    static WOLog.dataLink.getter();
    v152 = Logger.logObject.getter();
    os_log_type_t v153 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v152, v153))
    {
      unint64_t v154 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v154 = 0;
      _os_log_impl((void *)&_mh_execute_header, v152, v153, "Live activities are not enabled", v154, 2u);
      swift_slowDealloc();
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v191 + 8))(v151, v190);
LABEL_74:
    (*(void (**)(char *, uint64_t))(v183 + 8))(v189, v182);
    (*(void (**)(char *, char *))(v186 + 8))(v198, v197);
    return v76[1](v188, v195);
  }
  uint64_t v106 = v196;
  if (!v196)
  {
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  if (v181 == (uint64_t *)1)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v130 = v173;
    static WOLog.dataLink.getter();
    swift_retain_n();
    uint64_t v131 = Logger.logObject.getter();
    os_log_type_t v132 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = (uint64_t)v106;
      uint64_t v134 = (uint8_t *)swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      uint64_t v199 = v133;
      v200 = (void *)v135;
      *(_DWORD *)uint64_t v134 = 136315138;
      swift_retain();
      uint64_t v136 = String.init<A>(describing:)();
      uint64_t v199 = sub_10008F1F4(v136, v137, (uint64_t *)&v200);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v138 = "Ignoring tear down of existing activity %s as we are waiting for a publisher update.";
LABEL_67:
      _os_log_impl((void *)&_mh_execute_header, v131, v132, v138, v134, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
LABEL_68:
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v191 + 8))(v130, v190);
LABEL_77:
    (*(void (**)(char *, uint64_t))(v183 + 8))(v189, v182);
LABEL_78:
    (*(void (**)(char *, char *))(v186 + 8))(v198, v197);
    return v185[1](v188, v195);
  }
  if (v181 == (uint64_t *)2)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    char v107 = v174;
    static WOLog.dataLink.getter();
    swift_retain_n();
    uint64_t v108 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = (uint8_t *)swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      *(_DWORD *)uint64_t v110 = 136315138;
      uint64_t v199 = (uint64_t)v196;
      v200 = (void *)v111;
      swift_retain();
      uint64_t v112 = String.init<A>(describing:)();
      uint64_t v199 = sub_10008F1F4(v112, v113, (uint64_t *)&v200);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "Ending current activity %s as the workout has ended.", v110, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v106 = v196;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v191 + 8))(v107, v190);
    uint64_t v156 = type metadata accessor for TaskPriority();
    uint64_t v157 = (uint64_t)v180;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v180, 1, 1, v156);
    uint64_t v158 = (void *)swift_allocObject();
    v158[2] = 0;
    v158[3] = 0;
    v158[4] = v106;
    swift_retain();
    sub_1000713D0(v157, (uint64_t)&unk_100958C40, (uint64_t)v158);
    swift_release_n();
    swift_release();
    goto LABEL_77;
  }
  if (v181 == (uint64_t *)3)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v130 = v175;
    static WOLog.dataLink.getter();
    swift_retain_n();
    uint64_t v131 = Logger.logObject.getter();
    os_log_type_t v132 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v139 = (uint64_t)v106;
      uint64_t v134 = (uint8_t *)swift_slowAlloc();
      uint64_t v140 = swift_slowAlloc();
      uint64_t v199 = v139;
      v200 = (void *)v140;
      *(_DWORD *)uint64_t v134 = 136315138;
      swift_retain();
      uint64_t v141 = String.init<A>(describing:)();
      uint64_t v199 = sub_10008F1F4(v141, v142, (uint64_t *)&v200);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v138 = "Ignoring tear down of existing activity %s as we are waiting for a timeout";
      goto LABEL_67;
    }
    goto LABEL_68;
  }
LABEL_88:
  v200 = v62;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_100033650()
{
  uint64_t v50 = v0;
  if (v0[19])
  {
    swift_errorRetain();
    swift_release();
    static WOLog.trainingLoad.getter();
    swift_errorRetain();
    swift_errorRetain();
    id v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = v0[28];
    uint64_t v6 = v0[24];
    uint64_t v5 = v0[25];
    if (v3)
    {
      uint64_t v48 = v0[28];
      uint64_t v46 = v0[24];
      uint64_t v7 = swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      v49[0] = v45;
      uint64_t v8 = _typeName(_:qualified:)();
      v0[17] = sub_10008F1F4(v8, v9, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      v0[18] = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v44 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Effort Association Updated in Fitness with error: %@. Re-establishing query", (uint8_t *)v7, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v48, v46);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v24 = (char *)Strong;
      swift_getKeyPath();
      v0[13] = v24;
      sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v0[14] = v24;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      uint64_t result = swift_release();
      uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(void *)&v24[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery] = v28;
      v0[15] = v24;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();

      swift_release();
    }
    swift_beginAccess();
    uint64_t v29 = swift_unknownObjectWeakLoadStrong();
    if (v29)
    {
      uint64_t v30 = (void *)v29;
      sub_10001FBE0();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    goto LABEL_19;
  }
  swift_beginAccess();
  uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
  v0[32] = v11;
  if (!v11)
  {
LABEL_16:
    swift_release();
    static WOLog.trainingLoad.getter();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v0[25];
    uint64_t v35 = v0[26];
    uint64_t v36 = v0[24];
    if (v33)
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v38 = _typeName(_:qualified:)();
      v0[16] = sub_10008F1F4(v38, v39, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s Effort Association Updated in Fitness, relationships or self is nil. Exiting without updating efforts", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v0[1];
    return v40();
  }
  uint64_t v12 = v11;
  uint64_t v13 = v0[21];
  if (!v13)
  {

    goto LABEL_16;
  }
  static WOLog.trainingLoad.getter();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = v0[27];
  uint64_t v19 = v0[24];
  uint64_t v18 = v0[25];
  if (v16)
  {
    uint64_t v47 = v0[27];
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    v49[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v21 = _typeName(_:qualified:)();
    v0[11] = sub_10008F1F4(v21, v22, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s Effort Association Updated in Fitness successfully", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v47, v19);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_getKeyPath();
  uint64_t v41 = swift_task_alloc();
  *(void *)(v41 + 16) = v12;
  *(void *)(v41 + 24) = 0;
  v0[12] = v12;
  sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v42 = (void *)swift_task_alloc();
  v0[33] = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_1000E88DC;
  uint64_t v43 = v0[22];
  return sub_100021154(v13, v43);
}

uint64_t sub_100033E6C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  os_log_type_t v15 = *(void **)&a1[OBJC_IVAR___CHHistoryDataProvider_queue];
  if (!v15) {
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)(a2 + 16);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  swift_bridgeObjectRetain();
  id v17 = v15;
  char v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  aBlock[0] = _swiftEmptyDictionarySingleton;
  uint64_t v35 = _swiftEmptyDictionarySingleton;
  uint64_t v19 = *(void *)(v16 + 16);
  if (v19)
  {
    uint64_t v20 = (void *)(v16 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_1004B90FC(&v35, v20, (void (*)(void *@<X8>))aBlock);
      v20 += 5;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease_n();
    uint64_t v21 = v35;
    unint64_t v22 = (void *)aBlock[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v22 = _swiftEmptyDictionarySingleton;
    uint64_t v21 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = sub_100034D44((uint64_t)v21, (uint64_t)v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a1;
  v25[3] = a2;
  unsigned char v25[4] = v30;
  v25[5] = v23;
  aBlock[4] = sub_1000E8784;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008CB700;
  uint64_t v26 = _Block_copy(aBlock);
  BOOL v27 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v32);
}

unint64_t sub_100034300()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v41, 0, sizeof(v41));
  }
  sub_100074830((uint64_t)v41, (uint64_t)v42);
  if (v43)
  {
    if (swift_dynamicCast())
    {
      sub_1000E78BC();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      uint64_t v20 = v42[0];
      LODWORD(v21) = v42[1];
      LODWORD(v22) = v42[2];
      LODWORD(v23) = v42[3];
      LODWORD(v24) = v42[4];
      LODWORD(v25) = v42[5];
      LODWORD(v26) = v42[6];
      id v27 = [v0 standardUserDefaults];
      NSString v28 = String._bridgeToObjectiveC()();
      unsigned __int8 v38 = [v27 hk_keyExists:v28];

      if (v38)
      {
        sub_1000939A4(v39, v40);
      }
      else
      {
        id v29 = [v0 standardUserDefaults];
        uint64_t v30 = 0x1000000000000;
        if (!v26) {
          uint64_t v30 = 0;
        }
        uint64_t v31 = 0x10000000000;
        if (!v25) {
          uint64_t v31 = 0;
        }
        uint64_t v32 = &_mh_execute_header;
        if (!v24) {
          uint64_t v32 = 0;
        }
        uint64_t v33 = 0x1000000;
        if (!v23) {
          uint64_t v33 = 0;
        }
        uint64_t v34 = 0x10000;
        if (!v22) {
          uint64_t v34 = 0;
        }
        uint64_t v35 = 256;
        if (!v21) {
          uint64_t v35 = 0;
        }
        BOOL v36 = sub_1000664E4(v35 | v20 | v34 | v33 | (unint64_t)v32 | v31 | v30) == 5;
        NSString v37 = String._bridgeToObjectiveC()();
        [v29 setBool:v36 forKey:v37];
        sub_1000939A4(v39, v40);
      }
      swift_release();
      goto LABEL_11;
    }
  }
  else
  {
    sub_100074898((uint64_t)v42);
  }
  id v4 = [v0 standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  unsigned __int8 v6 = [v4 hk_keyExists:v5];

  if ((v6 & 1) == 0)
  {
    id v7 = [v0 standardUserDefaults];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setBool:0 forKey:v8];
  }
  id v9 = [v0 standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  char v11 = [v9 BOOLForKey:v10];

  unint64_t v12 = sub_10002345C(v11, v11, 0, 0);
  swift_release();
  uint64_t v21 = (v12 >> 8) & 1;
  LODWORD(v20) = v12 & 1;
  uint64_t v22 = (v12 >> 16) & 1;
  uint64_t v23 = (v12 >> 24) & 1;
  uint64_t v24 = HIDWORD(v12) & 1;
  uint64_t v25 = (v12 >> 40) & 1;
  uint64_t v26 = HIWORD(v12) & 1;
LABEL_11:
  uint64_t v13 = 0x1000000000000;
  if (!v26) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x10000000000;
  if (!v25) {
    uint64_t v14 = 0;
  }
  os_log_type_t v15 = &_mh_execute_header;
  if (!v24) {
    os_log_type_t v15 = 0;
  }
  uint64_t v16 = 0x1000000;
  if (!v23) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x10000;
  if (!v22) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 256;
  if (!v21) {
    uint64_t v18 = 0;
  }
  return v18 | v20 | v17 | v16 | (unint64_t)v15 | v14 | v13;
}

uint64_t sub_100034794()
{
  uint64_t v2 = v0[8];
  id v1 = (uint64_t *)v0[9];
  uint64_t v3 = v0[7];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v3);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    unsigned __int8 v6 = (char *)v0[6];
    uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_historyDataProvider];
    if (*(unsigned char *)(v7 + OBJC_IVAR___CHHistoryDataProvider_hasInitialWorkouts) == 1
      && (*(unsigned char *)(v7 + OBJC_IVAR___CHHistoryDataProvider_hasInitialMindfulnessSessions) & 1) != 0
      || *(unsigned char *)(v7 + OBJC_IVAR___CHHistoryDataProvider_shouldForceReload) == 1)
    {
      unsigned __int8 v8 = [*(id *)(v7 + OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider) isRetrying];
      unsigned __int8 v6 = (char *)v0[6];
    }
    else
    {
      unsigned __int8 v8 = 1;
    }
    swift_getKeyPath();
    uint64_t v9 = swift_task_alloc();
    *(void *)(v9 + 16) = v6;
    *(unsigned char *)(v9 + 24) = v8;
    v0[13] = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
    v0[2] = v6;
    v0[14] = sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    NSString v10 = v6;
    uint64_t v11 = swift_bridgeObjectRetain();
    unint64_t v12 = sub_100014D08(v11, (uint64_t)v10);

    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v12;
    v0[3] = v10;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    v0[15] = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_getKeyPath();
    v0[4] = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange];
    v0[16] = v14;
    swift_bridgeObjectRetain();
    os_log_type_t v15 = (void *)swift_task_alloc();
    v0[17] = v15;
    void *v15 = v0;
    v15[1] = sub_10000A538;
    return sub_100013FFC(v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for ActivitySharingTabView(id *a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for ActivitySharingTabView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  unsigned __int8 v6 = *(void **)(a2 + 16);
  NSString v5 = *(void **)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  unsigned __int8 v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  a1[4] = v8;
  a1[5] = v7;
  uint64_t v9 = *(void **)(a2 + 48);
  NSString v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  uint64_t v11 = *(void **)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  a1[8] = v11;
  a1[9] = v12;
  uint64_t v34 = *(void **)(a2 + 80);
  uint64_t v35 = *(void *)(a2 + 88);
  a1[10] = v34;
  a1[11] = v35;
  BOOL v36 = *(void **)(a2 + 96);
  NSString v37 = *(void **)(a2 + 104);
  a1[12] = v36;
  a1[13] = v37;
  uint64_t v13 = *(void **)(a2 + 120);
  unsigned __int8 v38 = *(void **)(a2 + 112);
  a1[14] = v38;
  a1[15] = v13;
  uint64_t v39 = v13;
  unint64_t v40 = *(void **)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 136);
  a1[16] = v40;
  a1[17] = v14;
  uint64_t v41 = *(void *)(a2 + 152);
  a1[18] = *(void *)(a2 + 144);
  a1[19] = v41;
  uint64_t v15 = *(void *)(a2 + 168);
  a1[20] = *(void *)(a2 + 160);
  a1[21] = v15;
  uint64_t v16 = *(void *)(a2 + 184);
  a1[22] = *(void *)(a2 + 176);
  a1[23] = v16;
  uint64_t v42 = *(void **)(a2 + 200);
  a1[24] = *(void *)(a2 + 192);
  a1[25] = v42;
  a1[26] = *(void *)(a2 + 208);
  id v17 = v3;
  id v18 = v4;
  id v19 = v6;
  id v20 = v5;
  id v21 = v8;
  id v22 = v7;
  id v23 = v9;
  id v24 = v10;
  id v25 = v11;
  swift_retain();
  id v26 = v34;
  swift_retain();
  id v27 = v36;
  id v28 = v37;
  id v29 = v38;
  id v30 = v39;
  id v31 = v40;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = v42;
  swift_retain();
  return a1;
}

uint64_t sub_100034D44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned __int8 v8 = (uint64_t *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)&v2[OBJC_IVAR___CHHistoryDataProvider_queue];
  if (v9)
  {
    *unsigned __int8 v8 = v9;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
    id v10 = v9;
    char v11 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
    if (v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1000DE6E4((unint64_t)&off_1008B6AA8, a1);
      swift_bridgeObjectRelease();
      v20[0] = v12;
      swift_bridgeObjectRetain();
      uint64_t v13 = v2;
      swift_bridgeObjectRetain();
      sub_10001F708(v20, a1, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v14 = v20[0];
      uint64_t v15 = sub_1000DF250(a2);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1000DE560((unint64_t)v15, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20[0] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100010974(v20, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v20[0];
      v20[0] = (uint64_t)&off_1008B6AF8;
      sub_1000350F8(v14);
      sub_1000350F8(v17);
      return v20[0];
    }
    __break(1u);
  }
  __break(1u);
  swift_bridgeObjectRelease();

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100034FA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v6 <= v4[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v5 <= v6) {
    int64_t v16 = v5 + v3;
  }
  else {
    int64_t v16 = v5;
  }
  char v4 = sub_100088224(isUniquelyReferenced_nonNull_native, v16, 1, v4, a2);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v3) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v10 = v4[2];
  if ((v4[3] >> 1) - v10 < v3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  char v11 = &v4[2 * v10 + 4];
  if (a1 + 32 < (unint64_t)&v11[2 * v3] && (unint64_t)v11 < a1 + 32 + 16 * v3) {
    goto LABEL_24;
  }
  memcpy(v11, (const void *)(a1 + 32), 16 * v3);
  if (!v3)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v4;
    return result;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFADD__(v13, v3);
  uint64_t v15 = v13 + v3;
  if (!v14)
  {
    v4[2] = v15;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000350F8(uint64_t a1)
{
  return sub_100034FA0(a1, &qword_10094E828);
}

void sub_100035104()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___CHFitnessAppBadgeAggregator_activitySharingClient);
  if (v1)
  {
    id v2 = objc_allocWithZone((Class)type metadata accessor for BackgroundTaskAssertion());
    id v3 = v1;
    char v4 = [v2 init];
    id v5 = [self sharedApplication];
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = sub_100216654;
    uint64_t v19 = v6;
    BOOL v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    int64_t v16 = sub_100070394;
    uint64_t v17 = &unk_1008BC1A8;
    uint64_t v7 = _Block_copy(&v14);
    swift_release();
    id v8 = [v5 beginBackgroundTaskWithExpirationHandler:v7];
    _Block_release(v7);

    uint64_t v9 = &v4[OBJC_IVAR___CHBackgroundTaskAssertion_identifier];
    *(void *)uint64_t v9 = v8;
    v9[8] = 0;
    v4[OBJC_IVAR___CHBackgroundTaskAssertion_state] = 1;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    *(void *)(v11 + 24) = v10;
    id v18 = sub_1000EA994;
    uint64_t v19 = v11;
    BOOL v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    int64_t v16 = sub_10000D1F8;
    uint64_t v17 = &unk_1008BC1F8;
    unint64_t v12 = _Block_copy(&v14);
    uint64_t v13 = v4;
    swift_release();
    [v3 appBadgeCountWithCompletion:v12];
    _Block_release(v12);
  }
}

uint64_t sub_100035350(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  int64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for CatalogTipSection();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000AFA94((uint64_t *)&unk_100955650);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v76 = v18;
    uint64_t v77 = v17;
    uint64_t v20 = v16[1];
    void *v15 = *v16;
    v15[1] = v20;
    id v21 = (void *)v16[2];
    id v22 = (void *)v16[3];
    v15[2] = v21;
    v15[3] = v22;
    *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
    uint64_t v23 = *(int *)(v17 + 36);
    char v78 = v15;
    id v24 = (char *)v15 + v23;
    uint64_t v75 = v16;
    id v25 = (char *)v16 + v23;
    uint64_t v26 = type metadata accessor for ShelfLockupAttributedTagStrings();
    id v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    id v28 = v21;
    id v29 = v22;
    v27(v24, v25, v26);
    id v30 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v31 = v30[5];
    id v32 = &v24[v31];
    uint64_t v33 = &v25[v31];
    uint64_t v34 = type metadata accessor for Artwork();
    uint64_t v35 = *(void *)(v34 - 8);
    long long v70 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v70(v32, v33, v34);
    uint64_t v36 = v30[6];
    NSString v37 = &v24[v36];
    unsigned __int8 v38 = &v25[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)NSString v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = v30[7];
    uint64_t v41 = &v24[v40];
    uint64_t v42 = &v25[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = v30[8];
    __dst = &v24[v44];
    uint64_t v73 = v24;
    uint64_t v45 = &v25[v44];
    uint64_t v71 = v35;
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46(v45, 1, v34))
    {
      uint64_t v47 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      v70(__dst, v45, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v34);
    }
    uint64_t v48 = v30[9];
    uint64_t v49 = &v73[v48];
    uint64_t v50 = &v25[v48];
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    *((void *)v49 + 1) = v51;
    uint64_t v52 = v30[10];
    uint64_t v53 = &v73[v52];
    uint64_t v54 = &v25[v52];
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    uint64_t v56 = v30[11];
    unint64_t v57 = &v73[v56];
    int v58 = &v25[v56];
    uint64_t v59 = *((void *)v58 + 1);
    *(void *)unint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    uint64_t v60 = v30[12];
    unint64_t v61 = &v73[v60];
    uint64_t v74 = &v25[v60];
    uint64_t v62 = type metadata accessor for URL();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63(v61, v74, v62);
    uint64_t v64 = *(int *)(v77 + 40);
    uint64_t v65 = (void *)((char *)v78 + v64);
    uint64_t v66 = (void *)((char *)v75 + v64);
    uint64_t v67 = v66[1];
    void *v65 = *v66;
    v65[1] = v67;
    uint64_t v68 = *(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56);
    swift_bridgeObjectRetain();
    v68(v78, 0, 1, v77);
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  return a1;
}

uint64_t sub_100035794()
{
  sub_10007E4EC((void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_networkEvaluator), *(void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_networkEvaluator + 24));
  dispatch thunk of NetworkEvaluating.queryNetworkConditions()();
  uint64_t v1 = NetworkConditions.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == NetworkConditions.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    swift_release();
    uint64_t v7 = *(void **)(v0 + 288);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_OWORD *)(v0 + 64) = xmmword_100750D10;
    *(unsigned char *)(v0 + 80) = 2;
    id v8 = v7;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 0;
    id v9 = v8;
    static Published.subscript.setter();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 96);
  int v14 = *(unsigned __int8 *)(v0 + 104);
  if (v14 == 1)
  {
    sub_1000904DC(v12, v13, 1u);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 288);
    sub_1000904DC(v12, v13, v14);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_OWORD *)(v0 + 40) = xmmword_100750CF0;
    *(unsigned char *)(v0 + 56) = 2;
    id v16 = v15;
    static Published.subscript.setter();
  }
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 408);
  sub_10007E4EC((void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_recommendationClient), *(void *)(*(void *)(v0 + 288)+ OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_recommendationClient+ 24));
  UUID.init()();
  static RecommendationConstants.personalizationHeroContentRequestVersion.getter();
  PersonalizationInferenceRequestOptions.init(correlationKey:eventType:source:trigger:version:)();
  dispatch thunk of RecommendationClientProtocol.fetchPersonalizationInferenceResponse(options:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  return _swift_task_switch(sub_10000ECC0, 0, 0);
}

void sub_100035B48(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v23 = a4;
  uint64_t v8 = sub_1000AFA94(&qword_100953718);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
  id v11 = [(id)swift_getObjCClassFromMetadata() activityMoveModeChangeType];
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100756B20;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a3;
    aBlock[0] = v13;
    specialized Array._endMutation()();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    *(void *)(v15 + ((v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
    id v16 = objc_allocWithZone((Class)HKSampleQuery);
    sub_10007E2D8(0, &qword_100953720);
    id v17 = a2;
    id v18 = a3;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1000EB610;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000696FC;
    void aBlock[3] = &unk_1008BE890;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = [v16 initWithSampleType:v12 predicate:0 limit:1 sortDescriptors:isa resultsHandler:v20];

    _Block_release(v20);
    swift_release();
    [*(id *)(v23 + 32) executeQuery:v21];
  }
  else
  {
    __break(1u);
  }
}

void sub_100035E0C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if ([v0 collectionView])
  {
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = ObjectType;
    id v5 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095F640));
    uint64_t v6 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v7 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
    uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    *(void *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = v6;

    uint64_t v9 = *(void **)&v0[v7];
    if (v9)
    {
      *(void *)(swift_allocObject() + 16) = v1;
      id v10 = v9;
      id v11 = v1;
      uint64_t v12 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      sub_1000AFA94(&qword_10095F648);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
      v12(v16, 0);

      uint64_t v13 = *(void **)&v1[v7];
      if (v13)
      {
        swift_allocObject();
        swift_unknownObjectWeakInit();
        id v14 = v13;
        uint64_t v15 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
        sub_1000AFA94(&qword_10095F648);
        UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
        v15(v16, 0);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100036024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[36] = a4;
  sub_1000AFA94((uint64_t *)&unk_10095BF60);
  v4[37] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Locale();
  v4[38] = v5;
  v4[39] = *(void *)(v5 - 8);
  v4[40] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PersonalizationCandidate();
  v4[41] = v6;
  v4[42] = *(void *)(v6 - 8);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  sub_1000AFA94(&qword_100966B60);
  v4[45] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PersonalizationShelfDescriptor();
  v4[46] = v7;
  v4[47] = *(void *)(v7 - 8);
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  type metadata accessor for UUID();
  v4[50] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for PersonalizationInferenceRequestOptions();
  v4[51] = v8;
  v4[52] = *(void *)(v8 - 8);
  v4[53] = swift_task_alloc();
  uint64_t v9 = sub_1000AFA94(&qword_10095FD48);
  v4[54] = v9;
  v4[55] = *(void *)(v9 - 8);
  v4[56] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PersonalizationInferenceResponse();
  v4[57] = v10;
  v4[58] = *(void *)(v10 - 8);
  v4[59] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[60] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[61] = v12;
  v4[62] = v11;
  return _swift_task_switch(sub_100035794, v12, v11);
}

void sub_100036394()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability;
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability);
  sub_1000CEE80();
  if (qword_10094B130 != -1) {
    swift_once();
  }
  if ((byte_10096A4E0 & 1) == 0)
  {
    if (qword_10094B138 != -1) {
      swift_once();
    }
    if ((byte_10096A4E1 & 1) == 0)
    {
      id v24 = self;
      id v10 = [v24 standardUserDefaults];
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v25 = v2;
      uint64_t v12 = v11;
      id v13 = [v10 integerForKey:v11];

      uint64_t v2 = v25;
      if ((unint64_t)v13 <= 3 && *(id *)(v0 + v8) != v13)
      {
        id v14 = [v24 standardUserDefaults];
        uint64_t v15 = *(void *)(v0 + v8);
        NSString v16 = String._bridgeToObjectiveC()();
        [v14 setInteger:v15 forKey:v16];

        uint64_t v2 = v25;
      }
    }
  }
  if (*(void *)(v0 + v8) != v9)
  {
    static os_log_type_t.default.getter();
    id v17 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10074E640;
    *(void *)(v18 + 56) = &type metadata for Int;
    *(void *)(v18 + 64) = &protocol witness table for Int;
    *(void *)(v18 + 32) = v9;
    uint64_t v19 = *(void *)(v0 + v8);
    *(void *)(v18 + 96) = &type metadata for Int;
    *(void *)(v18 + 104) = &protocol witness table for Int;
    *(void *)(v18 + 72) = v19;
    id v20 = v17;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    sub_1000DF004();
    id v21 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1005B1438;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    void aBlock[3] = &unk_1008D0758;
    uint64_t v23 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  }
}

void sub_10003681C(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.PrivateDesign();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Font.TextStyle();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10;
  id v12 = [self keyColors];
  uint64_t v35 = v2;
  uint64_t v36 = a1;
  uint64_t v34 = v3;
  if (!v12)
  {
    uint64_t v15 = static Color.white.getter();
    goto LABEL_5;
  }
  id v13 = v12;
  id v14 = [v12 nonGradientTextColor];

  if (v14)
  {
    uint64_t v15 = Color.init(uiColor:)();
LABEL_5:
    uint64_t v37 = v15;
    uint64_t v16 = Text.foregroundStyle<A>(_:)();
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    sub_1000A06C0(v7, v9, v11 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v6, enum case for Font.TextStyle.body(_:), v33);
    uint64_t v23 = v32;
    static Font.PrivateDesign.compactRounded.getter();
    static Font.system(_:design:weight:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v35);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    uint64_t v24 = Text.font(_:)();
    uint64_t v26 = v25;
    LOBYTE(v22) = v27;
    uint64_t v29 = v28;
    swift_release();
    sub_1000A06C0(v16, v18, v20);
    swift_bridgeObjectRelease();
    id v30 = v36;
    *uint64_t v36 = v24;
    v30[1] = v26;
    *((unsigned char *)v30 + 16) = v22 & 1;
    v30[3] = v29;
    return;
  }
  __break(1u);
}

uint64_t sub_100036E58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - v7;
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v40 - v9;
  uint64_t v10 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v41 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - v17;
  static Log.default.getter();
  v19._countAndFlagsBits = 0xD00000000000006DLL;
  v19._object = (void *)0x80000001007CD810;
  v20._object = (void *)0x80000001007CD930;
  v20._countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v19, v20);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v44 = v13;
  uint64_t v42 = v21;
  v21(v18, v13);
  uint64_t v22 = (uint64_t)&v1[OBJC_IVAR___NLTVConnectionManager_state];
  swift_beginAccess();
  sub_10006B688(v22, (uint64_t)v12);
  LODWORD(v22) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_10006B590((uint64_t)v12);
  if (v22 == 2)
  {
    sub_10007E4EC(&v1[OBJC_IVAR___NLTVConnectionManager_participantClient], *(void *)&v1[OBJC_IVAR___NLTVConnectionManager_participantClient + 24]);
    dispatch thunk of RemoteParticipantClientProtocol.beginDiscoveringParticipantsWithRole(_:)();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v1;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1000E8358;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1000E02C8;
    *(void *)(v26 + 24) = v25;
    char v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v40, v8, v2);
    unint64_t v28 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v29 + v28, v27, v2);
    id v30 = (void *)(v29 + ((v4 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v30 = sub_1000E2B90;
    v30[1] = v26;
    uint64_t v31 = v1;
    id v32 = v43;
    Promise.init(asyncOperation:)();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v3 + 8);
    v33(v8, v2);
    uint64_t v34 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    v34(sub_10006D36C, v35);
    swift_release();
    swift_release();
    v33(v32, v2);
    uint64_t v36 = v41;
    static Log.default.getter();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "[TV Connection] Began discovering advertising TVs", v39, 2u);
      swift_slowDealloc();
    }

    return v42(v36, v44);
  }
  return result;
}

uint64_t sub_10003737C@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100963D38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000AFA94(&qword_100963D40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000A132C(&qword_100963D48, &qword_100963D40);
  static PredicateExpressions.build_Arg<A>(_:)();
  v13[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1000AFA94(&qword_100963D50);
  a2[4] = sub_1000375C0();
  sub_1000B1710(a2);
  sub_1000A132C(&qword_100963D70, &qword_100963D38);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1000375C0()
{
  unint64_t result = qword_100963D58;
  if (!qword_100963D58)
  {
    sub_1000A1370(&qword_100963D50);
    sub_1000A132C(&qword_100963D60, &qword_100963D40);
    sub_1000E3894();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963D58);
  }
  return result;
}

uint64_t sub_100037660(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(void *)(v8 + 96) = v19;
  *(void *)(v8 + 104) = v21;
  *(unsigned char *)(v8 + 179) = v20;
  *(unsigned char *)(v8 + 178) = a8;
  *(unsigned char *)(v8 + 177) = a7;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 88) = a6;
  *(unsigned char *)(v8 + 176) = a4;
  char v11 = a7 & 1;
  *(void *)(v8 + 72) = a1;
  uint64_t v12 = type metadata accessor for MetricDetailViewModel();
  *(void *)(v8 + 112) = v12;
  *(void *)(v8 + 120) = *(void *)(v12 - 8);
  *(void *)(v8 + 128) = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_100955590);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v8 + 144) = v13;
  if (a4 >= 4u)
  {
    if (a4 == 38)
    {
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v8 + 160) = v16;
      *uint64_t v16 = v8;
      v16[1] = sub_100434854;
      return sub_100434A4C(v13, a6, v11);
    }
    else
    {
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v8 + 168) = v17;
      *uint64_t v17 = v8;
      v17[1] = sub_100434950;
      return sub_1004361BC(v13, a4, a6, v11);
    }
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v8 + 152) = v14;
    *uint64_t v14 = v8;
    v14[1] = sub_100015650;
    return sub_10002FAD0(v13, a4, a6, v11);
  }
}

uint64_t sub_100037904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for Image.ResizingMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CatalogTipCardView();
  v61[1] = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)&v90[0])
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
    uint64_t v12 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v72 = v99;
    uint64_t v73 = v98;
    uint64_t v70 = v101;
    uint64_t v71 = v100;
    uint64_t v68 = v103;
    uint64_t v69 = v102;
    unsigned __int8 v13 = static Edge.Set.all.getter();
    uint64_t v66 = 0x4020000000000000;
    uint64_t v67 = v13;
    uint64_t v64 = 0x4000000000000000;
    uint64_t v65 = 16777473;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
  }
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  uint64_t v14 = Text.init(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  char v21 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v104 = v14;
  uint64_t v105 = v16;
  char v106 = v20;
  uint64_t v107 = v18;
  char v108 = v21;
  uint64_t v109 = v22;
  uint64_t v110 = v23;
  uint64_t v111 = v24;
  uint64_t v112 = v25;
  char v113 = 0;
  static Alignment.leading.getter();
  sub_1000E0DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v90, 0.0, 1, 0.0, 1);
  sub_1000A06C0(v14, v16, v20);
  swift_bridgeObjectRelease();
  long long v82 = v90[8];
  long long v83 = v90[9];
  long long v84 = v90[10];
  long long v85 = v90[11];
  long long v78 = v90[4];
  long long v79 = v90[5];
  long long v80 = v90[6];
  long long v81 = v90[7];
  long long v74 = v90[0];
  long long v75 = v90[1];
  long long v76 = v90[2];
  long long v77 = v90[3];
  static Font.caption.getter();
  uint64_t v27 = v62;
  uint64_t v26 = v63;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v6, enum case for Font.Leading.tight(_:), v63);
  uint64_t v28 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  uint64_t KeyPath = swift_getKeyPath();
  int v30 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v31 = swift_getKeyPath();
  long long v32 = v82;
  long long v33 = v83;
  v87[8] = v82;
  v87[9] = v83;
  long long v34 = v84;
  long long v35 = v85;
  v87[10] = v84;
  v87[11] = v85;
  long long v36 = v78;
  long long v37 = v79;
  v87[4] = v78;
  v87[5] = v79;
  long long v38 = v80;
  long long v39 = v81;
  v87[6] = v80;
  v87[7] = v81;
  long long v40 = v74;
  long long v41 = v75;
  v87[0] = v74;
  v87[1] = v75;
  long long v42 = v76;
  long long v43 = v77;
  v87[2] = v76;
  v87[3] = v77;
  *(void *)&long long v88 = KeyPath;
  *((void *)&v88 + 1) = v28;
  LODWORD(v89[0]) = v30;
  *((void *)&v89[0] + 1) = v31;
  *(void *)&v89[1] = 2;
  BYTE8(v89[1]) = 0;
  *(_OWORD *)((char *)&v90[11] + 7) = v85;
  *(_OWORD *)((char *)&v90[7] + 7) = v81;
  *(_OWORD *)((char *)&v90[8] + 7) = v82;
  *(_OWORD *)((char *)&v90[9] + 7) = v83;
  *(_OWORD *)((char *)&v90[10] + 7) = v84;
  *(_OWORD *)((char *)&v90[3] + 7) = v77;
  *(_OWORD *)((char *)&v90[4] + 7) = v78;
  *(_OWORD *)((char *)&v90[5] + 7) = v79;
  *(_OWORD *)((char *)&v90[6] + 7) = v80;
  *(_OWORD *)((char *)v90 + 7) = v74;
  *(_OWORD *)((char *)&v90[1] + 7) = v75;
  *(_OWORD *)((char *)&v90[2] + 7) = v76;
  *(_OWORD *)((char *)&v90[12] + 7) = v88;
  *(_OWORD *)((char *)&v90[13] + 7) = v89[0];
  v90[14] = *(_OWORD *)((char *)v89 + 9);
  long long v44 = v90[0];
  long long v45 = v90[1];
  long long v46 = v90[3];
  *(_OWORD *)(a2 + 145) = v90[2];
  *(_OWORD *)(a2 + 129) = v45;
  *(_OWORD *)(a2 + 113) = v44;
  long long v47 = v90[4];
  long long v48 = v90[5];
  long long v49 = v90[7];
  *(_OWORD *)(a2 + 209) = v90[6];
  *(_OWORD *)(a2 + 193) = v48;
  *(_OWORD *)(a2 + 177) = v47;
  *(_OWORD *)(a2 + 161) = v46;
  long long v50 = v90[8];
  long long v51 = v90[10];
  long long v52 = v90[11];
  *(_OWORD *)(a2 + 257) = v90[9];
  *(_OWORD *)(a2 + 273) = v51;
  *(_OWORD *)(a2 + 241) = v50;
  *(_OWORD *)(a2 + 225) = v49;
  long long v53 = v90[12];
  long long v54 = v90[14];
  *(_OWORD *)(a2 + 321) = v90[13];
  *(_OWORD *)(a2 + 337) = v54;
  *(_OWORD *)(a2 + 289) = v52;
  *(_OWORD *)(a2 + 305) = v53;
  v91[8] = v32;
  v91[9] = v33;
  v91[10] = v34;
  v91[11] = v35;
  v91[4] = v36;
  v91[5] = v37;
  v91[6] = v38;
  v91[7] = v39;
  char v86 = 0;
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = 0;
  uint64_t v55 = v73;
  *(void *)(a2 + 16) = v65;
  *(void *)(a2 + 24) = v55;
  uint64_t v56 = v71;
  *(void *)(a2 + 32) = v72;
  *(void *)(a2 + 40) = v56;
  uint64_t v57 = v69;
  *(void *)(a2 + 48) = v70;
  *(void *)(a2 + 56) = v57;
  uint64_t v58 = v67;
  *(void *)(a2 + 64) = v68;
  *(void *)(a2 + 72) = v58;
  *(void *)(a2 + 80) = v64;
  *(void *)(a2 + 88) = 0;
  uint64_t v59 = v66;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = v59;
  *(unsigned char *)(a2 + 112) = 0;
  v91[0] = v40;
  v91[1] = v41;
  v91[2] = v42;
  v91[3] = v43;
  uint64_t v92 = KeyPath;
  uint64_t v93 = v28;
  int v94 = v30;
  uint64_t v95 = v31;
  uint64_t v96 = 2;
  char v97 = 0;
  swift_retain();
  sub_100010A88((uint64_t)v87);
  sub_1000126AC((uint64_t)v91);
  return swift_release();
}

uint64_t sub_100037F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v7 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  v4[20] = v7;
  v4[21] = *(void *)(v7 + 64);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  sub_1000AFA94(&qword_10095F798);
  char v4[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Tips.Status();
  v4[25] = v8;
  v4[26] = *(void *)(v8 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = sub_1000AFA94(&qword_10095F7A0);
  v4[29] = swift_task_alloc();
  v4[30] = sub_1000AFA94(&qword_10095F7A8);
  v4[31] = swift_task_alloc();
  uint64_t v9 = sub_1000AFA94(&qword_10095F7B0);
  v4[32] = v9;
  v4[33] = *(void *)(v9 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = type metadata accessor for CustomizeSummaryTip();
  v4[36] = swift_task_alloc();
  uint64_t v10 = sub_1000AFA94(&qword_10095F7B8);
  v4[37] = v10;
  v4[38] = *(void *)(v10 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = type metadata accessor for MainActor();
  v4[42] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[43] = v12;
  v4[44] = v11;
  return _swift_task_switch(sub_10001C8FC, v12, v11);
}

uint64_t sub_1000382D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE20);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  unsigned __int8 v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    long long v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    unsigned __int8 v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE28);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3464;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1000386B8()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v2 = Error.localizedDescription.getter();
  uint64_t v4 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = v4;
  *(unsigned char *)(v0 + 128) = 1;
  id v5 = v1;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v6 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v7 = v6;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100038880(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE30);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  unsigned __int8 v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    long long v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    unsigned __int8 v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE38);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3470;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100038C60()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100038D14()
{
  swift_getObjectType();
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  id v1 = [self standardUserDefaults];
  id v2 = [v1 dataForKey:@"ActivityDashboardCardConfigurationKey"];

  if (v2)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    sub_1000AFA94(&qword_10094C4B8);
    sub_100198538(&qword_10094C548, &qword_10094C4B8, (void (*)(void))sub_10005AB3C);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v14 = v28;
    uint64_t v15 = *(void *)(v28 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = (char *)(v28 + 49);
      do
      {
        char v17 = *(v16 - 1);
        char v18 = *v16;
        long long v28 = *(_OWORD *)(v16 - 17);
        char v29 = v17;
        char v30 = v18;
        sub_1001938FC((uint64_t)&v28);
        v16 += 24;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long v28 = v14;
    id v19 = v0;
    static Published.subscript.setter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    uint64_t v21 = (void *)HKLogActivity;
    os_log_type_t v22 = v20;
    BOOL v23 = os_log_type_enabled(HKLogActivity, v20);
    uint64_t v24 = v21;
    if (v23)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v26 = _typeName(_:qualified:)();
      uint64_t v31 = sub_10008F1F4(v26, v27, (uint64_t *)&v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v22, "%s Loaded stored configuration", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_1000939A4(v3, v5);

    return swift_release();
  }
  else
  {
    os_log_type_t v6 = static os_log_type_t.default.getter();
    id v7 = (void *)HKLogActivity;
    os_log_type_t v8 = v6;
    if (os_log_type_enabled(HKLogActivity, v6))
    {
      uint64_t v9 = v7;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v11 = _typeName(_:qualified:)();
      uint64_t v31 = sub_10008F1F4(v11, v12, (uint64_t *)&v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "%s No configuration read from file, using default layout instead.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t result = swift_release();
    *((unsigned char *)v0 + OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider_didSetToDefaultConfiguration) = 1;
  }
  return result;
}

uint64_t sub_100039138(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v19 = a1;
    char v20 = 1;
    swift_errorRetain();
    a5(&v19);
    return sub_10006D814(a1, 1);
  }
  else
  {
    a3(v13);
    uint64_t v16 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_10006D8BC, v17);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1000392D4(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1000392DC(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16));
}

uint64_t sub_1000392DC(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v6);
  uint64_t v4 = v6;
  char v7 = 0;
  a1(&v6);

  return sub_10006D814(v4, 0);
}

uint64_t sub_10003936C(uint64_t a1)
{
  return sub_100039374(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100039374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_100039400@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v51 = a2;
  uint64_t v3 = type metadata accessor for Divider();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  long long v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_10094C768) - 8;
  uint64_t v5 = __chkstk_darwin(v48);
  long long v46 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v47 = (uint64_t)&v39 - v7;
  uint64_t v8 = type metadata accessor for AwardsCardView();
  uint64_t v9 = (int *)(v8 - 8);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v43 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_1000AFA94(&qword_10094C770);
  uint64_t v42 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v44 = (char *)&v39 - v16;
  uint64_t v17 = a1 + v9[7];
  v56[3] = type metadata accessor for AwardsCard();
  v56[4] = (uint64_t)&off_1008C3070;
  char v18 = sub_1000B1710(v56);
  sub_1000809EC(v17, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AwardsCard);
  sub_1000AEF2C(a1 + v9[9], (uint64_t)v57, &qword_10094C750);
  v57[40] = *(unsigned char *)(a1 + v9[10]);
  LOBYTE(v17) = static Edge.Set.all.getter();
  sub_100099374((uint64_t)v56, (uint64_t)v52);
  v52[88] = v17;
  long long v53 = xmmword_100751050;
  long long v54 = xmmword_100751050;
  char v55 = 0;
  sub_1000901D4((uint64_t)v56);
  sub_1000AEF2C((uint64_t)v52, (uint64_t)v56, &qword_10094C778);
  v57[89] = 0;
  sub_10008DB18((uint64_t)v52, &qword_10094C778);
  sub_1000809EC(a1, (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AwardsCardView);
  unint64_t v19 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v20 = swift_allocObject();
  sub_100005FD8((uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  sub_1000AFA94(&qword_10094C780);
  sub_10009DBF8();
  unint64_t v41 = v15;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v56, &qword_10094C780);
  uint64_t v40 = v12;
  uint64_t v21 = v44;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v44, v15, v11);
  os_log_type_t v22 = v45;
  Divider.init()();
  id v23 = [self quaternarySystemFillColor];
  uint64_t v24 = Color.init(_:)();
  LOBYTE(v17) = static Edge.Set.all.getter();
  uint64_t v26 = v49;
  uint64_t v25 = v50;
  uint64_t v27 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v22, v50);
  uint64_t v28 = v27 + *(int *)(v48 + 44);
  *(void *)uint64_t v28 = v24;
  *(unsigned char *)(v28 + 8) = v17;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v25);
  uint64_t v29 = v47;
  sub_1000AEEC8(v27, v47, &qword_10094C768);
  char v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v31 = v41;
  uint64_t v32 = v21;
  long long v33 = v21;
  uint64_t v34 = v42;
  v30(v41, v32, v42);
  sub_1000AEF2C(v29, v27, &qword_10094C768);
  int v35 = v51;
  v30(v51, v31, v34);
  uint64_t v36 = sub_1000AFA94((uint64_t *)&unk_10094C7B0);
  sub_1000AEF2C(v27, (uint64_t)&v35[*(int *)(v36 + 48)], &qword_10094C768);
  sub_10008DB18(v29, &qword_10094C768);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v40 + 8);
  v37(v33, v34);
  sub_10008DB18(v27, &qword_10094C768);
  return ((uint64_t (*)(char *, uint64_t))v37)(v31, v34);
}

uint64_t sub_100039970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogTipSectionItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000399D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v42(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  char v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  __dst = (void *)(a1 + v20);
  uint64_t v21 = (const void *)(a2 + v20);
  os_log_type_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v21, 1, v10))
  {
    uint64_t v23 = sub_1000AFA94(&qword_1009512E8);
    memcpy(__dst, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v42(__dst, v21, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  char v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = (void *)(a1 + v32);
  int v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  uint64_t v39 = type metadata accessor for URL();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v37, v38, v39);
  return a1;
}

uint64_t sub_100039C34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FD60);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E337C;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8B4, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003A014(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE10);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE18);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3458;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003A3F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE40);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE48);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3440;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003A7D4()
{
  uint64_t v1 = v0;
  uint64_t v55 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v2 = *(void *)(v55 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v55);
  long long v54 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v45 - v9;
  __chkstk_darwin(v8);
  long long v53 = (char *)&v45 - v11;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_isActive;
  if ((v1[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_isActive] & 1) == 0)
  {
    static Log.default.getter();
    v18._object = (void *)0x80000001007C3030;
    unint64_t v51 = 0x80000001007C3030;
    v18._countAndFlagsBits = 0xD00000000000007BLL;
    v19._countAndFlagsBits = 0x6574617669746361;
    v19._object = (void *)0xEA00000000002928;
    Logger.trace(file:function:)(v18, v19);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v1[v17] = 1;
    sub_1000AFA94(&qword_100950220);
    uint64_t v20 = *(void *)(v2 + 72);
    uint64_t v50 = v10;
    uint64_t v21 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v52 = v21 | 7;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1007526C0;
    uint64_t v23 = v22 + ((v21 + 32) & ~v21);
    sub_100027194(v23);
    sub_100026084(v23 + v20);
    sub_100027640(v23 + 2 * v20);
    sub_100026534(v23 + 3 * v20);
    uint64_t v56 = v22;
    sub_1000DF004();
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    static PromiseConstants.defaultMaxConcurrentOperations.getter();
    sub_1000AFA94(&qword_100950228);
    sub_1000DF754();
    long long v45 = v7;
    static Promise<>.parallel<A>(queue:maxConcurrent:_:)();
    swift_bridgeObjectRelease();

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v1;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1000E5244;
    *(void *)(v26 + 24) = v25;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_1000DDF50;
    *(void *)(v27 + 24) = v26;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v28 = v54;
    uint64_t v29 = v55;
    v49(v54, v7, v55);
    unint64_t v30 = (v3 + ((v21 + 16) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = v30 + 16;
    uint64_t v48 = (v21 + 16) & ~v21;
    uint64_t v31 = swift_allocObject();
    long long v46 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
    v46(v31 + ((v21 + 16) & ~v21), v28, v29);
    uint64_t v32 = (uint64_t (**)(uint64_t))(v31 + v30);
    *uint64_t v32 = sub_10003936C;
    v32[1] = (uint64_t (*)(uint64_t))v27;
    uint64_t v33 = v1;
    uint64_t v34 = v50;
    Promise.init(asyncOperation:)();
    long long v54 = *(char **)(v2 + 8);
    int v35 = v45;
    ((void (*)(char *, uint64_t))v54)(v45, v29);
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = 0xD00000000000007BLL;
    uint64_t v36[3] = v51;
    uint64_t v36[4] = 135;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_100384F8C;
    *(void *)(v37 + 24) = v36;
    uint64_t v38 = v34;
    v49(v35, v34, v29);
    uint64_t v39 = swift_allocObject();
    v46(v39 + v48, v35, v29);
    uint64_t v40 = (uint64_t (**)(uint64_t))(v39 + v30);
    *uint64_t v40 = sub_100384FAC;
    v40[1] = (uint64_t (*)(uint64_t))v37;
    unint64_t v41 = v53;
    Promise.init(asyncOperation:)();
    uint64_t v42 = (uint64_t (*)(char *, uint64_t))v54;
    ((void (*)(char *, uint64_t))v54)(v38, v29);
    uint64_t v43 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = 0;
    *(void *)(v44 + 24) = 0;
    v43(sub_10006D36C, v44);
    swift_release();
    swift_release();
    return v42(v41, v29);
  }
  return result;
}

uint64_t sub_10003ADA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FD40);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FD48);
  uint64_t v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3504;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_1000DC468, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003B180(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE00);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE08);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E344C;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003B560(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FD58);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94((uint64_t *)&unk_100955730);
  uint64_t v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E352C;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_1000DC468, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003B940(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v60 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = type metadata accessor for DateComponents();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v23 = (char *)&v55 - v22;
  if ((a2 & 1) == 0)
  {
    uint64_t v57 = v10;
    uint64_t v58 = v21;
    uint64_t v59 = v20;
    id v62 = 0;
    id v25 = [a1 dateOfBirthComponentsWithError:&v62];
    id v26 = v62;
    if (v25)
    {
      uint64_t v27 = v25;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
      id v28 = v26;

      id v62 = 0;
      id v29 = [a1 biologicalSexWithError:&v62];
      if (v29)
      {
        unint64_t v30 = v29;
        id v31 = v62;
        [v30 biologicalSex];

        Date.init()();
        if (qword_10094A5E8 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1000876DC(v4, (uint64_t)qword_100997610);
        Calendar.date(from:)();
        uint64_t v33 = v57;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v9, 1, v57) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v13, v9, v33);
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v6, v32, v4);
          sub_1000AFA94((uint64_t *)&unk_1009559B0);
          uint64_t v56 = type metadata accessor for Calendar.Component();
          uint64_t v40 = *(void *)(v56 - 8);
          unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_1007509E0;
          unint64_t v55 = v42 + v41;
          (*(void (**)(unint64_t))(v40 + 104))(v42 + v41);
          sub_1000C6A18(v42);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          Calendar.dateComponents(_:from:to:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v6, v4);
          uint64_t v43 = DateComponents.year.getter();
          if ((v44 & 1) == 0)
          {
            uint64_t v24 = v43;
            uint64_t v45 = v59;
            long long v46 = *(void (**)(char *, uint64_t))(v58 + 8);
            v46(v19, v59);
            unint64_t v47 = *(void (**)(char *, uint64_t))(v61 + 8);
            uint64_t v48 = v13;
            uint64_t v49 = v57;
            v47(v48, v57);
            v47(v15, v49);
            v46(v23, v45);
            return v24;
          }
          sub_10032BBE4();
          swift_allocError();
          swift_willThrow();
          uint64_t v50 = v59;
          unint64_t v51 = *(void (**)(char *, uint64_t))(v58 + 8);
          v51(v19, v59);
          uint64_t v52 = *(void (**)(char *, uint64_t))(v61 + 8);
          long long v53 = v13;
          uint64_t v54 = v57;
          v52(v53, v57);
          v52(v15, v54);
          v51(v23, v50);
          goto LABEL_12;
        }
        sub_10023636C((uint64_t)v9);
        sub_10032BBE4();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v33);
      }
      else
      {
        id v35 = v62;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v59);
    }
    else
    {
      id v34 = v62;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
LABEL_12:
    static os_log_type_t.error.getter();
    uint64_t v36 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1007509E0;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_1000AA64C();
    *(void *)(v37 + 32) = 0xD00000000000003DLL;
    *(void *)(v37 + 40) = 0x80000001007C1020;
    id v38 = v36;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  return 34;
}

uint64_t sub_10003C0B0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = (void *)HKLogActivity;
  os_log_type_t v5 = v3;
  if (os_log_type_enabled(HKLogActivity, v3))
  {
    os_log_t v19 = v4;
    uint64_t v6 = swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = _typeName(_:qualified:)();
    uint64_t v20 = sub_10008F1F4(v7, v8, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    id v9 = [self didUpdatePauseStateNotification];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    uint64_t v20 = sub_10008F1F4(v10, v12, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v13 = v19;
    _os_log_impl((void *)&_mh_execute_header, v19, v5, "%s received notification %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 1, 1, v16);
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    sub_1000713D0((uint64_t)v2, (uint64_t)&unk_10094ECA8, (uint64_t)v17);
    return swift_release();
  }
  return result;
}

uint64_t sub_10003C360@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v52 = type metadata accessor for ControlSize();
  uint64_t v48 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v50 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009515B0);
  uint64_t v45 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_1009515B8);
  uint64_t v11 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  os_log_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009515C0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000AFA94(&qword_1009515C8) - 8;
  __chkstk_darwin(v51);
  os_log_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = a1;
  id v20 = a1;
  sub_1000AFA94(&qword_1009515D0);
  sub_1000E1B18();
  Button.init(action:label:)();
  BorderedProminentButtonStyle.init()();
  sub_1000E0758();
  sub_10000CD44((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v21 = v46;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v21);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  uint64_t v22 = v48;
  unint64_t v23 = v50;
  uint64_t v24 = v52;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v50, enum case for ControlSize.large(_:), v52);
  uint64_t KeyPath = swift_getKeyPath();
  id v26 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t v27 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v26 + *(int *)(v27 + 28), v23, v24);
  *id v26 = KeyPath;
  uint64_t v28 = v49;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v49);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  id v29 = sub_10005DB50();
  uint64_t v30 = Color.init(uiColor:)();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v54 = v30;
  swift_retain();
  uint64_t v32 = AnyShapeStyle.init<A>(_:)();
  sub_1000AEF2C((uint64_t)v17, (uint64_t)v19, &qword_1009515C0);
  swift_release();
  uint64_t v33 = (uint64_t *)&v19[*(int *)(v51 + 44)];
  *uint64_t v33 = v31;
  v33[1] = v32;
  sub_10008DB18((uint64_t)v17, &qword_1009515C0);
  LOBYTE(v30) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v53;
  sub_1000AEF2C((uint64_t)v19, v53, &qword_1009515C8);
  uint64_t v43 = v42 + *(int *)(sub_1000AFA94(&qword_1009515E8) + 36);
  *(unsigned char *)uint64_t v43 = v30;
  *(void *)(v43 + 8) = v35;
  *(void *)(v43 + 16) = v37;
  *(void *)(v43 + 24) = v39;
  *(void *)(v43 + 32) = v41;
  *(unsigned char *)(v43 + 40) = 0;
  return sub_10008DB18((uint64_t)v19, &qword_1009515C8);
}

id sub_10003C918()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_noteListener];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers;
  uint64_t v3 = self;
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 weakObjectsHashTable];

  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for ActivitySummaryChangeListener();
  id v5 = [super init];
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = [v6 defaultCenter];
  if (qword_10094AF68 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1009985E0;
  id v10 = [self mainQueue];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = sub_1000E61F0;
  uint64_t v19 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000711BC;
  uint64_t ObjectType = &unk_1008D13E0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  id v13 = [v8 addObserverForName:v9 object:0 queue:v10 usingBlock:v12];
  _Block_release(v12);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v13;
  uint64_t v14 = (uint64_t)v7 + OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_noteListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)aBlock, v14);
  swift_endAccess();
  return v7;
}

uint64_t sub_10003CB60()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10003CBA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FE50);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  id v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    id v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FE58);
  uint64_t v28 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E3434;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_10006D8BC, v29);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_10003CF80(void *a1, char a2)
{
  uint64_t v3 = v2;
  float v6 = ARUIRingPercentageValueNoRing;
  int v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 == 2)
  {
    sub_1000AEEC8(v3, (uint64_t)&v27, &qword_100955068);
    sub_1000AEEC8((uint64_t)&v27, (uint64_t)&v28, &qword_100955068);
    if (v28)
    {
      id v8 = [v28 _isStandalonePhoneSummary];
    }
    else
    {
      id v9 = [self sharedBehavior];
      if (!v9)
      {
        __break(1u);
        return;
      }
      id v10 = v9;
      id v8 = [v9 isStandalonePhoneFitnessMode];
    }
  }
  else
  {
    id v8 = (id)(v7 & 1);
  }
  float v11 = v6;
  float v12 = v6;
  if (*(void *)v3)
  {
    id v13 = *(id *)v3;
    id v14 = [v13 activityMoveMode];
    uint64_t v15 = &selRef__moveMinutesCompletionPercentage;
    if (v14 != (id)2) {
      uint64_t v15 = &selRef__activeEnergyCompletionPercentage;
    }
    [v13 *v15];
    float v12 = v16;
    [v13 _exerciseTimeCompletionPercentage];
    float v11 = v17;
    [v13 _standHoursCompletionPercentage];
    double v19 = v18;

    float v6 = v19;
  }

  id v20 = [a1 ringGroup];
  [v20 setIsStandalonePhoneFitnessMode:v8 animated:0];

  id v21 = [a1 ringGroup];
  *(float *)&double v22 = v12;
  *(float *)&double v23 = v11;
  *(float *)&double v24 = v6;
  [v21 setActiveEnergyPercentage:a2 & 1 exerciseMinutesPercentage:0 standHoursPercentage:v22 animated:v23 completion:v24];

  id v25 = [a1 ringGroup];
  [v25 setIsPaused:*(unsigned __int8 *)(v3 + 8) animated:*(unsigned __int8 *)(v3 + 26)];

  unint64_t v26 = *(void (**)(void))(v3 + 32);
  if (v26) {
    v26();
  }
}

uint64_t sub_10003D1C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v39 = sub_1000AFA94(&qword_10095FDF0);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = v12;
  id v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  __chkstk_darwin(v14);
  double v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_100020AC4(0x65uLL);
  static Log.triage.getter();
  double v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    v31[1] = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v42 = v41;
    uint64_t v43 = v21;
    uint64_t v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    v31[0] = v20 + 14;
    uint64_t v22 = StaticString.description.getter();
    uint64_t v33 = v13;
    uint64_t v42 = sub_10008F1F4(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v40;
    id v13 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v24;
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v35, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v41;
  *(void *)(v27 + 24) = a2;
  *(void *)(v27 + 32) = a3;
  *(unsigned char *)(v27 + 40) = a4;
  *(void *)(v27 + 48) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
  sub_1000AFA94(&qword_10095FDF8);
  id v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1000E347C;
  *(void *)(v29 + 24) = v27;
  swift_retain();
  v28(sub_1000E2854, v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10003D5A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NavigationAnnotation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v12._countAndFlagsBits = 0xD000000000000067;
  v12._object = (void *)0x80000001007D3460;
  v13._object = (void *)0x80000001007D34D0;
  v13._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v12, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v14 = [a1 userActivities];
  sub_10007E2D8(0, &qword_100966E88);
  sub_1000CD998((unint64_t *)&unk_100966E90, &qword_100966E88);
  uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  double v16 = (void *)sub_10003DB00(v15, &qword_100966E88);
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1000AFA94((uint64_t *)&unk_100966E30);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1007509E0;
    static NavigationAnnotation.appLaunch.getter();
    uint64_t v27 = v17;
    sub_1000E035C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
    sub_1000AFA94(&qword_1009633E0);
    sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_10065E8C8(v16, (uint64_t)v7, a2);
  }
  else
  {
    id v18 = [a1 URLContexts];
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    sub_1000CD998((unint64_t *)&qword_100966EA0, (unint64_t *)&unk_1009633F0);
    uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = (void *)sub_10003DB00(v19, (unint64_t *)&unk_1009633F0);
    swift_bridgeObjectRelease();
    if (!v20)
    {
      uint64_t v23 = type metadata accessor for NavigationError();
      sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
      uint64_t v24 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for NavigationError.noNavigation(_:), v23);
      *(void *)(swift_allocObject() + 16) = v24;
      return Promise.init(synchronousOperation:)();
    }
    sub_1000AFA94((uint64_t *)&unk_100966E30);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1007509E0;
    static NavigationAnnotation.appLaunch.getter();
    uint64_t v27 = v21;
    sub_1000E035C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
    sub_1000AFA94(&qword_1009633E0);
    sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_10065F8CC(v20, (uint64_t)v7, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10003DB00(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = __CocoaSet.startIndex.getter();
    uint64_t v7 = v6;
    __CocoaSet.endIndex.getter();
    char v8 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_10003DC28(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_1006622AC(v5, v7, v4 != 0, a1, a2);
    uint64_t v9 = v13;
    sub_10003DC28(v5, v7, v4 != 0);
    return v9;
  }
  uint64_t result = sub_1000DEE64(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v7 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v5 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003DC28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003DC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for Text.Sizing();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000AFA94(&qword_100960428);
  uint64_t v62 = *(void *)(v68 - 8);
  uint64_t v5 = __chkstk_darwin(v68);
  uint64_t v57 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v57 - v7;
  uint64_t v64 = sub_1000AFA94(&qword_100960430);
  __chkstk_darwin(v64);
  uint64_t v67 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100960438);
  __chkstk_darwin(v66);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityRingsCard();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v14 - 8);
  double v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100960440);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v63 = (char *)&v57 - v20;
  uint64_t v21 = type metadata accessor for ActivityRingsCardView();
  uint64_t v22 = a1;
  uint64_t v23 = a1 + *(int *)(v21 + 24);
  sub_1000AEF2C(v23 + *(int *)(v11 + 40), (uint64_t)v16, (uint64_t *)&unk_10095B890);
  uint64_t v24 = type metadata accessor for Date();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v16, 1, v24);
  sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_10095B890);
  sub_1000C0774(v23, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
  if (v25 == 1)
  {
    uint64_t v26 = *(void **)&v13[*(int *)(v11 + 36)];
    if (!v26)
    {
      sub_1000C0CEC((uint64_t)v13);
LABEL_8:
      uint64_t v32 = static HorizontalAlignment.leading.getter();
      sub_10004D75C(v22, v73);
      v74[592] = 0;
      memcpy(&v74[7], v73, 0x249uLL);
      char v33 = static Edge.Set.top.getter();
      uint64_t v34 = v22 + *(int *)(v21 + 20);
      char v35 = *(unsigned char *)v34;
      uint64_t v36 = *(void *)(v34 + 8);
      uint64_t v37 = *(void *)(v34 + 16);
      LOBYTE(v72[0]) = v35;
      v72[1] = v36;
      v72[2] = v37;
      sub_1000AFA94(&qword_1009603F0);
      State.wrappedValue.getter();
      EdgeInsets.init(_all:)();
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      uint64_t v43 = v42;
      uint64_t v45 = v44;
      char v71 = 0;
      v70[0] = v32;
      v70[1] = 0;
      LOBYTE(v70[2]) = 0;
      memcpy((char *)&v70[2] + 1, v74, 0x250uLL);
      LOBYTE(v70[77]) = v33;
      v70[78] = v39;
      v70[79] = v41;
      v70[80] = v43;
      v70[81] = v45;
      LOBYTE(v70[82]) = 0;
      uint64_t v46 = v58;
      static Text.Sizing.adjustsForOversizedCharacters.getter();
      uint64_t v47 = sub_1000AFA94(&qword_100960448);
      unint64_t v48 = sub_1000E1C5C();
      uint64_t v49 = v57;
      View.textSizing(_:)();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v60);
      memcpy(v72, v70, 0x291uLL);
      sub_10001C3E8((uint64_t)v72);
      uint64_t v51 = v61;
      uint64_t v50 = v62;
      uint64_t v52 = v68;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v49, v68);
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v67, v51, v52);
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_100960468, &qword_100960438);
      v70[0] = v47;
      v70[1] = v48;
      swift_getOpaqueTypeConformance2();
      uint64_t v31 = (uint64_t)v63;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      goto LABEL_9;
    }
    unsigned __int8 v27 = [v26 paused];
    sub_1000C0CEC((uint64_t)v13);
    if ((v27 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000C0CEC((uint64_t)v13);
  }
  *(void *)uint64_t v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v28 = sub_1000AFA94(&qword_100960478);
  sub_100518298(v22, (uint64_t)&v10[*(int *)(v28 + 44)]);
  sub_1000AEF2C((uint64_t)v10, v67, &qword_100960438);
  swift_storeEnumTagMultiPayload();
  sub_1000A132C(&qword_100960468, &qword_100960438);
  uint64_t v29 = sub_1000A1370(&qword_100960448);
  unint64_t v30 = sub_1000E1C5C();
  v72[0] = v29;
  v72[1] = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = (uint64_t)v63;
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18((uint64_t)v10, &qword_100960438);
LABEL_9:
  uint64_t v53 = v69;
  uint64_t v54 = v65;
  sub_1000AEF2C(v31, v65, &qword_100960440);
  sub_1000AEF2C(v54, v53, &qword_100960440);
  uint64_t v55 = v53 + *(int *)(sub_1000AFA94(&qword_100960470) + 48);
  *(void *)uint64_t v55 = 0;
  *(unsigned char *)(v55 + 8) = 0;
  sub_10008DB18(v31, &qword_100960440);
  return sub_10008DB18(v54, &qword_100960440);
}

uint64_t sub_10003E3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OSSignpostError();
  uint64_t v32 = *(const char **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  char v33 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v11 = &v30[-v10];
  uint64_t v12 = sub_1000AFA94(&qword_10095CB70);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for OSSignposter();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v30[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AEF2C(a1, (uint64_t)v14, &qword_10095CB70);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_10008DB18((uint64_t)v14, &qword_10095CB70);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v14, v15);
  if (!a2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
  }
  swift_retain();
  uint64_t v20 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v21 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    int v31 = v21;
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v22 = v32;
    if ((*((unsigned int (**)(unsigned char *, uint64_t))v32 + 11))(v6, v4) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v23 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(unsigned char *, uint64_t))v22 + 1))(v6, v4);
      uint64_t v23 = "";
    }
    uint64_t v32 = v23;
    uint64_t v24 = v33;
    uint64_t v25 = v34;
    uint64_t v26 = v35;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 16))(v33, v11, v35);
    unsigned __int8 v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned __int8 v27 = 0;
    os_signpost_id_t v28 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, (os_signpost_type_t)v31, v28, "addCardTest", v32, v27, 2u);
    swift_slowDealloc();

    uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
    v29(v11, v26);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
    swift_release();
    return ((uint64_t (*)(unsigned char *, uint64_t))v29)(v24, v26);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v11, v35);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
    return swift_release();
  }
}

uint64_t sub_10003E81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = type metadata accessor for CatalogTipSection();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();

    uint64_t v7 = v5 + *(int *)(v6 + 36);
    uint64_t v8 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v10 = v7 + v9[5];
    uint64_t v11 = type metadata accessor for Artwork();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v7 + v9[8];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v17(v13, v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v7 + v9[12];
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t sub_10003EABC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t v42 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v43 = v0;
  while (1)
  {
    if (v6)
    {
      uint64_t v46 = (v6 - 1) & v6;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v14 = *(void *)(v40 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v41) {
        break;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v41) {
          break;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v41) {
            break;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v41) {
              break;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v15);
            if (!v14)
            {
              uint64_t v16 = v8 + 6;
              if (v8 + 6 >= v41) {
                break;
              }
              unint64_t v14 = *(void *)(v40 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_46;
                  }
                  if (v15 >= v41) {
                    goto LABEL_37;
                  }
                  unint64_t v14 = *(void *)(v40 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v15 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v46 = (v14 - 1) & v14;
    int64_t v47 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    uint64_t v19 = v0[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16))(v17, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v12, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v17, v19);
    uint64_t v20 = SkillLevel.identifier.getter();
    uint64_t v22 = v21;
    uint64_t v23 = SkillLevel.name.getter();
    uint64_t v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1000DA1C0(v20, v22);
    uint64_t v29 = v3[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v3[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_1000DA1C0(v20, v22);
      if ((v31 & 1) != (v32 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_4:
        uint64_t v9 = (uint64_t *)(v3[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v9 = v23;
        v9[1] = v25;
        goto LABEL_5;
      }
    }
    v3[(v28 >> 6) + 8] |= 1 << v28;
    char v33 = (uint64_t *)(v3[6] + 16 * v28);
    *char v33 = v20;
    v33[1] = v22;
    uint64_t v34 = (uint64_t *)(v3[7] + 16 * v28);
    *uint64_t v34 = v23;
    v34[1] = v25;
    uint64_t v35 = v3[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_44;
    }
    v3[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v0 = v43;
    uint64_t v10 = v43[7];
    uint64_t v11 = v43[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v42)(v10, v11);
    unint64_t v6 = v46;
    int64_t v8 = v47;
  }
LABEL_37:
  uint64_t v38 = (void *)v0[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_10003EEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v91 = a3;
  uint64_t v4 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v4 - 8);
  long long v83 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  __chkstk_darwin(v6);
  long long v76 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for StandardArtworkDescriptor();
  uint64_t v82 = *(void *)(v79 - 8);
  uint64_t v8 = __chkstk_darwin(v79);
  long long v81 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v78 = (char *)&v71 - v10;
  uint64_t v11 = type metadata accessor for ArtworkDescriptor();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  long long v80 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v88 = (char *)&v71 - v14;
  uint64_t v15 = type metadata accessor for ShelfLockupAttributedTagStrings();
  uint64_t v84 = *(void *)(v15 - 8);
  uint64_t v85 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Logger();
  long long v77 = *(void (***)(char *, uint64_t))(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for URL();
  uint64_t v92 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94(&qword_10095D148);
  __chkstk_darwin(v26 - 8);
  unint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for CatalogLockup();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v32 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E376C(a1, (uint64_t)v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    swift_release();
    sub_10008DB18(a1, &qword_10095D148);
    sub_10008DB18((uint64_t)v28, &qword_10095D148);
LABEL_7:
    uint64_t v37 = v91;
    uint64_t v38 = type metadata accessor for CatalogTipSectionItem();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
  }
  uint64_t v74 = v18;
  uint64_t v33 = (uint64_t)v88;
  uint64_t v75 = a1;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v28, v29);
  CatalogLockup.streamingURL.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v23, 1, v89) == 1)
  {
    sub_10008DB18((uint64_t)v23, (uint64_t *)&unk_10094B790);
    static Log.default.getter();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      BOOL v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[CatalogTipSectionItem] Streaming url not found for tip lockup", v36, 2u);
      swift_slowDealloc();
    }

    swift_release();
    sub_10008DB18(v75, &qword_10095D148);
    v77[1](v20, v74);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    goto LABEL_7;
  }
  uint64_t v40 = *(void (***)(char *, uint64_t))(v92 + 32);
  v92 += 32;
  long long v77 = v40;
  uint64_t v73 = v25;
  ((void (*)(char *, char *, uint64_t))v40)(v25, v23, v89);
  sub_1000AFA94((uint64_t *)&unk_1009669B0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  uint64_t v74 = v29;
  sub_10007E4EC(v93, v93[3]);
  uint64_t v72 = v17;
  MediaTagStringBuilding.makeAttributedTagStrings(for:)();
  CatalogLockup.artworkDescriptor.getter();
  int64_t v41 = v78;
  ArtworkDescriptor.standardArtworkDescriptor.getter();
  sub_10003F824(v33);
  uint64_t v42 = v76;
  StandardArtworkDescriptor.artwork.getter();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v82 + 8);
  uint64_t v44 = v41;
  uint64_t v45 = v79;
  v43(v44, v79);
  uint64_t v46 = (uint64_t)v80;
  CatalogLockup.artworkDescriptor.getter();
  int64_t v47 = v81;
  ArtworkDescriptor.standardArtworkDescriptor.getter();
  sub_10003F824(v46);
  uint64_t v48 = StandardArtworkDescriptor.cropCode.getter();
  long long v88 = v49;
  v43(v47, v45);
  uint64_t v50 = CatalogLockup.identifier.getter();
  long long v81 = v51;
  uint64_t v82 = v50;
  uint64_t v52 = (uint64_t)v83;
  CatalogLockup.streamingArtwork.getter();
  uint64_t v53 = CatalogLockup.streamingArtworkCropCode.getter();
  uint64_t v79 = v54;
  long long v80 = (char *)v53;
  uint64_t v55 = CatalogLockup.streamingSubtitle.getter();
  uint64_t v57 = v56;
  uint64_t v58 = CatalogLockup.streamingTitle.getter();
  uint64_t v60 = v59;
  swift_release();
  sub_10008DB18(v75, &qword_10095D148);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v74);
  uint64_t v61 = (int *)type metadata accessor for CatalogTipSectionItem();
  uint64_t v62 = v91;
  ((void (*)(uint64_t, char *, uint64_t))v77)(v91 + v61[12], v73, v89);
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v62, v72, v85);
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v62 + v61[5], v42, v87);
  uint64_t v63 = (uint64_t *)(v62 + v61[6]);
  uint64_t v64 = v88;
  *uint64_t v63 = v48;
  v63[1] = (uint64_t)v64;
  uint64_t v65 = (uint64_t *)(v62 + v61[7]);
  uint64_t v66 = v81;
  uint64_t *v65 = v82;
  v65[1] = (uint64_t)v66;
  sub_1000E36A4(v52, v62 + v61[8]);
  uint64_t v67 = (void *)(v62 + v61[9]);
  uint64_t v68 = v79;
  *uint64_t v67 = v80;
  v67[1] = v68;
  uint64_t v69 = (uint64_t *)(v62 + v61[10]);
  uint64_t *v69 = v55;
  v69[1] = v57;
  uint64_t v70 = (uint64_t *)(v62 + v61[11]);
  *uint64_t v70 = v58;
  v70[1] = v60;
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v93);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v61 - 1) + 56))(v62, 0, 1, v61);
}

uint64_t sub_10003F824(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003F9B4(uint64_t a1)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v18[-v7];
  uint64_t v9 = type metadata accessor for ImpressionMetrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 40);
  if (!*(void *)(v13 + 16))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095F740);
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_100529B44(a1);
  if (v15)
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v10 + 16))(v8, *(void *)(v13 + 56) + *(void *)(v10 + 72) * v14, v9);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v16, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095F740);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
  swift_beginAccess();
  sub_1005DBBC4(a1, (uint64_t)v6);
  sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095F740);
  swift_endAccess();
  sub_10001C250();
  ImpressionsCalculator.removeElement(_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10003FC64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void), void *a5)
{
  uint64_t v9 = sub_1000AFA94(a3);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    uint64_t v14 = a4(0);
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, v14);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    uint64_t v16 = (uint64_t)v13 + *a5;
    swift_beginAccess();
    sub_1000B1774((uint64_t)v11, v16, a3);
    swift_endAccess();
  }
}

id sub_10003FDF0()
{
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player] = 0;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_playerLayer;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_playerLayer] = 0;
  uint64_t v6 = self;
  uint64_t v7 = v0;
  id v8 = [v6 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 pathForResource:v9 ofType:v10];

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(&v7[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_url], v3, v20);

    uint64_t v12 = (objc_class *)type metadata accessor for TrendsSplashVideoView();
    v21.receiver = v7;
    v21.super_class = v12;
    [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v13 configurePlayer];
    uint64_t v14 = self;
    id v15 = v13;
    id v16 = [v14 clearColor];
    [v15 setBackgroundColor:v16];
  }
  else
  {

    uint64_t v17 = *(void **)&v0[v5];
    type metadata accessor for TrendsSplashVideoView();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v15;
}

void sub_1000400BC(char a1)
{
  os_log_type_t v2 = static os_log_type_t.default.getter();
  uint64_t v3 = (void *)HKLogActivity;
  os_log_type_t v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    uint64_t v5 = v3;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v4, "Fetched subscription status: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(unsigned char *)(Strong + 80) = a1 & 1;
    swift_release();
  }
  id v8 = [self standardUserDefaults];
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v10 = String._bridgeToObjectiveC()();
  [v8 setValue:isa forKey:v10];

  swift_beginAccess();
  uint64_t v11 = swift_weakLoadStrong();
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [self defaultCenter];
    if (qword_10094A6F8 != -1) {
      swift_once();
    }
    [v13 postNotificationName:qword_100997898 object:v12];
    swift_release();
  }
}

uint64_t sub_1000402DC(void (*a1)(uint64_t))
{
  uint64_t v3 = type metadata accessor for ShelfLockupAttributedTagStrings();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CatalogTipSectionItem();
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + *(int *)(type metadata accessor for CatalogTipCardView() + 20);
  uint64_t v14 = type metadata accessor for CatalogTipCard();
  sub_1000AEF2C(v13 + *(int *)(v14 + 36), (uint64_t)v12, (uint64_t *)&unk_100955650);
  uint64_t v15 = type metadata accessor for CatalogTipSection();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v12, 1, v15) == 1)
  {
    sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_100955650);
    [objc_allocWithZone((Class)NSAttributedString) init];
  }
  else
  {
    sub_1000E9C60((uint64_t)&v12[*(int *)(v15 + 36)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    sub_1000E9C00((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    uint64_t v16 = sub_1000E9C00((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    a1(v16);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return AttributedString.init(_:)();
}

id sub_100040580(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[3] = type metadata accessor for ContentAvailabilityClient();
  unsigned char v25[4] = &protocol witness table for ContentAvailabilityClient;
  v25[0] = a1;
  uint64_t v9 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state];
  uint64_t v10 = type metadata accessor for ContentAvailability();
  uint64_t v11 = *(void *)(v10 - 8);
  v22[0] = *(void *)(v11 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22[0])(v9, 1, 1, v10);
  sub_10008E75C((uint64_t)v25, (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_contentAvailabilityClient]);
  uint64_t v12 = &a3[OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_eventHub];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = &protocol witness table for EventHub;
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = a3;
  v22[1] = a2;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  id v14 = [self standardUserDefaults];
  NSString v15 = String._bridgeToObjectiveC()();
  unsigned int v16 = [v14 BOOLForKey:v15];

  uint64_t v17 = 1;
  if (v16)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v8, enum case for ContentAvailability.available(_:), v10);
    uint64_t v17 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v22[0])(v8, v17, 1, v10);
  swift_beginAccess();
  sub_1000E6634((uint64_t)v8, v9);
  swift_endAccess();

  uint64_t v18 = (objc_class *)type metadata accessor for SeymourAvailabilityManager(0);
  v24.receiver = v13;
  v24.super_class = v18;
  [super init];
  type metadata accessor for ContentAvailabilityUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for EventHub();
  id v20 = v19;
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v23);
  sub_100049220();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v25);
  return v20;
}

uint64_t _s10FitnessApp37ActivitySharingFriendListDataProviderC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100040934(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_10008AA94((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_100040C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v60 = sub_1000AFA94(&qword_10094E150);
  uint64_t v59 = *(void *)(v60 - 8);
  uint64_t v4 = __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v61 = (char *)&v44 - v6;
  uint64_t v50 = type metadata accessor for Font.PrivateDesign();
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Font.TextStyle();
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 80);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v57 = v65;
  int v56 = v66;
  uint64_t v55 = v67;
  int v54 = v68;
  uint64_t v53 = v69;
  uint64_t v52 = v70;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  id v15 = [self labelColor];
  *(void *)&v63[0] = Color.init(uiColor:)();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_1000A06C0(v10, v12, v14);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = v46;
  uint64_t v22 = v45;
  uint64_t v23 = v47;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, enum case for Font.TextStyle.body(_:), v47);
  objc_super v24 = v48;
  static Font.PrivateDesign.compactRounded.getter();
  static Font.system(_:design:weight:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v50);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28;
  uint64_t v50 = v29;
  swift_release();
  sub_1000A06C0(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v30 = v51;
  sub_100030478(v51, (uint64_t)v63);
  uint64_t v31 = swift_allocObject();
  long long v32 = v63[3];
  *(_OWORD *)(v31 + 48) = v63[2];
  *(_OWORD *)(v31 + 64) = v32;
  *(_OWORD *)(v31 + 80) = v63[4];
  *(void *)(v31 + 96) = v64;
  long long v33 = v63[1];
  *(_OWORD *)(v31 + 16) = v63[0];
  *(_OWORD *)(v31 + 32) = v33;
  uint64_t v62 = v30;
  uint64_t v34 = v61;
  Button.init(action:label:)();
  uint64_t v35 = v59;
  BOOL v36 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v37 = v58;
  uint64_t v38 = v34;
  uint64_t v39 = v60;
  v36(v58, v38, v60);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v57;
  *(unsigned char *)(a2 + 16) = v56;
  *(void *)(a2 + 24) = v55;
  *(unsigned char *)(a2 + 32) = v54;
  uint64_t v40 = v52;
  *(void *)(a2 + 40) = v53;
  *(void *)(a2 + 48) = v40;
  *(void *)(a2 + 56) = v25;
  *(void *)(a2 + 64) = v27;
  *(unsigned char *)(a2 + 72) = v22 & 1;
  *(void *)(a2 + 80) = v50;
  uint64_t v41 = sub_1000AFA94(&qword_100957640);
  v36((char *)(a2 + *(int *)(v41 + 64)), v37, v39);
  sub_1000A1750(v25, v27, v22 & 1);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v35 + 8);
  swift_bridgeObjectRetain();
  v42(v61, v39);
  v42(v37, v39);
  sub_1000A06C0(v25, v27, v22 & 1);
  return swift_bridgeObjectRelease();
}

void sub_10004122C(int a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  unsigned __int8 v66 = &v64[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v67 = &v64[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v64[-v8];
  __chkstk_darwin(v7);
  uint64_t v11 = &v64[-v10];
  os_log_type_t v12 = static os_log_type_t.default.getter();
  char v13 = (void *)HKLogActivity;
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(HKLogActivity, v12))
  {
    id v15 = v13;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 67109120;
    int v70 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v14, "Successfully fetched phone account info from healthstore: %{BOOL}d", v16, 8u);
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (char v18 = Strong[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive],
        Strong,
        char v19 = a1,
        (v18 & 1) == 0))
  {
    char v19 = 0;
  }
  swift_beginAccess();
  char v20 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (v20)
  {
    int v21 = v20[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive];

    int v22 = v21 & (a1 ^ 1);
  }
  else
  {
    int v22 = 0;
  }
  swift_beginAccess();
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23)
  {
    char v25 = a1;
    uint64_t v40 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v11, 1, 1, v40);
    goto LABEL_20;
  }
  objc_super v24 = (void *)v23;
  int v65 = v22;
  char v25 = a1;
  uint64_t v26 = v23 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastPhoneCloudKitAccountFetchTimestamp;
  swift_beginAccess();
  sub_100005D34(v26, (uint64_t)v11);

  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v11, 1, v27) == 1)
  {
LABEL_20:
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_10095B890);
    uint64_t v37 = &unk_100968000;
    goto LABEL_21;
  }
  sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_10095B890);
  if (v19)
  {
    swift_beginAccess();
    uint64_t v30 = swift_unknownObjectWeakLoadStrong();
    if (v30)
    {
      uint64_t v31 = (void *)v30;
      uint64_t v32 = v30 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastPhoneCloudKitAccountFetchTimestamp;
      swift_beginAccess();
      sub_100005D34(v32, (uint64_t)v9);

      if (v29(v9, 1, v27) != 1)
      {
        sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
        static os_log_type_t.default.getter();
        id v33 = HKLogActivity;
        os_log(_:dso:log:_:_:)();

        swift_beginAccess();
        uint64_t v34 = swift_unknownObjectWeakLoadStrong();
        if (v34)
        {
          uint64_t v35 = (void *)v34;
          sub_10069C5C8(1);
        }
        swift_beginAccess();
        uint64_t v36 = swift_unknownObjectWeakLoadStrong();
        uint64_t v37 = (void *)&unk_100968000;
        if (v36)
        {
          uint64_t v38 = (void *)v36;
          if ((*(unsigned char *)(v36 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) & 1) == 0)
          {
            *(unsigned char *)(v36 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) = 1;
            id v39 = [self standardUserDefaults];
            char v69 = 1;
LABEL_40:
            NSUserDefaults.set<A>(_:for:)();

            goto LABEL_41;
          }
          goto LABEL_41;
        }
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v9, 1, 1, v27);
    }
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
  }
  uint64_t v37 = (void *)&unk_100968000;
  if (v65)
  {
    static os_log_type_t.default.getter();
    id v60 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    swift_beginAccess();
    uint64_t v61 = swift_unknownObjectWeakLoadStrong();
    if (v61)
    {
      uint64_t v62 = (void *)v61;
      sub_10069C5C8(0);
    }
    swift_beginAccess();
    uint64_t v63 = swift_unknownObjectWeakLoadStrong();
    if (v63)
    {
      uint64_t v38 = (void *)v63;
      if (*(unsigned char *)(v63 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) == 1)
      {
        *(unsigned char *)(v63 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) = 0;
        id v39 = [self standardUserDefaults];
        char v69 = 0;
        goto LABEL_40;
      }
LABEL_41:
    }
  }
LABEL_21:
  swift_beginAccess();
  uint64_t v41 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (!v41 || (int v42 = v41[v37[211]], v41, v42 != (v25 & 1)))
  {
    swift_beginAccess();
    uint64_t v43 = swift_unknownObjectWeakLoadStrong();
    if (v43)
    {
      uint64_t v44 = (void *)v43;
      uint64_t v45 = v37[211];
      if (*(unsigned char *)(v43 + v45) != (v25 & 1))
      {
        *(unsigned char *)(v43 + v45) = v25 & 1;
        id v46 = [self standardUserDefaults];
        char v68 = v25 & 1;
        NSUserDefaults.set<A>(_:for:)();
      }
    }
    swift_beginAccess();
    uint64_t v47 = swift_unknownObjectWeakLoadStrong();
    if (v47)
    {
      uint64_t v48 = (unsigned char *)v47;
      char v49 = sub_10069DD90();
      v48[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion] = FIDeviceMeetsMinimumOSVersionDaytona();
      static os_log_type_t.default.getter();
      id v50 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      uint64_t v51 = type metadata accessor for TaskPriority();
      uint64_t v52 = (uint64_t)v66;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v66, 1, 1, v51);
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = 0;
      *(void *)(v53 + 24) = 0;
      *(void *)(v53 + 32) = v48;
      *(unsigned char *)(v53 + 40) = v49 & 1;
      int v54 = v48;
      sub_1000713D0(v52, (uint64_t)&unk_1009687E8, v53);
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t v55 = swift_unknownObjectWeakLoadStrong();
  if (v55)
  {
    int v56 = (void *)v55;
    uint64_t v57 = (uint64_t)v67;
    Date.init()();
    uint64_t v58 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
    uint64_t v59 = (uint64_t)v56 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastPhoneCloudKitAccountFetchTimestamp;
    swift_beginAccess();
    sub_1000E37D4(v57, v59);
    swift_endAccess();
  }
}

uint64_t sub_100041AF0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100955528 + dword_100955528);
  return v6(a1, v4);
}

uint64_t sub_100041BA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100955528 + dword_100955528);
  return v6(a1, v4);
}

uint64_t sub_100041C60()
{
  uint64_t v1 = v0;
  uint64_t v46 = sub_1000AFA94(&qword_100950248);
  uint64_t v2 = *(void *)(v46 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v5 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v48 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v8 = *(void *)(v48 - 8);
  uint64_t v47 = *(void *)(v8 + 64);
  uint64_t v9 = __chkstk_darwin(v48);
  char v49 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v45 - v12;
  __chkstk_darwin(v11);
  id v50 = (char *)&v45 - v13;
  os_log_type_t v14 = [objc_allocWithZone((Class)type metadata accessor for BackgroundTaskAssertion()) init];
  id v15 = [self sharedApplication];
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100216654;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008BC040;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  id v18 = [v15 beginBackgroundTaskWithExpirationHandler:v17];
  _Block_release(v17);

  char v19 = &v14[OBJC_IVAR___CHBackgroundTaskAssertion_identifier];
  *(void *)char v19 = v18;
  v19[8] = 0;
  v14[OBJC_IVAR___CHBackgroundTaskAssertion_state] = 1;
  sub_10007E4EC((void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppBadgeAggregator_engagementAppBadgeProvider) + 16), *(void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppBadgeAggregator_engagementAppBadgeProvider) + 40));
  dispatch thunk of EngagementClientProtocol.queryEngagementBadges()();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v14;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1000EA9A4;
  *(void *)(v22 + 24) = v21;
  uint64_t v23 = v7;
  objc_super v24 = v7;
  uint64_t v25 = v46;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v23, v46);
  unint64_t v26 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v27 + v26, v5, v25);
  uint64_t v28 = (uint64_t (**)(uint64_t *))(v27 + ((v3 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v28 = sub_1000E2B94;
  v28[1] = (uint64_t (*)(uint64_t *))v22;
  uint64_t v29 = v14;
  uint64_t v30 = v45;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v24, v25);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_10021689C;
  *(void *)(v32 + 24) = v31;
  uint64_t v33 = v48;
  uint64_t v34 = v49;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v30, v48);
  unint64_t v35 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v36 = (v47 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v37 + v35, v34, v33);
  uint64_t v38 = (void *)(v37 + v36);
  *uint64_t v38 = sub_1001B3D88;
  v38[1] = v32;
  id v39 = v29;
  uint64_t v40 = v50;
  Promise.init(asyncOperation:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v8 + 8);
  v41(v30, v33);
  int v42 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 0;
  *(void *)(v43 + 24) = 0;
  v42(sub_10006D36C, v43);

  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, v33);
}

uint64_t initializeWithCopy for Histogram1D(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004229C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000DBFD0;
  return v6(a1);
}

uint64_t sub_10004256C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v73 = a4;
  uint64_t v7 = sub_1000AFA94(&qword_1009556A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v70 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CatalogTipSectionItem();
  Class isa = *(Class *)(v9 - 8);
  uint64_t v69 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v67 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (uint64_t)&v57 - v12;
  uint64_t v13 = sub_1000AFA94(&qword_10095D148);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v57 - v17;
  uint64_t v19 = type metadata accessor for CatalogLockup();
  uint64_t v72 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v71 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10095D150);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ShelfLockupDescriptor();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v28;
  sub_1000AEF2C(a1, (uint64_t)v23, &qword_10095D150);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v29) == 1)
  {
    swift_release();
    sub_10008DB18(a2, &qword_10095D148);
    sub_10008DB18(a1, &qword_10095D150);
    uint64_t v30 = (uint64_t)v23;
    uint64_t v31 = &qword_10095D150;
  }
  else
  {
    uint64_t v65 = a1;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v29);
    sub_1000AEF2C(a2, (uint64_t)v18, &qword_10095D148);
    uint64_t v32 = v19;
    uint64_t v33 = a2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v18, 1, v19) == 1)
    {
      swift_release();
      sub_10008DB18(a2, &qword_10095D148);
      sub_10008DB18(v65, &qword_10095D150);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v29);
      uint64_t v30 = (uint64_t)v18;
      uint64_t v31 = &qword_10095D148;
    }
    else
    {
      uint64_t v63 = v29;
      uint64_t v64 = v27;
      unint64_t v35 = v71;
      uint64_t v34 = v72;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v18, v32);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v16, v35, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v16, 0, 1, v32);
      swift_retain();
      uint64_t v36 = v70;
      sub_10003EEFC((uint64_t)v16, a3, v70);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))isa + 6))(v36, 1, v69) != 1)
      {
        uint64_t v39 = v66;
        sub_100042D14(v36, v66);
        sub_1000AFA94((uint64_t *)&unk_1009669B0);
        dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
        uint64_t v40 = v64;
        uint64_t v41 = ShelfLockupDescriptor.identifier.getter();
        uint64_t v69 = v42;
        uint64_t v70 = v41;
        uint64_t v61 = a3;
        sub_10007E4EC(v74, v75);
        uint64_t v43 = ShelfLockupDescriptor.galleryNameTags.getter();
        uint64_t v62 = v32;
        Class isa = MediaTagStringBuilding.attributedString(for:)((Swift::OpaquePointer)v43).super.isa;
        swift_bridgeObjectRelease();
        sub_10007E4EC(v74, v75);
        uint64_t v44 = ShelfLockupDescriptor.galleryDescriptionTags.getter();
        Class v60 = MediaTagStringBuilding.attributedString(for:)((Swift::OpaquePointer)v44).super.isa;
        swift_bridgeObjectRelease();
        int v59 = ShelfLockupDescriptor.galleryDestination.getter();
        int v58 = ShelfLockupDescriptor.galleryDisplayStyle.getter();
        uint64_t v45 = v67;
        sub_100039970(v39, v67);
        sub_10007E4EC(v74, v75);
        uint64_t v46 = ShelfLockupDescriptor.titleTags.getter();
        Class v47 = MediaTagStringBuilding.attributedString(for:)((Swift::OpaquePointer)v46).super.isa;
        swift_bridgeObjectRelease();
        id v48 = [(objc_class *)v47 string];

        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v51 = v50;
        swift_release();

        sub_10008DB18(v33, &qword_10095D148);
        sub_10008DB18(v65, &qword_10095D150);
        sub_1000E7B9C(v39);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v62);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v40, v63);
        uint64_t v52 = v73;
        uint64_t v53 = v69;
        void *v73 = v70;
        v52[1] = v53;
        Class v54 = v60;
        v52[2] = isa;
        v52[3] = v54;
        *((unsigned char *)v52 + 32) = v59;
        *((unsigned char *)v52 + 33) = v58;
        uint64_t v55 = type metadata accessor for CatalogTipSection();
        sub_100042D14(v45, (uint64_t)v52 + *(int *)(v55 + 36));
        int v56 = (void *)((char *)v52 + *(int *)(v55 + 40));
        *int v56 = v49;
        v56[1] = v51;
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v74);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v52, 0, 1, v55);
      }
      swift_release();
      sub_10008DB18(v33, &qword_10095D148);
      sub_10008DB18(v65, &qword_10095D150);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v35, v32);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v64, v63);
      uint64_t v31 = &qword_1009556A0;
      uint64_t v30 = v36;
    }
  }
  sub_10008DB18(v30, v31);
  uint64_t v37 = type metadata accessor for CatalogTipSection();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v73, 1, 1, v37);
}

uint64_t sub_100042D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogTipSectionItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_100042D78(void *a1, void *a2, void *a3, void *a4, unsigned char *a5, void *a6, char *a7)
{
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pairedWatchManager;
  type metadata accessor for TrendsPairedWatchManager();
  swift_allocObject();
  uint64_t v15 = a7;
  *(void *)&a7[v14] = sub_1000E6BB0();
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue;
  v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers] = _swiftEmptyDictionarySingleton;
  v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_calculatesLongTermFits] = 0;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365;
  *(void *)&v15[v17] = sub_1000D67B0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90;
  *(void *)&v15[v18] = sub_1000D67B0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType90;
  *(void *)&v15[v19] = sub_1000431F8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType365;
  *(void *)&v15[v20] = sub_1000431F8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType90;
  *(void *)&v15[v21] = sub_100043118((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType365;
  *(void *)&v15[v22] = sub_100043118((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends] = _swiftEmptyArrayStorage;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends] = _swiftEmptyArrayStorage;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends] = _swiftEmptyArrayStorage;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_operationQueue;
  id v24 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v24 setQualityOfService:25];
  [v24 setMaxConcurrentOperationCount:1];

  *(void *)&v15[v23] = v24;
  uint64_t v25 = (uint64_t)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365];
  sub_1000E621C(v37);
  sub_1000D8EAC((uint64_t)v37, v25);
  sub_1000D8EAC((uint64_t)v37, (uint64_t)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90]);
  Date.init(timeIntervalSinceReferenceDate:)();
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_retryCount] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_maxRetryCount] = 3;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_retryInterval] = 0x4034000000000000;
  type metadata accessor for ActivityStatisticsBuilder();
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = a1;
  v26[3] = a2;
  v26[4] = a3;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsBuilder] = v26;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_unitManager] = a4;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_activityDataProvider] = a5;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_workoutProvider] = a3;
  v15[v16] = a5[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pregnancyStateProvider] = a6;
  uint64_t v27 = qword_10094B130;
  swift_unknownObjectRetain();
  id v28 = a3;
  id v29 = a1;
  id v30 = a2;
  id v31 = a4;
  uint64_t v32 = a5;
  id v33 = a6;
  if (v27 != -1) {
    swift_once();
  }
  v15[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fakingEnabled] = byte_10096A4E0;

  v36.receiver = v15;
  v36.super_class = (Class)type metadata accessor for TrendsDataProvider();
  uint64_t v34 = (char *)[super init];
  sub_10003126C(v30, v34);

  return v34;
}

unint64_t sub_100043118(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_10095FEB0);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (_OWORD *)(a1 + 40); ; uint64_t i = (_OWORD *)((char *)i + 24))
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      long long v11 = *i;
      unint64_t result = sub_1000D696C(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1000431F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_10095FEB8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (long long *)(a1 + 40); ; i += 3)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      long long v13 = i[1];
      long long v14 = *i;
      uint64_t v6 = *((void *)i + 4);
      unint64_t result = sub_1000D696C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v9 = v3[7] + 40 * result;
      *(_OWORD *)uint64_t v9 = v14;
      *(_OWORD *)(v9 + 16) = v13;
      *(void *)(v9 + 32) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_100043300()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t v42 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v43 = v0;
  while (1)
  {
    if (v6)
    {
      uint64_t v46 = (v6 - 1) & v6;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v14 = *(void *)(v40 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v41) {
        break;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v41) {
          break;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v41) {
            break;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v41) {
              break;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v15);
            if (!v14)
            {
              uint64_t v16 = v8 + 6;
              if (v8 + 6 >= v41) {
                break;
              }
              unint64_t v14 = *(void *)(v40 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_46;
                  }
                  if (v15 >= v41) {
                    goto LABEL_37;
                  }
                  unint64_t v14 = *(void *)(v40 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v15 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v46 = (v14 - 1) & v14;
    int64_t v47 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    uint64_t v19 = v0[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16))(v17, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v12, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v17, v19);
    uint64_t v20 = BodyFocus.identifier.getter();
    uint64_t v22 = v21;
    uint64_t v23 = BodyFocus.name.getter();
    uint64_t v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1000DA1C0(v20, v22);
    uint64_t v29 = v3[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v3[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_1000DA1C0(v20, v22);
      if ((v31 & 1) != (v32 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_4:
        uint64_t v9 = (uint64_t *)(v3[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v9 = v23;
        v9[1] = v25;
        goto LABEL_5;
      }
    }
    v3[(v28 >> 6) + 8] |= 1 << v28;
    id v33 = (uint64_t *)(v3[6] + 16 * v28);
    *id v33 = v20;
    v33[1] = v22;
    uint64_t v34 = (uint64_t *)(v3[7] + 16 * v28);
    *uint64_t v34 = v23;
    v34[1] = v25;
    uint64_t v35 = v3[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_44;
    }
    v3[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v0 = v43;
    uint64_t v10 = v43[7];
    uint64_t v11 = v43[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v42)(v10, v11);
    unint64_t v6 = v46;
    int64_t v8 = v47;
  }
LABEL_37:
  uint64_t v38 = (void *)v0[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

id sub_100043740()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.Size.small(_:), v4);
  UIButton.Configuration.buttonSize.setter();
  id v8 = [self secondarySystemFillColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id result = [self keyColors];
  if (result)
  {
    uint64_t v10 = result;
    id v11 = [result nonGradientTextColor];

    UIButton.Configuration.baseForegroundColor.setter();
    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v16 = qword_10094AD88;
    uint64_t v17 = NSFontAttributeName;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = (void *)qword_100998198;
    *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    *(void *)(inited + 40) = v18;
    id v19 = v18;
    sub_1000DFC2C(inited);
    AttributeContainer.init(_:)();
    AttributedString.init(_:attributes:)();
    uint64_t v20 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 0, 1, v20);
    return (id)UIButton.Configuration.attributedTitle.setter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100043AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  uint64_t v8 = Text.init(_:)();
  uint64_t v10 = v9;
  uint64_t v41 = v11;
  char v13 = v12 & 1;
  static Font.callout.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  LOBYTE(v6) = v17;
  v39[1] = v18;
  swift_release();
  sub_1000A06C0(v8, v10, v13);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v40 = Text.fontWeight(_:)();
  uint64_t v41 = v19;
  uint64_t v21 = v20;
  LOBYTE(v4) = v22 & 1;
  sub_1000A06C0(v14, v16, v6 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v14) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = static VerticalAlignment.center.getter();
  sub_100037904(v42, (uint64_t)v43);
  v44[360] = 0;
  memcpy(&v44[7], v43, 0x161uLL);
  v45[0] = v32;
  v45[1] = 0;
  LOBYTE(v45[2]) = 0;
  memcpy((char *)&v45[2] + 1, v44, 0x168uLL);
  char v54 = v4;
  char v52 = 0;
  char v49 = 0;
  char v47 = 0;
  memcpy(&v46[7], v45, 0x179uLL);
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v53;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v53[3];
  char v33 = v52;
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v51;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v51[3];
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v50[3];
  char v34 = v49;
  *(_DWORD *)(a2 + 97) = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v48[3];
  char v35 = v47;
  uint64_t v37 = v40;
  uint64_t v36 = v41;
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = v21;
  *(unsigned char *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 3;
  *(unsigned char *)(a2 + 48) = v33;
  *(unsigned char *)(a2 + 56) = v14;
  *(void *)(a2 + 64) = v25;
  *(void *)(a2 + 72) = v27;
  *(void *)(a2 + 80) = v29;
  *(void *)(a2 + 88) = v31;
  *(unsigned char *)(a2 + 96) = v34;
  *(void *)(a2 + 104) = 0x4020000000000000;
  *(unsigned char *)(a2 + 112) = v35;
  memcpy((void *)(a2 + 113), v46, 0x180uLL);
  v55[0] = v32;
  v55[1] = 0;
  char v56 = 0;
  memcpy(v57, v44, sizeof(v57));
  sub_1000A1750(v37, v21, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000185F0((uint64_t)v45);
  sub_100018038((uint64_t)v55);
  sub_1000A06C0(v37, v21, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100043ED0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for ActivityDashboardViewController();
  v27.receiver = v1;
  v27.super_class = v7;
  [super viewDidAppear:a1 & 1];
  v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 2;
  if (v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation + 8])
  {
    static os_log_type_t.default.getter();
    id v8 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    [v1 presentAppSettingsShowingPane:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation]];
  }
  sub_1000B7550(&qword_10095F750, (void (*)(uint64_t))type metadata accessor for ActivityDashboardViewController);
  sub_1000B7550((unint64_t *)&unk_10095F758, (void (*)(uint64_t))type metadata accessor for ActivityDashboardViewController);
  MetricResignActiveObserving<>.addResignActiveObserver()();
  id v9 = [v1 navigationController];
  if (v9)
  {
    uint64_t v10 = v9;
    [v9 setDelegate:v2];
  }
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator];
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;

  uint64_t v12 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                  + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator);
  swift_retain();
  id v13 = [v2 navigationController];
  uint64_t v14 = *(void **)(v12 + 144);
  *(void *)(v12 + 144) = v13;
  swift_release();

  dispatch thunk of MarketingPaletteBannerPresenter.onAppear()();
  uint64_t v15 = type metadata accessor for TaskPriority();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v6, 1, 1, v15);
  type metadata accessor for MainActor();
  char v17 = v2;
  uint64_t v18 = static MainActor.shared.getter();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v17;
  sub_1000713D0((uint64_t)v6, (uint64_t)&unk_10095F770, (uint64_t)v19);
  swift_release();
  v16(v6, 1, 1, v15);
  uint64_t v20 = v17;
  uint64_t v21 = static MainActor.shared.getter();
  char v22 = (void *)swift_allocObject();
  void v22[2] = v21;
  void v22[3] = &protocol witness table for MainActor;
  v22[4] = v20;
  sub_1000713D0((uint64_t)v6, (uint64_t)&unk_10095F780, (uint64_t)v22);
  swift_release();
  v16(v6, 1, 1, v15);
  uint64_t v23 = v20;
  uint64_t v24 = static MainActor.shared.getter();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  unsigned char v25[4] = v23;
  sub_1000713D0((uint64_t)v6, (uint64_t)&unk_10095F790, (uint64_t)v25);
  return swift_release();
}

char *sub_1000442A0(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v38 = a2;
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener;
  id v13 = objc_allocWithZone((Class)type metadata accessor for ActivitySummaryChangeListener());
  uint64_t v14 = v4;
  *(void *)&v4[v12] = [v13 init];
  v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser] = 0;
  v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isOriginalWheelchairObserver] = 1;
  uint64_t v15 = &v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider____lazy_storage___currentCalendar];
  uint64_t v16 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_minValueThresholdForActiveMinutes] = 0x3F1A36E2EB1C432DLL;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v8);
  uint64_t v17 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_internalQueue] = v17;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore] = a1;
  id v18 = objc_allocWithZone((Class)type metadata accessor for ActivityQueryExecutor());
  id v19 = a1;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_queryExecutor] = sub_100018AEC(v19);
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_dataCache] = [objc_allocWithZone((Class)type metadata accessor for ActivityChartDataCache()) init];
  uint64_t v20 = self;
  [v20 setHealthStore:v19];
  id v21 = [v20 sharedInstance];
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache] = v21;
  [v21 loadDataIfNeeded];
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider] = a3;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_achievementsDataProvider] = a4;
  char v22 = v38;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_wheelchairCache] = v38;
  id v23 = a3;
  id v24 = a4;
  id v25 = v22;

  uint64_t v26 = (objc_class *)type metadata accessor for ActivityDataProvider();
  v39.receiver = v14;
  v39.super_class = v26;
  objc_super v27 = (char *)[super init];
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_wheelchairCache;
  uint64_t v29 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_wheelchairCache];
  uint64_t v30 = v27;
  unsigned __int8 v31 = [v29 isWheelchairUser];
  v30[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser] = v31;
  [*(id *)&v27[v28] addObserver:v30];
  uint64_t v32 = *(char **)&v30[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener];
  char v33 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers];
  char v34 = v30;
  char v35 = v32;
  [v33 addObject:v34];

  return v34;
}

void sub_100044638(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Font.TextStyle();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_1009515D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13;
  id v15 = [self keyColors];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v39 = v3;
    uint64_t v40 = v2;
    uint64_t v41 = v9;
    uint64_t v42 = a1;
    id v17 = [v15 nonGradientTextColor];

    if (v17)
    {
      char v18 = v14 & 1;
      *(void *)&long long v57 = Color.init(uiColor:)();
      uint64_t v19 = Text.foregroundStyle<A>(_:)();
      uint64_t v21 = v20;
      char v23 = v22 & 1;
      sub_1000A06C0(v10, v12, v18);
      swift_release();
      swift_bridgeObjectRelease();
      id v25 = v43;
      uint64_t v24 = v44;
      uint64_t v26 = v45;
      (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for Font.TextStyle.body(_:), v45);
      static Font.Weight.semibold.getter();
      static Font.system(_:weight:)();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
      uint64_t v28 = v39;
      uint64_t v27 = v40;
      uint64_t v29 = v46;
      (*(void (**)(char *, void, uint64_t))(v39 + 104))(v46, enum case for Font.Leading.tight(_:), v40);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
      uint64_t v30 = Text.font(_:)();
      uint64_t v32 = v31;
      LOBYTE(v28) = v33;
      uint64_t v35 = v34;
      swift_release();
      sub_1000A06C0(v19, v21, v23);
      swift_bridgeObjectRelease();
      uint64_t v36 = static Alignment.center.getter();
      sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v57, 0.0, 1, 0.0, 1, v36, v37, v30, v32, v28 & 1, v35);
      sub_1000A06C0(v30, v32, v28 & 1);
      swift_bridgeObjectRelease();
      v56[6] = v63;
      v56[7] = v64;
      v56[8] = v65;
      v56[2] = v59;
      v56[3] = v60;
      v56[4] = v61;
      uint64_t v56[5] = v62;
      v56[0] = v57;
      v56[1] = v58;
      long long v53 = v63;
      long long v54 = v64;
      long long v55 = v65;
      long long v49 = v59;
      long long v50 = v60;
      long long v51 = v61;
      long long v52 = v62;
      long long v47 = v57;
      long long v48 = v58;
      static FitnessAccessibilityIdentifier.SummaryView.seeAllCategoriesButton.getter();
      sub_1000AFA94(&qword_10094C420);
      sub_1000E20A4();
      uint64_t v38 = (uint64_t)v41;
      View.accessibilityIdentifier(_:)();
      swift_bridgeObjectRelease();
      sub_100019340((uint64_t)v56);
      sub_1000E1AB0(v38, v42);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100044B1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player;
  if (!*(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_player])
  {
    uint64_t v6 = OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_playerLayer;
    if (!*(void *)&v0[OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_playerLayer])
    {
      URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC10FitnessApp21TrendsSplashVideoView_url);
      uint64_t v8 = v7;
      id v9 = [self assetWithURL:v7];

      id v10 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v9];
      id v11 = [objc_allocWithZone((Class)AVQueuePlayer) init];
      [v11 _setParticipatesInAudioSession:0];
      [v11 setPreventsDisplaySleepDuringVideoPlayback:0];
      [v11 setAllowsExternalPlayback:0];
      [v11 insertItem:v10 afterItem:0];
      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
      type metadata accessor for MainActor();
      id v13 = v11;
      uint64_t v14 = static MainActor.shared.getter();
      id v15 = (void *)swift_allocObject();
      void v15[2] = v14;
      v15[3] = &protocol witness table for MainActor;
      _DWORD v15[4] = v13;
      sub_10005810C((uint64_t)v4, (uint64_t)&unk_10094FDA0, (uint64_t)v15);
      swift_release();
      id v16 = [self playerLayerWithPlayer:v13];
      id v17 = *(void **)&v1[v5];
      *(void *)&v1[v5] = v13;
      id v18 = v13;

      uint64_t v19 = *(void **)&v1[v6];
      *(void *)&v1[v6] = v16;
      id v20 = v16;

      id v21 = [v1 layer];
      [v21 addSublayer:v20];
    }
  }
}

Swift::Int sub_100044DCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_10094F268);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        id v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

char *sub_100044F70(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_10009EDF0((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v7 = a3[7];
  uint64_t v8 = *(void **)&a1[v7];
  id v9 = *(void **)&a2[v7];
  *(void *)&a1[v7] = v9;
  id v10 = v9;

  uint64_t v11 = a3[8];
  unint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)unint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  uint64_t v15 = &a1[v14];
  id v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void **)&a1[v17];
  uint64_t v19 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v19;
  id v20 = v19;

  uint64_t v21 = a3[11];
  uint64_t v22 = (uint64_t)&a1[v21];
  BOOL v23 = (uint64_t *)&a2[v21];
  uint64_t v24 = *(void *)&a2[v21 + 24];
  if (*(void *)&a1[v21 + 24])
  {
    if (v24)
    {
      sub_10009EDF0((uint64_t *)v22, v23);
      goto LABEL_13;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v22);
  }
  else if (v24)
  {
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = v23[4];
    (**(void (***)(uint64_t, char *))(v24 - 8))(v22, (char *)v23);
    goto LABEL_13;
  }
  long long v25 = *(_OWORD *)v23;
  long long v26 = *((_OWORD *)v23 + 1);
  *(void *)(v22 + 32) = v23[4];
  *(_OWORD *)uint64_t v22 = v25;
  *(_OWORD *)(v22 + 16) = v26;
LABEL_13:
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  swift_retain();
  swift_release();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v30 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v31 = &v28[v30];
  uint64_t v32 = &v29[v30];
  uint64_t v33 = type metadata accessor for GeometryProxy();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_18:
    uint64_t v38 = sub_1000AFA94(&qword_10094C580);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_19:
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  int v42 = v35(&a1[v39], 1, v33);
  int v43 = v35(v41, 1, v33);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v40, v41, v33);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
    goto LABEL_24;
  }
  if (v43)
  {
LABEL_24:
    uint64_t v44 = sub_1000AFA94(&qword_10094C580);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v40, v41, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
LABEL_25:
  uint64_t v45 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v40[*(int *)(v45 + 28)] = *(void *)&v41[*(int *)(v45 + 28)];
  swift_retain();
  swift_release();
  uint64_t v46 = a3[14];
  long long v47 = &a1[v46];
  long long v48 = &a2[v46];
  long long v49 = *(_OWORD *)v48;
  v47[16] = v48[16];
  *(_OWORD *)long long v47 = v49;
  *((void *)v47 + 3) = *((void *)v48 + 3);
  swift_retain();
  swift_release();
  uint64_t v50 = a3[15];
  long long v51 = &a1[v50];
  long long v52 = &a2[v50];
  *(void *)&a1[v50] = *(void *)&a2[v50];
  swift_retain();
  swift_release();
  *((void *)v51 + 1) = *((void *)v52 + 1);
  swift_retain();
  swift_release();
  uint64_t v53 = a3[16];
  long long v54 = &a1[v53];
  long long v55 = &a2[v53];
  *long long v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000454C8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v70 = *(void *)(v1 - 8);
  uint64_t v71 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  long long v65 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  long long v64 = (char *)v59 - v4;
  uint64_t v5 = type metadata accessor for IntroSheet();
  uint64_t v68 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v66 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v69 = (uint64_t)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100959610);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v67 = (uint64_t)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v59 - v12;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  long long v63 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v72 = (char *)v59 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)v59 - v21;
  __chkstk_darwin(v20);
  BOOL v23 = (char *)v59 - v22;
  static Log.default.getter();
  uint64_t v24 = v0;
  long long v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v60 = v5;
    uint64_t v28 = (uint8_t *)v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    *(_DWORD *)uint64_t v28 = 136315138;
    v75[0] = v29;
    v59[1] = v28 + 4;
    uint64_t v30 = (uint64_t)&v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_introSheetConfiguration];
    swift_beginAccess();
    sub_1000AEF2C(v30, (uint64_t)v13, &qword_100959610);
    uint64_t v31 = Optional.description.getter();
    unint64_t v33 = v32;
    sub_10008DB18((uint64_t)v13, &qword_100959610);
    uint64_t v74 = sub_10008F1F4(v31, v33, v75);
    uint64_t v14 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "SeymourDiscoverySheetCoordinator: evaluate should show intro sheet %s", v28, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v61;
    swift_slowDealloc();
    uint64_t v5 = v60;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v23, v14);
  if (v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_forceShowingIntroSheet] == 1)
  {
    uint64_t v35 = v73;
    static Log.default.getter();
    int v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      uint64_t v39 = "SeymourDiscoverySheetCoordinator: forceShowingIntroSheet";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v36, v37, v39, v38, 2u);
      swift_slowDealloc();
      goto LABEL_11;
    }
    goto LABEL_11;
  }
  if ([*(id *)&v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_badgingProvider] hasAmeliaBadge])
  {
    uint64_t v35 = v72;
    static Log.default.getter();
    int v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      uint64_t v39 = "SeymourDiscoverySheetCoordinator: showing IntroSheet for Amelia badging";
      goto LABEL_10;
    }
LABEL_11:

    v34(v35, v14);
    return 1;
  }
  if ((sub_1000290F4() & 1) == 0) {
    return 0;
  }
  if (sub_10002EF1C()) {
    return 0;
  }
  if (v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_hasVisitedSeymourTab]) {
    return 0;
  }
  uint64_t v41 = (uint64_t)&v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastIntroSheetViewDate];
  swift_beginAccess();
  uint64_t v42 = v69;
  sub_1000AEF2C(v41, v69, (uint64_t *)&unk_10095B890);
  LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v42, 1, v71);
  sub_10008DB18(v42, (uint64_t *)&unk_10095B890);
  if (v41 != 1) {
    return 0;
  }
  int v43 = &v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_introSheetConfiguration];
  swift_beginAccess();
  uint64_t v44 = (uint64_t)v43;
  uint64_t v45 = v67;
  sub_1000AEF2C(v44, v67, &qword_100959610);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v45, 1, v5) == 1)
  {
    sub_10008DB18(v45, &qword_100959610);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v66, v45, v5);
  uint64_t result = IntroSheet.firstAppLaunchTriggerConditionInDays.getter();
  if ((unsigned __int128)(result * (__int128)24) >> 64 != (24 * result) >> 63)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((unsigned __int128)(24 * result * (__int128)60) >> 64 != (1440 * result) >> 63)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((unsigned __int128)(1440 * result * (__int128)60) >> 64 != (86400 * result) >> 63)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  double v46 = (double)(86400 * result);
  long long v47 = v64;
  Date.init()();
  long long v48 = &v24[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_firstAppLaunchDate];
  uint64_t v50 = v70;
  uint64_t v49 = v71;
  long long v51 = v65;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v65, v48, v71);
  Date.timeIntervalSince(_:)();
  double v53 = v52;
  long long v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  v54(v51, v49);
  v54(v47, v49);
  if (v53 <= v46)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v5);
    return 0;
  }
  long long v55 = v63;
  static Log.default.getter();
  char v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    long long v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "SeymourDiscoverySheetCoordinator: qualified to show intro sheet", v58, 2u);
    swift_slowDealloc();
  }

  v34(v55, v14);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v5);
  return 1;
}

id sub_100045DAC()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    return 0;
  }
  id v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 BOOLForKey:v4];

  if (v5)
  {
    static os_log_type_t.default.getter();
    id v6 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  return v5;
}

void *initializeBufferWithCopyOfBuffer for AwardEntity(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

id sub_100045F18@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a1 && a2)
  {
    id v11 = a1;
    id v54 = a2;
    id result = [a3 unitManager];
    if (!result)
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v13 = result;
    id v14 = [result userActiveEnergyBurnedUnit];

    uint64_t v15 = self;
    [v11 doubleValueForUnit:v14];
    id v17 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v16];
    id v18 = [v15 stringWithNumber:v17 decimalPrecision:1 roundingMode:1];

    if (v18)
    {
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      [v54 doubleValueForUnit:v14];
      id v22 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v21];
      id v23 = [v15 stringWithNumber:v22 decimalPrecision:1 roundingMode:1];

      if (v23)
      {
        uint64_t v24 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        id result = [a3 localizedShortActiveEnergyUnitString];
        if (result)
        {
          uint64_t v27 = result;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1000A06D0();
          uint64_t v28 = (char *)StringProtocol.localizedUppercase.getter();
          uint64_t v30 = v29;
          swift_bridgeObjectRelease();
          if (a5) {
            sub_100525974(v51, v20, (uint64_t)v24, v26, (uint64_t)v28, v30, a4, a6);
          }
          else {
            sub_1000533BC(v51, v20, v24, v26, v28, v30, a4, a6);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v50 = type metadata accessor for AttributedString();
          return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(a6, 0, 1, v50);
        }
LABEL_21:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
    }

    uint64_t v49 = type metadata accessor for AttributedString();
    uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
    uint64_t v46 = v49;
    uint64_t v47 = a6;
    uint64_t v48 = 1;
  }
  else
  {
    uint64_t v31 = self;
    id v32 = [v31 mainBundle];
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    id v38 = [v31 mainBundle];
    NSString v39 = String._bridgeToObjectiveC()();
    id v40 = [v38 localizedStringForKey:v39 value:0 table:0];

    uint64_t v41 = (void (*)(void, void, void, void))static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    if (a5) {
      sub_100525974(v35, v37, (uint64_t)v41, v43, 0, 0xE000000000000000, a4, a6);
    }
    else {
      sub_1000533BC(v35, v37, v41, v43, 0, 0xE000000000000000, a4, a6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = type metadata accessor for AttributedString();
    uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
    uint64_t v46 = v44;
    uint64_t v47 = a6;
    uint64_t v48 = 0;
  }

  return (id)v45(v47, v48, 1, v46);
}

void *sub_100046424(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  id v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_1000DE540(0, v1, 0);
    uint64_t v4 = a1 + 32;
    id v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_100046568(v4, (uint64_t)v11);
      sub_1000AFA94(&qword_10094F398);
      sub_1000AFA94(&qword_10094E820);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000DE540(0, v2[2] + 1, 1);
        id v2 = v15;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1000DE540(v5 > 1, v6 + 1, 1);
        id v2 = v15;
      }
      v2[2] = v6 + 1;
      uint64_t v7 = &v2[6 * v6];
      long long v8 = v12;
      long long v9 = v14;
      v7[3] = v13;
      v7[4] = v9;
      uint64_t v7[2] = v8;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100046568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000465D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_1000466C8(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10096A4D8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[6] = [objc_allocWithZone((Class)type metadata accessor for InvitationDestinationCoordinator()) init];
  double v16 = (char *)v2 + OBJC_IVAR____TtC10FitnessApp27ReachableContactsDataSource__friendSuggestionList;
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_100950B70);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v2[4] = a1;
  id v17 = a1;
  id v18 = [v17 allDestinationsForActiveOrPendingFriends];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v20 = &_swiftEmptySetSingleton;
  }
  v2[2] = v20;
  double v21 = self;
  id result = [v21 sharedInstanceForServiceIdentifier:kASiCloudServiceIdentifier];
  if (result)
  {
    id v23 = result;
    id v34 = v17;
    id result = [v21 sharedInstanceForServiceIdentifier:kASiMessageServiceIdentifier];
    if (result)
    {
      uint64_t v24 = result;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_100756B20;
      *(void *)(v25 + 32) = v23;
      *(void *)(v25 + 40) = v24;
      aBlock[0] = v25;
      specialized Array._endMutation()();
      v2[5] = aBlock[0];
      id v26 = objc_allocWithZone((Class)CNContactStore);
      id v27 = v23;
      id v28 = v24;
      long long v2[3] = [v26 init];
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v8);
      uint64_t v29 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      aBlock[4] = sub_1000E646C;
      aBlock[5] = v2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      void aBlock[3] = &unk_1008D7EC0;
      uint64_t v30 = _Block_copy(aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      id v40 = _swiftEmptyArrayStorage;
      sub_100075B54();
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      uint64_t v31 = v36;
      uint64_t v32 = v39;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v30);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v32);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v37);
      swift_release();
      return v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100046C38(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v59 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Font.Leading();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  __chkstk_darwin(v5);
  id v54 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100951758);
  uint64_t v60 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v58 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100951738);
  __chkstk_darwin(v11 - 8);
  os_log_type_t v57 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v13 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v15 = v14;
  char v17 = v16;
  id v18 = [self keyColors];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v47 = v3;
    uint64_t v48 = v9;
    uint64_t v49 = v2;
    uint64_t v50 = a1;
    id v20 = [v18 nonGradientTextColor];

    if (v20)
    {
      char v21 = v17 & 1;
      *(void *)&v71[0] = Color.init(uiColor:)();
      uint64_t v22 = Text.foregroundStyle<A>(_:)();
      uint64_t v24 = v23;
      char v26 = v25 & 1;
      sub_1000A06C0(v13, v15, v21);
      swift_release();
      swift_bridgeObjectRelease();
      id v28 = v51;
      uint64_t v27 = v52;
      uint64_t v29 = v53;
      (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for Font.TextStyle.body(_:), v53);
      static Font.Weight.semibold.getter();
      static Font.system(_:weight:)();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
      uint64_t v31 = v54;
      uint64_t v30 = v55;
      uint64_t v32 = v56;
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for Font.Leading.tight(_:), v56);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      uint64_t v33 = Text.font(_:)();
      uint64_t v35 = v34;
      LOBYTE(v30) = v36;
      uint64_t v38 = v37;
      swift_release();
      sub_1000A06C0(v22, v24, v26);
      swift_bridgeObjectRelease();
      uint64_t v39 = static Alignment.center.getter();
      sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v71, 0.0, 1, 0.0, 1, v39, v40, v33, v35, v30 & 1, v38);
      sub_1000A06C0(v33, v35, v30 & 1);
      swift_bridgeObjectRelease();
      long long v67 = v71[6];
      long long v68 = v71[7];
      long long v69 = v71[8];
      long long v63 = v71[2];
      long long v64 = v71[3];
      long long v65 = v71[4];
      long long v66 = v71[5];
      long long v61 = v71[0];
      long long v62 = v71[1];
      uint64_t v41 = v59;
      static AccessibilityChildBehavior.contain.getter();
      uint64_t v42 = sub_1000AFA94(&qword_10094C420);
      unint64_t v43 = sub_1000E20A4();
      uint64_t v44 = v58;
      View.accessibilityElement(children:)();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v49);
      v70[6] = v67;
      v70[7] = v68;
      v70[8] = v69;
      v70[2] = v63;
      v70[3] = v64;
      v70[4] = v65;
      v70[5] = v66;
      v70[0] = v61;
      v70[1] = v62;
      sub_100019340((uint64_t)v70);
      static FitnessAccessibilityIdentifier.SummaryView.editSummaryButton.getter();
      *(void *)&long long v61 = v42;
      *((void *)&v61 + 1) = v43;
      swift_getOpaqueTypeConformance2();
      uint64_t v45 = (uint64_t)v57;
      uint64_t v46 = v48;
      View.accessibilityIdentifier(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v46);
      sub_1000AEEC8(v45, v50, &qword_100951738);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1000472A0()
{
  int64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = self;
  id v4 = [v3 standardUserDefaults];
  id v5 = [v3 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 objectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100074898((uint64_t)v18);

    NSString v8 = String._bridgeToObjectiveC()();
    unsigned int v9 = [v4 BOOLForKey:v8];

    os_log_type_t v10 = static os_log_type_t.default.getter();
    uint64_t v11 = (void *)HKLogActivity;
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(HKLogActivity, v10))
    {
      uint64_t v13 = v11;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 67109120;
      LODWORD(v18[0]) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v12, "Loaded cached subscription status: %{BOOL}d", v14, 8u);
      swift_slowDealloc();
    }
    *((unsigned char *)v1 + 80) = v9;
  }
  else
  {
    memset(v18, 0, 32);
    sub_100074898((uint64_t)v18);
  }
  swift_getObjectType();
  type metadata accessor for ServiceSubscriptionUpdated();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v18);
  swift_release();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v2;
  swift_retain();
  sub_10002F570((uint64_t)sub_1000EABF0, v16);

  swift_release();
  return swift_release();
}

void sub_1000475C4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v41 = a5;
  uint64_t v12 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v12 - 8);
  uint64_t v40 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for MetricFormattingHelper();
  __chkstk_darwin(v39);
  uint64_t v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_lock;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  char v17 = v6;
  *(void *)&v6[v16] = UnfairLock.init()();
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_observers] = _swiftEmptyArrayStorage;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics] = &_swiftEmptySetSingleton;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates;
  sub_1000AFA94(&qword_10095C500);
  swift_allocObject();
  *(void *)&v17[v18] = PassthroughSubject.init()();
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activityDataProvider] = a1;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_configurationProvider] = a2;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_healthStore] = a3;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider] = a4;
  uint64_t v19 = v41;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_mindfulnessDataProvider] = v41;
  id v20 = objc_allocWithZone((Class)CHWorkoutFormattingManager);
  id v21 = a1;
  id v22 = a2;
  id v23 = a3;
  id v24 = a4;
  id v25 = v19;
  id v26 = [v20 initWithFitnessUIFormattingManager:a6 healthStore:v23];
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutFormattingManager] = v26;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache] = sub_1000DFFC8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache] = sub_1000DFE88((uint64_t)_swiftEmptyArrayStorage);
  id v27 = v23;
  id v28 = [a6 unitManager];
  id v29 = [objc_allocWithZone((Class)CHWorkoutDataCalculator) initWithHealthStore:v27 unitManager:v28];

  if (v29)
  {
    *(void *)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataCalculator] = v29;
    void *v15 = a6;
    uint64_t v30 = v39;
    uint64_t v31 = self;
    id v32 = a6;
    id v33 = [v31 mainBundle];
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRetain();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(int *)(v30 + 24);
    *(void *)((char *)v15 + v36) = sub_10009F6D8();
    sub_1000C19A0((uint64_t)v15, (uint64_t)&v17[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricFormattingHelper], (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);

    uint64_t v37 = (objc_class *)type metadata accessor for MetricsDataProvider();
    v42.receiver = v17;
    v42.super_class = v37;
    [super init];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100047994()
{
  uint64_t v137 = type metadata accessor for DateComponents();
  uint64_t v141 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v136 = (char *)&v119 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for Calendar();
  uint64_t v140 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v134 = (char *)&v119 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v124 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v125 = (uint64_t)&v119 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v128 = (char *)&v119 - v9;
  __chkstk_darwin(v8);
  uint64_t v131 = (char *)&v119 - v10;
  uint64_t v132 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v132 - 8);
  uint64_t v12 = __chkstk_darwin(v132);
  unint64_t v122 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v126 = (char *)&v119 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v127 = (char *)&v119 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v130 = (char *)&v119 - v19;
  __chkstk_darwin(v18);
  uint64_t v138 = (char *)&v119 - v20;
  uint64_t v21 = type metadata accessor for WhatsNewSheet();
  uint64_t v142 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v23 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_100959608);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v139 = (uint64_t)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  id v28 = (char *)&v119 - v27;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v144 = *(void *)(v29 - 8);
  uint64_t v145 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  BOOL v123 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  long long v143 = (char *)&v119 - v33;
  __chkstk_darwin(v32);
  id v35 = (char *)&v119 - v34;
  static Log.default.getter();
  uint64_t v36 = v0;
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v129 = v11;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v121 = (char *)v41;
    uint64_t v133 = v23;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v147 = v41;
    uint64_t v120 = v40 + 4;
    uint64_t v42 = (uint64_t)&v36[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion];
    swift_beginAccess();
    sub_1000AEF2C(v42, (uint64_t)v28, &qword_100959608);
    uint64_t v43 = Optional.description.getter();
    unint64_t v45 = v44;
    sub_10008DB18((uint64_t)v28, &qword_100959608);
    uint64_t v146 = sub_10008F1F4(v43, v45, &v147);
    id v23 = v133;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "SeymourDiscoverySheetCoordinator: evaluate should show what's new sheet %s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v129;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v46 = v145;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v144 + 8);
  v47(v35, v145);
  if (v36[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_forceShowingWhatsNewSheet] == 1)
  {
    uint64_t v48 = v143;
    static Log.default.getter();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "SeymourDiscoverySheetCoordinator: forceShowingWhatsNewSheet", v51, 2u);
      swift_slowDealloc();
    }

    v47(v48, v46);
    return 1;
  }
  if (sub_1000290F4() & 1) == 0 || (sub_10002EF1C()) {
    return 0;
  }
  uint64_t v53 = &v36[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion];
  swift_beginAccess();
  uint64_t v54 = (uint64_t)v53;
  uint64_t v55 = v139;
  sub_1000AEF2C(v54, v139, &qword_100959608);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v55, 1, v21) == 1)
  {
    uint64_t v56 = &qword_100959608;
    uint64_t v57 = v55;
LABEL_18:
    sub_10008DB18(v57, v56);
    return 0;
  }
  uint64_t v121 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v23, v55, v21);
  long long v58 = v138;
  Date.init()();
  long long v59 = v134;
  static Calendar.current.getter();
  uint64_t v60 = v136;
  WhatsNewSheet.startDate.getter();
  long long v61 = v131;
  Calendar.date(from:)();
  long long v62 = *(char **)(v141 + 8);
  v141 += 8;
  long long v143 = v62;
  ((void (*)(char *, uint64_t))v62)(v60, v137);
  long long v63 = *(void (**)(char *, uint64_t))(v140 + 8);
  v140 += 8;
  v63(v59, v135);
  long long v64 = v23;
  uint64_t v65 = v11;
  uint64_t v66 = v11;
  uint64_t v67 = (uint64_t)v61;
  long long v68 = v61;
  uint64_t v69 = v132;
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v70(v68, 1, v132) == 1)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v69);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v64, v21);
    uint64_t v56 = (uint64_t *)&unk_10095B890;
    uint64_t v57 = v67;
    goto LABEL_18;
  }
  uint64_t v133 = v64;
  uint64_t v139 = v21;
  uint64_t v71 = *(char **)(v66 + 32);
  uint64_t v72 = v130;
  uint64_t v120 = (uint8_t *)(v66 + 32);
  uint64_t v131 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v71)(v130, v67, v69);
  sub_1000293DC((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
  if (dispatch thunk of static Comparable.< infix(_:_:)())
  {
    uint64_t v73 = *(void (**)(char *, uint64_t))(v66 + 8);
    v73(v72, v69);
    v73(v58, v69);
LABEL_29:
    (*(void (**)(char *, uint64_t))(v142 + 8))(v133, v139);
    return 0;
  }
  uint64_t v129 = v66;
  uint64_t v74 = v134;
  static Calendar.current.getter();
  uint64_t v75 = v136;
  long long v76 = v133;
  WhatsNewSheet.expirationDate.getter();
  long long v77 = v128;
  Calendar.date(from:)();
  ((void (*)(char *, uint64_t))v143)(v75, v137);
  v63(v74, v135);
  if (v70(v77, 1, v69) == 1)
  {
    long long v78 = *(void (**)(char *, uint64_t))(v129 + 8);
    v78(v130, v69);
    v78(v138, v69);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v76, v139);
    uint64_t v56 = (uint64_t *)&unk_10095B890;
    uint64_t v57 = (uint64_t)v77;
    goto LABEL_18;
  }
  uint64_t v79 = v127;
  ((void (*)(char *, char *, uint64_t))v131)(v127, v77, v69);
  long long v80 = v138;
  if ((static Date.< infix(_:_:)() & 1) == 0)
  {
    uint64_t v90 = *(void (**)(char *, uint64_t))(v129 + 8);
    v90(v79, v69);
    v90(v130, v69);
    v90(v80, v69);
    goto LABEL_29;
  }
  uint64_t result = WhatsNewSheet.introSheetTriggerConditionInDays.getter();
  if ((unsigned __int128)(result * (__int128)24) >> 64 != (24 * result) >> 63)
  {
    __break(1u);
    goto LABEL_44;
  }
  long long v81 = v130;
  uint64_t v82 = v126;
  if ((unsigned __int128)(24 * result * (__int128)60) >> 64 != (1440 * result) >> 63)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v83 = 86400 * result;
  if ((unsigned __int128)(1440 * result * (__int128)60) >> 64 != (86400 * result) >> 63)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v84 = (uint64_t)&v121[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastIntroSheetViewDate];
  swift_beginAccess();
  uint64_t v85 = v84;
  uint64_t v86 = v125;
  sub_1000AEF2C(v85, v125, (uint64_t *)&unk_10095B890);
  uint64_t v87 = v132;
  if (v70((char *)v86, 1, v132) == 1)
  {
    uint64_t v88 = v86;
    uint64_t v89 = *(void (**)(char *, uint64_t))(v129 + 8);
    v89(v79, v87);
    v89(v81, v87);
    v89(v138, v87);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v133, v139);
    uint64_t v56 = (uint64_t *)&unk_10095B890;
    uint64_t v57 = v88;
    goto LABEL_18;
  }
  double v91 = (double)v83;
  ((void (*)(char *, uint64_t, uint64_t))v131)(v82, v86, v87);
  uint64_t v92 = v138;
  Date.timeIntervalSince(_:)();
  if (v93 < v91)
  {
    int v94 = *(void (**)(char *, uint64_t))(v129 + 8);
    v94(v82, v87);
    v94(v79, v87);
    v94(v81, v87);
    v94(v92, v87);
    goto LABEL_29;
  }
  uint64_t v95 = WhatsNewSheet.version.getter();
  if ((v121[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewVersion + 8] & 1) == 0
    && *(void *)&v121[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewVersion] >= v95)
  {
    os_log_type_t v117 = *(void (**)(char *, uint64_t))(v129 + 8);
    uint64_t v118 = v132;
    v117(v82, v132);
    v117(v79, v118);
    v117(v81, v118);
    v117(v138, v118);
    goto LABEL_29;
  }
  uint64_t result = WhatsNewSheet.whatsNewSheetTriggerConditionInDays.getter();
  if ((unsigned __int128)(result * (__int128)24) >> 64 != (24 * result) >> 63) {
    goto LABEL_46;
  }
  if ((unsigned __int128)(24 * result * (__int128)60) >> 64 != (1440 * result) >> 63)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v96 = 86400 * result;
  if ((unsigned __int128)(1440 * result * (__int128)60) >> 64 != (86400 * result) >> 63)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  uint64_t v97 = (uint64_t)&v121[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewDate];
  swift_beginAccess();
  uint64_t v98 = v97;
  uint64_t v99 = v124;
  sub_1000AEF2C(v98, v124, (uint64_t *)&unk_10095B890);
  uint64_t v100 = v132;
  if (v70((char *)v99, 1, v132) == 1)
  {
    sub_10008DB18(v99, (uint64_t *)&unk_10095B890);
    uint64_t v101 = v129;
    uint64_t v102 = v138;
  }
  else
  {
    double v103 = (double)v96;
    uint64_t v104 = v122;
    ((void (*)(char *, uint64_t, uint64_t))v131)(v122, v99, v100);
    uint64_t v102 = v138;
    Date.timeIntervalSince(_:)();
    double v106 = v105;
    uint64_t v101 = v129;
    uint64_t v107 = *(void (**)(char *, uint64_t))(v129 + 8);
    v107(v104, v100);
    if (v106 < v103)
    {
      uint64_t v108 = v132;
      v107(v82, v132);
      v107(v127, v108);
      v107(v81, v108);
      v107(v102, v108);
      goto LABEL_29;
    }
  }
  uint64_t v109 = v123;
  static Log.default.getter();
  uint64_t v110 = Logger.logObject.getter();
  os_log_type_t v111 = static os_log_type_t.default.getter();
  BOOL v112 = os_log_type_enabled(v110, v111);
  uint64_t v113 = v139;
  if (v112)
  {
    uint64_t v114 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v114 = 0;
    _os_log_impl((void *)&_mh_execute_header, v110, v111, "SeymourDiscoverySheetCoordinator: qualified to show what's new sheet", v114, 2u);
    swift_slowDealloc();
  }

  v47(v109, v145);
  uint64_t v115 = *(void (**)(char *, uint64_t))(v101 + 8);
  uint64_t v116 = v132;
  v115(v126, v132);
  v115(v127, v116);
  v115(v81, v116);
  v115(v102, v116);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v133, v113);
  return 1;
}

id sub_100048AD0(void *a1)
{
  swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery] = 0;
  uint64_t v3 = OBJC_IVAR___CHOnboardingCoordinator_queryLock;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v4 = v1;
  *(void *)&v1[v3] = UnfairLock.init()();
  *(void *)&v4[OBJC_IVAR___CHOnboardingCoordinator_notifyTokens] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR___CHOnboardingCoordinator_healthStore] = a1;
  id v5 = a1;
  unint64_t v6 = sub_100034300();
  uint64_t v7 = &v4[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  *uint64_t v7 = v6 & 1;
  uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(v6);
  int16x8_t v9 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_100772EE0), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_100772ED0));
  *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v7 + 1) = vmovn_s16(v9).u32[0];
  v7[5] = BYTE5(v6) & 1;
  void v7[6] = BYTE6(v6) & 1;

  v37.receiver = v4;
  v37.super_class = (Class)type metadata accessor for OnboardingCoordinator();
  id v10 = [super init];
  os_log_type_t v11 = static os_log_type_t.default.getter();
  uint64_t v12 = HKLogActivity;
  id v13 = v10;
  if (os_log_type_enabled(v12, v11))
  {
    uint64_t v14 = v13;
    log = v12;
    id v35 = v5;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v16 = _typeName(_:qualified:)();
    sub_10008F1F4(v16, v17, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v18 = &v14[OBJC_IVAR___CHOnboardingCoordinator_criteria];
    uint64_t v19 = 0x1000000000000;
    if (!v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6]) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = 0x10000000000;
    if (!v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5]) {
      uint64_t v20 = 0;
    }
    uint64_t v21 = &_mh_execute_header;
    if (!v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4]) {
      uint64_t v21 = 0;
    }
    uint64_t v22 = 0x1000000;
    if (!v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3]) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = 0x10000;
    if (!v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2]) {
      uint64_t v23 = 0;
    }
    if (v14[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1]) {
      uint64_t v24 = 256;
    }
    else {
      uint64_t v24 = 0;
    }
    uint64_t v25 = sub_100054304(v24 | *v18 | v23 | v22 | (unint64_t)v21 | v20 | v19);
    sub_10008F1F4(v25, v26, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2048;
    uint64_t v27 = 0x1000000000000;
    if (!v18[6]) {
      uint64_t v27 = 0;
    }
    uint64_t v28 = 0x10000000000;
    if (!v18[5]) {
      uint64_t v28 = 0;
    }
    uint64_t v29 = &_mh_execute_header;
    if (!v18[4]) {
      uint64_t v29 = 0;
    }
    uint64_t v30 = 0x1000000;
    if (!v18[3]) {
      uint64_t v30 = 0;
    }
    uint64_t v31 = 0x10000;
    if (!v18[2]) {
      uint64_t v31 = 0;
    }
    if (v18[1]) {
      uint64_t v32 = 256;
    }
    else {
      uint64_t v32 = 0;
    }
    sub_1000664E4(v32 | *v18 | v31 | v30 | (unint64_t)v29 | v28 | v27);

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, v11, "%s initial criteria: %s phase %ld", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v5 = v35;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10000DDEC();
  sub_100023EE4();

  return v13;
}

uint64_t sub_100048EDC()
{
  sub_100048F34();

  return swift_deallocClassInstance();
}

uint64_t sub_100048F34()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_uuid;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000917F8(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16));
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_100049030(uint64_t a1, uint64_t (*a2)(unsigned char *, char *), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = v5 + 32;
    id v10 = &_swiftEmptyArrayStorage[4];
    uint64_t v27 = v4;
    while (1)
    {
      sub_10008E75C(v9, (uint64_t)v29);
      *(void *)&v30[0] = v7;
      uint64_t result = a2(v29, (char *)v30 + 8);
      long long v31 = v30[0];
      long long v32 = v30[1];
      long long v33 = v30[2];
      if (!v8)
      {
        unint64_t v12 = v6[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        id v13 = a2;
        int64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1) {
          uint64_t v15 = 1;
        }
        else {
          uint64_t v15 = v14;
        }
        sub_1000AFA94(a3);
        uint64_t v16 = (void *)swift_allocObject();
        uint64_t v17 = (uint64_t)(j__malloc_size(v16) - 32) / 48;
        v16[2] = v15;
        v16[3] = 2 * v17;
        unint64_t v18 = (unint64_t)(v16 + 4);
        uint64_t v19 = v6[3] >> 1;
        if (v6[2])
        {
          if (v16 != v6 || v18 >= (unint64_t)&v6[6 * v19 + 4]) {
            memmove(v16 + 4, v6 + 4, 48 * v19);
          }
          v6[2] = 0;
        }
        id v10 = (_OWORD *)(v18 + 48 * v19);
        uint64_t v8 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        uint64_t result = swift_release();
        unint64_t v6 = v16;
        a2 = v13;
        uint64_t v4 = v27;
      }
      BOOL v21 = __OFSUB__(v8--, 1);
      if (v21) {
        break;
      }
      ++v7;
      long long v22 = v31;
      long long v23 = v33;
      v10[1] = v32;
      v10[2] = v23;
      _OWORD *v10 = v22;
      v10 += 3;
      v9 += 40;
      if (v4 == v7) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v24 = v6[3];
  if (v24 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v21 = __OFSUB__(v25, v8);
  uint64_t v26 = v25 - v8;
  if (!v21)
  {
    v6[2] = v26;
    return (uint64_t)v6;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100049220()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_100950088);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Updating availability", v12, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10007E4EC((void *)(v1 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_contentAvailabilityClient), *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_contentAvailabilityClient + 24));
  dispatch thunk of ContentAvailabilityClientProtocol.queryContentAvailability()();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int64_t v14 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_10004D754;
  *(void *)(v15 + 24) = v13;
  swift_retain();
  v14(sub_1000DC468, v15);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1000497F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 112));
  _Unwind_Resume(a1);
}

uint64_t sub_100049AC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ViewSizeCalculator() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100027AE8(v0 + v2, v5);
}

uint64_t sub_100049BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v21 = a2;
  uint64_t v25 = a1;
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ViewSizeCalculator();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  int64_t v14 = (char *)&v20 - v13;
  uint64_t v22 = static Color.clear.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v21, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + *(unsigned __int8 *)(v7 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v24;
  *(void *)(v17 + 16) = v23;
  *(void *)(v17 + 24) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v14, v10);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, v9, v6);
  *a5 = v22;
  a5[1] = (uint64_t)sub_100049AC8;
  a5[2] = v17;
  a5[3] = 0;
  a5[4] = 0;
  return result;
}

uint64_t sub_100049DE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ViewSizeCalculator() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100049BB0(a1, v8, v5, v6, a2);
}

uint64_t sub_100049E84()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ViewSizeCalculator()
{
  return sub_100049E84();
}

void sub_100049ECC()
{
  uint64_t v3 = v0;
  uint64_t v4 = Notification.userInfo.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1000DE24C((uint64_t)v19), (v7 & 1) != 0))
    {
      sub_10008F484(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v20);
    }
    else
    {
      long long v20 = 0u;
      long long v21 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v19);
    if (!*((void *)&v21 + 1))
    {
      sub_100074898((uint64_t)&v20);
      return;
    }
    sub_1000AFA94(&qword_100964608);
    if (swift_dynamicCast())
    {
      uint64_t v8 = (char *)MEMORY[0x65676E6180];
      swift_bridgeObjectRetain();
      if (!v8)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
      if (MEMORY[0x65676E6180])
      {
        unint64_t v2 = (unint64_t)MEMORY[0x65676E6192];
        swift_bridgeObjectRelease();
        id v1 = [(id)v2 longLongValue];

        uint64_t v9 = v8 - 1;
        if (!__OFSUB__(v8, 1))
        {
          if (((unint64_t)v9 & 0x8000000000000000) != 0)
          {
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
          if ((unint64_t)v9 >= MEMORY[0x65676E6180])
          {
LABEL_39:
            __break(1u);
            return;
          }
          id v10 = *(id *)(8 * (void)v9 + 0x65676E6192);
          swift_bridgeObjectRelease();
          uint64_t v8 = (char *)[v10 longLongValue];

          id v11 = [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) allObjects];
          unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (!(v2 >> 62))
          {
            uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v12)
            {
LABEL_17:
              if (v12 >= 1)
              {
                for (uint64_t i = 0; i != v12; ++i)
                {
                  if ((v2 & 0xC000000000000001) != 0)
                  {
                    uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    uint64_t v14 = *(void *)(v2 + 8 * i + 32);
                    swift_unknownObjectRetain();
                  }
                  swift_getObjectType();
                  uint64_t v15 = swift_conformsToProtocol2();
                  if (v15) {
                    uint64_t v16 = v15;
                  }
                  else {
                    uint64_t v16 = 0;
                  }
                  if (v15) {
                    uint64_t v17 = v14;
                  }
                  else {
                    uint64_t v17 = 0;
                  }
                  if (v17)
                  {
                    uint64_t ObjectType = swift_getObjectType();
                    (*(void (**)(uint64_t, id, char *, uint64_t, uint64_t))(v16 + 8))(v3, v1, v8, ObjectType, v16);
                  }
                  swift_unknownObjectRelease();
                }
                goto LABEL_35;
              }
              __break(1u);
              goto LABEL_38;
            }
LABEL_35:
            swift_bridgeObjectRelease();
            return;
          }
LABEL_34:
          swift_bridgeObjectRetain();
          uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v12) {
            goto LABEL_17;
          }
          goto LABEL_35;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_34;
    }
  }
}

char *sub_10004A220(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability] = 0;
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_dataProvider] = a1;
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_healthStore] = a2;
  uint64_t v15 = (objc_class *)type metadata accessor for TrendsAvailabilityManager();
  v40.receiver = v2;
  v40.super_class = v15;
  id v34 = a1;
  id v33 = a2;
  id v16 = [super init];
  uint64_t v17 = qword_10094B130;
  uint64_t v18 = (char *)v16;
  if (v17 != -1) {
    swift_once();
  }
  if ((byte_10096A4E0 & 1) == 0)
  {
    if (qword_10094B138 != -1) {
      swift_once();
    }
    if ((byte_10096A4E1 & 1) == 0)
    {
      id v19 = [self standardUserDefaults];
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v19 integerForKey:v20];

      if ((unint64_t)v21 <= 3
        && *(id *)&v18[OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability] != v21)
      {
        *(void *)&v18[OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability] = v21;
        id v22 = [self defaultCenter];
        if (qword_10094AEB8 != -1) {
          swift_once();
        }
        [v22 postNotificationName:qword_100998540 object:v18];
      }
      id v23 = [self defaultCenter];
      long long v32 = "activitySummaryDidChangeWithNote:";
      uint64_t v24 = qword_10094AF68;
      uint64_t v25 = v18;
      if (v24 != -1) {
        swift_once();
      }
      [v23 addObserver:v25 selector:v32 name:qword_1009985E0 object:0];
    }
  }
  sub_1000DF004();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.userInteractive(_:), v11);
  uint64_t v26 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v18;
  aBlock[4] = sub_1000E67F8;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008D07F8;
  uint64_t v28 = _Block_copy(aBlock);
  uint64_t v29 = v18;
  static DispatchQoS.unspecified.getter();
  os_log_type_t v38 = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  swift_release();
  return v29;
}

uint64_t sub_10004A7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10004A7F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10004A7F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73676E6972 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684107116 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F74736968 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63697274656DLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6472617761 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646E65697266 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007B6310 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001007B62F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x54676F6C61746163 && a2 == 0xEA00000000007069 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x73646E657274 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x646E657274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

void sub_10004AC28(uint64_t a1)
{
  sub_10004AC64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

void sub_10004AC64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, void *a7, uint64_t a8, uint64_t a9)
{
  int v32 = a6;
  uint64_t v31 = a5;
  int v30 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  id v33 = a7;
  uint64_t v34 = a9;
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10095C508);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a8, v11);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v30;
  *(void *)(v23 + 24) = v31;
  *(unsigned char *)(v23 + 32) = v32 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v23 + v19, v18, v15);
  uint64_t v24 = v33;
  *(void *)(v23 + v20) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v21, v14, v29);
  *(void *)(v23 + v22) = v34;
  id v25 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_1000697B4;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000696FC;
  void aBlock[3] = &unk_1008C69F8;
  uint64_t v26 = _Block_copy(aBlock);
  uint64_t v27 = v24;
  id v28 = [v25 initWithSampleType:v35 predicate:v36 limit:0 sortDescriptors:0 resultsHandler:v26];
  _Block_release(v26);
  swift_release();
  [*(id *)&v27[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_healthStore] executeQuery:v28];
}

id sub_10004AF84()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.Size.small(_:), v4);
  UIButton.Configuration.buttonSize.setter();
  id result = [self keyColors];
  if (result)
  {
    uint64_t v9 = result;
    id v10 = [result nonGradientTextColor];

    UIButton.Configuration.baseBackgroundColor.setter();
    id v11 = [self systemBlackColor];
    UIButton.Configuration.baseForegroundColor.setter();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [self systemImageNamed:v12];

    UIButton.Configuration.image.setter();
    if (qword_10094AD88 != -1) {
      swift_once();
    }
    id v14 = [self configurationWithFont:qword_100998198 scale:1];
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    id v15 = [self mainBundle];
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    *(void *)(inited + 32) = NSFontAttributeName;
    unint64_t v19 = (void *)qword_100998198;
    *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    *(void *)(inited + 40) = v19;
    unint64_t v20 = NSFontAttributeName;
    id v21 = v19;
    sub_1000DFC2C(inited);
    AttributeContainer.init(_:)();
    AttributedString.init(_:attributes:)();
    uint64_t v22 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 0, 1, v22);
    return (id)UIButton.Configuration.attributedTitle.setter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004B370(uint64_t a1)
{
  uint64_t v18 = *(void **)a1;
  NSString v16 = *(void **)(a1 + 16);
  id v17 = *(void **)(a1 + 8);
  id v14 = *(void **)(a1 + 32);
  id v15 = *(void **)(a1 + 24);
  NSString v12 = *(void **)(a1 + 48);
  id v13 = *(void **)(a1 + 40);
  id v10 = *(void **)(a1 + 64);
  id v11 = *(void **)(a1 + 56);
  uint64_t v9 = *(void **)(a1 + 80);
  uint64_t v2 = *(void **)(a1 + 104);
  uint64_t v8 = *(void **)(a1 + 96);
  uint64_t v3 = *(void **)(a1 + 112);
  uint64_t v4 = *(void **)(a1 + 120);
  uint64_t v5 = *(void **)(a1 + 128);
  uint64_t v6 = *(void **)(a1 + 200);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_10004B4C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v97 = a2;
  uint64_t v96 = type metadata accessor for ControlSize();
  uint64_t v93 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  double v91 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v87 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v82 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_100951700);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100951708);
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  __chkstk_darwin(v5);
  long long v80 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100951710);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  long long v81 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000AFA94(&qword_100951718) - 8;
  __chkstk_darwin(v92);
  uint64_t v90 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000AFA94(&qword_100951720) - 8;
  uint64_t v11 = __chkstk_darwin(v95);
  id v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v94 = (uint64_t)&v78 - v14;
  uint64_t v15 = type metadata accessor for Divider();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100951728);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100951730);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v78 - v28;
  Divider.init()();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v18, v15);
  int v30 = &v22[*(int *)(v20 + 44)];
  long long v31 = v100;
  *(_OWORD *)int v30 = v99;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v101;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  LOBYTE(v18) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v27, &qword_100951728);
  objc_super v40 = &v27[*(int *)(v24 + 44)];
  *objc_super v40 = (char)v18;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_10008DB18((uint64_t)v22, &qword_100951728);
  uint64_t v41 = (uint64_t)v29;
  sub_1000AEEC8((uint64_t)v27, (uint64_t)v29, &qword_100951730);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v83;
  *(void *)(v42 + 16) = v83;
  id v44 = v43;
  sub_1000AFA94(&qword_100951738);
  sub_100014974();
  unint64_t v45 = v79;
  Button.init(action:label:)();
  uint64_t v46 = v82;
  BorderedProminentButtonStyle.init()();
  sub_1000E07B4();
  sub_10000CD44((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v47 = v80;
  uint64_t v48 = v84;
  uint64_t v49 = v86;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v46, v49);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v45, v48);
  uint64_t v50 = v93;
  uint64_t v51 = v91;
  uint64_t v52 = v96;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v91, enum case for ControlSize.large(_:), v96);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v54 = (uint64_t)v81;
  uint64_t v55 = (uint64_t *)&v81[*(int *)(v8 + 44)];
  uint64_t v56 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))((char *)v55 + *(int *)(v56 + 28), v51, v52);
  *uint64_t v55 = KeyPath;
  uint64_t v58 = v88;
  uint64_t v57 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v54, v47, v89);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v57);
  id v59 = sub_10005DB50();
  uint64_t v60 = Color.init(uiColor:)();
  uint64_t v61 = swift_getKeyPath();
  uint64_t v98 = v60;
  swift_retain();
  uint64_t v62 = AnyShapeStyle.init<A>(_:)();
  uint64_t v63 = v90;
  sub_1000AEF2C(v54, v90, &qword_100951710);
  swift_release();
  long long v64 = (uint64_t *)(v63 + *(int *)(v92 + 44));
  *long long v64 = v61;
  v64[1] = v62;
  sub_10008DB18(v54, &qword_100951710);
  LOBYTE(v60) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  sub_1000AEF2C(v63, (uint64_t)v13, &qword_100951718);
  uint64_t v73 = &v13[*(int *)(v95 + 44)];
  char *v73 = v60;
  *((void *)v73 + 1) = v66;
  *((void *)v73 + 2) = v68;
  *((void *)v73 + 3) = v70;
  *((void *)v73 + 4) = v72;
  v73[40] = 0;
  sub_10008DB18(v63, &qword_100951718);
  uint64_t v74 = v94;
  sub_1000AEEC8((uint64_t)v13, v94, &qword_100951720);
  sub_1000AEF2C(v41, (uint64_t)v27, &qword_100951730);
  sub_1000AEF2C(v74, (uint64_t)v13, &qword_100951720);
  uint64_t v75 = v97;
  sub_1000AEF2C((uint64_t)v27, v97, &qword_100951730);
  uint64_t v76 = sub_1000AFA94(&qword_100951750);
  sub_1000AEF2C((uint64_t)v13, v75 + *(int *)(v76 + 48), &qword_100951720);
  sub_10008DB18(v74, &qword_100951720);
  sub_10008DB18(v41, &qword_100951730);
  sub_10008DB18((uint64_t)v13, &qword_100951720);
  return sub_10008DB18((uint64_t)v27, &qword_100951730);
}

uint64_t sub_10004BE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ShelfLockupAttributedTagStrings();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  id v11 = v4;
  id v12 = v5;
  v10(v7, v8, v9);
  id v13 = (int *)type metadata accessor for CatalogTipSectionItem();
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = type metadata accessor for Artwork();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v53 = *(void (**)(void *, const void *, uint64_t))(v18 + 16);
  v53(v15, v16, v17);
  uint64_t v19 = v13[6];
  uint64_t v20 = (void *)(v7 + v19);
  uint64_t v21 = (void *)(v8 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v13[7];
  uint64_t v24 = (void *)(v7 + v23);
  uint64_t v25 = (void *)(v8 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v13[8];
  __dst = (void *)(v7 + v27);
  uint64_t v28 = (const void *)(v8 + v27);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v28, 1, v17))
  {
    uint64_t v30 = sub_1000AFA94(&qword_1009512E8);
    memcpy(__dst, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v53(__dst, v28, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v31 = v13[9];
  uint64_t v32 = (void *)(v7 + v31);
  uint64_t v33 = (void *)(v8 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = v13[10];
  uint64_t v36 = (void *)(v7 + v35);
  uint64_t v37 = (void *)(v8 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = v13[11];
  objc_super v40 = (void *)(v7 + v39);
  uint64_t v41 = (void *)(v8 + v39);
  uint64_t v42 = v41[1];
  *objc_super v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v13[12];
  uint64_t v44 = v7 + v43;
  uint64_t v45 = v8 + v43;
  uint64_t v46 = type metadata accessor for URL();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47(v44, v45, v46);
  uint64_t v48 = *(int *)(a3 + 40);
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004C0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v7 = type metadata accessor for ViewSizeCalculator();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v26 - v10;
  uint64_t v28 = *(void *)(a2 - 8);
  uint64_t v12 = v28;
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A1370(&qword_100958620);
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v27 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v29 = (uint64_t)&v26 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1 + *(int *)(v7 + 36), a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v11, v7);
  uint64_t v34 = sub_100049DE8;
  uint64_t v35 = v20;
  static Alignment.center.getter();
  sub_1000AFA94(&qword_100958630);
  sub_1000A132C(&qword_100958638, &qword_100958630);
  uint64_t v21 = (uint64_t)v27;
  View.background<A>(_:alignment:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, a2);
  uint64_t v22 = sub_1000A132C(&qword_100958628, &qword_100958620);
  uint64_t v32 = a3;
  uint64_t v33 = v22;
  swift_getWitnessTable();
  uint64_t v23 = v29;
  sub_10004C704(v21, v15, v29);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v24(v21, v15);
  sub_10004C704(v23, v15, v31);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v15);
}

uint64_t sub_10004C4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  sub_1000A1370(&qword_100958620);
  type metadata accessor for ModifiedContent();
  uint64_t v6 = type metadata accessor for Group();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v18[-v11];
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v19 = v5;
  uint64_t v20 = v13;
  uint64_t v21 = v2;
  uint64_t v14 = sub_1000A132C(&qword_100958628, &qword_100958620);
  uint64_t v23 = v13;
  uint64_t v24 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  Group<A>.init(content:)();
  uint64_t v22 = WitnessTable;
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v10, v6, (uint64_t)v12);
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  sub_10004C704((uint64_t)v12, v6, a2);
  return ((uint64_t (*)(unsigned char *, uint64_t))v16)(v12, v6);
}

uint64_t sub_10004C6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_10004C708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = type metadata accessor for AwardsCardView();
  uint64_t v4 = v3 - 8;
  uint64_t v103 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v104 = v5;
  uint64_t v107 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for DynamicTypeSize();
  uint64_t v101 = *(void *)(v99 - 8);
  uint64_t v6 = __chkstk_darwin(v99);
  long long v100 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v96 = (uint64_t)&v90 - v8;
  uint64_t v98 = type metadata accessor for AdaptiveStackType();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v119 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000AFA94(&qword_10094C670);
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  double v106 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000AFA94(&qword_10094C678);
  __chkstk_darwin(v102);
  uint64_t v109 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1000AFA94(&qword_10094C680);
  uint64_t v12 = __chkstk_darwin(v116);
  uint64_t v105 = (uint64_t)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v111 = (uint64_t)&v90 - v14;
  uint64_t v113 = sub_1000AFA94(&qword_10094C688);
  __chkstk_darwin(v113);
  uint64_t v114 = (uint64_t *)((char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1000AFA94(&qword_10094C690);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v117 = (uint64_t)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v115 = (char *)&v90 - v19;
  uint64_t v20 = sub_1000AFA94(&qword_10094C698);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_10094C6A0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94(&qword_10094C6A8);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v90 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v90 - v34;
  sub_1000AFA94(&qword_10094C588);
  State.projectedValue.getter();
  sub_1000AEF2C((uint64_t)v25, (uint64_t)v30, &qword_10094C6A0);
  *(void *)uint64_t v22 = static HorizontalAlignment.center.getter();
  *((void *)v22 + 1) = 0;
  v22[16] = 0;
  uint64_t v36 = sub_1000AFA94(&qword_10094C6B0);
  sub_100039400(a1, &v22[*(int *)(v36 + 44)]);
  sub_10008DB18((uint64_t)v25, &qword_10094C6A0);
  sub_1000AEEC8((uint64_t)v22, (uint64_t)&v30[*(int *)(v27 + 44)], &qword_10094C698);
  uint64_t v37 = (uint64_t)v30;
  sub_1000AEEC8((uint64_t)v30, (uint64_t)v33, &qword_10094C6A8);
  BOOL v112 = v35;
  sub_1000AEEC8((uint64_t)v33, (uint64_t)v35, &qword_10094C6A8);
  uint64_t v38 = a1;
  uint64_t v39 = a1 + *(int *)(v4 + 28);
  objc_super v40 = (int *)type metadata accessor for AwardsCard();
  uint64_t v41 = v40[6];
  if (*(unsigned char *)(v39 + v41) != 1)
  {
    uint64_t v43 = *(void **)(v39 + v40[10]);
    if (v43)
    {
      uint64_t v93 = v40[6];
      uint64_t v94 = v39;
      uint64_t v95 = v30;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_100751040;
      *(void *)(v44 + 32) = v43;
      uint64_t v120 = v44;
      specialized Array._endMutation()();
      uint64_t v92 = v120;
      id v45 = v43;
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v84 = v114;
    void *v114 = 0;
    *((unsigned char *)v84 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_10009DD8C(&qword_10094C6B8, &qword_10094C680, (void (*)(void))sub_1000E22B8);
    uint64_t v83 = (uint64_t)v115;
    _ConditionalContent<>.init(storage:)();
    goto LABEL_10;
  }
  uint64_t v42 = *(void *)(v39 + v40[9]);
  if (!v42) {
    goto LABEL_9;
  }
  uint64_t v93 = v41;
  uint64_t v94 = v39;
  uint64_t v95 = v30;
  uint64_t v92 = v42;
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v46 = v96;
  sub_100092088(v96);
  uint64_t v47 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v48 = v101;
  double v91 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 104);
  uint64_t v49 = v100;
  uint64_t v50 = v99;
  v91(v100, enum case for DynamicTypeSize.xxLarge(_:), v99);
  sub_1000A39F8((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v51 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
  v52(v49, v50);
  v52((char *)v46, v50);
  uint64_t v53 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
  if ((v51 & 1) == 0) {
    uint64_t v53 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v119, *v53, v98);
  uint64_t v101 = static VerticalAlignment.top.getter();
  uint64_t v98 = static HorizontalAlignment.leading.getter();
  sub_100092088(v46);
  v91(v49, v47, v50);
  dispatch thunk of static Comparable.< infix(_:_:)();
  v52(v49, v50);
  v52((char *)v46, v50);
  uint64_t v54 = v107;
  sub_1000809EC(v38, v107, (uint64_t (*)(void))type metadata accessor for AwardsCardView);
  unint64_t v55 = (*(unsigned __int8 *)(v103 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v92;
  sub_100005FD8(v54, v56 + v55);
  sub_1000AFA94(&qword_10094C6E0);
  sub_1000E062C();
  uint64_t v57 = v106;
  AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)();
  char v58 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v108;
  uint64_t v68 = (uint64_t)v109;
  uint64_t v69 = v110;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v109, v57, v110);
  uint64_t v70 = v68 + *(int *)(v102 + 36);
  *(unsigned char *)uint64_t v70 = v58;
  *(void *)(v70 + 8) = v60;
  *(void *)(v70 + 16) = v62;
  *(void *)(v70 + 24) = v64;
  *(void *)(v70 + 32) = v66;
  *(unsigned char *)(v70 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v69);
  char v71 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v80 = v105;
  sub_1000AEF2C(v68, v105, &qword_10094C678);
  uint64_t v81 = v80 + *(int *)(v116 + 36);
  *(unsigned char *)uint64_t v81 = v71;
  *(void *)(v81 + 8) = v73;
  *(void *)(v81 + 16) = v75;
  *(void *)(v81 + 24) = v77;
  *(void *)(v81 + 32) = v79;
  *(unsigned char *)(v81 + 40) = 0;
  sub_10008DB18(v68, &qword_10094C678);
  uint64_t v82 = v111;
  sub_1000AEEC8(v80, v111, &qword_10094C680);
  sub_1000AEF2C(v82, (uint64_t)v114, &qword_10094C680);
  swift_storeEnumTagMultiPayload();
  sub_10009DD8C(&qword_10094C6B8, &qword_10094C680, (void (*)(void))sub_1000E22B8);
  uint64_t v83 = (uint64_t)v115;
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v82, &qword_10094C680);
  uint64_t v37 = (uint64_t)v95;
LABEL_10:
  uint64_t v85 = (uint64_t)v112;
  sub_1000AEF2C((uint64_t)v112, v37, &qword_10094C6A8);
  uint64_t v86 = v117;
  sub_1000AEF2C(v83, v117, &qword_10094C690);
  uint64_t v87 = v118;
  sub_1000AEF2C(v37, v118, &qword_10094C6A8);
  uint64_t v88 = sub_1000AFA94(&qword_10094C6D0);
  sub_1000AEF2C(v86, v87 + *(int *)(v88 + 48), &qword_10094C690);
  sub_10008DB18(v83, &qword_10094C690);
  sub_10008DB18(v85, &qword_10094C6A8);
  sub_10008DB18(v86, &qword_10094C690);
  return sub_10008DB18(v37, &qword_10094C6A8);
}

uint64_t sub_10004D2E0(uint64_t a1, uint64_t (*a2)(void))
{
  if (a2) {
    return a2();
  }
  return result;
}

uint64_t sub_10004D310(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v9 = *(void *)(sub_1000AFA94(a2) - 8);
  return sub_10004D3B0(a1, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned __int8 *)(v4 + 40), *(void *)(v4 + 48), v4 + ((*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a3, a4, a2);
}

uint64_t sub_10004D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), uint64_t *a9, uint64_t *a10)
{
  uint64_t v38 = a6;
  int v37 = a5;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v12 = a10;
  uint64_t v13 = a8(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v30 - v15;
  uint64_t v42 = a9;
  uint64_t v41 = sub_1000AFA94(a9);
  __chkstk_darwin(v41);
  uint64_t v18 = (void *)((char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v19 - 8);
  uint64_t v40 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v33 = a7;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = a10;
    v30[1] = v26;
    *(_DWORD *)uint64_t v25 = 134218498;
    uint64_t v43 = v34;
    uint64_t v44 = v26;
    uint64_t v34 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v31 = v14;
    uint64_t v27 = StaticString.description.getter();
    uint64_t v43 = sub_10008F1F4(v27, v28, &v44);
    uint64_t v14 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2048;
    uint64_t v43 = v38;
    uint64_t v13 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    uint64_t v12 = v32;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  sub_1000AEF2C(a1, (uint64_t)v18, v42);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = *v18;
    sub_1000AFA94(v12);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v14 + 32))(v16, v18, v13);
    sub_1000AFA94(v12);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10004D754(uint64_t a1)
{
  return sub_100074B54(a1, v1);
}

id sub_10004D75C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v232 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Font.Leading();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v172 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v230 = v11;
  uint64_t v231 = v10;
  int v227 = v12;
  uint64_t v233 = v13;
  int v228 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  static Font.body.getter();
  uint64_t v22 = *(void (**)(char *))(v7 + 104);
  unsigned int v214 = enum case for Font.Leading.tight(_:);
  uint64_t v215 = v7 + 104;
  *(void *)v213 = v22;
  v22(v9);
  *((void *)&v229 + 1) = Font.leading(_:)();
  swift_release();
  os_log_type_t v23 = *(void (**)(void, void))(v7 + 8);
  v210 = v9;
  uint64_t v217 = v7 + 8;
  uint64_t v218 = v6;
  v212 = (void (*)(char *, uint64_t))v23;
  v23(v9, v6);
  *(void *)&long long v229 = swift_getKeyPath();
  sub_1000235BC(0, (uint64_t)v5);
  v219 = v5;
  uint64_t v24 = Text.init(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  unint64_t v29 = sub_100006248();
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
  Class v31 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
  uint64_t v32 = (objc_class *)type metadata accessor for GradientColors();
  uint64_t v33 = (char *)objc_allocWithZone(v32);
  *(void *)&v33[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(void *)&v33[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v31;
  v266.receiver = v33;
  v266.super_class = v32;
  Class v211 = v32;
  [super init];
  unint64_t v216 = v29;
  Class v35 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
  uint64_t v36 = (objc_class *)type metadata accessor for MetricColors();
  int v37 = (char *)objc_allocWithZone(v36);
  *(void *)&v37[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v34;
  *(void *)&v37[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v35;
  v265.receiver = v37;
  v265.super_class = v36;
  Class v209 = v36;
  uint64_t v38 = (char *)[super init];
  id v39 = *(id *)&v38[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  *(void *)&v237[0] = Color.init(uiColor:)();
  uint64_t v40 = Text.foregroundStyle<A>(_:)();
  uint64_t v224 = v41;
  uint64_t v225 = v40;
  int v223 = v42;
  uint64_t v226 = v43;
  sub_1000A06C0(v24, v26, v28);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = type metadata accessor for ActivityRingsCardView();
  id v45 = (char *)(a1 + *(int *)(v44 + 20));
  char v46 = *v45;
  uint64_t v47 = *((void *)v45 + 1);
  uint64_t v48 = *((void *)v45 + 2);
  LOBYTE(v237[0]) = *v45;
  *((void *)&v237[0] + 1) = v47;
  *(void *)&v237[1] = v48;
  uint64_t v234 = sub_1000AFA94(&qword_1009603F0);
  State.wrappedValue.getter();
  unsigned int v49 = v264[0];
  LODWORD(v26) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v221 = v56;
  uint64_t v57 = *(int *)(v44 + 24);
  uint64_t v220 = a1;
  uint64_t v58 = a1 + v57;
  uint64_t v59 = type metadata accessor for ActivityRingsCard();
  uint64_t v60 = *(int *)(v59 + 36);
  uint64_t v207 = v59;
  uint64_t v208 = v58;
  uint64_t v61 = *(void **)(v58 + v60);
  int v222 = v26;
  if (!v61)
  {
    id result = [self sharedBehavior];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v63 = result;
    unsigned __int8 v64 = [result isStandalonePhoneFitnessMode];

    if (v64) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v198 = v60;
    unsigned int v190 = v49;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v65 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v204 = v66;
    uint64_t v205 = v65;
    int v184 = v67;
    uint64_t v206 = v68;
    int v189 = static Edge.Set.top.getter();
    LOBYTE(v237[0]) = v46;
    *((void *)&v237[0] + 1) = v47;
    *(void *)&v237[1] = v48;
    State.wrappedValue.getter();
    EdgeInsets.init(_all:)();
    uint64_t v187 = v70;
    uint64_t v188 = v69;
    uint64_t v185 = v72;
    uint64_t v186 = v71;
    static Font.body.getter();
    uint64_t v73 = v210;
    uint64_t v74 = v218;
    (*(void (**)(char *, void, uint64_t))v213)(v210, v214, v218);
    uint64_t v203 = Font.leading(_:)();
    swift_release();
    v212(v73, v74);
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000235BC(1, (uint64_t)v219);
    uint64_t v75 = Text.init(_:)();
    uint64_t v77 = v76;
    LOBYTE(v73) = v78 & 1;
    Class v79 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
    Class v80 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
    uint64_t v81 = v211;
    uint64_t v82 = (char *)objc_allocWithZone(v211);
    *(void *)&v82[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v79;
    *(void *)&v82[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v80;
    v263.receiver = v82;
    v263.super_class = v81;
    uint64_t v83 = v209;
    id v84 = [super init];
    Class v85 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
    uint64_t v86 = (char *)objc_allocWithZone(v83);
    *(void *)&v86[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v84;
    *(void *)&v86[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v85;
    v262.receiver = v86;
    v262.super_class = v83;
    uint64_t v87 = (char *)[super init];
    id v88 = *(id *)&v87[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    *(void *)&v237[0] = Color.init(uiColor:)();
    uint64_t v89 = Text.foregroundStyle<A>(_:)();
    uint64_t v91 = v90;
    int v175 = v92;
    uint64_t v94 = v93;
    sub_1000A06C0(v75, v77, (char)v73);
    swift_release();
    swift_bridgeObjectRelease();
    char v95 = *v45;
    uint64_t v96 = *((void *)v45 + 1);
    uint64_t v97 = *((void *)v45 + 2);
    LOBYTE(v237[0]) = *v45;
    *((void *)&v237[0] + 1) = v96;
    *(void *)&v237[1] = v97;
    State.wrappedValue.getter();
    double v98 = -7.0;
    if (v238[0] < 2u) {
      double v98 = -4.0;
    }
    double v183 = v98;
    int v99 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v180 = v101;
    uint64_t v181 = v100;
    uint64_t v178 = v103;
    uint64_t v179 = v102;
    int v104 = *(unsigned __int8 *)(v208 + *(int *)(v207 + 48));
    uint64_t v196 = v17;
    uint64_t v197 = v15;
    uint64_t v194 = v21;
    uint64_t v195 = v19;
    uint64_t v192 = v53;
    uint64_t v193 = v51;
    uint64_t v191 = v55;
    uint64_t v200 = v89;
    uint64_t v201 = v94;
    uint64_t v199 = v91;
    int v182 = v99;
    unint64_t v173 = v45;
    if (v104 == 2)
    {
      uint64_t v105 = *(void **)(v208 + v198);
      if (v105) {
        [v105 _wheelchairUse];
      }
    }
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v106 = (uint64_t)v219;
    uint64_t v107 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v207 = v108;
    uint64_t v208 = v107;
    uint64_t v174 = v109;
    LODWORD(v198) = v110 & 1;
    int v177 = static Edge.Set.top.getter();
    LOBYTE(v237[0]) = v95;
    *((void *)&v237[0] + 1) = v96;
    *(void *)&v237[1] = v97;
    State.wrappedValue.getter();
    EdgeInsets.init(_all:)();
    uint64_t v176 = v111;
    uint64_t v113 = v112;
    uint64_t v115 = v114;
    uint64_t v117 = v116;
    static Font.body.getter();
    uint64_t v118 = v210;
    uint64_t v119 = v218;
    (*(void (**)(char *, void, uint64_t))v213)(v210, v214, v218);
    uint64_t v215 = Font.leading(_:)();
    swift_release();
    v212(v118, v119);
    uint64_t v218 = swift_getKeyPath();
    sub_1000235BC(2, v106);
    uint64_t v120 = Text.init(_:)();
    uint64_t v122 = v121;
    LOBYTE(v118) = v123 & 1;
    Class v124 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.84706, 1.0, 1.0).super.isa;
    Class v125 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.62727, 1.0).super.isa;
    uint64_t v126 = v211;
    uint64_t v127 = (char *)objc_allocWithZone(v211);
    *(void *)&v127[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v124;
    *(void *)&v127[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v125;
    v261.receiver = v127;
    v261.super_class = v126;
    id v128 = [super init];
    Class v129 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.96471, 1.0).super.isa;
    v130 = v209;
    uint64_t v131 = (char *)objc_allocWithZone(v209);
    *(void *)&v131[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v128;
    *(void *)&v131[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v129;
    v260.receiver = v131;
    v260.super_class = v130;
    uint64_t v132 = (char *)[super init];
    id v133 = *(id *)&v132[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    *(void *)&v237[0] = Color.init(uiColor:)();
    v219 = (char *)Text.foregroundStyle<A>(_:)();
    uint64_t v220 = v134;
    uint64_t v217 = v135;
    int v137 = v136 & 1;
    sub_1000A06C0(v120, v122, (char)v118);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v138 = *((void *)v173 + 1);
    uint64_t v139 = *((void *)v173 + 2);
    LOBYTE(v237[0]) = *v173;
    *((void *)&v237[0] + 1) = v138;
    *(void *)&v237[1] = v139;
    State.wrappedValue.getter();
    if (v238[0] >= 2u) {
      double v140 = -7.0;
    }
    else {
      double v140 = -4.0;
    }
    LODWORD(v234) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v142 = v141;
    uint64_t v144 = v143;
    uint64_t v146 = v145;
    uint64_t v148 = v147;
    char v241 = v184 & 1;
    char v149 = v175 & 1;
    char v240 = v175 & 1;
    char v150 = v198;
    char v239 = v198;
    char v250 = v184 & 1;
    v213[0] = v184 & 1;
    char v249 = 0;
    char v248 = v175 & 1;
    unsigned int v214 = v175 & 1;
    char v247 = 0;
    char v246 = v198;
    char v245 = 0;
    char v244 = v137;
    char v243 = 0;
    char v242 = 0;
    sub_1000A1750(v205, v204, v184 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000A1750(v200, v199, v149);
    swift_bridgeObjectRetain();
    uint64_t v151 = v207;
    uint64_t v152 = v208;
    sub_1000A1750(v208, v207, v150);
    uint64_t v153 = v174;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v154 = (uint64_t)v219;
    uint64_t v155 = v217;
    LODWORD(v216) = v137;
    sub_1000A1750((uint64_t)v219, v217, v137);
    swift_bridgeObjectRetain();
    sub_1000A06C0(v154, v155, v137);
    swift_bridgeObjectRelease();
    sub_1000A06C0(v152, v151, v239);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v157 = v199;
    uint64_t v156 = v200;
    sub_1000A06C0(v200, v199, v240);
    uint64_t v158 = v201;
    swift_bridgeObjectRelease();
    uint64_t v159 = v204;
    uint64_t v160 = v205;
    sub_1000A06C0(v205, v204, v241);
    uint64_t v161 = v203;
    swift_release();
    uint64_t v162 = KeyPath;
    swift_release();
    uint64_t v163 = v206;
    swift_bridgeObjectRelease();
    *(void *)&v237[0] = v160;
    *((void *)&v237[0] + 1) = v159;
    LOBYTE(v237[1]) = v213[0];
    *(_DWORD *)((char *)&v237[1] + 1) = *(_DWORD *)v238;
    DWORD1(v237[1]) = *(_DWORD *)&v238[3];
    *((void *)&v237[1] + 1) = v163;
    LOBYTE(v237[2]) = v189;
    *(_DWORD *)((char *)&v237[2] + 1) = *(_DWORD *)v236;
    DWORD1(v237[2]) = *(_DWORD *)&v236[3];
    *((void *)&v237[2] + 1) = v188;
    *(void *)&v237[3] = v187;
    *((void *)&v237[3] + 1) = v186;
    *(void *)&v237[4] = v185;
    BYTE8(v237[4]) = 0;
    HIDWORD(v237[4]) = *(_DWORD *)&v235[3];
    *(_DWORD *)((char *)&v237[4] + 9) = *(_DWORD *)v235;
    *(void *)&v237[5] = v162;
    *((void *)&v237[5] + 1) = v161;
    *(void *)&v237[6] = v156;
    *((void *)&v237[6] + 1) = v157;
    LOBYTE(v237[7]) = v214;
    *(_DWORD *)((char *)&v237[7] + 1) = *(_DWORD *)v259;
    DWORD1(v237[7]) = *(_DWORD *)&v259[3];
    *((void *)&v237[7] + 1) = v158;
    *(void *)&v237[8] = 0;
    *((double *)&v237[8] + 1) = v183;
    LOBYTE(v237[9]) = v182;
    DWORD1(v237[9]) = *(_DWORD *)&v258[3];
    *(_DWORD *)((char *)&v237[9] + 1) = *(_DWORD *)v258;
    *((void *)&v237[9] + 1) = v181;
    *(void *)&v237[10] = v180;
    *((void *)&v237[10] + 1) = v179;
    *(void *)&v237[11] = v178;
    BYTE8(v237[11]) = 0;
    HIDWORD(v237[11]) = *(_DWORD *)&v257[3];
    *(_DWORD *)((char *)&v237[11] + 9) = *(_DWORD *)v257;
    *(void *)&v237[12] = v208;
    *((void *)&v237[12] + 1) = v207;
    LOBYTE(v237[13]) = v198;
    *(_DWORD *)((char *)&v237[13] + 1) = *(_DWORD *)v256;
    DWORD1(v237[13]) = *(_DWORD *)&v256[3];
    *((void *)&v237[13] + 1) = v153;
    LOBYTE(v237[14]) = v177;
    *(_DWORD *)((char *)&v237[14] + 1) = *(_DWORD *)v255;
    DWORD1(v237[14]) = *(_DWORD *)&v255[3];
    *((void *)&v237[14] + 1) = v176;
    *(void *)&v237[15] = v113;
    *((void *)&v237[15] + 1) = v115;
    *(void *)&v237[16] = v117;
    BYTE8(v237[16]) = 0;
    *(_DWORD *)((char *)&v237[16] + 9) = *(_DWORD *)v254;
    HIDWORD(v237[16]) = *(_DWORD *)&v254[3];
    *(void *)&v237[17] = v218;
    *((void *)&v237[17] + 1) = v215;
    *(void *)&v237[18] = v219;
    *((void *)&v237[18] + 1) = v217;
    LOBYTE(v237[19]) = v216;
    *(_DWORD *)((char *)&v237[19] + 1) = *(_DWORD *)v253;
    DWORD1(v237[19]) = *(_DWORD *)&v253[3];
    *((void *)&v237[19] + 1) = v220;
    *(void *)&v237[20] = 0;
    *((double *)&v237[20] + 1) = v140;
    LOBYTE(v237[21]) = v234;
    *(_DWORD *)((char *)&v237[21] + 1) = *(_DWORD *)v252;
    DWORD1(v237[21]) = *(_DWORD *)&v252[3];
    *((void *)&v237[21] + 1) = v142;
    *(void *)&v237[22] = v144;
    *((void *)&v237[22] + 1) = v146;
    *(void *)&v237[23] = v148;
    BYTE8(v237[23]) = 0;
    *(_DWORD *)((char *)&v237[23] + 9) = *(_DWORD *)v251;
    HIDWORD(v237[23]) = *(_DWORD *)&v251[3];
    *(void *)&v237[24] = 0;
    BYTE8(v237[24]) = 0;
    ASFriendListDisplayMode.id.getter(v237);
    sub_1000AEEC8((uint64_t)v237, (uint64_t)v264, &qword_1009604E8);
    uint64_t v17 = v196;
    uint64_t v15 = v197;
    uint64_t v21 = v194;
    uint64_t v19 = v195;
    uint64_t v53 = v192;
    uint64_t v51 = v193;
    uint64_t v55 = v191;
    unsigned int v49 = v190;
    goto LABEL_15;
  }
  if (([v61 _isStandalonePhoneSummary] & 1) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1000E04C8(v237);
  sub_1000AEEC8((uint64_t)v237, (uint64_t)v264, &qword_1009604E8);
LABEL_15:
  char v164 = v223 & 1;
  LODWORD(v234) = v223 & 1;
  char v165 = v227 & 1;
  if (v49 >= 2) {
    double v166 = -7.0;
  }
  else {
    double v166 = -4.0;
  }
  v259[0] = v227 & 1;
  sub_1000AEEC8((uint64_t)v264, (uint64_t)v235, &qword_1009604E8);
  sub_1000AEEC8((uint64_t)v235, (uint64_t)v236, &qword_1009604E8);
  uint64_t v168 = v230;
  uint64_t v167 = v231;
  *(void *)&v237[0] = v231;
  *((void *)&v237[0] + 1) = v230;
  LOBYTE(v237[1]) = v165;
  *((void *)&v237[1] + 1) = v233;
  LOBYTE(v237[2]) = v228;
  *((void *)&v237[2] + 1) = v15;
  *(void *)&v237[3] = v17;
  *((void *)&v237[3] + 1) = v19;
  *(void *)&v237[4] = v21;
  BYTE8(v237[4]) = 0;
  v237[5] = v229;
  uint64_t v170 = v224;
  uint64_t v169 = v225;
  *(void *)&v237[6] = v225;
  *((void *)&v237[6] + 1) = v224;
  LOBYTE(v237[7]) = v164;
  *((void *)&v237[7] + 1) = v226;
  *(void *)&v237[8] = 0;
  *((double *)&v237[8] + 1) = v166;
  LOBYTE(v237[9]) = v222;
  *((void *)&v237[9] + 1) = v51;
  *(void *)&v237[10] = v53;
  *((void *)&v237[10] + 1) = v55;
  *(void *)&v237[11] = v221;
  BYTE8(v237[11]) = 0;
  sub_1000AEEC8((uint64_t)v236, (uint64_t)&v237[12], &qword_1009604E8);
  memcpy(v232, v237, 0x249uLL);
  sub_1000AEEC8((uint64_t)v235, (uint64_t)v238, &qword_1009604E8);
  sub_1000A1750(v167, v168, v165);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  char v171 = v234;
  sub_1000A1750(v169, v170, v234);
  swift_bridgeObjectRetain();
  sub_10004E844((uint64_t)v236, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000E03A4);
  sub_10004E844((uint64_t)v238, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000E0508);
  sub_1000A06C0(v169, v170, v171);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v167, v168, v259[0]);
  swift_release();
  swift_release();
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_10004E844(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v13 = *(unsigned char *)(a1 + 392);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    *(void *)(a1 + 384),
    v13);
  return a1;
}

uint64_t sub_10004E8F0()
{
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    id v22 = self;
    id v2 = [v22 defaultCenter];
    uint64_t v3 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v4 = [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager) unitManager];
    long long v5 = self;
    id v6 = [v5 mainQueue];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v28 = sub_100430EE8;
    uint64_t v29 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1000711BC;
    char v27 = &unk_1008C6700;
    long long v8 = _Block_copy(&aBlock);
    swift_release();
    id v23 = [v2 addObserverForName:v3 object:v4 queue:v6 usingBlock:v8];
    _Block_release(v8);

    id v9 = [v22 defaultCenter];
    id v10 = kASFriendListChangedNotificationKey;
    id v11 = [v5 mainQueue];
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v28 = sub_100071808;
    uint64_t v29 = v12;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1000711BC;
    char v27 = &unk_1008C6728;
    char v13 = _Block_copy(&aBlock);
    swift_release();
    id v14 = [v9 addObserverForName:v10 object:0 queue:v11 usingBlock:v13];
    _Block_release(v13);

    id v15 = [v22 defaultCenter];
    if (qword_10094AEB8 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_100998540;
    id v17 = [v5 mainQueue];
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v28 = sub_100430F14;
    uint64_t v29 = v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_1000711BC;
    char v27 = &unk_1008C6750;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_release();
    id v20 = [v15 addObserverForName:v16 object:0 queue:v17 usingBlock:v19];
    _Block_release(v19);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100752410;
    *(void *)(v21 + 56) = swift_getObjectType();
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 88) = swift_getObjectType();
    *(void *)(v21 + 64) = v14;
    *(void *)(v21 + 120) = swift_getObjectType();
    *(void *)(v21 + 96) = v20;
    *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers) = v21;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004ED58()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR___WODataLinkMonitor_currentWorkoutState] = 2;
  *(void *)&v0[OBJC_IVAR___WODataLinkMonitor_workoutStateCancellable] = 0;
  uint64_t v5 = OBJC_IVAR___WODataLinkMonitor_workoutStateUpdateWaiting;
  sub_1000AFA94(&qword_10095C960);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 20) = 0;
  *(unsigned char *)(v6 + 16) = 0;
  *(void *)&v0[v5] = v6;
  uint64_t v7 = OBJC_IVAR___WODataLinkMonitor_metricPlatterAnalytics;
  type metadata accessor for MetricPlatterAnalytics();
  long long v8 = (void *)swift_allocObject();
  v8[2] = 0;
  _OWORD v8[3] = 0;
  v8[4] = 0;
  v8[5] = _swiftEmptyDictionarySingleton;
  *(void *)&v0[v7] = v8;
  *(void *)&v0[OBJC_IVAR___WODataLinkMonitor_observers] = _swiftEmptyArrayStorage;
  uint64_t v9 = OBJC_IVAR___WODataLinkMonitor_healthStore;
  id v10 = objc_allocWithZone((Class)HKHealthStore);
  id v11 = v0;
  *(void *)&v0[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR___WODataLinkMonitor_observerQuery] = 0;
  *(void *)&v11[OBJC_IVAR___WODataLinkMonitor_failedToEndWorkoutRetryCountMax] = 5;
  *(void *)&v11[OBJC_IVAR___WODataLinkMonitor_failedToEndWorkoutRetrySeconds] = 0x4008000000000000;
  static WOLog.dataLink.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Init'ing the DataLinkMonitor", v14, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  type metadata accessor for MetricsPublisher();
  swift_allocObject();
  *(void *)&v11[OBJC_IVAR___WODataLinkMonitor_publisher] = MetricsPublisher.init()();
  type metadata accessor for DataLinkClient();
  swift_allocObject();
  swift_retain_n();
  *(void *)&v11[OBJC_IVAR___WODataLinkMonitor_client] = DataLinkClient.init(metricsPublisher:)();

  id v15 = (objc_class *)type metadata accessor for DataLinkMonitor();
  v22.receiver = v11;
  v22.super_class = v15;
  uint64_t v16 = (char *)[super init];
  MetricsPublisher.workoutStatePublisher.getter();
  type metadata accessor for WorkoutStatePublisher();
  sub_100067A7C(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
  uint64_t v17 = ObservableObject<>.objectWillChange.getter();
  swift_release();
  uint64_t v21 = v17;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for ObservableObjectPublisher();
  uint64_t v18 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)&v16[OBJC_IVAR___WODataLinkMonitor_workoutStateCancellable] = v18;
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  dispatch thunk of DataLinkClient.presenceDidChangeHandler.setter();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  dispatch thunk of DataLinkClient.notificationHandler.setter();
  swift_release();
  swift_release();
  sub_10005BE88();
  if (*(void *)&v16[OBJC_IVAR___WODataLinkMonitor_currentWorkoutState] >= 4uLL)
  {
    uint64_t v21 = *(void *)&v16[OBJC_IVAR___WODataLinkMonitor_currentWorkoutState];
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    sub_100008CDC(2, (*(void *)&v16[OBJC_IVAR___WODataLinkMonitor_currentWorkoutState] & 0xFLL) == 3);
    swift_retain();
    dispatch thunk of DataLinkClient.activateLink()();
    swift_release();

    swift_release();
    return (uint64_t)v16;
  }
  return result;
}

void *sub_10004F250()
{
  sub_1000AFA94(&qword_1009613D8);
  type metadata accessor for Tips.Action();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1007509E0;
  Tips.Action.init(id:perform:_:)();
  uint64_t v1 = sub_10004F39C(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v1;
}

void *sub_10004F39C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000AFA94(&qword_100963D80);
  uint64_t v6 = __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  id v39 = (uint64_t *)((char *)&v31 - v9);
  __chkstk_darwin(v8);
  id v11 = (char *)&v31 - v10;
  int v42 = _swiftEmptyArrayStorage;
  sub_10004F69C(0, 0, 0);
  uint64_t v12 = v42;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v13;
  uint64_t v31 = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v34 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    Class v35 = v16;
    uint64_t v18 = a1 + v34;
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v36 = v15;
    uint64_t v37 = v2;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v33 = v17;
    do
    {
      uint64_t v20 = v41;
      uint64_t v21 = &v40[*(int *)(v41 + 48)];
      v35(v21, v18, v2);
      objc_super v22 = v19;
      uint64_t v23 = (uint64_t)v39;
      uint64_t v24 = (char *)v39 + *(int *)(v20 + 48);
      *id v39 = v14;
      uint64_t v25 = *v22;
      (*v22)(v24, v21, v2);
      sub_10004F8F0(v23, (uint64_t)v11);
      Tips.Action.with(index:)();
      sub_10004F890((uint64_t)v11);
      uint64_t v12 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10004F69C(0, v12[2] + 1, 1);
        uint64_t v12 = v42;
      }
      unint64_t v27 = v12[2];
      unint64_t v26 = v12[3];
      if (v27 >= v26 >> 1)
      {
        sub_10004F69C(v26 > 1, v27 + 1, 1);
        uint64_t v12 = v42;
      }
      ++v14;
      void v12[2] = v27 + 1;
      uint64_t v28 = v33;
      unint64_t v29 = (unint64_t)v12 + v34 + v27 * v33;
      uint64_t v2 = v37;
      uint64_t v19 = v32;
      v25((char *)v29, v5, v37);
      int v42 = v12;
      v18 += v28;
    }
    while (v38 != v14);
  }
  swift_bridgeObjectRelease();
  return v12;
}

size_t sub_10004F69C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10004F6BC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10004F6BC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AFA94(&qword_1009613D8);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_10004F890(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100963D80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004F8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100963D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10004F958(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  unint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v18 = Card[5];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *((void *)v20 + 1);
  char v23 = v20[16];
  sub_100091494(*(void *)v20, v22, v23);
  uint64_t v24 = *(void *)v19;
  uint64_t v25 = *((void *)v19 + 1);
  *(void *)uint64_t v19 = v21;
  *((void *)v19 + 1) = v22;
  char v26 = v19[16];
  v19[16] = v23;
  sub_1000917F8(v24, v25, v26);
  v14[Card[6]] = v15[Card[6]];
  v14[Card[7]] = v15[Card[7]];
  v14[Card[8]] = v15[Card[8]];
  uint64_t v27 = Card[9];
  uint64_t v28 = &v14[v27];
  unint64_t v29 = &v15[v27];
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *((void *)v29 + 1);
  unsigned __int8 v32 = v29[16];
  sub_1000908B0(*(void *)v29, v31, v32);
  uint64_t v33 = *(void *)v28;
  uint64_t v34 = *((void *)v28 + 1);
  *(void *)uint64_t v28 = v30;
  *((void *)v28 + 1) = v31;
  unsigned __int8 v35 = v28[16];
  v28[16] = v32;
  sub_1000904DC(v33, v34, v35);
  v14[Card[10]] = v15[Card[10]];
  sub_10009EDF0((uint64_t *)&v14[Card[11]], (uint64_t *)&v15[Card[11]]);
  sub_10009EDF0((uint64_t *)&v14[Card[12]], (uint64_t *)&v15[Card[12]]);
  uint64_t v36 = a3[8];
  uint64_t v37 = (uint64_t)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)((char *)a2 + v36 + 24);
  if (!*(void *)((char *)a1 + v36 + 24))
  {
    if (v39)
    {
      *(void *)(v37 + 24) = v39;
      *(void *)(v37 + 32) = *((void *)v38 + 4);
      (**(void (***)(uint64_t, char *))(v39 - 8))(v37, v38);
      goto LABEL_13;
    }
LABEL_12:
    long long v40 = *(_OWORD *)v38;
    long long v41 = *((_OWORD *)v38 + 1);
    *(void *)(v37 + 32) = *((void *)v38 + 4);
    *(_OWORD *)uint64_t v37 = v40;
    *(_OWORD *)(v37 + 16) = v41;
    goto LABEL_13;
  }
  if (!v39)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v37);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v37, (uint64_t *)v38);
LABEL_13:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void sub_10005074C()
{
  LocalizedStringKey.init(stringLiteral:)();
  LOWORD(v8) = 256;
  uint64_t v0 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v2 = v1;
  char v4 = v3;
  id v5 = [self keyColors];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 nonGradientTextColor];

    if (v7)
    {
      Color.init(uiColor:)();
      Text.foregroundStyle<A>(_:)();
      sub_1000A06C0(v0, v2, v4 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000508AC()
{
  uint64_t v1 = &v0[OBJC_IVAR___CHFitnessAppDelegate_phoneSceneConfigurationName];
  *(void *)uint64_t v1 = 0xD000000000000013;
  *((void *)v1 + 1) = 0x80000001007CF5F0;
  uint64_t v2 = &v0[OBJC_IVAR___CHFitnessAppDelegate_iPadSceneConfigurationName];
  *(void *)uint64_t v2 = 0xD000000000000012;
  *((void *)v2 + 1) = 0x80000001007CF610;
  id v3 = objc_allocWithZone((Class)HKHealthStore);
  char v4 = v0;
  id v5 = [v3 init];
  uint64_t v6 = OBJC_IVAR___CHFitnessAppDelegate_healthStore;
  *(void *)&v4[OBJC_IVAR___CHFitnessAppDelegate_healthStore] = v5;
  id v7 = objc_allocWithZone((Class)type metadata accessor for HistoryDataProvider());
  id v8 = v5;
  *(void *)&v4[OBJC_IVAR___CHFitnessAppDelegate_historyDataProvider] = sub_10005D250(v8);
  id v9 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v8];
  id v10 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v9];

  if (v10)
  {
    *(void *)&v4[OBJC_IVAR___CHFitnessAppDelegate_fitnessUIFormattingManager] = v10;
    uint64_t v11 = *(void *)&v4[v6];
    id v12 = [objc_allocWithZone((Class)CHWorkoutFormattingManager) initWithFitnessUIFormattingManager:v10 healthStore:v11];
    *(void *)&v4[OBJC_IVAR___CHFitnessAppDelegate_workoutFormattingManager] = v12;
    id v13 = [objc_allocWithZone((Class)FIPauseRingsCoordinator) initWithHealthStore:v11];
    *(void *)&v4[OBJC_IVAR___CHFitnessAppDelegate_pauseRingsCoordinator] = v13;

    v24.receiver = v4;
    v24.super_class = (Class)type metadata accessor for FitnessAppDelegate();
    [super init];
    type metadata accessor for AppDependencyManager();
    id v15 = v14;
    static AppDependencyManager.shared.getter();
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)(swift_allocObject() + 16) = v15;
    sub_10007E2D8(0, &qword_100963820);
    id v16 = v15;
    AppDependencyManager.add<A>(key:dependency:)();
    swift_release();
    swift_release();
    sub_100050D34((uint64_t)&v21);
    static AppDependencyManager.shared.getter();
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)(swift_allocObject() + 16) = v16;
    id v17 = v16;
    AppDependencyManager.add<A>(key:dependency:)();
    swift_release();
    swift_release();
    sub_100050D34((uint64_t)&v21);
    static AppDependencyManager.shared.getter();
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)(swift_allocObject() + 16) = v17;
    sub_10007E2D8(0, (unint64_t *)&qword_100963830);
    id v18 = v17;
    AppDependencyManager.add<A>(key:dependency:)();
    swift_release();
    swift_release();
    sub_100050D34((uint64_t)&v21);
    static AppDependencyManager.shared.getter();
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)(swift_allocObject() + 16) = v18;
    sub_10007E2D8(0, &qword_100963838);
    id v19 = v18;
    AppDependencyManager.add<A>(key:dependency:)();
    swift_release();
    swift_release();
    sub_100050D34((uint64_t)&v21);
    static AppDependencyManager.shared.getter();
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)(swift_allocObject() + 16) = v19;
    type metadata accessor for FIPauseRingsCoordinator();
    id v20 = v19;
    AppDependencyManager.add<A>(key:dependency:)();
    swift_release();
    swift_release();

    sub_100050D34((uint64_t)&v21);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100050D34(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100963828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100050E0C()
{
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for ActivityDashboardViewController();
  [super viewDidLoad];
  static FitnessAccessibilityIdentifier.SummaryView.base.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setAccessibilityIdentifier:v1];

  id result = [v0 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v3 = result;
  id v4 = [self blackColor];
  [v3 setBackgroundColor:v4];

  id result = [v0 collectionView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v5 = result;
  type metadata accessor for ActivityDashboardCardCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v7 = String._bridgeToObjectiveC()();
  [v5 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v7];

  id result = [v0 collectionView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v8 = result;
  type metadata accessor for ActivityDashboardEditButtonCell();
  uint64_t v9 = swift_getObjCClassFromMetadata();
  NSString v10 = String._bridgeToObjectiveC()();
  [v8 registerClass:v9 forCellWithReuseIdentifier:v10];

  id result = [v0 collectionView];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = result;
  type metadata accessor for ActivityDashboardEntryLinksButtonCell();
  uint64_t v12 = swift_getObjCClassFromMetadata();
  NSString v13 = String._bridgeToObjectiveC()();
  [v11 registerClass:v12 forCellWithReuseIdentifier:v13];

  id result = [v0 collectionView];
  if (result)
  {
    id v14 = result;
    type metadata accessor for TipUICollectionViewCell();
    uint64_t v15 = swift_getObjCClassFromMetadata();
    NSString v16 = String._bridgeToObjectiveC()();
    [v14 registerClass:v15 forCellWithReuseIdentifier:v16];

    swift_getObjectType();
    type metadata accessor for AvatarSettingsChanged();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000B7550((unint64_t *)&unk_1009556F0, (void (*)(uint64_t))&type metadata accessor for AvatarSettingsChanged);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
    return (id)swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000511C4()
{
  uint64_t v97 = v0;
  id v3 = (uint64_t *)v0[30];
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[29];
  swift_release();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v4);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v3, v4);
  if ((v6 & 1) == 0) {
    goto LABEL_63;
  }
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[19];
  swift_getKeyPath();
  uint64_t v94 = v0;
  v0[8] = v8;
  sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__lastAnchor;
  NSString v10 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__lastAnchor);
  if (!v7)
  {
    if (!v10) {
      goto LABEL_57;
    }
    goto LABEL_7;
  }
  if (!v10
    || (uint64_t v11 = (void *)v0[18],
        sub_10007E2D8(0, &qword_100950768),
        id v12 = v10,
        id v13 = v11,
        char v14 = static NSObject.== infix(_:_:)(),
        v13,
        v12,
        (v14 & 1) == 0))
  {
LABEL_7:
    uint64_t v15 = (void *)v0[18];
    NSString v16 = (void *)v0[19];
    static WOLog.trainingLoad.getter();
    id v17 = v15;
    id v18 = v16;
    id v19 = v17;
    id v20 = v18;
    long long v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v91 = v22;
      uint64_t v88 = v0[19];
      uint64_t v23 = swift_slowAlloc();
      uint64_t v89 = (void *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v24 = _typeName(_:qualified:)();
      v0[11] = sub_10008F1F4(v24, v25, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2112;
      swift_getKeyPath();
      v0[12] = v88;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v26 = *(void **)(v8 + v9);
      if (v26)
      {
        v0[16] = v26;
        id v27 = v26;
      }
      else
      {
        v0[13] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v2 = v0;
      unsigned __int8 v32 = (void *)v0[19];
      *uint64_t v89 = v26;

      *(_WORD *)(v23 + 22) = 2112;
      if (v7)
      {
        v0[15] = v19;
        id v33 = v19;
      }
      else
      {
        v0[14] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v35 = v0[26];
      uint64_t v34 = v0[27];
      uint64_t v36 = v0[25];
      v89[1] = v0[18];

      _os_log_impl((void *)&_mh_execute_header, v21, v91, "%s Effort Association Anchor updated from %@ to %@, updating efforts.", (uint8_t *)v23, 0x20u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    else
    {
      uint64_t v29 = v0[26];
      uint64_t v28 = v0[27];
      uint64_t v30 = v0[25];
      uint64_t v31 = (void *)v0[19];

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      uint64_t v2 = v0;
    }
    uint64_t v38 = v2[18];
    uint64_t v37 = v2[19];
    unint64_t v1 = v2[17];
    swift_getKeyPath();
    uint64_t v39 = swift_task_alloc();
    *(void *)(v39 + 16) = v37;
    *(void *)(v39 + 24) = v38;
    v2[5] = v37;
    id v40 = v19;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_task_dealloc();
    if (v1 >> 62) {
      goto LABEL_64;
    }
    uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v42 = swift_bridgeObjectRetain();
    if (!v41)
    {
LABEL_56:
      uint64_t v79 = v2[19];
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      uint64_t v80 = swift_task_alloc();
      *(void *)(v80 + 16) = v79;
      *(unsigned char *)(v80 + 24) = 1;
      v2[10] = v79;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
      uint64_t v0 = v2;
      goto LABEL_57;
    }
LABEL_18:
    unint64_t v43 = 0;
    uint64_t v44 = v2[22];
    uint64_t v93 = (uint64_t *)(v2[19] + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities);
    unint64_t v45 = v1 & 0xC000000000000001;
    uint64_t v84 = v42 + 32;
    uint64_t v85 = v1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    uint64_t v83 = v44;
    uint64_t v90 = v41;
    int v92 = (unint64_t *)(v44 + 8);
    unint64_t v87 = v1 & 0xC000000000000001;
    while (1)
    {
      while (1)
      {
        if (v45)
        {
          id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v43 >= *(void *)(v85 + 16)) {
            goto LABEL_61;
          }
          id v46 = *(id *)(v84 + 8 * v43);
        }
        uint64_t v47 = v46;
        if (__OFADD__(v43++, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          swift_bridgeObjectRetain();
          uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v42 = v2[17];
          if (!v41) {
            goto LABEL_56;
          }
          goto LABEL_18;
        }
        id v49 = [v46 workout];
        id v50 = [v49 workoutActivityType];

        if (v50 != (id)84) {
          break;
        }

        if (v43 == v41) {
          goto LABEL_56;
        }
      }
      char v95 = v47;
      id v51 = [v47 samples];
      if (v51) {
        break;
      }
LABEL_44:
      uint64_t v59 = v2[23];
      uint64_t v58 = v2[24];
      uint64_t v60 = v2[21];
      id v61 = [v95 workout];
      id v62 = [v95 activity];
      EffortUtilities.WorkoutAndActivityKey.init(workout:activity:)();
      (*v86)(v59, v58, v60);
      type metadata accessor for EffortUtilities();
      uint64_t v63 = (void *)static EffortUtilities.effortSampleCollection(for:)();
      swift_bridgeObjectRelease();
      unsigned __int8 v64 = (void *)dispatch thunk of EffortSampleCollection.preferredSample.getter();

      if (v64)
      {
        uint64_t v65 = (uint64_t)[v64 quantity];
      }
      else
      {
        uint64_t v65 = 1;
      }
      uint64_t v2 = v94;
      uint64_t v66 = v94[19];
      swift_getKeyPath();
      v94[6] = v66;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v94[7] = v66;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      uint64_t v67 = v94[23];
      if (v65 == 1)
      {
        swift_bridgeObjectRetain();
        unint64_t v68 = sub_1005299A0(v67);
        char v70 = v69;
        swift_bridgeObjectRelease();
        if (v70)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = *v93;
          uint64_t v96 = *v93;
          *uint64_t v93 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1004F243C();
            uint64_t v72 = v96;
          }
          unint64_t v1 = *(void *)(v83 + 8);
          ((void (*)(unint64_t, void))v1)(*(void *)(v72 + 48) + *(void *)(v83 + 72) * v68, v94[21]);
          uint64_t v73 = *(void *)(*(void *)(v72 + 56) + 8 * v68);
          sub_1005DC728(v68, v72);
          *uint64_t v93 = v72;
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v1 = *v92;
          uint64_t v73 = 1;
        }
        ((void (*)(void, void))v1)(v94[23], v94[21]);
        sub_1002210E8((id)v73);
      }
      else
      {
        uint64_t v74 = v94[21];
        char v75 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v96 = *v93;
        *uint64_t v93 = 0x8000000000000000;
        sub_1004EF864(v65, v67, v75);
        *uint64_t v93 = v96;
        swift_bridgeObjectRelease();
        unint64_t v1 = *v92;
        ((void (*)(uint64_t, uint64_t))*v92)(v67, v74);
      }
      uint64_t v76 = v94[24];
      uint64_t v77 = v94[21];
      uint64_t v78 = v94[19];
      swift_endAccess();
      v94[9] = v78;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();

      swift_release();
      ((void (*)(uint64_t, uint64_t))v1)(v76, v77);
      uint64_t v41 = v90;
      unint64_t v45 = v87;
      if (v43 == v90) {
        goto LABEL_56;
      }
    }
    uint64_t v52 = v51;
    sub_10007E2D8(0, &qword_100950760);
    unint64_t v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v96 = (uint64_t)_swiftEmptyArrayStorage;
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
      if (v54) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v54)
      {
LABEL_29:
        if (v54 < 1) {
          goto LABEL_62;
        }
        for (uint64_t i = 0; i != v54; ++i)
        {
          if ((v53 & 0xC000000000000001) != 0) {
            id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v56 = *(id *)(v53 + 8 * i + 32);
          }
          uint64_t v57 = v56;
          self;
          if (swift_dynamicCastObjCClass())
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          else
          {
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
LABEL_57:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v81 = (uint64_t (*)(void))v0[1];
  return v81();
}

void sub_100051DB8()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup;
  if ((v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] & 1) == 0
    && (*(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) & 1) == 0)
  {
    id v7 = [v1 navigationItem];
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setTitle:v11];

    id v12 = [v1 navigationController];
    if (v12)
    {
      id v13 = v12;
      id v14 = [v12 navigationBar];

      [v14 setPrefersLargeTitles:1];
    }
    Date.init()();
    id v15 = [v1 navigationItem];
    if (qword_10094AD90 != -1) {
      swift_once();
    }
    id v16 = (id)qword_10095F500;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    NSString v18 = [v16 stringFromDate:isa];

    if (!v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v15 _setWeeTitle:v18];

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v19 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton];
    [v19 setFrame:0.0, 0.0, 34.33, 34.33];
    id v20 = [self keyColors];
    if (v20)
    {
      long long v21 = v20;
      id v22 = [v20 nonGradientTextColor];

      [v19 setTintColor:v22];
      static FitnessAccessibilityIdentifier.SummaryView.accountSettingsButton.getter();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 setAccessibilityIdentifier:v23];

      [v19 addTarget:v1 action:"accountButtonTapped:" forControlEvents:64];
      id v24 = [v1 navigationItem];
      [v24 _setLargeTitleAccessoryView:v19 alignToBaseline:0];

      sub_100027D50();
      v1[v6] = 1;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000521D4()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = type metadata accessor for Logger();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v69 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  __chkstk_darwin(v2);
  uint64_t v65 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayIndex();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  __chkstk_darwin(v4);
  id v62 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GregorianDayRange();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v61 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v14 = (char *)&v49 - v13;
  uint64_t v53 = type metadata accessor for Date();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v60 = v0 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
  aBlock[0] = v0;
  uint64_t v59 = sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = v0 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange;
  swift_beginAccess();
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v55 = v9;
  v17(v14, v16, v9);
  GregorianDayRange.dayIndexRange.getter();
  NSString v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v56 = v10 + 8;
  uint64_t v57 = v18;
  v18(v14, v9);
  id v19 = v62;
  uint64_t v20 = v63;
  uint64_t v21 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v8, v64);
  sub_10008DB18((uint64_t)v8, &qword_100950728);
  swift_getKeyPath();
  uint64_t v54 = v0;
  aBlock[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v22 = v61;
  uint64_t v23 = v55;
  v17(v61, v16, v55);
  id v24 = v65;
  GregorianDayRange.gregorianCalendar.getter();
  v57(v22, v23);
  uint64_t v25 = v58;
  DayIndex.startDate(in:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v67);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v21);
  sub_10007E2D8(0, (unint64_t *)&unk_100954700);
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1007509E0;
  id v27 = v25;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  *(void *)(v26 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100950770);
  *(void *)(v26 + 64) = sub_1000DEEEC();
  *(void *)(v26 + 32) = isa;
  uint64_t v29 = NSPredicate.init(format:_:)();
  static WOLog.trainingLoad.getter();
  id v30 = v29;
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    aBlock[0] = v67;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v35 = _typeName(_:qualified:)();
    uint64_t v70 = sub_10008F1F4(v35, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2112;
    uint64_t v70 = (uint64_t)v30;
    id v37 = v30;
    id v27 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v34 = v30;

    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s Starting an HKWorkoutEffortRelationshipQuery with predicate %@", (uint8_t *)v33, 0x16u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v50 + 8))(v69, v51);
  uint64_t v38 = v54;
  uint64_t v39 = ObjectType;
  uint64_t v40 = v53;
  uint64_t v41 = v52;
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v42;
  *(void *)(v43 + 24) = v39;
  id v44 = objc_allocWithZone((Class)HKWorkoutEffortRelationshipQuery);
  aBlock[4] = (uint64_t)sub_1000E8AD8;
  aBlock[5] = v43;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10001B040;
  void aBlock[3] = (uint64_t)&unk_1008BC478;
  unint64_t v45 = _Block_copy(aBlock);
  swift_retain();
  id v46 = [v44 initWithPredicate:v30 anchor:0 options:0 resultsHandler:v45];
  _Block_release(v45);
  swift_release();
  swift_release();
  uint64_t v47 = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_observer;
  uint64_t v48 = *(void **)(v38 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_observer);
  *(void *)(v38 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_observer) = v46;

  if (*(void *)(v38 + v47))
  {
    [*(id *)(v38 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_healthStore) executeQuery:];

    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v40);
  }
}

char *sub_100052AF8(char *a1)
{
  uint64_t v95 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v94 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v93 = (char *)OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue;
  uint64_t v91 = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v7 = v1;
  static DispatchQoS.userInitiated.getter();
  *(void *)&long long v97 = _swiftEmptyArrayStorage;
  sub_10008AA94(&qword_10095B0A0, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000AFA94(&qword_10095B0A8);
  sub_1000A132C(&qword_10095B0B0, &qword_10095B0A8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v94, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v95);
  *(void *)&v93[(void)v92] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId] = _swiftEmptyDictionarySingleton;
  v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    id v8 = (void *)sub_1002F176C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    id v8 = &_swiftEmptySetSingleton;
  }
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusDataProviderCancellables] = v8;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsSetupStateCancellable] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsHighlightStateCancellable] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context] = a1;
  uint64_t v9 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v93 = *(char **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
  uint64_t v95 = *(void *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider];
  uint64_t v10 = v95;
  uint64_t v11 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider];
  uint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory];
  uint64_t v13 = *(char **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext];
  id v14 = *(void **)&v13[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  uint64_t v15 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager];
  uint64_t v94 = *(char **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator];
  uint64_t v16 = v94;
  id v17 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory];
  *id v17 = v93;
  v17[1] = v10;
  v17[2] = v11;
  v17[3] = v12;
  v17[4] = v14;
  v17[5] = v15;
  v17[6] = v16;
  id v90 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider];
  id v92 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore];
  id v18 = v92;
  id v19 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory];
  *id v19 = v90;
  v19[1] = v15;
  v19[2] = v18;
  id v88 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider];
  id v89 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator];
  id v20 = v89;
  uint64_t v21 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory];
  *uint64_t v21 = v88;
  v21[1] = v20;
  _OWORD v21[2] = v15;
  id v22 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider];
  id v83 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider];
  id v23 = v83;
  id v84 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager];
  id v24 = v84;
  uint64_t v85 = *(void *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider];
  uint64_t v25 = v85;
  id v86 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager];
  id v26 = v86;
  id v87 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager];
  id v27 = v87;
  uint64_t v28 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory];
  *uint64_t v28 = v22;
  v28[1] = v23;
  v28[2] = v24;
  v28[3] = v25;
  v28[4] = v26;
  void v28[5] = v27;
  v28[6] = v14;
  v28[7] = v13;
  uint64_t v29 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_awardCardFactory];
  v29[3] = type metadata accessor for AAUIAwardsDataProvider();
  v29[4] = &protocol witness table for AAUIAwardsDataProvider;
  *uint64_t v29 = v22;
  v29[5] = v11;
  v29[6] = v12;
  v29[7] = v15;
  id v30 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_balanceDataProvider];
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory] = v30;
  uint64_t v91 = OBJC_IVAR___CHFitnessAppContext_dependencies;
  id v31 = v15;
  id v32 = v11;
  id v33 = v12;
  id v34 = v22;
  id v35 = v14;
  id v36 = v31;
  id v37 = v34;
  id v38 = v32;
  id v39 = v33;
  id v40 = v35;
  uint64_t v41 = a1;
  uint64_t v42 = v93;
  swift_retain();
  uint64_t v43 = v94;
  id v44 = v90;
  id v45 = v92;
  id v46 = v88;
  id v47 = v89;
  id v48 = v83;
  id v49 = v84;
  swift_retain();
  id v50 = v86;
  id v51 = v87;
  uint64_t v52 = v13;
  id v53 = v30;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_1009669B0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v54 = v91;
  id v55 = *(id *)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider];
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_10008E75C((uint64_t)v102, (uint64_t)v100);
  *(void *)&long long v97 = v55;
  uint64_t v56 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusCardFactory];
  long long v57 = v98;
  *(_OWORD *)uint64_t v56 = v97;
  *((_OWORD *)v56 + 1) = v57;
  long long v58 = v99;
  long long v59 = v100[0];
  long long v60 = v100[1];
  *((void *)v56 + 10) = v101;
  *((_OWORD *)v56 + 4) = v60;
  *((_OWORD *)v56 + 2) = v58;
  *((_OWORD *)v56 + 3) = v59;
  uint64_t v61 = *(void *)&v13[v54];
  id v62 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory];
  *id v62 = *(void *)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider];
  v62[1] = v61;
  uint64_t v63 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider];
  uint64_t v64 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager];
  uint64_t v65 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsFormattingManager];
  uint64_t v66 = &v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics];
  char v67 = v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics + 16];
  uint64_t v69 = *(void *)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName];
  uint64_t v68 = *(void *)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName + 8];
  uint64_t v70 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache];
  uint64_t v71 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory];
  long long v72 = *(_OWORD *)v66;
  *(void *)uint64_t v71 = v63;
  *((void *)v71 + 1) = v64;
  *((void *)v71 + 2) = v65;
  *(_OWORD *)(v71 + 24) = v72;
  v71[40] = v67;
  *((void *)v71 + 6) = v69;
  *((void *)v71 + 7) = v68;
  *((void *)v71 + 8) = v70;
  swift_bridgeObjectRetain();
  id v73 = v70;
  swift_retain();
  swift_retain();
  id v74 = v63;
  id v75 = v64;
  id v76 = v65;

  uint64_t v77 = (objc_class *)type metadata accessor for SummaryCoordinator();
  v96.receiver = v7;
  v96.super_class = v77;
  uint64_t v78 = (char *)[super init];
  uint64_t v79 = *(char **)(*(void *)&v78[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
  *(void *)&v79[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_delegate + 8] = &off_1008D15B0;
  swift_unknownObjectWeakAssign();
  uint64_t v80 = v78;
  uint64_t v81 = v79;
  sub_100059670();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v102);
  return v80;
}

uint64_t sub_1000533BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, void, void, void)@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v96 = a7;
  uint64_t v93 = a5;
  uint64_t v94 = a6;
  uint64_t v88 = a1;
  id v89 = a3;
  uint64_t v91 = a8;
  uint64_t v10 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v10 - 8);
  id v83 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v12 - 8);
  uint64_t v81 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v87 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100960988);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v95 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v90 = (char *)&v77 - v23;
  uint64_t v92 = sub_1000AFA94(&qword_100960990);
  uint64_t v98 = *(void *)(v92 - 8);
  uint64_t v24 = __chkstk_darwin(v92);
  uint64_t v82 = (uint64_t)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v97 = (uint64_t)&v77 - v27;
  __chkstk_darwin(v26);
  uint64_t v80 = (uint64_t)&v77 - v28;
  uint64_t v29 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v29 - 8);
  id v30 = [self mainBundle];
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v30 localizedStringForKey:v31 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100752410;
  *(void *)(v33 + 56) = &type metadata for String;
  unint64_t v34 = sub_1000AA64C();
  id v35 = v89;
  *(void *)(v33 + 32) = v88;
  *(void *)(v33 + 40) = a2;
  *(void *)(v33 + 96) = &type metadata for String;
  *(void *)(v33 + 104) = v34;
  *(void *)(v33 + 64) = v34;
  *(void *)(v33 + 72) = v35;
  *(void *)(v33 + 80) = a4;
  *(void *)(v33 + 136) = &type metadata for String;
  *(void *)(v33 + 144) = v34;
  uint64_t v37 = (uint64_t)v93;
  unint64_t v36 = v94;
  *(void *)(v33 + 112) = v93;
  *(void *)(v33 + 120) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  uint64_t v38 = v91;
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v100 = v96;
  unint64_t v39 = sub_1000AA6A0();
  swift_retain();
  unint64_t v79 = v39;
  AttributedString.subscript.setter();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v41 = v87;
  v40(v87, v38, v17);
  uint64_t v100 = v37;
  unint64_t v101 = v36;
  uint64_t v42 = type metadata accessor for Locale();
  uint64_t v43 = *(void *)(v42 - 8);
  id v44 = *(void (**)(void, void, void, void))(v43 + 56);
  uint64_t v88 = v43 + 56;
  id v89 = v44;
  v44(v16, 1, 1, v42);
  uint64_t v45 = sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  unint64_t v46 = sub_1000A06D0();
  id v47 = v90;
  unint64_t v85 = v46;
  uint64_t v86 = v45;
  id v48 = v41;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  uint64_t v49 = (uint64_t)v47;
  uint64_t v93 = v16;
  uint64_t v50 = (uint64_t)v16;
  id v51 = v48;
  sub_10008DB18(v50, (uint64_t *)&unk_10095BF60);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v94 = v17;
  uint64_t v96 = v18 + 8;
  v52(v48, v17);
  uint64_t v53 = v92;
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
  v98 += 48;
  id v84 = v54;
  if (v54(v49, 1, v92) == 1)
  {
    sub_10008DB18(v49, &qword_100960988);
    uint64_t v55 = v53;
  }
  else
  {
    uint64_t v56 = v80;
    sub_1000AA6F4(v49, v80);
    id v90 = (char *)v40;
    uint64_t v57 = v97;
    sub_1000AEF2C(v56, v97, &qword_100960990);
    uint64_t v58 = swift_getKeyPath();
    *(&v77 - 2) = __chkstk_darwin(v58);
    uint64_t v77 = swift_getKeyPath();
    uint64_t v78 = v52;
    long long v59 = v81;
    static Text.Scale.secondary.getter();
    uint64_t v60 = type metadata accessor for Text.Scale();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 0, 1, v60);
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    uint64_t v55 = v53;
    uint64_t v61 = v38;
    id v62 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
    sub_1000AA7AC();
    uint64_t v52 = v78;
    AttributedSubstring.subscript.setter();
    v62(&v100, 0);
    uint64_t v38 = v61;
    uint64_t v63 = v57;
    id v40 = (void (*)(char *, uint64_t, uint64_t))v90;
    sub_10008DB18(v63, &qword_100960990);
    sub_10008DB18(v56, &qword_100960990);
  }
  uint64_t v64 = v94;
  v40(v51, v38, v94);
  uint64_t v100 = 32;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v65 = (uint64_t)v93;
  v89(v93, 1, 1, v42);
  uint64_t v66 = (uint64_t)v95;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_10008DB18(v65, (uint64_t *)&unk_10095BF60);
  swift_bridgeObjectRelease();
  v52(v51, v64);
  if (v84(v66, 1, v55) == 1)
  {
    char v67 = &qword_100960988;
    uint64_t v68 = v66;
  }
  else
  {
    uint64_t v69 = v82;
    sub_1000AA6F4(v66, v82);
    uint64_t v70 = v97;
    sub_1000AEF2C(v69, v97, &qword_100960990);
    uint64_t v71 = swift_getKeyPath();
    *(&v77 - 2) = __chkstk_darwin(v71);
    swift_getKeyPath();
    uint64_t v72 = type metadata accessor for Font.Design();
    uint64_t v73 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v83, 1, 1, v72);
    uint64_t v74 = static Font.system(size:weight:design:)();
    sub_10008DB18(v73, &qword_10094C448);
    uint64_t v102 = v74;
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    id v75 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
    AttributedSubstring.subscript.setter();
    v75(&v100, 0);
    sub_10008DB18(v70, &qword_100960990);
    uint64_t v68 = v69;
    char v67 = &qword_100960990;
  }
  return sub_10008DB18(v68, v67);
}

uint64_t sub_100054304(uint64_t a1)
{
  _StringGuts.grow(_:)(154);
  v2._countAndFlagsBits = 0xD00000000000002FLL;
  v2._object = (void *)0x80000001007D3790;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 0x4D6F6D6544736928;
  v3._object = (void *)0xED0000203A65646FLL;
  String.append(_:)(v3);
  if ((a1 & 0x10000000000) != 0) {
    uint64_t v4 = 1702195828;
  }
  else {
    uint64_t v4 = 0x65736C6166;
  }
  if ((a1 & 0x10000000000) != 0) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  v7._object = (void *)0x80000001007D37C0;
  String.append(_:)(v7);
  if ((a1 & (unint64_t)&_mh_execute_header) != 0) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if ((a1 & (unint64_t)&_mh_execute_header) != 0) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x65766F4D73616820;
  v11._object = (void *)0xEE00203A6C616F47;
  String.append(_:)(v11);
  if (a1) {
    uint64_t v12 = 1702195828;
  }
  else {
    uint64_t v12 = 0x65736C6166;
  }
  if (a1) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  unint64_t v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0xD000000000000018;
  v15._object = (void *)0x80000001007D37E0;
  String.append(_:)(v15);
  if ((a1 & 0x100) != 0) {
    uint64_t v16 = 1702195828;
  }
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if ((a1 & 0x100) != 0) {
    unint64_t v17 = 0xE400000000000000;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x80000001007D3800;
  v19._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v19);
  if ((a1 & 0x10000) != 0) {
    uint64_t v20 = 1702195828;
  }
  else {
    uint64_t v20 = 0x65736C6166;
  }
  if ((a1 & 0x10000) != 0) {
    unint64_t v21 = 0xE400000000000000;
  }
  else {
    unint64_t v21 = 0xE500000000000000;
  }
  unint64_t v22 = v21;
  String.append(_:)(*(Swift::String *)&v20);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x6E61745373616820;
  v23._object = (void *)0xEF203A6C616F4764;
  String.append(_:)(v23);
  if ((a1 & 0x1000000) != 0) {
    uint64_t v24 = 1702195828;
  }
  else {
    uint64_t v24 = 0x65736C6166;
  }
  if ((a1 & 0x1000000) != 0) {
    unint64_t v25 = 0xE400000000000000;
  }
  else {
    unint64_t v25 = 0xE500000000000000;
  }
  unint64_t v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0xD00000000000001BLL;
  v27._object = (void *)0x80000001007D3820;
  String.append(_:)(v27);
  id v28 = [self standardUserDefaults];
  NSString v29 = String._bridgeToObjectiveC()();
  unsigned int v30 = [v28 BOOLForKey:v29];

  if (v30) {
    uint64_t v31 = 1702195828;
  }
  else {
    uint64_t v31 = 0x65736C6166;
  }
  if (v30) {
    unint64_t v32 = 0xE400000000000000;
  }
  else {
    unint64_t v32 = 0xE500000000000000;
  }
  unint64_t v33 = v32;
  String.append(_:)(*(Swift::String *)&v31);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 41;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  return 0;
}

uint64_t *sub_1000545E4(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  unint64_t v6 = v5;
  uint64_t v45 = *v6;
  uint64_t v12 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v12 - 8);
  id v44 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10094EC88);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  unint64_t v18 = (char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider__state;
  aBlock = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v17, v14);
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_invitationDestinationCoordinator;
  *(uint64_t *)((char *)v6 + v19) = (uint64_t)[objc_allocWithZone((Class)type metadata accessor for InvitationDestinationCoordinator()) init];
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_activitySharingClient) = (uint64_t)a1;
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_fiuiFormattingManager) = (uint64_t)a2;
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_friendListSectionManager) = (uint64_t)a3;
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_friendManager) = (uint64_t)a4;
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_pauseRingsCoordinator) = (uint64_t)a5;
  id v50 = a1;
  id v49 = a2;
  id v48 = a3;
  id v47 = a4;
  id v46 = a5;
  uint64_t v20 = sub_10001DA70();
  swift_beginAccess();
  uint64_t v57 = v20;
  type metadata accessor for ASFriendListDisplayMode(0);
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v21 = type metadata accessor for TaskPriority();
  uint64_t v22 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v44, 1, 1, v21);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v23 = static MainActor.shared.getter();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  id v24[4] = v6;
  sub_1000713D0(v22, (uint64_t)&unk_10094EC98, (uint64_t)v24);
  swift_release();
  unint64_t v25 = self;
  id v26 = [v25 defaultCenter];
  Swift::String v27 = (void *)kASFriendListChangedNotificationKey;
  id v28 = self;
  id v29 = v27;
  id v30 = [v28 mainQueue];
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v45;
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v33;
  uint64_t v55 = sub_10007157C;
  uint64_t v56 = v32;
  aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_1000711BC;
  uint64_t v54 = &unk_1008BA850;
  Swift::String v34 = _Block_copy(&aBlock);
  swift_release();
  id v35 = [v26 addObserverForName:v29 object:0 queue:v30 usingBlock:v34];
  _Block_release(v34);
  swift_unknownObjectRelease();

  id v36 = [v25 defaultCenter];
  id v37 = [self didUpdatePauseStateNotification];
  id v38 = [v28 mainQueue];
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *(void *)(v40 + 24) = v33;
  uint64_t v55 = sub_1000E47C4;
  uint64_t v56 = v40;
  aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_1000711BC;
  uint64_t v54 = &unk_1008BA8A0;
  uint64_t v41 = _Block_copy(&aBlock);
  swift_release();
  id v42 = [v36 addObserverForName:v37 object:0 queue:v38 usingBlock:v41];

  _Block_release(v41);
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_100054BC8()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (uint64_t)sub_1000592C0();
  if ((result & 1) == 0)
  {
    id v25 = self;
    id v3 = [v25 defaultCenter];
    uint64_t v4 = self;
    id v5 = [v4 mainQueue];
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = ObjectType;
    id v30 = sub_1004D8FB4;
    uint64_t v31 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    id v28 = sub_1000711BC;
    id v29 = &unk_1008CC360;
    uint64_t v8 = _Block_copy(&aBlock);
    swift_release();
    id v9 = [v3 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v5 usingBlock:v8];
    _Block_release(v8);

    id v10 = [v25 defaultCenter];
    uint64_t v11 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    id v12 = [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager) unitManager];
    id v13 = [v4 mainQueue];
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = ObjectType;
    id v30 = sub_1004D8FBC;
    uint64_t v31 = v15;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    id v28 = sub_1000711BC;
    id v29 = &unk_1008CC3B0;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    id v17 = [v10 addObserverForName:v11 object:v12 queue:v13 usingBlock:v16];
    _Block_release(v16);

    id v18 = [v25 defaultCenter];
    id v19 = [v4 mainQueue];
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v30 = sub_1000E5700;
    uint64_t v31 = v20;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    id v28 = sub_1000711BC;
    id v29 = &unk_1008CC3D8;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_release();
    id v22 = [v18 addObserverForName:UIApplicationDidBecomeActiveNotification object:0 queue:v19 usingBlock:v21];
    _Block_release(v21);

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100752410;
    *(void *)(v23 + 56) = swift_getObjectType();
    *(void *)(v23 + 32) = v9;
    *(void *)(v23 + 88) = swift_getObjectType();
    *(void *)(v23 + 64) = v17;
    *(void *)(v23 + 120) = swift_getObjectType();
    *(void *)(v23 + 96) = v22;
    *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers) = v23;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v24 = [v25 defaultCenter];
    [v24 addObserver:v0 selector:"textSizeChanged:" name:UIContentSizeCategoryDidChangeNotification object:0];

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000550B0(void *a1, void *a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095A608);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v12 = v2 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider__state;
  aBlock[0] = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_experienceType) = 1;
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_friendListSectionManager) = a1;
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider_healthStore) = a2;
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  void v14[4] = v2;
  id v15 = a1;
  id v16 = a2;
  swift_retain();
  sub_1000713D0((uint64_t)v7, (uint64_t)&unk_10095A618, (uint64_t)v14);
  swift_release();
  id v17 = [self defaultCenter];
  id v18 = (void *)kASFriendListChangedNotificationKey;
  id v19 = self;
  id v20 = v18;
  id v21 = [v19 mainQueue];
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1000712B0;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000711BC;
  void aBlock[3] = &unk_1008C48F0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_release();
  id v24 = [v17 addObserverForName:v20 object:0 queue:v21 usingBlock:v23];

  _Block_release(v23);
  swift_unknownObjectRelease();

  return v2;
}

id sub_100055414()
{
  uint64_t v140 = sub_1000AFA94(&qword_100950218);
  uint64_t v139 = *(void *)(v140 - 8);
  uint64_t v0 = __chkstk_darwin(v140);
  int v137 = (char *)v127 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = v1;
  __chkstk_darwin(v0);
  uint64_t v138 = (char *)v127 - v2;
  unint64_t v135 = sub_1000AFA94(&qword_100950088);
  uint64_t v134 = *(void *)(v135 - 8);
  uint64_t v3 = *(void *)(v134 + 64);
  uint64_t v4 = __chkstk_darwin(v135);
  uint64_t v132 = (char *)v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v133 = (char *)v127 - v5;
  uint64_t v146 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v150 = *(void *)(v146 - 8);
  uint64_t v6 = *(void *)(v150 + 64);
  uint64_t v7 = __chkstk_darwin(v146);
  uint64_t v141 = (char *)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v142 = (char *)v127 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v143 = (char *)v127 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v145 = (char *)v127 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  char v149 = (char *)v127 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v148 = (char *)v127 - v17;
  __chkstk_darwin(v16);
  uint64_t v147 = (char *)v127 - v18;
  uint64_t v144 = (void (*)(uint64_t, char *, uint64_t))sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v19 = __chkstk_darwin(v144);
  uint64_t v153 = (uint64_t)v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v157 = (char *)v127 - v21;
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  id v26 = (char *)v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v28 = (char *)v127 - v27;
  static Log.default.getter();
  v29._countAndFlagsBits = 0xD000000000000065;
  v29._object = (void *)0x80000001007B9E10;
  v30._object = (void *)0x80000001007B9EA0;
  v30._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v29, v30);
  uint64_t v151 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v152 = v22;
  v151(v28, v22);
  uint64_t v31 = [objc_allocWithZone((Class)type metadata accessor for BackgroundTaskAssertion()) init];
  id v32 = [self sharedApplication];
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v161 = sub_100216654;
  uint64_t v162 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  uint64_t v160 = &unk_1008BBD20;
  Swift::String v34 = _Block_copy(aBlock);
  swift_release();
  id v35 = [v32 beginBackgroundTaskWithExpirationHandler:v34];
  _Block_release(v34);

  id v36 = &v31[OBJC_IVAR___CHBackgroundTaskAssertion_identifier];
  *(void *)id v36 = v35;
  v36[8] = 0;
  v31[OBJC_IVAR___CHBackgroundTaskAssertion_state] = 1;
  uint64_t v155 = swift_allocObject();
  *(void *)(v155 + 16) = v31;
  id v37 = self;
  uint64_t v154 = v31;
  id v38 = [v37 standardUserDefaults];
  NSString v39 = String._bridgeToObjectiveC()();
  unsigned int v40 = [v38 BOOLForKey:v39];

  id v41 = [v37 standardUserDefaults];
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v41 objectForKey:v42];

  if (v43)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v158, 0, sizeof(v158));
  }
  sub_100074830((uint64_t)v158, (uint64_t)aBlock);
  uint64_t v44 = (uint64_t)v157;
  if (v160)
  {
    uint64_t v45 = type metadata accessor for Date();
    int v46 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, v46 ^ 1u, 1, v45);
  }
  else
  {
    sub_10008DB18((uint64_t)aBlock, &qword_100955A00);
    uint64_t v47 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v44, 1, 1, v47);
  }
  id result = [self sharedBehavior];
  if (result)
  {
    id v49 = result;
    id v50 = [result fitnessMode];

    if (v50 == (id)2) {
      unsigned int v51 = v40;
    }
    else {
      unsigned int v51 = 0;
    }
    if (v51 == 1
      && (uint64_t v52 = type metadata accessor for Date(),
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v44, 1, v52) == 1))
    {
      uint64_t v53 = swift_allocObject();
      *(unsigned char *)(v53 + 16) = 2;
      uint64_t v130 = swift_allocObject();
      *(unsigned char *)(v130 + 16) = 2;
      uint64_t v131 = swift_allocObject();
      *(unsigned char *)(v131 + 16) = 2;
      sub_10007E4EC((void *)(v156 + OBJC_IVAR___CHFitnessAppBadgeAggregator_contentAvailabilityClient), *(void *)(v156 + OBJC_IVAR___CHFitnessAppBadgeAggregator_contentAvailabilityClient + 24));
      uint64_t v54 = v133;
      dispatch thunk of ContentAvailabilityClientProtocol.queryContentAvailability()();
      uint64_t v55 = v134;
      uint64_t v56 = v132;
      unint64_t v57 = v135;
      (*(void (**)(char *, char *, unint64_t))(v134 + 16))(v132, v54, v135);
      unint64_t v58 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v59 = swift_allocObject();
      (*(void (**)(unint64_t, char *, unint64_t))(v55 + 32))(v59 + v58, v56, v57);
      uint64_t v60 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v59 + ((v3 + v58 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v60 = sub_10021666C;
      v60[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v53;
      uint64_t v129 = v53;
      swift_retain();
      uint64_t v61 = v148;
      Promise.init(asyncOperation:)();
      (*(void (**)(char *, unint64_t))(v55 + 8))(v54, v57);
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_1002154B0;
      *(void *)(v62 + 24) = 0;
      uint64_t v64 = v149;
      uint64_t v63 = v150;
      uint64_t v65 = *(void (**)(char *, char *))(v150 + 16);
      uint64_t v153 = v150 + 16;
      uint64_t v66 = v146;
      v65(v149, v61);
      uint64_t v132 = (char *)v65;
      v127[0] = *(unsigned __int8 *)(v63 + 80);
      id v133 = (char *)(v127[0] | 7);
      uint64_t v67 = (v127[0] + 16) & ~v127[0];
      uint64_t v151 = (void (*)(char *, uint64_t))(((v6 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      uint64_t v152 = v67;
      unint64_t v135 = (v6 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v68 = swift_allocObject();
      uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
      uint64_t v134 = v63 + 32;
      uint64_t v144 = v69;
      v69(v68 + v67, v64, v66);
      uint64_t v70 = (uint64_t (**)(uint64_t))(v68 + ((v6 + v67 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v70 = sub_1001B36B8;
      v70[1] = (uint64_t (*)(uint64_t))v62;
      Promise.init(asyncOperation:)();
      uint64_t v71 = *(void (**)(char *, uint64_t))(v63 + 8);
      v63 += 8;
      id v128 = v71;
      v71(v61, v66);
      sub_10007E4EC((void *)(v156 + OBJC_IVAR___CHFitnessAppBadgeAggregator_privacyPreferenceClient), *(void *)(v156 + OBJC_IVAR___CHFitnessAppBadgeAggregator_privacyPreferenceClient + 24));
      uint64_t v72 = v138;
      dispatch thunk of PrivacyPreferenceClientProtocol.fetchNoticePrivacyPreference(ignoreCaches:)();
      uint64_t v73 = v139;
      uint64_t v74 = v137;
      uint64_t v75 = v140;
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v137, v72, v140);
      unint64_t v76 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      unint64_t v77 = (v136 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v78 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v78 + v76, v74, v75);
      unint64_t v79 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v78 + v77);
      uint64_t v80 = v130;
      char *v79 = sub_10021668C;
      v79[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v80;
      swift_retain();
      uint64_t v81 = v149;
      Promise.init(asyncOperation:)();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v75);
      uint64_t v82 = swift_allocObject();
      *(void *)(v82 + 16) = sub_100215790;
      *(void *)(v82 + 24) = 0;
      id v83 = v145;
      id v84 = v81;
      uint64_t v85 = v146;
      ((void (*)(char *, char *, uint64_t))v65)(v145, v81, v146);
      uint64_t v86 = swift_allocObject();
      v144(v86 + v152, v83, v85);
      id v87 = (void *)(v86 + v135);
      void *v87 = sub_1001B3D88;
      v87[1] = v82;
      uint64_t v88 = v148;
      v127[1] = (char *)&type metadata for () + 8;
      Promise.init(asyncOperation:)();
      uint64_t v150 = v63;
      v128(v84, v85);
      swift_retain();
      id v89 = v84;
      Promise.init(asyncOperation:)();
      sub_1000AFA94(&qword_100950220);
      uint64_t v90 = *(void *)(v63 + 64);
      uint64_t v91 = (v127[0] + 32) & ~v127[0];
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_100752410;
      uint64_t v93 = v92 + v91;
      uint64_t v94 = v132;
      ((void (*)(uint64_t, char *, uint64_t))v132)(v93, v147, v85);
      ((void (*)(uint64_t, char *, uint64_t))v94)(v93 + v90, v88, v85);
      uint64_t v44 = (uint64_t)v157;
      uint64_t v95 = v89;
      uint64_t v96 = v85;
      ((void (*)(uint64_t, char *, uint64_t))v94)(v93 + 2 * v90, v95, v85);
      aBlock[0] = v92;
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v97 = (void *)static OS_dispatch_queue.main.getter();
      static PromiseConstants.defaultMaxConcurrentOperations.getter();
      sub_1000AFA94(&qword_100950228);
      sub_1000A132C((unint64_t *)&qword_100950230, &qword_100950228);
      uint64_t v98 = v142;
      static Promise<>.parallel<A>(queue:maxConcurrent:_:)();
      swift_bridgeObjectRelease();

      uint64_t v99 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v100 = (void *)swift_allocObject();
      uint64_t v101 = v129;
      _OWORD v100[2] = v130;
      v100[3] = v101;
      v100[4] = v131;
      v100[5] = v99;
      uint64_t v102 = v155;
      v100[6] = sub_1000EAA28;
      v100[7] = v102;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = sub_10021670C;
      *(void *)(v103 + 24) = v100;
      uint64_t v104 = swift_allocObject();
      *(void *)(v104 + 16) = sub_1000E02E0;
      *(void *)(v104 + 24) = v103;
      uint64_t v105 = v141;
      ((void (*)(char *, char *, uint64_t))v132)(v141, v98, v96);
      uint64_t v106 = swift_allocObject();
      v144(v106 + v152, v105, v96);
      uint64_t v107 = (uint64_t (**)(uint64_t))(v106 + v135);
      *uint64_t v107 = sub_10003936C;
      v107[1] = (uint64_t (*)(uint64_t))v104;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v108 = v155;
      swift_retain();
      uint64_t v109 = v143;
      Promise.init(asyncOperation:)();
      char v110 = v128;
      v128(v98, v96);
      uint64_t v111 = swift_allocObject();
      *(void *)(v111 + 16) = sub_1000EAA28;
      *(void *)(v111 + 24) = v108;
      uint64_t v112 = swift_allocObject();
      *(void *)(v112 + 16) = sub_100216760;
      *(void *)(v112 + 24) = v111;
      ((void (*)(char *, char *, uint64_t))v132)(v98, v109, v96);
      uint64_t v113 = swift_allocObject();
      v144(v113 + v152, v98, v96);
      uint64_t v114 = (void *)(v113 + v135);
      void *v114 = sub_1001B3D88;
      v114[1] = v112;
      swift_retain();
      uint64_t v115 = v145;
      Promise.init(asyncOperation:)();
      v110(v109, v96);
      uint64_t v116 = v115;
      uint64_t v117 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
      uint64_t v118 = swift_allocObject();
      *(void *)(v118 + 16) = 0;
      *(void *)(v118 + 24) = 0;
      v117(sub_10006D8B4, v118);

      swift_release();
      swift_release();
      swift_release();
      v110(v116, v96);
      v110(v149, v96);
      v110(v148, v96);
      v110(v147, v96);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static Log.default.getter();
      uint64_t v119 = v153;
      sub_100005D34(v44, v153);
      uint64_t v120 = Logger.logObject.getter();
      os_log_type_t v121 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v122 = 67109634;
        LODWORD(v158[0]) = v50 == (id)2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v122 + 8) = 1024;
        LODWORD(v158[0]) = v40;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v122 + 14) = 2080;
        uint64_t v123 = Optional.description.getter();
        *(void *)&v158[0] = sub_10008F1F4(v123, v124, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10008DB18(v119, (uint64_t *)&unk_10095B890);
        _os_log_impl((void *)&_mh_execute_header, v120, v121, "FitnessAppBadgeAggregator: not badging for Amelia\nisStandalonePhone: %{BOOL}d\nhasCompletedOnboardingInSydneyA: %{BOOL}d\nlastIntroSheetViewDate: %s", (uint8_t *)v122, 0x18u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v44 = (uint64_t)v157;
        swift_slowDealloc();
      }
      else
      {
        sub_10008DB18(v119, (uint64_t *)&unk_10095B890);
      }

      v151(v26, v152);
      uint64_t v125 = v155;
      id v126 = v154;
      swift_retain();
      sub_100020FB0(0, sub_1000EAA28, v125);

      swift_release_n();
    }
    return (id)sub_10008DB18(v44, (uint64_t *)&unk_10095B890);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000568B8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1000AFA94(&qword_10095C530);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  __chkstk_darwin(v2);
  Swift::String v30 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider);
  id v37 = sub_1000E86D4;
  uint64_t v38 = v5;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_100070394;
  id v36 = &unk_1008C6B10;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v6 addUpdateHandler:v7];
  _Block_release(v7);
  id v37 = sub_1000E86D4;
  uint64_t v38 = v5;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_100070394;
  id v36 = &unk_1008C6B38;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v6 addAnimatedUpdateHandler:v8];
  _Block_release(v8);
  [*(id *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v1];
  uint64_t v9 = self;
  id v10 = [v9 defaultCenter];
  uint64_t v11 = self;
  id v12 = [v11 mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = ObjectType;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  id v37 = sub_10043C8CC;
  uint64_t v38 = v14;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_1000711BC;
  id v36 = &unk_1008C6B88;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  id v17 = [v10 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v12 usingBlock:v16];
  _Block_release(v16);

  id v18 = [v9 defaultCenter];
  uint64_t v19 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
  id v20 = [v11 mainQueue];
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v37 = sub_10043C8D4;
  uint64_t v38 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_1000711BC;
  id v36 = &unk_1008C6BB0;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  id v23 = [v18 addObserverForName:v19 object:0 queue:v20 usingBlock:v22];
  _Block_release(v22);

  swift_beginAccess();
  sub_1000AFA94(&qword_10094C530);
  uint64_t v24 = v30;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000A132C(&qword_10095C538, &qword_10095C530);
  uint64_t v25 = v31;
  uint64_t v26 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v25);
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100752410;
  *(void *)(v27 + 56) = swift_getObjectType();
  *(void *)(v27 + 32) = v17;
  *(void *)(v27 + 88) = swift_getObjectType();
  *(void *)(v27 + 64) = v23;
  *(void *)(v27 + 120) = type metadata accessor for AnyCancellable();
  *(void *)(v27 + 96) = v26;
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_observers) = v27;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100075DA8();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_release();
}

id sub_100056EE0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR___NLTVConnectionManager_dependencies;
  type metadata accessor for Dependencies();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v6 = v2;
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = static Dependencies.standard(queue:)();

  *(void *)&v3[v5] = v8;
  swift_retain();
  sub_1000AFA94(&qword_100962160);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v16, (uint64_t)&v6[OBJC_IVAR___NLTVConnectionManager_participantClient]);
  swift_retain();
  sub_1000AFA94(&qword_100962168);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v16, (uint64_t)&v6[OBJC_IVAR___NLTVConnectionManager_browsingClient]);
  swift_retain();
  sub_1000AFA94(&qword_100962170);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v16, (uint64_t)&v6[OBJC_IVAR___NLTVConnectionManager_sessionClient]);
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v9 = *((void *)&v16 + 1);
  id v10 = &v6[OBJC_IVAR___NLTVConnectionManager_eventHub];
  *(void *)id v10 = v16;
  *((void *)v10 + 1) = v9;
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v6[OBJC_IVAR___NLTVConnectionManager_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  swift_unknownObjectWeakAssign();
  type metadata accessor for TVConnectionManager.State(0);
  swift_storeEnumTagMultiPayload();
  v6[OBJC_IVAR___NLTVConnectionManager_isDiscoveryAllowed] = 0;
  uint64_t v17 = sub_10007E2D8(0, &qword_100962178);
  id v18 = &protocol witness table for UNUserNotificationCenter;
  *(void *)&long long v16 = a2;
  type metadata accessor for GuestPairingNotificationCoordinator();
  swift_allocObject();
  id v11 = a2;
  *(void *)&v6[OBJC_IVAR___NLTVConnectionManager_guestPairingNotificationCoordinator] = GuestPairingNotificationCoordinator.init(userNotificationCenter:)();

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for TVConnectionManager(0);
  [super init];
  swift_getObjectType();
  type metadata accessor for RemoteParticipantDiscovered();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = v12;
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v16);
  swift_getObjectType();
  type metadata accessor for RemoteParticipantLost();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v16);
  swift_getObjectType();
  type metadata accessor for RemoteParticipantPasswordRequired();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v16);
  return v13;
}

Swift::Int sub_100057374()
{
  return Hasher._finalize()();
}

char *sub_1000573B0(void (*a1)(char *, uint64_t), uint64_t a2, void (*a3)(char *, uint64_t), void *a4, int a5)
{
  int v98 = a5;
  uint64_t v111 = a4;
  uint64_t v101 = a2;
  uint64_t v110 = sub_1000AFA94(&qword_100950758);
  uint64_t v8 = __chkstk_darwin(v110);
  uint64_t v97 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v96 = (char *)&v90 - v10;
  uint64_t v109 = type metadata accessor for DayIndex();
  uint64_t v114 = *(void *)(v109 - 8);
  uint64_t v11 = __chkstk_darwin(v109);
  uint64_t v115 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v108 = (char *)&v90 - v13;
  uint64_t v116 = sub_1000AFA94(&qword_100950728);
  uint64_t v14 = __chkstk_darwin(v116);
  uint64_t v95 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v107 = (char *)&v90 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v112 = (char *)&v90 - v19;
  __chkstk_darwin(v18);
  uint64_t v94 = (uint64_t)&v90 - v20;
  uint64_t v106 = (void *)type metadata accessor for Calendar.Identifier();
  uint64_t v104 = (char *)*(v106 - 1);
  __chkstk_darwin(v106);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for Calendar();
  uint64_t v120 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Date();
  uint64_t v103 = *(void (***)(char *, uint64_t))(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for GregorianDayRange();
  uint64_t v117 = *(void *)(v119 - 8);
  uint64_t v27 = __chkstk_darwin(v119);
  uint64_t v113 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v90 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v90 - v32;
  v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__isFetchingWorkouts] = 1;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__stackedChartSleepingSampleViewModelProviderHolder] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek] = _swiftEmptyArrayStorage;
  uint64_t v34 = &v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter];
  *(void *)uint64_t v34 = 0;
  *((_WORD *)v34 + 4) = 768;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__lastAnchor] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities] = _swiftEmptyDictionarySingleton;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_observer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__retryCountOfEffortRelationshipQuery] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__maxRepeatCountOfEffortRelationshipQueryBeforeDelaying] = 3;
  v5[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutEffortCacheIsPopulated] = 0;
  id v35 = v5;
  ObservationRegistrar.init()();
  *(void (**)(char *, uint64_t))((char *)v35 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_healthStore) = a1;
  *(void (**)(char *, uint64_t))((char *)v35
                                         + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_historyDataProvider) = a3;
  id v36 = v111;
  *(void (**)(char *, uint64_t))((char *)v35
                                         + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_activityDataProvider) = (void (*)(char *, uint64_t))v111;
  type metadata accessor for TrainingLoadViewModelProvider();
  uint64_t v102 = a1;
  uint64_t v100 = a3;
  id v99 = v36;
  static Date.now.getter();
  id v37 = v104;
  uint64_t v38 = v106;
  (*((void (**)(char *, void, void *))v104 + 13))(v22, enum case for Calendar.Identifier.gregorian(_:), v106);
  Calendar.init(identifier:)();
  (*((void (**)(char *, void *))v37 + 1))(v22, v38);
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)();
  NSString v39 = *(void **)(v120 + 8);
  uint64_t v104 = v24;
  v120 += 8;
  uint64_t v106 = v39;
  ((void (*)(char *, uint64_t))v39)(v24, v118);
  unsigned int v40 = (char *)v119;
  v103[1](v26, v105);
  uint64_t v41 = v117 + 16;
  NSString v42 = *(void (**)(char *, char *, char *))(v117 + 16);
  v42((char *)v35 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange, v33, v40);
  uint64_t v93 = v41;
  uint64_t v92 = (void (*)(uint64_t, char *, uint64_t))v42;
  v42(v31, v33, v40);
  id v43 = v102;
  uint64_t v105 = (uint64_t)v31;
  uint64_t v102 = v43;
  uint64_t v44 = TrainingLoadViewModelProvider.__allocating_init(dayRange:healthStore:)();
  uint64_t v103 = v35;
  *(void (**)(char *, uint64_t))((char *)v35
                                         + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider) = (void (*)(char *, uint64_t))v44;
  uint64_t v111 = (void *)v44;
  swift_retain();
  uint64_t v45 = v112;
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v46 = v116;
  uint64_t v47 = &v45[*(int *)(v116 + 36)];
  uint64_t v48 = (uint64_t)v45;
  id v49 = (void (*)(char *, uint64_t))(v114 + 16);
  id v50 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  uint64_t v52 = (uint64_t)v108;
  unsigned int v51 = (char *)v109;
  v50(v108, v47, v109);
  sub_10008DB18(v48, &qword_100950728);
  uint64_t v53 = (uint64_t)v107;
  uint64_t v112 = v33;
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v54 = v53 + *(int *)(v46 + 36);
  uint64_t v91 = v50;
  v50(v115, (char *)v54, (uint64_t)v51);
  sub_10008DB18(v53, &qword_100950728);
  sub_1000858A8((unint64_t *)&qword_100950740, (void (*)(uint64_t))&type metadata accessor for DayIndex);
  uint64_t v55 = v51;
  uint64_t v56 = v51;
  if (dispatch thunk of static Comparable.<= infix(_:_:)())
  {
    uint64_t v57 = v110;
    unint64_t v58 = v96;
    uint64_t v59 = &v96[*(int *)(v110 + 48)];
    uint64_t v60 = v114;
    uint64_t v61 = *(void (**)(char *, uint64_t, char *))(v114 + 32);
    uint64_t v62 = v52;
    uint64_t v63 = v56;
    v61(v96, v62, v56);
    uint64_t v64 = v59;
    uint64_t v107 = v59;
    v61(v59, (uint64_t)v115, v56);
    uint64_t v65 = v97;
    uint64_t v66 = &v97[*(int *)(v57 + 48)];
    uint64_t v67 = (void (*)(char *, char *, char *))v91;
    v91(v97, v58, (uint64_t)v63);
    v67(v66, v64, v63);
    uint64_t v68 = (uint64_t)v95;
    v61(v95, (uint64_t)v65, v63);
    uint64_t v69 = *(void (**)(char *, char *))(v60 + 8);
    v69(v66, v63);
    uint64_t v70 = &v65[*(int *)(v110 + 48)];
    v61(v65, (uint64_t)v58, v63);
    v61(v70, (uint64_t)v107, v63);
    v61((char *)(v68 + *(int *)(v116 + 36)), (uint64_t)v70, v63);
    v69(v65, v63);
    sub_1000AEEC8(v68, v94, &qword_100950728);
    GregorianDayRange.gregorianCalendar.getter();
    uint64_t v71 = v113;
    GregorianDayRange.init(dayIndexRange:gregorianCalendar:)();
    type metadata accessor for SleepingSampleViewModelProvider();
    v92(v105, v71, v119);
    id v49 = v102;
    uint64_t v72 = SleepingSampleViewModelProvider.__allocating_init(healthStore:dayRange:debugIdentifier:)();
    uint64_t v73 = v103;
    *(void (**)(char *, uint64_t))((char *)v103
                                           + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider) = (void (*)(char *, uint64_t))v72;
    swift_retain();

    dispatch thunk of TrainingLoadViewModelProvider.startQuery(isFaking:)();
    dispatch thunk of SleepingSampleViewModelProvider.startQuery()();
    uint64_t v74 = (objc_class *)type metadata accessor for BalanceDataProvider();
    v122.receiver = v73;
    v122.super_class = v74;
    uint64_t v75 = (char *)[v122 init];
    unint64_t v76 = *(char **)&v75[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_historyDataProvider];
    uint64_t v77 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = sub_1000E8C58;
    *(void *)(v52 + 24) = v77;
    uint64_t v33 = &v76[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
    swift_beginAccess();
    id v50 = *(void (**)(char *, char *, uint64_t))v33;
    uint64_t v55 = v75;
    unsigned int v40 = v76;
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v33 = v50;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  id v50 = (void (*)(char *, char *, uint64_t))sub_10001E94C(0, *((void *)v50 + 2) + 1, 1, v50);
  *(void *)uint64_t v33 = v50;
LABEL_3:
  unint64_t v80 = *((void *)v50 + 2);
  unint64_t v79 = *((void *)v50 + 3);
  if (v80 >= v79 >> 1)
  {
    id v50 = (void (*)(char *, char *, uint64_t))sub_10001E94C((void *)(v79 > 1), v80 + 1, 1, v50);
    *(void *)uint64_t v33 = v50;
  }
  *((void *)v50 + 2) = v80 + 1;
  uint64_t v81 = (void *)((char *)v50 + 16 * v80);
  v81[4] = sub_100020A64;
  v81[5] = v52;
  swift_endAccess();
  swift_release_n();

  sub_10001FBE0();
  id v82 = [self defaultCenter];
  id v83 = [self mainQueue];
  uint64_t v84 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000E8D14;
  aBlock[5] = v84;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000711BC;
  uint64_t aBlock[3] = &unk_1008BC518;
  uint64_t v85 = _Block_copy(aBlock);
  swift_release();
  id v86 = [v82 addObserverForName:@"ActivitySummaryCacheChangedNotification" object:0 queue:v83 usingBlock:v85];
  _Block_release(v85);

  swift_unknownObjectRelease();
  sub_100084218();

  swift_release();
  swift_release();
  ((void (*)(uint64_t, uint64_t))v106)(v101, v118);
  id v87 = *(void (**)(char *, uint64_t))(v117 + 8);
  uint64_t v88 = v119;
  v87(v113, v119);
  v87(v112, v88);
  return v55;
}

uint64_t sub_10005810C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100058A1C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_10005828C()
{
  int v1 = *(unsigned __int8 *)(v0 + 96);
  swift_release();
  if (v1 != 1)
  {
    static Log.default.getter();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v8, "[FitnessPlusCardDataProvider] Skipping activation - not subscribed", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 48);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated))
  {
    static Log.default.getter();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[FitnessPlusCardDataProvider] Skipping activation - already activated", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 56);
LABEL_9:
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_13;
  }
  static Log.default.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[FitnessPlusCardDataProvider] Activating", v14, 2u);
    swift_slowDealloc();
  }
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v19 = *(void **)(v0 + 16);
  uint64_t v18 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  *(unsigned char *)(v2 + v3) = 1;
  uint64_t v20 = type metadata accessor for TaskPriority();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v18, 1, 1, v20);
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = 0;
  void v22[3] = 0;
  v22[4] = v19;
  uint64_t v23 = v19;
  *(void *)&v23[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BA0, (uint64_t)v22);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  id v24[4] = v23;
  uint64_t v25 = v23;
  *(void *)&v25[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BB0, (uint64_t)v24);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = 0;
  v26[3] = 0;
  v26[4] = v25;
  uint64_t v27 = v25;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BC0, (uint64_t)v26);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v27;
  uint64_t v29 = v27;
  *(void *)&v29[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BD0, (uint64_t)v28);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = 0;
  _OWORD v30[3] = 0;
  v30[4] = v29;
  uint64_t v31 = v29;
  *(void *)&v31[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BE0, (uint64_t)v30);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = v31;
  uint64_t v33 = v31;
  *(void *)&v33[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask] = sub_10005889C(v18, (uint64_t)&unk_100966BF0, (uint64_t)v32);
  swift_release();
  v21(v18, 1, 1, v20);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v33;
  id v35 = v33;
  *(void *)&v35[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask] = sub_1000DF73C(v18, (uint64_t)&unk_100966C00, (uint64_t)v34);
  swift_release();
  sub_10002E16C();
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_10005889C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100058A1C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1000AFA94(&qword_100966B78);
  return swift_task_create();
}

uint64_t sub_100058A1C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100058A7C(uint64_t a1)
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v4 = v2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_10008F1F4(v6, v7, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v3, "%s starting Activity goal query", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v9 = [ObjCClassFromMetadata calorieGoal];
  if (!v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  uint64_t v11 = self;
  id v12 = [v11 queryDescriptorWithSampleType:v10];

  id v13 = [ObjCClassFromMetadata moveMinuteGoal];
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v14 = v13;
  id v15 = [v11 queryDescriptorWithSampleType:v13];

  id v16 = [ObjCClassFromMetadata exerciseGoal];
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  id v18 = [v11 queryDescriptorWithSampleType:v16];

  id v19 = [ObjCClassFromMetadata standGoal];
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = [v11 queryDescriptorWithSampleType:v19];

    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100751160;
    *(void *)(v22 + 32) = v12;
    *(void *)(v22 + 40) = v15;
    *(void *)(v22 + 48) = v18;
    *(void *)(v22 + 56) = v21;
    uint64_t aBlock = v22;
    specialized Array._endMutation()();
    uint64_t v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v24 = objc_allocWithZone((Class)HKAnchoredObjectQuery);
    sub_10007E2D8(0, &qword_100967248);
    id v34 = v12;
    id v33 = v15;
    id v32 = v18;
    id v25 = v21;
    swift_retain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned int v40 = sub_1000E7A68;
    uint64_t v41 = v23;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_100025F6C;
    NSString v39 = &unk_1008D4908;
    uint64_t v27 = _Block_copy(&aBlock);
    id v28 = [v24 initWithQueryDescriptors:isa anchor:0 limit:0 resultsHandler:v27];

    _Block_release(v27);
    swift_release();
    swift_release();
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unsigned int v40 = sub_1006691F8;
    uint64_t v41 = v29;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_100025F6C;
    NSString v39 = &unk_1008D4930;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    sub_10008A670((uint64_t)sub_1006691F8);
    swift_release();
    [v28 setUpdateHandler:v30];
    _Block_release(v30);
    swift_release_n();
    [*(id *)(a1 + OBJC_IVAR___CHOnboardingCoordinator_healthStore) executeQuery:v28];
    uint64_t v31 = *(void **)(a1 + OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery);
    *(void *)(a1 + OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery) = v28;

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_100058FA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100058FE0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 17) = HIBYTE(v6) & 1;
  }
  return result;
}

uint64_t sub_100058FE0(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094C4D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  __int16 v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10007E4EC(a1, v7);
  sub_10007E530();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v15 = 0;
    sub_100059218();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v12;
    uint64_t v9 = v13;
    char v10 = v14;
    char v15 = 1;
    sub_100091494(v12, v13, v14);
    sub_10005926C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
    sub_1000917F8(v7, v9, v10);
  }
  return v7;
}

unint64_t sub_100059218()
{
  unint64_t result = qword_10094C4E0;
  if (!qword_10094C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4E0);
  }
  return result;
}

unint64_t sub_10005926C()
{
  unint64_t result = qword_10094C4E8;
  if (!qword_10094C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4E8);
  }
  return result;
}

id sub_1000592C0()
{
  uint64_t v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"UNIT_TESTING"];

  return v1;
}

void sub_100059670()
{
  uint64_t v1 = v0;
  [*(id *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v0];
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_wheelchairCache) registerObserver:v0];
  if (qword_10094A690 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100997810;
  uint64_t v3 = self;
  id v4 = [v3 defaultCenter];
  uint64_t v5 = self;
  id v6 = [v5 mainQueue];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v56 = sub_1001FB95C;
  uint64_t v57 = v7;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v55 = sub_1000711BC;
  *((void *)&v55 + 1) = &unk_1008BAD00;
  os_log_type_t v8 = _Block_copy(&aBlock);
  swift_release();
  id v52 = [v4 addObserverForName:v2 object:0 queue:v6 usingBlock:v8];
  _Block_release(v8);

  if (qword_10094A6F8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100997898;
  id v10 = [v3 defaultCenter];
  id v11 = [v5 mainQueue];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v56 = sub_1000E647C;
  uint64_t v57 = v12;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v55 = sub_1000711BC;
  *((void *)&v55 + 1) = &unk_1008BAD28;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = [v10 addObserverForName:v9 object:0 queue:v11 usingBlock:v13];
  _Block_release(v13);

  if (qword_10094AEB8 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_100998540;
  id v16 = [v3 defaultCenter];
  id v17 = [v5 mainQueue];
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v56 = sub_1001FB984;
  uint64_t v57 = v18;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v55 = sub_1000711BC;
  *((void *)&v55 + 1) = &unk_1008BAD50;
  id v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v16 addObserverForName:v15 object:0 queue:v17 usingBlock:v19];
  _Block_release(v19);

  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100752410;
  *(void *)(v21 + 56) = swift_getObjectType();
  *(void *)(v21 + 32) = v52;
  *(void *)(v21 + 88) = swift_getObjectType();
  *(void *)(v21 + 64) = v14;
  *(void *)(v21 + 120) = swift_getObjectType();
  *(void *)(v21 + 96) = v20;
  *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_notificationCenterObservers) = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000DF004();
  uint64_t v22 = static OS_dispatch_queue.main.getter();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v56 = sub_1001FB9AC;
  uint64_t v57 = v23;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v55 = sub_10069BDE4;
  *((void *)&v55 + 1) = &unk_1008BAD78;
  id v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = (int *)(v1 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_forceUpdateNotifyToken);
  swift_beginAccess();
  notify_register_dispatch("com.apple.Fitness.ForceSummaryUserProfileUpdate", v25, v22, v24);
  swift_endAccess();
  _Block_release(v24);

  char v26 = sub_1000746A8();
  if (v27)
  {
    id v40 = [self standardUserDefaults];
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v40 objectForKey:v41];

    if (v42)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100074898((uint64_t)&aBlock);
      NSString v43 = String._bridgeToObjectiveC()();
      id v44 = [v40 valueForKey:v43];

      if (v44)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v53, 0, 32);
      }
      sub_100074830((uint64_t)v53, (uint64_t)&aBlock);
      if (*((void *)&v55 + 1))
      {
        uint64_t v45 = swift_dynamicCast();
        if (v45)
        {
          __chkstk_darwin(v45);
          uint64_t v47 = (uint64_t)&v46[4];
          uint64_t v48 = v46 + 7;
          os_unfair_lock_lock(v46 + 7);
          sub_1000E64A4(v47);
          os_unfair_lock_unlock(v48);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        goto LABEL_20;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v55 = 0u;
    }
    sub_100074898((uint64_t)&aBlock);
LABEL_20:
    id v49 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState);
    uint64_t v50 = (uint64_t)&v49[4];
    unsigned int v51 = v49 + 7;
    os_unfair_lock_lock(v49 + 7);
    sub_1001FB59C(v50);
    os_unfair_lock_unlock(v51);
    sub_100073E98();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    return;
  }
  char v28 = v26;
  os_log_type_t v29 = static os_log_type_t.default.getter();
  uint64_t v30 = (void *)HKLogActivity;
  os_log_type_t v31 = v29;
  BOOL v32 = os_log_type_enabled(HKLogActivity, v29);
  if (v32)
  {
    id v33 = v30;
    id v34 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)id v34 = 136315138;
    uint64_t v35 = sub_100083B90(v28);
    *(void *)&v53[0] = sub_10008F1F4(v35, v36, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v31, "[SummaryUserProfileProvider] using forced profile %s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  __chkstk_darwin(v32);
  uint64_t v38 = (uint64_t)&v37[4];
  NSString v39 = v37 + 7;
  os_unfair_lock_lock(v37 + 7);
  sub_1000E64A4(v38);
  os_unfair_lock_unlock(v39);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_100059FC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100059FF4(*(void **)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100059FF4(void *a1)
{
  id v2 = [a1 section];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  char v6 = sub_10005A234(v3, v5);
  uint64_t v7 = (void *)0xE300000000000000;
  unint64_t v8 = 7105633;
  switch(v6)
  {
    case 1:
      uint64_t v7 = (void *)0xE700000000000000;
      unint64_t v8 = 0x7449726F466F67;
      break;
    case 2:
      uint64_t v7 = (void *)0xE800000000000000;
      unint64_t v8 = 0x7974697669746361;
      break;
    case 3:
      uint64_t v7 = (void *)0xE800000000000000;
      unint64_t v8 = 0x7374756F6B726F77;
      break;
    case 4:
      uint64_t v7 = (void *)0xEB0000000073756CLL;
      unint64_t v8 = 0x507373656E746966;
      break;
    case 5:
      uint64_t v7 = (void *)0xEE006E6F69746964;
      unint64_t v8 = 0x45646574696D696CLL;
      break;
    case 6:
      uint64_t v7 = (void *)0x80000001007C9E80;
      unint64_t v8 = 0xD000000000000010;
      break;
    case 7:
      uint64_t v7 = (void *)0xEC000000736E6F69;
      unint64_t v8 = 0x74697465706D6F63;
      break;
    case 8:
      id v9 = [a1 section];
      unint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v10;

      break;
    default:
      break;
  }
  v11._countAndFlagsBits = v8;
  v11._object = v7;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 47;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  id v13 = [a1 template];
  id v14 = [v13 uniqueName];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = v16;
  }
  else
  {
    id v17 = (void *)0xE700000000000000;
    uint64_t v15 = 0x4E574F4E4B4E55;
  }
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10005A234(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 5000257 && a2 == 0xE300000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7449726F466F67 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x495F524F465F4F47 && a2 == 0xE900000000000054
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x5954495649544341 && a2 == 0xE800000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7374756F6B726F77 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x5354554F4B524F57 && a2 == 0xE800000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x507373656E746966 && a2 == 0xEB0000000073756CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x5F5353454E544946 && a2 == 0xEC00000053554C50
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x45646574696D696CLL && a2 == 0xEE006E6F69746964 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x5F444554494D494CLL && a2 == 0xEF4E4F4954494445
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007C9E80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0xD000000000000012 && a2 == 0x80000001007D26C0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74697465706D6F63 && a2 == 0xEC000000736E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || a1 == 0x54495445504D4F43 && a2 == 0xEC000000534E4F49)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

double sub_10005A894@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10005A8DC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10005A8DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000AFA94(&qword_10096A828);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_10007E7C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  }
  char v25 = 0;
  sub_10005AB3C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v9 = v20;
  uint64_t v10 = v21;
  int v19 = v23;
  LOBYTE(v20) = 1;
  int v24 = v22;
  sub_100091494(v9, v21, v22);
  uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v13 = v12;
  id v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v11;
  v14(v8, v5);
  swift_bridgeObjectRetain();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)a1);
  char v15 = v24;
  sub_1000917F8(v9, v10, v24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 17) = v19;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v13;
  return result;
}

unint64_t sub_10005AB3C()
{
  unint64_t result = qword_10094C550;
  if (!qword_10094C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C550);
  }
  return result;
}

uint64_t sub_10005AB90()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  id v42 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  NSString v43 = v0;
  while (1)
  {
    if (v6)
    {
      uint64_t v46 = (v6 - 1) & v6;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v14 = *(void *)(v40 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v41) {
        break;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v41) {
          break;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v41) {
            break;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v41) {
              break;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v15);
            if (!v14)
            {
              uint64_t v16 = v8 + 6;
              if (v8 + 6 >= v41) {
                break;
              }
              unint64_t v14 = *(void *)(v40 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_46;
                  }
                  if (v15 >= v41) {
                    goto LABEL_37;
                  }
                  unint64_t v14 = *(void *)(v40 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v15 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v46 = (v14 - 1) & v14;
    int64_t v47 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    uint64_t v19 = v0[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16))(v17, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v12, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v17, v19);
    uint64_t v20 = MusicGenre.identifier.getter();
    uint64_t v22 = v21;
    uint64_t v23 = MusicGenre.name.getter();
    uint64_t v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1000DA1C0(v20, v22);
    uint64_t v29 = v3[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v3[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_1000DA1C0(v20, v22);
      if ((v31 & 1) != (v32 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_4:
        uint64_t v9 = (uint64_t *)(v3[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v9 = v23;
        v9[1] = v25;
        goto LABEL_5;
      }
    }
    v3[(v28 >> 6) + 8] |= 1 << v28;
    id v33 = (uint64_t *)(v3[6] + 16 * v28);
    *id v33 = v20;
    v33[1] = v22;
    id v34 = (uint64_t *)(v3[7] + 16 * v28);
    *id v34 = v23;
    v34[1] = v25;
    uint64_t v35 = v3[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_44;
    }
    v3[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v0 = v43;
    uint64_t v10 = v43[7];
    uint64_t v11 = v43[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v42)(v10, v11);
    unint64_t v6 = v46;
    int64_t v8 = v47;
  }
LABEL_37:
  uint64_t v38 = (void *)v0[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_10005AFD0()
{
  return sub_10005AFF0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_10005AFF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics;
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics);
  swift_bridgeObjectRetain();
  int64_t v8 = sub_10005B0D8(a2);
  uint64_t v9 = sub_100076278((uint64_t)v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 16) <= *(void *)(v9 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_10005B9D8(v7);
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t)sub_10005B3B0(v7, v9);
    swift_bridgeObjectRelease();
  }
  *a3 = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6) = v9;
  return swift_bridgeObjectRelease();
}

void *sub_10005B0D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    if (!*v2)
    {
      char v4 = *(v2 - 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_10005B3A4(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        uint64_t v3 = sub_10005B3A4((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      *((unsigned char *)v3 + v6 + 32) = v4;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_10005B1C4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000AFA94(a5);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      void v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      int64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10005B2BC(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_10005B2BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10005B3A4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10005B1C4(a1, a2, a3, a4, &qword_10094E718);
}

void *sub_10005B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v32 = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_35;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_35;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_1000D9B04();
                    return (void *)v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_35;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_37:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v13);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v18);
        Swift::Int v19 = Hasher._finalize()();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(unsigned __int8 *)(v22 + v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v22 + v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32;
    v33[3] = v4;
    v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      char v27 = (char *)&v31 - v26;
      memcpy((char *)&v31 - v26, (const void *)(v2 + 56), v24);
      Swift::Int v28 = sub_10005B760((Swift::Int)v27, v23, v2, v21, v33);
      swift_release();
      sub_1000D9B04();
    }
    else
    {
      uint64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      Swift::Int v28 = sub_10005B760((Swift::Int)v29, v23, v2, v21, v33);
      swift_release();
      sub_1000D9B04();
      swift_slowDealloc();
    }
    return (void *)v28;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

Swift::Int sub_10005B760(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    int64_t v15 = a5[3];
    unint64_t v16 = a5[4];
    if (!v16) {
      break;
    }
    uint64_t v17 = (v16 - 1) & v16;
    unint64_t v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    Swift::UInt v25 = *(unsigned __int8 *)(*(void *)(*a5 + 48) + v18);
    a5[3] = v15;
    a5[4] = v17;
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v25);
    uint64_t result = Hasher._finalize()();
    uint64_t v26 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v11 = v27 >> 6;
    uint64_t v12 = 1 << v27;
    if (((1 << v27) & *(void *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v28 = *(void *)(a3 + 48);
      if (*(unsigned __int8 *)(v28 + v27) == v25)
      {
LABEL_3:
        uint64_t v13 = v11;
        unint64_t v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1)) {
            goto LABEL_36;
          }
          if (!v9) {
            return (Swift::Int)&_swiftEmptySetSingleton;
          }
        }
      }
      else
      {
        for (unint64_t i = v27 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & ~v26;
          if (((*(void *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v28 + v30) == v25)
          {
            uint64_t v11 = v30 >> 6;
            uint64_t v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    int64_t v20 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v21 = a5[3];
    if (v19 >= v20) {
      goto LABEL_33;
    }
    uint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(v22 + 8 * v19);
    if (v23) {
      goto LABEL_15;
    }
    int64_t v24 = v15 + 2;
    int64_t v21 = v15 + 1;
    if (v15 + 2 >= v20) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v22 + 8 * v24);
    if (!v23)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 3 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        int64_t v19 = v15 + 3;
        goto LABEL_15;
      }
      int64_t v24 = v15 + 4;
      int64_t v21 = v15 + 3;
      if (v15 + 4 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * v24);
      if (!v23)
      {
        int64_t v19 = v15 + 5;
        int64_t v21 = v15 + 4;
        if (v15 + 5 >= v20) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v22 + 8 * v19);
        if (!v23)
        {
          int64_t v21 = v20 - 1;
          int64_t v31 = v15 + 6;
          while (v20 != v31)
          {
            unint64_t v23 = *(void *)(v22 + 8 * v31++);
            if (v23)
            {
              int64_t v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain();
          return sub_1005225C4(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    int64_t v19 = v24;
LABEL_15:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    int64_t v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10005B9D8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_100195E34(*(unsigned char *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

unint64_t sub_10005BB4C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    int64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  int64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10005C2B0(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005BC7C(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10005BD10(a1, v2);
}

unint64_t sub_10005BD10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10005BE88()
{
  uint64_t v1 = type metadata accessor for DataLinkCommand();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (qword_10094A758 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_100997918;
  unint64_t v23 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v23(v4, enum case for DataLinkCommand.resume(_:), v1);
  sub_10005C3D0(v5, (uint64_t)v4, v24);
  uint64_t v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  v6(v4, v1);
  uint64_t v7 = (void **)(v0 + OBJC_IVAR___WODataLinkMonitor_observers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_10005C2C0(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_10005C2C0((void *)(v10 > 1), v11 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  v8[2] = v11 + 1;
  sub_10005C2B0(v24, &v8[4 * v11 + 4]);
  swift_endAccess();
  if (qword_10094A768 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_100997938;
  v23(v4, enum case for DataLinkCommand.pause(_:), v1);
  sub_10005C3D0(v12, (uint64_t)v4, v24);
  v6(v4, v1);
  swift_beginAccess();
  uint64_t v13 = *v7;
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v13;
  if ((v14 & 1) == 0)
  {
    uint64_t v13 = sub_10005C2C0(0, v13[2] + 1, 1, v13);
    *uint64_t v7 = v13;
  }
  unint64_t v16 = v13[2];
  unint64_t v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    uint64_t v13 = sub_10005C2C0((void *)(v15 > 1), v16 + 1, 1, v13);
    *uint64_t v7 = v13;
  }
  v13[2] = v16 + 1;
  sub_10005C2B0(v24, &v13[4 * v16 + 4]);
  swift_endAccess();
  if (qword_10094A778 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_100997958;
  v23(v4, enum case for DataLinkCommand.markSegment(_:), v1);
  sub_10005C3D0(v17, (uint64_t)v4, v24);
  v6(v4, v1);
  swift_beginAccess();
  char v18 = *v7;
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v18;
  if ((v19 & 1) == 0)
  {
    char v18 = sub_10005C2C0(0, v18[2] + 1, 1, v18);
    *uint64_t v7 = v18;
  }
  unint64_t v21 = v18[2];
  unint64_t v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    char v18 = sub_10005C2C0((void *)(v20 > 1), v21 + 1, 1, v18);
    *uint64_t v7 = v18;
  }
  v18[2] = v21 + 1;
  sub_10005C2B0(v24, &v18[4 * v21 + 4]);
  return swift_endAccess();
}

_OWORD *sub_10005C2B0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_10005C2C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94((uint64_t *)&unk_1009556C0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000DEBB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005C3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DataLinkCommand();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [self defaultCenter];
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10044676C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000711BC;
  uint64_t aBlock[3] = &unk_1008C7170;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  id v14 = [v9 addObserverForName:a1 object:0 queue:0 usingBlock:v13];
  _Block_release(v13);

  uint64_t result = swift_getObjectType();
  a3[3] = result;
  *a3 = v14;
  return result;
}

uint64_t sub_10005C5FC()
{
  return sub_10005C624(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_10005C624(uint64_t a1, uint64_t a2, unsigned __int8 a3, Swift::UInt a4, char a5)
{
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(a2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1000C9334(a3, a4, a5 & 1), (v16 & 1) != 0))
  {
    unint64_t v17 = v15;
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v19 = type metadata accessor for MetricDetailViewModel();
    uint64_t v20 = *(void *)(v19 - 8);
    sub_1000A3BF0(v18 + *(void *)(v20 + 72) * v17, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  else
  {
    uint64_t v21 = type metadata accessor for MetricDetailViewModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
  }
  return sub_10005C7D8((uint64_t)v12, a1);
}

uint64_t sub_10005C7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10005C840(void *a1, void *a2)
{
  id v68 = a1;
  uint64_t v69 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = (void *)sub_1000AFA94(&qword_1009687C8);
  uint64_t v5 = *(v67 - 1);
  __chkstk_darwin(v67);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009687D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive] = 0;
  v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists] = 0;
  v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] = 0;
  v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountFetchInProgress] = 2;
  uint64_t v12 = &v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastPhoneCloudKitAccountFetchTimestamp];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastWatchCloudKitAccountFetchTimestamp], 1, 1, v13);
  v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_activitySharingCloudKitAccountStatusChangedToken] = -1;
  *(_DWORD *)&v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_activitySharingGatewayStatusChangedToken] = -1;
  unint64_t v15 = &v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator__activitySharingIsSetup];
  char v16 = v2;
  LOBYTE(aBlock) = sub_10002DBD4() & 1;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v11, v8);
  unint64_t v17 = &v16[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator__setupPhase];
  long long aBlock = 0;
  type metadata accessor for CHFriendsSetupPhase(0);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, void *))(v5 + 32))(v17, v7, v67);
  id v18 = v68;
  uint64_t v19 = v69;
  *(void *)&v16[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendManager] = v68;
  *(void *)&v16[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendListSectionManager] = v19;
  uint64_t v20 = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v21 = v18;
  id v68 = v19;
  uint64_t v69 = (void *)v20;
  uint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  id v23 = [objc_allocWithZone((Class)NSSManager) initWithQueue:v22];

  if (v23)
  {
    uint64_t v67 = v21;
    *(void *)&v16[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_nanoSystemSettingsManager] = v23;

    int64_t v24 = (objc_class *)type metadata accessor for FriendsSetupCoordinator();
    v76.receiver = v16;
    v76.super_class = v24;
    id v25 = [super init];
    uint64_t v26 = self;
    unint64_t v27 = v25;
    id v28 = [v26 standardUserDefaults];
    NSString v29 = String._bridgeToObjectiveC()();
    unsigned __int8 v30 = [v28 BOOLForKey:v29];

    uint64_t v31 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive;
    v27[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive] = v30;
    id v32 = [v26 standardUserDefaults];
    NSString v33 = String._bridgeToObjectiveC()();
    LOBYTE(v29) = [v32 BOOLForKey:v33];

    uint64_t v34 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists;
    v27[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists] = (_BYTE)v29;
    char v35 = sub_10002CB9C();
    uint64_t v36 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist;
    v27[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] = v35 & 1;
    os_log_type_t v37 = static os_log_type_t.default.getter();
    uint64_t v38 = (void *)HKLogActivity;
    os_log_type_t v39 = v37;
    if (os_log_type_enabled(HKLogActivity, v37))
    {
      uint64_t v40 = v27;
      int64_t v41 = v38;
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 67109632;
      LODWORD(aBlock) = v27[v31];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 8) = 1024;
      LODWORD(aBlock) = v27[v34];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 14) = 1024;
      LODWORD(aBlock) = v27[v36];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v41, v39, "Initializing account status from cache: [phone=%{BOOL}d, [watch=%{BOOL}d, [watch(assumed)=%{BOOL}d", (uint8_t *)v42, 0x14u);
      swift_slowDealloc();
    }
    v27[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion] = FIDeviceMeetsMinimumOSVersionDaytona();
    uint64_t v43 = type metadata accessor for TaskPriority();
    uint64_t v44 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v66, 1, 1, v43);
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = 0;
    v45[3] = 0;
    id v46 = v68;
    v45[4] = v27;
    v45[5] = v46;
    id v68 = v46;
    int64_t v47 = v27;
    sub_1000713D0(v44, (uint64_t)&unk_1009687E0, (uint64_t)v45);
    swift_release();
    uint64_t v48 = (const char *)kASCloudKitAccountStatusChangedNotificationKey;
    id v49 = static OS_dispatch_queue.main.getter();
    uint64_t v50 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v74 = sub_10069EFAC;
    uint64_t v75 = v50;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_10069BDE4;
    uint64_t v73 = &unk_1008D5738;
    unsigned int v51 = _Block_copy(&aBlock);
    swift_release();
    id v52 = (int *)&v47[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_activitySharingCloudKitAccountStatusChangedToken];
    swift_beginAccess();
    notify_register_dispatch(v48, v52, v49, v51);
    swift_endAccess();
    _Block_release(v51);

    static os_log_type_t.default.getter();
    id v53 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v54 = (const char *)kASGatewayStatusChangedNotificationKey;
    long long v55 = static OS_dispatch_queue.main.getter();
    uint64_t v56 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v74 = sub_10069EFB4;
    uint64_t v75 = v56;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_10069BDE4;
    uint64_t v73 = &unk_1008D5760;
    uint64_t v57 = _Block_copy(&aBlock);
    swift_release();
    unint64_t v58 = (int *)&v47[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_activitySharingGatewayStatusChangedToken];
    swift_beginAccess();
    notify_register_dispatch(v54, v58, v55, v57);
    swift_endAccess();
    _Block_release(v57);

    static os_log_type_t.default.getter();
    id v59 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    static os_log_type_t.default.getter();
    id v60 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v61 = *(void **)&v47[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendManager];
    uint64_t v62 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v74 = sub_1000E7078;
    uint64_t v75 = v62;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_100010050;
    uint64_t v73 = &unk_1008D5788;
    uint64_t v63 = _Block_copy(&aBlock);
    swift_release();
    [v61 cloudKitAccountStatusWithCompletion:v63];
    _Block_release(v63);
    sub_10002142C();
    id v64 = [self defaultCenter];
    uint64_t v65 = v47;
    [v64 addObserver:v65 selector:"applicationDidBecomeActive" name:UIApplicationDidBecomeActiveNotification object:0];
  }
  else
  {
    __break(1u);
  }
}

char *sub_10005D250(void *a1)
{
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_allHistoryItems] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_stackHistoryItems] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_historyFilterValues] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_historyItemIDsPendingDeletion] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_allMindfulnessSessions] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR___CHHistoryDataProvider_hasInitialWorkouts] = 0;
  v1[OBJC_IVAR___CHHistoryDataProvider_hasInitialMindfulnessSessions] = 0;
  v1[OBJC_IVAR___CHHistoryDataProvider_shouldForceReload] = 0;
  *(void *)&v1[OBJC_IVAR___CHHistoryDataProvider_queue] = 0;
  type metadata accessor for Dependencies();
  uint64_t v48 = (void *)type metadata accessor for DefaultWheelchairStatus();
  id v49 = &protocol witness table for DefaultWheelchairStatus;
  sub_1000B1710((uint64_t *)&aBlock);
  uint64_t v3 = v1;
  DefaultWheelchairStatus.init()();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v4 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = static Dependencies.browsing(wheelchairStatus:queue:)();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  uint64_t v6 = v46;
  uint64_t v7 = (void ***)&v3[OBJC_IVAR___CHHistoryDataProvider_eventHub];
  *uint64_t v7 = aBlock;
  v7[1] = (void **)v6;
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v3[OBJC_IVAR___CHHistoryDataProvider_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  *(void *)&v3[OBJC_IVAR___CHHistoryDataProvider_healthStore] = a1;
  id v8 = objc_allocWithZone((Class)CHWorkoutDataProvider);
  id v9 = a1;
  uint64_t v10 = v8;
  id v11 = v9;
  id v12 = [v10 initWithHealthStore:];
  *(void *)&v3[OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider] = v12;
  uint64_t v44 = v11;
  id v13 = [objc_allocWithZone((Class)FIMindfulnessSessionDataProvider) initWithHealthStore:v11];
  *(void *)&v3[OBJC_IVAR___CHHistoryDataProvider_mindfulnessSessionDataProvider] = v13;
  id v14 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v11];
  unint64_t v15 = (char *)objc_allocWithZone((Class)type metadata accessor for SeymourCatalogItemDataProvider());
  swift_retain();
  id v43 = v14;
  *(void *)&v3[OBJC_IVAR___CHHistoryDataProvider_seymourCatalogItemDataProvider] = sub_10006C5DC(v5, v43, v15);

  char v16 = (objc_class *)type metadata accessor for HistoryDataProvider();
  v51.receiver = v3;
  v51.super_class = v16;
  unint64_t v17 = (char *)[super init];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = (id)HKCreateSerialDispatchQueue();

  uint64_t v20 = *(void **)&v17[OBJC_IVAR___CHHistoryDataProvider_queue];
  *(void *)&v17[OBJC_IVAR___CHHistoryDataProvider_queue] = v19;

  swift_getObjectType();
  type metadata accessor for PlaylistsUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
  swift_release();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider;
  id v23 = *(void **)&v17[OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider];
  id v49 = sub_1000E87B4;
  uint64_t v50 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  int64_t v47 = sub_100070394;
  uint64_t v48 = &unk_1008CB430;
  int64_t v24 = _Block_copy(&aBlock);
  id v25 = v23;
  swift_retain();
  swift_release();
  [v25 addUpdateHandler:v24];
  _Block_release(v24);

  uint64_t v26 = *(void **)&v17[v22];
  id v49 = sub_1000E87B4;
  uint64_t v50 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  int64_t v47 = sub_100070394;
  uint64_t v48 = &unk_1008CB458;
  unint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  id v28 = v26;
  swift_release();
  [v28 addAnimatedUpdateHandler:v27];
  _Block_release(v27);

  NSString v29 = self;
  id v30 = [v29 defaultCenter];
  uint64_t v31 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
  id v32 = self;
  id v33 = [v32 mainQueue];
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v49 = sub_1000E87D4;
  uint64_t v50 = v34;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  int64_t v47 = sub_1000711BC;
  uint64_t v48 = &unk_1008CB480;
  char v35 = _Block_copy(&aBlock);
  swift_release();
  id v36 = [v30 addObserverForName:v31 object:0 queue:v33 usingBlock:v35];
  _Block_release(v35);
  swift_unknownObjectRelease();

  id v37 = [v29 defaultCenter];
  id v38 = [v32 mainQueue];
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v49 = sub_1000E87BC;
  uint64_t v50 = v39;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  int64_t v47 = sub_1000711BC;
  uint64_t v48 = &unk_1008CB4A8;
  uint64_t v40 = _Block_copy(&aBlock);
  swift_release();
  id v41 = [v37 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v38 usingBlock:v40];

  _Block_release(v40);
  swift_release();

  swift_release();
  swift_unknownObjectRelease();

  return v17;
}

double sub_10005D9B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_10094F3E8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10074E640;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  Color.init(_:red:green:blue:opacity:)();
  *(void *)(v6 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v6 + 40) = v7;
  id v8 = sub_10005DB50();
  Color.init(uiColor:)();
  *(void *)(v6 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v6 + 56) = v9;
  Gradient.init(stops:)();
  static UnitPoint.topTrailing.getter();
  static UnitPoint.bottomLeading.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v13;
  long long v11 = v14;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v15;
  return result;
}

id sub_10005DB50()
{
  return +[UIColor secondarySystemGroupedBackgroundColor];
}

uint64_t sub_10005DB5C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_10005DC50@<D0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  id v125 = a8;
  uint64_t v109 = a9;
  id v128 = a17;
  id v123 = a16;
  id v122 = a15;
  id v121 = a14;
  id v124 = a13;
  id v129 = a12;
  id v120 = a11;
  id v114 = a10;
  uint64_t v24 = sub_1000AFA94(&qword_10094C020);
  uint64_t v118 = *(void *)(v24 - 8);
  uint64_t v119 = v24;
  __chkstk_darwin(v24);
  uint64_t v117 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrollToTopCoordinator();
  uint64_t v127 = swift_allocObject();
  uint64_t v26 = v127 + OBJC_IVAR____TtC10FitnessApp22ScrollToTopCoordinator_scrollViewProxy;
  uint64_t v27 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  type metadata accessor for FriendsSetupCoordinator();
  sub_10005E5B0(&qword_10094BF50, (void (*)(uint64_t))type metadata accessor for FriendsSetupCoordinator);
  *((void *)&v116 + 1) = a1;
  id v126 = a2;
  *(void *)&long long v116 = a3;
  id v28 = a4;
  id v115 = a5;
  id v113 = a6;
  id v29 = a7;
  id v30 = v125;
  id v108 = v114;
  id v125 = (id)ObservedObject.init(wrappedValue:)();
  id v32 = v31;
  type metadata accessor for ActivitySharingHighlightDataProvider();
  swift_allocObject();
  id v33 = v129;
  id v34 = v30;
  id v35 = v33;
  id v129 = v35;
  id v107 = v32;
  id v36 = v120;
  id v124 = v124;
  *((void *)&v112 + 1) = v121;
  *(void *)&long long v112 = v122;
  id v111 = v123;
  id v128 = v128;
  uint64_t v106 = sub_1000550B0(v34, v35);
  type metadata accessor for ActivitySharingFriendListDataProvider();
  swift_allocObject();
  id v37 = v28;
  id v123 = v37;
  id v38 = v29;
  id v39 = v34;
  id v40 = v36;
  id v41 = v128;
  id v128 = v41;
  swift_retain();
  id v100 = v38;
  id v102 = v40;
  sub_1000545E4(v37, v38, v39, v40, v41);
  sub_10005E5B0((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  uint64_t v42 = (void *)ObservedObject.init(wrappedValue:)();
  id v121 = v43;
  id v122 = v42;
  type metadata accessor for ReachableContactsDataSource();
  swift_allocObject();
  id v44 = v39;
  swift_retain();
  id v101 = v44;
  uint64_t v105 = sub_1000466C8(v44);
  type metadata accessor for ActivitySharingNavigationCoordinator();
  uint64_t v45 = swift_allocObject();
  swift_retain_n();
  swift_defaultActor_initialize();
  sub_10005E5B0(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  *(_OWORD *)(v45 + 112) = 0u;
  *(_OWORD *)(v45 + 128) = 0u;
  *(void *)(v45 + 144) = 0;
  id v120 = (id)ObservedObject.init(wrappedValue:)();
  int64_t v47 = v46;
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  uint64_t v48 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  uint64_t v49 = v48 + OBJC_IVAR____TtC10FitnessApp43ActivitySharingFriendDetailAlertCoordinator__presentedAlertType;
  long long v131 = 0u;
  long long v132 = 0u;
  LOBYTE(v133) = -1;
  sub_1000AFA94(&qword_10094C028);
  uint64_t v50 = v117;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v49, v50, v119);
  sub_10005E5B0((unint64_t *)&qword_10095C150, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailAlertCoordinator);
  uint64_t v119 = ObservedObject.init(wrappedValue:)();
  uint64_t v52 = v51;
  id v53 = (void *)swift_allocObject();
  long long v54 = v116;
  v53[2] = *((void *)&v116 + 1);
  _OWORD v53[3] = v54;
  uint64_t v118 = v52;
  v53[4] = v52;
  id v55 = v115;
  id v56 = v113;
  v53[5] = v115;
  v53[6] = v56;
  unsigned char v53[7] = v38;
  v53[8] = v44;
  id v57 = v129;
  v53[9] = v40;
  v53[10] = v57;
  long long v58 = v112;
  v53[11] = v47;
  v53[12] = *((void *)&v58 + 1);
  id v59 = v111;
  v53[13] = v58;
  v53[14] = v59;
  v53[15] = v128;
  uint64_t v60 = v47[14];
  uint64_t v103 = v47[15];
  uint64_t v104 = v60;
  uint64_t v110 = sub_100187C70;
  v47[14] = sub_100187C70;
  v47[15] = v53;
  swift_retain_n();
  *((void *)&v116 + 1) = *((id *)&v54 + 1);
  *(void *)&long long v116 = (id)v54;
  uint64_t v117 = (char *)v55;
  id v61 = v56;
  id v115 = v100;
  id v62 = v101;
  id v113 = v129;
  id v63 = v102;
  id v129 = *((id *)&v58 + 1);
  id v64 = (id)v58;
  id v101 = v64;
  id v65 = v59;
  id v102 = v65;
  id v128 = v128;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10005E5F8(v104);
  uint64_t v66 = (void *)swift_allocObject();
  v66[2] = v62;
  v66[3] = v63;
  uint64_t v67 = v62;
  long long v68 = v116;
  v66[4] = v116;
  v66[5] = v64;
  id v69 = v115;
  v66[6] = v65;
  v66[7] = v69;
  id v70 = v113;
  v66[8] = *((void *)&v68 + 1);
  v66[9] = v70;
  uint64_t v71 = v110;
  v66[10] = v61;
  v66[11] = v71;
  v66[12] = v53;
  id v114 = v47;
  uint64_t v72 = v47[16];
  uint64_t v103 = v47[17];
  uint64_t v104 = v72;
  v47[16] = sub_100187D3C;
  v47[17] = v66;
  id v73 = *((id *)&v68 + 1);
  *(void *)&long long v112 = v73;
  id v74 = (id)v68;
  *((void *)&v112 + 1) = v74;
  id v75 = v61;
  id v100 = v75;
  id v111 = v69;
  uint64_t v110 = v67;
  id v76 = v70;
  id v113 = v76;
  id v77 = v63;
  id v115 = v77;
  id v78 = v101;
  *(void *)&long long v116 = v78;
  id v79 = v102;
  *((void *)&v116 + 1) = v79;
  swift_retain();
  sub_10005E5F8(v104);
  swift_release();

  v130[0] = v73;
  v130[1] = v74;
  id v80 = v126;
  id v81 = v123;
  v130[2] = v126;
  v130[3] = v123;
  id v82 = v117;
  v130[4] = v117;
  v130[5] = v75;
  id v83 = v111;
  v130[6] = v111;
  v130[7] = v110;
  v130[8] = v77;
  uint64_t v84 = v105;
  v130[9] = v105;
  v130[10] = v76;
  id v85 = v124;
  v130[11] = v105;
  v130[12] = v124;
  v130[13] = v129;
  v130[14] = v78;
  uint64_t v86 = v127;
  v130[15] = v79;
  v130[16] = v128;
  v130[17] = v120;
  v130[18] = v114;
  uint64_t v87 = v106;
  uint64_t v88 = v107;
  v130[19] = v106;
  v130[20] = v122;
  v130[21] = v121;
  v130[22] = v119;
  v130[23] = v118;
  v130[24] = v125;
  v130[25] = v107;
  v130[26] = v127;
  sub_10004B370((uint64_t)v130);
  long long v131 = v112;
  *(void *)&long long v132 = v80;
  *((void *)&v132 + 1) = v81;
  *(void *)&long long v133 = v82;
  id v89 = v100;
  *((void *)&v133 + 1) = v100;
  *(void *)&long long v134 = v83;
  uint64_t v90 = v110;
  *((void *)&v134 + 1) = v110;
  *(void *)&long long v135 = v115;
  *((void *)&v135 + 1) = v84;
  *(void *)&long long v136 = v113;
  *((void *)&v136 + 1) = v84;
  *(void *)&long long v137 = v85;
  *((void *)&v137 + 1) = v129;
  long long v138 = v116;
  *(void *)&long long v139 = v128;
  *((void *)&v139 + 1) = v120;
  *(void *)&long long v140 = v114;
  *((void *)&v140 + 1) = v87;
  *(void *)&long long v141 = v122;
  *((void *)&v141 + 1) = v121;
  *(void *)&long long v142 = v119;
  *((void *)&v142 + 1) = v118;
  *(void *)&long long v143 = v125;
  *((void *)&v143 + 1) = v88;
  uint64_t v144 = v86;
  sub_10006296C((uint64_t)&v131);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  long long v91 = v142;
  uint64_t v92 = v109;
  *(_OWORD *)(v109 + 160) = v141;
  *(_OWORD *)(v92 + 176) = v91;
  *(_OWORD *)(v92 + 192) = v143;
  *(void *)(v92 + 208) = v144;
  long long v93 = v138;
  *(_OWORD *)(v92 + 96) = v137;
  *(_OWORD *)(v92 + 112) = v93;
  long long v94 = v140;
  *(_OWORD *)(v92 + 128) = v139;
  *(_OWORD *)(v92 + 144) = v94;
  long long v95 = v134;
  *(_OWORD *)(v92 + 32) = v133;
  *(_OWORD *)(v92 + 48) = v95;
  long long v96 = v136;
  *(_OWORD *)(v92 + 64) = v135;
  *(_OWORD *)(v92 + 80) = v96;
  double result = *(double *)&v131;
  long long v98 = v132;
  *(_OWORD *)uint64_t v92 = v131;
  *(_OWORD *)(v92 + 16) = v98;
  return result;
}

uint64_t sub_10005E5B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005E5F8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void destroy for ActivityRingsViewRepresentable(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    swift_release();
  }
}

uint64_t sub_10005E658()
{
  uint64_t v90 = type metadata accessor for DispatchWorkItemFlags();
  id v89 = *(void **)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v87 = (uint64_t)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DispatchQoS();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  id v85 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for DispatchTime();
  uint64_t v84 = *(void *)(v91 - 8);
  uint64_t v3 = __chkstk_darwin(v91);
  uint64_t v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v83 = (char *)&v82 - v6;
  uint64_t v7 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v97 = *(void *)(v7 - 8);
  long long v98 = (int *)v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  long long v93 = (char *)&v82 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v96 = (char *)&v82 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v95 = (uint64_t *)((char *)&v82 - v16);
  __chkstk_darwin(v15);
  NSString v18 = (char *)&v82 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = OBJC_IVAR___CHHistoryDataProvider_queue;
  uint64_t v92 = v0;
  uint64_t v24 = *(void **)&v0[OBJC_IVAR___CHHistoryDataProvider_queue];
  if (!v24) {
    goto LABEL_51;
  }
  *uint64_t v22 = v24;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v25 = v24;
  char v26 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v26 & 1) == 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  long long v94 = v10;
  uint64_t v27 = v92;
  if (v92[OBJC_IVAR___CHHistoryDataProvider_hasInitialWorkouts] == 1
    && (v92[OBJC_IVAR___CHHistoryDataProvider_hasInitialMindfulnessSessions] & 1) != 0
    || v92[OBJC_IVAR___CHHistoryDataProvider_shouldForceReload] == 1)
  {
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = _swiftEmptyArrayStorage;
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = _swiftEmptyArrayStorage;
    id v28 = *(void **)&v27[OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider];
    swift_bridgeObjectRetain();
    id v29 = [v28 unfilteredWorkouts];
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for MindfulnessSessionViewModel();
    unint64_t v31 = static MindfulnessSessionViewModel.makeMindfulnessSessionViewModels(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_10005F444(v30);
    id v33 = sub_1000605AC(v32);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_10005F444(v30);
    swift_bridgeObjectRelease();
    id v35 = sub_1000607DC(v34);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_10005F690(v31);
    uint64_t v88 = (uint64_t)sub_1000605AC(v36);
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_10005F690(v31);
    swift_bridgeObjectRelease();
    id v38 = sub_1000607DC(v37);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = v35;
    sub_10005F430((uint64_t)v38);
    uint64_t v87 = aBlock;
    uint64_t v39 = sub_10000FB58(aBlock);
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    uint64_t v40 = *(void *)(v39 + 16);
    id v89 = v33;
    if (v40)
    {
      unint64_t v41 = 0;
      uint64_t v42 = _swiftEmptyArrayStorage;
      id v43 = _swiftEmptyArrayStorage;
      id v44 = v98;
      uint64_t v45 = (uint64_t)v96;
      do
      {
        if (v41 >= *(void *)(v39 + 16))
        {
          __break(1u);
          goto LABEL_49;
        }
        unint64_t v46 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
        uint64_t v47 = *(void *)(v97 + 72);
        sub_1001F0F7C(v39 + v46 + v47 * v41, (uint64_t)v18);
        if (*(void *)(*(void *)&v18[v44[5]] + 16) < 2uLL)
        {
          sub_1001F0FE0((uint64_t)v18);
        }
        else
        {
          sub_100350DA4((uint64_t)v18, (uint64_t)v95);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1001C954C(0, v43[2] + 1, 1);
          }
          id v43 = (void *)aBlock;
          unint64_t v49 = *(void *)(aBlock + 16);
          unint64_t v48 = *(void *)(aBlock + 24);
          if (v49 >= v48 >> 1)
          {
            sub_1001C954C(v48 > 1, v49 + 1, 1);
            id v43 = (void *)aBlock;
          }
          v43[2] = v49 + 1;
          sub_100350DA4((uint64_t)v95, (uint64_t)v43 + v46 + v49 * v47);
          id v44 = v98;
          uint64_t v45 = (uint64_t)v96;
        }
        ++v41;
      }
      while (v40 != v41);
      unint64_t v50 = 0;
      long long v95 = (void *)aBlock;
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      uint64_t v51 = v39 + v46;
      uint64_t v52 = (uint64_t)v93;
      while (v50 < *(void *)(v39 + 16))
      {
        sub_1001F0F7C(v51, v45);
        if (*(void *)(*(void *)(v45 + v44[5]) + 16) > 1uLL)
        {
          sub_1001F0FE0(v45);
        }
        else
        {
          sub_100350DA4(v45, v52);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001C954C(0, v42[2] + 1, 1);
            uint64_t v52 = (uint64_t)v93;
          }
          uint64_t v42 = (void *)aBlock;
          unint64_t v54 = *(void *)(aBlock + 16);
          unint64_t v53 = *(void *)(aBlock + 24);
          if (v54 >= v53 >> 1)
          {
            sub_1001C954C(v53 > 1, v54 + 1, 1);
            uint64_t v52 = (uint64_t)v93;
            uint64_t v42 = (void *)aBlock;
          }
          v42[2] = v54 + 1;
          sub_100350DA4(v52, (uint64_t)v42 + v46 + v54 * v47);
          id v44 = v98;
          uint64_t v45 = (uint64_t)v96;
        }
        ++v50;
        v51 += v47;
        if (v40 == v50)
        {
          id v55 = (void *)aBlock;
          goto LABEL_31;
        }
      }
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    id v55 = _swiftEmptyArrayStorage;
    long long v95 = _swiftEmptyArrayStorage;
    id v44 = v98;
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v64 = v55[2];
    uint64_t v65 = (uint64_t)v94;
    if (v64)
    {
      uint64_t v66 = (uint64_t)v55 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
      uint64_t v67 = *(void *)(v97 + 72);
      swift_retain();
      long long v68 = _swiftEmptyArrayStorage;
      do
      {
        sub_1001F0F7C(v66, v65);
        uint64_t v69 = *(void *)(v65 + v44[5]);
        if (*(void *)(v69 + 16))
        {
          sub_10008E75C(v69 + 32, (uint64_t)&v99);
        }
        else
        {
          uint64_t v101 = 0;
          long long v99 = 0u;
          long long v100 = 0u;
        }
        sub_1001F0FE0(v65);
        if (*((void *)&v100 + 1))
        {
          sub_100093E60(&v99, (uint64_t)&aBlock);
          sub_100093E60(&aBlock, (uint64_t)&v99);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v68 = sub_1001E7334(0, v68[2] + 1, 1, v68);
          }
          unint64_t v71 = v68[2];
          unint64_t v70 = v68[3];
          if (v71 >= v70 >> 1) {
            long long v68 = sub_1001E7334((void *)(v70 > 1), v71 + 1, 1, v68);
          }
          v68[2] = v71 + 1;
          sub_100093E60(&v99, (uint64_t)&v68[5 * v71 + 4]);
          uint64_t v65 = (uint64_t)v94;
        }
        else
        {
          sub_10008DB18((uint64_t)&v99, &qword_10095EAA8);
        }
        v66 += v67;
        --v64;
      }
      while (v64);
      swift_release_n();
    }
    else
    {
      swift_release();
      long long v68 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1000DE84C(v87, (uint64_t)v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = v72;
    swift_bridgeObjectRetain();
    sub_10005F8C4((void **)&aBlock);
    id v73 = v92;
    uint64_t v74 = v90;
    swift_bridgeObjectRelease();
    *(void *)(v74 + 16) = aBlock;
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = v68;
    sub_10005F430(v88);
    sub_10005F430((uint64_t)v89);
    uint64_t v75 = aBlock;
    id v76 = sub_1000DE378((uint64_t)v95);
    swift_release();
    *(void *)&long long aBlock = v75;
    sub_10005F430((uint64_t)v76);
    uint64_t v77 = aBlock;
    id v78 = v73;
    id v79 = sub_100009D4C(v77, (uint64_t)v78);
    swift_bridgeObjectRelease();

    *(void *)&long long aBlock = v79;
    swift_bridgeObjectRetain();
    sub_10005F8C4((void **)&aBlock);
    swift_bridgeObjectRelease();
    uint64_t v80 = v91;
    *(void *)(v91 + 16) = aBlock;
    swift_bridgeObjectRelease();
    sub_100033E6C((char *)v78, v80, v74);
    swift_release();
    return swift_release();
  }
  id v56 = *(void **)&v92[v23];
  if (v56)
  {
    id v57 = v56;
    static DispatchTime.now()();
    long long v58 = v83;
    + infix(_:_:)();
    long long v98 = *(int **)(v84 + 8);
    ((void (*)(char *, uint64_t))v98)(v5, v91);
    uint64_t v59 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v105 = sub_1004C0100;
    uint64_t v106 = v59;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v103 = sub_100070394;
    uint64_t v104 = &unk_1008CB688;
    uint64_t v60 = _Block_copy(&aBlock);
    swift_retain();
    id v61 = v85;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long v99 = _swiftEmptyArrayStorage;
    sub_100067AC4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    uint64_t v62 = v87;
    uint64_t v63 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v60);

    ((void (*)(uint64_t, uint64_t))v89[1])(v62, v63);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v88);
    ((void (*)(char *, uint64_t))v98)(v58, v91);
    swift_release();
    return swift_release();
  }
LABEL_52:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10005F2B0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v6 <= v7) {
    int64_t v18 = v6 + v4;
  }
  else {
    int64_t v18 = v6;
  }
  uint64_t v5 = sub_100095378(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v4) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (unint64_t)&v5[5 * v12 + 4];
  if (a1 + 32 < v13 + 40 * v4 && v13 < a1 + 32 + 40 * v4) {
    goto LABEL_24;
  }
  sub_1000AFA94(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v5;
    return result;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFADD__(v15, v4);
  uint64_t v17 = v15 + v4;
  if (!v16)
  {
    _OWORD v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005F430(uint64_t a1)
{
  return sub_10005F2B0(a1, &qword_10094E830, (uint64_t *)&unk_100955630);
}

uint64_t sub_10005F444(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001C9084(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001C9084(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
        uint64_t v16 = sub_100015BBC(&qword_10094F3B8, (unint64_t *)&qword_10095E770);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100093E60(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1001C9084(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
        uint64_t v16 = sub_100015BBC(&qword_10094F3B8, (unint64_t *)&qword_10095E770);
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_100093E60(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005F690(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001C9084(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001C9084(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = type metadata accessor for MindfulnessSessionViewModel();
        uint64_t v16 = sub_1000C6118(&qword_10094F3B0, (void (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100093E60(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        id v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1001C9084(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = type metadata accessor for MindfulnessSessionViewModel();
        uint64_t v16 = sub_1000C6118(&qword_10094F3B0, (void (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel);
        *(void *)&long long v14 = v13;
        v3[2] = v11 + 1;
        sub_100093E60(&v14, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

Swift::Int sub_10005F8C4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10005F930(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10005FB00(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10005F930(void *a1)
{
  return sub_10005FAEC(0, a1[2], 0, a1);
}

uint64_t sub_10005F944(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1000AFA94(a5);
    id v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    id v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1000AFA94(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005FAEC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10005F944(a1, a2, a3, a4, &qword_10094E830, (uint64_t *)&unk_100955630);
}

Swift::Int sub_10005FB00(uint64_t *a1)
{
  uint64_t v146 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v146 - 8);
  uint64_t v3 = __chkstk_darwin(v146);
  long long v139 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v138 = (char *)&v127 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_138;
    }
    if (v6) {
      return sub_1004BC688(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_146;
  }
  Swift::Int v129 = result;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    long long v135 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      id v13 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      id v128 = v11;
      uint64_t v118 = v136;
      if (v14 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_133;
          }
          if (!v119) {
            goto LABEL_145;
          }
          id v121 = v13;
          id v122 = v13 + 32;
          uint64_t v123 = *(void *)&v13[16 * v120 + 32];
          uint64_t v124 = *(void *)&v13[16 * v14 + 24];
          sub_1004BD2A0((char *)(v119 + 40 * v123), (char *)(v119 + 40 * *(void *)&v122[16 * v14 - 16]), (char *)(v119 + 40 * v124), v135);
          if (v118) {
            goto LABEL_100;
          }
          if (v124 < v123) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v121 = sub_1001EEF68((uint64_t)v121);
          }
          if (v120 >= *((void *)v121 + 2)) {
            goto LABEL_135;
          }
          id v125 = &v121[16 * v120 + 32];
          *(void *)id v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v121 + 2);
          if (v14 > v126) {
            goto LABEL_136;
          }
          id v13 = v121;
          memmove(&v121[16 * v14 + 16], &v121[16 * v14 + 32], 16 * (v126 - v14));
          *((void *)v121 + 2) = v126 - 1;
          unint64_t v14 = v126 - 1;
        }
        while (v126 > 2);
      }
      swift_bridgeObjectRelease();
      v128[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v128 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1000AFA94((uint64_t *)&unk_100955630);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v10 + 16) = v9;
    id v128 = (void *)v10;
    long long v135 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  long long v137 = (void (**)(char *, uint64_t))(v2 + 8);
  id v13 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v15 = v12++;
    Swift::Int v133 = v15;
    if (v12 < v6)
    {
      uint64_t v130 = v13;
      uint64_t v16 = *a1;
      sub_10008E75C(*a1 + 40 * v12, (uint64_t)&v143);
      sub_10008E75C(v16 + 40 * v15, (uint64_t)v140);
      Swift::Int v134 = v6;
      uint64_t v18 = v144;
      uint64_t v17 = v145;
      sub_10007E4EC(&v143, v144);
      uint64_t v19 = v138;
      (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17);
      uint64_t v20 = v141;
      uint64_t v21 = v142;
      sub_10007E4EC(v140, v141);
      uint64_t v22 = v139;
      uint64_t v23 = v20;
      Swift::Int v6 = v134;
      (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v23, v21);
      LODWORD(v132) = static Date.> infix(_:_:)();
      uint64_t v24 = *v137;
      id v25 = v22;
      uint64_t v26 = v146;
      (*v137)(v25, v146);
      uint64_t v27 = v19;
      Swift::Int v15 = v133;
      v24(v27, v26);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
      Swift::Int v12 = v15 + 2;
      uint64_t v131 = v16;
      if (v15 + 2 < v6)
      {
        uint64_t v28 = v16 + 40 * v15 + 40;
        while (1)
        {
          sub_10008E75C(v28 + 40, (uint64_t)&v143);
          sub_10008E75C(v28, (uint64_t)v140);
          uint64_t v30 = v144;
          uint64_t v29 = v145;
          sub_10007E4EC(&v143, v144);
          unint64_t v31 = v138;
          (*(void (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29);
          uint64_t v32 = v141;
          uint64_t v33 = v142;
          sub_10007E4EC(v140, v141);
          uint64_t v34 = v139;
          (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
          LODWORD(v32) = static Date.> infix(_:_:)();
          uint64_t v35 = v146;
          v24(v34, v146);
          v24(v31, v35);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v132 ^ v32)) {
            break;
          }
          ++v12;
          v28 += 40;
          Swift::Int v6 = v134;
          if (v134 == v12)
          {
            Swift::Int v12 = v134;
            Swift::Int v15 = v133;
            goto LABEL_23;
          }
        }
        Swift::Int v15 = v133;
        Swift::Int v6 = v134;
      }
LABEL_23:
      id v13 = v130;
      if (v132)
      {
        if (v12 < v15) {
          goto LABEL_139;
        }
        if (v15 < v12) {
          break;
        }
      }
    }
    if (v12 < v6) {
      goto LABEL_33;
    }
LABEL_52:
    if (v12 < v15) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v13 = sub_1001EE868(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v63 = *((void *)v13 + 2);
    unint64_t v62 = *((void *)v13 + 3);
    unint64_t v14 = v63 + 1;
    if (v63 >= v62 >> 1) {
      id v13 = sub_1001EE868((char *)(v62 > 1), v63 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v14;
    uint64_t v64 = v13 + 32;
    uint64_t v65 = &v13[16 * v63 + 32];
    *(void *)uint64_t v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      Swift::Int v134 = v12;
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          unint64_t v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_121;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_122;
          }
          unint64_t v78 = v14 - 2;
          id v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_124;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_127;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_131;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_90;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v13 + 4);
            uint64_t v96 = *((void *)v13 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_84;
          }
          uint64_t v68 = *((void *)v13 + 4);
          uint64_t v67 = *((void *)v13 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_123;
        }
        unint64_t v78 = v14 - 2;
        uint64_t v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_126;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_129;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_130;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_90:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v89) {
          goto LABEL_125;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_128;
        }
        if (v100 < v88) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v106 = a1;
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        id v108 = v13;
        uint64_t v109 = &v64[16 * v105];
        uint64_t v110 = *(void *)v109;
        id v111 = v64;
        unint64_t v112 = v66;
        id v113 = &v64[16 * v66];
        uint64_t v114 = *((void *)v113 + 1);
        uint64_t v115 = v136;
        sub_1004BD2A0((char *)(v107 + 40 * *(void *)v109), (char *)(v107 + 40 * *(void *)v113), (char *)(v107 + 40 * v114), v135);
        uint64_t v136 = v115;
        if (v115)
        {
LABEL_100:
          uint64_t v117 = v128;
          swift_bridgeObjectRelease();
          v117[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v114 < v110) {
          goto LABEL_118;
        }
        if (v112 > *((void *)v108 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v109 = v110;
        *(void *)&v111[16 * v105 + 8] = v114;
        unint64_t v116 = *((void *)v108 + 2);
        if (v112 >= v116) {
          goto LABEL_120;
        }
        id v13 = v108;
        unint64_t v14 = v116 - 1;
        memmove(v113, v113 + 16, 16 * (v116 - 1 - v112));
        uint64_t v64 = v111;
        *((void *)v108 + 2) = v116 - 1;
        a1 = v106;
        Swift::Int v12 = v134;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v6 = a1[1];
    if (v12 >= v6)
    {
      uint64_t v11 = v128;
      goto LABEL_103;
    }
  }
  Swift::Int v36 = v12;
  long long v132 = a1;
  uint64_t v37 = v130;
  uint64_t v38 = 40 * v12 - 40;
  uint64_t v39 = 40 * v15;
  do
  {
    if (v15 != --v36)
    {
      if (!v131) {
        goto LABEL_144;
      }
      uint64_t v40 = v131 + v39;
      uint64_t v41 = v131 + v38;
      sub_100093E60((long long *)(v131 + v39), (uint64_t)&v143);
      uint64_t v42 = *(void *)(v41 + 32);
      long long v43 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v43;
      *(void *)(v40 + 32) = v42;
      sub_100093E60(&v143, v41);
    }
    ++v15;
    v38 -= 40;
    v39 += 40;
  }
  while (v15 < v36);
  id v13 = v37;
  a1 = v132;
  Swift::Int v15 = v133;
  Swift::Int v6 = v134;
  if (v12 >= v134) {
    goto LABEL_52;
  }
LABEL_33:
  if (__OFSUB__(v12, v15)) {
    goto LABEL_137;
  }
  if (v12 - v15 >= v129) {
    goto LABEL_52;
  }
  if (__OFADD__(v15, v129)) {
    goto LABEL_140;
  }
  if (v15 + v129 >= v6) {
    Swift::Int v44 = v6;
  }
  else {
    Swift::Int v44 = v15 + v129;
  }
  if (v44 >= v15)
  {
    if (v12 != v44)
    {
      uint64_t v130 = v13;
      uint64_t v45 = 40 * v12 - 40;
      long long v132 = (uint64_t *)v44;
      do
      {
        Swift::Int v46 = v15;
        Swift::Int v134 = v45;
        while (1)
        {
          Swift::Int v47 = v12;
          uint64_t v48 = *a1 + v45;
          sub_10008E75C(v48 + 40, (uint64_t)&v143);
          sub_10008E75C(v48, (uint64_t)v140);
          uint64_t v49 = v144;
          uint64_t v50 = v145;
          sub_10007E4EC(&v143, v144);
          uint64_t v51 = a1;
          uint64_t v52 = v138;
          (*(void (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
          uint64_t v53 = v141;
          uint64_t v54 = v142;
          sub_10007E4EC(v140, v141);
          id v55 = v139;
          (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v53, v54);
          LOBYTE(v53) = static Date.> infix(_:_:)();
          id v56 = *v137;
          id v57 = v55;
          uint64_t v58 = v146;
          (*v137)(v57, v146);
          v56(v52, v58);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v140);
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v143);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v59 = *v51;
          if (!*v51) {
            goto LABEL_142;
          }
          a1 = v51;
          uint64_t v60 = v59 + v45;
          sub_100093E60((long long *)(v59 + v45 + 40), (uint64_t)&v143);
          long long v61 = *(_OWORD *)(v60 + 16);
          *(_OWORD *)(v60 + 40) = *(_OWORD *)v60;
          *(_OWORD *)(v60 + 56) = v61;
          *(void *)(v60 + 72) = *(void *)(v60 + 32);
          sub_100093E60(&v143, v60);
          v45 -= 40;
          ++v46;
          Swift::Int v12 = v47;
          if (v47 == v46) {
            goto LABEL_43;
          }
        }
        a1 = v51;
        Swift::Int v12 = v47;
LABEL_43:
        ++v12;
        Swift::Int v15 = v133;
        uint64_t v45 = v134 + 40;
      }
      while ((uint64_t *)v12 != v132);
      Swift::Int v12 = (Swift::Int)v132;
      id v13 = v130;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000605AC(uint64_t a1)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    while (1)
    {
      sub_10008E75C(v4, (uint64_t)&v27);
      uint64_t v6 = v28;
      uint64_t v5 = v29;
      sub_10007E4EC(&v27, v28);
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 16))(v6);
      if (!v7) {
        goto LABEL_10;
      }
      uint64_t v8 = v7;
      uint64_t v9 = static HealthDataConstants.workoutSessionQueueIdentifierProperty.getter();
      if (!*(void *)(v8 + 16)) {
        break;
      }
      sub_1000DA1C0(v9, v10);
      char v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        goto LABEL_10;
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v27);
LABEL_4:
      v4 += 40;
      if (!--v3)
      {
        uint64_t v2 = v30;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_100093E60(&v27, (uint64_t)v24);
    id v13 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001C9084(0, v13[2] + 1, 1);
      id v13 = v30;
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      sub_1001C9084(v14 > 1, v15 + 1, 1);
    }
    uint64_t v16 = v25;
    uint64_t v17 = v26;
    uint64_t v18 = sub_1000DDC00((uint64_t)v24, v25);
    __chkstk_darwin(v18);
    uint64_t v20 = &v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v21 + 16))(v20);
    sub_1004BDD70(v15, (uint64_t)v20, (uint64_t *)&v30, v16, v17);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v24);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1000607DC(uint64_t a1)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    while (1)
    {
      sub_10008E75C(v4, (uint64_t)&v27);
      uint64_t v6 = v28;
      uint64_t v5 = v29;
      sub_10007E4EC(&v27, v28);
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 16))(v6);
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static HealthDataConstants.workoutSessionQueueIdentifierProperty.getter();
        if (*(void *)(v8 + 16))
        {
          sub_1000DA1C0(v9, v10);
          char v12 = v11;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12)
          {
            sub_100093E60(&v27, (uint64_t)v24);
            id v13 = v30;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1001C9084(0, v13[2] + 1, 1);
              id v13 = v30;
            }
            unint64_t v15 = v13[2];
            unint64_t v14 = v13[3];
            if (v15 >= v14 >> 1) {
              sub_1001C9084(v14 > 1, v15 + 1, 1);
            }
            uint64_t v16 = v25;
            uint64_t v17 = v26;
            uint64_t v18 = sub_1000DDC00((uint64_t)v24, v25);
            __chkstk_darwin(v18);
            uint64_t v20 = &v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
            (*(void (**)(unsigned char *))(v21 + 16))(v20);
            sub_1004BDD70(v15, (uint64_t)v20, (uint64_t *)&v30, v16, v17);
            _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v24);
            goto LABEL_5;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v27);
LABEL_5:
      v4 += 40;
      if (!--v3)
      {
        uint64_t v2 = v30;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t type metadata accessor for FitnessPlusStackViewModel()
{
  uint64_t result = qword_10095AE28;
  if (!qword_10095AE28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_100060A54(void *a1, void *a2)
{
  id v61 = a1;
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_paletteBannerInsets];
  *(_OWORD *)uint64_t v10 = xmmword_1007687B0;
  *((_OWORD *)v10 + 1) = xmmword_1007687B0;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker;
  type metadata accessor for ActivityDashboardImpressionsTracker();
  char v12 = (void *)swift_allocObject();
  type metadata accessor for BasicImpressionsTracker();
  id v13 = v2;
  void v12[2] = BasicImpressionsTracker.__allocating_init(threshold:)();
  v12[3] = &protocol witness table for BasicImpressionsTracker;
  v12[4] = 0;
  uint64_t v12[5] = sub_1000DFC54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v2[v11] = v12;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController] = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_transitionAnimatorFromViewController] = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache;
  type metadata accessor for DashboardCardCellViewCache();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 1;
  *(void *)(v15 + 24) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v15 + 32) = sub_100061488((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v13[v14] = v15;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton;
  *(void *)&v13[v16] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton;
  *(void *)&v13[v17] = [objc_allocWithZone((Class)UIButton) init];
  UUID.init()();
  UUID.init()();
  v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 0;
  uint64_t v18 = &v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton;
  type metadata accessor for AccountButton();
  *(void *)&v13[v19] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  UUID.init()();
  UUID.init()();
  uint64_t v20 = &v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardTipReuseIdentifier];
  *(void *)uint64_t v20 = 0xD00000000000001ELL;
  *((void *)v20 + 1) = 0x80000001007CC4B0;
  v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver] = 0;
  uint64_t v21 = &v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_ringCardIndex] = 0;
  sub_1000AFA94((uint64_t *)&unk_10095F7D8);
  type metadata accessor for Tips.ConfigurationOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
  static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
  static Tips.ConfigurationOption.displayFrequency(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static Tips.configure(_:)();
  swift_bridgeObjectRelease();
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context] = a2;
  id v22 = objc_allocWithZone((Class)type metadata accessor for SummaryCoordinator());
  uint64_t v23 = a2;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator] = sub_100052AF8(v23);
  uint64_t v24 = *(void **)&v23[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext];
  type metadata accessor for SummaryBannerActionPresenter();
  swift_allocObject();
  id v25 = v24;
  swift_retain();
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryBannerActionPresenter] = SummaryBannerActionPresenter.init(dependencies:placement:)();
  id v26 = objc_allocWithZone((Class)type metadata accessor for MarketingPaletteBannerPresenter());
  swift_retain();
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter] = MarketingPaletteBannerPresenter.init(dependencies:placement:)();
  type metadata accessor for LoadingCardHeightProvider();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_10002C5AC();
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_loadingCardHeightProvider] = v27;

  id v28 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  uint64_t v29 = (objc_class *)type metadata accessor for ActivityDashboardViewController();
  v63.receiver = v13;
  v63.super_class = v29;
  [super initWithCollectionViewLayout:v28];

  unint64_t v31 = (char *)v30;
  uint64_t result = (char *)[v31 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v33 = result;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakDestroy();
  id v34 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_10007DB1C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10007DAA0;
  uint64_t aBlock[3] = &unk_1008CC540;
  uint64_t v35 = _Block_copy(aBlock);
  id v36 = [v34 initWithSectionProvider:v35];
  _Block_release(v35);
  swift_release();
  [v33 setCollectionViewLayout:v36];

  uint64_t result = (char *)[v31 collectionView];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v37 = result;
  [result _setReorderFeedbackGenerator:0];

  uint64_t v38 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
  *(void *)(*(void *)&v31[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
            + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate
            + 8) = &off_1008CC0F0;
  swift_unknownObjectWeakAssign();
  *(void *)(swift_allocObject() + 16) = v25;
  id v39 = v25;
  swift_retain();
  dispatch thunk of SummaryBannerActionPresenter.onNavigateToURLAction.setter();
  swift_release();
  sub_100035E0C();
  sub_100054BC8();
  uint64_t result = (char *)[v31 collectionView];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  aBlock[0] = result;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v40 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_100751040;
  *(void *)(v41 + 32) = v40;
  aBlock[0] = (id)v41;
  specialized Array._endMutation()();
  *(id *)&v31[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = aBlock[0];
  swift_bridgeObjectRelease();
  id v42 = *(id *)&v31[v38];
  sub_1000E8F1C();

  uint64_t v43 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter;
  Swift::Int v44 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter];
  sub_1000B7550(&qword_10095F7E8, (void (*)(uint64_t))type metadata accessor for ActivityDashboardViewController);
  uint64_t v45 = v31;
  id v46 = v44;
  dispatch thunk of MarketingPaletteBannerPresenter.display.setter();

  id v47 = *(id *)&v31[v43];
  dispatch thunk of MarketingPaletteBannerPresenter.activate()();

  sub_10007E2D8(0, (unint64_t *)&unk_10095F7F0);
  uint64_t v48 = v58;
  if (qword_10094AD78 != -1) {
    swift_once();
  }
  uint64_t v49 = v60;
  uint64_t v50 = sub_1000876DC(v60, (uint64_t)qword_100998168);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v51(v48, v50, v49);
  uint64_t v52 = (void *)UIButton.init(configuration:primaryAction:)();
  [v52 addTarget:v45 action:"didTapAddCard" forControlEvents:64];
  uint64_t v53 = *(void **)&v45[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton];
  *(void *)&v45[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton] = v52;

  if (qword_10094AD80 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_1000876DC(v49, (uint64_t)qword_100998180);
  v51(v48, v54, v49);
  id v55 = (void *)UIButton.init(configuration:primaryAction:)();
  [v55 addTarget:v45 action:"didTapDone" forControlEvents:64];

  id v56 = *(void **)&v45[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton];
  *(void *)&v45[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton] = v55;

  return v45;
}

unint64_t sub_100061488(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_1009600A0);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (unint64_t i = (char *)(a1 + 33); ; i += 2)
    {
      unsigned __int8 v5 = *(i - 1);
      char v6 = *i;
      unint64_t result = sub_1000D696C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_100061560(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v71 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_10095CB80);
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095CB88);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  uint64_t v76 = v6;
  __chkstk_darwin(v5);
  char v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v9 - 8);
  BOOL v77 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context];
  [*(id *)(*(void *)(*(void *)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v1];
  char v12 = *(char **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000E91D4;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = &v12[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess();
  uint64_t v16 = *(void **)v15;
  uint64_t v17 = v12;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_10001E94C(0, v16[2] + 1, 1, v16);
    *(void *)uint64_t v15 = v16;
  }
  unint64_t v20 = v16[2];
  unint64_t v19 = v16[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v16 = sub_10001E94C((void *)(v19 > 1), v20 + 1, 1, v16);
    *(void *)uint64_t v15 = v16;
  }
  v16[2] = v20 + 1;
  uint64_t v21 = &v16[2 * v20];
  v21[4] = sub_100020A64;
  v21[5] = v14;
  swift_endAccess();
  swift_release_n();

  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider;
  uint64_t v23 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  sub_10008AA94(&qword_10095CB90, v24, (void (*)(uint64_t))type metadata accessor for SummaryCoordinator);
  id v25 = v23;
  AAUIAwardsDataProvider.add(observer:)();

  BOOL v26 = (v71 >> 2) & 1;
  id v27 = *(id *)(v11 + v22);
  AAUIAwardsDataProvider.activate(isFitnessPlusSubscriber:)(v26);
  if (v28) {
    swift_errorRelease();
  }

  uint64_t v70 = type metadata accessor for TaskPriority();
  uint64_t v29 = *(void *)(v70 - 8);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  unint64_t v71 = v29 + 56;
  uint64_t v30 = (uint64_t)v77;
  v69(v77, 1, 1, v70);
  unint64_t v31 = (void *)swift_allocObject();
  void v31[2] = 0;
  v31[3] = 0;
  v31[4] = v2;
  uint64_t v32 = v2;
  sub_1000713D0(v30, (uint64_t)&unk_10095CBA0, (uint64_t)v31);
  swift_release();
  uint64_t v33 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator);
  swift_beginAccess();
  id v34 = v33;
  v68[1] = sub_1000AFA94(&qword_1009687D0);
  uint64_t v35 = v8;
  Published.projectedValue.getter();
  swift_endAccess();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v68[0] = sub_1000A132C(&qword_10095CBA8, &qword_10095CB88);
  uint64_t v36 = v75;
  uint64_t v37 = Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v76 = *(void *)(v76 + 8);
  ((void (*)(char *, uint64_t))v76)(v35, v36);
  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsSetupStateCancellable] = v37;
  swift_release();
  uint64_t v38 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider;
  id v39 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider);
  swift_beginAccess();
  id v40 = v39;
  sub_1000AFA94(&qword_10095CBB0);
  uint64_t v41 = v72;
  Published.projectedValue.getter();
  swift_endAccess();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000A132C(&qword_10095CBB8, &qword_10095CB80);
  uint64_t v42 = v74;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v42);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v43 = *(void **)(v11 + v38);
  swift_beginAccess();
  id v44 = v43;
  Published.projectedValue.getter();
  swift_endAccess();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v76)(v35, v36);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v45 = *(void **)(v11 + v38);
  uint64_t v46 = (uint64_t)v77;
  v69(v77, 1, 1, v70);
  type metadata accessor for MainActor();
  id v47 = v45;
  uint64_t v48 = static MainActor.shared.getter();
  uint64_t v49 = (void *)swift_allocObject();
  uint64_t v49[2] = v48;
  v49[3] = &protocol witness table for MainActor;
  v49[4] = v47;
  sub_1000713D0(v46, (uint64_t)&unk_10095CBC0, (uint64_t)v49);
  swift_release();

  uint64_t v50 = *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider);
  uint64_t v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = *(void *)(v50 + 32);
  *(void *)(v50 + 32) = sub_1000E8F8C;
  *(void *)(v50 + 40) = v51;
  sub_10005E5F8(v52);
  uint64_t v53 = *(char **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider);
  uint64_t v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_100070BC8;
  *(void *)(v55 + 24) = v54;
  id v56 = &v53[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers];
  swift_beginAccess();
  uint64_t v57 = v53;
  swift_retain_n();
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v79 = *(void *)v56;
  *(void *)id v56 = 0x8000000000000000;
  sub_100005618((uint64_t)sub_100070A14, v55, (uint64_t)v32, v58);
  *(void *)id v56 = v79;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release_n();

  uint64_t v59 = *(char **)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider);
  *(void *)&v59[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_delegate + 8] = &off_1008C4F90;
  swift_unknownObjectWeakAssign();
  uint64_t v60 = v59;
  sub_1000568B8();

  [*(id *)(*(void *)(v11 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext)+ OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider) addObserver:v32];
  id v61 = [self defaultCenter];
  id v62 = [self didUpdatePauseStateNotification];
  id v63 = [self mainQueue];
  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000E91DC;
  aBlock[5] = v64;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000711BC;
  uint64_t aBlock[3] = &unk_1008C7828;
  uint64_t v65 = _Block_copy(aBlock);
  swift_release();
  id v66 = [v61 addObserverForName:v62 object:0 queue:v63 usingBlock:v65];
  _Block_release(v65);

  return swift_unknownObjectRelease();
}

uint64_t sub_10006204C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t v42 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v43 = v0;
  while (1)
  {
    if (v6)
    {
      uint64_t v46 = (v6 - 1) & v6;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v14 = *(void *)(v40 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v41) {
        break;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v41) {
          break;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v41) {
            break;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v41) {
              break;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v15);
            if (!v14)
            {
              uint64_t v16 = v8 + 6;
              if (v8 + 6 >= v41) {
                break;
              }
              unint64_t v14 = *(void *)(v40 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_46;
                  }
                  if (v15 >= v41) {
                    goto LABEL_37;
                  }
                  unint64_t v14 = *(void *)(v40 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v15 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v46 = (v14 - 1) & v14;
    int64_t v47 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    uint64_t v19 = v0[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16))(v17, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v12, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v17, v19);
    uint64_t v20 = CatalogTheme.identifier.getter();
    uint64_t v22 = v21;
    uint64_t v23 = CatalogTheme.name.getter();
    uint64_t v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1000DA1C0(v20, v22);
    uint64_t v29 = v3[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v3[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_1000DA1C0(v20, v22);
      if ((v31 & 1) != (v32 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_4:
        uint64_t v9 = (uint64_t *)(v3[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v9 = v23;
        v9[1] = v25;
        goto LABEL_5;
      }
    }
    v3[(v28 >> 6) + 8] |= 1 << v28;
    uint64_t v33 = (uint64_t *)(v3[6] + 16 * v28);
    *uint64_t v33 = v20;
    v33[1] = v22;
    id v34 = (uint64_t *)(v3[7] + 16 * v28);
    *id v34 = v23;
    v34[1] = v25;
    uint64_t v35 = v3[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_44;
    }
    v3[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v0 = v43;
    uint64_t v10 = v43[7];
    uint64_t v11 = v43[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v42)(v10, v11);
    unint64_t v6 = v46;
    int64_t v8 = v47;
  }
LABEL_37:
  uint64_t v38 = (void *)v0[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_10006248C()
{
  _StringGuts.grow(_:)(32);
  v0._countAndFlagsBits = 0x203A746867696557;
  v0._object = (void *)0xE800000000000000;
  String.append(_:)(v0);
  Double.write<A>(to:)();
  v1._object = (void *)0x80000001007BA7E0;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  Double.write<A>(to:)();
  return 0;
}

id sub_10006255C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  sub_10005DC50(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&v47, a9, a10, a11, a12, a13, a14, a15, a16);
  uint64_t v16 = (char *)objc_allocWithZone((Class)type metadata accessor for ActivitySharingTabViewHostingController());
  *(void *)&v16[qword_1009511E0] = 0;
  uint64_t v17 = &v16[qword_1009511E8];
  long long v18 = v48;
  *(_OWORD *)uint64_t v17 = v47;
  *((_OWORD *)v17 + 1) = v18;
  long long v19 = v52;
  long long v21 = v49;
  long long v20 = v50;
  *((_OWORD *)v17 + 4) = v51;
  *((_OWORD *)v17 + 5) = v19;
  *((_OWORD *)v17 + 2) = v21;
  *((_OWORD *)v17 + 3) = v20;
  long long v22 = v55[1];
  long long v24 = v53;
  long long v23 = v54;
  *((_OWORD *)v17 + 8) = v55[0];
  *((_OWORD *)v17 + 9) = v22;
  *((_OWORD *)v17 + 6) = v24;
  *((_OWORD *)v17 + 7) = v23;
  long long v25 = v56;
  long long v26 = v57;
  long long v27 = v58;
  *((void *)v17 + 26) = v59;
  *((_OWORD *)v17 + 11) = v26;
  *((_OWORD *)v17 + 12) = v27;
  *((_OWORD *)v17 + 10) = v25;
  v45[10] = v56;
  v45[11] = v57;
  v45[12] = v58;
  uint64_t v46 = v59;
  v45[6] = v53;
  v45[7] = v54;
  v45[8] = v55[0];
  v45[9] = v55[1];
  v45[2] = v49;
  v45[3] = v50;
  v45[4] = v51;
  v45[5] = v52;
  v45[0] = v47;
  v45[1] = v48;
  sub_10006296C((uint64_t)&v47);
  sub_10006296C((uint64_t)&v47);
  unint64_t v28 = (void *)UIHostingController.init(rootView:)();
  id result = [v28 tabBarItem];
  if (result)
  {
    BOOL v30 = result;
    id v31 = [self mainBundle];
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v31 localizedStringForKey:v32 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setTitle:v34];

    id result = [v28 tabBarItem];
    if (result)
    {
      uint64_t v35 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v37 = [self smm_systemImageNamed:v36];

      [v35 setImage:v37];
      uint64_t v38 = (objc_class *)type metadata accessor for ActivitySharingNavigationController();
      id v39 = (char *)objc_allocWithZone(v38);
      *(void *)&v39[OBJC_IVAR____TtC10FitnessApp35ActivitySharingNavigationController_viewController] = v28;
      v44.receiver = v39;
      v44.super_class = v38;
      id v40 = v28;
      id v41 = [super initWithRootViewController:v40];
      v45[0] = *(_OWORD *)((char *)v55 + 8);
      uint64_t v42 = *(void **)(*(void *)&v55[1] + 144);
      *(void *)(*(void *)&v55[1] + 144) = v41;
      sub_1000E2358((uint64_t)v45);
      id v43 = v41;

      sub_10004B370((uint64_t)&v47);
      sub_1000E2384((uint64_t)v45);
      return v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10006296C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  unint64_t v6 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  int64_t v8 = *(void **)(a1 + 56);
  uint64_t v9 = *(void **)(a1 + 64);
  long long v27 = *(void **)(a1 + 80);
  unint64_t v28 = *(void **)(a1 + 96);
  uint64_t v29 = *(void **)(a1 + 104);
  BOOL v30 = *(void **)(a1 + 112);
  id v31 = *(void **)(a1 + 120);
  NSString v32 = *(void **)(a1 + 128);
  id v33 = *(void **)(a1 + 200);
  id v10 = *(id *)a1;
  id v11 = v2;
  id v12 = v4;
  id v13 = v3;
  id v14 = v6;
  id v15 = v5;
  id v16 = v7;
  id v17 = v8;
  id v18 = v9;
  swift_retain();
  id v19 = v27;
  swift_retain();
  id v20 = v28;
  id v21 = v29;
  id v22 = v30;
  id v23 = v31;
  id v24 = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v25 = v33;
  swift_retain();
  return a1;
}

uint64_t sub_100062AB0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t v42 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  id v43 = v0;
  while (1)
  {
    if (v6)
    {
      uint64_t v46 = (v6 - 1) & v6;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v14 = *(void *)(v40 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v41) {
        break;
      }
      unint64_t v14 = *(void *)(v40 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v41) {
          break;
        }
        unint64_t v14 = *(void *)(v40 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v41) {
            break;
          }
          unint64_t v14 = *(void *)(v40 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v41) {
              break;
            }
            unint64_t v14 = *(void *)(v40 + 8 * v15);
            if (!v14)
            {
              uint64_t v16 = v8 + 6;
              if (v8 + 6 >= v41) {
                break;
              }
              unint64_t v14 = *(void *)(v40 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_46;
                  }
                  if (v15 >= v41) {
                    goto LABEL_37;
                  }
                  unint64_t v14 = *(void *)(v40 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v15 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v46 = (v14 - 1) & v14;
    int64_t v47 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    uint64_t v19 = v0[5];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16))(v17, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v12, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v17, v19);
    uint64_t v20 = CatalogModalityReference.identifier.getter();
    uint64_t v22 = v21;
    uint64_t v23 = CatalogModalityReference.name.getter();
    uint64_t v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1000DA1C0(v20, v22);
    uint64_t v29 = v3[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v3[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1004F5D2C();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000DA31C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_1000DA1C0(v20, v22);
      if ((v31 & 1) != (v32 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_4:
        uint64_t v9 = (uint64_t *)(v3[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *uint64_t v9 = v23;
        v9[1] = v25;
        goto LABEL_5;
      }
    }
    v3[(v28 >> 6) + 8] |= 1 << v28;
    id v33 = (uint64_t *)(v3[6] + 16 * v28);
    *id v33 = v20;
    v33[1] = v22;
    NSString v34 = (uint64_t *)(v3[7] + 16 * v28);
    *NSString v34 = v23;
    v34[1] = v25;
    uint64_t v35 = v3[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_44;
    }
    v3[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    Swift::String v0 = v43;
    uint64_t v10 = v43[7];
    uint64_t v11 = v43[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v42)(v10, v11);
    unint64_t v6 = v46;
    int64_t v8 = v47;
  }
LABEL_37:
  uint64_t v38 = (void *)v0[3];
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v38 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_100062EF0()
{
  uint64_t v17 = v0;
  swift_release();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v4 = v0[5];
    uint64_t v15 = v0[6];
    swift_bridgeObjectRetain_n();
    log = v2;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    uint64_t v6 = _typeName(_:qualified:)();
    v0[2] = sub_10008F1F4(v6, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t v8 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    v0[2] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[2] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "%s updating with competition item count %ld friend list date item group count %ld", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = v0[5];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v11;
  v0[3] = v10;
  v0[4] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  static Published.subscript.setter();
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

unint64_t destroy for ActivitySharingFriendListDataProvider.State(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000632E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v31 = a3;
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = type metadata accessor for ImpressionMetrics();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card;
  swift_beginAccess();
  sub_1000CD028(v19, (uint64_t)v36);
  if (!v37)
  {
    sub_10008DB18((uint64_t)v36, &qword_10094CEF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    return sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095F740);
  }
  uint64_t v28 = v6;
  uint64_t v29 = v8;
  uint64_t v30 = v3;
  sub_10008E75C((uint64_t)v36, (uint64_t)v33);
  sub_10008DB18((uint64_t)v36, &qword_10094CEF0);
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  sub_10007E4EC(v33, v34);
  uint64_t v22 = IndexPath.item.getter();
  (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v21 + 64))(0, 0, v22, v20, v21);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095F740);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v24 = [v31 layoutAttributesForItemAtIndexPath:isa];

  if (v24)
  {
    [v24 frame];
    uint64_t v25 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v32, v5);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v18, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    swift_beginAccess();
    sub_1005CE20C((uint64_t)v12, v25);
    swift_endAccess();
    sub_10001C250();
    ImpressionsCalculator.addElement(_:at:)();

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_100063714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ImpressionMetrics();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t initializeWithCopy for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100063854@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100063884(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100063884(void *a1)
{
  uint64_t v78 = sub_1000AFA94(&qword_100966FA8);
  uint64_t v81 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v85 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_100966FB0);
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  uint64_t v90 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100966FB8);
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  __chkstk_darwin(v5);
  char v89 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_100966FC0);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v84 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_100966FC8);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v83 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_100966FD0);
  uint64_t v80 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v88 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_100966FD8);
  uint64_t v68 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v82 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000AFA94(&qword_100966FE0);
  uint64_t v79 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  BOOL v87 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100966FE8);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v86 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_100966FF0);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100966FF8);
  uint64_t v61 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100967000);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v91 = a1;
  uint64_t v23 = (uint64_t)sub_10007E4EC(a1, v22);
  sub_1000AFAD8();
  uint64_t v24 = v92;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v24)
  {
    long long v58 = v17;
    uint64_t v57 = v15;
    uint64_t v59 = v14;
    long long v26 = v86;
    uint64_t v25 = v87;
    uint64_t v27 = v88;
    uint64_t v28 = v89;
    uint64_t v60 = 0;
    uint64_t v29 = v90;
    uint64_t v92 = v19;
    uint64_t v30 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v30 + 16) == 1)
    {
      switch(*(unsigned char *)(v30 + 32))
      {
        case 1:
          char v94 = 1;
          sub_100667D38();
          BOOL v36 = v59;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v37 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v37) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v63);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 1;
          break;
        case 2:
          char v95 = 2;
          sub_1000AFC28();
          uint64_t v23 = (uint64_t)v21;
          uint64_t v38 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v38) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v65 + 8))(v26, v66);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 2;
          break;
        case 3:
          char v97 = 3;
          sub_1000AFB2C();
          uint64_t v23 = (uint64_t)v21;
          uint64_t v39 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v39) {
            goto LABEL_26;
          }
          sub_100064804();
          uint64_t v40 = v69;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v41 = v92;
          (*(void (**)(char *, uint64_t))(v79 + 8))(v25, v40);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v18);
          uint64_t v23 = v96;
          break;
        case 4:
          char v98 = 4;
          sub_1000AFD24();
          uint64_t v42 = v82;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v43 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v43) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v67);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 3;
          break;
        case 5:
          char v99 = 5;
          sub_100667CE4();
          uint64_t v23 = (uint64_t)v21;
          uint64_t v44 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v44) {
            goto LABEL_26;
          }
          uint64_t v45 = v64;
          uint64_t v23 = KeyedDecodingContainer.decode(_:forKey:)();
          (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v45);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          break;
        case 6:
          char v100 = 6;
          sub_100667C90();
          uint64_t v46 = v83;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v47 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v47) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v71);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 4;
          break;
        case 7:
          char v101 = 7;
          sub_1000AFD78();
          uint64_t v48 = v84;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v49 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v49) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v73);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 5;
          break;
        case 8:
          char v102 = 8;
          sub_1000AFBD4();
          uint64_t v23 = (uint64_t)v21;
          uint64_t v50 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v50) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v74 + 8))(v28, v75);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 6;
          break;
        case 9:
          char v103 = 9;
          sub_1000AFC7C();
          uint64_t v23 = (uint64_t)v21;
          uint64_t v51 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v51) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v76 + 8))(v29, v77);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 7;
          break;
        case 0xA:
          char v105 = 10;
          sub_100667BE8();
          long long v52 = v85;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v53 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v53) {
            goto LABEL_26;
          }
          sub_100667C3C();
          uint64_t v55 = v78;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v56 = v92;
          (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v55);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v18);
          uint64_t v23 = v104;
          break;
        default:
          char v93 = 0;
          sub_1000AFCD0();
          id v31 = v58;
          uint64_t v23 = (uint64_t)v21;
          uint64_t v32 = v60;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v32) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v57);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
          uint64_t v23 = 0;
          break;
      }
    }
    else
    {
      uint64_t v33 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v35 = v34;
      sub_1000AFA94(&qword_100967010);
      *uint64_t v35 = &type metadata for CardType;
      uint64_t v23 = (uint64_t)v21;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, enum case for DecodingError.typeMismatch(_:), v33);
      swift_willThrow();
LABEL_26:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v18);
    }
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v91);
  return v23;
}

unint64_t sub_100064804()
{
  unint64_t result = qword_100967060;
  if (!qword_100967060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967060);
  }
  return result;
}

char *sub_100064858(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v76 = a5;
  uint64_t v10 = type metadata accessor for ActivitySharingSettings();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1000AFA94(&qword_100952268);
  uint64_t v67 = *(v12 - 1);
  id v68 = v12;
  __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = (void *)type metadata accessor for CompletedWorkoutShareItemProvider();
  uint64_t v14 = *(v75 - 1);
  __chkstk_darwin(v75);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR___CHFitnessAppContext_playlists] = &_swiftEmptySetSingleton;
  *(void *)&v5[OBJC_IVAR___CHFitnessAppContext_seymourAvailabilityManager] = a2;
  type metadata accessor for Dependencies();
  uint64_t v80 = (ValueMetadata *)sub_10007E2D8(0, (unint64_t *)&unk_100963420);
  uint64_t v81 = (_UNKNOWN **)&protocol witness table for _HKWheelchairUseCharacteristicCache;
  *(void *)&long long v79 = a3;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v17 = v5;
  id v69 = a2;
  id v18 = a3;
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = static Dependencies.browsing(wheelchairStatus:queue:)();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v79);
  uint64_t v21 = OBJC_IVAR___CHFitnessAppContext_dependencies;
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_dependencies] = v20;
  type metadata accessor for FitnessSettingsProvider();
  swift_allocObject();
  id v22 = v18;
  swift_retain();
  id v23 = a1;
  id v24 = a4;
  id v70 = v76;
  id v71 = v23;
  id v76 = v22;
  uint64_t v25 = sub_100021EA8(v20, v23, v24, v22, v70);
  uint64_t v26 = sub_1000E280C((unint64_t *)&unk_100966938, (void (*)(uint64_t))type metadata accessor for FitnessSettingsProvider);
  uint64_t v27 = (uint64_t *)&v17[OBJC_IVAR___CHFitnessAppContext_accountFitnessSettingsProvider];
  *uint64_t v27 = v25;
  v27[1] = v26;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100963440);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_amsBag] = v79;
  swift_retain();
  sub_1000AFA94(&qword_100966948);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_siriUserActivityHandler]);
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100966950);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_bookmarkClient]);
  swift_retain();
  sub_1000AFA94(&qword_10095DF90);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_catalogClient]);
  swift_retain();
  unint64_t result = (char *)[v24 unitManager];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_10006C988();
  CompletedWorkoutShareItemProvider.init(dependencies:unitPreferencesProvider:)();
  (*(void (**)(char *, char *, void *))(v14 + 32))(&v17[OBJC_IVAR___CHFitnessAppContext_completedWorkoutItemProvider], v16, v75);
  type metadata accessor for EngagementAppBadgeProvider();
  uint64_t v29 = swift_allocObject();
  swift_retain();
  uint64_t v30 = (void *)sub_1000AFA94((uint64_t *)&unk_100963430);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider] = v29;
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  *(_OWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_eventHub] = v79;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100966970);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_metricClient]);
  uint64_t v31 = *(void *)&v17[v21];
  swift_retain();
  unint64_t result = (char *)[v24 unitManager];
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v32 = result;
  uint64_t v75 = v30;
  uint64_t v33 = (char *)objc_allocWithZone((Class)type metadata accessor for SeymourCatalogItemDataProvider());
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider] = sub_10006C5DC(v31, v32, v33);
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  uint64_t v34 = qword_10094A788;
  swift_retain();
  swift_unknownObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  id v35 = v68;
  uint64_t v36 = sub_1000876DC((uint64_t)v68, (uint64_t)qword_100952248);
  uint64_t v37 = v66;
  uint64_t v38 = v67;
  (*(void (**)(char *, uint64_t, id))(v67 + 16))(v66, v36, v35);
  TestProperty.wrappedValue.getter();
  (*(void (**)(char *, id))(v38 + 8))(v37, v35);
  id v65 = v24;
  if (v79 == 1)
  {
    type metadata accessor for AppCoordinator();
    swift_allocObject();
    uint64_t v39 = (void *)AppCoordinator.init(dependencies:)();
    swift_unknownObjectRelease();
    unint64_t v40 = 0x8000000000000000;
  }
  else
  {
    id v41 = objc_allocWithZone((Class)type metadata accessor for BrowsingViewController());
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v39 = (void *)BrowsingViewController.init(dependencies:fitnessSettingsProvider:)();
    type metadata accessor for MetricSceneLifecycleTracker();
    swift_allocObject();
    unint64_t v40 = MetricSceneLifecycleTracker.init(dependencies:)();
    swift_unknownObjectRelease();
  }
  uint64_t v42 = &v17[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator];
  *(void *)uint64_t v42 = v39;
  *((void *)v42 + 1) = v40;
  uint64_t v80 = &type metadata for SeymourBrowsingCoordinator;
  uint64_t v81 = &off_1008BDEF0;
  *(void *)&long long v79 = v39;
  *((void *)&v79 + 1) = v40;
  type metadata accessor for URLNavigator();
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = sub_1000DDC00((uint64_t)&v79, (uint64_t)&type metadata for SeymourBrowsingCoordinator);
  __chkstk_darwin(v44);
  uint64_t v46 = (uint64_t *)((char *)&v65 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v47 + 16))(v46);
  uint64_t v48 = *v46;
  uint64_t v49 = v46[1];
  sub_1000CEE44(v39, v40);
  sub_1000CEE44(v39, v40);
  uint64_t v50 = (uint64_t)v69;
  id v68 = v69;
  sub_1000CEE44(v39, v40);
  uint64_t v51 = swift_retain();
  uint64_t v52 = sub_10006553C(v51, v48, v49, (uint64_t)v39, v40, v50, v43);
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v79);
  sub_1000656A0(v39, v40);
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_navigator] = v52;
  swift_retain();
  sub_1000AFA94(&qword_10095DF98);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_contentAvailabilityClient]);
  swift_retain();
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_engagementClient]);
  swift_retain();
  sub_1000AFA94(&qword_100966980);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v79, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_privacyPreferenceClient]);
  uint64_t v53 = v70;
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider] = v70;
  id v71 = v71;
  uint64_t v75 = v53;
  long long v54 = v72;
  ActivitySharingSettings.init(healthStore:)();
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v17[OBJC_IVAR___CHFitnessAppContext_activitySharingSettings], v54, v74);
  id v55 = [objc_allocWithZone((Class)type metadata accessor for ActivitySharingCloudDeviceProvider()) init];
  type metadata accessor for AccountDeviceProvider();
  uint64_t v56 = (void *)swift_allocObject();
  v56[3] = [objc_allocWithZone((Class)AKAppleIDAuthenticationController) init];
  v56[2] = [self sharedInstance];
  sub_1000AFA94(&qword_100966988);
  uint64_t v57 = swift_allocObject();
  *(_DWORD *)(v57 + 24) = 0;
  *(void *)(v57 + 16) = _swiftEmptyArrayStorage;
  v56[4] = v57;
  long long v58 = (objc_class *)type metadata accessor for CloudDeviceProvider();
  uint64_t v59 = (char *)objc_allocWithZone(v58);
  *(void *)&v59[OBJC_IVAR___CHCloudDeviceProvider_activitySharingCloudDeviceProvider] = v55;
  *(void *)&v59[OBJC_IVAR___CHCloudDeviceProvider_accountDeviceProvider] = v56;
  v78.receiver = v59;
  v78.super_class = v58;
  [super init];
  *(void *)&v17[OBJC_IVAR___CHFitnessAppContext_cloudDeviceProvider] = v60;
  id v61 = v60;
  sub_10001B948();

  uint64_t v62 = (objc_class *)type metadata accessor for FitnessAppContext();
  v77.receiver = v17;
  v77.super_class = v62;
  uint64_t v63 = (char *)[super init];
  *(void *)(*(void *)&v63[OBJC_IVAR___CHFitnessAppContext_navigator] + 192) = &off_1008D3170;
  swift_unknownObjectWeakAssign();
  uint64_t v64 = v63;
  sub_100025B50();
  swift_getObjectType();
  type metadata accessor for MultiUserBeginActivityRequested();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v79);
  swift_getObjectType();
  type metadata accessor for PlaylistsUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();

  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v79);
  swift_release();
  return v64;
}

uint64_t sub_10006553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v17[3] = &type metadata for SeymourBrowsingCoordinator;
  v17[4] = sub_1000E64E0();
  v17[0] = a4;
  v17[1] = a5;
  v16[3] = &type metadata for SeymourBrowsingCoordinator;
  v16[4] = &off_1008BDEF0;
  v16[0] = a2;
  v16[1] = a3;
  *(void *)(a7 + 192) = 0;
  swift_unknownObjectWeakInit();
  sub_1000AFA94((uint64_t *)&unk_100963440);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  *(void *)(a7 + 16) = *(void *)&v15[0];
  *(void *)(a7 + 24) = a1;
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  *(_OWORD *)(a7 + 32) = v15[0];
  sub_10008E75C((uint64_t)v16, a7 + 48);
  sub_10008E75C((uint64_t)v17, a7 + 88);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  *(unsigned char *)(a7 + 128) = v15[0];
  sub_1000AFA94(&qword_100966948);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v16);
  sub_100093E60(v15, a7 + 144);
  *(void *)(a7 + 136) = a6;
  return a7;
}

uint64_t sub_1000656A0(void *a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {

    uint64_t v2 = vars8;
  }
  return swift_release();
}

uint64_t destroy for SeymourBrowsingCoordinator.Style(uint64_t a1)
{
  return sub_1000656A0(*(void **)a1, *(void *)(a1 + 8));
}

void sub_1000656EC(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  LOBYTE(v5) = a3;
  swift_getObjectType();
  if (a2)
  {
    os_log_type_t v7 = static os_log_type_t.error.getter();
    uint64_t v8 = (void *)HKLogActivity;
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(HKLogActivity, v7))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v10 = v8;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v12 = _typeName(_:qualified:)();
      uint64_t v112 = sub_10008F1F4(v12, v13, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v112 = Error.localizedDescription.getter();
      uint64_t v113 = v14;
      sub_1000AFA94((uint64_t *)&unk_100958790);
      uint64_t v15 = Optional.description.getter();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v112 = sub_10008F1F4(v15, v17, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "%s failed to fetch Activity goals: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return;
  }
  if (!a1) {
    return;
  }
  if (a1 >> 62) {
    goto LABEL_41;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v18) {
    goto LABEL_7;
  }
  while (2)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    HKNSOperatingSystemVersionFromString();
    uint64_t v104 = v113;
    uint64_t v105 = v112;
    uint64_t v103 = v114;

    uint64_t v20 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v112 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v99 = v4;
    char v100 = v5;
    if (!v18)
    {
      uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
      uint64_t v106 = 0;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_43;
      }
      break;
    }
    sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (v18 < 1)
    {
      __break(1u);
      __break(1u);
      return;
    }
    id v22 = (void *)ObjCClassFromMetadata;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v24 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v25 = v24;
      id v26 = [v24 sampleType];
      id v27 = [v22 calorieGoal];
      uint64_t v28 = v27;
      if (!v26)
      {
        if (!v27)
        {
LABEL_11:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          continue;
        }
        goto LABEL_23;
      }
      if (!v27)
      {
        uint64_t v28 = v26;
LABEL_23:

        goto LABEL_24;
      }
      id v29 = v26;
      char v30 = static NSObject.== infix(_:_:)();

      if (v30) {
        goto LABEL_11;
      }
LABEL_24:
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v112;
    LOBYTE(v5) = v100;
    uint64_t v20 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v106 = v18;
    if (v112 < 0)
    {
LABEL_43:
      swift_retain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      uint64_t v101 = v36;
      if (!v36) {
        goto LABEL_44;
      }
LABEL_30:
      swift_retain();
      uint64_t v32 = 4;
      while (1)
      {
        id v33 = (v31 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v31 + 8 * v32);
        uint64_t v34 = v33;
        uint64_t v5 = v32 - 3;
        if (__OFADD__(v32 - 4, 1)) {
          break;
        }
        id v35 = [v33 sourceRevision];
        [v35 operatingSystemVersion];

        uint64_t v109 = v105;
        uint64_t v110 = v113;
        uint64_t v111 = v114;
        if (HKNSOperatingSystemVersionCompare() == -1)
        {
          swift_release_n();
          char v98 = 1;
          uint64_t v18 = v106;
          goto LABEL_39;
        }

        ++v32;
        uint64_t v18 = v106;
        if (v5 == v101)
        {
          swift_release_n();
          char v98 = 0;
          uint64_t v34 = 0;
LABEL_39:
          LOBYTE(v5) = v100;
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_41:
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v18) {
        continue;
      }
LABEL_7:
      if ((v5 & 1) == 0) {
        return;
      }
      continue;
    }
    break;
  }
  if ((v31 & 0x4000000000000000) != 0) {
    goto LABEL_43;
  }
  uint64_t v101 = *(void *)(v31 + 16);
  if (v101) {
    goto LABEL_30;
  }
LABEL_44:
  swift_release();
  char v98 = 0;
  uint64_t v34 = 0;
LABEL_45:

  uint64_t v112 = (uint64_t)_swiftEmptyArrayStorage;
  if (v18)
  {
    sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
    uint64_t v37 = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v39 = *(id *)(a1 + 8 * v38 + 32);
      }
      unint64_t v40 = v39;
      id v41 = [v39 sampleType];
      id v42 = [v37 moveMinuteGoal];
      uint64_t v43 = v42;
      if (v41)
      {
        if (!v42)
        {
          uint64_t v43 = v41;
LABEL_59:

LABEL_60:
          goto LABEL_48;
        }
        id v44 = v41;
        char v45 = static NSObject.== infix(_:_:)();

        if ((v45 & 1) == 0) {
          goto LABEL_60;
        }
      }
      else if (v42)
      {
        goto LABEL_59;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_48:
      if (v18 == ++v38)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v112;
        uint64_t v4 = v99;
        LOBYTE(v5) = v100;
        break;
      }
    }
  }
  if (v20 < 0 || (v20 & 0x4000000000000000) != 0) {
    goto LABEL_156;
  }
  uint64_t v46 = *(void *)(v20 + 16);
  if (v46) {
    goto LABEL_65;
  }
LABEL_73:
  while (2)
  {
    swift_release();
    LODWORD(v103) = 0;
    char v51 = 0;
    char v52 = 0;
    if (!v18) {
      goto LABEL_107;
    }
LABEL_76:
    uint64_t v102 = v46;
    sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
    uint64_t v20 = swift_getObjCClassFromMetadata();
    unint64_t v53 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    uint64_t v54 = 4;
    uint64_t v105 = v20;
    while (2)
    {
      uint64_t v5 = v54 - 4;
      if (v53) {
        id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v55 = *(id *)(a1 + 8 * v54);
      }
      uint64_t v56 = v55;
      uint64_t v18 = v54 - 3;
      if (!__OFADD__(v5, 1))
      {
        uint64_t v4 = (uint64_t)[v55 sampleType];
        id v57 = [(id)v20 exerciseGoal];
        long long v58 = v57;
        if (v4)
        {
          if (v57)
          {
            id v59 = (id)v4;
            uint64_t v4 = static NSObject.== infix(_:_:)();

            uint64_t v20 = v105;
            if (v4)
            {
LABEL_90:

              LODWORD(v104) = 1;
LABEL_91:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              uint64_t v60 = 4;
              while (2)
              {
                uint64_t v5 = v60 - 4;
                if (v53) {
                  id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v61 = *(id *)(a1 + 8 * v60);
                }
                uint64_t v62 = v61;
                uint64_t v18 = v60 - 3;
                if (__OFADD__(v5, 1)) {
                  goto LABEL_154;
                }
                uint64_t v4 = (uint64_t)[v61 sampleType];
                id v63 = [(id)v20 standGoal];
                uint64_t v64 = v63;
                if (v4)
                {
                  if (v63)
                  {
                    id v65 = (id)v4;
                    uint64_t v4 = static NSObject.== infix(_:_:)();

                    if (v4)
                    {
LABEL_105:

                      char v51 = 1;
                      goto LABEL_106;
                    }
                    goto LABEL_94;
                  }
                  uint64_t v64 = (void *)v4;
                }
                else if (!v63)
                {
                  goto LABEL_105;
                }

LABEL_94:
                ++v60;
                if (v18 == v106)
                {
                  char v51 = 0;
LABEL_106:
                  swift_bridgeObjectRelease();
                  uint64_t v4 = v99;
                  LOBYTE(v5) = v100;
                  uint64_t v46 = v102;
                  char v52 = v104;
                  goto LABEL_107;
                }
                continue;
              }
            }
            goto LABEL_79;
          }
          long long v58 = (void *)v4;
        }
        else if (!v57)
        {
          goto LABEL_90;
        }

LABEL_79:
        ++v54;
        if (v18 == v106)
        {
          LODWORD(v104) = 0;
          goto LABEL_91;
        }
        continue;
      }
      break;
    }
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    swift_retain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v46) {
      continue;
    }
    break;
  }
LABEL_65:
  swift_retain();
  uint64_t v5 = 4;
  while (1)
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v47 = *(id *)(v20 + 8 * v5);
    }
    uint64_t v48 = v47;
    uint64_t v18 = v5 - 3;
    if (__OFADD__(v5 - 4, 1)) {
      goto LABEL_155;
    }
    id v49 = [v47 sourceRevision];
    [v49 operatingSystemVersion];

    uint64_t v109 = v105;
    uint64_t v110 = v104;
    uint64_t v111 = v103;
    uint64_t v50 = HKNSOperatingSystemVersionCompare();

    if (v50 == -1) {
      break;
    }
    ++v5;
    if (v18 == v46)
    {
      swift_release();
      uint64_t v18 = v106;
      LOBYTE(v5) = v100;
      goto LABEL_73;
    }
  }
  swift_release_n();
  LODWORD(v103) = 1;
  if (v106) {
    goto LABEL_76;
  }
  char v51 = 0;
  char v52 = 0;
  LOBYTE(v5) = v100;
LABEL_107:
  uint64_t v66 = (unsigned __int8 *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria);
  uint64_t v67 = 0x1000000000000;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 6)) {
    uint64_t v67 = 0;
  }
  uint64_t v68 = 0x10000000000;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 5)) {
    uint64_t v68 = 0;
  }
  id v69 = &_mh_execute_header;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 4)) {
    id v69 = 0;
  }
  uint64_t v70 = 0x1000000;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 3)) {
    uint64_t v70 = 0;
  }
  uint64_t v71 = 0x10000;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 2)) {
    uint64_t v71 = 0;
  }
  uint64_t v72 = 256;
  if (!*(unsigned char *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria + 1)) {
    uint64_t v72 = 0;
  }
  uint64_t v73 = sub_1000664E4(v72 | *(unsigned __int8 *)(v4 + OBJC_IVAR___CHOnboardingCoordinator_criteria) | v71 | v70 | (unint64_t)v69 | v68 | v67);
  unint64_t v74 = sub_10002345C((v46 | v101) != 0, v98 | v103, v52, v51);
  char v108 = v51;
  if (v5)
  {
    uint64_t v75 = (v74 >> 8) & 1;
    unsigned int v76 = v74 & 1;
  }
  else
  {
    unint64_t v74 = sub_10002345C((*v66 | v74) & 1, (v66[1] | BYTE1(v74)) & 1, (v66[2] | BYTE2(v74)) & 1, (v66[3] | BYTE3(v74)) & 1);
    unsigned int v76 = v74 & 1;
    uint64_t v75 = (v74 >> 8) & 1;
  }
  unsigned __int8 *v66 = v76;
  v66[1] = v75;
  v66[2] = BYTE2(v74) & 1;
  v66[3] = BYTE3(v74) & 1;
  v66[4] = BYTE4(v74) & 1;
  v66[5] = BYTE5(v74) & 1;
  v66[6] = BYTE6(v74) & 1;
  if ((v74 >> 24)) {
    uint64_t v77 = 0x1000000;
  }
  else {
    uint64_t v77 = 0;
  }
  if ((v74 >> 16)) {
    uint64_t v78 = 0x10000;
  }
  else {
    uint64_t v78 = 0;
  }
  if (v75) {
    uint64_t v79 = 256;
  }
  else {
    uint64_t v79 = 0;
  }
  uint64_t v80 = sub_1000664E4(v79 | v76 | v78 | v77 | v74 & (unint64_t)&_mh_execute_header | v74 & 0x10000000000 | v74 & 0x1000000000000);
  static os_log_type_t.default.getter();
  uint64_t v81 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v82 = swift_allocObject();
  uint64_t v83 = (void *)v82;
  *(_OWORD *)(v82 + 16) = xmmword_100750560;
  *(void *)(v82 + 56) = &type metadata for Bool;
  *(void *)(v82 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v82 + 32) = v101 != 0;
  *(void *)(v82 + 96) = &type metadata for Bool;
  *(void *)(v82 + 104) = &protocol witness table for Bool;
  *(unsigned char *)(v82 + 72) = v98;
  *(void *)(v82 + 136) = &type metadata for Bool;
  *(void *)(v82 + 144) = &protocol witness table for Bool;
  *(unsigned char *)(v82 + 112) = v46 != 0;
  *(void *)(v82 + 176) = &type metadata for Bool;
  *(void *)(v82 + 184) = &protocol witness table for Bool;
  *(unsigned char *)(v82 + 152) = v103;
  *(void *)(v82 + 216) = &type metadata for Bool;
  *(void *)(v82 + 224) = &protocol witness table for Bool;
  *(unsigned char *)(v82 + 192) = v52;
  uint64_t v84 = 0x1000000000000;
  if (!v66[6]) {
    uint64_t v84 = 0;
  }
  uint64_t v85 = 0x10000000000;
  if (!v66[5]) {
    uint64_t v85 = 0;
  }
  uint64_t v86 = &_mh_execute_header;
  if (!v66[4]) {
    uint64_t v86 = 0;
  }
  if (v66[3]) {
    uint64_t v87 = 0x1000000;
  }
  else {
    uint64_t v87 = 0;
  }
  uint64_t v88 = *v66;
  if (v66[2]) {
    uint64_t v89 = 0x10000;
  }
  else {
    uint64_t v89 = 0;
  }
  if (v66[1]) {
    uint64_t v90 = 256;
  }
  else {
    uint64_t v90 = 0;
  }
  *(void *)(v82 + 256) = &type metadata for Bool;
  *(void *)(v82 + 264) = &protocol witness table for Bool;
  uint64_t v91 = v90 | v88 | v89 | v87 | (unint64_t)v86 | v85 | v84;
  *(unsigned char *)(v82 + 232) = v108;
  id v92 = v81;
  uint64_t v93 = sub_100054304(v91);
  uint64_t v95 = v94;
  v83[37] = &type metadata for String;
  unint64_t v96 = sub_1000AA64C();
  v83[34] = v93;
  v83[35] = v95;
  v83[42] = &type metadata for Int;
  v83[43] = &protocol witness table for Int;
  v83[38] = v96;
  v83[39] = v80;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)sub_10002A3AC();
  if (v80 != v73)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong onboardingCoordinatorPhaseDidChangeTo:v80];
      uint64_t Strong = (void *)swift_unknownObjectRelease();
    }
  }
  if (v80 == 5)
  {
    __chkstk_darwin(Strong);
    dispatch thunk of UnfairLock.acquire<A>(_:)();
  }
}

uint64_t sub_1000664E4(uint64_t a1)
{
  if ((a1 & 0x1010000000000) != 0) {
    return 5;
  }
  if ((a1 & 0x100) != 0 || (a1 & 0x1010000) == 0x1010000)
  {
    if ((a1 & 1) == 0)
    {
      if ((a1 & 0x100000000) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      unsigned int v4 = 0;
LABEL_15:
      id v7 = [self standardUserDefaults];
      NSString v8 = String._bridgeToObjectiveC()();
      [v7 setBool:1 forKey:v8];

      return v4;
    }
    if ((a1 & 0x100000000) == 0)
    {
      unsigned int v4 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = (uint64_t)[self sharedBehavior];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v3 = (void *)result;
    unsigned int v4 = [(id)result isStandalonePhoneFitnessMode];

    if ((a1 & 1) == 0)
    {
      if ((a1 & 0x100000000) != 0)
      {
LABEL_8:
        id v5 = [self standardUserDefaults];
        NSString v6 = String._bridgeToObjectiveC()();
        [v5 setBool:1 forKey:v6];

        return 2;
      }
      goto LABEL_11;
    }
    if ((a1 & 0x100000000) == 0) {
      goto LABEL_15;
    }
    if (!v4)
    {
      id v12 = [self standardUserDefaults];
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 setBool:1 forKey:v13];

      return 3;
    }
  }
  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11) {
    return 5;
  }
  else {
    return 4;
  }
}

uint64_t sub_10006675C()
{
  uint64_t v1 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100960058);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100960060);
  __chkstk_darwin(v8);
  NSString v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v11 = sub_1000AFA94(&qword_1009665C0);
  sub_10009F78C(v0, &v7[*(int *)(v11 + 44)]);
  uint64_t v12 = static Alignment.center.getter();
  sub_100096374(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v12, v13);
  sub_10008DB18((uint64_t)v7, &qword_100960058);
  static AccessibilityChildBehavior.combine.getter();
  sub_100066984();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v10, &qword_100960060);
}

unint64_t sub_100066984()
{
  unint64_t result = qword_1009665C8;
  if (!qword_1009665C8)
  {
    sub_1000A1370(&qword_100960060);
    sub_1000E06A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009665C8);
  }
  return result;
}

void sub_100066A00(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100066A68(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10007E2D8(0, &qword_100950210);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100066AFC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100066B14(uint64_t a1)
{
  return sub_100066AFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100066B2C);
}

uint64_t sub_100066B2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  sub_1000AFA94(&qword_10094D178);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = static EngagementConstants.badgeNewFeaturesIdentifier.getter();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_100066D1C(v10, inited);
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v11 + 2);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_10074E640;
  *(void *)(v13 + 32) = static EngagementConstants.badgeOffersIdentifier.getter();
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = static EngagementConstants.badgeHardwareOfferIdentifier.getter();
  *(void *)(v13 + 56) = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_100066D1C(v16, v13);
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v17 + 2);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  uint64_t v20 = v12 + v18;
  if (__OFADD__(v12, v18))
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = v21 - v20;
  if (__OFSUB__(v21, v20))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v23 = static EngagementConstants.notificationNewFeaturesTopic.getter();
  char v25 = sub_100067018(a4, a1, v23, v24);
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0) {
    uint64_t v12 = 0;
  }
  uint64_t v26 = static EngagementConstants.notificationOffersTopic.getter();
  char v28 = sub_100067018(a4, a1, v26, v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = v22 + v12;
  if (__OFADD__(v22, v12)) {
    goto LABEL_13;
  }
  if (v28) {
    uint64_t v30 = v18;
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t result = v29 + v30;
  if (!__OFADD__(v29, v30)) {
    return a5(result);
  }
LABEL_14:
  __break(1u);
  return result;
}

char *sub_100066D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EngagementBadge();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v33 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v26 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v43 = (char *)_swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v12 = 0;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v38 = *(void *)(v13 + 56);
    v26[1] = v2;
    unint64_t v27 = v15;
    uint64_t v35 = a1 + v15;
    uint64_t v36 = v14;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v34 = (void (**)(char *, uint64_t))(v13 - 8);
    char v28 = (uint64_t *)(a2 + 40);
    uint64_t v30 = v5;
    uint64_t v31 = a2;
    uint64_t v29 = v13;
    v14(v10, a1 + v15, v5);
    while (1)
    {
      uint64_t v16 = *(void *)(a2 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain();
        unint64_t v17 = v28;
        while (1)
        {
          uint64_t v18 = *(v17 - 1);
          uint64_t v19 = *v17;
          swift_bridgeObjectRetain();
          uint64_t v41 = EngagementBadge.identifier.getter();
          uint64_t v42 = v20;
          uint64_t v39 = v18;
          uint64_t v40 = v19;
          sub_1000A06D0();
          char v21 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            break;
          }
          v17 += 2;
          if (!--v16)
          {
            a2 = v31;
            swift_bridgeObjectRelease();
            uint64_t v5 = v30;
            goto LABEL_3;
          }
        }
        a2 = v31;
        swift_bridgeObjectRelease();
        uint64_t v22 = *v32;
        uint64_t v5 = v30;
        (*v32)(v33, v10, v30);
        uint64_t v23 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C8FEC(0, *((void *)v23 + 2) + 1, 1);
          uint64_t v23 = v43;
        }
        unint64_t v25 = *((void *)v23 + 2);
        unint64_t v24 = *((void *)v23 + 3);
        if (v25 >= v24 >> 1)
        {
          sub_1001C8FEC(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v43;
        }
        *((void *)v23 + 2) = v25 + 1;
        v22(&v23[v27 + v25 * v38], v33, v5);
        uint64_t v43 = v23;
      }
      else
      {
LABEL_3:
        (*v34)(v10, v5);
      }
      if (++v12 == v37) {
        return v43;
      }
      v36(v10, v35 + v38 * v12, v5);
    }
  }
  return result;
}

uint64_t sub_100067018(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1000DA1C0(a3, a4);
    if (v16)
    {
      id v17 = *(id *)(*(void *)(a2 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      if ([v17 badgeSetting] == (id)2)
      {

        return 1;
      }
      static Log.engagement.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v28 = v26;
        *(_DWORD *)unint64_t v24 = 136315138;
        unint64_t v25 = v24 + 4;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_10008F1F4(a3, a4, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Engagement app badging disabled: %s", v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      return 0;
    }
    swift_bridgeObjectRelease();
  }
  if ([a1 badgeSetting] == (id)2) {
    return 1;
  }
  static Log.engagement.getter();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    char v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Engagement overall app badging disabled", v21, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return 0;
}

uint64_t sub_10006735C(uint64_t a1)
{
  return sub_100066AFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100067374);
}

void sub_100067374(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a3;
  v12[3] = a4;
  v12[4] = a1;
  uint64_t v12[5] = a5;
  void v12[6] = a6;
  v16[4] = sub_100066B14;
  void v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100066A68;
  v16[3] = &unk_1008BBC80;
  uint64_t v13 = _Block_copy(v16);
  id v14 = a3;
  swift_bridgeObjectRetain();
  id v15 = a1;
  swift_retain();
  swift_release();
  [a2 getNotificationSettingsForTopicsWithCompletionHandler:v13];
  _Block_release(v13);
}

uint64_t sub_10006748C(uint64_t a1)
{
  return sub_100067498(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100067498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v21 = static OS_dispatch_queue.main.getter();
  char v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  void v16[5] = a4;
  void v16[6] = a5;
  aBlock[4] = sub_100070F48;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008BBCD0;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_10008A670(a4);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000677F4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v18 = (void *)v21;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v22);
}

uint64_t sub_1000677AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000677F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006783C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000678CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067914(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006795C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000679A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000679EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067A34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067A7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067B0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067BE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067C2C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067C74()
{
  uint64_t v71 = v0;
  os_log_type_t v1 = static os_log_type_t.default.getter();
  uint64_t v2 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    char v64 = *(unsigned char *)(v0 + 193);
    char v3 = *(unsigned char *)(v0 + 192);
    log = v2;
    uint64_t v4 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 48) = sub_10008F1F4(v5, v6, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v7 = sub_10007D644(v3);
    *(void *)(v0 + 56) = sub_10008F1F4(v7, v8, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2080;
    uint64_t v9 = *(void *)(v0 + 88);
    if (v64)
    {
      if (v9)
      {
        if (v9 == 1)
        {
          uint64_t v11 = 0x6565772073696874;
          unint64_t v12 = 0xE90000000000006BLL;
        }
        else
        {
          uint64_t v11 = 0x6E6F6D2073696874;
          unint64_t v12 = 0xEA00000000006874;
        }
      }
      else
      {
        unint64_t v12 = 0xE500000000000000;
        uint64_t v11 = 0x7961646F74;
      }
    }
    else
    {
      uint64_t v69 = 0x2072616579;
      unint64_t v70 = 0xE500000000000000;
      *(void *)(v0 + 64) = v9;
      v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      uint64_t v11 = v69;
      unint64_t v12 = v70;
    }
    *(void *)(v0 + 72) = sub_10008F1F4(v11, v12, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v1, "%s fetchQuantitySample for %s in %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  id v13 = sub_1000684A0(*(unsigned char *)(v0 + 192));
  *(void *)(v0 + 144) = v13;
  if (!v13) {
    goto LABEL_13;
  }
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 112);
  sub_1000C3140(*(unsigned int (**)(char *, uint64_t, uint64_t))(v0 + 88), *(unsigned char *)(v0 + 193) & 1, v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) == 1)
  {
    uint64_t v18 = *(void *)(v0 + 112);

    sub_10008DB18(v18, (uint64_t *)&unk_1009546B0);
LABEL_13:
    os_log_type_t v19 = static os_log_type_t.error.getter();
    uint64_t v20 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v19))
    {
      char v65 = *(unsigned char *)(v0 + 193);
      char v21 = *(unsigned char *)(v0 + 192);
      loga = v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v23 = _typeName(_:qualified:)();
      *(void *)(v0 + 16) = sub_10008F1F4(v23, v24, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = sub_10007D644(v21);
      *(void *)(v0 + 24) = sub_10008F1F4(v25, v26, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      uint64_t v27 = *(void *)(v0 + 88);
      if (v65)
      {
        uint64_t v46 = 0x6565772073696874;
        unint64_t v47 = 0xE90000000000006BLL;
        if (v27 != 1)
        {
          uint64_t v46 = 0x6E6F6D2073696874;
          unint64_t v47 = 0xEA00000000006874;
        }
        if (v27) {
          uint64_t v29 = v46;
        }
        else {
          uint64_t v29 = 0x7961646F74;
        }
        if (v27) {
          unint64_t v30 = v47;
        }
        else {
          unint64_t v30 = 0xE500000000000000;
        }
      }
      else
      {
        uint64_t v69 = 0x2072616579;
        unint64_t v70 = 0xE500000000000000;
        *(void *)(v0 + 32) = v27;
        v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v28);
        swift_bridgeObjectRelease();
        uint64_t v29 = v69;
        unint64_t v30 = v70;
      }
      *(void *)(v0 + 40) = sub_10008F1F4(v29, v30, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, loga, v19, "%s error fetchQuantitySample for %s in %s: invalid sample type or date interval", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v48 = *(void *)(v0 + 80);
    uint64_t v49 = type metadata accessor for MetricDetailViewModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1, v49);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
    return v50();
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 112), *(void *)(v0 + 120));
  uint64_t v31 = self;
  id v32 = [v31 _predicateForObjectsFromAppleWatches];
  *(void *)(v0 + 152) = v32;
  Class isa = DateInterval._bridgeToObjectiveC()().super.isa;
  id v34 = [v31 predicateForSamplesWithinDateInterval:isa options:0];
  *(void *)(v0 + 160) = v34;

  id v35 = [self sharedBehavior];
  if (v35)
  {
    uint64_t v43 = v35;
    unsigned int v44 = [v35 isStandalonePhoneFitnessMode];

    if (v44)
    {
      id v45 = v34;
    }
    else
    {
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_100756B20;
      *(void *)(v52 + 32) = v34;
      *(void *)(v52 + 40) = v32;
      uint64_t v69 = v52;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_100954700);
      id v53 = v34;
      id v54 = v32;
      Class v55 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v45 = [self andPredicateWithSubpredicates:v55];
    }
    *(void *)(v0 + 168) = v45;
    uint64_t v56 = *(void *)(v0 + 136);
    uint64_t v58 = *(void *)(v0 + 96);
    uint64_t v57 = *(void *)(v0 + 104);
    char v59 = *(unsigned char *)(v0 + 193);
    uint64_t v60 = *(void *)(v0 + 88);
    char v61 = *(unsigned char *)(v0 + 192);
    uint64_t v62 = swift_task_alloc();
    *(void *)(v0 + 176) = v62;
    *(void *)(v62 + 16) = v14;
    *(void *)(v62 + 24) = v45;
    *(unsigned char *)(v62 + 32) = v61;
    *(void *)(v62 + 40) = v60;
    *(unsigned char *)(v62 + 48) = v59 & 1;
    *(void *)(v62 + 56) = v58;
    *(void *)(v62 + 64) = v56;
    *(void *)(v62 + 72) = v57;
    id v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v63;
    uint64_t v42 = sub_1000AFA94((uint64_t *)&unk_100955590);
    *id v63 = v0;
    v63[1] = sub_10001B7C8;
    id v35 = *(id *)(v0 + 80);
    unint64_t v39 = 0x80000001007C88D0;
    uint64_t v40 = sub_10004AC28;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    unint64_t v38 = 0xD000000000000026;
    uint64_t v41 = v62;
  }
  else
  {
    __break(1u);
  }
  return withCheckedContinuation<A>(isolation:function:_:)(v35, v36, v37, v38, v39, v40, v41, v42);
}

id sub_1000684A0(unsigned __int8 a1)
{
  if (a1 > 3u) {
    return 0;
  }
  os_log_type_t v1 = *(&off_1008D89F0 + (char)a1);
  sub_10007E2D8(0, (unint64_t *)&unk_10095B860);
  return [(id)swift_getObjCClassFromMetadata() quantityTypeForIdentifier:*v1];
}

uint64_t sub_100068518()
{
  id v45 = v0;
  os_log_type_t v1 = v0;
  char v3 = v0 + 9;
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[17];
  sub_1000689F4(v0[18], v2);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  unint64_t v6 = HKLogActivity;
  sub_1000AEF2C(v2, v4, (uint64_t *)&unk_100955590);
  if (os_log_type_enabled(v6, v5))
  {
    os_log_type_t v41 = v5;
    char v7 = *((unsigned char *)v1 + 177);
    char v8 = *((unsigned char *)v1 + 176);
    uint64_t v40 = v6;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315906;
    uint64_t v10 = _typeName(_:qualified:)();
    v1[4] = sub_10008F1F4(v10, v11, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v12 = sub_10007D644(v8);
    v1[5] = sub_10008F1F4(v12, v13, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    uint64_t v14 = v1[11];
    if (v7)
    {
      if (v14)
      {
        if (v14 == 1)
        {
          unint64_t v17 = 0xE90000000000006BLL;
          uint64_t v16 = 0x6565772073696874;
        }
        else
        {
          unint64_t v17 = 0xEA00000000006874;
          uint64_t v16 = 0x6E6F6D2073696874;
        }
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v16 = 0x7961646F74;
      }
    }
    else
    {
      uint64_t v43 = 0x2072616579;
      unint64_t v44 = 0xE500000000000000;
      *(v3 - 3) = v14;
      v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      uint64_t v16 = v43;
      unint64_t v17 = v44;
    }
    uint64_t v18 = v1[17];
    uint64_t v20 = v1[14];
    uint64_t v19 = v1[15];
    v1[7] = sub_10008F1F4(v16, v17, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 32) = 2080;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v18, 1, v20))
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    else
    {
      char v23 = *((unsigned char *)v1 + 176);
      sub_1000A3BF0(v1[17], v1[16]);
      char v24 = 1;
      if (((1 << v23) & 0x5DDBB8E070) != 0)
      {
        char v24 = 0;
      }
      else if (((1 << v23) & 0x2224471F80) == 0)
      {
        char v24 = (*((unsigned char *)v1 + 177) & 1) == 0;
      }
      uint64_t v25 = v1[16];
      uint64_t v21 = sub_100068A5C(v24);
      uint64_t v22 = v26;
      sub_10006A4B8(v25, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    }
    uint64_t v27 = v1[17];
    v1[2] = v21;
    v1[3] = v22;
    sub_1000AFA94((uint64_t *)&unk_100958790);
    uint64_t v28 = Optional.description.getter();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    v1[8] = sub_10008F1F4(v28, v30, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10008DB18(v27, (uint64_t *)&unk_100955590);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s fetchData returned for %s in %s: %s", (uint8_t *)v9, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10008DB18(v1[17], (uint64_t *)&unk_100955590);
  }
  char v31 = *((unsigned char *)v1 + 179);
  uint64_t v32 = v1[12];
  char v33 = *((unsigned char *)v1 + 178);
  char v34 = *((unsigned char *)v1 + 176);
  uint64_t v35 = v1[9];
  uint64_t v36 = v1[10];
  uint64_t v37 = swift_task_alloc();
  *(void *)(v37 + 16) = v36;
  *(unsigned char *)(v37 + 24) = v33;
  *(void *)(v37 + 32) = v32;
  *(unsigned char *)(v37 + 40) = v31 & 1;
  *(void *)(v37 + 48) = v35;
  *(unsigned char *)(v37 + 56) = v34;
  dispatch thunk of UnfairLock.acquire<A>(_:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v38 = (uint64_t (*)(void))v1[1];
  return v38();
}

uint64_t sub_1000689F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_100955590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100068A5C(char a1)
{
  if (a1)
  {
    uint64_t v9 = 0x3A65676172657661;
    id v2 = v1[1];
  }
  else
  {
    uint64_t v9 = 0x203A6C61746F74;
    id v2 = *v1;
  }
  id v3 = [v2 description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease();
  return v9;
}

id sub_100068B58()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InvitationDestinationCache();
  id v5 = v0;
  sub_100069404((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v6 = InvitationDestinationCache.__allocating_init(invitationDestinationMap:)();
  uint64_t v16 = v4;
  unint64_t v17 = &protocol witness table for InvitationDestinationCache;
  uint64_t v15 = v6;
  InvitationDestinationService.init(cache:)();
  SecureCloudClient.init()();

  Swift::String v7 = (objc_class *)type metadata accessor for InvitationDestinationCoordinator();
  v14.receiver = v5;
  v14.super_class = v7;
  id v8 = [super init];
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  sub_1000693DC((uint64_t)v3, (uint64_t)&unk_100965638, (uint64_t)v11);
  swift_release();
  return v8;
}

uint64_t sub_100068D00()
{
  uint64_t v40 = v0;
  uint64_t v1 = v0 + 16;
  os_log_type_t v2 = static os_log_type_t.default.getter();
  id v3 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    char v34 = *(unsigned char *)(v0 + 129);
    char v4 = *(unsigned char *)(v0 + 128);
    log = v3;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    uint64_t v6 = _typeName(_:qualified:)();
    *(void *)(v0 + 24) = sub_10008F1F4(v6, v7, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = sub_10007D644(v4);
    *(void *)(v0 + 32) = sub_10008F1F4(v8, v9, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    uint64_t v10 = *(void *)(v0 + 64);
    if (v34)
    {
      uint64_t v1 = v0 + 16;
      if (v10)
      {
        if (v10 == 1)
        {
          unint64_t v13 = 0xE90000000000006BLL;
          uint64_t v12 = 0x6565772073696874;
        }
        else
        {
          unint64_t v13 = 0xEA00000000006874;
          uint64_t v12 = 0x6E6F6D2073696874;
        }
      }
      else
      {
        unint64_t v13 = 0xE500000000000000;
        uint64_t v12 = 0x7961646F74;
      }
    }
    else
    {
      uint64_t v38 = 0x2072616579;
      unint64_t v39 = 0xE500000000000000;
      *(void *)(v0 + 40) = v10;
      v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      uint64_t v12 = v38;
      unint64_t v13 = v39;
      uint64_t v1 = v0 + 16;
    }
    *(void *)(v0 + 48) = sub_10008F1F4(v12, v13, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "%s fetchData for %s in %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  char v14 = *(unsigned char *)(v0 + 129);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 72);
  char v17 = *(unsigned char *)(v0 + 128);
  *(void *)(v0 + 16) = 0;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v18 + 16) = v1;
  *(void *)(v18 + 24) = v15;
  *(unsigned char *)(v18 + 32) = v17;
  *(void *)(v18 + 40) = v16;
  *(unsigned char *)(v18 + 48) = v14 & 1;
  dispatch thunk of UnfairLock.acquire<A>(_:)();
  swift_task_dealloc();
  uint64_t v19 = *(void *)(v0 + 16);
  *(void *)(v0 + 96) = v19;
  if (v19)
  {
    swift_retain();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v20;
    uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_100955590);
    void *v20 = v0;
    uint64_t v22 = sub_1004346E4;
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 88);
    uint64_t v36 = *(void *)(v0 + 80);
    char v24 = *(unsigned char *)(v0 + 129);
    uint64_t v26 = *(void *)(v0 + 64);
    uint64_t v25 = *(void **)(v0 + 72);
    char v27 = *(unsigned char *)(v0 + 128);
    uint64_t v28 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 1, 1, v28);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    *(unsigned char *)(v29 + 32) = v27;
    *(void *)(v29 + 40) = v25;
    *(void *)(v29 + 48) = v26;
    v24 &= 1u;
    *(unsigned char *)(v29 + 56) = v24;
    *(unsigned char *)(v29 + 64) = v27;
    *(void *)(v29 + 72) = v26;
    *(unsigned char *)(v29 + 80) = v24;
    *(void *)(v29 + 88) = v36;
    id v30 = v25;
    uint64_t v19 = sub_1000693B4(v23, (uint64_t)&unk_10095C518, v29);
    *(void *)(v0 + 112) = v19;
    uint64_t v31 = swift_task_alloc();
    *(void *)(v31 + 16) = v30;
    *(unsigned char *)(v31 + 24) = v27;
    *(void *)(v31 + 32) = v26;
    *(unsigned char *)(v31 + 40) = v24;
    *(void *)(v31 + 48) = v19;
    dispatch thunk of UnfairLock.acquire<A>(_:)();
    swift_task_dealloc();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v20;
    uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_100955590);
    void *v20 = v0;
    uint64_t v22 = sub_1000135B0;
  }
  v20[1] = v22;
  uint64_t v32 = *(void *)(v0 + 56);
  return Task<>.value.getter(v32, v19, v21);
}

uint64_t sub_100069204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10008DB18(a1, &qword_10094B7A0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_1000AFA94(a5);
  return swift_task_create();
}

uint64_t sub_1000693B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100069204(a1, a2, a3, (uint64_t)&unk_1008BFC30, (uint64_t *)&unk_100955590);
}

uint64_t sub_1000693DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100069204(a1, a2, a3, (uint64_t)&unk_1008BFC08, (uint64_t *)&unk_1009668A0);
}

unint64_t sub_100069404(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    os_log_type_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100965640);
  os_log_type_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100351A74(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for InvitationDestinationCoordinator()
{
  uint64_t result = qword_1009655D8;
  if (!qword_1009655D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006956C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000695CC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_10006961C()
{
  unint64_t result = qword_10096B300;
  if (!qword_10096B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B300);
  }
  return result;
}

uint64_t initializeWithCopy for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  id v7 = v4;
  if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t sub_1000696FC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  id v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_10007E2D8(0, &qword_100950760);
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000697B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1000AFA94(&qword_10095C508) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(type metadata accessor for DateInterval() - 8);
  return sub_1000698EC(a1, a2, a3, *(unsigned __int8 *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), v3 + v8, *(void **)(v3 + v9), v3 + ((v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
}

uint64_t sub_1000698EC(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v85 = a8;
  uint64_t v92 = a7;
  LODWORD(v10) = a4;
  uint64_t v13 = a6 & 1;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v14 - 8);
  uint64_t v91 = &v82[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v90 = type metadata accessor for MetricDetailViewModel();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  char v17 = &v82[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v98 = type metadata accessor for Date();
  uint64_t v18 = *(char **)(v98 - 8);
  __chkstk_darwin(v98);
  char v97 = &v82[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = type metadata accessor for DateComponents();
  uint64_t v93 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  os_log_t v100 = (os_log_t)&v82[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2) {
    goto LABEL_5;
  }
  unint64_t v99 = (unint64_t)sub_100699E94(a2);
  if (!v99) {
    goto LABEL_5;
  }
  if (a3)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    int v21 = static os_log_type_t.error.getter();
    uint64_t v22 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, (os_log_type_t)v21))
    {
      LODWORD(v99) = v21;
      swift_errorRetain();
      swift_errorRetain();
      os_log_t v100 = v22;
      uint64_t v23 = swift_slowAlloc();
      v104[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315906;
      uint64_t v24 = _typeName(_:qualified:)();
      double v102 = COERCE_DOUBLE(sub_10008F1F4(v24, v25, v104));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = sub_10007D644(v10);
      double v102 = COERCE_DOUBLE(sub_10008F1F4(v26, v27, v104));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      if (v13)
      {
        unint64_t v28 = 0xE90000000000006BLL;
        uint64_t v29 = 0x6565772073696874;
        if (a5 != 1)
        {
          uint64_t v29 = 0x6E6F6D2073696874;
          unint64_t v28 = 0xEA00000000006874;
        }
        if (a5) {
          uint64_t v30 = v29;
        }
        else {
          uint64_t v30 = 0x7961646F74;
        }
        if (a5) {
          unint64_t v31 = v28;
        }
        else {
          unint64_t v31 = 0xE500000000000000;
        }
      }
      else
      {
        *(void *)&double v102 = 0x2072616579;
        unint64_t v103 = 0xE500000000000000;
        uint64_t v101 = a5;
        v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v32);
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)&v102;
        unint64_t v31 = v103;
      }
      double v102 = COERCE_DOUBLE(sub_10008F1F4(v30, v31, v104));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      if (a3)
      {
        swift_getErrorValue();
        *(double *)&uint64_t v33 = COERCE_DOUBLE(Error.localizedDescription.getter());
        unint64_t v35 = v34;
      }
      else
      {
        *(double *)&uint64_t v33 = 0.0;
        unint64_t v35 = 0;
      }
      double v102 = *(double *)&v33;
      unint64_t v103 = v35;
      sub_1000AFA94((uint64_t *)&unk_100958790);
      uint64_t v36 = Optional.description.getter();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      double v102 = COERCE_DOUBLE(sub_10008F1F4(v36, v38, v104));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v39 = v100;
      _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v99, "%s error fetchQuantitySample for %s in %s: %s", (uint8_t *)v23, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v91, 1, 1, v90);
    sub_1000AFA94(&qword_10095C508);
    return CheckedContinuation.resume(returning:)();
  }
  double v102 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
  if (v99 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v84 = v17;
  if (v41)
  {
    int v83 = v10;
    uint64_t v94 = (void (**)(uint64_t, uint64_t))(v18 + 8);
    unint64_t v95 = v99 & 0xC000000000000001;
    uint64_t v88 = v93 + 32;
    uint64_t v87 = (void (**)(os_log_t, uint64_t))(v93 + 8);
    double v42 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
    uint64_t v10 = 4;
    long long v86 = xmmword_100751040;
    char v17 = (unsigned char *)a5;
    while (1)
    {
      if (v95) {
        unint64_t v44 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v44 = (char *)*(id *)(v99 + 8 * v10);
      }
      uint64_t v18 = v44;
      uint64_t v45 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      id v46 = [v44 startDate];
      uint64_t v47 = (uint64_t)v97;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      os_log_t v48 = v100;
      a5 = v13;
      sub_1000C64AC(v47, (uint64_t)v17, v13, (uint64_t)v100);
      (*v94)(v47, v98);
      unint64_t v50 = sub_100529888((uint64_t)v48);
      uint64_t v51 = *(void *)(*(void *)&v42 + 16);
      BOOL v52 = (v49 & 1) == 0;
      uint64_t v53 = v51 + v52;
      if (__OFADD__(v51, v52)) {
        goto LABEL_47;
      }
      uint64_t v13 = v49;
      if (*(void *)(*(void *)&v42 + 24) < v53)
      {
        sub_1004EC094(v53, 1);
        double v42 = v102;
        unint64_t v54 = sub_100529888((uint64_t)v100);
        if ((v13 & 1) != (v55 & 1))
        {
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v50 = v54;
      }
      if (v13)
      {
        (*v87)(v100, v96);
        double v42 = v102;
        uint64_t v43 = (void *)(*(void *)(*(void *)&v102 + 56) + 8 * v50);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        sub_1000AFA94((uint64_t *)&unk_10095B850);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = v86;
        *(void *)(v56 + 32) = v18;
        v104[0] = v56;
        specialized Array._endMutation()();
        uint64_t v57 = v104[0];
        *(void *)(*(void *)&v42 + 8 * (v50 >> 6) + 64) |= 1 << v50;
        (*(void (**)(unint64_t, os_log_t, uint64_t))(v93 + 32))(*(void *)(*(void *)&v42 + 48) + *(void *)(v93 + 72) * v50, v100, v96);
        *(void *)(*(void *)(*(void *)&v42 + 56) + 8 * v50) = v57;
        uint64_t v58 = *(void *)(*(void *)&v42 + 16);
        BOOL v59 = __OFADD__(v58, 1);
        uint64_t v60 = v58 + 1;
        if (v59) {
          goto LABEL_48;
        }
        *(void *)(*(void *)&v42 + 16) = v60;
      }
      ++v10;
      uint64_t v13 = a5;
      if (v45 == v41)
      {
        a5 = (uint64_t)v17;
        swift_bridgeObjectRelease();
        LODWORD(v10) = v83;
        goto LABEL_42;
      }
    }
  }
  swift_bridgeObjectRelease();
  double v42 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
LABEL_42:
  char v61 = v85;
  id v62 = sub_1000C4F40(v10);
  double v102 = 0.0;
  v104[0] = 0;
  int v63 = v13;
  char v64 = sub_1000C576C(a9, a5, v13);
  swift_retain();
  id v65 = v62;
  id v66 = v61;
  uint64_t v67 = a5;
  id v68 = v66;
  uint64_t v69 = sub_1000B33B8((uint64_t)v64, *(uint64_t *)&v42, v65, &v102, v10, a5, v63, v104, (uint64_t)v66);
  swift_bridgeObjectRelease();
  swift_release_n();

  double v70 = v102;
  if (v104[0] <= 0) {
    double v71 = 0.0;
  }
  else {
    double v71 = v102 / (double)v104[0];
  }
  BOOL v72 = v63 != 0;
  uint64_t v73 = v90;
  uint64_t v74 = (uint64_t)v84;
  uint64_t v75 = &v84[*(int *)(v90 + 36)];
  uint64_t v76 = type metadata accessor for DateInterval();
  uint64_t v77 = *(void *)(v76 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v77 + 16))(v75, a9, v76);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v77 + 56))(v75, 0, 1, v76);
  id v78 = v65;
  Date.init()();
  uint64_t v79 = self;
  *(void *)uint64_t v74 = [v79 quantityWithUnit:v78 doubleValue:v70];
  id v80 = [v79 quantityWithUnit:v78 doubleValue:v71];

  *(void *)(v74 + 8) = v80;
  *(void *)(v74 + 16) = v69;
  *(void *)(v74 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v74 + 32) = v67;
  *(unsigned char *)(v74 + 40) = v72;
  *(unsigned char *)(v74 + *(int *)(v73 + 40)) = 1;
  uint64_t v81 = v91;
  sub_1000A3BF0(v74, (uint64_t)v91);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v89 + 56))(v81, 0, 1, v73);
  sub_1000AFA94(&qword_10095C508);
  CheckedContinuation.resume(returning:)();

  return sub_10006A4B8(v74, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
}

uint64_t sub_10006A3F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006A458(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006A4B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006A518(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10006A578(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void sub_10006A75C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_10006A7FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = (v10 + v8 + v9) & ~v8;
  uint64_t v12 = v11 + v10;
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v12 + 223) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v12 + 239) & 0xFFFFFFFFFFFFFFF8;
  sub_1000AD8F4(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), (void (*)(char *, void))(v3 + v9), v3 + v11, *(void **)(v3 + v13), *(unsigned char *)(v3 + v13 + 8), v3 + v14, *(void **)(v3 + v15), *(unsigned char *)(v3 + v15 + 8), *(void *)(v3 + v16), *(void **)(v3 + v16 + 8), *(void *)(v3 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v3 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_10006A924(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 24) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = (v10 + v8 + v9) & ~v8;
  uint64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = *(void *)(v3 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10006A9EC(a1, a2, a3, v12, v3 + v9, v3 + v11, v13);
}

void sub_10006A9EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  if (a2)
  {
    v79[2] = a4;
    uint64_t v80 = a7;
    int v83 = (char *)v79 - v16;
    uint64_t v84 = v17;
    uint64_t v18 = swift_allocObject();
    uint64_t v82 = a6;
    *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
    uint64_t v19 = v18 + 16;
    id v20 = a2;
    uint64_t v81 = a5;
    id v21 = v20;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v23 = Date._bridgeToObjectiveC()().super.isa;
    v96[4] = sub_100087714;
    v96[5] = v18;
    v96[0] = _NSConcreteStackBlock;
    v96[1] = 1107296256;
    v96[2] = sub_1000873C4;
    v96[3] = &unk_1008BF278;
    uint64_t v24 = _Block_copy(v96);
    v79[1] = v18;
    swift_retain();
    swift_release();
    v79[0] = v21;
    [v21 enumerateStatisticsFromDate:isa toDate:v23 withBlock:v24];
    _Block_release(v24);

    swift_beginAccess();
    uint64_t v25 = *(void *)(*(void *)(v18 + 16) + 16);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unint64_t v27 = v83;
    v26(v83, v81, v13);
    uint64_t v28 = v84;
    v26((char *)v84, v82, v13);
    Date.timeIntervalSinceReferenceDate.getter();
    double v30 = v29;
    uint64_t v31 = v28;
    Date.timeIntervalSinceReferenceDate.getter();
    sub_100087AC8(v25, (uint64_t)v97, v30, v32);
    uint64_t v33 = (void *)v97[0];
    uint64_t v34 = v97[1];
    unint64_t v35 = (char *)v97[2];
    double v36 = v98;
    double v37 = v99;
    double v38 = v100;
    double v39 = v101;
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v40(v31, v13);
    v40((uint64_t)v27, v13);
    uint64_t v84 = v19;
    uint64_t v41 = *(void *)v19;
    uint64_t v42 = *(void *)(*(void *)v19 + 16);
    double v43 = 0.0;
    if (v42)
    {
      uint64_t v82 = v34;
      int v83 = v35;
      unint64_t v44 = (void *)v97[0];
      double v45 = v98;
      double v46 = v100;
      swift_bridgeObjectRetain();
      uint64_t v47 = 0;
      unint64_t v48 = 0;
      uint64_t v49 = (double *)(v41 + 40);
      do
      {
        if ((*(unsigned char *)v49 & 1) == 0 && v48 < v44[2])
        {
          double v50 = *(v49 - 1);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v33 = v44;
          }
          else {
            uint64_t v33 = sub_1005EC1D4(v44);
          }
          if (v48 >= v33[2])
          {
            __break(1u);
            return;
          }
          uint64_t v51 = (double *)&v33[v47];
          v51[4] = v50;
          v51[5] = 1.0;
          *((unsigned char *)v51 + 48) = 0;
          if (v45 < v50)
          {
            double v36 = v50;
            double v37 = 1.0;
            double v45 = v50;
          }
          if (v46 < 0.0 || v46 > v50)
          {
            double v39 = 1.0;
            double v38 = v50;
            double v46 = v50;
          }
          unint64_t v44 = v33;
        }
        ++v48;
        v49 += 2;
        v47 += 3;
      }
      while (v42 != v48);
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)v84;
      uint64_t v53 = *(void *)(*(void *)v84 + 16);
      if (!v53)
      {
        uint64_t v60 = _swiftEmptyArrayStorage;
        char v61 = (void *)v79[0];
        unint64_t v35 = v83;
LABEL_46:
        uint64_t v34 = v82;
        goto LABEL_47;
      }
      unint64_t v35 = v83;
      if (v53 == 1)
      {
        uint64_t v54 = 0;
        double v43 = 0.0;
      }
      else
      {
        uint64_t v54 = v53 & 0x7FFFFFFFFFFFFFFELL;
        id v62 = (double *)(v52 + 56);
        uint64_t v63 = v53 & 0x7FFFFFFFFFFFFFFELL;
        double v43 = 0.0;
        do
        {
          double v64 = *(v62 - 3);
          double v65 = *(v62 - 1);
          int v66 = *((unsigned __int8 *)v62 - 16);
          int v68 = *(unsigned __int8 *)v62;
          v62 += 4;
          int v67 = v68;
          if (v66) {
            double v64 = 0.0;
          }
          if (v67) {
            double v65 = 0.0;
          }
          double v43 = v43 + v64 + v65;
          v63 -= 2;
        }
        while (v63);
        if (v53 == v54) {
          goto LABEL_37;
        }
      }
      uint64_t v69 = v53 - v54;
      double v70 = (double *)(v52 + 16 * v54 + 40);
      do
      {
        double v71 = *(v70 - 1);
        int v72 = *(unsigned __int8 *)v70;
        v70 += 2;
        if (v72) {
          double v71 = 0.0;
        }
        double v43 = v43 + v71;
        --v69;
      }
      while (v69);
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v73 = (unsigned char *)(v52 + 40);
      uint64_t v60 = _swiftEmptyArrayStorage;
      do
      {
        if ((*v73 & 1) == 0)
        {
          uint64_t v74 = *((void *)v73 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v60 = sub_100087DFC(0, v60[2] + 1, 1, v60);
          }
          unint64_t v76 = v60[2];
          unint64_t v75 = v60[3];
          if (v76 >= v75 >> 1) {
            uint64_t v60 = sub_100087DFC((void *)(v75 > 1), v76 + 1, 1, v60);
          }
          v60[2] = v76 + 1;
          v60[v76 + 4] = v74;
        }
        v73 += 16;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      char v61 = (void *)v79[0];
      goto LABEL_46;
    }
    uint64_t v60 = _swiftEmptyArrayStorage;
    char v61 = (void *)v79[0];
LABEL_47:
    uint64_t v77 = v80 + 16;
    uint64_t v78 = v60[2];
    swift_bridgeObjectRelease();
    sub_100087AC8(7, (uint64_t)v102, 0.0, 6.0);
    sub_100087AC8(7, (uint64_t)v103, 0.0, 6.0);
    swift_bridgeObjectRetain_n();
    sub_1000B008C((uint64_t)v102);
    swift_bridgeObjectRetain_n();
    sub_1000B008C((uint64_t)v103);
    swift_bridgeObjectRelease_n();
    *(double *)uint64_t v85 = v43;
    *(double *)&v85[1] = (double)v78;
    v85[2] = v33;
    v85[3] = v34;
    v85[4] = v35;
    *(double *)&v85[5] = v36;
    *(double *)&v85[6] = v37;
    *(double *)&v85[7] = v38;
    *(double *)&v85[8] = v39;
    v85[9] = _swiftEmptyArrayStorage;
    v85[10] = _swiftEmptyArrayStorage;
    v85[12] = 0;
    v85[13] = 0;
    v85[11] = 0x7FF8000000000000;
    long long v86 = xmmword_10075A6E0;
    uint64_t v87 = _swiftEmptyArrayStorage;
    uint64_t v88 = _swiftEmptyArrayStorage;
    uint64_t v89 = 0x7FF8000000000000;
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    unint64_t v92 = 0xBFF0000000000000;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    char v95 = 5;
    ASFriendListDisplayMode.id.getter(v85);
    swift_beginAccess();
    sub_1000AEEC8(v77, (uint64_t)v96, &qword_100954678);
    sub_1000AEEC8((uint64_t)v85, v77, &qword_100954678);
    sub_1000AFF94((uint64_t)v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
    OS_dispatch_semaphore.signal()();
    swift_release();
  }
  else
  {
    if (a3)
    {
      char v55 = (void *)_convertErrorToNSError(_:)();
      static os_log_type_t.error.getter();
      uint64_t v56 = (void *)HKLogActivity;
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1007509E0;
      *(void *)(v57 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100954710);
      *(void *)(v57 + 64) = sub_1002B1A38((unint64_t *)&qword_100955F20, (unint64_t *)&qword_100954710);
      *(void *)(v57 + 32) = v55;
      id v58 = v56;
      id v59 = v55;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
    }
    OS_dispatch_semaphore.signal()();
  }
}

uint64_t sub_10006B35C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_100962158);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v13._countAndFlagsBits = 0xD00000000000006DLL;
  v13._object = (void *)0x80000001007CD810;
  v14._object = (void *)0x80000001007CD950;
  v14._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v13, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v15 = v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v15, (uint64_t)v8);
  int v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR___NLTVConnectionManager_isDiscoveryAllowed);
  uint64_t v17 = *(int *)(v3 + 56);
  sub_10006B7F8((uint64_t)v8, (uint64_t)v5);
  v5[v17] = v16;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    if ((v16 & 1) == 0) {
      sub_10055DF08();
    }
  }
  else if (EnumCaseMultiPayload == 2 && v16 != 0)
  {
    sub_100036E58();
  }
  return sub_10006B590((uint64_t)v5);
}

uint64_t sub_10006B590(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVConnectionManager.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TVConnectionManager.State(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100962108);
}

uint64_t sub_10006B60C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for RemoteParticipant();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_10006B688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVConnectionManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_10006B6EC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for RemoteParticipant();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10006B7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVConnectionManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10006C5DC(uint64_t a1, void *a2, char *a3)
{
  unint64_t v5 = sub_10006C988();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache;
  id v7 = objc_allocWithZone((Class)NSCache);
  uint64_t v8 = a3;
  *(void *)&a3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)NSCache) init];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists] = &_swiftEmptySetSingleton;
  sub_1000AFA94((uint64_t *)&unk_100966998);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient]);
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader]);
  sub_1000AFA94((uint64_t *)&unk_100966950);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_bookmarkClient]);
  sub_1000AFA94(&qword_10095DF90);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient]);
  sub_1000AFA94(&qword_1009669A8);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_configurationClient]);
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  uint64_t v10 = *((void *)&v16[0] + 1);
  uint64_t v11 = &v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_eventHub];
  *(void *)uint64_t v11 = *(void *)&v16[0];
  *((void *)v11 + 1) = v10;
  sub_1000AFA94((uint64_t *)&unk_1009669B0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_mediaTagStringBuilder]);
  sub_1000AFA94(&qword_10095DFA0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  sub_100093E60(v16, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient]);
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  uint64_t v12 = &v8[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_unitPreferencesProvider];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = v5;
  swift_unknownObjectRetain();

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for SeymourCatalogItemDataProvider();
  id v13 = [super init];
  sub_10006CA14();
  swift_getObjectType();
  type metadata accessor for PlaylistsUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();

  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v16);
  swift_release();
  return v13;
}

unint64_t sub_10006C988()
{
  unint64_t result = qword_100966960;
  if (!qword_100966960)
  {
    sub_10007E2D8(255, &qword_100966968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966960);
  }
  return result;
}

uint64_t type metadata accessor for SeymourCatalogItemDataProvider()
{
  return self;
}

uint64_t sub_10006CA14()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_100966890);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v1);
  unint64_t v5 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_1000AFA94(&qword_10095DD50);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC((void *)(v0 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_bookmarkClient), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_bookmarkClient + 24));
  dispatch thunk of BookmarkClientProtocol.queryAllPlaylists()();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10006D420;
  *(void *)(v13 + 24) = v12;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v15 + v14, v5, v1);
  int v16 = (uint64_t (**)(uint64_t *))(v15 + ((v3 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *int v16 = sub_10006D370;
  v16[1] = (uint64_t (*)(uint64_t *))v13;
  sub_1000AFA94((uint64_t *)&unk_1009668A0);
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  uint64_t v17 = v21;
  uint64_t v18 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  v18(sub_10006D36C, v19);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v17);
}

uint64_t sub_10006CD3C(uint64_t a1, uint64_t a2)
{
  return sub_10006CD84(a1, a2, (uint64_t *)&unk_100966890, (uint64_t)&unk_1008C9308, (uint64_t)sub_1000DCCB4);
}

uint64_t sub_10006CD64(uint64_t a1, uint64_t a2)
{
  return sub_1000E30E8(a1, a2, (uint64_t *)&unk_100966890, sub_1000E3078);
}

uint64_t sub_10006CD84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10006CF14(a1, a2, v5 + v12, *(void *)(v5 + v13), *(void *)(v5 + v13 + 8), a3, a4, a5);
}

uint64_t sub_10006CE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v9 = (void (*)(uint64_t (*)(uint64_t), void *))Promise.operation.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a4;
  v10[5] = a5;
  swift_retain();
  swift_retain();
  v9(sub_10006DAC4, v10);
  swift_release();

  return swift_release();
}

uint64_t sub_10006CF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  sub_1000AFA94(a6);
  unint64_t v13 = (void (*)(uint64_t, void *))Promise.operation.getter();
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  void v14[4] = a1;
  v14[5] = a2;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();

  return swift_release();
}

uint64_t sub_10006CFD0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_10006D094(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10006D0D8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void (**)(uint64_t *))(v4 + 16), *(void *)(v4 + 24), *(void (**)(uint64_t *))(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

uint64_t sub_10006D0D8(uint64_t a1, char a2, void (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = sub_1000AFA94(a7);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  if (a2)
  {
    char v22 = 1;
    swift_errorRetain();
    a5(&v21);
    return sub_100496710(a1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v21);
    uint64_t v18 = (void (*)(uint64_t, uint64_t))Promise.operation.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    swift_retain();
    v18(a9, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006D27C(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_10006D288(a1, a2, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_10006D288(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(unsigned __int8 *__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  a3(&v8, &v9);
  uint64_t v6 = v8;
  uint64_t v9 = v8;
  char v10 = 0;
  a1(&v9);

  return sub_10006D814(v6, 0);
}

uint64_t sub_10006D324(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)result;
  char v4 = v2;
  if (a2) {
    return a2(&v3);
  }
  return result;
}

uint64_t sub_10006D370(uint64_t *a1)
{
  return sub_10006D378(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10006D378(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_1009668A0);

  return Promise.init(asyncOperation:)();
}

uint64_t sub_10006D420@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_10006D43C(a1, a2);
}

uint64_t sub_10006D43C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = (void *)result;
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists) = v3;
    swift_bridgeObjectRetain();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v5 == 0;
  return result;
}

uint64_t sub_10006D4D8(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t (*a6)(void), uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = a8;
  double v29 = a4;
  uint64_t v30 = a5;
  v26[1] = a3;
  unint64_t v27 = a2;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a6(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v26 - v18;
  uint64_t v20 = sub_1000AFA94(a7);
  __chkstk_darwin(v20);
  char v22 = (void *)((char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000AEF2C(a1, (uint64_t)v22, a7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v22;
    char v32 = 1;
    swift_errorRetain();
    v29(&v31);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v17 + 32))(v19, v22, v16);
    v27(v19);
    uint64_t v24 = (void (*)(uint64_t, uint64_t))Promise.operation.getter();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v29;
    *(void *)(v25 + 24) = v30;
    swift_retain();
    v24(a9, v25);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
}

uint64_t sub_10006D798(void (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = *(void *)(a3(0) - 8);
  return sub_10006D820(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v3 + 16), *(void *)(v3 + 24), v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_10006D814(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10006D820(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v8, a5);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);

  return sub_10006D814(v6, 0);
}

uint64_t sub_10006D8B4(uint64_t a1)
{
  return sub_10006D324(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_10006D8C0(uint64_t result)
{
  char v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *(unsigned char *)(result + 8);
  uint64_t v4 = *(void *)result;
  char v5 = v3;
  if (v2) {
    return v2(&v4);
  }
  return result;
}

uint64_t sub_10006D908(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, void))
{
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8), v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10006D928(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    a5(a1);
    uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    swift_retain();
    v15(sub_10006D8BC, v16);
    swift_release();
    swift_release();
    sub_10006D814(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v17 = a1;
    char v18 = 0;
    return a3(&v17);
  }
}

uint64_t sub_10006DAC4(uint64_t a1)
{
  return sub_10006D908(a1, (uint64_t (*)(void, void, void, void, void, void))sub_10006D928);
}

uint64_t sub_10006DADC(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94(a2) - 8);
  return sub_10006DB6C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_10006DB6C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v29 = a7;
  int v28 = a6;
  uint64_t v27 = a5;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v30 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.triage.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v12;
    uint64_t v18 = v17;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v32 = v24;
    *(_DWORD *)uint64_t v18 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    int v26 = a2;
    uint64_t v19 = StaticString.description.getter();
    uint64_t v31 = sub_10008F1F4(v19, v20, &v32);
    char v21 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2048;
    uint64_t v31 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v25);
    if (v21)
    {
LABEL_3:
      uint64_t v32 = a1;
      swift_errorRetain();
      sub_1000AFA94(a9);
      return CheckedContinuation.resume(throwing:)();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v32 = a1;
  swift_bridgeObjectRetain();
  sub_1000AFA94(a9);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10006DE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - v9, a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, v10, v7);
  swift_retain();
  return Promise.init(asyncOperation:)();
}

uint64_t sub_10006DF9C()
{
  sub_1000AFA94(&qword_10095F800);
  NSKeyValueObservedChange.oldValue.getter();
  uint64_t result = NSKeyValueObservedChange.newValue.getter();
  if (v10)
  {
    if (v7) {
      return result;
    }
    goto LABEL_9;
  }
  if ((v7 & 1) != 0 || (v8 == v5 ? (BOOL v1 = v9 == v6) : (BOOL v1 = 0), !v1))
  {
LABEL_9:
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v2 = (void *)result;
      swift_retain();

      uint64_t v3 = swift_beginAccess();
      __chkstk_darwin(v3);
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_10006E0F0(v4, (void (*)(char *, char *))sub_1004D9030);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10006E0F0(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v4 = sub_1000AFA94(&qword_10095F808);
  __chkstk_darwin(v4);
  double v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v27) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v26 + 8 * v12);
      if (!v23)
      {
        int64_t v12 = v22 + 2;
        if (v22 + 2 >= v27) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v26 + 8 * v12);
        if (!v23)
        {
          int64_t v12 = v22 + 3;
          if (v22 + 3 >= v27) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v26 + 8 * v12);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = type metadata accessor for IndexPath();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = type metadata accessor for ImpressionMetrics();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v17 + *(void *)(v19 + 72) * v14;
    char v21 = &v6[*(int *)(v4 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v20, v18);
    a2(v6, v21);
    uint64_t result = sub_10008DB18((uint64_t)v6, &qword_10095F808);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t ConditionalFrameWidthModifier.body(content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v22[0] = a3;
  v22[1] = a5;
  uint64_t v8 = sub_1000AFA94(&qword_100963050);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100963058);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100963060);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 & 1) == 0 || (a4)
  {
    char v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v21(v11, a1, v8);
    v21(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_10006EA08(&qword_100963068, &qword_100963060, &qword_100963070, &qword_100963050);
    sub_10006E9B8(&qword_100963070, &qword_100963050);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, a1, v8);
    uint64_t v18 = &v17[*(int *)(v15 + 36)];
    long long v19 = v24;
    *(_OWORD *)uint64_t v18 = v23;
    *((_OWORD *)v18 + 1) = v19;
    *((_OWORD *)v18 + 2) = v25;
    sub_1000AEF2C((uint64_t)v17, (uint64_t)v14, &qword_100963060);
    swift_storeEnumTagMultiPayload();
    sub_10006EA08(&qword_100963068, &qword_100963060, &qword_100963070, &qword_100963050);
    sub_10006E9B8(&qword_100963070, &qword_100963050);
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18((uint64_t)v17, &qword_100963060);
  }
}

uint64_t ConditionalFrameHeightModifier.body(content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v22[0] = a3;
  v22[1] = a5;
  uint64_t v8 = sub_1000AFA94(&qword_100963028);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100963030);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100963038);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 & 1) == 0 || (a4)
  {
    char v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v21(v11, a1, v8);
    v21(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_10006EA08(&qword_100963040, &qword_100963038, &qword_100963048, &qword_100963028);
    sub_10006E9B8(&qword_100963048, &qword_100963028);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, a1, v8);
    uint64_t v18 = &v17[*(int *)(v15 + 36)];
    long long v19 = v24;
    *(_OWORD *)uint64_t v18 = v23;
    *((_OWORD *)v18 + 1) = v19;
    *((_OWORD *)v18 + 2) = v25;
    sub_1000AEF2C((uint64_t)v17, (uint64_t)v14, &qword_100963038);
    swift_storeEnumTagMultiPayload();
    sub_10006EA08(&qword_100963040, &qword_100963038, &qword_100963048, &qword_100963028);
    sub_10006E9B8(&qword_100963048, &qword_100963028);
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18((uint64_t)v17, &qword_100963038);
  }
}

uint64_t sub_10006E9B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006EA08(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_10006E9B8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10006EA90(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, char *a13, char *a14, void *a15, void *a16, char *a17, void *a18)
{
  id v153 = a8;
  id v150 = a7;
  uint64_t v159 = a17;
  id v158 = a12;
  id v156 = a11;
  id v155 = a10;
  id v154 = a9;
  uint64_t v160 = a16;
  id v152 = a15;
  uint64_t v157 = a13;
  uint64_t v151 = a14;
  uint64_t v26 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v26 - 8);
  uint64_t v144 = (char *)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94((uint64_t *)&unk_10094C020);
  uint64_t v148 = *(void *)(v28 - 8);
  uint64_t v149 = v28;
  __chkstk_darwin(v28);
  uint64_t v147 = (char *)&v137 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider] = a1;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache] = a2;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementsDataProvider] = a3;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_balanceDataProvider] = a4;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator] = a5;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider] = a6;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager] = a7;
  type metadata accessor for WorkoutImageProvider();
  swift_allocObject();
  id v30 = v18;
  id v145 = a1;
  id v143 = a2;
  id v142 = a3;
  id v141 = a4;
  id v146 = a5;
  id v140 = a6;
  id v150 = v150;
  uint64_t v31 = v151;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider) = WorkoutImageProvider.init(healthStore:)();
  id v32 = v153;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider) = v153;
  uint64_t v33 = (objc_class *)type metadata accessor for StackFormattingManager();
  uint64_t v34 = (char *)objc_allocWithZone(v33);
  id v35 = v152;
  *(void *)&v34[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager] = v152;
  *(void *)&v34[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_healthStore] = v31;
  v172.receiver = v34;
  v172.super_class = v33;
  uint64_t v151 = v31;
  id v153 = v32;
  id v36 = v35;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager) = [super init];
  double v37 = v154;
  id v38 = v155;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager) = v154;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator) = v38;
  id v40 = v156;
  id v39 = v157;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chFriendManager) = v156;
  id v41 = v158;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider) = v158;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory) = v39;
  id v42 = objc_allocWithZone((Class)type metadata accessor for SummaryConfigurationProvider());
  id v154 = v37;
  id v155 = v38;
  id v152 = v40;
  id v139 = v41;
  id v138 = v39;
  id v43 = [v42 init];
  uint64_t v44 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider) = v43;
  double v45 = (void *)OBJC_IVAR___CHFitnessAppContext_dependencies;
  double v46 = v160;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100955708);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(&v169, (uint64_t)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_avatarSettingsProvider);
  id v158 = v45;
  uint64_t v47 = v46;
  swift_retain();
  id v156 = (id)sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v48 = *((void *)&v169 + 1);
  uint64_t v49 = (char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_eventHub;
  *uint64_t v49 = v169;
  v49[1] = v48;
  double v50 = v151;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore) = v151;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager) = v36;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext) = v47;
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  uint64_t v51 = v50;
  uint64_t v52 = v47;
  uint64_t v53 = v51;
  id v54 = v36;
  uint64_t v157 = v52;
  swift_unknownObjectRetain();
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_subscriptionToken) = SubscriptionToken.init(eventHub:)();
  char v55 = v159;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache) = v159;
  id v56 = objc_allocWithZone((Class)FIUIModel);
  uint64_t v151 = v55;
  id result = [v56 initWithHealthStore:v53];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel) = result;
  id v58 = [objc_allocWithZone((Class)FIMindfulnessSessionDataProvider) initWithHealthStore:v53];
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionDataProvider) = v58;
  id v59 = *(void **)((char *)v30 + v44);
  id v60 = objc_allocWithZone((Class)type metadata accessor for MetricsDataProvider());
  id v61 = v145;
  id v62 = v53;
  id v63 = v153;
  id v64 = v54;
  id v65 = v59;
  id v66 = v58;
  sub_1000475C4(v61, v65, v62, v63, v66, v64);
  uint64_t v68 = v67;

  id v145 = v63;
  id v137 = v61;

  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider) = v68;
  uint64_t v69 = (objc_class *)type metadata accessor for AAUIAwardsDataProvider();
  id v70 = objc_allocWithZone(v69);
  id v71 = v146;
  id v72 = v62;
  id v153 = v71;
  uint64_t v73 = (void *)AAUIAwardsDataProvider.init(healthStore:pauseRingsCoordinator:layoutMode:)();
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider) = v73;
  *((void *)&v170 + 1) = v69;
  char v171 = &protocol witness table for AAUIAwardsDataProvider;
  *(void *)&long long v169 = v73;
  uint64_t v74 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  id v75 = objc_allocWithZone(v74);
  sub_10008E75C((uint64_t)&v169, (uint64_t)v75 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v168.receiver = v75;
  v168.super_class = v74;
  id v76 = v73;
  id v77 = [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v169);

  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider) = v77;
  id v78 = [objc_allocWithZone((Class)AAUIAchievementResourceProvider) init];
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider) = v78;
  type metadata accessor for ActivitySharingHighlightDataProvider();
  swift_allocObject();
  id v79 = v72;
  id v154 = v154;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider) = sub_1000550B0(v154, v79);
  type metadata accessor for ActivitySharingNavigationCoordinator();
  uint64_t v80 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v80 + 144) = 0;
  *(_OWORD *)(v80 + 112) = 0u;
  *(_OWORD *)(v80 + 128) = 0u;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator) = v80;
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  uint64_t v81 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v82 = v81 + OBJC_IVAR____TtC10FitnessApp43ActivitySharingFriendDetailAlertCoordinator__presentedAlertType;
  long long v169 = 0u;
  long long v170 = 0u;
  LOBYTE(v171) = -1;
  sub_1000AFA94((uint64_t *)&unk_10094C028);
  int v83 = v147;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 32))(v82, v83, v149);
  *(void *)((char *)v30
            + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingFriendDetailAlertCoordinator) = v81;
  uint64_t v84 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
  uint64_t v85 = (char *)objc_allocWithZone(v84);
  *(void *)&v85[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = v64;
  *(void *)&v85[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v79;
  v167.receiver = v85;
  v167.super_class = v84;
  id v86 = v79;
  id v87 = v64;
  [v167 init];
  swift_retain();
  sub_1000AFA94(&qword_10095DF90);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  swift_retain();
  sub_1000AFA94(&qword_10095DF98);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  swift_retain();
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v88 = v165[5];
  uint64_t v89 = v165[6];
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100962770);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  swift_retain();
  sub_1000AFA94(&qword_10095DFA0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  swift_retain();
  sub_1000AFA94(&qword_100951570);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  id v90 = objc_allocWithZone((Class)type metadata accessor for FitnessPlusCardDataProvider());
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider) = sub_10006F888((uint64_t)&v169, (uint64_t)&v166, v88, v89, (uint64_t)v165, (uint64_t)&v164, (uint64_t)&v163);
  type metadata accessor for FitnessPlusSubscriptionProvider();
  swift_allocObject();
  uint64_t v91 = v157;
  uint64_t v92 = sub_100025E78();
  uint64_t v159 = v91;

  uint64_t v157 = (char *)OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusSubscriptionProvider;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusSubscriptionProvider) = v92;
  type metadata accessor for CatalogTipActivityTileDataModel();
  swift_allocObject();
  uint64_t v93 = swift_retain();
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider) = sub_100023DE8(v93);
  id v94 = [self sharedInstance];
  id v158 = v87;
  id result = [v87 unitManager];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  char v95 = result;
  uint64_t v96 = *(void **)&v159[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
  char v97 = (char *)objc_allocWithZone((Class)type metadata accessor for TrendsDataProvider());
  double v98 = v137;
  id v99 = v86;
  id v100 = v145;
  id v101 = v96;
  uint64_t v160 = v99;
  id v156 = v100;
  double v102 = v100;
  unint64_t v103 = v98;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider) = sub_100042D78(v99, v94, v102, v95, v98, v101, v97);
  uint64_t v104 = (objc_class *)type metadata accessor for TrendsFormattingManager();
  uint64_t v105 = (char *)objc_allocWithZone(v104);
  id v106 = v158;
  *(void *)&v105[OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter] = v158;
  v162.receiver = v105;
  v162.super_class = v104;
  id v107 = v106;
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsFormattingManager) = [super init];
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager) = a18;
  uint64_t v108 = qword_10094B130;
  id v109 = a18;
  if (v108 != -1) {
    swift_once();
  }
  char v110 = byte_10096A4E0;
  uint64_t v111 = sub_10003B940(v160, byte_10096A4E0);
  uint64_t v112 = (char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics;
  *(void *)uint64_t v112 = v111;
  *((void *)v112 + 1) = v113;
  v112[16] = v114 & 1;
  static os_log_type_t.info.getter();
  id v115 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  id v158 = v107;
  if (v110)
  {
    unint64_t v116 = 0xE600000000000000;
    uint64_t v117 = 0x736978656C41;
  }
  else
  {
    id v118 = (id)FIUICopyUserFirstNameFromAddressBook();
    if (v118)
    {
      uint64_t v119 = v118;
      uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v116 = v120;
    }
    else
    {
      uint64_t v117 = 0;
      unint64_t v116 = 0;
    }
  }
  id v121 = (uint64_t *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName);
  *id v121 = v117;
  v121[1] = v116;
  uint64_t v122 = *(void *)&v157[(void)v30];
  uint64_t v123 = v159;
  uint64_t v124 = *(void **)&v159[OBJC_IVAR___CHFitnessAppContext_seymourAvailabilityManager];
  id v125 = objc_allocWithZone((Class)type metadata accessor for SummaryUserProfileProvider());
  unint64_t v126 = v103;
  uint64_t v157 = v126;
  uint64_t v127 = v160;
  id v128 = v151;
  id v129 = v109;
  swift_retain();
  *(void *)((char *)v30 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider) = sub_10000E13C((uint64_t)v126, v122, (uint64_t)v127, (uint64_t)v124, (uint64_t)v129, (uint64_t)v128);

  uint64_t v130 = (objc_class *)type metadata accessor for ActivityDashboardContext();
  v161.receiver = v30;
  v161.super_class = v130;
  id v131 = [super init];
  swift_retain();
  sub_1000472A0();
  swift_release();
  uint64_t v132 = type metadata accessor for TaskPriority();
  uint64_t v133 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v144, 1, 1, v132);
  type metadata accessor for MainActor();
  id v134 = v131;
  uint64_t v135 = static MainActor.shared.getter();
  uint64_t v136 = (void *)swift_allocObject();
  v136[2] = v135;
  v136[3] = &protocol witness table for MainActor;
  v136[4] = v134;
  sub_1000713D0(v133, (uint64_t)&unk_10095DFB0, (uint64_t)v136);

  swift_release();
  return v134;
}

id sub_10006F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a7;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a1;
  uint64_t v27 = a4;
  uint64_t v32 = a2;
  uint64_t v9 = sub_1000AFA94(&qword_1009687D0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10095CBB0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask] = 0;
  uint64_t v17 = &v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__state];
  v33[0] = 0;
  v33[1] = 0;
  char v34 = 2;
  uint64_t v18 = v7;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  long long v19 = &v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__pendingUpdates];
  LOBYTE(v33[0]) = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v12, v9);
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates] = 0;
  v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated] = 0;
  sub_10008E75C(v31, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient]);
  sub_10008E75C(v32, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_contentAvailabilityClient]);
  uint64_t v20 = &v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_eventHub];
  uint64_t v21 = v27;
  *(void *)uint64_t v20 = a3;
  *((void *)v20 + 1) = v21;
  sub_10008E75C(v29, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_networkEvaluator]);
  sub_10008E75C(v30, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_recommendationClient]);
  sub_10008E75C(v28, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient]);
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionToken] = SubscriptionToken.init(eventHub:)();

  int64_t v22 = (objc_class *)type metadata accessor for FitnessPlusCardDataProvider();
  v35.receiver = v18;
  v35.super_class = v22;
  id v23 = [super init];
  swift_getObjectType();
  type metadata accessor for AchievementEnvironmentCacheUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v24 = v23;
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for ActiveWorkoutPlanUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for AllowedContentRatingsUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for AppActiveOccurred();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000A9538(&qword_100966B80, (void (*)(uint64_t))&type metadata accessor for AppActiveOccurred);
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for CatalogDeleted();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for ContentAvailabilityUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for NetworkConditionsChanged();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for OnboardingSurveyResultsUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for PersonalizationPrivacyPreferenceUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for ServiceSubscriptionUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  type metadata accessor for WheelchairStatusUpdated();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000A9538(&qword_100966B88, (void (*)(uint64_t))&type metadata accessor for WheelchairStatusUpdated);
  swift_retain();
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
  swift_unknownObjectRelease();
  swift_release();

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v28);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v30);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v32);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  swift_release();
  return v24;
}

void sub_1000702A0(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

uint64_t sub_100070394(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1000703D8()
{
  sub_1000908CC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1000703E4()
{
  sub_1000B61BC(v0[2], v0[3], v0[4]);
}

void sub_1000703F0()
{
  sub_10008E214(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

void sub_1000703FC()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_10095CB70) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1000B5938(v3, v0 + v2, v4);
}

uint64_t sub_100070494()
{
  return sub_1000704A0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000704A0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10008A680(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100070500()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10007058C(v0 + v2, v3);
}

uint64_t sub_10007058C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  v8._object = (void *)0x80000001007BF800;
  v8._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v8);
  Date.init()();
  Date.timeIntervalSince(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Double.write<A>(to:)();
  uint64_t v9 = v17;
  unint64_t v10 = v18;
  static os_log_type_t.default.getter();
  uint64_t v11 = (void *)HKLogActivity;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000AA64C();
  *(void *)(v12 + 32) = v9;
  *(void *)(v12 + 40) = v10;
  id v13 = v11;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v14 = a2 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastCalculatedDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v14, v7, v4);
  swift_endAccess();
  return sub_100070870();
}

void sub_1000707E0()
{
  type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 + 16);

  sub_1000D6AF0(v1);
}

uint64_t sub_100070870()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v7) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_25;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v9);
          if (!v13)
          {
            int64_t v9 = v12 + 4;
            if (v12 + 4 >= v7) {
              goto LABEL_25;
            }
            unint64_t v13 = *(void *)(v3 + 8 * v9);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_5:
    uint64_t result = (*(uint64_t (**)(void))(*(void *)(v2 + 56) + 16 * v11))();
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v7)
  {
LABEL_25:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100070A0C(uint64_t a1)
{
  return sub_10042147C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100070A14()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100070A3C()
{
  sub_100070A44(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100070A44(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v8 = (char *)Strong;
    int64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
    *unint64_t v6 = v9;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
    id v10 = v9;
    LOBYTE(v9) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    if (v9)
    {
      unint64_t v11 = &v8[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      int v12 = v8[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state + 8];
      sub_100070C4C(a2);
      if (v12 == 1)
      {
        sub_100061560(a2);
        sub_10004E8F0();
      }
      *(void *)unint64_t v11 = a2;
      v11[8] = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100070BC8()
{
  sub_100070BE8(v0, 0x31u);
}

void sub_100070BE8(uint64_t a1, unsigned __int8 a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10008A680(a2);
  }
}

void sub_100070C44()
{
  sub_1000D0A3C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100070C4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_100070C44;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008C75F8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_10008AA94((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

void sub_100070F48()
{
  sub_100070F58(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

void sub_100070F58(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  int64_t v7 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  BOOL v9 = __OFADD__(v8, a2);
  uint64_t v10 = v8 + a2;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *int64_t v7 = v10;
    swift_beginAccess();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      *(void *)&Strong[OBJC_IVAR___CHFitnessAppBadgeAggregator_appBadgeCount] = v10;
    }
    id v12 = [self sharedApplication];
    swift_beginAccess();
    [v12 setApplicationIconBadgeNumber:*v7];

    if (a4) {
      a4();
    }
  }
}

char *sub_10007105C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  BOOL v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v8]);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)BOOL v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  if (*(void *)&a1[v12 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v12]);
  }
  long long v14 = *(_OWORD *)&a2[v12 + 16];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)&a2[v12];
  *((_OWORD *)v13 + 1) = v14;
  *((void *)v13 + 4) = *(void *)&a2[v12 + 32];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  uint64_t v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v15] = a2[v15];
  return a1;
}

uint64_t sub_1000711BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000712B0()
{
  return sub_1000712B8();
}

uint64_t sub_1000712B8()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    _OWORD v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_1000713D0((uint64_t)v2, (uint64_t)&unk_10095A628, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000713D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10008DB18(a1, &qword_10094B7A0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10007157C()
{
  return sub_100071584();
}

uint64_t sub_100071584()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v17[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = (void *)HKLogActivity;
  os_log_type_t v5 = v3;
  if (os_log_type_enabled(HKLogActivity, v3))
  {
    uint64_t v6 = v4;
    uint64_t v7 = swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = _typeName(_:qualified:)();
    uint64_t v16 = sub_10008F1F4(v8, v9, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = sub_10008F1F4(v10, v11, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v5, "%s received notification %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 1, 1, v14);
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = 0;
    long long v15[3] = 0;
    _DWORD v15[4] = v13;
    sub_1000713D0((uint64_t)v2, (uint64_t)&unk_10094ECB8, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

void sub_100071808(uint64_t a1)
{
  sub_100071834(a1, v1, (uint64_t)"[SummaryCoordinator] did receive ASFriendListChangedNotificationKey notification", 80, 0x28u);
}

void sub_100071834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  static os_log_type_t.default.getter();
  id v6 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    sub_10008A680(a5);
  }
}

uint64_t sub_1000718F0()
{
  sub_100071954(*(void *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100071954(uint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v60 = *v1;
  uint64_t v61 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  id v59 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActivitySharingFriendListDateItemGroup();
  uint64_t v58 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  unint64_t v9 = (void *)HKLogActivity;
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(HKLogActivity, v8))
  {
    unint64_t v11 = v9;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    id v63 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v62 = sub_10008F1F4(0xD00000000000001ELL, 0x80000001007B8470, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v10, "%s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  id v13 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_friendListSectionManager);
  if (![v13 hasInitializedFriendData])
  {
    os_log_type_t v23 = static os_log_type_t.default.getter();
    id v24 = (void *)HKLogActivity;
    os_log_type_t v25 = v23;
    if (os_log_type_enabled(HKLogActivity, v23))
    {
      uint64_t v26 = v24;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      id v63 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v62 = sub_10008F1F4(0xD00000000000001ELL, 0x80000001007B8470, (uint64_t *)&v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v25, "%s friend data is not initialized.", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return;
  }
  id v14 = [v13 sectionForFriendsCompetingWithMe];
  id v15 = [v14 rows];

  uint64_t v16 = sub_10007E2D8(0, &qword_10094ECE0);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v63 = _swiftEmptyArrayStorage;
  uint64_t v56 = v16;
  if (v17 >> 62) {
    goto LABEL_36;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v57 = v2;
    if (v18)
    {
      if (v18 < 1)
      {
        __break(1u);
        goto LABEL_42;
      }
      id v55 = v13;
      for (uint64_t i = 0; i != v18; ++i)
      {
        if ((v17 & 0xC000000000000001) != 0) {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v20 = *(id *)(v17 + 8 * i + 32);
        }
        uint64_t v21 = v20;
        id v22 = [v20 friend:v54];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (v63[2] >= v63[3] >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_bridgeObjectRelease();
      id v54 = v63;
      uint64_t v2 = v57;
      id v13 = v55;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v54 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    id v28 = [objc_allocWithZone((Class)ASFriendListDisplayContext) init];
    uint64_t v29 = v61;
    [v28 setDisplayMode:v61];
    [v28 setDisplayFilter:1];
    id v55 = v28;
    id v30 = [v13 sectionsForDisplayContext:v28];
    sub_10007E2D8(0, &qword_10094ECE8);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    uint64_t v32 = sub_1000721B8(v31, v2, v29);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(v32 + 16);
    uint64_t v61 = v32;
    if (!v33) {
      break;
    }
    uint64_t v34 = v32 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    uint64_t v35 = *(void *)(v58 + 72);
    swift_bridgeObjectRetain();
    unint64_t v17 = 0;
    while (1)
    {
      sub_100072774(v34, (uint64_t)v7);
      uint64_t v36 = *(void *)(*(void *)&v7[*(int *)(v5 + 20)] + 16);
      BOOL v37 = __OFADD__(v17, v36);
      v17 += v36;
      if (v37) {
        break;
      }
      sub_1000726A4((uint64_t)v7);
      v34 += v35;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  }
  unint64_t v17 = 0;
LABEL_25:
  id v38 = [v13 sectionForFriendsInvitedByMe:v54];
  id v39 = [v38 rows];

  unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v41) {
      goto LABEL_38;
    }
LABEL_27:
    id v63 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v41 & 0x8000000000000000) == 0)
    {
      uint64_t v42 = 0;
      while (1)
      {
        id v43 = (v40 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v40 + 8 * v42 + 32);
        uint64_t v44 = v43;
        id v45 = [v43 friend];
        id v46 = [v45 contact];

        if (!v46) {
          goto LABEL_43;
        }
        ++v42;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v41 == v42)
        {
          uint64_t v47 = v63;
          swift_bridgeObjectRelease();
          uint64_t v2 = v57;
          goto LABEL_39;
        }
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return;
  }
  uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v41) {
    goto LABEL_27;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  uint64_t v47 = _swiftEmptyArrayStorage;
LABEL_39:
  uint64_t v48 = type metadata accessor for TaskPriority();
  uint64_t v49 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v59, 1, 1, v48);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v50 = static MainActor.shared.getter();
  uint64_t v51 = (void *)swift_allocObject();
  v51[2] = v50;
  v51[3] = &protocol witness table for MainActor;
  v51[4] = v54;
  v51[5] = v17;
  uint64_t v52 = v61;
  v51[6] = v2;
  unsigned char v51[7] = v52;
  uint64_t v53 = v60;
  v51[8] = v47;
  v51[9] = v53;
  sub_1000713D0(v49, (uint64_t)&unk_10094ECF8, (uint64_t)v51);
  swift_release();
}

uint64_t sub_1000721B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  unint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v40 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v14 = (char *)&v38 - v13;
  uint64_t v15 = type metadata accessor for ActivitySharingFriendListDateItemGroup();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  __chkstk_darwin(v15);
  id v46 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (!v17) {
    return (uint64_t)v18;
  }
  uint64_t v52 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100072668(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v51 = v4;
    uint64_t v4 = 0;
    uint64_t v18 = v52;
    id v20 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    unint64_t v42 = a1 & 0xC000000000000001;
    id v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v44 = v8;
    unint64_t v45 = a1;
    uint64_t v43 = v17;
    while (1)
    {
      if (v17 == v4)
      {
        __break(1u);
        goto LABEL_20;
      }
      id v21 = v42 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v4 + 32);
      id v22 = v21;
      id v23 = [v21 startDate];
      if (!v23) {
        break;
      }
      id v24 = v23;
      os_log_type_t v25 = v14;
      uint64_t v26 = v40;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v27 = *v20;
      id v28 = v26;
      id v14 = v25;
      (*v20)(v8, v28, v9);
      (*v41)(v8, 0, 1, v9);
      if ((*v39)(v8, 1, v9) == 1) {
        goto LABEL_14;
      }
      v27(v25, v8, v9);
LABEL_15:
      uint64_t v29 = v14;
      id v30 = [v22 rows];
      sub_10007E2D8(0, &qword_10094ECE0);
      unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = v49;
      swift_retain();
      uint64_t v33 = v51;
      uint64_t v34 = sub_1000B2F3C(v31, v32, v50);
      uint64_t v51 = v33;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v35 = (uint64_t)v46;
      (*v20)(v46, v29, v9);

      *(void *)(v35 + *(int *)(v48 + 20)) = v34;
      uint64_t v52 = v18;
      unint64_t v37 = v18[2];
      unint64_t v36 = v18[3];
      unint64_t v10 = v37 + 1;
      id v14 = v29;
      if (v37 >= v36 >> 1)
      {
        sub_100072668(v36 > 1, v37 + 1, 1);
        uint64_t v18 = v52;
      }
      ++v4;
      v18[2] = v10;
      sub_1000B32D0(v35, (uint64_t)v18+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v37, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListDateItemGroup);
      uint64_t v17 = v43;
      os_log_type_t v8 = v44;
      a1 = v45;
      if (v43 == v4) {
        return (uint64_t)v18;
      }
    }
    (*v41)(v8, 1, 1, v9);
LABEL_14:
    Date.init()();
    sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100072668(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6AA0(a1, a2, a3, (void *)*v3, &qword_10094E8E0, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListDateItemGroup);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000726A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivitySharingFriendListDateItemGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100072700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100072774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingFriendListDateItemGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000727D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100072858(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  os_log_type_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for TrendsCard();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  id v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned char v13[16] = v17;
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v18 = v11[9];
  long long v19 = &v8[v18];
  id v20 = &v9[v18];
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = v20[8];
  *(void *)long long v19 = v21;
  v19[8] = (char)v20;
  uint64_t v22 = a3[6];
  id v23 = (char *)a1 + v22;
  id v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22 + 24);
  swift_bridgeObjectRetain();
  if (v25)
  {
    uint64_t v26 = *((void *)v24 + 4);
    *((void *)v23 + 3) = v25;
    *((void *)v23 + 4) = v26;
    (**(void (***)(char *, char *, uint64_t))(v25 - 8))(v23, v24, v25);
  }
  else
  {
    long long v27 = *((_OWORD *)v24 + 1);
    *(_OWORD *)id v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v27;
    *((void *)v23 + 4) = *((void *)v24 + 4);
  }
  uint64_t v28 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_retain();
  return a1;
}

uint64_t destroy for ActivityStatistics()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100072B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, void *a8)
{
  uint64_t v9 = v8;
  id v107 = a8;
  uint64_t v108 = a6;
  id v109 = a7;
  uint64_t v105 = a1;
  uint64_t v106 = a5;
  uint64_t v111 = a4;
  uint64_t v97 = type metadata accessor for Logger();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  char v95 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  double v98 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v94 = (char *)&v94 - v17;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  unint64_t v103 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v101 = (char *)&v94 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v94 - v24;
  __chkstk_darwin(v23);
  uint64_t v110 = (uint64_t)&v94 - v26;
  v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_isActive] = 0;
  swift_unknownObjectWeakInit();
  long long v27 = *(void (**)(void))(v14 + 56);
  id v99 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastIntroSheetViewDate];
  v27();
  uint64_t v28 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewVersion];
  *(void *)uint64_t v28 = 0;
  id v100 = v28;
  v28[8] = 1;
  double v102 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_lastWhatsNewSheetViewDate];
  uint64_t v112 = v27;
  uint64_t v113 = v14 + 56;
  v27();
  uint64_t v29 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_introSheetConfiguration];
  uint64_t v30 = type metadata accessor for IntroSheet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  unint64_t v31 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_whatsNewSheetConfiguraion];
  uint64_t v32 = type metadata accessor for WhatsNewSheet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  uint64_t v33 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailablity];
  uint64_t v34 = type metadata accessor for ContentAvailability();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  uint64_t v35 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_noticePrivacyPreference];
  uint64_t v36 = type metadata accessor for NoticePrivacyPreference();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_badgingProvider] = v105;
  swift_unknownObjectWeakAssign();
  uint64_t v37 = OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_userDefaults;
  uint64_t v38 = v107;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_userDefaults] = v107;
  uint64_t v106 = a2;
  sub_10008E75C(a2, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_contentAvailabilityClient]);
  uint64_t v104 = a3;
  sub_10008E75C(a3, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_engagementClient]);
  sub_10008E75C(v111, (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_privacyPreferenceClient]);
  id v39 = &v8[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_eventHub];
  unint64_t v40 = v109;
  *id v39 = v108;
  v39[1] = v40;
  id v41 = v38;
  unint64_t v42 = v8;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v41 objectForKey:v43];

  id v109 = "hasVisitedSeymourTab";
  if (v44)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v115 = 0u;
    long long v116 = 0u;
  }
  uint64_t v45 = v110;
  id v46 = v42;
  sub_100074830((uint64_t)&v115, (uint64_t)v117);
  if (v118)
  {
    uint64_t v47 = swift_dynamicCast() ^ 1;
    uint64_t v48 = v45;
  }
  else
  {
    sub_10008DB18((uint64_t)v117, &qword_100955A00);
    uint64_t v48 = v45;
    uint64_t v47 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v112)(v48, v47, 1, v13);
  sub_1000AEF2C(v45, (uint64_t)v25, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v25, 1, v13) == 1)
  {
    sub_10008DB18((uint64_t)v25, (uint64_t *)&unk_10095B890);
    uint64_t v49 = v95;
    static Log.default.getter();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "SeymourDiscoverySheetCoordinator: fist app launch date not found, assume this is the first launch", v52, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v96 + 8))(v49, v97);
    uint64_t v53 = v98;
    Date.init()();
    id v54 = &v46[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_firstAppLaunchDate];
    (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 32))(&v46[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_firstAppLaunchDate], v53, v13);
    id v55 = *(void **)&v9[v37];
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v53, v54, v13);
    id v56 = v55;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v53, v13);
    NSString v58 = String._bridgeToObjectiveC()();
    [v56 setObject:isa forKey:v58];
  }
  else
  {
    id v59 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v60 = v94;
    v59(v94, v25, v13);
    v59(&v42[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_firstAppLaunchDate], v60, v13);
  }
  id v61 = *(id *)&v9[v37];
  NSString v62 = String._bridgeToObjectiveC()();
  unsigned __int8 v63 = [v61 BOOLForKey:v62];

  v46[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_forceShowingIntroSheet] = v63;
  id v64 = *(id *)&v9[v37];
  NSString v65 = String._bridgeToObjectiveC()();
  unsigned __int8 v66 = [v64 BOOLForKey:v65];

  v46[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_forceShowingWhatsNewSheet] = v66;
  id v67 = *(id *)&v9[v37];
  NSString v68 = String._bridgeToObjectiveC()();
  unsigned __int8 v69 = [v67 BOOLForKey:v68];

  v46[OBJC_IVAR____TtC10FitnessApp32SeymourDiscoverySheetCoordinator_hasVisitedSeymourTab] = v69;
  id v70 = *(id *)&v9[v37];
  NSString v71 = String._bridgeToObjectiveC()();
  id v72 = [v70 objectForKey:v71];

  if (v72)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v115 = 0u;
    long long v116 = 0u;
  }
  uint64_t v73 = (uint64_t)v101;
  uint64_t v74 = v100;
  uint64_t v75 = (uint64_t)v99;
  sub_100074830((uint64_t)&v115, (uint64_t)v117);
  if (v118)
  {
    uint64_t v76 = swift_dynamicCast() ^ 1;
    uint64_t v77 = v73;
  }
  else
  {
    sub_10008DB18((uint64_t)v117, &qword_100955A00);
    uint64_t v77 = v73;
    uint64_t v76 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v112)(v77, v76, 1, v13);
  swift_beginAccess();
  sub_1000B1774(v73, v75, (uint64_t *)&unk_10095B890);
  swift_endAccess();
  id v78 = *(id *)&v9[v37];
  NSString v79 = String._bridgeToObjectiveC()();
  id v80 = [v78 integerForKey:v79];

  *(void *)uint64_t v74 = v80;
  v74[8] = 0;
  id v81 = *(id *)&v9[v37];
  NSString v82 = String._bridgeToObjectiveC()();
  id v83 = [v81 objectForKey:v82];

  if (v83)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v115 = 0u;
    long long v116 = 0u;
  }
  uint64_t v84 = v106;
  uint64_t v85 = v104;
  sub_100074830((uint64_t)&v115, (uint64_t)v117);
  if (v118)
  {
    uint64_t v86 = (uint64_t)v103;
    uint64_t v87 = swift_dynamicCast() ^ 1;
    uint64_t v88 = (char *)v86;
  }
  else
  {
    sub_10008DB18((uint64_t)v117, &qword_100955A00);
    uint64_t v86 = (uint64_t)v103;
    uint64_t v88 = v103;
    uint64_t v87 = 1;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v112)(v88, v87, 1, v13);
  uint64_t v89 = v111;
  uint64_t v90 = (uint64_t)v102;
  swift_beginAccess();
  sub_1000B1774(v86, v90, (uint64_t *)&unk_10095B890);
  swift_endAccess();

  uint64_t v91 = (objc_class *)type metadata accessor for SeymourDiscoverySheetCoordinator();
  v114.receiver = v46;
  v114.super_class = v91;
  [super init];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v89);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v85);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v84);
  sub_10008DB18(v110, (uint64_t *)&unk_10095B890);
  return v92;
}

void sub_1000736F0(void (*a1)(void), uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)&v2[OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedActivitySharingCount];
  *(void *)(v5 + 16) = v7;
  if (v2[OBJC_IVAR___CHFitnessAppBadgeAggregator_hasAmeliaBadge] == 1)
  {
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      return;
    }
    *(void *)(v5 + 16) = v7;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v10 = [Strong aggregatorShouldAllowEngagementBadging:v2];
    swift_unknownObjectRelease();
    if (v10)
    {
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v6;
      v12[3] = v11;
      v12[4] = a1;
      uint64_t v12[5] = a2;
      uint64_t v13 = self;
      swift_retain();
      swift_retain();
      sub_10008A670((uint64_t)a1);
      id v14 = [v13 currentNotificationCenter];
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = sub_1000739D4(v15);
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v14;
      uint64_t v17[3] = v2;
      v17[4] = v16;
      void v17[5] = sub_10006748C;
      v17[6] = v12;
      aBlock[4] = sub_10006735C;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100066A00;
      uint64_t aBlock[3] = &unk_1008BBC30;
      uint64_t v18 = _Block_copy(aBlock);
      id v19 = v14;
      uint64_t v20 = v2;
      swift_retain();
      swift_release();
      [v19 getNotificationSettingsWithCompletionHandler:v18];
      _Block_release(v18);
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    uint64_t v7 = *(void *)(v6 + 16);
  }
  *(void *)&v2[OBJC_IVAR___CHFitnessAppBadgeAggregator_appBadgeCount] = v7;
  id v21 = [self sharedApplication];
  [v21 setApplicationIconBadgeNumber:*(void *)(v6 + 16)];

  if (a1) {
    a1();
  }

  swift_release();
}

uint64_t sub_1000739D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EngagementBadge();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v37 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v42 = (char *)&v32 - v7;
  uint64_t result = __chkstk_darwin(v6);
  unsigned __int8 v10 = (char *)&v32 - v9;
  int64_t i = 0;
  uint64_t v49 = (char *)_swiftEmptyArrayStorage;
  uint64_t v43 = a1;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v33 = a1 + 56;
  uint64_t v34 = v3;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v41 = v3 + 16;
  int64_t v38 = (unint64_t)(v13 + 63) >> 6;
  id v39 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v35 = v3 + 32;
  uint64_t v36 = result;
  if ((v14 & v12) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v18 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v18 < v38)
    {
      unint64_t v19 = *(void *)(v33 + 8 * v18);
      ++i;
      if (v19) {
        goto LABEL_21;
      }
      int64_t i = v18 + 1;
      if (v18 + 1 < v38)
      {
        unint64_t v19 = *(void *)(v33 + 8 * i);
        if (v19) {
          goto LABEL_21;
        }
        int64_t i = v18 + 2;
        if (v18 + 2 < v38)
        {
          unint64_t v19 = *(void *)(v33 + 8 * i);
          if (v19) {
            goto LABEL_21;
          }
          int64_t i = v18 + 3;
          if (v18 + 3 < v38)
          {
            unint64_t v19 = *(void *)(v33 + 8 * i);
            if (v19) {
              goto LABEL_21;
            }
            int64_t v20 = v18 + 4;
            if (v20 < v38)
            {
              unint64_t v19 = *(void *)(v33 + 8 * v20);
              for (int64_t i = v20; !v19; ++v20)
              {
                int64_t i = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_35;
                }
                if (i >= v38) {
                  goto LABEL_33;
                }
                unint64_t v19 = *(void *)(v33 + 8 * i);
              }
LABEL_21:
              unint64_t v15 = (v19 - 1) & v19;
              for (unint64_t j = __clz(__rbit64(v19)) + (i << 6); ; unint64_t j = v16 | (i << 6))
              {
                id v21 = v42;
                uint64_t v22 = *(void *)(v3 + 72);
                (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v42, *(void *)(v43 + 48) + v22 * j, v2);
                id v46 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
                v46(v10, v21, v2);
                uint64_t v23 = static EngagementConstants.appBadgingAllowedBadgeIdentifiers.getter();
                uint64_t v24 = *(void *)(v23 + 16);
                if (v24)
                {
                  uint64_t v40 = v22;
                  unint64_t v44 = v15;
                  int64_t v45 = i;
                  swift_bridgeObjectRetain();
                  uint64_t v25 = v23 + 40;
                  while (1)
                  {
                    swift_bridgeObjectRetain();
                    EngagementBadge.identifier.getter();
                    Swift::String v26 = String.lowercased()();
                    swift_bridgeObjectRelease();
                    Swift::String v48 = v26;
                    Swift::String v47 = String.lowercased()();
                    sub_1000A06D0();
                    char v27 = StringProtocol.contains<A>(_:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v27) {
                      break;
                    }
                    v25 += 16;
                    if (!--v24)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v2 = v36;
                      uint64_t v3 = v34;
                      unint64_t v15 = v44;
                      int64_t i = v45;
                      goto LABEL_5;
                    }
                  }
                  swift_bridgeObjectRelease_n();
                  uint64_t v2 = v36;
                  uint64_t v28 = (uint64_t (*)(char *, char *, uint64_t))v46;
                  v46(v37, v10, v36);
                  uint64_t v29 = v49;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1001C8FEC(0, *((void *)v29 + 2) + 1, 1);
                    uint64_t v29 = v49;
                  }
                  uint64_t v3 = v34;
                  unint64_t v31 = *((void *)v29 + 2);
                  unint64_t v30 = *((void *)v29 + 3);
                  if (v31 >= v30 >> 1)
                  {
                    sub_1001C8FEC(v30 > 1, v31 + 1, 1);
                    uint64_t v29 = v49;
                  }
                  *((void *)v29 + 2) = v31 + 1;
                  uint64_t result = v28(&v29[((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ v31 * v40], v37, v2);
                  uint64_t v49 = v29;
                  unint64_t v15 = v44;
                  int64_t i = v45;
                  if (!v44) {
                    goto LABEL_7;
                  }
                }
                else
                {
LABEL_5:
                  swift_bridgeObjectRelease();
                  uint64_t result = (*v39)(v10, v2);
                  if (!v15) {
                    goto LABEL_7;
                  }
                }
LABEL_6:
                unint64_t v16 = __clz(__rbit64(v15));
                v15 &= v15 - 1;
              }
            }
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return (uint64_t)v49;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100073E98()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unsigned __int8 v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v13 = sub_1000746A8();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = v13;
    os_log_type_t v16 = static os_log_type_t.default.getter();
    uint64_t v17 = (void *)HKLogActivity;
    os_log_type_t v18 = v16;
    BOOL v19 = os_log_type_enabled(HKLogActivity, v16);
    if (v19)
    {
      int64_t v20 = v17;
      id v21 = (uint8_t *)swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)id v21 = 136315138;
      uint64_t v22 = sub_100083B90(v15);
      uint64_t v67 = sub_10008F1F4(v22, v23, v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v18, "[SummaryUserProfileProvider] updated forced user profile %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    __chkstk_darwin(v19);
    *(&v61 - 2) = v15;
    uint64_t v25 = (uint64_t)&v24[4];
    Swift::String v26 = v24 + 7;
    os_unfair_lock_lock(v24 + 7);
    sub_1000E64A4(v25);
    os_unfair_lock_unlock(v26);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10007584C(v15);
      return swift_unknownObjectRelease();
    }
    return result;
  }
  uint64_t result = sub_1000748F8();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v67 = 0;
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v10, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v29 = [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
  id v64 = (uint64_t (*)(char *, uint64_t))v28;
  if (v29)
  {
    unint64_t v30 = v29;
    uint64_t v31 = v67;
    if ((v67 & 0x80) == 0)
    {
      uint64_t v31 = v67 | 0x80;
      v67 |= 0x80uLL;
    }
    id v32 = [v29 activityMoveMode];
    if ((v31 & 1) == 0 && v32 == (id)2)
    {
      v31 |= 1uLL;
      uint64_t v67 = v31;
    }
    unsigned int v33 = [v30 _isStandalonePhoneSummary];

    if ((v31 & 8) != 0 || !v33) {
      goto LABEL_33;
    }
    uint64_t v34 = v31 | 8;
  }
  else
  {
    uint64_t v35 = FIExperienceTypeWithHealthStore();
    if (v35)
    {
      BOOL v36 = (v67 & 1) != 0 || v35 == 1;
      BOOL v37 = !v36;
      if ((v67 & 0x80) == 0 || v37)
      {
        BOOL v36 = !v37;
        uint64_t v38 = 128;
        if (!v36) {
          uint64_t v38 = 129;
        }
        v67 |= v38;
      }
    }
    uint64_t result = (uint64_t)[self sharedBehavior];
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v39 = (void *)result;
    id v40 = [(id)result fitnessMode];

    if (v40 != (id)2 || (v67 & 8) != 0) {
      goto LABEL_33;
    }
    uint64_t v34 = v67 | 8;
  }
  uint64_t v67 = v34;
LABEL_33:
  if ((sub_10007545C() & 1) != 0 && (v67 & 2) == 0) {
    v67 |= 2uLL;
  }
  if ((*(unsigned char *)(*(void *)(v1
                             + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_fitnessPlusSubscriptionProvider)
                 + 80) & 1) != 0
    && (v67 & 4) == 0)
  {
    v67 |= 4uLL;
  }
  uint64_t v41 = self;
  id v42 = [v41 standardUserDefaults];
  unsigned __int8 v43 = [v42 BOOLForKey:@"ActivityDidDisplayTrendsOnboarding"];

  if (v43) {
    goto LABEL_43;
  }
  if (qword_10094B130 != -1) {
    swift_once();
  }
  if (byte_10096A4E0 == 1)
  {
LABEL_43:
    if ((v67 & 0x20) == 0) {
      v67 |= 0x20uLL;
    }
  }
  if (*(void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_trendsAvailabilityManager)
                 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability) >= 2uLL
    && (v67 & 0x10) == 0)
  {
    v67 |= 0x10uLL;
  }
  if ([*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_wheelchairCache) isWheelchairUser]&& (v67 & 0x40) == 0)
  {
    v67 |= 0x40uLL;
  }
  os_log_type_t v44 = static os_log_type_t.default.getter();
  int64_t v45 = (void *)HKLogActivity;
  os_log_type_t v46 = v44;
  if (os_log_type_enabled(HKLogActivity, v44))
  {
    char v47 = v67;
    os_log_t v62 = v45;
    Swift::String v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    unsigned __int8 v63 = v41;
    v66[0] = v49;
    *(_DWORD *)Swift::String v48 = 136315138;
    uint64_t v50 = sub_100083B90(v47);
    uint64_t v65 = sub_10008F1F4(v50, v51, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v52 = v62;
    _os_log_impl((void *)&_mh_execute_header, v62, v46, "[SummaryUserProfileProvider] Updated user profile %s", v48, 0xCu);
    swift_arrayDestroy();
    uint64_t v41 = v63;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v53 = swift_beginAccess();
  uint64_t v54 = v67;
  __chkstk_darwin(v53);
  *(&v61 - 2) = v54;
  uint64_t v56 = (uint64_t)&v55[4];
  uint64_t v57 = v55 + 7;
  os_unfair_lock_lock(v55 + 7);
  sub_100074698(v56);
  os_unfair_lock_unlock(v57);
  id v58 = [v41 standardUserDefaults];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v60 = String._bridgeToObjectiveC()();
  [v58 setValue:isa forKey:v60];

  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10007584C(v54);
    swift_unknownObjectRelease();
  }
  return v64(v12, v6);
}

uint64_t sub_100074698(uint64_t result)
{
  *(void *)uint64_t result = *(void *)(v1 + 16);
  *(unsigned char *)(result + 8) = 0;
  return result;
}

uint64_t sub_1000746A8()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 valueForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_100074830((uint64_t)v8, (uint64_t)v9);
  if (!v9[3])
  {

    sub_100074898((uint64_t)v9);
    return 0;
  }
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  *(void *)&v8[0] = 0;
  uint64_t v3 = *(void *)(v7 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      sub_1001FAED8((uint64_t)v9, v8);
      v4 += 2;
      --v3;
    }
    while (v3);

    swift_bridgeObjectRelease();
    return *(void *)&v8[0];
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100074830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100955A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100074898(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100955A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000748F8()
{
  uint64_t v1 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_seymourAvailabilityManager)
     + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state;
  swift_beginAccess();
  sub_100075760(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for ContentAvailability();
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_100074AF8((uint64_t)v3);
  if (v4 != 1
    && *(unsigned char *)(*(void *)(v0
                            + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_fitnessPlusSubscriptionProvider)
                + 80) != 2
    && *(void *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_trendsAvailabilityManager)
                 + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability))
  {
    return 1;
  }
  static os_log_type_t.default.getter();
  id v6 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  return 0;
}

uint64_t sub_100074AF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeymourAvailabilityManager.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100074B54(uint64_t a1, char *a2)
{
  NSString v68 = a2;
  uint64_t v3 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unsigned __int8 v10 = (char *)&v56 - v9;
  uint64_t v11 = type metadata accessor for ContentAvailability();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unsigned __int8 v66 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v64 = (char *)&v56 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v19 = (char *)&v56 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v67 = (char *)&v56 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v56 - v23;
  __chkstk_darwin(v22);
  Swift::String v26 = (char *)&v56 - v25;
  uint64_t v27 = sub_1000AFA94(&qword_100950090);
  __chkstk_darwin(v27);
  id v29 = (char *)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000757E4(a1, (uint64_t)v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    static Log.default.getter();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)id v32 = 136315138;
      swift_getErrorValue();
      uint64_t v33 = Error.logOutput.getter();
      uint64_t v71 = sub_10008F1F4(v33, v34, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to query content availability: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v8, v70);
  }
  unsigned __int8 v63 = v68 + 16;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  uint64_t v59 = v12 + 32;
  id v58 = v35;
  v35(v26, (uint64_t)v29, v11);
  unsigned int v62 = [self isRunningInStoreDemoMode];
  static Log.default.getter();
  NSString v68 = *(char **)(v12 + 16);
  ((void (*)(char *, char *, uint64_t))v68)(v24, v26, v11);
  BOOL v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v60 = v12;
    uint64_t v57 = v26;
    uint64_t v39 = v38;
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v61 = (void (*)(char *, uint64_t))(v39 + 4);
    sub_10007571C(&qword_1009500A0);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v71 = sub_10008F1F4(v40, v41, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void (**)(char *, uint64_t))(v60 + 8);
    v61(v24, v11);
    *(_WORD *)(v39 + 12) = 1024;
    unsigned int v42 = v62;
    LODWORD(v71) = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Received content availability: %s isDemoMode: %{BOOL}d", (uint8_t *)v39, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    Swift::String v26 = v57;
    uint64_t v12 = v60;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v69 + 8))(v10, v70);
  }
  else
  {
    uint64_t v61 = *(void (**)(char *, uint64_t))(v12 + 8);
    v61(v24, v11);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v10, v70);
    unsigned int v42 = v62;
  }
  ((void (*)(char *, char *, uint64_t))v68)(v19, v26, v11);
  if (!v42)
  {
    Swift::String v48 = v61;
    v61(v19, v11);
    uint64_t v49 = (uint64_t)v67;
    goto LABEL_13;
  }
  os_log_type_t v44 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  int64_t v45 = v64;
  v44(v64, enum case for ContentAvailability.unavailableStoreFront(_:), v11);
  sub_10007571C(&qword_100950098);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v47 = v45;
  Swift::String v48 = v61;
  v61(v47, v11);
  v48(v19, v11);
  uint64_t v49 = (uint64_t)v67;
  if (v46)
  {
LABEL_13:
    ((void (*)(uint64_t, char *, uint64_t))v68)(v49, v26, v11);
    goto LABEL_14;
  }
  v44(v67, enum case for ContentAvailability.available(_:), v11);
LABEL_14:
  uint64_t v50 = v66;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_t v52 = (void *)Strong;
    uint64_t v53 = Strong + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state;
    swift_beginAccess();
    uint64_t v54 = v53;
    uint64_t v55 = v65;
    sub_100075760(v54, v65);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v55, 1, v11) == 1)
    {
      sub_100074AF8(v55);
      sub_1002129F8(v49);
    }
    else
    {
      v58(v50, v55, v11);
      sub_10007571C(&qword_100950098);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
        sub_1002129F8(v49);
      }
      v48(v50, v11);
    }
  }
  v48((char *)v49, v11);
  return ((uint64_t (*)(char *, uint64_t))v48)(v26, v11);
}

uint64_t sub_10007545C()
{
  uint64_t v1 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ContentAvailability();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unsigned __int8 v10 = (char *)v16 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state;
  swift_beginAccess();
  sub_100075760(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for ContentAvailability.available(_:), v4);
    sub_10007571C(&qword_100966E40);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v16[3] == v16[1] && v16[4] == v16[2])
    {
      swift_bridgeObjectRelease_n();
      uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
      v12(v8, v4);
      v12(v10, v4);
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  sub_100074AF8((uint64_t)v3);
  return 0;
}

uint64_t sub_10007571C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ContentAvailability();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100075760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeymourAvailabilityManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SeymourAvailabilityManager.State(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100950078);
}

uint64_t sub_1000757E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007584C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_100070A3C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008D1610;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return swift_release();
}

unint64_t sub_100075AF8()
{
  unint64_t result = qword_100953B60;
  if (!qword_100953B60)
  {
    sub_1000A1370((uint64_t *)&unk_1009555E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953B60);
  }
  return result;
}

unint64_t sub_100075B54()
{
  unint64_t result = qword_100953B50;
  if (!qword_100953B50)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953B50);
  }
  return result;
}

uint64_t sub_100075BAC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    __chkstk_darwin(result);
    swift_retain();
    dispatch thunk of UnfairLock.acquire<A>(_:)();
    swift_release();
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_100075CD0(v2);
    swift_bridgeObjectRelease();
    sub_100075DA8();

    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100075CD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10094E718);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_1000DF9C0(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1000D9B04();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

uint64_t sub_100075DA8()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100076278(v4);
  swift_bridgeObjectRelease();
  Swift::String v48 = &_swiftEmptySetSingleton;
  unsigned int v42 = (void **)&v48;
  unsigned __int8 v43 = v0;
  uint64_t v40 = v0;
  dispatch thunk of UnfairLock.acquire<A>(_:)();
  v35[1] = 0;
  uint64_t v6 = v48;
  uint64_t v7 = v48 + 56;
  uint64_t v8 = 1 << v48[32];
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *((void *)v48 + 7);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v41 = v5 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v39 = v5;
  uint64_t v38 = v6;
  os_log_type_t v37 = v7;
  int64_t v36 = v11;
  while (1)
  {
    while (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      if (*(void *)(v5 + 16))
      {
LABEL_21:
        Swift::UInt v19 = *(unsigned __int8 *)(*((void *)v6 + 6) + v15);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v19);
        uint64_t result = Hasher._finalize()();
        uint64_t v20 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v21 = result & ~v20;
        if ((*(void *)(v41 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(v5 + 48);
          if (*(unsigned __int8 *)(v22 + v21) == v19)
          {
LABEL_26:
            uint64_t v24 = type metadata accessor for TaskPriority();
            uint64_t v25 = *(void *)(v24 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v3, 1, 1, v24);
            uint64_t v26 = swift_allocObject();
            *(void *)(v26 + 16) = 0;
            uint64_t v27 = (uint64_t)v3;
            uint64_t v28 = v40;
            *(void *)(v26 + 24) = 0;
            *(void *)(v26 + 32) = v28;
            *(unsigned char *)(v26 + 40) = v19;
            int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24);
            id v30 = v28;
            if (v29 == 1)
            {
              sub_10008DB18(v27, &qword_10094B7A0);
            }
            else
            {
              TaskPriority.rawValue.getter();
              (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
            }
            uint64_t v3 = (char *)v27;
            uint64_t v5 = v39;
            if (*(void *)(v26 + 16))
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v31 = dispatch thunk of Actor.unownedExecutor.getter();
              uint64_t v33 = v32;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v31 = 0;
              uint64_t v33 = 0;
            }
            int64_t v11 = v36;
            uint64_t v34 = swift_allocObject();
            *(void *)(v34 + 16) = &unk_10095C528;
            *(void *)(v34 + 24) = v26;
            sub_1000AFA94((uint64_t *)&unk_100955590);
            if (v33 | v31)
            {
              uint64_t v44 = 0;
              uint64_t v45 = 0;
              uint64_t v46 = v31;
              uint64_t v47 = v33;
            }
            swift_task_create();
            uint64_t result = swift_release();
            uint64_t v6 = v38;
            uint64_t v7 = v37;
          }
          else
          {
            uint64_t v23 = ~v20;
            while (1)
            {
              unint64_t v21 = (v21 + 1) & v23;
              if (((*(void *)(v41 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v22 + v21) == v19) {
                goto LABEL_26;
              }
            }
          }
        }
      }
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v13 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)&v7[8 * v13];
    if (!v17) {
      break;
    }
LABEL_20:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    if (*(void *)(v5 + 16)) {
      goto LABEL_21;
    }
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)&v7[8 * v18];
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)&v7[8 * v18];
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v17 = *(void *)&v7[8 * v18];
  if (v17)
  {
LABEL_19:
    int64_t v13 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)&v7[8 * v13];
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100076278(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10007655C();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1000762EC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000762EC(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_10007640C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_10007640C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1001EAA90();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1001EC424();
      goto LABEL_14;
    }
    sub_1001ED3A0();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

unint64_t sub_10007655C()
{
  unint64_t result = qword_10094F3D8;
  if (!qword_10094F3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094F3D8);
  }
  return result;
}

uint64_t sub_1000765B0(void *a1)
{
  return sub_1000AEF90(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1000765D0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100076630()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100076680()
{
  unint64_t result = qword_100965DA8;
  if (!qword_100965DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965DA8);
  }
  return result;
}

uint64_t sub_1000766D4()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000767BC()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  uint64_t v4 = v3 + v1[9];
  uint64_t v5 = type metadata accessor for Date();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1000AFA94(&qword_10094C1F8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v7 = (id *)(v3 + v1[11]);
  uint64_t v8 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {

    v6((uint64_t)v7 + *(int *)(v8 + 20), v5);
  }
  sub_1000AFA94(&qword_10094C200);
  swift_release();

  uint64_t v9 = (id *)(v3 + v1[13]);
  uint64_t v10 = type metadata accessor for MetricFormattingHelper();
  uint64_t v11 = (char *)v9 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100076A58()
{
  uint64_t v1 = type metadata accessor for DashboardCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v3 + *(int *)(v1 + 20));
  uint64_t v5 = v3 + *(int *)(v1 + 24);
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100076B98()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100076BE0()
{
  OnboardingNavigationuint64_t View = type metadata accessor for TrainingLoadOnboardingNavigationView();
  unint64_t v2 = (void *)(v0
                + ((*(unsigned __int8 *)(*(void *)(OnboardingNavigationView - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(OnboardingNavigationView - 8) + 80)));
  if (*v2) {
    swift_release();
  }
  if (v2[2]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = (char *)v2 + *(int *)(OnboardingNavigationView + 36);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100076D34()
{
  uint64_t v1 = (int *)type metadata accessor for CardConfigurationView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100076F18()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100076F58(uint64_t *a1)
{
  uint64_t v2 = sub_1000AFA94(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_100076FE4()
{
  uint64_t v1 = (int *)type metadata accessor for SmallAwardsCardView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v4 + v1[5]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = v4 + v1[11];
  if (*(void *)(v6 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v6);
  }
  uint64_t v7 = v4 + v1[12];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v9 = type metadata accessor for GeometryProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = v4 + v1[13];
  if (!v11(v12, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_1000AFA94(&qword_10094C588);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000772A0()
{
  uint64_t v1 = (int *)(type metadata accessor for MindfulnessItemView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = (char *)v2 + v1[12];
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000AFA94(&qword_100950BB0);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000773DC()
{
  uint64_t v1 = type metadata accessor for DataLinkCommand();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10007746C()
{
  sub_10026065C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_1000774A8()
{
  uint64_t v1 = (int *)(type metadata accessor for MirrorPlatterView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  swift_release();
  swift_release();

  uint64_t v3 = (char *)v2 + v1[13];
  uint64_t v4 = type metadata accessor for MetricPlatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000AFA94(&qword_100952998);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000775D4()
{
  uint64_t v1 = (int *)type metadata accessor for MetricCardBarChartView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = (id *)(v3 + v1[9]);

  uint64_t v6 = type metadata accessor for MetricFormattingHelper();
  uint64_t v7 = (char *)v5 + *(int *)(v6 + 20);
  uint64_t v8 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v3 + v1[10]);
  uint64_t v9 = v3 + v1[11];
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v3 + v1[12];
  uint64_t v12 = type metadata accessor for Calendar.Component();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v3 + v1[13];
  uint64_t v14 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  uint64_t v15 = v3 + v1[15];
  uint64_t v16 = type metadata accessor for AxisMarkValues();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);

  return swift_deallocObject();
}

uint64_t sub_100077888()
{
  uint64_t v1 = (int *)(type metadata accessor for ScheduleDayRowView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocObject();
}

uint64_t sub_100077988()
{
  uint64_t v1 = (int *)type metadata accessor for MetricDetailChartView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = (id *)(v2 + v1[6]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for MetricDetailViewModel();
  uint64_t v5 = (char *)v3 + *(int *)(v4 + 36);
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = (char *)v3 + *(int *)(v4 + 44);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = (id *)(v2 + v1[7]);

  uint64_t v13 = type metadata accessor for MetricFormattingHelper();
  uint64_t v14 = (char *)v12 + *(int *)(v13 + 20);
  uint64_t v15 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);

  uint64_t v16 = v2 + v1[8];
  swift_release();
  swift_release();
  unint64_t v17 = (id *)(v16 + *(int *)(sub_1000AFA94(&qword_10094C3D0) + 32));
  uint64_t v18 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {

    v11((char *)v17 + *(int *)(v18 + 20), v9);
  }
  Swift::UInt v19 = (char *)(v2 + v1[9]);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9)) {
    v11(v19, v9);
  }
  sub_1000AFA94(&qword_100953B88);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100077CEC()
{
  uint64_t v1 = (int *)type metadata accessor for CardTypeConfigurationRoomView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[6];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v3 + v1[15];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v3 + v1[16], v7);

  return swift_deallocObject();
}

uint64_t sub_100077ED0()
{
  uint64_t v1 = (int *)type metadata accessor for ActivitySharingReplyEditView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1002B6238();
  uint64_t v4 = v3 + v1[9];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v3 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Reply();
  uint64_t v9 = v7 + *(int *)(v8 + 24);
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v7 + *(int *)(v8 + 32);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return swift_deallocObject();
}

uint64_t sub_100078114()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007816C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000781B4()
{
  uint64_t v1 = (int *)type metadata accessor for LargeAwardsCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v3 + v1[5]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v5 = v3 + v1[11];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  uint64_t v6 = v3 + v1[12];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v3 + v1[16];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1000AFA94(&qword_10094C588);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078470()
{
  uint64_t v1 = (int *)(type metadata accessor for MetricFamilyRoomView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (id *)(v2 + v1[9]);

  uint64_t v4 = type metadata accessor for MetricFormattingHelper();
  uint64_t v5 = (char *)v3 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078628()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;

  uint64_t v5 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v6 = v4 + v5[5];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + v5[6];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  uint64_t v10 = v4 + v1[12];
  uint64_t v11 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_deallocObject();
}

uint64_t sub_10007880C()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100078884()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) - 8) + 80);
  unint64_t v2 = (id *)(v0 + ((v1 + 16) & ~v1));

  unint64_t v3 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v4 = (char *)v2 + v3[5];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)v2 + v3[6];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v9 = (char *)v2 + v8[10];
  uint64_t v10 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078A6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078AC4(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_100078B14()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivitySharingFriendListItemView() - 8);
  unint64_t v2 = (id *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  swift_release();
  unint64_t v3 = (int *)type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v4 = (char *)v2 + v3[6];
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7((char *)v2 + v3[7], v5);
  uint64_t v8 = (char *)v2 + v3[8];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078CD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078D20()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutReportTrackIssueView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078E44()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078E84()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100078ECC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for WorkoutChart() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + v4[10];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v2 + v4[11], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007909C()
{
  uint64_t v1 = (int *)(type metadata accessor for MetricCardLineChartView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = (id *)(v2 + v1[9]);

  uint64_t v4 = type metadata accessor for MetricFormattingHelper();
  uint64_t v5 = (char *)v3 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  uint64_t v7 = v2 + v1[11];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_deallocObject();
}

uint64_t sub_100079208()
{
  swift_release();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100079258()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActivitySharingSettings();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_100079364()
{
  uint64_t v1 = type metadata accessor for EffortUtilities.OvernightVitalsState();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1000793F4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for WorkoutChartView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + v4[10];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v2 + v4[11], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000795C4()
{
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(View - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(View - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v3 + *(int *)(View + 28);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  sub_1000917F8(*(void *)(v5 + Card[5]), *(void *)(v5 + Card[5] + 8), *(unsigned char *)(v5 + Card[5] + 16));
  sub_1000904DC(*(void *)(v5 + Card[9]), *(void *)(v5 + Card[9] + 8), *(unsigned char *)(v5 + Card[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[11]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[12]);
  uint64_t v8 = v3 + *(int *)(View + 32);
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }

  return swift_deallocObject();
}

uint64_t sub_1000797A0()
{
  uint64_t v1 = type metadata accessor for ActivityRingsCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v3 + *(int *)(v1 + 24);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for ActivityRingsCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));

  uint64_t v8 = v5 + v7[10];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  uint64_t v11 = v3 + *(int *)(v1 + 28);
  if (*(void *)(v11 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000799FC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100079A3C()
{
  DetailsStackedChartuint64_t View = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)DetailsStackedChartView - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)DetailsStackedChartView - 1) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v3, DataType);

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v5 = v2 + DetailsStackedChartView[11];
  uint64_t v6 = type metadata accessor for DayIndex();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  sub_1000AFA94(&qword_1009614F8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v7(v2 + DetailsStackedChartView[16], v6);
  sub_1001AEDC8(*(id *)(v2 + DetailsStackedChartView[17]), *(unsigned char *)(v2 + DetailsStackedChartView[17] + 8));
  uint64_t v8 = v2 + DetailsStackedChartView[18];
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v2 + DetailsStackedChartView[19];
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100079D4C()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackItemView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = type metadata accessor for FitnessPlusStackViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v2 + *(int *)(v5 + 32), v3);
  uint64_t v6 = v2 + *(int *)(v5 + 36);
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();
  uint64_t v8 = v2 + v1[11];
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_1000AFA94(&qword_100950BB0);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100079F5C()
{
  uint64_t v1 = (int *)(type metadata accessor for WorkoutItemView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  uint64_t v3 = (char *)v2 + v1[12];
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000AFA94(&qword_100950BB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A0B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutChartableMetricsView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A1D8()
{
  uint64_t v1 = type metadata accessor for NavigationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A360()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ScheduleDayRowButton() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[11], v1);

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A478()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadDetailsView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  uint64_t v3 = (char *)v2 + v1[14];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v3, DataType);
  sub_1000AFA94(&qword_100964928);
  swift_release();
  swift_release();
  sub_1001AEDC8(*(id *)((char *)v2 + v1[16]), *((unsigned char *)v2 + v1[16] + 8));

  return swift_deallocObject();
}

uint64_t sub_10007A5E0()
{
  uint64_t v1 = (int *)type metadata accessor for MirrorView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  swift_release();

  swift_release();
  uint64_t v4 = v0 + v3 + v1[7];
  uint64_t v5 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  if (*(void *)(v0 + v3 + v1[9])) {
    swift_release();
  }
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A750()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007A8A0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for WorkoutDetailChartView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + v4[10];
  uint64_t v6 = type metadata accessor for Date();
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v2 + v4[11], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007AA6C()
{
  uint64_t v1 = type metadata accessor for WorkoutChartGroupView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007ABCC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 96)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10007AC3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007AC8C()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadItemsList() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  uint64_t v3 = (char *)v2 + v1[13];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v3, DataType);

  sub_1001AEDC8(*(id *)((char *)v2 + v1[15]), *((unsigned char *)v2 + v1[15] + 8));

  return swift_deallocObject();
}

uint64_t sub_10007ADD0()
{
  uint64_t v1 = (int *)type metadata accessor for FriendsHighlightCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = v3 + v1[6];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for FriendsHighlightCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(v7 + 20)), *(void *)(v5 + *(int *)(v7 + 20) + 8), *(unsigned char *)(v5 + *(int *)(v7 + 20) + 16));
  swift_bridgeObjectRelease();

  uint64_t v8 = v3 + v1[7];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }

  return swift_deallocObject();
}

uint64_t sub_10007AF7C()
{
  Carduint64_t View = (int *)type metadata accessor for LoadCardView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)CardView - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)CardView - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + CardView[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = type metadata accessor for LoadCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(Card + 20)), *(void *)(v5 + *(int *)(Card + 20) + 8), *(unsigned char *)(v5 + *(int *)(Card + 20) + 16));

  uint64_t v8 = v3 + CardView[6];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  sub_1001AEDC8(*(id *)(v3 + CardView[7]), *(unsigned char *)(v3 + CardView[7] + 8));

  return swift_deallocObject();
}

uint64_t sub_10007B12C()
{
  sub_10026065C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_10007B168()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10007B1FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10007B23C()
{
  return AxisGridLine.init(centered:stroke:)();
}

void sub_10007B2A8(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1000AFA94(&qword_10095F238);
  sub_10007B2F0(v1, a1 + *(int *)(v3 + 44));
}

void sub_10007B2F0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v164 = a1;
  uint64_t v161 = a2;
  uint64_t v153 = type metadata accessor for AccessibilityTraits();
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v151 = (char *)&v145 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1000AFA94(&qword_10095F240);
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v157 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1000AFA94(&qword_10095F248);
  __chkstk_darwin(v146);
  uint64_t v148 = (char *)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1000AFA94(&qword_10095F250);
  uint64_t v159 = *(void *)(v183 - 8);
  uint64_t v5 = __chkstk_darwin(v183);
  uint64_t v147 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v156 = (char *)&v145 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  id v155 = (char *)&v145 - v10;
  __chkstk_darwin(v9);
  uint64_t v154 = (uint64_t)&v145 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_10095F258);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v160 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v182 = (char *)&v145 - v15;
  uint64_t v178 = sub_1000AFA94(&qword_10095F260);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  objc_super v172 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_1000AFA94(&qword_10095F268);
  __chkstk_darwin(v173);
  int v175 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1000AFA94(&qword_10095F270);
  __chkstk_darwin(v174);
  uint64_t v176 = (uint64_t)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1000AFA94(&qword_10095F278);
  __chkstk_darwin(v181);
  uint64_t v180 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10095F280);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v158 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v179 = (char *)&v145 - v24;
  __chkstk_darwin(v23);
  uint64_t v186 = (uint64_t)&v145 - v25;
  uint64_t v188 = type metadata accessor for BlendMode();
  *(void *)&long long v189 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v187 = (char *)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1000AFA94(&qword_10095F288);
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v28 = (char *)&v145 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_1000AFA94(&qword_10095F290) - 8;
  __chkstk_darwin(v167);
  id v30 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_1000AFA94(&qword_10095F298) - 8;
  __chkstk_darwin(v169);
  uint64_t v162 = (uint64_t)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_1000AFA94(&qword_10095F2A0) - 8;
  __chkstk_darwin(v168);
  uint64_t v163 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1000AFA94(&qword_10095F2A8);
  __chkstk_darwin(v165);
  uint64_t v34 = (char *)&v145 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000AFA94(&qword_10095F2B0);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v185 = (uint64_t)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v184 = (uint64_t)&v145 - v38;
  uint64_t v39 = sub_10007D164();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  char v46 = static Edge.Set.all.getter();
  uint64_t v201 = v39;
  uint64_t v202 = v41;
  uint64_t v203 = v43;
  uint64_t v204 = v45;
  LOBYTE(v205) = v46;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v208 = 0;
  uint64_t v209 = 0x4008000000000000;
  LOBYTE(v210) = 0;
  static Font.Weight.semibold.getter();
  sub_1000AFA94(&qword_10095F2B8);
  sub_10007C79C(&qword_10095F2C0, &qword_10095F2B8, (void (*)(void))sub_1000E0FC4);
  View.fontWeight(_:)();
  sub_1000A1760(v39, v41, v43, v45);
  uint64_t v47 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = v170;
  uint64_t v50 = v171;
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v30, v28, v171);
  unint64_t v51 = (uint64_t *)&v30[*(int *)(v167 + 44)];
  *unint64_t v51 = KeyPath;
  v51[1] = v47;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
  LODWORD(v47) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v52 = v162;
  sub_1000AEF2C((uint64_t)v30, v162, &qword_10095F290);
  *(_DWORD *)(v52 + *(int *)(v169 + 44)) = v47;
  sub_10008DB18((uint64_t)v30, &qword_10095F290);
  uint64_t v53 = v189;
  uint64_t v54 = *(void (**)(char *))(v189 + 104);
  uint64_t v55 = v187;
  LODWORD(v171) = enum case for BlendMode.plusLighter(_:);
  uint64_t v56 = v188;
  uint64_t v170 = v189 + 104;
  uint64_t v169 = (uint64_t)v54;
  v54(v187);
  uint64_t v57 = (uint64_t)v163;
  id v58 = &v163[*(int *)(v168 + 44)];
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v168 = v53 + 16;
  uint64_t v167 = (uint64_t)v59;
  v59(v58, v55, v56);
  sub_1000AEF2C(v52, v57, &qword_10095F298);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  *(void *)&long long v189 = v53 + 8;
  char v166 = v60;
  v60(v55, v56);
  sub_10008DB18(v52, &qword_10095F298);
  sub_1000AEF2C(v57, (uint64_t)v34, &qword_10095F2A0);
  v34[*(int *)(v165 + 36)] = 1;
  sub_10008DB18(v57, &qword_10095F2A0);
  sub_10007D048();
  uint64_t v61 = v185;
  View.accessibilityHidden(_:)();
  uint64_t v62 = (uint64_t)v34;
  unsigned __int8 v63 = v164;
  sub_10008DB18(v62, &qword_10095F2A8);
  sub_1000AEEC8(v61, v184, &qword_10095F2B0);
  uint64_t v201 = (uint64_t)sub_10007C81C();
  uint64_t v202 = v64;
  sub_1000A06D0();
  uint64_t v65 = Text.init<A>(_:)();
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  LOBYTE(v30) = v70 & 1;
  uint64_t v71 = swift_getKeyPath();
  LOBYTE(v56) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v201 = v65;
  uint64_t v202 = v67;
  LOBYTE(v203) = (_BYTE)v30;
  uint64_t v204 = v69;
  uint64_t v205 = v71;
  uint64_t v206 = 1;
  LOBYTE(v207) = 0;
  LOBYTE(v208) = v56;
  uint64_t v209 = v72;
  uint64_t v210 = v73;
  uint64_t v211 = v74;
  uint64_t v212 = v75;
  char v213 = 0;
  static Font.Weight.semibold.getter();
  sub_1000AFA94(&qword_10095F2F0);
  sub_10007C79C(&qword_10095F2F8, &qword_10095F2F0, (void (*)(void))sub_1000E2004);
  uint64_t v76 = v172;
  View.fontWeight(_:)();
  sub_1000A06C0(v65, v67, (char)v30);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v77 = v63[3];
  uint64_t v78 = v63[4];
  sub_10007E4EC(v63, v77);
  uint64_t v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
  if (v81 == 3 && v79 == 5 && !v80)
  {
    static Font.body.getter();
    uint64_t v82 = Font.feature(_:)();
    swift_release();
  }
  else
  {
    sub_1000917F8(v79, v80, v81);
    uint64_t v82 = static Font.body.getter();
  }
  uint64_t v83 = swift_getKeyPath();
  uint64_t v84 = v177;
  uint64_t v85 = (uint64_t)v175;
  uint64_t v86 = v178;
  (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v175, v76, v178);
  uint64_t v87 = (uint64_t *)(v85 + *(int *)(v173 + 36));
  uint64_t *v87 = v83;
  v87[1] = v82;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v76, v86);
  int v88 = static HierarchicalShapeStyle.primary.getter();
  uint64_t v89 = v176;
  sub_1000AEF2C(v85, v176, &qword_10095F268);
  *(_DWORD *)(v89 + *(int *)(v174 + 36)) = v88;
  sub_10008DB18(v85, &qword_10095F268);
  uint64_t v90 = v187;
  uint64_t v91 = v188;
  ((void (*)(char *, void, uint64_t))v169)(v187, v171, v188);
  uint64_t v92 = (uint64_t)v180;
  ((void (*)(char *, char *, uint64_t))v167)(&v180[*(int *)(v181 + 36)], v90, v91);
  sub_1000AEF2C(v89, v92, &qword_10095F270);
  v166(v90, v91);
  sub_10008DB18(v89, &qword_10095F270);
  uint64_t v93 = sub_1000AFA94(&qword_10094D178);
  uint64_t v94 = swift_allocObject();
  long long v189 = xmmword_100752410;
  *(_OWORD *)(v94 + 16) = xmmword_100752410;
  *(void *)(v94 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
  *(void *)(v94 + 40) = v95;
  *(void *)(v94 + 48) = sub_10007C81C();
  *(void *)(v94 + 56) = v96;
  *(void *)(v94 + 64) = 1954047316;
  *(void *)(v94 + 72) = 0xE400000000000000;
  static FitnessAccessibilityIdentifier.build(_:)();
  swift_bridgeObjectRelease();
  sub_10007D0C4();
  uint64_t v97 = (uint64_t)v179;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10008DB18(v92, &qword_10095F278);
  sub_1000AEEC8(v97, v186, &qword_10095F280);
  uint64_t v98 = v63[3];
  uint64_t v99 = v63[4];
  sub_10007E4EC(v63, v98);
  LOBYTE(v98) = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 32))(v98, v99);
  sub_100099374((uint64_t)v63, (uint64_t)&v201);
  uint64_t v100 = v183;
  uint64_t v101 = (uint64_t)v182;
  if (v98) {
    goto LABEL_11;
  }
  uint64_t v102 = v204;
  uint64_t v103 = v205;
  sub_10007E4EC(&v201, v204);
  unint64_t v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 16))(v102, v103);
  if (v106 == 3 && v104 <= 6 && ((1 << v104) & 0x43) != 0)
  {
    sub_1000917F8(v104, v105, 3);
LABEL_11:
    sub_1000901D4((uint64_t)&v201);
    uint64_t v107 = 1;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56))(v101, v107, 1, v100);
    uint64_t v137 = v184;
    uint64_t v138 = v185;
    sub_1000AEF2C(v184, v185, &qword_10095F2B0);
    uint64_t v139 = v186;
    uint64_t v140 = v158;
    sub_1000AEF2C(v186, v158, &qword_10095F280);
    uint64_t v141 = v160;
    sub_1000AEF2C(v101, v160, &qword_10095F258);
    uint64_t v142 = v161;
    sub_1000AEF2C(v138, v161, &qword_10095F2B0);
    id v143 = (int *)sub_1000AFA94(&qword_10095F318);
    sub_1000AEF2C(v140, v142 + v143[12], &qword_10095F280);
    uint64_t v144 = v142 + v143[16];
    *(void *)uint64_t v144 = 0;
    *(unsigned char *)(v144 + 8) = 0;
    sub_1000AEF2C(v141, v142 + v143[20], &qword_10095F258);
    sub_10008DB18(v101, &qword_10095F258);
    sub_10008DB18(v139, &qword_10095F280);
    sub_10008DB18(v137, &qword_10095F2B0);
    sub_10008DB18(v141, &qword_10095F258);
    sub_10008DB18(v140, &qword_10095F280);
    sub_10008DB18(v138, &qword_10095F2B0);
    return;
  }
  uint64_t v188 = v93;
  sub_1000917F8(v104, v105, v106);
  sub_1000901D4((uint64_t)&v201);
  uint64_t v108 = Image.init(_internalSystemName:)();
  char v109 = static Edge.Set.all.getter();
  uint64_t v110 = static Font.footnote.getter();
  uint64_t v111 = swift_getKeyPath();
  uint64_t v192 = v108;
  LOBYTE(v193) = 1;
  char v194 = v109;
  long long v195 = xmmword_100768480;
  uint64_t v196 = 0;
  uint64_t v197 = 0;
  char v198 = 0;
  uint64_t v199 = v111;
  uint64_t v200 = v110;
  static Font.Weight.semibold.getter();
  sub_1000AFA94(&qword_10095F320);
  sub_10007D37C();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  id v112 = [self keyColors];
  if (v112)
  {
    uint64_t v113 = v112;
    id v114 = [v112 nonGradientTextColor];

    if (v114)
    {
      uint64_t v115 = Color.init(uiColor:)();
      uint64_t v116 = v149;
      uint64_t v117 = (uint64_t)v148;
      uint64_t v118 = v157;
      uint64_t v119 = v150;
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v148, v157, v150);
      *(void *)(v117 + *(int *)(v146 + 36)) = v115;
      (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v119);
      unint64_t v120 = v151;
      static AccessibilityTraits.isImage.getter();
      sub_10007D440();
      uint64_t v121 = (uint64_t)v147;
      View.accessibilityRemoveTraits(_:)();
      uint64_t v122 = *(void (**)(char *, uint64_t))(v152 + 8);
      uint64_t v123 = v153;
      v122(v120, v153);
      sub_10008DB18(v117, &qword_10095F248);
      static AccessibilityTraits.isButton.getter();
      uint64_t v124 = (uint64_t)v156;
      ModifiedContent<>.accessibilityAddTraits(_:)();
      v122(v120, v123);
      sub_10008DB18(v121, &qword_10095F250);
      uint64_t v125 = swift_allocObject();
      *(_OWORD *)(v125 + 16) = v189;
      *(void *)(v125 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
      *(void *)(v125 + 40) = v126;
      uint64_t v190 = 0;
      unint64_t v191 = 0xE000000000000000;
      uint64_t v127 = v63[3];
      uint64_t v128 = v63[4];
      sub_10007E4EC(v63, v127);
      uint64_t v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v128 + 16))(v127, v128);
      uint64_t v131 = v130;
      LOBYTE(v128) = v132;
      uint64_t v192 = v129;
      uint64_t v193 = v130;
      char v194 = v132;
      _print_unlocked<A, B>(_:_:)();
      sub_1000917F8(v129, v131, v128);
      unint64_t v133 = v191;
      *(void *)(v125 + 48) = v190;
      *(void *)(v125 + 56) = v133;
      *(void *)(v125 + 64) = static FitnessAccessibilityIdentifier.SummaryView.editButton.getter();
      *(void *)(v125 + 72) = v134;
      static FitnessAccessibilityIdentifier.build(_:)();
      swift_bridgeObjectRelease();
      uint64_t v135 = (uint64_t)v155;
      ModifiedContent<>.accessibilityIdentifier(_:)();
      swift_bridgeObjectRelease();
      sub_10008DB18(v124, &qword_10095F250);
      uint64_t v136 = v154;
      sub_1000AEEC8(v135, v154, &qword_10095F250);
      sub_1000AEEC8(v136, v101, &qword_10095F250);
      uint64_t v107 = 0;
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10007C79C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10007C81C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094D210);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = type metadata accessor for ActivityRingsCard();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = v0[3];
  uint64_t v10 = v0[4];
  sub_10007E4EC(v0, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v13 = v12;
  LOBYTE(v10) = v14;
  unsigned __int8 v15 = sub_10007CCD8(v11, v12, v14);
  sub_1000917F8(v11, v13, v10);
  if (v15 - 1 >= 2)
  {
    if (v15) {
      goto LABEL_9;
    }
    sub_10008E75C((uint64_t)v1, (uint64_t)v53);
    sub_1000AFA94(&qword_10094D218);
    int v21 = swift_dynamicCast();
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v21)
    {
      v22(v4, 1, 1, v5);
      sub_10008DB18((uint64_t)v4, &qword_10094D210);
      uint64_t v37 = v1[3];
      uint64_t v38 = v1[4];
      sub_10007E4EC(v1, v37);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
      uint64_t v41 = v40;
      char v43 = v42;
      LOBYTE(v38) = sub_10007CCD8(v39, v40, v42);
      sub_1000917F8(v39, v41, v43);
      return (id)sub_10007CE70(v38);
    }
    v22(v4, 0, 1, v5);
    sub_10007DA3C((uint64_t)v4, (uint64_t)v8);
    uint64_t v23 = *(void **)&v8[*(int *)(v5 + 36)];
    if (v23)
    {
      if ([v23 _isStandalonePhoneSummary])
      {
LABEL_8:
        id v24 = [self mainBundle];
        NSString v25 = String._bridgeToObjectiveC()();
        id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_19:
        sub_1000C0CEC((uint64_t)v8);
        return (id)v27;
      }
    }
    else
    {
      id result = [self sharedBehavior];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v44 = result;
      unsigned __int8 v45 = [result isStandalonePhoneFitnessMode];

      if (v45) {
        goto LABEL_8;
      }
    }
    uint64_t v46 = v1[3];
    uint64_t v47 = v1[4];
    sub_10007E4EC(v1, v46);
    uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
    uint64_t v50 = v49;
    LOBYTE(v46) = v51;
    LOBYTE(v47) = sub_10007CCD8(v48, v49, v51);
    sub_1000917F8(v48, v50, v46);
    uint64_t v27 = sub_10007CE70(v47);
    goto LABEL_19;
  }
  uint64_t v16 = v1[3];
  uint64_t v17 = v1[4];
  sub_10007E4EC(v1, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  if (v20)
  {
    sub_1000917F8(v18, v19, v20);
LABEL_9:
    uint64_t v28 = v1[3];
    uint64_t v29 = v1[4];
    sub_10007E4EC(v1, v28);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    uint64_t v32 = v31;
    char v34 = v33;
    char v35 = sub_10007CCD8(v30, v31, v33);
    sub_1000917F8(v30, v32, v34);
    return (id)sub_10007CE70(v35);
  }

  return (id)sub_10007DA24(v18);
}

unint64_t sub_10007CCD8(char a1, uint64_t a2, char a3)
{
  unint64_t result = 8;
  switch(a3)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 7;
      break;
    case 3:
      unint64_t result = 0x704050809030600uLL >> (8 * a1);
      break;
    default:
      unint64_t result = byte_100772EA6[a1];
      break;
  }
  return result;
}

uint64_t sub_10007CD3C(char a1, Swift::Int a2, uint64_t a3, void *a4)
{
  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "CARD_FAMILY_");
  BYTE5(v14[1]) = 0;
  HIWORD(v14[1]) = -5120;
  v7._countAndFlagsBits = sub_10007CE88(a1);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = a3;
  v8._object = a4;
  String.append(_:)(v8);
  id v9 = [self mainBundle:v14[0] v14[1]];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t sub_10007CE70(char a1)
{
  return sub_10007CD3C(a1, 19, 0x454D414E5FLL, (void *)0xE500000000000000);
}

uint64_t sub_10007CE88(char a1)
{
  uint64_t result = 0x53474E4952;
  switch(a1)
  {
    case 1:
      return 0x454D5F5350455453;
    case 2:
      uint64_t v3 = 0x534548535550;
      return v3 & 0xFFFFFFFFFFFFLL | 0x4D5F000000000000;
    case 3:
      return 0x59524F54534948;
    case 4:
      return 1397770580;
    case 5:
      return 0x505353454E544946;
    case 6:
      return 1145130828;
    case 7:
      return 0x53444E455254;
    case 8:
      return 0x53444E45495246;
    case 9:
      return 0x534452415741;
    case 10:
    case 11:
      return 0xD00000000000001FLL;
    case 12:
      unsigned int v4 = 1313756498;
      goto LABEL_18;
    case 13:
      unsigned int v4 = 1279482179;
      goto LABEL_18;
    case 14:
      return 0xD000000000000010;
    case 15:
      uint64_t v3 = 0x474E494B4948;
      return v3 & 0xFFFFFFFFFFFFLL | 0x4D5F000000000000;
    case 16:
      unsigned int v4 = 1263288663;
LABEL_18:
      uint64_t result = v4 | 0x5F474E4900000000;
      break;
    case 17:
      uint64_t result = 0x5F4C5546444E494DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10007D048()
{
  unint64_t result = qword_10095F2D0;
  if (!qword_10095F2D0)
  {
    sub_1000A1370(&qword_10095F2A8);
    sub_1000E188C();
    sub_1000E16C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F2D0);
  }
  return result;
}

unint64_t sub_10007D0C4()
{
  unint64_t result = qword_10095F300;
  if (!qword_10095F300)
  {
    sub_1000A1370(&qword_10095F278);
    sub_100019144(&qword_10095F308, &qword_10095F270, (void (*)(void))sub_100013880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F300);
  }
  return result;
}

uint64_t sub_10007D164()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  sub_10007E4EC(v0, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v7)
  {
    sub_1000917F8(v5, v6, v7);
    return 0;
  }
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  sub_10007E4EC(v0, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  uint64_t v12 = v11;
  LOBYTE(v9) = v13;
  char v14 = sub_10007CCD8(v10, v11, v13);
  sub_1000917F8(v10, v12, v9);
  if ((v14 - 1) < 2u) {
    return 0;
  }
  uint64_t v16 = v1[3];
  uint64_t v17 = v1[4];
  sub_10007E4EC(v1, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  uint64_t v20 = v19;
  LOBYTE(v16) = v21;
  LOBYTE(v17) = sub_10007CCD8(v18, v19, v21);
  sub_1000917F8(v18, v20, v16);
  sub_1001C6254(v17);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
  Image.init(_internalSystemName:)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v23);
  LocalizedStringKey.init(stringInterpolation:)();
  return Text.init(_:tableName:bundle:comment:)();
}

unint64_t sub_10007D37C()
{
  unint64_t result = qword_10095F328;
  if (!qword_10095F328)
  {
    sub_1000A1370(&qword_10095F320);
    sub_10007C79C(&qword_10095F330, &qword_10095F338, (void (*)(void))sub_1000E1E3C);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F328);
  }
  return result;
}

unint64_t sub_10007D440()
{
  unint64_t result = qword_10095F350;
  if (!qword_10095F350)
  {
    sub_1000A1370(&qword_10095F248);
    sub_1000A1370(&qword_10095F320);
    sub_10007D37C();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F350);
  }
  return result;
}

uint64_t sub_10007D514(char a1, Swift::Int a2, uint64_t a3, void *a4)
{
  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = sub_10007D644(a1);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = a3;
  v8._object = a4;
  String.append(_:)(v8);
  id v9 = [self mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t sub_10007D644(char a1)
{
  uint64_t result = 0x54535F4C41544F54;
  switch(a1)
  {
    case 1:
      return 0x49445F4C41544F54;
    case 2:
      return 0x55505F4C41544F54;
    case 3:
      return 0xD000000000000019;
    case 4:
    case 13:
    case 21:
    case 23:
      return 0xD000000000000010;
    case 5:
      unsigned int v3 = 1313756498;
      goto LABEL_25;
    case 6:
      return 0xD000000000000011;
    case 7:
      unsigned int v4 = 1313756498;
      goto LABEL_28;
    case 8:
      unsigned int v5 = 1313756498;
      goto LABEL_17;
    case 9:
      unsigned int v6 = 1313756498;
      goto LABEL_19;
    case 10:
      return 0xD00000000000001BLL;
    case 11:
      return 0xD00000000000001CLL;
    case 12:
      return 0xD000000000000015;
    case 14:
      unsigned int v3 = 1279482179;
      goto LABEL_25;
    case 15:
      return 0xD000000000000011;
    case 16:
      unsigned int v4 = 1279482179;
      goto LABEL_28;
    case 17:
      unsigned int v5 = 1279482179;
LABEL_17:
      uint64_t result = v5 | 0x5F474E4900000000;
      break;
    case 18:
      unsigned int v6 = 1279482179;
LABEL_19:
      uint64_t result = v6 | 0x5F474E4900000000;
      break;
    case 19:
      uint64_t result = 0x445F474E494B4948;
      break;
    case 20:
      uint64_t result = 0x545F474E494B4948;
      break;
    case 22:
      uint64_t result = 0x505F474E494B4948;
      break;
    case 24:
      unsigned int v3 = 1263288663;
LABEL_25:
      uint64_t result = v3 | 0x5F474E4900000000;
      break;
    case 25:
      uint64_t result = 0xD000000000000011;
      break;
    case 26:
      unsigned int v4 = 1263288663;
LABEL_28:
      uint64_t result = v4 | 0x5F474E4900000000;
      break;
    case 27:
      uint64_t result = 0xD000000000000011;
      break;
    case 28:
    case 29:
      uint64_t result = 0x474E494D4D495753;
      break;
    case 30:
      uint64_t result = 0xD000000000000018;
      break;
    case 31:
      uint64_t result = 0xD000000000000014;
      break;
    case 32:
      uint64_t result = 0xD000000000000019;
      break;
    case 33:
      uint64_t result = 0xD000000000000014;
      break;
    case 34:
      uint64_t result = 0xD000000000000017;
      break;
    case 35:
      uint64_t result = 0xD000000000000013;
      break;
    case 36:
      uint64_t result = 0xD000000000000018;
      break;
    case 37:
      uint64_t result = 0xD000000000000013;
      break;
    case 38:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007DA24(char a1)
{
  return sub_10007D514(a1, 23, 0x454D414E5FLL, (void *)0xE500000000000000);
}

uint64_t sub_10007DA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityRingsCard();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10007DAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  unsigned int v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

id sub_10007DB1C(uint64_t a1, void *a2)
{
  switch(a1)
  {
    case 0:
      uint64_t v2 = self;
      id v3 = [v2 fractionalWidthDimension:1.0];
      id v4 = [v2 estimatedDimension:100.0];
      id v5 = [self sizeWithWidthDimension:v3 heightDimension:v4];

      unsigned int v6 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_100751040;
      *(void *)(v7 + 32) = [self itemWithLayoutSize:v5];
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v9 = [v6 horizontalGroupWithLayoutSize:v5 subitems:isa];

      id v10 = [self sectionWithGroup:v9];
      [v10 setContentInsets:0.0, 12.0, 0.0, 12.0];
      goto LABEL_8;
    case 1:
      uint64_t v12 = self;
      id v13 = [v12 estimatedDimension:100.0];
      id v14 = [v12 estimatedDimension:100.0];
      unsigned __int8 v15 = self;
      id v16 = [v15 sizeWithWidthDimension:v13 heightDimension:v14];

      objc_msgSend(objc_msgSend(a2, "container"), "contentSize");
      double v18 = v17;
      swift_unknownObjectRelease();
      id v19 = [v12 absoluteDimension:v18];
      id v20 = [v16 heightDimension];
      id v5 = [v15 sizeWithWidthDimension:v19 heightDimension:v20];

      char v21 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_100751040;
      *(void *)(v22 + 32) = [self itemWithLayoutSize:v16];
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v9 = [v21 horizontalGroupWithLayoutSize:v5 subitems:v23];

      id v24 = [self fixedSpacing:10.0];
      [v9 setInterItemSpacing:v24];

      id v10 = [self sectionWithGroup:v9];
      [v10 setContentInsets:10.0, 20.0, 10.0, 20.0];
      [v10 setInterGroupSpacing:10.0];

      goto LABEL_8;
    case 2:
      NSString v25 = self;
      id v26 = [v25 fractionalWidthDimension:1.0];
      id v27 = [v25 estimatedDimension:100.0];
      id v5 = [self sizeWithWidthDimension:v26 heightDimension:v27];

      uint64_t v28 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_100751040;
      *(void *)(v29 + 32) = [self itemWithLayoutSize:v5];
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      Class v30 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v9 = [v28 horizontalGroupWithLayoutSize:v5 subitems:v30];

      id v31 = [self sectionWithGroup:v9];
      id v10 = v31;
      double v32 = 10.0;
      double v33 = 20.0;
      double v34 = 0.0;
      goto LABEL_7;
    case 3:
      char v35 = self;
      id v36 = [v35 fractionalWidthDimension:1.0];
      id v37 = [v35 estimatedDimension:100.0];
      id v5 = [self sizeWithWidthDimension:v36 heightDimension:v37];

      uint64_t v38 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_100751040;
      *(void *)(v39 + 32) = [self itemWithLayoutSize:v5];
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      Class v40 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v9 = [v38 horizontalGroupWithLayoutSize:v5 subitems:v40];

      id v31 = [self sectionWithGroup:v9];
      id v10 = v31;
      double v32 = 10.0;
      double v33 = 20.0;
      double v34 = 30.0;
LABEL_7:
      [v31 setContentInsets:v32, v33, v34, 20.0];
LABEL_8:

      break;
    default:
      id v10 = 0;
      break;
  }
  return v10;
}

uint64_t sub_10007E2D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10007E314(void *a1)
{
  if (*(unsigned char *)(v1 + 17)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_10007E348(a1, *(void *)v1, *(void *)(v1 + 8), v2 | *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_10007E348(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C4F0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_10007E530();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  char v17 = a4;
  char v18 = 0;
  sub_10007E584();
  uint64_t v12 = v14;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v12)
  {
    LOBYTE(v15) = HIBYTE(a4) & 1;
    char v18 = 1;
    sub_10007E5D8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void *sub_10007E4EC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10007E530()
{
  unint64_t result = qword_10094C4D8;
  if (!qword_10094C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4D8);
  }
  return result;
}

unint64_t sub_10007E584()
{
  unint64_t result = qword_10094C4F8;
  if (!qword_10094C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C4F8);
  }
  return result;
}

unint64_t sub_10007E5D8()
{
  unint64_t result = qword_10094C500;
  if (!qword_10094C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C500);
  }
  return result;
}

uint64_t sub_10007E62C(void *a1)
{
  return sub_10007E644(a1);
}

uint64_t sub_10007E644(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_1000AFA94(&qword_10096A838);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10007E4EC(a1, a1[3]);
  sub_10007E7C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v11 = *v3;
  __int16 v12 = *((_WORD *)v3 + 8);
  v10[15] = 0;
  sub_10007E818();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10007E7C4()
{
  unint64_t result = qword_10096A830;
  if (!qword_10096A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A830);
  }
  return result;
}

unint64_t sub_10007E818()
{
  unint64_t result = qword_10094C510;
  if (!qword_10094C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C510);
  }
  return result;
}

uint64_t sub_10007E86C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v41 = type metadata accessor for TaskPriority();
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SmallAwardsCardView();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v39 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = sub_1000AFA94(&qword_100950348);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100950350);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  id v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100950358);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007ECF4(v2, (uint64_t)v9);
  char v17 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_100950348);
  id v26 = &v13[*(int *)(v11 + 44)];
  *id v26 = v17;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  unsigned char v26[40] = 0;
  sub_10008DB18((uint64_t)v9, &qword_100950348);
  uint64_t v27 = static Alignment.center.getter();
  sub_10007EC98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v27, v28);
  sub_10008DB18((uint64_t)v13, &qword_100950350);
  sub_100080D88(v2, (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v29 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v30 = swift_allocObject();
  sub_10007EC34((uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29);
  static TaskPriority.userInitiated.getter();
  uint64_t v31 = sub_1000AFA94(&qword_100950370);
  uint64_t v32 = v40;
  double v33 = (char *)(v40 + *(int *)(v31 + 36));
  uint64_t v34 = type metadata accessor for _TaskModifier();
  uint64_t v35 = v38;
  uint64_t v36 = v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(&v33[*(int *)(v34 + 20)], v4, v41);
  *(void *)double v33 = &unk_100950368;
  *((void *)v33 + 1) = v30;
  sub_1000AEF2C((uint64_t)v16, v32, &qword_100950358);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
  return sub_10008DB18((uint64_t)v16, &qword_100950358);
}

uint64_t sub_10007EC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmallAwardsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_10007EC98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100950350, &qword_100950358).n128_u64[0];
  return result;
}

uint64_t sub_10007ECF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_1000AFA94(&qword_100950390);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100950398);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_1009503A0);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = a1;
  sub_100092088((uint64_t)&v23 - v14);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for DynamicTypeSize.xxLarge(_:), v9);
  sub_1000A3A40((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)();
  char v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, v9);
  v17(v15, v9);
  if (a1)
  {
    *(void *)uint64_t v8 = static VerticalAlignment.top.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v18 = sub_1000AFA94(&qword_1009503C0);
    sub_1002169E0(v16, (uint64_t)&v8[*(int *)(v18 + 44)]);
    uint64_t v19 = &qword_1009503A0;
    sub_1000AEF2C((uint64_t)v8, (uint64_t)v6, &qword_1009503A0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_1009503B0, &qword_1009503A0);
    sub_1000A132C(&qword_1009503B8, &qword_100950390);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v8;
  }
  else
  {
    *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
    *((void *)v4 + 1) = 0;
    v4[16] = 0;
    uint64_t v21 = sub_1000AFA94(&qword_1009503A8);
    sub_10007F100(v16, (uint64_t)&v4[*(int *)(v21 + 44)]);
    uint64_t v19 = &qword_100950390;
    sub_1000AEF2C((uint64_t)v4, (uint64_t)v6, &qword_100950390);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_1009503B0, &qword_1009503A0);
    sub_1000A132C(&qword_1009503B8, &qword_100950390);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v4;
  }
  return sub_10008DB18(v20, v19);
}

uint64_t sub_10007F100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v110 = type metadata accessor for Font.Leading();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  char v109 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SmallAwardsCardView();
  uint64_t v107 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v107 + 64);
  uint64_t v6 = (int *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v114 = sub_1000AFA94(&qword_100950418);
  uint64_t v7 = *(void *)(v114 - 8);
  uint64_t v103 = v7;
  uint64_t v8 = __chkstk_darwin(v114);
  id v112 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v94 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v94 - v13;
  unint64_t v104 = (char *)&v94 - v13;
  uint64_t v15 = sub_1000AFA94(&qword_100950420);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v111 = (uint64_t)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v94 - v19;
  uint64_t v113 = (uint64_t)&v94 - v19;
  sub_1000AFA94(&qword_10094C588);
  State.projectedValue.getter();
  uint64_t v21 = &v20[*(int *)(v16 + 44)];
  *(void *)uint64_t v21 = 0;
  v21[8] = 0;
  long long v115 = *(_OWORD *)(a1 + v6[17]);
  sub_1000AFA94(&qword_100950388);
  State.wrappedValue.getter();
  uint64_t v22 = v116;
  uint64_t v23 = v6[18];
  uint64_t v98 = v6;
  uint64_t v24 = (char *)(a1 + v23);
  char v25 = *v24;
  uint64_t v26 = *((void *)v24 + 1);
  LOBYTE(v115) = v25;
  *((void *)&v115 + 1) = v26;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  double v27 = 0.0;
  if ((_BYTE)v116) {
    double v27 = 1.0;
  }
  *(void *)&long long v115 = v22;
  *((double *)&v115 + 1) = v27;
  uint64_t v99 = a1;
  sub_100080D88(a1, (uint64_t)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v28 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  uint64_t v29 = swift_allocObject();
  sub_10007EC34((uint64_t)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
  sub_1000AFA94(&qword_100950428);
  sub_10007F9F0(&qword_100950430, &qword_100950428, (void (*)(void))sub_1000E086C);
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v12, v114);
  uint64_t v30 = (void *)(a1 + v6[10]);
  uint64_t v31 = v30[1];
  *(void *)&long long v115 = *v30;
  *((void *)&v115 + 1) = v31;
  unint64_t v97 = sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v32 = Text.init<A>(_:)();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  static Font.caption2.getter();
  unsigned int v96 = enum case for Font.Leading.tight(_:);
  uint64_t v37 = v108;
  uint64_t v95 = *(void (**)(char *))(v108 + 104);
  uint64_t v38 = v109;
  uint64_t v39 = v110;
  v95(v109);
  Font.leading(_:)();
  swift_release();
  uint64_t v94 = *(void (**)(char *, uint64_t))(v37 + 8);
  v94(v38, v39);
  uint64_t v108 = Text.font(_:)();
  uint64_t v106 = v40;
  LOBYTE(v31) = v41;
  uint64_t v107 = v42;
  swift_release();
  int v100 = v31 & 1;
  sub_1000A06C0(v32, v34, v36);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v101 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  char v51 = (void *)(v99 + v98[11]);
  uint64_t v52 = v51[1];
  *(void *)&long long v115 = *v51;
  *((void *)&v115 + 1) = v52;
  swift_bridgeObjectRetain();
  uint64_t v53 = Text.init<A>(_:)();
  uint64_t v55 = v54;
  LOBYTE(v32) = v56 & 1;
  static Font.caption2.getter();
  id v58 = v109;
  uint64_t v57 = v110;
  ((void (*)(char *, void, uint64_t))v95)(v109, v96, v110);
  Font.leading(_:)();
  swift_release();
  v94(v58, v57);
  char v109 = (char *)Text.font(_:)();
  uint64_t v99 = v59;
  LOBYTE(v37) = v60;
  uint64_t v110 = v61;
  swift_release();
  LODWORD(v98) = v37 & 1;
  sub_1000A06C0(v53, v55, v32);
  swift_bridgeObjectRelease();
  uint64_t v62 = swift_getKeyPath();
  LODWORD(v97) = static HierarchicalShapeStyle.secondary.getter();
  unsigned int v96 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v111;
  sub_1000AEF2C(v113, v111, &qword_100950420);
  uint64_t v72 = v103;
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v74 = v112;
  uint64_t v75 = v104;
  uint64_t v76 = v114;
  v73(v112, v104, v114);
  LOBYTE(v37) = v100;
  LOBYTE(v115) = v100;
  uint64_t v77 = v71;
  uint64_t v78 = v105;
  sub_1000AEF2C(v77, v105, &qword_100950420);
  uint64_t v79 = (int *)sub_1000AFA94(&qword_100950440);
  v73((char *)(v78 + v79[12]), v74, v76);
  uint64_t v80 = v78 + v79[16];
  *(void *)uint64_t v80 = 0;
  *(unsigned char *)(v80 + 8) = 0;
  uint64_t v81 = v78 + v79[20];
  uint64_t v83 = v107;
  uint64_t v82 = v108;
  uint64_t v84 = v106;
  *(void *)uint64_t v81 = v108;
  *(void *)(v81 + 8) = v84;
  char v85 = v37;
  *(unsigned char *)(v81 + 16) = v37;
  uint64_t v86 = KeyPath;
  *(void *)(v81 + 24) = v83;
  *(void *)(v81 + 32) = v86;
  *(unsigned char *)(v81 + 40) = 1;
  *(unsigned char *)(v81 + 48) = v101;
  *(void *)(v81 + 56) = v44;
  *(void *)(v81 + 64) = v46;
  *(void *)(v81 + 72) = v48;
  *(void *)(v81 + 80) = v50;
  *(unsigned char *)(v81 + 88) = 0;
  uint64_t v87 = v78 + v79[24];
  uint64_t v88 = (uint64_t)v109;
  uint64_t v89 = v110;
  uint64_t v90 = v99;
  *(void *)uint64_t v87 = v109;
  *(void *)(v87 + 8) = v90;
  LOBYTE(v55) = (_BYTE)v98;
  *(unsigned char *)(v87 + 16) = (_BYTE)v98;
  *(void *)(v87 + 24) = v89;
  *(void *)(v87 + 32) = v62;
  *(unsigned char *)(v87 + 40) = 1;
  *(_DWORD *)(v87 + 44) = v97;
  *(unsigned char *)(v87 + 48) = v96;
  *(void *)(v87 + 56) = v64;
  *(void *)(v87 + 64) = v66;
  *(void *)(v87 + 72) = v68;
  *(void *)(v87 + 80) = v70;
  *(unsigned char *)(v87 + 88) = 0;
  sub_1000A1750(v82, v84, v85);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v88, v90, v55);
  uint64_t v91 = *(void (**)(char *, uint64_t))(v72 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v92 = v114;
  v91(v75, v114);
  sub_10008DB18(v113, &qword_100950420);
  sub_1000A06C0(v88, v90, v55);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v108, v106, v115);
  swift_release();
  swift_bridgeObjectRelease();
  v91(v112, v92);
  return sub_10008DB18(v111, &qword_100950420);
}

uint64_t sub_10007F9F0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007FA6C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v132 = a2;
  uint64_t v112 = a1;
  uint64_t v6 = type metadata accessor for LargeAwardsCardView();
  __chkstk_darwin(v6 - 8);
  long long v115 = (uint64_t *)((char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = sub_1000AFA94(&qword_10094C710);
  __chkstk_darwin(v122);
  uint64_t v118 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094C738);
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v119 = (uint64_t)&v110 - v13;
  uint64_t v128 = sub_1000AFA94(&qword_10094C740);
  __chkstk_darwin(v128);
  uint64_t v129 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AppEntityVisualState();
  uint64_t v125 = *(void *)(v15 - 8);
  uint64_t v126 = v15;
  __chkstk_darwin(v15);
  uint64_t v123 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v17 - 8);
  uint64_t v121 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_10094C6A0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SmallAwardsCardView();
  __chkstk_darwin(v25 - 8);
  double v27 = (uint64_t *)((char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = sub_1000AFA94(&qword_10094C700);
  __chkstk_darwin(v124);
  uint64_t v114 = (uint64_t)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1000AFA94(&qword_10094C748);
  uint64_t v117 = *(void *)(v127 - 8);
  uint64_t v29 = __chkstk_darwin(v127);
  uint64_t v113 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v116 = (char *)&v110 - v31;
  uint64_t v32 = (int *)type metadata accessor for AwardsCardView();
  uint64_t v33 = a3 + v32[5];
  uint64_t v34 = type metadata accessor for AwardsCard();
  uint64_t v35 = v34;
  char v36 = *(unsigned char *)(v33 + *(int *)(v34 + 24));
  uint64_t v130 = v9;
  uint64_t v131 = a4;
  if (v36)
  {
    unint64_t v136 = v34;
    uint64_t v137 = &off_1008C3070;
    uint64_t v37 = sub_1000B1710((uint64_t *)&v134);
    sub_1000809EC(v33, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for AwardsCard);
    uint64_t v38 = *(void **)(v33 + *(int *)(v35 + 48));
    uint64_t v111 = v12;
    if (v38)
    {
      id v39 = v38;
      id v40 = [v39 titleForAchievement:v132];
      if (v40)
      {
        char v41 = v40;
        uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

LABEL_10:
        char v51 = v132;
        uint64_t v52 = sub_100081754(v132);
        uint64_t v54 = v53;
        uint64_t v55 = *(void **)(v33 + *(int *)(v35 + 44));
        sub_1000AEF2C(a3 + v32[7], (uint64_t)v133, &qword_10094C750);
        id v56 = v55;
        sub_1000AFA94(&qword_10094C588);
        State.projectedValue.getter();
        uint64_t v57 = type metadata accessor for GeometryProxy();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v21, 1, 1, v57);
        id v58 = v51;
        uint64_t v109 = (uint64_t)v21;
        uint64_t v59 = v115;
        sub_100322EBC(&v134, (uint64_t)v51, v112, v117, v43, v52, v54, (uint64_t)v55, v115, (uint64_t)v133, (uint64_t)v24, 0, 0, 1u, 0, 1u, v109);
        id v60 = [v58 template];
        id v61 = [v60 uniqueName];

        if (v61)
        {
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v64 = v63;
        }
        else
        {
          uint64_t v62 = 0;
          uint64_t v64 = 0;
        }
        uint64_t v65 = v122;
        uint64_t v66 = v118;
        sub_1000809EC((uint64_t)v59, v118, (uint64_t (*)(void))type metadata accessor for LargeAwardsCardView);
        uint64_t v67 = (uint64_t *)(v66 + *(int *)(v65 + 52));
        *uint64_t v67 = v62;
        v67[1] = v64;
        sub_1000814C0((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for LargeAwardsCardView);
        sub_1000AFA94((uint64_t *)&unk_10096AA70);
        id v68 = v58;
        LocalizedStringResource.init(stringLiteral:)();
        uint64_t v69 = EntityProperty<>.init(title:)();
        id v70 = v68;
        swift_retain();
        LOBYTE(v134) = [v70 unearned] ^ 1;
        EntityProperty.wrappedValue.setter();

        swift_release();
        *(void *)&long long v134 = v69;
        *((void *)&v134 + 1) = v70;
        v133[0] = _swiftEmptyArrayStorage;
        sub_1000A39F8((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
        sub_1000AFA94((uint64_t *)&unk_10096AA80);
        sub_1000A132C((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
        uint64_t v71 = v123;
        uint64_t v72 = v126;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v73 = sub_1000A132C(&qword_10094C718, &qword_10094C710);
        unint64_t v74 = sub_1000818CC();
        uint64_t v75 = v111;
        View.appEntity<A>(_:state:)();
        (*(void (**)(char *, uint64_t))(v125 + 8))(v71, v72);
        swift_release();

        sub_10008DB18(v66, &qword_10094C710);
        uint64_t v76 = v120;
        uint64_t v77 = v119;
        uint64_t v78 = v130;
        (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v119, v75, v130);
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v129, v77, v78);
        swift_storeEnumTagMultiPayload();
        uint64_t v79 = sub_1000A132C(&qword_10094C708, &qword_10094C700);
        *(void *)&long long v134 = v124;
        *((void *)&v134 + 1) = &type metadata for AwardEntity;
        uint64_t v135 = v79;
        unint64_t v136 = v74;
        swift_getOpaqueTypeConformance2();
        *(void *)&long long v134 = v65;
        *((void *)&v134 + 1) = &type metadata for AwardEntity;
        uint64_t v135 = v73;
        unint64_t v136 = v74;
        swift_getOpaqueTypeConformance2();
        _ConditionalContent<>.init(storage:)();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v77, v78);
      }
    }
    uint64_t v117 = 0;
    uint64_t v43 = 0xE000000000000000;
    goto LABEL_10;
  }
  unint64_t v136 = v34;
  uint64_t v137 = &off_1008C3070;
  uint64_t v44 = sub_1000B1710((uint64_t *)&v134);
  sub_1000809EC(v33, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for AwardsCard);
  double v45 = *(double *)(a3 + v32[6]);
  uint64_t v46 = *(void **)(v33 + *(int *)(v35 + 48));
  if (!v46) {
    goto LABEL_15;
  }
  id v47 = v46;
  id v48 = [v47 titleForAchievement:v132];
  if (!v48)
  {

LABEL_15:
    uint64_t v120 = 0;
    uint64_t v119 = 0xE000000000000000;
    goto LABEL_16;
  }
  uint64_t v49 = v48;
  uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v119 = v50;

LABEL_16:
  uint64_t v81 = v132;
  uint64_t v82 = sub_100081754(v132);
  uint64_t v84 = v83;
  char v85 = *(void **)(v33 + *(int *)(v35 + 44));
  sub_1000AEF2C(a3 + v32[7], (uint64_t)v133, &qword_10094C750);
  id v86 = v85;
  sub_1000AFA94(&qword_10094C588);
  State.projectedValue.getter();
  uint64_t v87 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v21, 1, 1, v87);
  id v88 = v81;
  sub_100081238(&v134, (uint64_t)v81, v120, v119, v82, v84, (uint64_t)v85, (uint64_t)v133, v27, v45, (uint64_t)v24, (uint64_t)v21, 0, 0, 1u, 0, 1u);
  id v89 = [v88 template];
  id v90 = [v89 uniqueName];

  if (v90)
  {
    uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v93 = v92;
  }
  else
  {
    uint64_t v91 = 0;
    uint64_t v93 = 0;
  }
  uint64_t v94 = v114;
  sub_1000809EC((uint64_t)v27, v114, (uint64_t (*)(void))type metadata accessor for SmallAwardsCardView);
  uint64_t v95 = v124;
  unsigned int v96 = (uint64_t *)(v94 + *(int *)(v124 + 52));
  *unsigned int v96 = v91;
  v96[1] = v93;
  sub_1000814C0((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SmallAwardsCardView);
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v97 = v88;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v98 = EntityProperty<>.init(title:)();
  id v99 = v97;
  swift_retain();
  LOBYTE(v134) = [v99 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  swift_release();
  *(void *)&long long v134 = v98;
  *((void *)&v134 + 1) = v99;
  v133[0] = _swiftEmptyArrayStorage;
  sub_1000A39F8((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1000A132C((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
  int v100 = v123;
  uint64_t v101 = v126;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v102 = sub_1000A132C(&qword_10094C708, &qword_10094C700);
  unint64_t v103 = sub_1000818CC();
  unint64_t v104 = v113;
  View.appEntity<A>(_:state:)();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v100, v101);
  swift_release();

  sub_10008DB18(v94, &qword_10094C700);
  uint64_t v105 = v117;
  uint64_t v106 = v116;
  uint64_t v107 = v127;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v104, v127);
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v129, v106, v107);
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v134 = v95;
  *((void *)&v134 + 1) = &type metadata for AwardEntity;
  uint64_t v135 = v102;
  unint64_t v136 = v103;
  swift_getOpaqueTypeConformance2();
  uint64_t v108 = sub_1000A132C(&qword_10094C718, &qword_10094C710);
  *(void *)&long long v134 = v122;
  *((void *)&v134 + 1) = &type metadata for AwardEntity;
  uint64_t v135 = v108;
  unint64_t v136 = v103;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v106, v107);
}

uint64_t type metadata accessor for LargeAwardsCardView()
{
  uint64_t result = qword_1009570B0;
  if (!qword_1009570B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000809EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100080A54(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for AwardsCard();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned char v13[16] = v17;
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  uint64_t v18 = v11[10];
  uint64_t v19 = *(void **)&v9[v18];
  *(void *)&v8[v18] = v19;
  uint64_t v20 = v11[11];
  uint64_t v21 = *(void **)&v9[v20];
  *(void *)&v8[v20] = v21;
  uint64_t v22 = v11[12];
  uint64_t v23 = *(void **)&v9[v22];
  *(void *)&v8[v22] = v23;
  uint64_t v24 = v11[13];
  uint64_t v25 = *(void **)&v9[v24];
  *(void *)&v8[v24] = v25;
  uint64_t v26 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  double v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a2 + v26 + 24);
  swift_bridgeObjectRetain();
  id v30 = v19;
  id v31 = v21;
  id v32 = v23;
  id v33 = v25;
  if (v29)
  {
    uint64_t v34 = *((void *)v28 + 4);
    *((void *)v27 + 3) = v29;
    *((void *)v27 + 4) = v34;
    (**(void (***)(char *, char *, uint64_t))(v29 - 8))(v27, v28, v29);
  }
  else
  {
    long long v35 = *((_OWORD *)v28 + 1);
    *(_OWORD *)double v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v35;
    *((void *)v27 + 4) = *((void *)v28 + 4);
  }
  uint64_t v36 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for GeometryProxy();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_1000AFA94(&qword_10094C580);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v37[*(int *)(v42 + 28)] = *(void *)&v38[*(int *)(v42 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_100080D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmallAwardsCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100080DEC(void *a1, char *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)&a2[v7 + 24];
  *(_OWORD *)((char *)a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  uint64_t v10 = *(void **)&a2[v9];
  *(void *)((char *)a1 + v9) = v10;
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = &a2[v11];
  uint64_t v15 = *((void *)v14 + 1);
  *uint64_t v13 = *(void *)v14;
  v13[1] = v15;
  uint64_t v16 = (void *)((char *)a1 + v12);
  char v17 = (uint64_t *)&a2[v12];
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = *(void **)&a2[v20];
  *uint64_t v16 = v18;
  v16[1] = v19;
  *(void *)((char *)a1 + v20) = v22;
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = &a2[v21];
  uint64_t v25 = *(void *)&a2[v21 + 24];
  id v26 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = v22;
  if (v25)
  {
    uint64_t v28 = *((void *)v24 + 4);
    *((void *)v23 + 3) = v25;
    *((void *)v23 + 4) = v28;
    (**(void (***)(char *, char *, uint64_t))(v25 - 8))(v23, v24, v25);
  }
  else
  {
    long long v29 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v29;
    *((void *)v23 + 4) = *((void *)v24 + 4);
  }
  uint64_t v30 = a3[12];
  id v31 = (void *)((char *)a1 + v30);
  id v32 = &a2[v30];
  uint64_t v33 = *(void *)&a2[v30 + 8];
  *id v31 = *(void *)&a2[v30];
  v31[1] = v33;
  swift_retain();
  swift_retain();
  uint64_t v34 = *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  long long v35 = (char *)v31 + v34;
  uint64_t v36 = &v32[v34];
  uint64_t v37 = type metadata accessor for GeometryProxy();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v39(v36, 1, v37))
  {
    uint64_t v40 = sub_1000AFA94(&qword_10094C580);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  uint64_t v41 = a3[13];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = &a2[v41];
  if (v39(&a2[v41], 1, v37))
  {
    uint64_t v44 = sub_1000AFA94(&qword_10094C580);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v42, v43, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
  }
  uint64_t v45 = sub_1000AFA94(&qword_10094C588);
  *(void *)&v42[*(int *)(v45 + 28)] = *(void *)&v43[*(int *)(v45 + 28)];
  uint64_t v46 = a3[14];
  uint64_t v47 = a3[15];
  id v48 = (char *)a1 + v46;
  uint64_t v49 = &a2[v46];
  *(_OWORD *)id v48 = *(_OWORD *)v49;
  v48[16] = v49[16];
  *((void *)v48 + 3) = *((void *)v49 + 3);
  uint64_t v50 = (void *)((char *)a1 + v47);
  char v51 = &a2[v47];
  uint64_t v52 = *((void *)v51 + 1);
  *uint64_t v50 = *(void *)v51;
  v50[1] = v52;
  uint64_t v53 = a3[16];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = &a2[v53];
  *uint64_t v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for SmallAwardsCardView()
{
  uint64_t result = qword_1009502D8;
  if (!qword_1009502D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100081238@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, unsigned __int8 a17)
{
  uint64_t v41 = a7;
  uint64_t v42 = a8;
  int v47 = a17;
  uint64_t v46 = a16;
  int v45 = a15;
  uint64_t v43 = a13;
  uint64_t v44 = a14;
  uint64_t v39 = a6;
  uint64_t v40 = a11;
  uint64_t v24 = sub_1000AFA94(&qword_10094C580);
  __chkstk_darwin(v24);
  id v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  id v27 = (int *)type metadata accessor for SmallAwardsCardView();
  sub_100093E60(a1, (uint64_t)a9 + v27[5]);
  *(double *)((char *)a9 + v27[6]) = a10;
  *(uint64_t *)((char *)a9 + v27[7]) = a2;
  uint64_t v28 = (uint64_t *)((char *)a9 + v27[8]);
  *uint64_t v28 = a3;
  v28[1] = a4;
  long long v29 = (uint64_t *)((char *)a9 + v27[9]);
  uint64_t v30 = v39;
  *long long v29 = a5;
  v29[1] = v30;
  uint64_t v31 = v42;
  *(uint64_t *)((char *)a9 + v27[10]) = v41;
  sub_1000AEEC8(v31, (uint64_t)a9 + v27[11], &qword_10094C750);
  sub_1000AEEC8(v40, (uint64_t)a9 + v27[12], &qword_10094C6A0);
  sub_1000AEF2C(a12, (uint64_t)v26, &qword_10094C580);
  State.init(wrappedValue:)();
  sub_10008DB18(a12, &qword_10094C580);
  id v32 = (char *)a9 + v27[14];
  uint64_t v48 = v43;
  uint64_t v49 = v44;
  char v50 = v45 & 1;
  sub_1000AFA94(&qword_100950270);
  State.init(wrappedValue:)();
  char v33 = v52;
  uint64_t v34 = v53;
  *(_OWORD *)id v32 = v51;
  char v32[16] = v33;
  *((void *)v32 + 3) = v34;
  uint64_t v35 = v27[15];
  uint64_t v48 = v46;
  sub_1000AFA94(&qword_100950278);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a9 + v35) = v51;
  uint64_t v36 = (char *)a9 + v27[16];
  LOBYTE(v48) = v47;
  uint64_t result = State.init(wrappedValue:)();
  uint64_t v38 = *((void *)&v51 + 1);
  *uint64_t v36 = v51;
  *((void *)v36 + 1) = v38;
  return result;
}

uint64_t sub_1000814C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100081520(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + a2[5]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v5 = a1 + a2[11];
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  uint64_t v6 = a1 + a2[12];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000AFA94(&qword_10094C6A0) + 32);
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = a1 + a2[13];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1000AFA94(&qword_10094C588);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100081754(void *a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardsCardView() + 20);
  uint64_t v4 = *(void **)(v3 + *(int *)(type metadata accessor for AwardsCard() + 48));
  if (v4)
  {
    id v5 = v4;
    if ([a1 unearned]) {
      id v6 = [v5 unachievedShortDescriptionForAchievement:a1];
    }
    else {
      id v6 = [v5 achievedShortDescriptionForAchievement:a1];
    }
    id v8 = v6;
    if (v8)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      if ((v7 != 0xD000000000000028 || v10 != 0x80000001007B6350)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        && (v7 != 0xD000000000000026 || v10 != 0x80000001007B6380)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = 0;
LABEL_15:

    return v7;
  }
  return 0;
}

unint64_t sub_1000818CC()
{
  unint64_t result = qword_10096AA90;
  if (!qword_10096AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AA90);
  }
  return result;
}

void sub_100082394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v27 - 120));
  _Unwind_Resume(a1);
}

void sub_1000829B4(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 96);
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  [v1 addObject:v2];
}

uint64_t sub_100083200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a4;
  uint64_t v65 = a3;
  uint64_t v6 = sub_1000AFA94(&qword_10094F370);
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_1009596D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_1009596E0);
  uint64_t v16 = *(char **)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v68 = a1;
  sub_10008391C();
  Regex<A>.init(_:)();
  uint64_t v59 = v9;
  id v60 = v19;
  id v61 = v11;
  uint64_t v62 = v6;
  (*((void (**)(char *, void, uint64_t, uint64_t))v16 + 7))(v14, 0, 1, v15);
  id v58 = (void (*)(char *, char *, uint64_t))*((void *)v16 + 4);
  v58(v21, v14, v15);
  uint64_t v22 = v67;
  uint64_t v23 = v67 + OBJC_IVAR___CHNavigator_urlKeys;
  swift_beginAccess();
  uint64_t v24 = sub_100083834(v68, a2, *(void **)v23);
  uint64_t v63 = v15;
  if ((v25 & 1) == 0)
  {
    unint64_t v26 = v24;
    uint64_t v27 = v60;
    (*((void (**)(char *, char *, uint64_t))v16 + 2))(v60, v21, v15);
    uint64_t v23 = swift_allocObject();
    uint64_t v28 = v66;
    *(void *)(v23 + 16) = v65;
    *(void *)(v23 + 24) = v28;
    long long v29 = (unint64_t *)(v22 + OBJC_IVAR___CHNavigator_urlHandlers);
    swift_beginAccess();
    unint64_t v30 = *v29;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v29 = v30;
    id v32 = (void (**)(unint64_t, char *, uint64_t))v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v33 = v62;
      if ((v26 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      unint64_t v30 = sub_1005EC2C8(v30);
      *long long v29 = v30;
      uint64_t v33 = v62;
      if ((v26 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v26 < *(void *)(v30 + 16))
        {
          uint64_t v34 = v63;
          unint64_t v35 = v30
              + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))
              + *(void *)(v64 + 72) * v26;
          v32[5](v35, v27, v63);
          uint64_t v36 = (void *)(v35 + *(int *)(v33 + 48));
          *uint64_t v36 = sub_10053A740;
          v36[1] = v23;
          swift_endAccess();
          swift_release();
          ((void (*)(char *, uint64_t))v32[1])(v21, v34);
          return 1;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  long long v29 = (unint64_t *)a2;
  uint64_t v27 = v16;
  id v60 = v21;
  swift_beginAccess();
  unint64_t v26 = *(void *)v23;
  swift_bridgeObjectRetain();
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v23 = v26;
  if ((v37 & 1) == 0)
  {
LABEL_18:
    unint64_t v26 = (unint64_t)sub_100084014(0, *(void *)(v26 + 16) + 1, 1, (void *)v26);
    *(void *)uint64_t v23 = v26;
  }
  uint64_t v38 = v66;
  unint64_t v40 = *(void *)(v26 + 16);
  unint64_t v39 = *(void *)(v26 + 24);
  uint64_t v41 = (uint64_t)v61;
  uint64_t v42 = v68;
  if (v40 >= v39 >> 1)
  {
    unint64_t v26 = (unint64_t)sub_100084014((void *)(v39 > 1), v40 + 1, 1, (void *)v26);
    uint64_t v42 = v68;
    *(void *)uint64_t v23 = v26;
  }
  *(void *)(v26 + 16) = v40 + 1;
  uint64_t v43 = (void *)(v26 + 16 * v40);
  v43[4] = v42;
  v43[5] = v29;
  swift_endAccess();
  uint64_t v45 = v62;
  uint64_t v44 = v63;
  uint64_t v46 = v59;
  int v47 = &v59[*(int *)(v62 + 48)];
  uint64_t v48 = v27;
  (*((void (**)(char *, char *, uint64_t))v27 + 2))(v59, v60, v63);
  uint64_t v49 = v65;
  *(void *)int v47 = v65;
  *((void *)v47 + 1) = v38;
  v58((char *)v41, v46, v44);
  char v50 = (void *)(v41 + *(int *)(v45 + 48));
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v49;
  *(void *)(v51 + 24) = v38;
  *char v50 = sub_10053A6C8;
  v50[1] = v51;
  char v52 = (unint64_t *)(v67 + OBJC_IVAR___CHNavigator_urlHandlers);
  swift_beginAccess();
  unint64_t v53 = *v52;
  swift_retain();
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  *char v52 = v53;
  if ((v54 & 1) == 0)
  {
    unint64_t v53 = sub_100083B5C(0, *(void *)(v53 + 16) + 1, 1, v53);
    *char v52 = v53;
  }
  unint64_t v56 = *(void *)(v53 + 16);
  unint64_t v55 = *(void *)(v53 + 24);
  if (v56 >= v55 >> 1)
  {
    unint64_t v53 = sub_100083B5C(v55 > 1, v56 + 1, 1, v53);
    *char v52 = v53;
  }
  *(void *)(v53 + 16) = v56 + 1;
  sub_1000AEEC8(v41, v53+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v56, &qword_10094F370);
  swift_endAccess();
  (*((void (**)(char *, uint64_t))v48 + 1))(v60, v63);
  return 1;
}

uint64_t sub_100083834(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_10008391C()
{
  sub_1000A06D0();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  id v2 = v1;
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "^fitnessapp://");
  v3._countAndFlagsBits = v0;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 2375471;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  return v6[0];
}

uint64_t sub_100083B5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100085A10(a1, a2, a3, a4, &qword_10094F368, &qword_10094F370);
}

uint64_t sub_100083B90(char a1)
{
  if (a1)
  {
    id v2 = sub_100084014(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      id v2 = sub_100084014((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    id v5 = &v2[2 * v4];
    v5[4] = 0x7373656E7469662ELL;
    v5[5] = 0xEA0000000000724ALL;
  }
  else
  {
    id v2 = _swiftEmptyArrayStorage;
  }
  if ((a1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      id v2 = sub_100084014((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    uint64_t v8 = &v2[2 * v7];
    v8[4] = 0xD000000000000015;
    v8[5] = 0x80000001007B8DB0;
    if ((a1 & 4) == 0)
    {
LABEL_8:
      if ((a1 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
  }
  unint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  if (v10 >= v9 >> 1) {
    id v2 = sub_100084014((void *)(v9 > 1), v10 + 1, 1, v2);
  }
  v2[2] = v10 + 1;
  uint64_t v11 = &v2[2 * v10];
  v11[4] = 0xD000000000000016;
  v11[5] = 0x80000001007B8D90;
  if ((a1 & 8) == 0)
  {
LABEL_9:
    if ((a1 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_24:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    id v2 = sub_100084014((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = &v2[2 * v13];
  void v14[4] = 0x6C61646E6174732ELL;
  v14[5] = 0xEB00000000656E6FLL;
  if ((a1 & 0x10) == 0)
  {
LABEL_10:
    if ((a1 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_29:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    id v2 = sub_100084014((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  uint64_t v17 = &v2[2 * v16];
  v17[4] = 0xD000000000000010;
  void v17[5] = 0x80000001007B8D70;
  if ((a1 & 0x20) == 0)
  {
LABEL_11:
    if ((a1 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_34:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    id v2 = sub_100084014((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = &v2[2 * v19];
  v20[4] = 0xD000000000000010;
  v20[5] = 0x80000001007B8D50;
  if ((a1 & 0x40) == 0)
  {
LABEL_12:
    if ((a1 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
LABEL_39:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    id v2 = sub_100084014((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  uint64_t v23 = &v2[2 * v22];
  v23[4] = 0x68636C656568772ELL;
  v23[5] = 0xEB00000000726961;
  if (a1 < 0)
  {
LABEL_44:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v2 = sub_100084014(0, v2[2] + 1, 1, v2);
    }
    unint64_t v25 = v2[2];
    unint64_t v24 = v2[3];
    if (v25 >= v24 >> 1) {
      id v2 = sub_100084014((void *)(v24 > 1), v25 + 1, 1, v2);
    }
    v2[2] = v25 + 1;
    unint64_t v26 = &v2[2 * v25];
    v26[4] = 0xD000000000000018;
    v26[5] = 0x80000001007B8D30;
  }
LABEL_49:
  uint64_t v27 = Array.description.getter();
  swift_bridgeObjectRelease();
  return v27;
}

void *sub_100084014(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94(&qword_10094D178);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100084124(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100084124(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100084218()
{
  uint64_t v132 = sub_1000AFA94(&qword_10094F410);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v141 = (char *)&v127 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v164 = (uint64_t)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v167 = (uint64_t)&v127 - v5;
  __chkstk_darwin(v4);
  uint64_t v163 = (char *)&v127 - v6;
  uint64_t v136 = type metadata accessor for Calendar();
  uint64_t v135 = *(void (***)(char *, uint64_t))(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v140 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for Date();
  uint64_t v165 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v168 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1000AFA94(&qword_100950708);
  __chkstk_darwin(v152);
  uint64_t v162 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100950710);
  __chkstk_darwin(v10 - 8);
  uint64_t v170 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100950718);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v143 = (uint64_t)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v138 = (char *)&v127 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v144 = (uint64_t)&v127 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v161 = (uint64_t)&v127 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v151 = (char *)&v127 - v22;
  __chkstk_darwin(v21);
  uint64_t v160 = (char *)&v127 - v23;
  uint64_t v169 = sub_1000AFA94(&qword_100950720);
  uint64_t v24 = __chkstk_darwin(v169);
  long long v134 = (void (**)(char *, uint64_t))((char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  uint64_t v156 = (uint64_t)&v127 - v26;
  uint64_t v150 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v150);
  uint64_t v28 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for GregorianDayRange();
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v149 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DayIndex();
  uint64_t v172 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  int v175 = (char *)&v127 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v137 = (char *)&v127 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v142 = (char *)&v127 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v129 = (char *)&v127 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v128 = (char *)&v127 - v40;
  __chkstk_darwin(v39);
  id v155 = (char *)&v127 - v41;
  uint64_t v42 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v127 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.trainingLoad.getter();
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Pulling new activity summaries from the cache", v48, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
  char v166 = _swiftEmptyArrayStorage;
  unint64_t v178 = (unint64_t)_swiftEmptyArrayStorage;
  swift_getKeyPath();
  uint64_t v153 = v159 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
  uint64_t v177 = v159;
  uint64_t v49 = v159;
  uint64_t v154 = sub_1000858A8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v50 = v49 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange;
  uint64_t v148 = v49 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange;
  swift_beginAccess();
  uint64_t v51 = v157;
  char v52 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 16);
  uint64_t v147 = v157 + 16;
  uint64_t v146 = v52;
  unint64_t v53 = v149;
  uint64_t v54 = v158;
  v52(v149, v50, v158);
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v145 = *(void (**)(char *, uint64_t))(v51 + 8);
  v145(v53, v54);
  unint64_t v55 = &v28[*(int *)(v150 + 36)];
  uint64_t v56 = v172;
  uint64_t v57 = v172 + 16;
  unint64_t v133 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
  id v58 = v128;
  v133(v128, v55, v30);
  sub_10008DB18((uint64_t)v28, &qword_100950728);
  uint64_t v59 = v129;
  DayIndex.init(integerLiteral:)();
  static DayIndex.- infix(_:_:)();
  id v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v174 = v56 + 8;
  v60(v59, v30);
  uint64_t v173 = (uint64_t (*)(char *, uint64_t))v60;
  v60(v58, v30);
  swift_getKeyPath();
  uint64_t v176 = v159;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v61 = v158;
  v146(v53, v148, v158);
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v157 = v51 + 8;
  v145(v53, v61);
  uint64_t v62 = v134;
  sub_1000AEF2C((uint64_t)v28, (uint64_t)v134, &qword_100950728);
  uint64_t v63 = (uint64_t)v160;
  uint64_t v130 = v57;
  v133(v160, v28, v30);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  v56 += 56;
  uint64_t v171 = v64;
  v64(v63, 0, 1, v30);
  sub_10008DB18((uint64_t)v28, &qword_100950728);
  uint64_t v65 = v169;
  sub_1000AEEC8(v63, (uint64_t)v62 + *(int *)(v169 + 36), &qword_100950718);
  uint64_t v66 = v156;
  sub_1000AEEC8((uint64_t)v62, v156, &qword_100950720);
  uint64_t v67 = v66 + *(int *)(v65 + 36);
  uint64_t v68 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 - 8);
  uint64_t v172 = v56;
  uint64_t v160 = (char *)(v56 - 24);
  uint64_t v69 = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_activityDataProvider;
  ++v135;
  long long v134 = (void (**)(char *, uint64_t))(v165 + 1);
  uint64_t v70 = v162;
  uint64_t v71 = (uint64_t)v151;
  uint64_t v165 = v68;
  uint64_t v169 = v67;
  uint64_t v127 = OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_activityDataProvider;
  while (1)
  {
    v171(v71, 1, 1, v30);
    uint64_t v72 = v70 + *(int *)(v152 + 48);
    sub_1000AEF2C(v67, v70, &qword_100950718);
    sub_1000AEF2C(v71, v72, &qword_100950718);
    uint64_t v73 = *v68;
    unsigned int v74 = (*v68)(v70, 1, v30);
    uint64_t v75 = v161;
    if (v74 == 1)
    {
      if (v73(v72, 1, v30) == 1)
      {
        sub_10008DB18(v70, &qword_100950718);
        sub_10008DB18(v71, &qword_100950718);
LABEL_35:
        v171((uint64_t)v170, 1, 1, v30);
        sub_10008DB18(v156, &qword_100950720);
        uint64_t v122 = v178;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        uint64_t v124 = v159;
        *(&v127 - 2) = v159;
        *(&v127 - 1) = v122;
        uint64_t v176 = v124;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v125 = sub_100085DE8((unint64_t)v166);
        uint64_t v126 = swift_getKeyPath();
        __chkstk_darwin(v126);
        *(&v127 - 2) = v124;
        *(&v127 - 1) = v125;
        uint64_t v176 = v124;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_bridgeObjectRelease();
        swift_release();
        return v173(v155, v30);
      }
      goto LABEL_11;
    }
    sub_1000AEF2C(v70, v161, &qword_100950718);
    if (v73(v72, 1, v30) == 1)
    {
      v173((char *)v75, v30);
LABEL_11:
      sub_10008DB18(v70, &qword_100950708);
      sub_10008DB18(v71, &qword_100950718);
      goto LABEL_13;
    }
    uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))v160;
    uint64_t v77 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))v160)(v128, v161, v30);
    uint64_t v78 = v129;
    v76(v129, v72, v30);
    uint64_t v69 = v127;
    sub_1000858A8(&qword_100950730, (void (*)(uint64_t))&type metadata accessor for DayIndex);
    char v79 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v80 = (void (*)(char *, uint64_t))v173;
    v173(v78, v30);
    v80(v77, v30);
    sub_10008DB18(v162, &qword_100950718);
    sub_10008DB18(v71, &qword_100950718);
    if (v79) {
      goto LABEL_35;
    }
LABEL_13:
    uint64_t v81 = v169;
    uint64_t v82 = v144;
    sub_1000AEF2C(v169, v144, &qword_100950718);
    uint64_t result = v73(v82, 1, v30);
    if (result == 1) {
      break;
    }
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))v160;
    char v85 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))v160)(v142, v82, v30);
    v84(v170, v85, v30);
    uint64_t v86 = v143;
    sub_1000AEF2C(v81, v143, &qword_100950718);
    uint64_t result = v73(v86, 1, v30);
    if (result == 1) {
      goto LABEL_37;
    }
    uint64_t v87 = v137;
    v84(v137, (char *)v86, v30);
    sub_1000858A8(&qword_100950730, (void (*)(uint64_t))&type metadata accessor for DayIndex);
    char v88 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v89 = (uint64_t)v138;
    uint64_t v90 = (uint64_t)v163;
    if (v88)
    {
      v173(v87, v30);
      uint64_t v91 = 1;
    }
    else
    {
      uint64_t v176 = 1;
      sub_1000858A8(&qword_100950738, (void (*)(uint64_t))&type metadata accessor for DayIndex);
      dispatch thunk of Strideable.advanced(by:)();
      v173(v87, v30);
      uint64_t v91 = 0;
    }
    uint64_t v67 = v169;
    uint64_t v92 = v171;
    v171(v89, v91, 1, v30);
    sub_10008DB18(v67, &qword_100950718);
    sub_1000AEEC8(v89, v67, &qword_100950718);
    uint64_t v93 = v170;
    v92((uint64_t)v170, 0, 1, v30);
    v84(v175, v93, v30);
    swift_getKeyPath();
    uint64_t v94 = v159;
    uint64_t v176 = v159;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v95 = v149;
    uint64_t v96 = v158;
    v146(v149, v148, v158);
    id v97 = v140;
    GregorianDayRange.gregorianCalendar.getter();
    v145(v95, v96);
    DayIndex.startDate(in:)();
    uint64_t v98 = v136;
    (*v135)(v97, v136);
    uint64_t v99 = *(void *)(v94 + v69);
    v100.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    if (qword_10094A5E8 != -1) {
      swift_once();
    }
    sub_1000876DC(v98, (uint64_t)qword_100997610);
    Class isa = Calendar._bridgeToObjectiveC()().super.isa;
    id v102 = (id)_HKActivityCacheDateComponentsFromDate();

    if (v102)
    {
      uint64_t v103 = v167;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v104 = type metadata accessor for DateComponents();
      uint64_t v105 = *(void *)(v104 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v103, 0, 1, v104);
    }
    else
    {
      uint64_t v104 = type metadata accessor for DateComponents();
      uint64_t v105 = *(void *)(v104 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v167, 1, 1, v104);
    }
    uint64_t v106 = v175;
    sub_1000AEEC8(v167, v90, &qword_10094E8A8);
    uint64_t v107 = v164;
    sub_1000AEF2C(v90, v164, &qword_10094E8A8);
    type metadata accessor for DateComponents();
    int v108 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v107, 1, v104);
    Class v109 = 0;
    if (v108 != 1)
    {
      uint64_t v110 = v164;
      Class v109 = DateComponents._bridgeToObjectiveC()().super.isa;
      uint64_t v111 = v110;
      uint64_t v90 = (uint64_t)v163;
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v111, v104);
    }
    uint64_t v112 = _HKCacheIndexFromDateComponents();

    sub_10008DB18(v90, &qword_10094E8A8);
    id v113 = [*(id *)(v99 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:v112];
    sub_1000858A8((unint64_t *)&qword_100950740, (void (*)(uint64_t))&type metadata accessor for DayIndex);
    if (dispatch thunk of static Comparable.< infix(_:_:)())
    {
      uint64_t v70 = v162;
      uint64_t v71 = (uint64_t)v151;
      if (!v113) {
        goto LABEL_5;
      }
LABEL_33:
      id v121 = v113;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_5;
    }
    uint64_t v114 = *(int *)(v132 + 48);
    uint64_t v115 = (uint64_t)v141;
    v133(v141, v106, v30);
    *(void *)(v115 + v114) = v113;
    id v116 = v113;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = v162;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v166 = (void *)sub_100085C7C(0, v166[2] + 1, 1, (unint64_t)v166);
    }
    uint64_t v71 = (uint64_t)v151;
    unint64_t v119 = v166[2];
    unint64_t v118 = v166[3];
    if (v119 >= v118 >> 1) {
      char v166 = (void *)sub_100085C7C(v118 > 1, v119 + 1, 1, (unint64_t)v166);
    }
    uint64_t v120 = v166;
    v166[2] = v119 + 1;
    sub_1000AEEC8((uint64_t)v141, (uint64_t)v120+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(void *)(v131 + 72) * v119, &qword_10094F410);
    if (v113) {
      goto LABEL_33;
    }
LABEL_5:
    (*v134)(v168, v139);
    v173(v175, v30);
    uint64_t v68 = v165;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000858A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000858F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085980(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000859C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085A10(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AFA94(a5);
  uint64_t v13 = *(void *)(sub_1000AFA94(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1000AFA94(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100085C90(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_100085C7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100085A10(a1, a2, a3, a4, &qword_10094F408, &qword_10094F410);
}

uint64_t sub_100085C90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_1000AFA94(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100085DE8(unint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094F410);
  uint64_t v15 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v16 = (uint64_t)&v15 - v7;
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 < 2) {
    return a1;
  }
  unint64_t v9 = 0;
  unint64_t v10 = v8 >> 1;
  for (unint64_t i = v8 - 1; ; --i)
  {
    if (v9 == i) {
      goto LABEL_4;
    }
    unint64_t v12 = *(void *)(a1 + 16);
    if (v9 >= v12) {
      break;
    }
    unint64_t v13 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v14 = *(void *)(v15 + 72);
    uint64_t result = sub_100086014(a1 + v13 + v14 * v9, v16);
    if (i >= v12) {
      goto LABEL_14;
    }
    sub_100086014(a1 + v13 + v14 * i, (uint64_t)v5);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1005EC1FC(a1);
      a1 = result;
    }
    if (v9 >= *(void *)(a1 + 16)) {
      goto LABEL_15;
    }
    uint64_t result = sub_100085FAC((uint64_t)v5, a1 + v13 + v14 * v9);
    if (i >= *(void *)(a1 + 16)) {
      goto LABEL_16;
    }
    uint64_t result = sub_100085FAC(v16, a1 + v13 + v14 * i);
LABEL_4:
    if (v10 == ++v9) {
      return a1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100085FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100086014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008607C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricCardBarChartView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  v8[1] = *(void *)(a1 + *(int *)(__chkstk_darwin(v2 - 8) + 32));
  swift_getKeyPath();
  sub_100086C18(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MetricCardBarChartView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_100087028((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_100953120);
  sub_1000AFA94(&qword_100953050);
  sub_1000A132C(&qword_100953128, &qword_100953120);
  sub_100086394((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10008626C();
  return ForEach<>.init(_:id:content:)();
}

unint64_t sub_10008626C()
{
  unint64_t result = qword_100953048;
  if (!qword_100953048)
  {
    sub_1000A1370(&qword_100953050);
    sub_1000A1370(&qword_100953058);
    sub_1000A1370(&qword_100953060);
    type metadata accessor for RuleMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953048);
  }
  return result;
}

uint64_t sub_100086394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000863DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100086424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v66 = sub_1000AFA94(&qword_1009530C0);
  __chkstk_darwin(v66);
  uint64_t v65 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricCardBarChartView();
  uint64_t v60 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v5;
  uint64_t v64 = sub_1000AFA94(&qword_1009530B8);
  uint64_t v62 = *(void *)(v64 - 8);
  uint64_t v6 = __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v11 - 8);
  unint64_t v55 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Calendar.Component();
  uint64_t v53 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  BOOL v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AxisMarkValues();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100953098);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = v4;
  uint64_t v29 = *(int *)(v4 + 32);
  uint64_t v30 = a1;
  uint64_t v31 = a1 + v29;
  if (*(unsigned char *)(v31 + 8) == 1 && !*(void *)v31)
  {
    uint64_t v33 = v53;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v18, enum case for Calendar.Component.hour(_:), v16);
    uint64_t v34 = type metadata accessor for Calendar();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 1, 1, v34);
    static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
    sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_1009546C0);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v16);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    type metadata accessor for AxisGridLine();
    AxisMarks.init(preset:position:values:content:)();
    uint64_t v35 = sub_1000AFA94(&qword_1009530A8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v27, 0, 1, v35);
  }
  else
  {
    uint64_t v32 = sub_1000AFA94(&qword_1009530A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v27, 1, 1, v32);
  }
  uint64_t v54 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v30 + *(int *)(v28 + 60), v19);
  uint64_t v36 = v30;
  uint64_t v37 = v58;
  sub_100086C18(v36, v58, (uint64_t (*)(void))type metadata accessor for MetricCardBarChartView);
  unint64_t v38 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100087028(v37, v39 + v38);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_1009530C8);
  sub_100086FBC(&qword_1009530D0, &qword_1009530C8, (void (*)(void))sub_1000E2730);
  uint64_t v40 = v61;
  AxisMarks.init(preset:position:values:content:)();
  uint64_t v41 = v57;
  sub_1000AEF2C((uint64_t)v27, v57, &qword_100953098);
  uint64_t v42 = v62;
  uint64_t v43 = v63;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v45 = v64;
  v44(v63, v40, v64);
  sub_10008708C();
  uint64_t v46 = v65;
  sub_1000AEF2C(v41, v65, &qword_100953098);
  sub_1000A132C(&qword_1009530B0, &qword_1009530B8);
  uint64_t v47 = v66;
  uint64_t v48 = v46 + *(int *)(v66 + 48);
  v44((char *)v48, v43, v45);
  uint64_t v49 = v67;
  sub_1000AEEC8(v46, v67, &qword_100953098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v49 + *(int *)(v47 + 48), v48, v45);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v40, v45);
  sub_10008DB18((uint64_t)v54, &qword_100953098);
  v50(v43, v45);
  return sub_10008DB18(v41, &qword_100953098);
}

uint64_t sub_100086C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100086C80(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v14;
  uint64_t v15 = type metadata accessor for MetricFormattingHelper();
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v50 = &v13[v16];
  uint64_t v51 = &v12[v16];
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  id v18 = v14;
  v49(v51, v50, v17);
  uint64_t v19 = *(int *)(v15 + 24);
  uint64_t v20 = *(void **)&v13[v19];
  *(void *)&v12[v19] = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  long long v24 = *(_OWORD *)((char *)a2 + v21 + 24);
  *(_OWORD *)((char *)a1 + v21 + 24) = v24;
  uint64_t v25 = v24;
  uint64_t v26 = **(void (***)(char *, char *, uint64_t))(v24 - 8);
  id v27 = v20;
  v26(v22, v23, v25);
  uint64_t v28 = a3[11];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = a3[12];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for Calendar.Component();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = a3[13];
  uint64_t v37 = (char *)a1 + v36;
  unint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  uint64_t v40 = a3[14];
  uint64_t v41 = a3[15];
  uint64_t v42 = *(void **)((char *)a2 + v40);
  *(void *)((char *)a1 + v40) = v42;
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  uint64_t v45 = type metadata accessor for AxisMarkValues();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  id v47 = v42;
  v46(v43, v44, v45);
  return a1;
}

uint64_t sub_100086FBC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100087028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricCardBarChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008708C()
{
  unint64_t result = qword_100953090;
  if (!qword_100953090)
  {
    sub_1000A1370(&qword_100953098);
    sub_1000A132C(&qword_1009530A0, &qword_1009530A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953090);
  }
  return result;
}

void sub_100087124(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v18 objects:v23 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v19;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v5);
        }
        [WeakRetained setObject:*(void *)(*((void *)&v18 + 1) + 8 * (void)v9) forCacheIndex:[*(id *)(*((void *)&v18 + 1) + 8 * (void)v9) _activitySummaryIndex]];
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v18 objects:v23 count:16];
    }
    while (v7);
  }

  uint64_t v10 = [v5 firstObject];
  uint64_t v11 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v10 _activitySummaryIndex]);
  v22[0] = v11;
  uint64_t v12 = [v5 lastObject];
  uint64_t v13 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v12 _activitySummaryIndex]);
  v22[1] = v13;
  uint64_t v14 = +[NSArray arrayWithObjects:v22 count:2];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_1000111B0;
  v16[3] = &unk_1008ABB38;
  v16[4] = WeakRetained;
  id v17 = v14;
  id v15 = v14;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v16);
}

void sub_100087344(void *a1)
{
  uint64_t v2 = *(void **)(a1[4] + 8);
  id v6 = +[NSNumber numberWithLongLong:a1[6]];
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(a1[5] + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000873C4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100087438(void *a1, uint64_t a2)
{
  return sub_100087440(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100087440(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Calendar();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1000876DC(v11, (uint64_t)qword_100997610);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  id v16 = [a1 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v16) = Calendar.isDateInToday(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) == 0)
  {
    if ((a3 & 0x10) != 0) {
      id v18 = [a1 sumQuantity];
    }
    else {
      id v18 = [a1 averageQuantity];
    }
    id v19 = v18;
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(*(void *)(a4 + 16) + 16) >= *(void *)(*(void *)(a4 + 16) + 24) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1000876DC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_100087714(void *a1, uint64_t a2)
{
  sub_10008771C(a1, a2, v2);
}

void sub_10008771C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1000876DC(v9, (uint64_t)qword_100997610);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  id v14 = [a1 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v14) = Calendar.isDateInToday(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = (void **)(a3 + 16);
    id v16 = [a1 duration];
    if (v16)
    {
      id v17 = v16;
      id v18 = [self hourUnit];
      [v17 doubleValueForUnit:v18];
      uint64_t v20 = v19;

      swift_beginAccess();
      long long v21 = *v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char *v15 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        long long v21 = sub_100088218(0, v21[2] + 1, 1, v21);
        char *v15 = v21;
      }
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      if (v24 >= v23 >> 1)
      {
        long long v21 = sub_100088218((void *)(v23 > 1), v24 + 1, 1, v21);
        char *v15 = v21;
      }
      _OWORD v21[2] = v24 + 1;
      uint64_t v25 = &v21[2 * v24];
      unsigned char v25[4] = v20;
      *((unsigned char *)v25 + 40) = 0;
      swift_endAccess();
    }
    else
    {
      swift_beginAccess();
      uint64_t v26 = *v15;
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      char *v15 = v26;
      if ((v27 & 1) == 0)
      {
        uint64_t v26 = sub_100088218(0, v26[2] + 1, 1, v26);
        char *v15 = v26;
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1)
      {
        uint64_t v26 = sub_100088218((void *)(v28 > 1), v29 + 1, 1, v26);
        char *v15 = v26;
      }
      void v26[2] = v29 + 1;
      uint64_t v30 = &v26[2 * v29];
      v30[4] = 0;
      *((unsigned char *)v30 + 40) = 1;
      swift_endAccess();
    }
  }
}

uint64_t sub_100087AC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    double v4 = a3;
    uint64_t v5 = result;
    double v7 = (a4 - a3) / (double)result;
    uint64_t v8 = _swiftEmptyArrayStorage;
    if (result)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      do
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_100087DFC(0, v8[2] + 1, 1, v8);
        }
        unint64_t v11 = v8[2];
        unint64_t v10 = v8[3];
        if (v11 >= v10 >> 1) {
          uint64_t v8 = sub_100087DFC((void *)(v10 > 1), v11 + 1, 1, v8);
        }
        void v8[2] = v11 + 1;
        *(double *)&v8[v11 + 4] = v4;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100087CD4(0, v9[2] + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        unint64_t v13 = v9[2];
        unint64_t v12 = v9[3];
        if (v13 >= v12 >> 1)
        {
          uint64_t result = (uint64_t)sub_100087CD4((void *)(v12 > 1), v13 + 1, 1, v9);
          uint64_t v9 = (void *)result;
        }
        v9[2] = v13 + 1;
        id v14 = &v9[3 * v13];
        void v14[4] = 0;
        v14[5] = 0;
        *((unsigned char *)v14 + 48) = 1;
        double v4 = v7 + v4;
        --v5;
      }
      while (v5);
    }
    else
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v8;
    *(double *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)(a2 + 40) = xmmword_10075A6E0;
  }
  return result;
}

uint64_t type metadata accessor for MetricDetailViewModel()
{
  uint64_t result = qword_10095DB60;
  if (!qword_10095DB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MetricCard()
{
  uint64_t result = qword_1009667E8;
  if (!qword_1009667E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100087CD4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94(&qword_10094E728);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100088128(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100087DFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94(&qword_10094E7C8);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10008803C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ActivityRingsCard()
{
  uint64_t result = qword_10095B9D0;
  if (!qword_10095B9D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AwardsCard()
{
  uint64_t result = qword_100958880;
  if (!qword_100958880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for TrendsCard()
{
  uint64_t result = qword_100964588;
  if (!qword_100964588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for CatalogTipCard()
{
  uint64_t result = qword_100958318;
  if (!qword_100958318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_10008803C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100088128(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100088218(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100088224(a1, a2, a3, a4, &qword_10094E890);
}

void *sub_100088224(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000AFA94(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      void v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      id v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      id v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100088330(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_100088330(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008841C(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin(a1);
  *(void *)&long long v70 = v1;
  int v68 = v3;
  char v5 = v4;
  uint64_t v6 = v2;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1000AFA94(&qword_100954668);
  __chkstk_darwin(v9 - 8);
  int64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityStatisticsCollection();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (char *)v6;
  uint64_t v193 = v5;
  sub_1000B8D7C(v6, v5, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v67 = v8;
    uint64_t v17 = v70;
    sub_1000B7F70((uint64_t)v11, (uint64_t)v15);
    id v18 = self;
    id v19 = [v18 quantityTypeForIdentifier:HKQuantityTypeIdentifierVO2Max];
    if (!v19)
    {
LABEL_13:
      sub_1000B7CCC((uint64_t)v15);
      uint64_t v16 = v67;
      goto LABEL_14;
    }
    uint64_t v20 = v19;
    if (qword_10094B140 != -1) {
      swift_once();
    }
    uint64_t v66 = v15;
    long long v21 = v193;
    uint64_t v22 = v69;
    unint64_t v23 = v18;
    if (byte_10096A4E2)
    {
      id v24 = 0;
    }
    else
    {
      uint64_t v25 = self;
      NSString v26 = String._bridgeToObjectiveC()();
      id v24 = [v25 _predicateForObjectsWithMinOSBuildVersion:v26 maxOSBuildVersion:0];
    }
    sub_100088F4C(v20, 2, 6, v22, v21, 0, v24, 0, (uint64_t)v180);

    if (v17) {
      return sub_1000B7CCC((uint64_t)v66);
    }
    sub_1000AEEC8((uint64_t)v180, (uint64_t)v190, &qword_100954678);
    if (sub_100088F34((uint64_t)v190) == 1)
    {
      uint64_t v15 = v66;
      goto LABEL_13;
    }
    long long v173 = v190[10];
    long long v174 = v190[11];
    char v175 = v191;
    long long v169 = v190[6];
    long long v170 = v190[7];
    long long v172 = v190[9];
    long long v171 = v190[8];
    long long v165 = v190[2];
    long long v166 = v190[3];
    long long v168 = v190[5];
    long long v167 = v190[4];
    long long v164 = v190[1];
    long long v163 = v190[0];
    id v28 = [v23 quantityTypeForIdentifier:HKQuantityTypeIdentifierAppleStandTime];
    if (v28)
    {
      unint64_t v29 = v28;
      sub_100088F4C(v28, 80, 2, v22, v21, 1, 0, 1, (uint64_t)v181);

      uint64_t v16 = v67;
      sub_1000AEEC8((uint64_t)v181, (uint64_t)v188, &qword_100954678);
      if (sub_100088F34((uint64_t)v188) != 1)
      {
        long long v160 = v188[10];
        long long v161 = v188[11];
        char v162 = v189;
        long long v156 = v188[6];
        long long v157 = v188[7];
        long long v159 = v188[9];
        long long v158 = v188[8];
        long long v152 = v188[2];
        long long v153 = v188[3];
        long long v155 = v188[5];
        long long v154 = v188[4];
        char v30 = v68;
        if (v68) {
          uint64_t v31 = 70;
        }
        else {
          uint64_t v31 = 52;
        }
        long long v151 = v188[1];
        long long v150 = v188[0];
        sub_10008AC70(v31, v22, (uint64_t)v21, (uint64_t)v182);
        sub_1000AEEC8((uint64_t)v182, (uint64_t)v186, &qword_100954678);
        if (sub_100088F34((uint64_t)v186) == 1)
        {
          sub_1000B7CCC((uint64_t)v66);
        }
        else
        {
          long long v147 = v186[10];
          long long v148 = v186[11];
          char v149 = v187;
          long long v143 = v186[6];
          long long v144 = v186[7];
          long long v146 = v186[9];
          long long v145 = v186[8];
          long long v139 = v186[2];
          long long v140 = v186[3];
          long long v142 = v186[5];
          long long v141 = v186[4];
          if (v30) {
            uint64_t v32 = 71;
          }
          else {
            uint64_t v32 = 37;
          }
          long long v138 = v186[1];
          long long v137 = v186[0];
          sub_10008AC70(v32, v22, (uint64_t)v21, (uint64_t)v183);
          sub_1000AEEC8((uint64_t)v183, (uint64_t)v184, &qword_100954678);
          if (sub_100088F34((uint64_t)v184) != 1)
          {
            v136[109] = v184[9];
            v136[110] = v184[10];
            v136[111] = v184[11];
            LOBYTE(v136[112]) = v185;
            v136[105] = v184[5];
            v136[106] = v184[6];
            v136[107] = v184[7];
            v136[108] = v184[8];
            v136[101] = v184[1];
            v136[102] = v184[2];
            v136[103] = v184[3];
            v136[104] = v184[4];
            v136[100] = v184[0];
            uint64_t v33 = (uint64_t)v66;
            long long v34 = *((_OWORD *)v66 + 11);
            long long v81 = *((_OWORD *)v66 + 10);
            long long v82 = v34;
            char v83 = v66[192];
            long long v35 = *((_OWORD *)v66 + 7);
            long long v77 = *((_OWORD *)v66 + 6);
            long long v78 = v35;
            long long v36 = *((_OWORD *)v66 + 9);
            long long v79 = *((_OWORD *)v66 + 8);
            long long v80 = v36;
            long long v37 = *((_OWORD *)v66 + 3);
            long long v73 = *((_OWORD *)v66 + 2);
            long long v74 = v37;
            long long v38 = *((_OWORD *)v66 + 5);
            long long v75 = *((_OWORD *)v66 + 4);
            long long v76 = v38;
            long long v39 = *((_OWORD *)v66 + 1);
            long long v71 = *(_OWORD *)v66;
            long long v72 = v39;
            long long v40 = *((_OWORD *)v66 + 36);
            long long v94 = *((_OWORD *)v66 + 35);
            long long v95 = v40;
            char v96 = v66[592];
            long long v41 = *((_OWORD *)v66 + 32);
            long long v90 = *((_OWORD *)v66 + 31);
            long long v91 = v41;
            long long v42 = *((_OWORD *)v66 + 34);
            long long v92 = *((_OWORD *)v66 + 33);
            long long v93 = v42;
            long long v43 = *((_OWORD *)v66 + 28);
            long long v86 = *((_OWORD *)v66 + 27);
            long long v87 = v43;
            long long v44 = *((_OWORD *)v66 + 30);
            long long v88 = *((_OWORD *)v66 + 29);
            long long v89 = v44;
            long long v45 = *((_OWORD *)v66 + 26);
            long long v84 = *((_OWORD *)v66 + 25);
            long long v85 = v45;
            long long v46 = *((_OWORD *)v66 + 61);
            long long v107 = *((_OWORD *)v66 + 60);
            long long v108 = v46;
            char v109 = v66[992];
            long long v47 = *((_OWORD *)v66 + 57);
            long long v103 = *((_OWORD *)v66 + 56);
            long long v104 = v47;
            long long v48 = *((_OWORD *)v66 + 59);
            long long v105 = *((_OWORD *)v66 + 58);
            long long v106 = v48;
            long long v49 = *((_OWORD *)v66 + 53);
            long long v99 = *((_OWORD *)v66 + 52);
            long long v100 = v49;
            long long v50 = *((_OWORD *)v66 + 55);
            long long v101 = *((_OWORD *)v66 + 54);
            long long v102 = v50;
            long long v51 = *((_OWORD *)v66 + 51);
            long long v97 = *((_OWORD *)v66 + 50);
            long long v98 = v51;
            long long v52 = *((_OWORD *)v66 + 84);
            long long v53 = *((_OWORD *)v66 + 86);
            long long v120 = *((_OWORD *)v66 + 85);
            long long v121 = v53;
            char v122 = v66[1392];
            long long v54 = *((_OWORD *)v66 + 80);
            long long v55 = *((_OWORD *)v66 + 82);
            long long v116 = *((_OWORD *)v66 + 81);
            long long v117 = v55;
            long long v118 = *((_OWORD *)v66 + 83);
            long long v119 = v52;
            long long v56 = *((_OWORD *)v66 + 76);
            long long v57 = *((_OWORD *)v66 + 78);
            long long v112 = *((_OWORD *)v66 + 77);
            long long v113 = v57;
            long long v114 = *((_OWORD *)v66 + 79);
            long long v115 = v54;
            long long v110 = *((_OWORD *)v66 + 75);
            long long v111 = v56;
            long long v58 = *(_OWORD *)(v66 + 1576);
            long long v133 = *(_OWORD *)(v66 + 1560);
            long long v134 = v58;
            char v135 = v66[1592];
            long long v59 = *(_OWORD *)(v66 + 1512);
            long long v129 = *(_OWORD *)(v66 + 1496);
            long long v130 = v59;
            long long v60 = *(_OWORD *)(v66 + 1544);
            long long v131 = *(_OWORD *)(v66 + 1528);
            long long v132 = v60;
            long long v61 = *(_OWORD *)(v66 + 1448);
            long long v125 = *(_OWORD *)(v66 + 1432);
            long long v126 = v61;
            long long v62 = *(_OWORD *)(v66 + 1480);
            long long v127 = *(_OWORD *)(v66 + 1464);
            long long v128 = v62;
            long long v63 = *(_OWORD *)(v66 + 1416);
            long long v123 = *(_OWORD *)(v66 + 1400);
            long long v124 = v63;
            long long v70 = *((_OWORD *)v66 + 100);
            uint64_t v64 = *((void *)v66 + 202);
            uint64_t v65 = *((void *)v66 + 203);
            sub_1000B7C20((uint64_t)&v71);
            sub_1000B7C20((uint64_t)&v84);
            sub_1000B7C20((uint64_t)&v97);
            sub_1000B7C20((uint64_t)&v110);
            sub_1000B7C20((uint64_t)&v123);
            sub_1000B7CCC(v33);
            v136[10] = v81;
            v136[11] = v82;
            v136[6] = v77;
            v136[7] = v78;
            v136[9] = v80;
            v136[8] = v79;
            v136[2] = v73;
            v136[3] = v74;
            v136[5] = v76;
            v136[4] = v75;
            v136[1] = v72;
            v136[0] = v71;
            *(_OWORD *)((char *)&v136[22] + 8) = v94;
            *(_OWORD *)((char *)&v136[23] + 8) = v95;
            *(_OWORD *)((char *)&v136[18] + 8) = v90;
            *(_OWORD *)((char *)&v136[19] + 8) = v91;
            *(_OWORD *)((char *)&v136[20] + 8) = v92;
            *(_OWORD *)((char *)&v136[21] + 8) = v93;
            *(_OWORD *)((char *)&v136[16] + 8) = v88;
            *(_OWORD *)((char *)&v136[17] + 8) = v89;
            *(_OWORD *)((char *)&v136[13] + 8) = v85;
            *(_OWORD *)((char *)&v136[14] + 8) = v86;
            *(_OWORD *)((char *)&v136[15] + 8) = v87;
            *(_OWORD *)((char *)&v136[12] + 8) = v84;
            v136[35] = v107;
            v136[36] = v108;
            v136[31] = v103;
            v136[32] = v104;
            v136[34] = v106;
            v136[33] = v105;
            v136[27] = v99;
            v136[28] = v100;
            v136[30] = v102;
            v136[29] = v101;
            v136[26] = v98;
            v136[25] = v97;
            *(_OWORD *)((char *)&v136[47] + 8) = v120;
            *(_OWORD *)((char *)&v136[48] + 8) = v121;
            *(_OWORD *)((char *)&v136[43] + 8) = v116;
            *(_OWORD *)((char *)&v136[44] + 8) = v117;
            *(_OWORD *)((char *)&v136[45] + 8) = v118;
            *(_OWORD *)((char *)&v136[46] + 8) = v119;
            *(_OWORD *)((char *)&v136[39] + 8) = v112;
            *(_OWORD *)((char *)&v136[40] + 8) = v113;
            *(_OWORD *)((char *)&v136[41] + 8) = v114;
            *(_OWORD *)((char *)&v136[42] + 8) = v115;
            *(_OWORD *)((char *)&v136[37] + 8) = v110;
            *(_OWORD *)((char *)&v136[38] + 8) = v111;
            v136[60] = v133;
            v136[61] = v134;
            v136[56] = v129;
            v136[57] = v130;
            v136[59] = v132;
            v136[58] = v131;
            v136[52] = v125;
            v136[53] = v126;
            v136[55] = v128;
            v136[54] = v127;
            v136[51] = v124;
            v136[50] = v123;
            *(_OWORD *)((char *)&v136[72] + 8) = v173;
            *(_OWORD *)((char *)&v136[73] + 8) = v174;
            *(_OWORD *)((char *)&v136[68] + 8) = v169;
            *(_OWORD *)((char *)&v136[69] + 8) = v170;
            *(_OWORD *)((char *)&v136[70] + 8) = v171;
            *(_OWORD *)((char *)&v136[71] + 8) = v172;
            *(_OWORD *)((char *)&v136[64] + 8) = v165;
            *(_OWORD *)((char *)&v136[65] + 8) = v166;
            *(_OWORD *)((char *)&v136[66] + 8) = v167;
            *(_OWORD *)((char *)&v136[67] + 8) = v168;
            *(_OWORD *)((char *)&v136[62] + 8) = v163;
            *(_OWORD *)((char *)&v136[63] + 8) = v164;
            v136[84] = v159;
            v136[85] = v160;
            v136[86] = v161;
            v136[80] = v155;
            v136[81] = v156;
            v136[82] = v157;
            v136[83] = v158;
            v136[76] = v151;
            v136[77] = v152;
            v136[78] = v153;
            LOBYTE(v136[12]) = v83;
            BYTE8(v136[24]) = v96;
            LOBYTE(v136[37]) = v109;
            BYTE8(v136[49]) = v122;
            LOBYTE(v136[62]) = v135;
            BYTE8(v136[74]) = v175;
            LOBYTE(v136[87]) = v162;
            v136[79] = v154;
            v136[75] = v150;
            *(_OWORD *)((char *)&v136[97] + 8) = v147;
            *(_OWORD *)((char *)&v136[98] + 8) = v148;
            *(_OWORD *)((char *)&v136[93] + 8) = v143;
            *(_OWORD *)((char *)&v136[94] + 8) = v144;
            *(_OWORD *)((char *)&v136[95] + 8) = v145;
            *(_OWORD *)((char *)&v136[96] + 8) = v146;
            *(_OWORD *)((char *)&v136[89] + 8) = v139;
            *(_OWORD *)((char *)&v136[90] + 8) = v140;
            *(_OWORD *)((char *)&v136[91] + 8) = v141;
            *(_OWORD *)((char *)&v136[92] + 8) = v142;
            *(_OWORD *)((char *)&v136[87] + 8) = v137;
            *(_OWORD *)((char *)&v136[88] + 8) = v138;
            BYTE8(v136[99]) = v149;
            memcpy(v176, v136, sizeof(v176));
            long long v177 = v70;
            uint64_t v178 = v64;
            uint64_t v179 = v65;
            ASFriendListDisplayMode.id.getter(v176);
            goto LABEL_15;
          }
          sub_1000B7CCC((uint64_t)v66);
          sub_1000AFF94((uint64_t)v182, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
        }
        sub_1000AFF94((uint64_t)v181, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v16 = v67;
    }
    sub_1000B7CCC((uint64_t)v66);
LABEL_21:
    sub_1000AFF94((uint64_t)v180, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
    goto LABEL_14;
  }
  sub_10008DB18((uint64_t)v11, &qword_100954668);
  uint64_t v16 = v8;
LABEL_14:
  sub_1000E621C(v176);
LABEL_15:
  sub_1000AEEC8((uint64_t)v176, (uint64_t)v192, &qword_100954670);
  return sub_1000AEEC8((uint64_t)v192, v16, &qword_100954670);
}

uint64_t sub_100088F34(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100088F4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X3>, NSObject *a5@<X4>, int a6@<W5>, void *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v159 = a8;
  int v160 = a3;
  long long v146 = a7;
  LODWORD(v174) = a6;
  long long v169 = a5;
  long long v170 = a4;
  id v157 = a1;
  uint64_t v158 = a2;
  uint64_t v156 = a9;
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v152 = *(void *)(v9 - 8);
  uint64_t v153 = v9;
  __chkstk_darwin(v9);
  long long v151 = (uint64_t *)((char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v155 = type metadata accessor for DispatchTime();
  uint64_t v164 = *(void *)(v155 - 8);
  uint64_t v11 = __chkstk_darwin(v155);
  long long v150 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v154 = (char *)&v137 - v13;
  uint64_t v14 = (void *)type metadata accessor for Calendar.Component();
  long long v165 = (uint64_t (**)(void, void, void))*(v14 - 1);
  id v166 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v171 = *(void *)(v20 - 8);
  uint64_t v172 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  char v149 = (char *)&v137 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  long long v148 = (char *)&v137 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  long long v168 = (char *)&v137 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  long long v163 = (char *)&v137 - v28;
  unint64_t v147 = v29;
  __chkstk_darwin(v27);
  long long v173 = (char *)&v137 - v30;
  uint64_t v31 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v137 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v34 - 8);
  long long v36 = (char *)&v137 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for DateComponents();
  uint64_t v161 = *(void *)(v37 - 8);
  uint64_t v162 = v37;
  __chkstk_darwin(v37);
  uint64_t v202 = (char *)&v137 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchPredicate();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v42 = (uint64_t *)((char *)&v137 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *long long v42 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v40 + 104))(v42, enum case for DispatchPredicate.notOnQueue(_:), v39);
  char v43 = _dispatchPreconditionTest(_:)();
  long long v45 = *(void (**)(uint64_t *, uint64_t))(v40 + 8);
  long long v44 = (char *)(v40 + 8);
  v45(v42, v39);
  if ((v43 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_7;
  }
  if (v174)
  {
    long long v46 = v175;
    uint64_t result = sub_1000B7FD4(v170, v169, (uint64_t)v199);
    long long v42 = v46;
    long long v44 = v202;
    if (v46) {
      return result;
    }
    sub_1000AEEC8((uint64_t)v199, (uint64_t)v198, &qword_100954678);
    sub_1000AEEC8((uint64_t)v198, (uint64_t)v201, &qword_100954678);
  }
  else
  {
    sub_10008A330((uint64_t)v198);
    sub_1000AEEC8((uint64_t)v198, (uint64_t)v201, &qword_100954678);
    long long v42 = v175;
    long long v44 = v202;
  }
  sub_1000AEEC8((uint64_t)v201, (uint64_t)v200, &qword_100954678);
  uint64_t v39 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v36, 1, 1, v39);
  uint64_t v48 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v33, 1, 1, v48);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  DateComponents.day.setter();
  if (qword_10094A5E8 != -1) {
    goto LABEL_25;
  }
LABEL_7:
  sub_1000876DC(v39, (uint64_t)qword_100997610);
  long long v49 = v173;
  Calendar.startOfDay(for:)();
  long long v51 = v165;
  id v50 = v166;
  uint64_t result = ((uint64_t (**)(char *, void, id))v165)[13](v16, enum case for Calendar.Component.day(_:), v166);
  if (__OFSUB__(0, v170))
  {
    __break(1u);
  }
  else
  {
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    ((void (*)(char *, id))v51[1])(v16, v50);
    uint64_t v52 = v171;
    uint64_t v53 = v172;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v19, 1, v172) == 1)
    {
      sub_1000AFF94((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v53);
      (*(void (**)(char *, uint64_t))(v161 + 8))(v44, v162);
      sub_10008DB18((uint64_t)v19, (uint64_t *)&unk_10095B890);
      sub_10008A330((uint64_t)v196);
      sub_1000AEEC8((uint64_t)v196, (uint64_t)v198, &qword_100954678);
    }
    else
    {
      char v175 = v42;
      long long v142 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      uint64_t v143 = v52 + 32;
      v142(v163, v19, v53);
      Calendar.startOfDay(for:)();
      id v144 = sub_10008CC68(v160);
      long long v170 = (char *)dispatch_semaphore_create(0);
      id v54 = [self _predicateForObjectsFromAppleWatches];
      long long v55 = v54;
      long long v56 = v146;
      id v145 = v54;
      if (v146)
      {
        sub_1000AFA94((uint64_t *)&unk_10095B850);
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_100756B20;
        *(void *)(v57 + 32) = v55;
        *(void *)(v57 + 40) = v56;
        *(void *)&v196[0] = v57;
        specialized Array._endMutation()();
        sub_10007E2D8(0, (unint64_t *)&unk_100954700);
        id v58 = v56;
        id v59 = v55;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v61 = [self andPredicateWithSubpredicates:isa];
      }
      else
      {
        id v61 = v54;
      }
      *(void *)&v196[0] = 0x3A73646E6572545BLL;
      *((void *)&v196[0] + 1) = 0xE900000000000020;
      id v62 = [v157 identifier];
      uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v65 = v64;

      v66._countAndFlagsBits = v63;
      v66._object = v65;
      String.append(_:)(v66);
      swift_bridgeObjectRelease();
      v67._countAndFlagsBits = 93;
      v67._object = (void *)0xE100000000000000;
      String.append(_:)(v67);
      long long v165 = (uint64_t (**)(void, void, void))*((void *)&v196[0] + 1);
      long long v146 = *(void **)&v196[0];
      if (v159)
      {
        uint64_t v68 = (uint64_t)v146;
        sub_1000AEEC8((uint64_t)v201, (uint64_t)v196, &qword_100954678);
        if (sub_100088F34((uint64_t)v196) == 1)
        {
          if (v174)
          {
            static os_log_type_t.default.getter();
            id v69 = HKLogActivity;
            os_log(_:dso:log:_:_:)();
          }
        }
        else
        {
          sub_1000AEEC8((uint64_t)v201, (uint64_t)&v190, &qword_100954678);
          sub_1000B7C20((uint64_t)&v190);
          LODWORD(v169) = static os_log_type_t.default.getter();
          long long v70 = (void *)HKLogActivity;
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v71 = swift_allocObject();
          *(_OWORD *)(v71 + 16) = xmmword_1007509E0;
          *(void *)&long long v176 = 0;
          *((void *)&v176 + 1) = 0xE000000000000000;
          id v72 = v70;
          _StringGuts.grow(_:)(17);
          long long v189 = v176;
          v73._countAndFlagsBits = v68;
          v73._object = v165;
          String.append(_:)(v73);
          v74._countAndFlagsBits = 0x77207372756F4820;
          v74._object = (void *)0xED0000203A6E726FLL;
          String.append(_:)(v74);
          long long v186 = v196[10];
          long long v187 = v196[11];
          char v188 = v197;
          long long v182 = v196[6];
          long long v183 = v196[7];
          long long v184 = v196[8];
          long long v185 = v196[9];
          long long v178 = v196[2];
          long long v179 = v196[3];
          long long v180 = v196[4];
          long long v181 = v196[5];
          long long v176 = v196[0];
          long long v177 = v196[1];
          _print_unlocked<A, B>(_:_:)();
          sub_1000AFF94((uint64_t)v201, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
          long long v75 = v189;
          *(void *)(v71 + 56) = &type metadata for String;
          *(void *)(v71 + 64) = sub_1000AA64C();
          *(_OWORD *)(v71 + 32) = v75;
          os_log(_:dso:log:_:_:)();

          swift_bridgeObjectRelease();
        }
        static os_log_type_t.default.getter();
        long long v76 = (void *)HKLogActivity;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v77 = swift_allocObject();
        *(_OWORD *)(v77 + 16) = xmmword_1007509E0;
        uint64_t v190 = 0;
        unint64_t v191 = 0xE000000000000000;
        id v78 = v76;
        _StringGuts.grow(_:)(16);
        long long v79 = v165;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v190 = (void **)v68;
        unint64_t v191 = (unint64_t)v79;
        v80._countAndFlagsBits = 0x6163696465725020;
        v80._object = (void *)0xEC000000203A6574;
        String.append(_:)(v80);
        id v81 = v61;
        id v82 = [v81 description];
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        long long v85 = v84;

        v86._countAndFlagsBits = v83;
        v86._object = v85;
        String.append(_:)(v86);

        swift_bridgeObjectRelease();
        long long v87 = v190;
        unint64_t v88 = v191;
        *(void *)(v77 + 56) = &type metadata for String;
        *(void *)(v77 + 64) = sub_1000AA64C();
        *(void *)(v77 + 32) = v87;
        *(void *)(v77 + 40) = v88;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        uint64_t v52 = v171;
        uint64_t v53 = v172;
        long long v49 = v173;
      }
      id v89 = objc_allocWithZone((Class)HKStatisticsCollectionQuery);
      id v90 = v61;
      id v91 = v157;
      id v166 = v91;
      Class v92 = Date._bridgeToObjectiveC()().super.isa;
      Class v93 = DateComponents._bridgeToObjectiveC()().super.isa;
      id v141 = [v89 initWithQuantityType:v91 quantitySamplePredicate:v90 options:v158 anchorDate:v92 intervalComponents:v93];

      id v157 = v90;
      long long v169 = swift_allocObject();
      long long v94 = v169 + 2;
      sub_10008A330((uint64_t)v196);
      long long v138 = v94;
      sub_1000AEEC8((uint64_t)v196, (uint64_t)v94, &qword_100954678);
      uint64_t v95 = v52 + 16;
      char v96 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      long long v97 = v148;
      v96(v148, v168, v53);
      long long v98 = v149;
      v96(v149, v49, v53);
      uint64_t v99 = *(unsigned __int8 *)(v95 + 64);
      uint64_t v100 = (v99 + 32) & ~v99;
      unint64_t v101 = (v147 + v99 + v100) & ~v99;
      unint64_t v102 = v101 + v147;
      unint64_t v139 = (v101 + v147 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v140 = (v101 + v147 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v147 = (v101 + v147 + 223) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v103 = (v102 + 239) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v104 = swift_allocObject();
      long long v105 = v170;
      *(void *)(v104 + 16) = v166;
      *(void *)(v104 + 24) = v105;
      long long v106 = v97;
      long long v107 = (void (*)(unint64_t, char *, uint64_t))v142;
      v142((char *)(v104 + v100), v106, v53);
      v107(v104 + v101, v98, v53);
      unint64_t v108 = v104 + v139;
      *(void *)unint64_t v108 = v158;
      *(unsigned char *)(v108 + 8) = v174 & 1;
      sub_1000AEEC8((uint64_t)v200, v104 + v140, &qword_100954678);
      unint64_t v109 = v104 + v147;
      long long v110 = v144;
      *(void *)unint64_t v109 = v144;
      *(unsigned char *)(v109 + 8) = v159 & 1;
      long long v111 = (void *)(v104 + v103);
      long long v112 = v165;
      *long long v111 = v146;
      v111[1] = v112;
      unint64_t v113 = v104 + ((v103 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(void *)unint64_t v113 = v169;
      *(unsigned char *)(v113 + 8) = v160;
      char v194 = sub_10006A7FC;
      uint64_t v195 = v104;
      uint64_t v190 = _NSConcreteStackBlock;
      unint64_t v191 = 1107296256;
      uint64_t v192 = sub_1000DC1C8;
      uint64_t v193 = &unk_1008BF1D8;
      long long v114 = _Block_copy(&v190);
      id v166 = v166;
      long long v115 = v170;
      id v174 = v110;
      swift_retain();
      sub_10008A670((uint64_t)sub_10006A7FC);
      swift_release();
      id v116 = v141;
      [v141 setInitialResultsHandler:v114];
      _Block_release(v114);
      swift_release();
      id v117 = v116;
      NSString v118 = String._bridgeToObjectiveC()();
      [v117 setDebugIdentifier:v118];

      [*(id *)(v167 + 16) executeQuery:v117];
      long long v119 = v150;
      static DispatchTime.now()();
      long long v121 = v151;
      uint64_t v120 = v152;
      *long long v151 = 15;
      uint64_t v122 = v153;
      (*(void (**)(void *, void, uint64_t))(v120 + 104))(v121, enum case for DispatchTimeInterval.seconds(_:), v153);
      long long v123 = v154;
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v120 + 8))(v121, v122);
      uint64_t v124 = v164 + 8;
      long long v125 = *(void (**)(char *, uint64_t))(v164 + 8);
      uint64_t v126 = v155;
      v125(v119, v155);
      OS_dispatch_semaphore.wait(timeout:)();
      if (static DispatchTimeoutResult.== infix(_:_:)())
      {
        static os_log_type_t.default.getter();
        uint64_t v164 = v124;
        long long v127 = (void *)HKLogActivity;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v128 = swift_allocObject();
        *(_OWORD *)(v128 + 16) = xmmword_1007509E0;
        *(void *)(v128 + 56) = sub_10007E2D8(0, &qword_10094F0F0);
        *(void *)(v128 + 64) = sub_1002B1A38(&qword_1009546E0, &qword_10094F0F0);
        id v129 = v166;
        *(void *)(v128 + 32) = v166;
        id v130 = v129;
        id v131 = v127;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        sub_1002B1A88();
        swift_allocError();
        swift_willThrow();

        v125(v154, v155);
        uint64_t v132 = v172;
        long long v133 = *(void (**)(char *, uint64_t))(v171 + 8);
        v133(v168, v172);
        v133(v163, v132);
        v133(v173, v132);
        (*(void (**)(char *, uint64_t))(v161 + 8))(v202, v162);
        return swift_release();
      }

      v125(v123, v126);
      uint64_t v134 = v172;
      char v135 = *(void (**)(char *, uint64_t))(v171 + 8);
      v135(v168, v172);
      v135(v163, v134);
      v135(v173, v134);
      (*(void (**)(char *, uint64_t))(v161 + 8))(v202, v162);
      uint64_t v136 = (uint64_t)v138;
      swift_beginAccess();
      sub_1000AEEC8(v136, (uint64_t)&v190, &qword_100954678);
      sub_1000AFF94((uint64_t)&v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B00C0);
      swift_release();
      sub_1000AEEC8((uint64_t)&v190, (uint64_t)v198, &qword_100954678);
    }
    return sub_1000AEEC8((uint64_t)v198, v156, &qword_100954678);
  }
  return result;
}

double sub_10008A330(uint64_t a1)
{
  *(unsigned char *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10008A354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1000703F0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008C75A8;
  uint64_t v14 = _Block_copy(aBlock);
  sub_10008A670(a1);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008AA94((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

uint64_t sub_10008A670(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10008A680(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  uint64_t v12 = (void *)HKLogActivity;
  os_log_type_t v13 = v11;
  if (os_log_type_enabled(HKLogActivity, v11))
  {
    v24[0] = (os_log_t)v12;
    uint64_t v14 = swift_slowAlloc();
    v24[1] = v2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v5;
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17 = sub_10008AADC(a1);
    uint64_t v28 = (void *)sub_10008F1F4(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v19 = v24[0];
    _os_log_impl((void *)&_mh_execute_header, v24[0], v13, "[SummaryCoordinator] Processing event %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v25;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(unsigned char *)(v21 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1000703D8;
  aBlock[5] = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  uint64_t aBlock[3] = (uint64_t)&unk_1008C7738;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_10008AA94((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  swift_release();
  return swift_release();
}

uint64_t sub_10008AA94(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008AADC(unsigned __int8 a1)
{
  int v1 = a1 - 39;
  uint64_t result = 0xD000000000000016;
  switch(v1)
  {
    case 0:
    case 8:
    case 9:
      return result;
    case 1:
      uint64_t result = 0xD000000000000020;
      break;
    case 2:
      uint64_t result = 0xD000000000000020;
      break;
    case 3:
      unsigned int v3 = 1918990177;
      goto LABEL_10;
    case 4:
      uint64_t result = 0xD000000000000011;
      break;
    case 5:
      uint64_t result = 0xD000000000000020;
      break;
    case 6:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 10:
      unsigned int v3 = 1852142196;
LABEL_10:
      uint64_t result = v3 | 0x6843736400000000;
      break;
    case 11:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      v4._countAndFlagsBits = sub_10007D644(22);
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      uint64_t result = 0x437363697274656DLL;
      break;
  }
  return result;
}

uint64_t sub_10008AC70@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v201 = (void *)a1;
  *(void *)&long long v206 = a3;
  uint64_t v188 = a4;
  uint64_t v210 = sub_1000AFA94((uint64_t *)&unk_100954680);
  uint64_t v203 = *(unsigned int (***)(void *, uint64_t, uint64_t))(v210 - 8);
  __chkstk_darwin(v210);
  unint64_t v191 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v6 - 8);
  uint64_t v209 = (uint64_t)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v198 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v199 = (char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v190 = (char *)&v150 - v11;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_100954690);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v207 = (double *)((char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v208 = (uint64_t *)((char *)&v150 - v15);
  double v16 = COERCE_DOUBLE(type metadata accessor for Calendar.Component());
  uint64_t v17 = *(void *)(*(void *)&v16 - 8);
  __chkstk_darwin(*(void *)&v16);
  os_log_t v19 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  long long v185 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  *(void *)&double v24 = (char *)&v150 - v23;
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = *(void **)(v25 - 8);
  uint64_t v192 = v25;
  uint64_t v193 = v26;
  uint64_t v27 = __chkstk_darwin(v25);
  long long v183 = (char *)&v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v204 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v150 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v202 = (char *)&v150 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  long long v186 = (char *)&v150 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  long long v187 = (char *)&v150 - v36;
  __chkstk_darwin(v35);
  unint64_t v38 = (unint64_t)&v150 - v37;
  if (qword_10094A5E8 != -1) {
LABEL_160:
  }
    swift_once();
  uint64_t v39 = type metadata accessor for Calendar();
  uint64_t v40 = sub_1000876DC(v39, (uint64_t)qword_100997610);
  unint64_t v189 = v38;
  Calendar.startOfDay(for:)();
  long long v181 = *(void (**)(char *, void, void))(v17 + 104);
  uint64_t v182 = v17 + 104;
  v181(v19, enum case for Calendar.Component.day(_:), *(void *)&v16);
  if (__OFSUB__(0, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v41 = v17;
    uint64_t v205 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))a2;
    double v42 = v16;
    uint64_t v43 = v41;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    long long v44 = *(void (**)(char *, void))(v43 + 8);
    long long v178 = v19;
    uint64_t v179 = v43 + 8;
    double v180 = v42;
    long long v177 = v44;
    v44(v19, *(void *)&v42);
    uint64_t v45 = v192;
    long long v46 = v193;
    long long v47 = v193 + 6;
    long long v184 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v193[6];
    if (v184(*(void *)&v24, 1, v192) == 1)
    {
      ((void (*)(unint64_t, uint64_t))v46[1])(v189, v45);
      sub_10008DB18(*(uint64_t *)&v24, (uint64_t *)&unk_10095B890);
      goto LABEL_17;
    }
    char v175 = v47;
    long long v173 = (void (*)(char *, uint64_t, uint64_t))v46[4];
    id v174 = v46 + 4;
    v173(v187, *(void *)&v24, v45);
    uint64_t v17 = (uint64_t)v186;
    Calendar.startOfDay(for:)();
    if (qword_10094A5F8 == -1) {
      goto LABEL_6;
    }
  }
  swift_once();
LABEL_6:
  sub_1000876DC(v39, (uint64_t)qword_100997640);
  unint64_t v48 = v189;
  uint64_t v49 = sub_1000AC538((char *)v17);
  if (*(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 16) != v205)
  {
    swift_bridgeObjectRelease();
    static os_log_type_t.error.getter();
    id v58 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v59 = v192;
    long long v60 = (void (*)(uint64_t, uint64_t))v193[1];
    v60(v17, v192);
    v60((uint64_t)v187, v59);
    v60(v48, v59);
LABEL_17:
    sub_10008A330((uint64_t)v211);
LABEL_154:
    sub_1000AEEC8((uint64_t)v211, (uint64_t)v216, &qword_100954678);
    return sub_1000AEEC8((uint64_t)v216, v188, &qword_100954678);
  }
  unint64_t v155 = v40;
  id v50 = [*(id *)(v200 + 32) workoutsByDay];
  sub_1000AFA94((uint64_t *)&unk_1009546A0);
  sub_1000C6160(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
  uint64_t v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  a2 = sub_10008C160(v49, v51, (uint64_t)v201);
  swift_bridgeObjectRelease_n();
  uint64_t v52 = a2[2];
  os_log_t v19 = v199;
  uint64_t v53 = v49;
  if (v52)
  {
    swift_bridgeObjectRetain();
    id v54 = a2 + 6;
    long long v55 = _swiftEmptyArrayStorage;
    do
    {
      if ((*v54 & 1) == 0)
      {
        long long v206 = *((_OWORD *)v54 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v55 = sub_1001E70FC(0, v55[2] + 1, 1, v55);
        }
        unint64_t v57 = v55[2];
        unint64_t v56 = v55[3];
        if (v57 >= v56 >> 1) {
          long long v55 = sub_1001E70FC((void *)(v56 > 1), v57 + 1, 1, v55);
        }
        _OWORD v55[2] = v57 + 1;
        *(_OWORD *)&v55[2 * v57 + 4] = v206;
        os_log_t v19 = v199;
      }
      v54 += 24;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t)v186;
  }
  else
  {
    long long v55 = _swiftEmptyArrayStorage;
  }
  uint64_t v61 = v55[2];
  uint64_t v172 = v53;
  if (v61)
  {
    double v62 = sub_10022A2C0((uint64_t)v55);
    uint64_t v160 = v63;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v62 = 0.0;
    uint64_t v160 = 0;
  }
  uint64_t v64 = v193;
  uint64_t v65 = (void (*)(char *, uint64_t, uint64_t))v193[2];
  Swift::String v66 = v202;
  uint64_t v67 = v17;
  uint64_t v68 = v192;
  v65(v202, v67, v192);
  id v69 = v204;
  v65((char *)v204, v189, v68);
  Date.timeIntervalSinceReferenceDate.getter();
  double v71 = v70;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8((uint64_t)v205, (uint64_t)v213, v71, v72);
  long long v176 = (void *)v213[0];
  uint64_t v159 = v213[1];
  uint64_t v73 = v213[2];
  double v74 = *(double *)&v213[3];
  double v75 = *(double *)&v213[4];
  double v76 = *(double *)&v213[5];
  double v77 = *(double *)&v213[6];
  unint64_t v38 = v64[1];
  ((void (*)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v38)(v69, v68);
  uint64_t v193 = v64 + 1;
  long long v169 = (void (*)(char *, uint64_t))v38;
  ((void (*)(char *, uint64_t))v38)(v66, v68);
  sub_100087AC8(7, (uint64_t)v214, 0.0, 6.0);
  long long v170 = (void *)v214[0];
  uint64_t v158 = v214[1];
  uint64_t v78 = v214[2];
  double v79 = *(double *)&v214[3];
  double v166 = *(double *)&v214[5];
  double v167 = *(double *)&v214[4];
  double v165 = *(double *)&v214[6];
  sub_100087AC8(7, (uint64_t)v215, 0.0, 6.0);
  double v195 = 0.0;
  double v24 = 0.0;
  uint64_t v171 = (void *)v215[0];
  uint64_t v157 = v215[1];
  uint64_t v156 = v215[2];
  double v163 = *(double *)&v215[4];
  double v164 = *(double *)&v215[3];
  *(void *)&double v16 = v198 + 16;
  double v161 = *(double *)&v215[6];
  double v162 = *(double *)&v215[5];
  Swift::String v80 = (void *)v172;
  double v81 = *(double *)(v172 + 16);
  uint64_t v196 = v198 + 48;
  uint64_t v205 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
  *(void *)&long long v206 = v198 + 32;
  id v82 = v203;
  v203 += 6;
  uint64_t v204 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 7);
  uint64_t v200 = v198 + 8;
  uint64_t v201 = a2 + 4;
  unsigned int v154 = enum case for Calendar.Component.weekday(_:);
  double v168 = 0.0;
  uint64_t v17 = (uint64_t)v207;
  uint64_t v202 = (char *)v8;
  double v197 = v81;
  while (1)
  {
    while (1)
    {
      if (*(void *)&v24 == *(void *)&v81)
      {
        (*v205)(v209, 1, 1, v8);
        double v24 = v81;
LABEL_30:
        sub_10008DB18(v209, &qword_10094E8A8);
        (*v204)(v17, 1, 1, v210);
        goto LABEL_33;
      }
      if ((*(void *)&v24 & 0x8000000000000000) != 0) {
        goto LABEL_157;
      }
      if (*(void *)&v24 >= v80[2]) {
        goto LABEL_158;
      }
      uint64_t v83 = v198;
      uint64_t v84 = v209;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v198 + 16))(v209, (unint64_t)v80+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v198 + 72) * *(void *)&v24, v8);
      ++*(void *)&v24;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v84, 1, v8) == 1)
      {
        double v81 = v197;
        goto LABEL_30;
      }
      double v194 = v24;
      double v24 = v16;
      long long v85 = a2;
      a2 = v80;
      os_log_t v19 = (char *)v210;
      uint64_t v17 = v206;
      Swift::String v86 = *(void (**)(unint64_t, char *, uint64_t))v206;
      long long v87 = v190;
      (*(void (**)(char *, uint64_t, uint64_t))v206)(v190, v209, v8);
      unint64_t v38 = (unint64_t)&v191[*((int *)v19 + 12)];
      v86(v38, v87, v8);
      *(void *)&double v16 = *(void *)&v195 + 1;
      if (__OFADD__(*(void *)&v195, 1)) {
        goto LABEL_159;
      }
      uint64_t v17 = (uint64_t)v207;
      unint64_t v88 = (char *)v207 + *((int *)v19 + 12);
      double *v207 = v195;
      v86((unint64_t)v88, (char *)v38, v8);
      (*v204)(v17, 0, 1, (uint64_t)v19);
      double v195 = v16;
      os_log_t v19 = v199;
      Swift::String v80 = a2;
      a2 = v85;
      double v16 = v24;
      double v24 = v194;
      double v81 = v197;
LABEL_33:
      id v89 = v208;
      sub_1000AEEC8(v17, (uint64_t)v208, (uint64_t *)&unk_100954690);
      if ((*v203)(v89, 1, v210) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v148 = v192;
        char v149 = v169;
        v169(v186, v192);
        v149(v187, v148);
        v149((char *)v189, v148);
        *(double *)uint64_t v211 = v62;
        v211[1] = v160;
        v211[2] = v176;
        v211[3] = v159;
        v211[4] = v73;
        *(double *)&v211[5] = v74;
        *(double *)&v211[6] = v75;
        *(double *)&v211[7] = v76;
        *(double *)&v211[8] = v77;
        v211[9] = v170;
        v211[10] = v158;
        v211[11] = v78;
        *(double *)&v211[12] = v79;
        *(double *)&v211[13] = v167;
        *(double *)&v211[14] = v166;
        *(double *)&v211[15] = v165;
        v211[16] = v171;
        v211[17] = v157;
        v211[18] = v156;
        *(double *)&v211[19] = v164;
        *(double *)&v211[20] = v163;
        *(double *)&v211[21] = v162;
        *(double *)&v211[22] = v161;
        *(double *)&v211[23] = v168;
        char v212 = 3;
        ASFriendListDisplayMode.id.getter(v211);
        goto LABEL_154;
      }
      unint64_t v38 = *v208;
      uint64_t v8 = (uint64_t)v202;
      (*(void (**)(char *, uint64_t, char *))v206)(v19, (uint64_t)v208 + *(int *)(v210 + 48), v202);
      if ((v38 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
        goto LABEL_160;
      }
      if (v38 >= a2[2]) {
        goto LABEL_156;
      }
      id v90 = (double *)&v201[3 * v38];
      if (((_BYTE)v90[2] & 1) == 0) {
        break;
      }
      (*(void (**)(char *, uint64_t))v200)(v19, v8);
      uint64_t v17 = (uint64_t)v207;
    }
    double v194 = v79;
    uint64_t v91 = v78;
    uint64_t v92 = v73;
    double v93 = v62;
    double v94 = *v90;
    double v95 = *v90;
    if (v38 < v176[2]) {
      break;
    }
    uint64_t v97 = (uint64_t)v185;
LABEL_50:
    unint64_t v38 = v155;
    Calendar.date(from:)();
    unsigned int v101 = v184(v97, 1, v192);
    uint64_t v17 = (uint64_t)v207;
    if (v101 == 1)
    {
      (*(void (**)(char *, uint64_t))v200)(v19, v8);
      sub_10008DB18(v97, (uint64_t *)&unk_10095B890);
      double v62 = v93;
      uint64_t v73 = v92;
      uint64_t v78 = v91;
      double v79 = v194;
      double v81 = v197;
    }
    else
    {
      double v153 = v16;
      unint64_t v102 = v19;
      v173(v183, v97, v192);
      unint64_t v103 = v178;
      double v104 = v180;
      v181(v178, v154, *(void *)&v180);
      uint64_t v105 = Calendar.component(_:from:)();
      v177(v103, *(void *)&v104);
      unint64_t v38 = v105 - 1;
      if (v38 > 6)
      {
        uint64_t v109 = v192;
        os_log_t v19 = v102;
        double v62 = v93;
        uint64_t v73 = v92;
        uint64_t v78 = v91;
        double v79 = v194;
        double v16 = v153;
        double v81 = v197;
        goto LABEL_152;
      }
      uint64_t result = (uint64_t)v170;
      unint64_t v106 = v170[2];
      double v81 = v197;
      if (v38 >= v106)
      {
        uint64_t v109 = v192;
        os_log_t v19 = v102;
        double v16 = v153;
      }
      else
      {
        *(void *)&double v168 = 24 * v38;
        long long v107 = &v170[3 * v38];
        os_log_t v19 = v102;
        if (v107[6])
        {
          double v152 = 1.0;
          double v108 = 0.0;
        }
        else
        {
          long long v110 = (double *)(v107 + 4);
          double v152 = v110[1];
          double v108 = *v110;
        }
        double v151 = v108;
        double v16 = v153;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v170 = sub_1005EC1D4(v170);
        }
        uint64_t v109 = v192;
        uint64_t result = (uint64_t)v170;
        unint64_t v106 = v170[2];
        if (v38 >= v106) {
          goto LABEL_164;
        }
        double v111 = v152;
        double v112 = v152 + 1.0;
        double v113 = (v151 * v111 + v95) / (v111 + 1.0);
        long long v114 = (double *)((char *)v170 + *(void *)&v168);
        v114[4] = v113;
        v114[5] = v111 + 1.0;
        *((unsigned char *)v114 + 48) = 0;
        double v115 = v194;
        BOOL v116 = v194 < v113;
        if (v194 < v113) {
          double v115 = v113;
        }
        double v194 = v115;
        if (v116) {
          double v117 = v112;
        }
        else {
          double v117 = v167;
        }
        double v118 = v166;
        BOOL v119 = v166 < 0.0;
        if (v113 < v166) {
          BOOL v119 = 1;
        }
        if (v119) {
          double v118 = v113;
        }
        double v166 = v118;
        double v167 = v117;
        double v120 = v165;
        if (v119) {
          double v120 = v112;
        }
        double v165 = v120;
      }
      long long v121 = v171;
      unint64_t v122 = v171[2];
      if (v38 >= v122)
      {
        double v62 = v93;
      }
      else
      {
        *(void *)&double v168 = 24 * v38;
        long long v123 = (double *)&v171[3 * v38];
        uint64_t v124 = result;
        if ((_BYTE)v123[6])
        {
          double v125 = 1.0;
          double v126 = 0.0;
        }
        else
        {
          double v126 = v123[4];
          double v125 = v123[5];
        }
        double v153 = v126;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1005EC1D4(v171);
          uint64_t v171 = (void *)result;
        }
        uint64_t v109 = v192;
        long long v121 = v171;
        unint64_t v122 = v171[2];
        if (v38 >= v122) {
          goto LABEL_165;
        }
        uint64_t result = v124;
        double v127 = (v153 * v125 + 1.0) / (v125 + 1.0);
        uint64_t v128 = (double *)((char *)v171 + *(void *)&v168);
        v128[4] = v127;
        v128[5] = v125 + 1.0;
        *((unsigned char *)v128 + 48) = 0;
        if (v164 >= v127) {
          double v129 = v164;
        }
        else {
          double v129 = v127;
        }
        double v130 = v163;
        if (v164 < v127) {
          double v130 = v125 + 1.0;
        }
        double v163 = v130;
        double v164 = v129;
        double v131 = v162;
        BOOL v132 = v162 < 0.0;
        if (v127 < v162) {
          BOOL v132 = 1;
        }
        if (v132) {
          double v131 = v127;
        }
        double v133 = v161;
        if (v132) {
          double v133 = v125 + 1.0;
        }
        double v161 = v133;
        double v162 = v131;
        unint64_t v106 = *(void *)(v124 + 16);
        double v62 = v93;
        double v81 = v197;
      }
      uint64_t v171 = v121;
      uint64_t v134 = (double *)(v121 + 4);
      double v168 = 0.0;
      uint64_t v73 = v92;
      if (v106)
      {
        uint64_t v78 = v91;
        if ((*(unsigned char *)(result + 48) & 1) == 0)
        {
          double v79 = v194;
          if (v122 && ((_BYTE)v134[2] & 1) == 0 && *v134 > 0.0)
          {
            double v135 = *(double *)(result + 32) / *v134;
            if (v135 <= 0.0) {
              double v135 = 0.0;
            }
            double v168 = v135;
          }
          goto LABEL_104;
        }
      }
      else
      {
        uint64_t v78 = v91;
      }
      double v79 = v194;
LABEL_104:
      if (v106 > 1 && (*(unsigned char *)(result + 72) & 1) == 0 && v122 > 1)
      {
        uint64_t v136 = v134 + 3;
        if (((_BYTE)v134[5] & 1) == 0 && *v136 > 0.0)
        {
          double v137 = v168;
          if (*(double *)(result + 56) / *v136 > v168) {
            double v137 = *(double *)(result + 56) / *v136;
          }
          double v168 = v137;
        }
      }
      if (v106 > 2 && (*(unsigned char *)(result + 96) & 1) == 0 && v122 > 2)
      {
        long long v138 = v134 + 6;
        if (((_BYTE)v134[8] & 1) == 0 && *v138 > 0.0)
        {
          double v139 = v168;
          if (*(double *)(result + 80) / *v138 > v168) {
            double v139 = *(double *)(result + 80) / *v138;
          }
          double v168 = v139;
        }
      }
      if (v106 > 3 && (*(unsigned char *)(result + 120) & 1) == 0 && v122 > 3)
      {
        unint64_t v140 = v134 + 9;
        if (((_BYTE)v134[11] & 1) == 0 && *v140 > 0.0)
        {
          double v141 = v168;
          if (*(double *)(result + 104) / *v140 > v168) {
            double v141 = *(double *)(result + 104) / *v140;
          }
          double v168 = v141;
        }
      }
      if (v106 > 4 && (*(unsigned char *)(result + 144) & 1) == 0 && v122 > 4)
      {
        long long v142 = v134 + 12;
        if (((_BYTE)v134[14] & 1) == 0 && *v142 > 0.0)
        {
          double v143 = v168;
          if (*(double *)(result + 128) / *v142 > v168) {
            double v143 = *(double *)(result + 128) / *v142;
          }
          double v168 = v143;
        }
      }
      if (v106 > 5 && (*(unsigned char *)(result + 168) & 1) == 0 && v122 > 5)
      {
        id v144 = v134 + 15;
        if (((_BYTE)v134[17] & 1) == 0 && *v144 > 0.0)
        {
          double v145 = v168;
          if (*(double *)(result + 152) / *v144 > v168) {
            double v145 = *(double *)(result + 152) / *v144;
          }
          double v168 = v145;
        }
      }
      long long v170 = (void *)result;
      if (v106 > 6 && (*(unsigned char *)(result + 192) & 1) == 0 && v122 > 6)
      {
        long long v146 = v134 + 18;
        if (((_BYTE)v134[20] & 1) == 0 && *v146 > 0.0)
        {
          double v147 = v168;
          if (*(double *)(result + 176) / *v146 > v168) {
            double v147 = *(double *)(result + 176) / *v146;
          }
          double v168 = v147;
        }
      }
LABEL_152:
      v169(v183, v109);
      (*(void (**)(char *, uint64_t))v200)(v19, v8);
    }
  }
  double v152 = v90[1];
  double v153 = v94;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005EC1D4(v176);
    long long v176 = (void *)result;
  }
  uint64_t v97 = (uint64_t)v185;
  if (v38 < v176[2])
  {
    double v98 = v152;
    uint64_t v99 = (double *)&v176[3 * v38];
    v99[4] = v153;
    v99[5] = v98;
    *((unsigned char *)v99 + 48) = 0;
    if (v74 < v95)
    {
      double v74 = v95;
      double v75 = v98;
    }
    BOOL v100 = v76 < 0.0;
    if (v76 > v95) {
      BOOL v100 = 1;
    }
    if (v100)
    {
      double v76 = v95;
      double v77 = v98;
    }
    goto LABEL_50;
  }
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
  return result;
}

void *sub_10008C160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_10008CAD8(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v9 = *(void *)(type metadata accessor for DateComponents() - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      sub_10008C2D4(v10, a2, a3, (uint64_t)&v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v12 = v20;
      char v13 = v21;
      uint64_t v22 = v6;
      unint64_t v15 = v6[2];
      unint64_t v14 = v6[3];
      if (v15 >= v14 >> 1)
      {
        long long v18 = v20;
        sub_10008CAD8(v14 > 1, v15 + 1, 1);
        long long v12 = v18;
        uint64_t v6 = v22;
      }
      void v6[2] = v15 + 1;
      double v16 = &v6[3 * v15];
      *((_OWORD *)v16 + 2) = v12;
      *((unsigned char *)v16 + 48) = v13;
      v10 += v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_10008C2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v78 = a3;
  v61[0] = a4;
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v64 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v76 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  uint64_t result = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    uint64_t result = sub_100529888(a1);
    if (v12)
    {
      unint64_t v13 = *(void *)(*(void *)(a2 + 56) + 8 * result);
      uint64_t result = swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
    }
  }
  else
  {
    unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_8;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_60;
    }
LABEL_21:
    if ((v20 & 0x4000000000000000) == 0)
    {
      uint64_t v21 = *(void *)(v20 + 16);
      swift_retain();
      goto LABEL_23;
    }
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_20;
  }
LABEL_8:
  if (v14 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  unint64_t v16 = v13 & 0xC000000000000001;
  double v77 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 & 0xC000000000000001);
  do
  {
    if (v16) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v13 + 8 * v15 + 32);
    }
    long long v18 = v17;
    id v19 = [v17 workoutActivityType:v61[0]];
    if (v19 == (id)v78)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t v16 = (unint64_t)v77;
    }
    else
    {
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  unint64_t v20 = aBlock[0];
  if ((aBlock[0] & 0x8000000000000000) == 0) {
    goto LABEL_21;
  }
LABEL_60:
  while (1)
  {
    swift_retain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
LABEL_23:
    if (!v21) {
      break;
    }
    uint64_t v22 = 0;
    unint64_t v69 = v20 & 0xC000000000000001;
    double v62 = (void *)(v20 + 32);
    uint64_t v65 = v80;
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
    double v77 = (unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    *(void *)&long long v78 = v64 + 16;
    double v74 = (void (**)(char *, uint64_t))(v64 + 8);
    double v75 = (void (**)(char *, char *, uint64_t))(v64 + 32);
    unint64_t v63 = (v64 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    double v24 = _swiftEmptyArrayStorage;
    uint64_t v67 = (void *)v20;
    uint64_t v66 = v21;
    while (1)
    {
      id v25 = v69 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : (id)v62[v22];
      uint64_t v26 = v25;
      if (__OFADD__(v22++, 1)) {
        break;
      }
      id v28 = [v25 totalDistance];
      if (v28)
      {
        id v70 = v28;
        uint64_t v73 = v22;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = _swiftEmptyArrayStorage;
        uint64_t v30 = (uint64_t *)(v29 + 16);
        v80[2] = sub_1002B1858;
        v80[3] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v80[0] = sub_1006AF6DC;
        v80[1] = &unk_1008BF160;
        uint64_t v31 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        double v72 = v26;
        [v26 _enumerateActiveTimePeriods:v31];
        _Block_release(v31);
        swift_beginAccess();
        uint64_t v32 = *v30;
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v33 = *(void *)(v32 + 16);
        uint64_t v71 = v32;
        if (v33)
        {
          uint64_t v68 = v24;
          uint64_t v34 = v32 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
          uint64_t v35 = *(void *)(v64 + 72);
          uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
          swift_bridgeObjectRetain();
          double v37 = 0.0;
          while (1)
          {
            v36(v11, v34, v6);
            unint64_t v38 = *v23;
            (*v23)(v11, 0, 1, v6);
            if ((*v77)(v11, 1, v6) == 1) {
              break;
            }
            uint64_t v39 = v76;
            (*v75)(v76, v11, v6);
            DateInterval.duration.getter();
            double v37 = v37 + v40;
            (*v74)(v39, v6);
            v34 += v35;
            if (!--v33)
            {
              unint64_t v20 = (unint64_t)v67;
              double v24 = v68;
              goto LABEL_38;
            }
          }
          unint64_t v20 = (unint64_t)v67;
          double v24 = v68;
          uint64_t v41 = v72;
          uint64_t v22 = v73;
        }
        else
        {
          unint64_t v38 = *v23;
          swift_bridgeObjectRetain();
          double v37 = 0.0;
LABEL_38:
          uint64_t v41 = v72;
          uint64_t v22 = v73;
          v38(v11, 1, 1, v6);
        }
        swift_bridgeObjectRelease_n();
        uint64_t v21 = v66;
        if (v37 <= 0.0)
        {
        }
        else
        {
          id v42 = [self meterUnitWithMetricPrefix:9];
          id v43 = v70;
          [v70 doubleValueForUnit:v42];
          double v45 = v44;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v24 = sub_1001E70FC(0, v24[2] + 1, 1, v24);
          }
          unint64_t v47 = v24[2];
          unint64_t v46 = v24[3];
          unint64_t v20 = (unint64_t)v67;
          if (v47 >= v46 >> 1) {
            double v24 = sub_1001E70FC((void *)(v46 > 1), v47 + 1, 1, v24);
          }
          os_log_t v24[2] = v47 + 1;
          unint64_t v48 = (double *)&v24[2 * v47];
          v48[4] = v45 / (v37 / 60.0 / 60.0);
          v48[5] = v37;
          uint64_t v22 = v73;
        }
      }
      else
      {
      }
      if (v22 == v21) {
        goto LABEL_48;
      }
    }
    __break(1u);
  }
  double v24 = _swiftEmptyArrayStorage;
LABEL_48:
  swift_release_n();
  uint64_t v49 = v24[2];
  if (v49)
  {
    swift_bridgeObjectRetain();
    id v50 = sub_1001E70FC(0, 1, 1, _swiftEmptyArrayStorage);
    uint64_t v51 = 0;
    unint64_t v52 = v50[2];
    do
    {
      long long v53 = *(_OWORD *)&v24[2 * v51 + 4];
      unint64_t v54 = v50[3];
      if (v52 >= v54 >> 1)
      {
        long long v78 = *(_OWORD *)&v24[2 * v51 + 4];
        long long v55 = sub_1001E70FC((void *)(v54 > 1), v52 + 1, 1, v50);
        long long v53 = v78;
        id v50 = v55;
      }
      ++v51;
      v50[2] = v52 + 1;
      *(_OWORD *)&v50[2 * v52++ + 4] = v53;
    }
    while (v49 != v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v50 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = v50[2];
  if (v56)
  {
    double v57 = sub_10022A2C0((uint64_t)v50);
    uint64_t v59 = v58;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    double v57 = 0.0;
    uint64_t v59 = 0;
  }
  uint64_t v60 = v61[0];
  *(double *)v61[0] = v57;
  *(void *)(v60 + 8) = v59;
  *(unsigned char *)(v60 + 16) = v56 == 0;
  return result;
}

uint64_t sub_10008CAD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10008CAF8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10008CAF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AFA94(&qword_10094E728);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  char v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10008CC68(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = [self meterUnit];
      goto LABEL_9;
    case 2:
      id v1 = [self minuteUnit];
      goto LABEL_9;
    case 3:
      uint64_t v2 = self;
      id v3 = [v2 secondUnit];
      id v4 = [v2 meterUnit];
      id v5 = [v3 unitDividedByUnit:v4];
      goto LABEL_7;
    case 4:
      unint64_t v6 = self;
      id v3 = [v6 meterUnitWithMetricPrefix:9];
      id v4 = [v6 hourUnit];
      id v5 = [v3 unitDividedByUnit:v4];
LABEL_7:
      id v7 = v5;

      return v7;
    case 5:
      id v1 = [self countUnit];
      goto LABEL_9;
    case 6:
      uint64_t v9 = self;
      id v10 = [v9 literUnitWithMetricPrefix:4];
      id v11 = [v9 gramUnitWithMetricPrefix:9];
      id v12 = [v9 minuteUnit];
      id v13 = [v10 unitDividedByUnit:v11];
      id v14 = [v13 unitDividedByUnit:v12];

      goto LABEL_14;
    case 7:
      uint64_t v15 = self;
      id v16 = [v15 kilocalorieUnit];
      id v17 = [v15 hourUnit];
      id v18 = [v15 gramUnitWithMetricPrefix:9];
      id v13 = [v16 unitDividedByUnit:v17];
      id v14 = [v13 unitDividedByUnit:v18];

LABEL_14:
      id result = v14;
      break;
    default:
      id v1 = [self kilocalorieUnit];
LABEL_9:
      id result = v1;
      break;
  }
  return result;
}

unint64_t sub_10008CF98(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v48 = (uint64_t)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  double v45 = (char *)v37 - v7;
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)v37 - v8;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v49 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  v37[1] = a1;
  if (v15)
  {
    id v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v16 = v10 + 16;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v40 = *(void *)(v16 + 56);
    uint64_t v41 = OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache;
    unint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
    id v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    double v44 = v17;
    unint64_t v38 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    uint64_t v42 = v16;
    while (1)
    {
      v44(v14, v18, v9);
      id v19 = *v47;
      (*v47)(v14, 0, 1, v9);
      if ((*v43)(v14, 1, v9) == 1) {
        break;
      }
      (*v39)(v49, v14, v9);
      v20.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
      if (qword_10094A5E8 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Calendar();
      sub_1000876DC(v21, (uint64_t)qword_100997610);
      Class isa = Calendar._bridgeToObjectiveC()().super.isa;
      id v23 = (id)_HKActivityCacheDateComponentsFromDate();

      double v24 = v45;
      if (v23)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v25 = type metadata accessor for DateComponents();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      }
      else
      {
        uint64_t v25 = type metadata accessor for DateComponents();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
      }
      uint64_t v26 = (uint64_t)v24;
      uint64_t v27 = v50;
      sub_1000ACADC(v26, v50);
      uint64_t v28 = v27;
      uint64_t v29 = v48;
      sub_1000AEF2C(v28, v48, &qword_10094E8A8);
      type metadata accessor for DateComponents();
      uint64_t v30 = *(void *)(v25 - 8);
      Class v31 = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v29, 1, v25) != 1)
      {
        uint64_t v32 = v48;
        Class v31 = DateComponents._bridgeToObjectiveC()().super.isa;
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v25);
      }
      uint64_t v33 = _HKCacheIndexFromDateComponents();

      sub_10008DB18(v50, &qword_10094E8A8);
      id v34 = [*(id *)(v46 + v41) activitySummaryForCacheIndex:v33];
      (*v38)(v49, v9);
      if (v34)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v18 += v40;
      if (!--v15)
      {
        v19(v14, 1, 1, v9);
        break;
      }
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v35(v14, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return v51;
}

void *sub_10008D5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unint64_t v69 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_100964B70);
  uint64_t v11 = __chkstk_darwin(v56);
  uint64_t v55 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v54 = (char *)v46 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v53 = v14;
  if (v14)
  {
    v46[2] = v3;
    unint64_t v15 = 0;
    v46[0] = v9;
    id v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v58 = v17;
    unint64_t v18 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    v46[1] = a1;
    uint64_t v19 = a1 + v18;
    uint64_t v50 = *(void *)(v16 + 56);
    uint64_t v59 = v16;
    uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
    double v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v64 = (uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
    NSDate v20 = (unsigned char *)(a2 + 48);
    uint64_t v61 = _swiftEmptyArrayStorage;
    uint64_t v21 = v47;
    unint64_t v51 = v8;
    uint64_t v52 = a2;
    v17(v8, a1 + v18, v47);
    while (1)
    {
      uint64_t v49 = *v60;
      v49(v8, 0, 1, v21);
      if ((*v57)(v8, 1, v21) == 1) {
        break;
      }
      id v23 = *v64;
      id result = (void *)(*v64)(v69, v8, v21);
      unint64_t v25 = *(void *)(a2 + 16);
      if (v15 == v25)
      {
        (*(void (**)(char *, uint64_t))(v46[0] + 8))(v69, v21);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      if (v15 >= v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v62 = v19;
      unint64_t v63 = v15;
      uint64_t v27 = *((void *)v20 - 2);
      uint64_t v26 = *((void *)v20 - 1);
      char v28 = *v20;
      uint64_t v29 = v56;
      uint64_t v30 = (uint64_t)v54;
      Class v31 = &v54[*(int *)(v56 + 48)];
      v23(v54, v69, v21);
      *(void *)Class v31 = v27;
      *((void *)v31 + 1) = v26;
      v31[16] = v28;
      uint64_t v32 = v55;
      sub_10008DB78(v30, v55);
      uint64_t v33 = v32 + *(int *)(v29 + 48);
      if (*(unsigned char *)(v33 + 16))
      {
        sub_10008DB18(v32, &qword_100964B70);
        uint64_t v8 = v51;
        a2 = v52;
        unint64_t v22 = v63;
      }
      else
      {
        uint64_t v35 = *(void *)v33;
        uint64_t v34 = *(void *)(v33 + 8);
        uint64_t v67 = 0;
        unint64_t v68 = 0xE000000000000000;
        sub_1005EC854();
        v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v36);
        swift_bridgeObjectRelease();
        v37._countAndFlagsBits = 2112032;
        v37._object = (void *)0xE300000000000000;
        String.append(_:)(v37);
        uint64_t v65 = v35;
        uint64_t v66 = v34;
        _print_unlocked<A, B>(_:_:)();
        uint64_t v38 = v67;
        unint64_t v48 = v68;
        sub_10008DB18(v32, &qword_100964B70);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v22 = v63;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v61 = sub_100084014(0, v61[2] + 1, 1, v61);
        }
        uint64_t v8 = v51;
        a2 = v52;
        unint64_t v41 = v61[2];
        unint64_t v40 = v61[3];
        if (v41 >= v40 >> 1) {
          uint64_t v61 = sub_100084014((void *)(v40 > 1), v41 + 1, 1, v61);
        }
        uint64_t v42 = v61;
        void v61[2] = v41 + 1;
        id v43 = &v42[2 * v41];
        unint64_t v44 = v48;
        v43[4] = v38;
        v43[5] = v44;
      }
      unint64_t v15 = v22 + 1;
      uint64_t v19 = v62 + v50;
      v20 += 24;
      if (v53 == v15)
      {
        v49(v8, 1, 1, v47);
        break;
      }
      v58(v8, v19, v21);
    }
  }
  else
  {
    double v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v61 = _swiftEmptyArrayStorage;
    v45(v8, 1, 1, v47);
  }
  sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_10008DB18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000AFA94(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008DB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100964B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008DBE0(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for ActivityRingsCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));

  uint64_t v8 = v5 + v7[10];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  uint64_t v11 = a1 + *(int *)(a2 + 28);
  if (*(void *)(v11 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
  }

  return swift_release();
}

uint64_t sub_10008DDB4(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for AwardsCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));
  swift_bridgeObjectRelease();

  uint64_t v8 = a1 + a2[7];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for GeometryProxy();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  sub_1000AFA94(&qword_10094C588);

  return swift_release();
}

uint64_t sub_10008DFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)(v10 - 8) + 8);
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = ((v8 + 16) & ~v8) + a1 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v13;
  }

  return v11((v13 + v12) & ~v12);
}

uint64_t sub_10008E0EC(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for TrendsCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(v7 + 20)), *(void *)(v5 + *(int *)(v7 + 20) + 8), *(unsigned char *)(v5 + *(int *)(v7 + 20) + 16));
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }

  return swift_release();
}

void sub_10008E214(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v47 = a3;
  unint64_t v48 = a2;
  uint64_t v49 = (char *)Strong;
  uint64_t v9 = (void *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    uint64_t v46 = v9;
    uint64_t v12 = v10 + 32;
    uint64_t v45 = v10;
    swift_bridgeObjectRetain();
    *(void *)&long long v13 = 136315138;
    long long v51 = v13;
    uint64_t v50 = (char *)&type metadata for Any + 8;
    uint64_t v52 = v7;
    do
    {
      sub_10008E75C(v12, (uint64_t)v59);
      os_log_type_t v14 = static os_log_type_t.default.getter();
      unint64_t v15 = HKLogActivity;
      sub_10008E75C((uint64_t)v59, (uint64_t)&v56);
      os_log_type_t v16 = v14;
      if (os_log_type_enabled(v15, v14))
      {
        id v17 = v15;
        uint64_t v18 = swift_slowAlloc();
        uint64_t v55 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = v51;
        uint64_t v20 = v57;
        uint64_t v19 = v58;
        sub_10007E4EC(&v56, v57);
        uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v20, v19);
        *(void *)(v18 + 4) = sub_10008F1F4(v21, v22, (uint64_t *)&v55);
        swift_bridgeObjectRelease();
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v56);
        _os_log_impl((void *)&_mh_execute_header, v17, v16, "[SummaryCoordinator] Updating card: %s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        uint64_t v7 = v52;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v56);
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v59);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v9 = v46;
    uint64_t v10 = *v46;
  }
  id v23 = v49;
  *(void *)&v49[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *v9;
  uint64_t v25 = *(void *)(*v9 + 16);
  uint64_t v50 = (char *)*v9;
  if (!v25)
  {
    swift_bridgeObjectRetain();
    char v28 = &_swiftEmptyDictionarySingleton;
LABEL_25:
    swift_bridgeObjectRelease();
    *(void *)&v23[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId] = v28;
    uint64_t v44 = swift_bridgeObjectRelease();
    if (v48) {
      v48(v44);
    }

    return;
  }
  uint64_t v26 = v24 + 32;
  *(void *)&long long v51 = v53 + 16;
  uint64_t v27 = (void (**)(char *, uint64_t))(v53 + 8);
  swift_bridgeObjectRetain();
  char v28 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    sub_10008E75C(v26, (uint64_t)v59);
    uint64_t v30 = v60;
    uint64_t v31 = v61;
    sub_10007E4EC(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    sub_10008E75C((uint64_t)v59, (uint64_t)&v56);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v55 = v28;
    unint64_t v34 = sub_10008F618((uint64_t)v7);
    uint64_t v35 = v28[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v28[3] >= v37)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v28 = v55;
        if (v33) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1004F4D74();
        char v28 = v55;
        if (v38) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_100093A10(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_10008F618((uint64_t)v7);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_31;
      }
      unint64_t v34 = v39;
      char v28 = v55;
      if (v38)
      {
LABEL_11:
        uint64_t v29 = v28[7] + 40 * v34;
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
        sub_100093E60(&v56, v29);
        goto LABEL_12;
      }
    }
    v28[(v34 >> 6) + 8] |= 1 << v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v53 + 16))(v28[6] + *(void *)(v53 + 72) * v34, v7, v54);
    sub_100093E60(&v56, v28[7] + 40 * v34);
    uint64_t v41 = v28[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_30;
    }
    v28[2] = v43;
    char v28 = v55;
LABEL_12:
    swift_bridgeObjectRelease();
    (*v27)(v7, v54);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v59);
    v26 += 40;
    if (!--v25) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_10008E75C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_10008E7C0(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)((char *)a2 + v7 + 24);
  *(_OWORD *)((char *)a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9 + 24);
  if (v12)
  {
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = v12;
    *((void *)v10 + 4) = v13;
    (**(void (***)(void))(v12 - 8))();
  }
  else
  {
    long long v14 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v14;
    *((void *)v10 + 4) = *((void *)v11 + 4);
  }
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  swift_retain();
  return a1;
}

void *sub_10008E93C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    os_log_type_t v16 = (char *)a1 + v15;
    id v17 = (char *)a2 + v15;
    uint64_t v19 = *(void **)((char *)a2 + v15);
    uint64_t v18 = *(void **)((char *)a2 + v15 + 8);
    *(void *)os_log_type_t v16 = v19;
    *((void *)v16 + 1) = v18;
    unint64_t v39 = v18;
    uint64_t v20 = *(void *)((char *)a2 + v15 + 24);
    *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
    *((void *)v16 + 3) = v20;
    *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
    v16[40] = *((unsigned char *)a2 + v15 + 40);
    uint64_t v21 = type metadata accessor for MetricDetailViewModel();
    uint64_t v22 = *(int *)(v21 + 36);
    __dst = &v16[v22];
    uint64_t v41 = v21;
    id v23 = &v17[v22];
    uint64_t v24 = type metadata accessor for DateInterval();
    uint64_t v25 = *(void *)(v24 - 8);
    char v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    id v26 = v19;
    id v27 = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v23, 1, v24))
    {
      uint64_t v28 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v23, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    v16[*(int *)(v41 + 40)] = v17[*(int *)(v41 + 40)];
    uint64_t v30 = *(int *)(v41 + 44);
    uint64_t v31 = &v16[v30];
    uint64_t v32 = &v17[v30];
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    uint64_t v34 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v35 = *(void **)((char *)a2 + v34);
    *(void *)((char *)a1 + v34) = v35;
    id v36 = v35;
  }
  return a1;
}

void *sub_10008EC18(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    os_log_type_t v16 = (char *)a1 + v15;
    uint64_t v17 = *(void *)((char *)a2 + v15);
    uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
    unsigned __int8 v19 = *((unsigned char *)a2 + v15 + 16);
    sub_1000908B0(v17, v18, v19);
    *(void *)os_log_type_t v16 = v17;
    *((void *)v16 + 1) = v18;
    v16[16] = v19;
    uint64_t v20 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    uint64_t v22 = a3[12];
    long long v23 = *(_OWORD *)((char *)a2 + v22 + 24);
    *(_OWORD *)((char *)a1 + v22 + 24) = v23;
    (**(void (***)(void))(v23 - 8))();
  }
  return a1;
}

void *sub_10008EE0C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[10];
    uint64_t v17 = a3[11];
    uint64_t v18 = *(void **)((char *)a2 + v16);
    *(void *)((char *)a1 + v16) = v18;
    unsigned __int8 v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v19;
    uint64_t v20 = a3[12];
    uint64_t v21 = a3[13];
    uint64_t v22 = *(void **)((char *)a2 + v20);
    *(void *)((char *)a1 + v20) = v22;
    long long v23 = *(void **)((char *)a2 + v21);
    *(void *)((char *)a1 + v21) = v23;
    swift_bridgeObjectRetain();
    id v24 = v18;
    id v25 = v19;
    id v26 = v22;
    id v27 = v23;
  }
  return a1;
}

void *sub_10008EF6C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v16;
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)a1 + v17;
    unsigned __int8 v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    id v23 = v16;
    if (v22(v19, 1, v20))
    {
      uint64_t v24 = sub_1000AFA94((uint64_t *)&unk_10095B890);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    uint64_t v28 = *(void **)((char *)a2 + v26);
    *(void *)((char *)a1 + v26) = v28;
    *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
    id v29 = v28;
  }
  return a1;
}

uint64_t sub_10008F18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10008F1F4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10008F2C8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10008F484((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10008F484((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_10008F2C8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10008FF5C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10008F484(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_10008F4E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = v17[8];
    *(void *)uint64_t v16 = v18;
    v16[8] = (char)v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t sub_10008F618(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_10008F80C((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10008F92C(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, (unint64_t *)&unk_100955610, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_10008F6EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F734(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F77C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F80C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F854(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F89C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F8E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008F92C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  id v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_10008F80C(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

void *sub_10008FACC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for CatalogTipSection();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_100955650);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v78 = v19;
      uint64_t v79 = v18;
      uint64_t v22 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v22;
      id v23 = (void *)v17[2];
      uint64_t v24 = (void *)v17[3];
      void v16[2] = v23;
      v16[3] = v24;
      *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
      uint64_t v25 = *(int *)(v18 + 36);
      Swift::String v80 = v16;
      uint64_t v26 = (char *)v16 + v25;
      double v77 = v17;
      uint64_t v27 = (char *)v17 + v25;
      uint64_t v28 = type metadata accessor for ShelfLockupAttributedTagStrings();
      id v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      id v30 = v23;
      id v31 = v24;
      v29(v26, v27, v28);
      uint64_t v32 = (int *)type metadata accessor for CatalogTipSectionItem();
      uint64_t v33 = v32[5];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      uint64_t v36 = type metadata accessor for Artwork();
      uint64_t v37 = *(void *)(v36 - 8);
      double v72 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v72(v34, v35, v36);
      uint64_t v38 = v32[6];
      unint64_t v39 = &v26[v38];
      char v40 = &v27[v38];
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)unint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v41;
      uint64_t v42 = v32[7];
      uint64_t v43 = &v26[v42];
      uint64_t v44 = &v27[v42];
      uint64_t v45 = *((void *)v44 + 1);
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      uint64_t v46 = v32[8];
      __dst = &v26[v46];
      double v75 = v26;
      uint64_t v47 = &v27[v46];
      uint64_t v73 = v37;
      unint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48(v47, 1, v36))
      {
        uint64_t v49 = sub_1000AFA94(&qword_1009512E8);
        memcpy(__dst, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        v72(__dst, v47, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v36);
      }
      uint64_t v50 = v32[9];
      long long v51 = &v75[v50];
      uint64_t v52 = &v27[v50];
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)long long v51 = *(void *)v52;
      *((void *)v51 + 1) = v53;
      uint64_t v54 = v32[10];
      uint64_t v55 = &v75[v54];
      long long v56 = &v27[v54];
      uint64_t v57 = *((void *)v56 + 1);
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      uint64_t v58 = v32[11];
      uint64_t v59 = &v75[v58];
      uint64_t v60 = &v27[v58];
      uint64_t v61 = *((void *)v60 + 1);
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v61;
      uint64_t v62 = v32[12];
      unint64_t v63 = &v75[v62];
      double v76 = &v27[v62];
      uint64_t v64 = type metadata accessor for URL();
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v63, v76, v64);
      uint64_t v66 = *(int *)(v79 + 40);
      uint64_t v67 = (void *)((char *)v80 + v66);
      unint64_t v68 = (void *)((char *)v77 + v66);
      uint64_t v69 = v68[1];
      *uint64_t v67 = *v68;
      v67[1] = v69;
      id v70 = *(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56);
      swift_bridgeObjectRetain();
      v70(v80, 0, 1, v79);
    }
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_10008FF5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10008FFF4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1003B141C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1003B141C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10008FFF4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10009016C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10009016C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AFA94(&qword_10095A6D0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000901D4(uint64_t a1)
{
  return a1;
}

uint64_t destroy for CardHeaderView(uint64_t a1)
{
  uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  if (*(void *)(a1 + 64))
  {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 40);
  }
  return result;
}

uint64_t sub_100090274(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  sub_1000917F8(*(void *)(v5 + Card[5]), *(void *)(v5 + Card[5] + 8), *(unsigned char *)(v5 + Card[5] + 16));
  sub_1000904DC(*(void *)(v5 + Card[9]), *(void *)(v5 + Card[9] + 8), *(unsigned char *)(v5 + Card[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[11]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v5 + Card[12]);
  uint64_t result = a1 + *(int *)(a2 + 32);
  if (*(void *)(result + 24)) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  }
  return result;
}

uint64_t sub_1000903CC(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + *(int *)(a2 + 20));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }

  return swift_release();
}

uint64_t _s10FitnessApp24HistoryViewActionContextVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000904DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s10FitnessApp27FitnessPlusCardDataProviderC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000908B0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

void *sub_100090544(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (char *)a1 + v8;
  char v13 = (char *)a2 + v8;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  uint64_t v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v18(v15, v16, v17);
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v20 = Card[5];
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  LOBYTE(v17) = v22[16];
  sub_100091494(*(void *)v22, v24, v17);
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  v21[16] = v17;
  v15[Card[6]] = v16[Card[6]];
  v15[Card[7]] = v16[Card[7]];
  v15[Card[8]] = v16[Card[8]];
  uint64_t v25 = Card[9];
  uint64_t v26 = &v15[v25];
  uint64_t v27 = &v16[v25];
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *((void *)v27 + 1);
  LOBYTE(v17) = v27[16];
  sub_1000908B0(*(void *)v27, v29, v17);
  *(void *)uint64_t v26 = v28;
  *((void *)v26 + 1) = v29;
  v26[16] = v17;
  v15[Card[10]] = v16[Card[10]];
  uint64_t v30 = Card[11];
  long long v31 = *(_OWORD *)&v16[v30 + 24];
  *(_OWORD *)&v15[v30 + 24] = v31;
  (**(void (***)(void))(v31 - 8))();
  uint64_t v32 = Card[12];
  long long v33 = *(_OWORD *)&v16[v32 + 24];
  *(_OWORD *)&v15[v32 + 24] = v33;
  (**(void (***)(void))(v33 - 8))();
  uint64_t v34 = v42[8];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)a2 + v34 + 24);
  if (v37)
  {
    uint64_t v38 = *((void *)v36 + 4);
    *((void *)v35 + 3) = v37;
    *((void *)v35 + 4) = v38;
    (**(void (***)(void))(v37 - 8))();
  }
  else
  {
    long long v39 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v39;
    *((void *)v35 + 4) = *((void *)v36 + 4);
  }
  uint64_t v40 = v42[10];
  *((unsigned char *)a1 + v42[9]) = *((unsigned char *)a2 + v42[9]);
  *((unsigned char *)a1 + v40) = *((unsigned char *)a2 + v40);
  return a1;
}

uint64_t type metadata accessor for FitnessPlusUpNextCard()
{
  uint64_t result = qword_100958258;
  if (!qword_100958258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000908B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000908CC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v42 = v6;
    uint64_t v43 = v4;
    uint64_t v44 = v3;
    uint64_t v45 = (char *)Strong;
    uint64_t v8 = Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards;
    swift_beginAccess();
    v41[1] = v41;
    uint64_t v9 = *(void *)(*(void *)v8 + 16);
    uint64_t v10 = swift_bridgeObjectRetain();
    v41[0] = v10;
    if (v9)
    {
      uint64_t v11 = 0;
      int v12 = a2;
      uint64_t v13 = v10 + 32;
      unsigned int v46 = a2 - 51;
      uint64_t v14 = _swiftEmptyArrayStorage;
      while (1)
      {
        sub_10008E75C(v13 + 40 * v11, (uint64_t)&v50 + 8);
        uint64_t v53 = v11;
        sub_100093E60((long long *)((char *)&v50 + 8), (uint64_t)v54);
        uint64_t v15 = v55;
        uint64_t v16 = v56;
        sub_10007E4EC(v54, v55);
        uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
        if (v19)
        {
          sub_1000917F8(v17, v18, v19);
          uint64_t v20 = v55;
          uint64_t v21 = v56;
          sub_10007E4EC(v54, v55);
          uint64_t v22 = sub_1000918BC(v20, v21);
          uint64_t v23 = v22[2];
          if (v23)
          {
            uint64_t v24 = 0;
            while (1)
            {
              switch(*((unsigned char *)v22 + v24 + 32))
              {
                case '\'':
                  if (v12 != 39) {
                    goto LABEL_10;
                  }
                  goto LABEL_36;
                case '(':
                  if (v12 == 40) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case ')':
                  if (v12 == 41) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '*':
                  if (v12 == 42) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '+':
                  if (v12 == 43) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case ',':
                  if (v12 == 44) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '-':
                  if (v12 == 45) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '.':
                  if (v12 == 46) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '/':
                  if (v12 == 47) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '0':
                  if (v12 == 48) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '1':
                  if (v12 == 49) {
                    goto LABEL_36;
                  }
                  goto LABEL_10;
                case '2':
                  if (v12 != 50) {
                    goto LABEL_10;
                  }
                  goto LABEL_36;
                default:
                  if (v46 <= 0xFFFFFFF3 && *((unsigned __int8 *)v22 + v24 + 32) == v12)
                  {
LABEL_36:
                    swift_bridgeObjectRelease();
                    goto LABEL_41;
                  }
LABEL_10:
                  if (v23 == (void *)++v24) {
                    goto LABEL_37;
                  }
                  break;
              }
            }
          }
LABEL_37:
          swift_bridgeObjectRelease();
        }
        else if (v46 <= 0xFFFFFFF3 && v17 == v12)
        {
LABEL_41:
          *(void *)&long long v50 = v11;
          sub_10008E75C((uint64_t)v54, (uint64_t)&v50 + 8);
          goto LABEL_42;
        }
        long long v51 = 0u;
        long long v52 = 0u;
        long long v50 = 0u;
LABEL_42:
        sub_10008DB18((uint64_t)&v53, &qword_10094F398);
        if ((void)v52)
        {
          long long v47 = v50;
          long long v48 = v51;
          long long v49 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_1000956B0(0, v14[2] + 1, 1, v14);
          }
          unint64_t v26 = v14[2];
          unint64_t v25 = v14[3];
          if (v26 >= v25 >> 1) {
            uint64_t v14 = sub_1000956B0((void *)(v25 > 1), v26 + 1, 1, v14);
          }
          void v14[2] = v26 + 1;
          uint64_t v27 = &v14[6 * v26];
          long long v28 = v47;
          long long v29 = v49;
          _OWORD v27[3] = v48;
          v27[4] = v29;
          long long v27[2] = v28;
        }
        else
        {
          sub_10008DB18((uint64_t)&v50, &qword_10095CB78);
        }
        if (++v11 == v9) {
          goto LABEL_49;
        }
      }
    }
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v30 = v45;
    long long v31 = *(void **)&v45[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
    uint64_t v32 = v42;
    *uint64_t v42 = v31;
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    (*(void (**)(void *, void, uint64_t))(v43 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v44);
    id v35 = v31;
    char v36 = _dispatchPreconditionTest(_:)();
    uint64_t v37 = (*(uint64_t (**)(void *, uint64_t))(v33 + 8))(v32, v34);
    if (v36)
    {
      __chkstk_darwin(v37);
      v41[-2] = v30;
      uint64_t v38 = sub_100094B24((uint64_t)v14, (void (*)(long long *__return_ptr, void, uint64_t))sub_1000958E8);
      swift_bridgeObjectRelease();
      if (v38[2])
      {
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v30;
        *(void *)(v39 + 24) = v38;
        id v40 = v30;
        sub_10008A354((uint64_t)sub_1000B03DC, v39);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void *sub_100090E40(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  Swift::String v86 = a1;
  long long v87 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v88 = a2;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for MetricCard();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned char v13[16] = v17;
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v18 = v11[9];
  uint64_t v84 = v9;
  long long v85 = v8;
  char v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  uint64_t v22 = *(void **)&v9[v18];
  uint64_t v21 = *(void **)&v9[v18 + 8];
  *(void *)char v19 = v22;
  *((void *)v19 + 1) = v21;
  uint64_t v24 = *(void *)&v9[v18 + 16];
  uint64_t v23 = *(void *)&v9[v18 + 24];
  *((void *)v19 + 2) = v24;
  *((void *)v19 + 3) = v23;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  unsigned char v19[40] = v20[40];
  uint64_t v25 = type metadata accessor for MetricDetailViewModel();
  uint64_t v26 = *(int *)(v25 + 36);
  __dst = &v19[v26];
  uint64_t v83 = v25;
  double v81 = &v20[v26];
  uint64_t v27 = type metadata accessor for DateInterval();
  uint64_t v28 = *(void *)(v27 - 8);
  Swift::String v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  id v29 = v22;
  id v30 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v80(v81, 1, v27))
  {
    uint64_t v31 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v81, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v81, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  v19[*(int *)(v83 + 40)] = v20[*(int *)(v83 + 40)];
  uint64_t v32 = *(int *)(v83 + 44);
  uint64_t v33 = &v19[v32];
  uint64_t v34 = &v20[v32];
  uint64_t v35 = type metadata accessor for Date();
  char v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
  v36(v33, v34, v35);
  v85[v11[10]] = v84[v11[10]];
  uint64_t v37 = v11[11];
  uint64_t v38 = *(void **)&v84[v37];
  *(void *)&v85[v37] = v38;
  id v40 = v87;
  uint64_t v39 = v88;
  uint64_t v41 = v87[7];
  *((unsigned char *)v86 + v87[6]) = *((unsigned char *)v88 + v87[6]);
  uint64_t v42 = (char *)v86 + v41;
  uint64_t v43 = (char *)v88 + v41;
  uint64_t v44 = *(void *)((char *)v88 + v41 + 24);
  id v45 = v38;
  if (v44)
  {
    uint64_t v46 = *((void *)v43 + 4);
    *((void *)v42 + 3) = v44;
    *((void *)v42 + 4) = v46;
    (**(void (***)(char *, char *, uint64_t))(v44 - 8))(v42, v43, v44);
  }
  else
  {
    long long v47 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v47;
    *((void *)v42 + 4) = *((void *)v43 + 4);
  }
  uint64_t v48 = v87[8];
  long long v49 = (void **)((char *)v86 + v48);
  long long v50 = (void **)((char *)v88 + v48);
  uint64_t v51 = type metadata accessor for MetricChartData();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    uint64_t v53 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    uint64_t v54 = *v50;
    *long long v49 = *v50;
    uint64_t v55 = *(int *)(v51 + 20);
    uint64_t v56 = (char *)v49 + v55;
    uint64_t v57 = (char *)v50 + v55;
    id v58 = v54;
    uint64_t v59 = v56;
    uint64_t v60 = v57;
    id v40 = v87;
    uint64_t v39 = v88;
    v36(v59, v60, v35);
    uint64_t v61 = *(int *)(v51 + 24);
    uint64_t v62 = *(void **)((char *)v50 + v61);
    *(void **)((char *)v49 + v61) = v62;
    unint64_t v63 = *(void (**)(void **, void, uint64_t, uint64_t))(v52 + 56);
    id v64 = v62;
    v63(v49, 0, 1, v51);
  }
  uint64_t v65 = v40[9];
  uint64_t v66 = (char *)v86 + v65;
  uint64_t v67 = (uint64_t)v39 + v65;
  unint64_t v68 = *(void **)((char *)v39 + v65);
  *(void *)((char *)v86 + v65) = v68;
  uint64_t v69 = type metadata accessor for MetricFormattingHelper();
  uint64_t v70 = *(int *)(v69 + 20);
  uint64_t v71 = &v66[v70];
  uint64_t v72 = v67 + v70;
  uint64_t v73 = type metadata accessor for AttributedString();
  double v74 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16);
  id v75 = v68;
  v74(v71, v72, v73);
  uint64_t v76 = *(int *)(v69 + 24);
  double v77 = *(void **)(v67 + v76);
  *(void *)&v66[v76] = v77;
  id v78 = v77;
  return v86;
}

uint64_t sub_10009138C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 20);
  uint64_t v3 = *(void *)v2;
  sub_100091494(*(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
  return v3;
}

uint64_t _s10FitnessApp8CardTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t initializeWithCopy for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100091494(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000914AC(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for MetricCard();
  sub_1000917F8(*(void *)(v5 + v7[5]), *(void *)(v5 + v7[5] + 8), *(unsigned char *)(v5 + v7[5] + 16));
  uint64_t v8 = (id *)(v5 + v7[9]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for MetricDetailViewModel();
  uint64_t v10 = (char *)v8 + *(int *)(v9 + 36);
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = (char *)v8 + *(int *)(v9 + 44);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);

  uint64_t v16 = a1 + a2[7];
  if (*(void *)(v16 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v16);
  }
  char v17 = (id *)(a1 + a2[8]);
  uint64_t v18 = type metadata accessor for MetricChartData();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {

    v15((char *)v17 + *(int *)(v18 + 20), v14);
  }
  char v19 = (id *)(a1 + a2[9]);

  uint64_t v20 = type metadata accessor for MetricFormattingHelper();
  uint64_t v21 = (char *)v19 + *(int *)(v20 + 20);
  uint64_t v22 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = *(id *)((char *)v19 + *(int *)(v20 + 24));
}

uint64_t destroy for LoadingCardHeightProvider.HeightKey(uint64_t a1)
{
  sub_1000917F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000917F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MetricFormattingHelper()
{
  uint64_t result = qword_100961068;
  if (!qword_100961068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009185C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1C7C);
}

uint64_t type metadata accessor for MetricChartData()
{
  uint64_t result = qword_10094F1B0;
  if (!qword_10094F1B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_UNKNOWN **sub_1000918BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v7 = sub_10009191C(v2, v3, v5);
  sub_1000917F8(v2, v4, v6);
  return v7;
}

_UNKNOWN **sub_10009191C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = &off_1008B6060;
  switch(a3)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = &off_1008B6100;
      break;
    case 3:
      uint64_t result = (&off_1008D4808)[a1];
      break;
    default:
      sub_1000AFA94(&qword_1009670F0);
      uint64_t result = (_UNKNOWN **)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_10074E640;
      *((unsigned char *)result + 32) = a1;
      *((unsigned char *)result + 33) = 45;
      break;
  }
  return result;
}

uint64_t sub_1000919B4()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type;
  uint64_t v2 = *(void *)v1;
  sub_100091494(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

uint64_t sub_100091A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10094CED0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094CED8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10094CEE0);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_10094CEE8);
  __chkstk_darwin(v31);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100093EC0(v1, (uint64_t)v7);
  if (qword_10094AC78 != -1) {
    swift_once();
  }
  double v12 = *(double *)&qword_100998080;
  uint64_t v13 = (void *)(v1 + *(int *)(type metadata accessor for DashboardCardView() + 20));
  sub_100092088((uint64_t)v4);
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v4, 0, 1, v14);
  double v16 = sub_10009259C(v13, (uint64_t)v4, v12);
  sub_10008E75C((uint64_t)v13, (uint64_t)v33);
  sub_100092908((uint64_t)v33, (uint64_t)v4, v16);
  sub_10008DB18((uint64_t)v33, &qword_10094CEF0);
  sub_10008DB18((uint64_t)v4, &qword_10094CED0);
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v9, &qword_10094CED8);
  char v17 = &v9[*(int *)(v30 + 36)];
  *char v17 = 1;
  *((double *)v17 + 1) = v16;
  v17[16] = 0;
  sub_10008DB18((uint64_t)v7, &qword_10094CED8);
  double v18 = *(double *)&qword_100998080;
  sub_100092088((uint64_t)v4);
  v15(v4, 0, 1, v14);
  double v19 = sub_10009259C(v13, (uint64_t)v4, v18);
  sub_10008E75C((uint64_t)v13, (uint64_t)v33);
  uint64_t v20 = sub_100092908((uint64_t)v33, (uint64_t)v4, v19);
  char v22 = v21;
  sub_10008DB18((uint64_t)v33, &qword_10094CEF0);
  sub_10008DB18((uint64_t)v4, &qword_10094CED0);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v11, &qword_10094CEE0);
  uint64_t v23 = &v11[*(int *)(v31 + 36)];
  *uint64_t v23 = 1;
  *((void *)v23 + 1) = v20;
  unsigned char v23[16] = v22 & 1;
  sub_10008DB18((uint64_t)v9, &qword_10094CEE0);
  uint64_t v24 = static Alignment.center.getter();
  uint64_t v26 = v25;
  uint64_t v27 = v32;
  sub_1000AEF2C((uint64_t)v11, v32, &qword_10094CEE8);
  uint64_t v28 = (uint64_t *)(v27 + *(int *)(sub_1000AFA94(&qword_10094CEF8) + 36));
  *uint64_t v28 = v24;
  v28[1] = v26;
  return sub_10008DB18((uint64_t)v11, &qword_10094CEE8);
}

uint64_t sub_100091DD0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(a1);
  __chkstk_darwin(v15);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AEF2C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    char v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_10008F1F4(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100092088@<X0>(uint64_t a1@<X8>)
{
  return sub_100091DD0(&qword_10094C578, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

double sub_1000920C8(double a1, double a2, float a3, float a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1000AFA94(&qword_10094CED0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v13 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  swift_beginAccess();
  sub_1000AEF2C(v13, (uint64_t)&v65, &qword_10094CEF0);
  if (v68)
  {
    sub_100093E60(&v65, (uint64_t)v64);
    id v14 = [v5 window];
    double v15 = a1;
    if (v14)
    {
      uint64_t v16 = v14;
      BOOL v17 = sub_100092FE4((uint64_t)[v14 interfaceOrientation]);
      [v16 bounds];
      if (v17) {
        double Width = CGRectGetWidth(*(CGRect *)&v18);
      }
      else {
        double Width = CGRectGetHeight(*(CGRect *)&v18);
      }
      double v15 = Width;
    }
    uint64_t v28 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
    double v27 = sub_10009259C(v64, (uint64_t)v12, v15);
    sub_10008E75C((uint64_t)v64, (uint64_t)&v65);
    *(double *)&uint64_t v29 = COERCE_DOUBLE(sub_100092908((uint64_t)&v65, (uint64_t)v12, v27));
    char v31 = v30;
    sub_10008DB18((uint64_t)&v65, &qword_10094CEF0);
    sub_10008DB18((uint64_t)v12, &qword_10094CED0);
    if (v31)
    {
      uint64_t v33 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
      v62.receiver = v5;
      v62.super_class = v33;
      *(float *)&double v34 = a3;
      *(float *)&double v35 = a4;
      [super systemLayoutSizeFittingSize:a1 withHorizontalFittingPriority:a2 verticalFittingPriority:v34];
      double v32 = v36;
    }
    else
    {
      double v32 = *(double *)&v29;
    }
    sub_1000AEF2C(v13, (uint64_t)&v65, &qword_10094CEF0);
    if (v68)
    {
      sub_100093E60(&v65, (uint64_t)v59);
      uint64_t v37 = v60;
      uint64_t v38 = v61;
      sub_10007E4EC(v59, v60);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 56))(v37, v38))
      {
        uint64_t v39 = *(void *)&v5[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider];
        if (v39)
        {
          uint64_t v40 = v60;
          uint64_t v41 = v61;
          sub_10007E4EC(v59, v60);
          uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 16);
          swift_retain();
          uint64_t v43 = v42(v40, v41);
          uint64_t v45 = v44;
          char v47 = v46;
          uint64_t v48 = v60;
          uint64_t v49 = v61;
          sub_10007E4EC(v59, v60);
          char v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49) & 1;
          id v51 = [self sharedApplication];
          id v52 = [v51 preferredContentSizeCategory];

          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;

          swift_beginAccess();
          *(void *)&long long v65 = v43;
          *((void *)&v65 + 1) = v45;
          char v66 = v47;
          char v67 = v50;
          uint64_t v68 = v53;
          uint64_t v69 = v55;
          sub_100091494(v43, v45, v47);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v58 = *(void *)(v39 + 16);
          *(void *)(v39 + 16) = 0x8000000000000000;
          sub_100092FF4(&v65, isUniquelyReferenced_nonNull_native, v32);
          *(void *)(v39 + 16) = v58;
          swift_bridgeObjectRelease();
          sub_1000917F8(v43, v45, v47);
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRetain();
          sub_1000937C0();
          swift_bridgeObjectRelease();
          sub_1000917F8(v43, v45, v47);
          swift_release();
        }
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v59);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v64);
      sub_10008DB18((uint64_t)&v65, &qword_10094CEF0);
    }
  }
  else
  {
    sub_10008DB18((uint64_t)&v65, &qword_10094CEF0);
    uint64_t v23 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
    v63.receiver = v5;
    v63.super_class = v23;
    *(float *)&double v24 = a3;
    *(float *)&double v25 = a4;
    [super systemLayoutSizeFittingSize:a1 withHorizontalFittingPriority:a2 verticalFittingPriority:v24];
    return v26;
  }
  return v27;
}

double sub_10009259C(void *a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094CED0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 + -40.0 < 0.0) {
    double v16 = 0.0;
  }
  else {
    double v16 = a3 + -40.0;
  }
  double v17 = floor((v16 + -10.0) * 0.5);
  if (v17 < 0.0) {
    double v18 = 0.0;
  }
  else {
    double v18 = v17;
  }
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_10007E4EC(a1, v19);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20)) {
    return v16;
  }
  sub_1000AEF2C(a2, (uint64_t)v9, &qword_10094CED0);
  char v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v9, 1, v12) == 1)
  {
    id v22 = [self sharedApplication];
    id v23 = [v22 preferredContentSizeCategory];

    DynamicTypeSize.init(_:)();
    sub_10008DB18((uint64_t)v9, &qword_10094CED0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if (v21(v11, 1, v12) == 1)
  {
    sub_10008DB18((uint64_t)v11, &qword_10094CED0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v24 = a1[3];
    uint64_t v25 = a1[4];
    sub_10007E4EC(a1, v24);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    uint64_t v28 = v27;
    LOBYTE(v24) = v29;
    LOBYTE(v25) = sub_100092DA4((uint64_t)v15, v26, v27, v29);
    sub_1000917F8(v26, v28, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((v25 & 0xFE) != 0) {
      return v16;
    }
  }
  return v18;
}

uint64_t sub_1000928FC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_100092908(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094CED0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [self sharedApplication];
  id v17 = [v16 preferredContentSizeCategory];

  sub_1000AEF2C(a2, (uint64_t)v9, &qword_10094CED0);
  double v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v18(v9, 1, v12) == 1)
  {
    id v19 = v17;
    DynamicTypeSize.init(_:)();
    sub_10008DB18((uint64_t)v9, &qword_10094CED0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if (v18(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_1000AEF2C(a1, (uint64_t)&v37, &qword_10094CEF0);
    if (!v38)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

      uint64_t v20 = &qword_10094CEF0;
      char v21 = &v37;
      goto LABEL_12;
    }
    sub_100093E60(&v37, (uint64_t)v39);
    uint64_t v22 = v40;
    uint64_t v23 = v41;
    sub_10007E4EC(v39, v40);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23))
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v39);
      goto LABEL_13;
    }
    uint64_t v24 = v40;
    uint64_t v25 = v41;
    sub_10007E4EC(v39, v40);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    uint64_t v28 = v27;
    LOBYTE(v25) = v29;
    char v30 = sub_100092DA4((uint64_t)v15, v26, v27, v29);
    sub_1000917F8(v26, v28, v25);
    if (v30)
    {
      if (v30 != 1)
      {

        double v32 = 0.0;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v39);
        return *(void *)&v32;
      }
      double v31 = 1.15;
    }
    else
    {
      double v31 = 1.05;
    }
    double v34 = v31 * a3;
    if (qword_10094AC80 != -1) {
      swift_once();
    }
    if (byte_100998088) {
      double v34 = v34 * 1.15;
    }
    if (qword_10094AC88 != -1) {
      swift_once();
    }
    int v35 = byte_100998089;

    double v36 = v34 * 1.15;
    if (!v35) {
      double v36 = v34;
    }
    double v32 = v36;
    goto LABEL_27;
  }

  uint64_t v20 = &qword_10094CED0;
  char v21 = (long long *)v11;
LABEL_12:
  sub_10008DB18((uint64_t)v21, v20);
LABEL_13:
  double v32 = 0.0;
  return *(void *)&v32;
}

uint64_t sub_100092DA4(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  int v17 = a4;
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v10(v9, enum case for DynamicTypeSize.large(_:), v6);
  sub_100092F80();
  char v11 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  if ((v11 & 1) == 0) {
    return 0;
  }
  if (v17 - 1 >= 2)
  {
    if (!(_BYTE)v17)
    {
LABEL_6:
      uint64_t v13 = (unsigned int *)&enum case for DynamicTypeSize.xxxLarge(_:);
      goto LABEL_10;
    }
    if (v17 != 3) {
      return 1;
    }
    if (__PAIR128__((unint64_t)(a2 >= 2) + a3 - 1, a2 - 2) < 2) {
      goto LABEL_6;
    }
    if (a2 ^ 6 | a3) {
      return 1;
    }
  }
  uint64_t v13 = (unsigned int *)&enum case for DynamicTypeSize.accessibility1(_:);
LABEL_10:
  v10(v9, *v13, v6);
  char v15 = static DynamicTypeSize.< infix(_:_:)();
  v12(v9, v6);
  if (v15) {
    return 1;
  }
  else {
    return 2;
  }
}

unint64_t sub_100092F80()
{
  unint64_t result = qword_10094C6D8;
  if (!qword_10094C6D8)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C6D8);
  }
  return result;
}

uint64_t sub_100092FD8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

BOOL sub_100092FE4(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t sub_100092FF4(long long *a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10009315C((uint64_t *)a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F61CC();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    long long v18 = *a1;
    __int16 v26 = *((_WORD *)a1 + 8);
    long long v24 = *(long long *)((char *)a1 + 24);
    long long v25 = v18;
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = v16[6] + 40 * v10;
    *(void *)(v19 + 32) = *((void *)a1 + 4);
    long long v20 = a1[1];
    *(_OWORD *)uint64_t v19 = v18;
    *(_OWORD *)(v19 + 16) = v20;
    *(double *)(v16[7] + 8 * v10) = a3;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      void v16[2] = v23;
      sub_10050A638((uint64_t)&v25);
      return sub_1001D9EF4((uint64_t)&v24);
    }
    goto LABEL_14;
  }
  sub_1004EEBA4(result, a2 & 1);
  uint64_t result = sub_10009315C((uint64_t *)a1);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_10009315C(uint64_t *a1)
{
  Hasher.init(_seed:)();
  sub_1000931C8();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1000934C0(a1, v2);
}

uint64_t sub_1000931C8()
{
  Swift::String v2 = *(Swift::String *)v0;
  LOWORD(v3) = *(_WORD *)(v0 + 16);
  sub_100091494(v2._countAndFlagsBits, (uint64_t)v2._object, v3);
  sub_1000932C0(v2, v3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v3 || v3 == 2)
  {
    Hasher._combine(_:)(LOBYTE(v2._countAndFlagsBits));
  }
  else if (v3 == 1)
  {
    String.hash(into:)();
  }
  Hasher._combine(_:)(BYTE1(v3));
  sub_10009348C((uint64_t)&v2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000932C0(Swift::String a1, char a2)
{
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  switch(a2)
  {
    case 1:
      uint64_t v6 = 0x5F646E65697266;
      String.append(_:)(a1);
      return v6;
    case 2:
      uint64_t v6 = 0;
      v4._uint64_t countAndFlagsBits = 0x5F646E657274;
      v4._object = (void *)0xE600000000000000;
      String.append(_:)(v4);
      goto LABEL_5;
    case 3:
      uint64_t result = 0x73676E6972;
      switch(countAndFlagsBits)
      {
        case 1:
          uint64_t result = 1684107116;
          break;
        case 2:
          uint64_t result = 0x79726F74736968;
          break;
        case 3:
          uint64_t result = 0x6472617761;
          break;
        case 4:
          uint64_t result = 0xD000000000000010;
          break;
        case 5:
          uint64_t result = 0xD000000000000011;
          break;
        case 6:
          uint64_t result = 0x54676F6C61746163;
          break;
        case 7:
          uint64_t result = 0x73646E657274;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v6 = 0;
      v3._uint64_t countAndFlagsBits = 0x5F63697274656DLL;
      v3._object = (void *)0xE700000000000000;
      String.append(_:)(v3);
LABEL_5:
      _print_unlocked<A, B>(_:_:)();
      return v6;
  }
}

uint64_t sub_10009348C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000934C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    BOOL v6 = *a1 != 7;
    BOOL v7 = *a1 != 6;
    BOOL v8 = *a1 != 5;
    BOOL v9 = *a1 != 4;
    BOOL v10 = *a1 != 3;
    BOOL v11 = *a1 != 2;
    BOOL v12 = *a1 == 1;
    if (a1[1])
    {
      BOOL v6 = 1;
      BOOL v7 = 1;
      BOOL v8 = 1;
      BOOL v9 = 1;
      BOOL v10 = 1;
      BOOL v11 = 1;
      BOOL v12 = 0;
    }
    int v42 = *((unsigned __int8 *)a1 + 16);
    uint64_t v38 = a1[1];
    int v40 = *((unsigned __int8 *)a1 + 17);
    if (v42 != 3) {
      BOOL v12 = 0;
    }
    BOOL v37 = v12;
    uint64_t v41 = *a1;
    if (*((unsigned char *)a1 + 16) != 3) {
      BOOL v6 = 1;
    }
    BOOL v36 = v6;
    char v13 = *((unsigned char *)a1 + 16) != 3 || v7;
    char v35 = v13;
    char v14 = *((unsigned char *)a1 + 16) != 3 || v8;
    char v15 = *((unsigned char *)a1 + 16) != 3 || v9;
    char v33 = v15;
    char v34 = v14;
    char v16 = *((unsigned char *)a1 + 16) != 3 || v10;
    char v17 = *((unsigned char *)a1 + 16) != 3 || v11;
    char v31 = v17;
    char v32 = v16;
    BOOL v18 = *(_OWORD *)a1 == 0 && *((unsigned char *)a1 + 16) == 3;
    BOOL v30 = v18;
    while (1)
    {
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v4;
      uint64_t v22 = *(void *)v20;
      uint64_t v21 = *(void *)(v20 + 8);
      char v19 = *(unsigned char *)(v20 + 16);
      int v23 = *(unsigned __int8 *)(v20 + 17);
      uint64_t v24 = *(void *)(v20 + 24);
      uint64_t v25 = *(void *)(v20 + 32);
      switch(v19)
      {
        case 1:
          if (v42 != 1) {
            goto LABEL_29;
          }
          BOOL v26 = v22 == v41 && v21 == v38;
          if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_29;
          }
          swift_bridgeObjectRetain();
          goto LABEL_42;
        case 2:
          if (v42 == 2) {
            goto LABEL_41;
          }
          goto LABEL_29;
        case 3:
          switch(v22)
          {
            case 1:
              if (v37) {
                goto LABEL_42;
              }
              break;
            case 2:
              if ((v31 & 1) == 0) {
                goto LABEL_42;
              }
              goto LABEL_29;
            case 3:
              if ((v32 & 1) == 0) {
                goto LABEL_42;
              }
              goto LABEL_29;
            case 4:
              if ((v33 & 1) == 0) {
                goto LABEL_42;
              }
              goto LABEL_29;
            case 5:
              if ((v34 & 1) == 0) {
                goto LABEL_42;
              }
              goto LABEL_29;
            case 6:
              if ((v35 & 1) == 0) {
                goto LABEL_42;
              }
              goto LABEL_29;
            case 7:
              if (!v36) {
                goto LABEL_42;
              }
              goto LABEL_29;
            default:
              if (v30) {
                goto LABEL_42;
              }
              break;
          }
          char v19 = 3;
          goto LABEL_28;
        default:
          if (v42) {
            goto LABEL_29;
          }
LABEL_41:
          if (v22 != v41) {
            goto LABEL_29;
          }
LABEL_42:
          if ((v23 ^ v40))
          {
LABEL_28:
            sub_1000917F8(v22, v21, v19);
          }
          else
          {
            if (v24 == a1[3] && v25 == a1[4])
            {
              sub_1000917F8(v22, v21, v19);
              return v4;
            }
            char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
            sub_1000917F8(v22, v21, v19);
            if (v28) {
              return v4;
            }
          }
LABEL_29:
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1000937C0()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1000AFA94(&qword_10096A840);
  sub_100093928(&qword_10096A848, (void (*)(void))sub_1000E6A3C);
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v2 = v1;
  id v3 = [self standardUserDefaults];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setObject:isa forKey:v5];

  swift_release();
  return sub_1000939A4(v0, v2);
}

uint64_t sub_100093928(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(&qword_10096A840);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000939A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000939FC()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
}

uint64_t sub_100093A10(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  BOOL v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000AFA94(&qword_10095FE70);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  char v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v42 = v8;
  uint64_t v43 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    uint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          id v3 = v38;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v8 + 48) + v26 * v20;
    char v28 = v43;
    uint64_t v29 = v44;
    if (v45)
    {
      (*v46)(v43, v27, v44);
      sub_100093E60((long long *)(*(void *)(v8 + 56) + 40 * v20), (uint64_t)v47);
    }
    else
    {
      (*v41)(v43, v27, v44);
      sub_10008E75C(*(void *)(v8 + 56) + 40 * v20, (uint64_t)v47);
    }
    sub_100093E78((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v46)((char *)(*(void *)(v10 + 48) + v26 * v18), (unint64_t)v28, v29);
    uint64_t result = sub_100093E60(v47, *(void *)(v10 + 56) + 40 * v18);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v25;
    uint64_t v8 = v42;
  }
  swift_release();
  id v3 = v38;
  uint64_t v22 = v40;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v10;
  return result;
}

uint64_t sub_100093E60(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100093E78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100093EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v86 = sub_1000AFA94(&qword_10094CF00);
  __chkstk_darwin(v86);
  uint64_t v73 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_10094CF08);
  uint64_t v71 = *(void *)(v87 - 8);
  uint64_t v4 = __chkstk_darwin(v87);
  uint64_t v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v70 = (char *)&v65 - v6;
  uint64_t v79 = sub_1000AFA94(&qword_10094CF10);
  __chkstk_darwin(v79);
  char v67 = (uint64_t *)((char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_1000AFA94(&qword_10094CF18);
  uint64_t v69 = *(void *)(v80 - 8);
  uint64_t v8 = __chkstk_darwin(v80);
  char v66 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v68 = (char *)&v65 - v10;
  uint64_t v82 = sub_1000AFA94(&qword_10094CF20);
  __chkstk_darwin(v82);
  uint64_t v81 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_10094CF28);
  __chkstk_darwin(v76);
  double v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_10094CF30);
  __chkstk_darwin(v83);
  id v78 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v14 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  char v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_10094CF38);
  __chkstk_darwin(v74);
  unint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_10094CF40);
  uint64_t v19 = *(void *)(v75 - 8);
  uint64_t v20 = __chkstk_darwin(v75);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int64_t v24 = (char *)&v65 - v23;
  uint64_t v25 = (void *)(a1 + *(int *)(type metadata accessor for DashboardCardView() + 20));
  uint64_t v27 = v25[3];
  uint64_t v26 = v25[4];
  sub_10007E4EC(v25, v27);
  unint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v27, v26);
  uint64_t v31 = a1;
  if (v30 != 3) {
    goto LABEL_6;
  }
  unint64_t v32 = v24;
  uint64_t v33 = v14;
  uint64_t v34 = v85;
  uint64_t v35 = v86;
  uint64_t v36 = v72;
  uint64_t v37 = v87;
  if (__PAIR128__((unint64_t)(v28 >= 3) + v29 - 1, v28 - 3) < 2)
  {
    uint64_t v38 = v73;
    sub_100099488(1, v73);
    static AccessibilityChildBehavior.combine.getter();
    int64_t v39 = v36;
    unint64_t v40 = sub_100094954();
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
    sub_10008DB18(v38, &qword_10094CF00);
    uint64_t v42 = v70;
    uint64_t v41 = v71;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v39, v37);
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v81, v42, v37);
    swift_storeEnumTagMultiPayload();
    sub_1000949F4();
    uint64_t v88 = v35;
    unint64_t v89 = v40;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v37);
  }
  uint64_t v14 = v33;
  int64_t v24 = v32;
  if (v28 ^ 5 | v29)
  {
LABEL_6:
    sub_1000917F8(v28, v29, v30);
    *(void *)unint64_t v18 = static HorizontalAlignment.center.getter();
    *((void *)v18 + 1) = 0;
    unsigned char v18[16] = 0;
    uint64_t v57 = sub_1000AFA94(&qword_10094CF48);
    sub_1000988C0(v31, (uint64_t)&v18[*(int *)(v57 + 44)]);
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v58 = sub_1000A132C(&qword_10094CF50, &qword_10094CF38);
    uint64_t v59 = v74;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v85);
    sub_10008DB18((uint64_t)v18, &qword_10094CF38);
    uint64_t v60 = v22;
    uint64_t v61 = v75;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v60, v75);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v77, v24, v61);
    swift_storeEnumTagMultiPayload();
    uint64_t v88 = v59;
    unint64_t v89 = v58;
    swift_getOpaqueTypeConformance2();
    uint64_t v62 = sub_1000A132C(&qword_10094CF58, &qword_10094CF10);
    uint64_t v88 = v79;
    unint64_t v89 = v62;
    swift_getOpaqueTypeConformance2();
    uint64_t v63 = (uint64_t)v78;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v63, v81, &qword_10094CF30);
    swift_storeEnumTagMultiPayload();
    sub_1000949F4();
    unint64_t v64 = sub_100094954();
    uint64_t v88 = v86;
    unint64_t v89 = v64;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v63, &qword_10094CF30);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v61);
  }
  else
  {
    uint64_t v44 = static Alignment.top.getter();
    uint64_t v45 = (uint64_t)v67;
    *char v67 = v44;
    *(void *)(v45 + 8) = v46;
    uint64_t v47 = sub_1000AFA94(&qword_10094D128);
    sub_1000B1DD0(v31, (char *)(v45 + *(int *)(v47 + 44)));
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v48 = sub_1000A132C(&qword_10094CF58, &qword_10094CF10);
    uint64_t v49 = v66;
    uint64_t v50 = v79;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v85);
    sub_10008DB18(v45, &qword_10094CF10);
    uint64_t v51 = v69;
    id v52 = v68;
    uint64_t v53 = v80;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v49, v80);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v77, v52, v53);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = sub_1000A132C(&qword_10094CF50, &qword_10094CF38);
    uint64_t v88 = v74;
    unint64_t v89 = v54;
    swift_getOpaqueTypeConformance2();
    uint64_t v88 = v50;
    unint64_t v89 = v48;
    swift_getOpaqueTypeConformance2();
    uint64_t v55 = (uint64_t)v78;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v55, v81, &qword_10094CF30);
    swift_storeEnumTagMultiPayload();
    sub_1000949F4();
    unint64_t v56 = sub_100094954();
    uint64_t v88 = v86;
    unint64_t v89 = v56;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v55, &qword_10094CF30);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  }
}

unint64_t sub_100094954()
{
  unint64_t result = qword_10094CF68;
  if (!qword_10094CF68)
  {
    sub_1000A1370(&qword_10094CF00);
    sub_1000A132C(&qword_10094CF70, &qword_10094CF78);
    sub_10009973C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CF68);
  }
  return result;
}

unint64_t sub_1000949F4()
{
  unint64_t result = qword_10094CF60;
  if (!qword_10094CF60)
  {
    sub_1000A1370(&qword_10094CF30);
    sub_1000A1370(&qword_10094CF38);
    sub_1000A132C(&qword_10094CF50, &qword_10094CF38);
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_10094CF10);
    sub_1000A132C(&qword_10094CF58, &qword_10094CF10);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CF60);
  }
  return result;
}

void *sub_100094B24(uint64_t a1, void (*a2)(long long *__return_ptr, void, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = swift_bridgeObjectRetain() + 40;
  uint64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    a2(&v9, *(void *)(v4 - 8), v4);
    if (v10)
    {
      sub_100093E60(&v9, (uint64_t)v11);
      sub_100093E60(v11, (uint64_t)&v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_10009569C(0, v5[2] + 1, 1, v5);
      }
      unint64_t v7 = v5[2];
      unint64_t v6 = v5[3];
      if (v7 >= v6 >> 1) {
        uint64_t v5 = sub_10009569C((void *)(v6 > 1), v7 + 1, 1, v5);
      }
      uint64_t v5[2] = v7 + 1;
      sub_100093E60(&v9, (uint64_t)&v5[5 * v7 + 4]);
    }
    else
    {
      sub_10008DB18((uint64_t)&v9, &qword_10094CEF0);
    }
    v4 += 48;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100094C7C@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100094C84(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_100094C84@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  sub_10007E4EC(a2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v9 = v8;
  char v11 = v10;
  sub_100094F80(v7, v10, v40);
  sub_1000917F8(v7, v9, v11);
  uint64_t v12 = v41;
  uint64_t v13 = v42;
  sub_10007E4EC(v40, v41);
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  sub_10007E4EC(a2, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  sub_10007E4EC(a2, v21);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22) & 1;
  sub_10008E75C((uint64_t)a2, (uint64_t)v37);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, void, uint64_t, uint64_t))(v13 + 8))(&v38, v16, v18, v20, v23, v37, *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode), v12, v13);
  sub_1000917F8(v16, v18, v20);
  sub_10008DB18((uint64_t)v37, &qword_10094CEF0);
  if (!v39)
  {
    sub_10008DB18((uint64_t)&v38, &qword_10094CEF0);
    uint64_t v29 = v40;
    goto LABEL_5;
  }
  sub_100093E60(&v38, (uint64_t)v43);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v40);
  uint64_t v24 = v44;
  uint64_t v25 = v45;
  sub_10007E4EC(v43, v44);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  uint64_t v27 = a2[3];
  uint64_t v28 = a2[4];
  sub_10007E4EC(a2, v27);
  if (v26 == (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 48))(v27, v28))
  {
    uint64_t v29 = v43;
LABEL_5:
    uint64_t result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v29);
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  uint64_t v31 = (uint64_t *)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess();
  unint64_t v32 = (void *)*v31;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v31 = (uint64_t)v32;
  if (result)
  {
    unint64_t v33 = a1;
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_1000B1CA0(v32);
  unint64_t v32 = (void *)result;
  *uint64_t v31 = result;
  unint64_t v33 = a1;
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (v32[2] <= v33)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_10009EDF0(&v32[5 * v33 + 4], v43);
  swift_endAccess();
  sub_10008E75C((uint64_t)v43, a4);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v43);
}

id sub_100094F80@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t *a3@<X8>)
{
  switch(a2)
  {
    case 1:
LABEL_6:
      uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory);
      uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory);
      uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory + 8);
      uint64_t v15 = (void *)v12[2];
      uint64_t v16 = (void *)v12[3];
      uint64_t v17 = (void *)v12[4];
      uint64_t v18 = (void *)v12[5];
      id v61 = (id)v12[6];
      a3[3] = (uint64_t)&type metadata for FriendCardFactory;
      a3[4] = (uint64_t)&off_1008CD120;
      uint64_t v19 = (void *)swift_allocObject();
      *a3 = (uint64_t)v19;
      v19[2] = v14;
      v19[3] = v13;
      v19[4] = v15;
      v19[5] = v16;
      v19[6] = v17;
      v19[7] = v18;
      v19[8] = v61;
      id v20 = v14;
      swift_retain();
      id v21 = v15;
      id v22 = v16;
      id v23 = v17;
      id v24 = v18;
      goto LABEL_8;
    case 2:
LABEL_7:
      uint64_t v25 = v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory;
      uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory);
      uint64_t v27 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 8);
      uint64_t v28 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 24);
      id v61 = *(id *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 16);
      uint64_t v29 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 32);
      char v30 = *(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 40);
      uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 48);
      uint64_t v31 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory + 56);
      unint64_t v33 = *(void **)(v25 + 64);
      a3[3] = (uint64_t)&type metadata for TrendsCardFactory;
      a3[4] = (uint64_t)&off_1008C49F8;
      uint64_t v34 = swift_allocObject();
      *a3 = v34;
      *(void *)(v34 + 16) = v26;
      *(void *)(v34 + 24) = v27;
      *(void *)(v34 + 32) = v61;
      *(void *)(v34 + 40) = v28;
      *(void *)(v34 + 48) = v29;
      *(unsigned char *)(v34 + 56) = v30;
      *(void *)(v34 + 64) = v32;
      *(void *)(v34 + 72) = v31;
      *(void *)(v34 + 80) = v33;
      swift_bridgeObjectRetain();
      id v35 = v33;
      id v36 = v26;
      id v37 = v27;
      goto LABEL_8;
    case 3:
      switch(a1)
      {
        case 1:
          long long v38 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory);
          a3[3] = (uint64_t)&type metadata for LoadCardFactory;
          a3[4] = (uint64_t)&off_1008D5020;
          *a3 = (uint64_t)v38;
          goto LABEL_9;
        case 2:
          unint64_t v40 = (void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory);
          uint64_t v41 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory);
          uint64_t v42 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 8);
          uint64_t v44 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 16);
          uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 24);
          uint64_t v45 = (void *)v40[4];
          uint64_t v46 = (void *)v40[5];
          uint64_t v47 = (void *)v40[6];
          id v61 = (id)v40[7];
          a3[3] = (uint64_t)&type metadata for HistoryCardFactory;
          a3[4] = (uint64_t)&off_1008C3518;
          uint64_t v48 = (void *)swift_allocObject();
          *a3 = (uint64_t)v48;
          v48[2] = v41;
          void v48[3] = v42;
          v48[4] = v44;
          v48[5] = v43;
          v48[6] = v45;
          unsigned char v48[7] = v46;
          v48[8] = v47;
          v48[9] = v61;
          id v49 = v41;
          id v50 = v42;
          id v51 = v44;
          swift_retain();
          id v52 = v45;
          id v53 = v46;
          id v54 = v47;
          goto LABEL_8;
        case 3:
          uint64_t v55 = v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_awardCardFactory;
          a3[3] = (uint64_t)&type metadata for AwardsCardFactory;
          a3[4] = (uint64_t)&off_1008D24E0;
          uint64_t v56 = swift_allocObject();
          *a3 = v56;
          id result = (id)sub_1000A5690(v55, v56 + 16);
          break;
        case 4:
          goto LABEL_6;
        case 5:
          uint64_t v57 = v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusCardFactory;
          a3[3] = (uint64_t)&type metadata for FitnessPlusCardFactory;
          a3[4] = (uint64_t)&off_1008BDE58;
          uint64_t v58 = swift_allocObject();
          *a3 = v58;
          id result = (id)sub_1000B1B20(v57, v58 + 16);
          break;
        case 6:
          uint64_t v59 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory);
          uint64_t v60 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory + 8);
          a3[3] = (uint64_t)&type metadata for CatalogTipCardFactory;
          a3[4] = (uint64_t)&off_1008D5C28;
          *a3 = v59;
          a3[1] = v60;
          swift_retain();
          id result = (id)swift_retain();
          break;
        case 7:
          goto LABEL_7;
        default:
          uint64_t v5 = v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory;
          uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory);
          uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory + 8);
          uint64_t v8 = &type metadata for ActivityRingsCardFactory;
          uint64_t v9 = &off_1008C6890;
          goto LABEL_3;
      }
      return result;
    default:
      uint64_t v5 = v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory;
      uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory);
      uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory + 8);
      uint64_t v8 = &type metadata for MetricsCardFactory;
      uint64_t v9 = &off_1008C7BE0;
LABEL_3:
      id v61 = *(id *)(v5 + 16);
      a3[3] = (uint64_t)v8;
      a3[4] = (uint64_t)v9;
      *a3 = (uint64_t)v6;
      a3[1] = (uint64_t)v7;
      a3[2] = (uint64_t)v61;
      id v10 = v6;
      id v11 = v7;
LABEL_8:
      long long v38 = v61;
LABEL_9:
      return v38;
  }
}

void *sub_100095378(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1000AFA94(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100095AC0(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000954A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_uuid;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_100095520(double a1, double a2, double a3, double a4)
{
  unint64_t v9 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
  v20.receiver = v4;
  v20.super_class = v9;
  [super bounds];
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  v19.receiver = v4;
  v19.super_class = v9;
  [super setBounds:a1, a2, a3, a4];
  [v4 bounds];
  v22.origin.x = v11;
  v22.origin.y = v13;
  v22.size.width = v15;
  v22.size.height = v17;
  if (!CGRectEqualToRect(v21, v22))
  {
    uint64_t v18 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling;
    if (*((unsigned char *)v4 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling))
    {
      sub_1006E8DD8(0, v4);
      *((unsigned char *)v4 + v18) = 0;
      sub_1006E8DD8(1, v4);
      *((unsigned char *)v4 + v18) = 1;
    }
  }
}

uint64_t type metadata accessor for ActivityDashboardCardCell()
{
  return self;
}

uint64_t sub_100095688()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_loadingState);
}

void *sub_10009569C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100095378(a1, a2, a3, a4, &qword_10094E180, &qword_10094D218);
}

void *sub_1000956B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AFA94(&qword_10094E818);
      double v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      double v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      double v10 = _swiftEmptyArrayStorage;
      double v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000957D8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000957D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1000AFA94(&qword_10094E820);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000958F0()
{
  unint64_t v1 = (int *)type metadata accessor for MetricCard();
  uint64_t v2 = (long long *)(v0 + v1[5]);
  long long v14 = *v2;
  LOBYTE(v15) = *((unsigned char *)v2 + 16);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  LOBYTE(v14) = *(unsigned char *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)();
  v4._uint64_t countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  type metadata accessor for UUID();
  sub_100095A68();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 540945696;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  id v7 = *(id *)(v0 + v1[9]);
  id v8 = [v7 description:v14, v15];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  size_t v11 = v10;

  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_100095A68()
{
  unint64_t result = qword_10095F730;
  if (!qword_10095F730)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095F730);
  }
  return result;
}

uint64_t sub_100095AC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1000AFA94(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_100095BCC()
{
  uint64_t v1 = v0;
  Hasher.init()();
  uint64_t v2 = (int *)type metadata accessor for AwardsCard();
  uint64_t v3 = v0 + v2[5];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  sub_100091494(*(void *)v3, (uint64_t)v5, *(unsigned char *)(v3 + 16));
  v69._uint64_t countAndFlagsBits = v4;
  v69._object = v5;
  sub_1000932C0(v69, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)();
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = v6;
    }
    sub_1000917F8(v7, v8, v9);
  }
  unsigned __int8 v10 = *(unsigned char *)(v1 + v2[6]);
  Hasher._combine(_:)(v10);
  Hasher._combine(_:)(*(unsigned char *)(v1 + v2[7]));
  size_t v11 = *(void **)(v1 + v2[11]);
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v12 = v11;
    NSObject.hash(into:)();

    if (v10) {
      goto LABEL_10;
    }
LABEL_27:
    uint64_t v28 = *(void **)(v1 + v2[10]);
    if (v28)
    {
      id v29 = [v28 template];
      id v30 = [v29 uniqueName];

      if (v30)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      Swift::UInt8 v39 = [v28 unearned];
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v39);
      id v40 = [v28 template];
      id v41 = [v40 canonicalUnit];

      if (v41)
      {
        id v42 = [v28 progress];
        if (v42)
        {
          uint64_t v43 = v42;
          [v42 doubleValueForUnit:v41];
          Swift::UInt64 v45 = v44;

          Hasher._combine(_:)(1u);
          if ((v45 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
            Swift::UInt64 v46 = v45;
          }
          else {
            Swift::UInt64 v46 = 0;
          }
          Hasher._combine(_:)(v46);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
      }
      goto LABEL_78;
    }
    goto LABEL_30;
  }
  Hasher._combine(_:)(0);
  if ((v10 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_10:
  unint64_t v13 = *(void *)(v1 + v2[9]);
  if (!v13)
  {
LABEL_30:
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
LABEL_78:
    long long v66 = v62[2];
    long long v67 = v62[3];
    uint64_t v68 = v63;
    long long v64 = v62[0];
    long long v65 = v62[1];
    return Hasher.finalize()();
  }
  unint64_t v61 = v13 >> 62;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v14)
  {
    *(void *)&long long v64 = _swiftEmptyArrayStorage;
    Swift::Int result = sub_1001C92BC(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_80;
    }
    uint64_t v16 = 0;
    CGFloat v17 = (void *)v64;
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v18 = *(id *)(v13 + 8 * v16 + 32);
      }
      objc_super v19 = v18;
      id v20 = [v18 template:v61];
      id v21 = [v20 uniqueName];

      if (v21)
      {
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;
      }
      else
      {

        uint64_t v22 = 0;
        uint64_t v24 = 0;
      }
      *(void *)&long long v64 = v17;
      unint64_t v26 = v17[2];
      unint64_t v25 = v17[3];
      if (v26 >= v25 >> 1)
      {
        sub_1001C92BC(v25 > 1, v26 + 1, 1);
        CGFloat v17 = (void *)v64;
      }
      ++v16;
      v17[2] = v26 + 1;
      uint64_t v27 = &v17[2 * v26];
      v27[4] = v22;
      v27[5] = v24;
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    CGFloat v17 = _swiftEmptyArrayStorage;
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  sub_1001CBCC4((uint64_t)v62, (uint64_t)v17);
  swift_bridgeObjectRelease_n();
  if (v61)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    if (v31)
    {
LABEL_34:
      *(void *)&long long v64 = _swiftEmptyArrayStorage;
      Swift::Int result = sub_1001C9354(0, v31 & ~(v31 >> 63), 0);
      if ((v31 & 0x8000000000000000) == 0)
      {
        uint64_t v32 = 0;
        unint64_t v33 = (void *)v64;
        do
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v34 = *(id *)(v13 + 8 * v32 + 32);
          }
          id v35 = v34;
          unsigned __int8 v36 = [v34 unearned];

          *(void *)&long long v64 = v33;
          unint64_t v38 = v33[2];
          unint64_t v37 = v33[3];
          if (v38 >= v37 >> 1)
          {
            sub_1001C9354(v37 > 1, v38 + 1, 1);
            unint64_t v33 = (void *)v64;
          }
          ++v32;
          void v33[2] = v38 + 1;
          *((unsigned char *)v33 + v38 + 32) = v36;
        }
        while (v31 != v32);
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v31) {
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v33 = _swiftEmptyArrayStorage;
LABEL_55:
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v33[2]);
  uint64_t v47 = v33[2];
  if (v47)
  {
    uint64_t v48 = (Swift::UInt8 *)(v33 + 4);
    do
    {
      Swift::UInt8 v49 = *v48++;
      Hasher._combine(_:)(v49);
      --v47;
    }
    while (v47);
  }
  swift_bridgeObjectRelease();
  if (v61)
  {
    swift_bridgeObjectRetain_n();
    Swift::Int result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v50 = result;
    if (!result)
    {
LABEL_77:
      swift_bridgeObjectRelease_n();
      goto LABEL_78;
    }
  }
  else
  {
    uint64_t v50 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    Swift::Int result = swift_bridgeObjectRetain_n();
    if (!v50) {
      goto LABEL_77;
    }
  }
  if (v50 >= 1)
  {
    for (uint64_t i = 0; i != v50; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v53 = *(id *)(v13 + 8 * i + 32);
      }
      id v54 = v53;
      id v55 = [v53 template:v61];
      id v52 = [v55 canonicalUnit];

      if (v52)
      {
        id v56 = [v54 progress];
        if (v56)
        {
          uint64_t v57 = v56;
          [v56 doubleValueForUnit:v52];
          Swift::UInt64 v59 = v58;

          Hasher._combine(_:)(1u);
          if ((v59 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
            Swift::UInt64 v60 = v59;
          }
          else {
            Swift::UInt64 v60 = 0;
          }
          Hasher._combine(_:)(v60);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
      }
      else
      {
        id v52 = v54;
      }
    }
    goto LABEL_77;
  }
LABEL_81:
  __break(1u);
  return result;
}

void destroy for ActivityRingsCardFactory(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

double sub_100096374@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100960058, &qword_100960060).n128_u64[0];
  return result;
}

uint64_t sub_1000963D0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  v19[1] = a5;
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10095F6F8);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v15 = static Alignment.topLeading.getter();
  v15[1] = v16;
  uint64_t v17 = sub_1000AFA94(&qword_100967768);
  sub_100096590(a1, a2, a3, a4, (uint64_t)v15 + *(int *)(v17 + 44));
  static AccessibilityChildBehavior.combine.getter();
  sub_1000A132C(&qword_10095F700, &qword_10095F6F8);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_10008DB18((uint64_t)v15, &qword_10095F6F8);
}

uint64_t sub_100096590@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v208 = a4;
  uint64_t v219 = a3;
  uint64_t v213 = a5;
  uint64_t v207 = type metadata accessor for AccessibilityTraits();
  uint64_t v206 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v205 = (char *)&v175 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for AccessibilityActionKind();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v201 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for ColorScheme();
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v196 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for Material();
  uint64_t v188 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  long long v187 = (char *)&v175 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v11 - 8);
  long long v184 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for DynamicTypeSize();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  char v175 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_1000AFA94(&qword_100967770);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  double v180 = (char *)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1000AFA94(&qword_100967778);
  __chkstk_darwin(v177);
  long long v183 = (char *)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1000AFA94(&qword_100967780);
  __chkstk_darwin(v179);
  long long v185 = (char *)&v175 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_1000AFA94(&qword_100967788);
  __chkstk_darwin(v191);
  long long v186 = (char *)&v175 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_1000AFA94(&qword_100967790);
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v192 = (char *)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_1000AFA94(&qword_100967798);
  uint64_t v212 = *(void *)(v221 - 8);
  uint64_t v19 = __chkstk_darwin(v221);
  uint64_t v190 = (char *)&v175 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v193 = (char *)&v175 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v199 = (char *)&v175 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v202 = (char *)&v175 - v26;
  __chkstk_darwin(v25);
  uint64_t v200 = (char *)&v175 - v27;
  uint64_t v28 = sub_1000AFA94(&qword_1009677A0);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v211 = (char *)&v175 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v210 = (uint64_t)&v175 - v31;
  uint64_t v32 = type metadata accessor for RoundedRectangle();
  uint64_t v33 = v32 - 8;
  __chkstk_darwin(v32);
  id v35 = (_OWORD *)((char *)&v175 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = type metadata accessor for DashboardCardView();
  unint64_t v37 = (int *)(v36 - 8);
  __chkstk_darwin(v36);
  Swift::UInt8 v39 = (uint64_t *)((char *)&v175 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_1000AFA94(&qword_1009677A8);
  uint64_t v41 = v40 - 8;
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v175 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_1000AFA94(&qword_10095FDB0);
  __chkstk_darwin(v214);
  Swift::UInt64 v45 = (char *)&v175 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000AFA94(&qword_10095FDB8);
  __chkstk_darwin(v46 - 8);
  uint64_t v217 = (uint64_t)&v175 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_1000AFA94(&qword_10095FDA0);
  __chkstk_darwin(v215);
  uint64_t v218 = (uint64_t)&v175 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_10095FDA8);
  uint64_t v50 = __chkstk_darwin(v49 - 8);
  uint64_t v209 = (char *)&v175 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v216 = (uint64_t)&v175 - v53;
  __chkstk_darwin(v52);
  uint64_t v220 = (uint64_t)&v175 - v54;
  sub_10008E75C((uint64_t)a1, (uint64_t)&v228);
  uint64_t v226 = type metadata accessor for ActivityDashboardCardCell();
  int v227 = &off_1008D4CD0;
  uint64_t v224 = (uint64_t)a2;
  *Swift::UInt8 v39 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  sub_100093E60(&v228, (uint64_t)v39 + v37[7]);
  sub_1000AEEC8((uint64_t)&v224, (uint64_t)v39 + v37[8], &qword_10094C750);
  *(uint64_t *)((char *)v39 + v37[9]) = v219;
  *((unsigned char *)v39 + v37[10]) = 0;
  *((unsigned char *)v39 + v37[11]) = 0;
  id v55 = (char *)v35 + *(int *)(v33 + 28);
  uint64_t v56 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v57 = type metadata accessor for RoundedCornerStyle();
  Swift::UInt64 v58 = v55;
  Swift::UInt64 v59 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 104))(v58, v56, v57);
  __asm { FMOV            V0.2D, #20.0 }
  *id v35 = _Q0;
  uint64_t v65 = (uint64_t)&v43[*(int *)(v41 + 44)];
  sub_1000982F0((uint64_t)v35, v65, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v65 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000982F0((uint64_t)v39, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  id v66 = a2;
  swift_retain();
  sub_100097EF0((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100097EF0((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  uint64_t v67 = a1[3];
  uint64_t v68 = a1[4];
  sub_10007E4EC(a1, v67);
  uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
  switch(v71)
  {
    case 1:
      sub_1000917F8(v69, v70, 1);
      goto LABEL_3;
    case 3:
      if (v69 | v70) {
        goto LABEL_3;
      }
      double v72 = 0.5;
      if ((v208 & 1) == 0) {
        goto LABEL_3;
      }
      goto LABEL_4;
    default:
LABEL_3:
      double v72 = 1.0;
LABEL_4:
      sub_1000AEF2C((uint64_t)v43, (uint64_t)v45, &qword_1009677A8);
      *(double *)&v45[*(int *)(v214 + 36)] = v72;
      sub_10008DB18((uint64_t)v43, &qword_1009677A8);
      uint64_t v73 = static Alignment.center.getter();
      uint64_t v74 = v217;
      sub_10009841C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v217, 0.0, 1, 0.0, 1, v73, v75);
      sub_10008DB18((uint64_t)v45, &qword_10095FDB0);
      uint64_t v76 = a1[3];
      uint64_t v77 = a1[4];
      sub_10007E4EC(a1, v76);
      uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77);
      char v80 = 0;
      uint64_t v81 = v221;
      switch(v82)
      {
        case 1:
          sub_1000917F8(v78, v79, 1);
          char v80 = 0;
          break;
        case 3:
          char v80 = ((v78 | v79) == 0) & v208;
          break;
        default:
          break;
      }
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v84 = swift_allocObject();
      *(unsigned char *)(v84 + 16) = v80;
      uint64_t v85 = v218;
      sub_1000AEF2C(v74, v218, &qword_10095FDB8);
      uint64_t v86 = (uint64_t *)(v85 + *(int *)(v215 + 36));
      *uint64_t v86 = KeyPath;
      v86[1] = (uint64_t)sub_1000DBE20;
      v86[2] = v84;
      sub_10008DB18(v74, &qword_10095FDB8);
      uint64_t v87 = sub_100098648(a1);
      LOBYTE(v84) = v88 & 1;
      uint64_t v89 = static Alignment.center.getter();
      uint64_t v90 = v216;
      sub_1000983C0(0.0, 1, 0.0, 1, 0.0, 1, *(double *)&v87, v84, v216, 0.0, 1, 0.0, 1, v89, v91);
      sub_10008DB18(v85, &qword_10095FDA0);
      uint64_t v92 = v220;
      sub_1000AEEC8(v90, v220, &qword_10095FDA8);
      uint64_t v93 = v59[3];
      uint64_t v94 = v59[4];
      sub_10007E4EC(v59, v93);
      LOBYTE(v93) = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 32))(v93, v94);
      sub_10008E75C((uint64_t)v59, (uint64_t)&v228);
      if (v93)
      {
        uint64_t v95 = v229;
        uint64_t v96 = v230;
        sub_10007E4EC(&v228, v229);
        uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 16))(v95, v96);
        uint64_t v99 = v98;
        LODWORD(v96) = v100;
        sub_1000917F8(v97, v98, v100);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v228);
        if (v96 != 3 || v97 | v99)
        {
          uint64_t v101 = Image.init(systemName:)();
          static Font.title3.getter();
          static Font.Weight.bold.getter();
          uint64_t v102 = Font.weight(_:)();
          swift_release();
          uint64_t v103 = swift_getKeyPath();
          uint64_t v224 = v101;
          __asm { FMOV            V0.2D, #-6.0 }
          long long v225 = _Q0;
          uint64_t v226 = v103;
          int v227 = (_UNKNOWN **)v102;
          uint64_t v105 = v176;
          unint64_t v106 = v175;
          uint64_t v107 = v178;
          (*(void (**)(char *, void, uint64_t))(v176 + 104))(v175, enum case for DynamicTypeSize.medium(_:), v178);
          sub_1000AFA94(&qword_1009677B8);
          sub_1006786E4();
          double v108 = v180;
          View.dynamicTypeSize(_:)();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v109 = (uint64_t)v184;
          static SymbolRenderingMode.palette.getter();
          uint64_t v110 = type metadata accessor for SymbolRenderingMode();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v109, 0, 1, v110);
          uint64_t v111 = swift_getKeyPath();
          uint64_t v112 = (uint64_t)v183;
          double v113 = (uint64_t *)&v183[*(int *)(v177 + 36)];
          uint64_t v114 = sub_1000AFA94(&qword_10094E2F8);
          sub_1000AEF2C(v109, (uint64_t)v113 + *(int *)(v114 + 28), &qword_10094E320);
          *double v113 = v111;
          uint64_t v115 = v181;
          uint64_t v116 = v182;
          (*(void (**)(uint64_t, char *, uint64_t))(v181 + 16))(v112, v108, v182);
          sub_10008DB18(v109, &qword_10094E320);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v108, v116);
          uint64_t v117 = static Color.black.getter();
          double v118 = v187;
          static Material.ultraThin.getter();
          uint64_t v119 = (uint64_t)v185;
          double v120 = (uint64_t *)&v185[*(int *)(v179 + 36)];
          uint64_t v121 = sub_1000AFA94(&qword_1009677D8);
          uint64_t v122 = v188;
          uint64_t v123 = v189;
          (*(void (**)(char *, char *, uint64_t))(v188 + 16))((char *)v120 + *(int *)(v121 + 52), v118, v189);
          uint64_t *v120 = v117;
          sub_1000AEF2C(v112, v119, &qword_100967778);
          (*(void (**)(char *, uint64_t))(v122 + 8))(v118, v123);
          sub_10008DB18(v112, &qword_100967778);
          uint64_t v124 = swift_getKeyPath();
          uint64_t v125 = v197;
          double v126 = v196;
          uint64_t v127 = v198;
          (*(void (**)(char *, void, uint64_t))(v197 + 104))(v196, enum case for ColorScheme.light(_:), v198);
          uint64_t v128 = v191;
          double v129 = v66;
          uint64_t v130 = (uint64_t)v186;
          double v131 = (uint64_t *)&v186[*(int *)(v191 + 36)];
          uint64_t v132 = sub_1000AFA94(&qword_10095D4A8);
          (*(void (**)(char *, char *, uint64_t))(v125 + 16))((char *)v131 + *(int *)(v132 + 28), v126, v127);
          uint64_t *v131 = v124;
          sub_1000AEF2C(v119, v130, &qword_100967780);
          (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v127);
          uint64_t v133 = v119;
          uint64_t v81 = v221;
          sub_10008DB18(v133, &qword_100967780);
          sub_10008E75C((uint64_t)v59, (uint64_t)&v224);
          uint64_t v134 = swift_allocObject();
          *(void *)(v134 + 16) = v129;
          sub_100093E60((long long *)&v224, v134 + 24);
          unint64_t v135 = sub_10067882C();
          id v136 = v129;
          double v137 = v192;
          View.onTapGesture(count:perform:)();
          swift_release();
          sub_10008DB18(v130, &qword_100967788);
          sub_10008E75C((uint64_t)v59, (uint64_t)&v224);
          uint64_t v138 = swift_allocObject();
          *(void *)(v138 + 16) = v136;
          sub_100093E60((long long *)&v224, v138 + 24);
          id v139 = v136;
          unint64_t v140 = v201;
          static AccessibilityActionKind.default.getter();
          uint64_t v222 = v128;
          unint64_t v223 = v135;
          swift_getOpaqueTypeConformance2();
          uint64_t v141 = (uint64_t)v190;
          uint64_t v142 = v195;
          View.accessibilityAction(_:_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v203 + 8))(v140, v204);
          (*(void (**)(char *, uint64_t))(v194 + 8))(v137, v142);
          double v143 = v205;
          static AccessibilityTraits.isImage.getter();
          uint64_t v144 = (uint64_t)v193;
          ModifiedContent<>.accessibilityRemoveTraits(_:)();
          double v145 = *(void (**)(char *, uint64_t))(v206 + 8);
          uint64_t v146 = v207;
          v145(v143, v207);
          sub_10008DB18(v141, &qword_100967798);
          static AccessibilityTraits.isButton.getter();
          uint64_t v147 = (uint64_t)v199;
          ModifiedContent<>.accessibilityAddTraits(_:)();
          v145(v143, v146);
          sub_10008DB18(v144, &qword_100967798);
          id v148 = [self mainBundle];
          NSString v149 = String._bridgeToObjectiveC()();
          id v150 = [v148 localizedStringForKey:v149 value:0 table:0];

          uint64_t v151 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v153 = v152;

          uint64_t v224 = v151;
          *(void *)&long long v225 = v153;
          sub_1000A06D0();
          unsigned int v154 = v202;
          ModifiedContent<>.accessibilityLabel<A>(_:)();
          swift_bridgeObjectRelease();
          sub_10008DB18(v147, &qword_100967798);
          sub_1000AFA94(&qword_10094D178);
          uint64_t v155 = swift_allocObject();
          *(_OWORD *)(v155 + 16) = xmmword_100752410;
          *(void *)(v155 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
          *(void *)(v155 + 40) = v156;
          uint64_t v224 = 0;
          *(void *)&long long v225 = 0xE000000000000000;
          uint64_t v157 = v59[3];
          uint64_t v158 = v59[4];
          sub_10007E4EC(v59, v157);
          uint64_t v159 = (*(uint64_t (**)(uint64_t, uint64_t))(v158 + 16))(v157, v158);
          uint64_t v161 = v160;
          LOBYTE(v158) = v162;
          LOBYTE(v126) = sub_10007CCD8(v159, v160, v162);
          sub_1000917F8(v159, v161, v158);
          LOBYTE(v222) = (_BYTE)v126;
          _print_unlocked<A, B>(_:_:)();
          uint64_t v163 = v225;
          *(void *)(v155 + 48) = v224;
          *(void *)(v155 + 56) = v163;
          *(void *)(v155 + 64) = static FitnessAccessibilityIdentifier.SummaryView.deleteButton.getter();
          *(void *)(v155 + 72) = v164;
          static FitnessAccessibilityIdentifier.build(_:)();
          swift_bridgeObjectRelease();
          uint64_t v165 = (uint64_t)v200;
          ModifiedContent<>.accessibilityIdentifier(_:)();
          swift_bridgeObjectRelease();
          uint64_t v166 = (uint64_t)v154;
          uint64_t v92 = v220;
          sub_10008DB18(v166, &qword_100967798);
          uint64_t v167 = v210;
          sub_1000AEEC8(v165, v210, &qword_100967798);
          uint64_t v168 = 0;
          uint64_t v169 = v213;
          uint64_t v170 = v212;
          uint64_t v171 = (uint64_t)v211;
          goto LABEL_16;
        }
      }
      else
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v228);
      }
      uint64_t v168 = 1;
      uint64_t v169 = v213;
      uint64_t v170 = v212;
      uint64_t v171 = (uint64_t)v211;
      uint64_t v167 = v210;
LABEL_16:
      uint64_t v172 = (uint64_t)v209;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56))(v167, v168, 1, v81);
      sub_1000AEF2C(v92, v172, &qword_10095FDA8);
      sub_1000AEF2C(v167, v171, &qword_1009677A0);
      sub_1000AEF2C(v172, v169, &qword_10095FDA8);
      uint64_t v173 = sub_1000AFA94(&qword_1009677B0);
      sub_1000AEF2C(v171, v169 + *(int *)(v173 + 48), &qword_1009677A0);
      sub_10008DB18(v167, &qword_1009677A0);
      sub_10008DB18(v92, &qword_10095FDA8);
      sub_10008DB18(v171, &qword_1009677A0);
      return sub_10008DB18(v172, &qword_10095FDA8);
  }
}

uint64_t sub_100097CB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097D10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097D70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097DD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097E30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097E90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097EF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097F50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100097FB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098018(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098080(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000980E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000981B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098220(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000982F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100098358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_1000983C0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FDA0, &qword_10095FDA8).n128_u64[0];
  return result;
}

double sub_10009841C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100098478(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10095FDB0, &qword_10095FDB8).n128_u64[0];
  return result;
}

__n128 sub_100098478@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000AEF2C(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_1000AFA94(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_100098648(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10007E4EC(a1, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider);
    if (v5)
    {
      uint64_t v6 = a1[3];
      uint64_t v7 = a1[4];
      sub_10007E4EC(a1, v6);
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
      swift_retain();
      uint64_t v9 = v8(v6, v7);
      uint64_t v11 = v10;
      char v13 = v12;
      uint64_t v14 = a1[3];
      uint64_t v15 = a1[4];
      sub_10007E4EC(a1, v14);
      char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
      id v17 = [self sharedApplication];
      id v18 = [v17 preferredContentSizeCategory];

      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_beginAccess();
      uint64_t v22 = *(void *)(v5 + 16);
      if (*(void *)(v22 + 16))
      {
        v28[0] = v9;
        v28[1] = v11;
        char v29 = v13;
        char v30 = v16 & 1;
        uint64_t v31 = v19;
        uint64_t v32 = v21;
        sub_100091494(v9, v11, v13);
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_10009315C(v28);
        if (v24)
        {
          uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
          swift_bridgeObjectRelease();
          sub_1000917F8(v9, v11, v13);
          swift_bridgeObjectRelease();
          sub_1000917F8(v9, v11, v13);
          swift_release();
          sub_10008E75C((uint64_t)a1, (uint64_t)v27);
LABEL_10:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
          return v25;
        }
        swift_bridgeObjectRelease();
        sub_1000917F8(v9, v11, v13);
      }
      swift_bridgeObjectRelease();
      sub_1000917F8(v9, v11, v13);
      swift_release();
    }
    sub_10008E75C((uint64_t)a1, (uint64_t)v27);
    uint64_t v25 = sub_100629368(v27);
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1000988C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityActionKind();
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v89 = v3;
  __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094CF00);
  __chkstk_darwin(v5 - 8);
  uint64_t v80 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_10094D130) - 8;
  __chkstk_darwin(v81);
  uint64_t v79 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_10094D228);
  __chkstk_darwin(v82);
  uint64_t v96 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000AFA94(&qword_10094D230);
  __chkstk_darwin(v87);
  uint64_t v83 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000AFA94(&qword_10094D238);
  uint64_t v98 = *(void *)(v86 - 8);
  uint64_t v10 = __chkstk_darwin(v86);
  uint64_t v84 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v72 - v12;
  uint64_t v13 = type metadata accessor for Divider();
  uint64_t v77 = *(void *)(v13 - 8);
  uint64_t v78 = v13;
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10094C768);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v91 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v100 = (uint64_t)&v72 - v19;
  uint64_t v20 = type metadata accessor for DashboardCardView();
  uint64_t v21 = (int *)(v20 - 8);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v20);
  char v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_10094C770);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v101 = v25;
  uint64_t v102 = v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v99 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  char v30 = (char *)&v72 - v29;
  uint64_t v95 = (char *)&v72 - v29;
  sub_10008E75C(a1 + v21[7], (uint64_t)v107);
  sub_1000AEF2C(a1 + v21[8], (uint64_t)v108, &qword_10094C750);
  v108[40] = *(unsigned char *)(a1 + v21[10]);
  LOBYTE(v21) = static Edge.Set.all.getter();
  sub_100099374((uint64_t)v107, (uint64_t)v103);
  v103[88] = (_BYTE)v21;
  long long v104 = xmmword_100751050;
  long long v105 = xmmword_100751050;
  char v106 = 0;
  sub_1000901D4((uint64_t)v107);
  sub_1000AEF2C((uint64_t)v103, (uint64_t)v107, &qword_10094C778);
  v108[89] = 0;
  sub_10008DB18((uint64_t)v103, &qword_10094C778);
  uint64_t v75 = type metadata accessor for DashboardCardView;
  sub_10009930C(a1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  uint64_t v31 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v32 = ((v31 + 16) & ~v31) + v23;
  uint64_t v33 = (v31 + 16) & ~v31;
  uint64_t v74 = v33;
  uint64_t v93 = v31 | 7;
  uint64_t v94 = v32;
  uint64_t v34 = swift_allocObject();
  uint64_t v92 = type metadata accessor for DashboardCardView;
  sub_10009CE98((uint64_t)v24, v34 + v33, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  sub_1000AFA94(&qword_10094C780);
  sub_10009DBF8();
  long long v35 = v99;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v107, &qword_10094C780);
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v30, v35, v101);
  long long v36 = v76;
  Divider.init()();
  id v37 = [self quaternarySystemFillColor];
  uint64_t v38 = Color.init(_:)();
  LOBYTE(v21) = static Edge.Set.all.getter();
  uint64_t v40 = v77;
  uint64_t v39 = v78;
  uint64_t v41 = v91;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v91, v36, v78);
  uint64_t v42 = v41 + *(int *)(v16 + 44);
  *(void *)uint64_t v42 = v38;
  *(unsigned char *)(v42 + 8) = (_BYTE)v21;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v39);
  sub_1000AEEC8(v41, v100, &qword_10094C768);
  uint64_t v43 = v80;
  uint64_t v73 = a1;
  sub_100099488(0, v80);
  uint64_t v44 = v79;
  sub_1000AEF2C(v43, v79, &qword_10094CF00);
  *(unsigned char *)(v44 + *(int *)(v81 + 44)) = 0;
  sub_10008DB18(v43, &qword_10094CF00);
  LOBYTE(v38) = static Edge.Set.all.getter();
  Swift::UInt64 v45 = v96;
  sub_1000AEF2C(v44, (uint64_t)v96, &qword_10094D130);
  uint64_t v46 = &v45[*(int *)(v82 + 36)];
  *uint64_t v46 = v38;
  *(_OWORD *)(v46 + 8) = xmmword_100751820;
  *(_OWORD *)(v46 + 24) = xmmword_100751830;
  v46[40] = 0;
  sub_10008DB18(v44, &qword_10094D130);
  uint64_t v47 = a1;
  uint64_t v48 = v75;
  sub_10009930C(v47, (uint64_t)v24, (uint64_t (*)(void))v75);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v74;
  sub_10009CE98((uint64_t)v24, v49 + v74, (uint64_t (*)(void))v92);
  uint64_t v51 = v85;
  static AccessibilityActionKind.default.getter();
  sub_10009DE0C(&qword_10094D240, &qword_10094D228, (void (*)(void))sub_1000B23D8);
  uint64_t v52 = (uint64_t)v83;
  uint64_t v53 = v96;
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v51, v89);
  sub_10008DB18((uint64_t)v53, &qword_10094D228);
  sub_10009930C(v73, (uint64_t)v24, (uint64_t (*)(void))v48);
  uint64_t v54 = swift_allocObject();
  sub_10009CE98((uint64_t)v24, v54 + v50, (uint64_t (*)(void))v92);
  sub_10009DCBC();
  id v55 = v84;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v52, &qword_10094D230);
  uint64_t v57 = v97;
  uint64_t v56 = v98;
  uint64_t v58 = v86;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v55, v86);
  uint64_t v59 = v101;
  uint64_t v96 = *(char **)(v102 + 16);
  Swift::UInt64 v60 = v99;
  ((void (*)(char *, char *, uint64_t))v96)(v99, v95, v101);
  uint64_t v61 = v91;
  sub_1000AEF2C(v100, v91, &qword_10094C768);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v63 = v57;
  uint64_t v64 = v58;
  v62(v55, v63, v58);
  uint64_t v65 = v90;
  ((void (*)(uint64_t, char *, uint64_t))v96)(v90, v60, v59);
  uint64_t v66 = sub_1000AFA94(&qword_10094D250);
  sub_1000AEF2C(v61, v65 + *(int *)(v66 + 48), &qword_10094C768);
  uint64_t v67 = v55;
  v62((char *)(v65 + *(int *)(v66 + 64)), v55, v64);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v98 + 8);
  v68(v97, v64);
  sub_10008DB18(v100, &qword_10094C768);
  uint64_t v69 = v101;
  uint64_t v70 = *(void (**)(char *, uint64_t))(v102 + 8);
  v70(v95, v101);
  v68(v67, v64);
  sub_10008DB18(v61, &qword_10094C768);
  return ((uint64_t (*)(char *, uint64_t))v70)(v99, v69);
}

uint64_t sub_10009930C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100099374(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for CardHeaderView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 56);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t sub_100099488@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v20 = a1;
  uint64_t v21 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094CF88);
  __chkstk_darwin(v3);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000AFA94(&qword_10094D150);
  __chkstk_darwin(v6);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_10094CF78);
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (void *)(v2 + *(int *)(type metadata accessor for DashboardCardView() + 20));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  sub_10007E4EC(v12, v13);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14))
  {
    sub_10009D9B0();
    uint64_t v16 = &qword_10094CF88;
    sub_1000AEF2C((uint64_t)v5, (uint64_t)v8, &qword_10094CF88);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_10094CF70, &qword_10094CF78);
    sub_10009973C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = (uint64_t)v5;
  }
  else
  {
    *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v15 = sub_1000AFA94(&qword_10094D158);
    sub_1000C9950(v20 & 1, v2, (uint64_t)&v11[*(int *)(v15 + 44)]);
    uint64_t v16 = &qword_10094CF78;
    sub_1000AEF2C((uint64_t)v11, (uint64_t)v8, &qword_10094CF78);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_10094CF70, &qword_10094CF78);
    sub_10009973C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = (uint64_t)v11;
  }
  return sub_10008DB18(v17, v16);
}

unint64_t sub_10009973C()
{
  unint64_t result = qword_10094CF80;
  if (!qword_10094CF80)
  {
    sub_1000A1370(&qword_10094CF88);
    sub_10009DB80(&qword_10094CF90, &qword_10094CF98, (void (*)(void))sub_1000E1030);
    sub_1000D050C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CF80);
  }
  return result;
}

uint64_t sub_10009980C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v368 = a2;
  uint64_t v335 = type metadata accessor for MetricCardView();
  uint64_t v334 = *(void *)(v335 - 8);
  __chkstk_darwin(v335);
  v318 = (uint64_t *)((char *)&v237 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1000AFA94(&qword_10094D180);
  __chkstk_darwin(v4 - 8);
  v332 = (char *)&v237 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = type metadata accessor for MetricCard();
  uint64_t v330 = *(void *)(v331 - 8);
  uint64_t v6 = __chkstk_darwin(v331);
  uint64_t v317 = (uint64_t)&v237 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v316 = (uint64_t)&v237 - v8;
  uint64_t v362 = sub_1000AFA94(&qword_10094D118);
  __chkstk_darwin(v362);
  uint64_t v333 = (uint64_t)&v237 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_1000AFA94(&qword_10094D188);
  __chkstk_darwin(v360);
  uint64_t v361 = (uint64_t)&v237 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v367 = sub_1000AFA94(&qword_10094D0F0);
  __chkstk_darwin(v367);
  v363 = (char *)&v237 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = type metadata accessor for TrendsCardView(0);
  uint64_t v345 = *(void *)(v346 - 8);
  __chkstk_darwin(v346);
  v322 = (uint64_t *)((char *)&v237 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000AFA94(&qword_10094D190);
  __chkstk_darwin(v13 - 8);
  v343 = (char *)&v237 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v342 = type metadata accessor for TrendsCard();
  uint64_t v341 = *(void *)(v342 - 8);
  uint64_t v15 = __chkstk_darwin(v342);
  uint64_t v321 = (uint64_t)&v237 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v320 = (uint64_t)&v237 - v17;
  uint64_t v359 = sub_1000AFA94(&qword_10094D100);
  __chkstk_darwin(v359);
  uint64_t v344 = (uint64_t)&v237 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = type metadata accessor for CatalogTipCardView();
  uint64_t v293 = *(void *)(v294 - 8);
  __chkstk_darwin(v294);
  v259 = (uint64_t *)((char *)&v237 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v20 - 8);
  v289 = (char *)&v237 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = type metadata accessor for CatalogTipCard();
  uint64_t v287 = *(void *)(v288 - 8);
  uint64_t v22 = __chkstk_darwin(v288);
  uint64_t v258 = (uint64_t)&v237 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v257 = (uint64_t)&v237 - v24;
  uint64_t v309 = sub_1000AFA94(&qword_10094D0D8);
  __chkstk_darwin(v309);
  uint64_t v295 = (uint64_t)&v237 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = sub_1000AFA94(&qword_10094D1A0);
  __chkstk_darwin(v307);
  uint64_t v308 = (uint64_t)&v237 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = sub_1000AFA94(&qword_10094D0B0);
  __chkstk_darwin(v351);
  v310 = (char *)&v237 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for FitnessPlusUpNextView();
  uint64_t v290 = *(void *)(View - 8);
  __chkstk_darwin(View);
  v256 = (uint64_t *)((char *)&v237 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_1000AFA94(&qword_10094D1A8);
  __chkstk_darwin(v29 - 8);
  v283 = (char *)&v237 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Card = type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v281 = *(void *)(Card - 8);
  uint64_t v31 = __chkstk_darwin(Card);
  uint64_t v254 = (uint64_t)&v237 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v255 = (uint64_t)&v237 - v33;
  uint64_t v306 = sub_1000AFA94(&qword_10094D0C0);
  __chkstk_darwin(v306);
  uint64_t v292 = (uint64_t)&v237 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for FriendsHighlightCardView();
  uint64_t v284 = *(void *)(v285 - 8);
  __chkstk_darwin(v285);
  v253 = (uint64_t *)((char *)&v237 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = sub_1000AFA94(&qword_10094D1B0);
  __chkstk_darwin(v36 - 8);
  v279 = (char *)&v237 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = type metadata accessor for FriendsHighlightCard();
  uint64_t v277 = *(void *)(v278 - 8);
  uint64_t v38 = __chkstk_darwin(v278);
  uint64_t v251 = (uint64_t)&v237 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v252 = (uint64_t)&v237 - v40;
  uint64_t v340 = sub_1000AFA94(&qword_10094D098);
  __chkstk_darwin(v340);
  uint64_t v286 = (uint64_t)&v237 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = sub_1000AFA94(&qword_10094D1B8);
  __chkstk_darwin(v347);
  uint64_t v349 = (uint64_t)&v237 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = sub_1000AFA94(&qword_10094D1C0);
  __chkstk_darwin(v337);
  uint64_t v338 = (uint64_t)&v237 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v348 = sub_1000AFA94(&qword_10094D070);
  __chkstk_darwin(v348);
  v339 = (char *)&v237 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_1000AFA94(&qword_10094D060);
  __chkstk_darwin(v356);
  v350 = (char *)&v237 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000AFA94(&qword_10094D1C8);
  __chkstk_darwin(v46 - 8);
  v328 = (char *)&v237 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = type metadata accessor for FriendCard();
  uint64_t v326 = *(void *)(v327 - 8);
  __chkstk_darwin(v327);
  uint64_t v311 = (uint64_t)&v237 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v336 = sub_1000AFA94(&qword_10094D080);
  __chkstk_darwin(v336);
  uint64_t v329 = (uint64_t)&v237 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = sub_1000AFA94(&qword_10094C580);
  uint64_t v50 = __chkstk_darwin(v250);
  uint64_t v249 = (uint64_t)&v237 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  char v248 = (char *)&v237 - v52;
  uint64_t v276 = type metadata accessor for AwardsCardView();
  uint64_t v275 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  char v247 = (uint64_t *)((char *)&v237 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_1000AFA94(&qword_10094D1D0);
  __chkstk_darwin(v54 - 8);
  v272 = (char *)&v237 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = type metadata accessor for AwardsCard();
  uint64_t v268 = *(void *)(v269 - 8);
  uint64_t v56 = __chkstk_darwin(v269);
  uint64_t v245 = (uint64_t)&v237 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v246 = (uint64_t)&v237 - v58;
  uint64_t v304 = sub_1000AFA94(&qword_10094D048);
  __chkstk_darwin(v304);
  v280 = (char *)&v237 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = sub_1000AFA94(&qword_10094D1D8);
  __chkstk_darwin(v302);
  uint64_t v303 = (uint64_t)&v237 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = sub_1000AFA94(&qword_10094D020);
  __chkstk_darwin(v319);
  v305 = (char *)&v237 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = type metadata accessor for HistoryItemsCardView();
  uint64_t v266 = *(void *)(v267 - 8);
  __chkstk_darwin(v267);
  char v241 = (uint64_t *)((char *)&v237 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v301 = sub_1000AFA94(&qword_10094D030);
  __chkstk_darwin(v301);
  uint64_t v274 = (uint64_t)&v237 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  Carduint64_t View = type metadata accessor for LoadCardView();
  __chkstk_darwin(CardView);
  char v244 = (uint64_t *)((char *)&v237 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v271 = sub_1000AFA94(&qword_10094D1E0);
  uint64_t v270 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  char v242 = (char *)&v237 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_10094D1E8);
  __chkstk_darwin(v66 - 8);
  v264 = (char *)&v237 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = type metadata accessor for LoadCard();
  uint64_t v263 = *(void *)(v265 - 8);
  uint64_t v68 = __chkstk_darwin(v265);
  uint64_t v239 = (uint64_t)&v237 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v68);
  uint64_t v240 = (uint64_t)&v237 - v70;
  uint64_t v300 = sub_1000AFA94(&qword_10094D000);
  __chkstk_darwin(v300);
  v273 = (char *)&v237 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v364 = sub_1000AFA94(&qword_10094D1F0);
  __chkstk_darwin(v364);
  uint64_t v366 = (uint64_t)&v237 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v352 = sub_1000AFA94(&qword_10094D1F8);
  __chkstk_darwin(v352);
  uint64_t v354 = (uint64_t)&v237 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = sub_1000AFA94(&qword_10094D200);
  __chkstk_darwin(v312);
  uint64_t v314 = (uint64_t)&v237 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = sub_1000AFA94(&qword_10094D208);
  __chkstk_darwin(v297);
  uint64_t v298 = (uint64_t)&v237 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v313 = sub_1000AFA94(&qword_10094CFD8);
  __chkstk_darwin(v313);
  v299 = (char *)&v237 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = sub_1000AFA94(&qword_10094CFC8);
  __chkstk_darwin(v353);
  v315 = (char *)&v237 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v365 = sub_1000AFA94(&qword_10094CFB8);
  __chkstk_darwin(v365);
  v355 = (char *)&v237 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_10094CED0);
  __chkstk_darwin(v79 - 8);
  uint64_t v325 = (uint64_t)&v237 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = type metadata accessor for DynamicTypeSize();
  uint64_t v323 = *(void *)(v324 - 8);
  __chkstk_darwin(v324);
  uint64_t v238 = (uint64_t)&v237 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = type metadata accessor for ActivityRingsCardView();
  uint64_t v260 = *(void *)(v261 - 8);
  __chkstk_darwin(v261);
  uint64_t v83 = (uint64_t *)((char *)&v237 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_1000AFA94(&qword_10094D210);
  __chkstk_darwin(v84 - 8);
  uint64_t v86 = (char *)&v237 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for ActivityRingsCard();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v91 = (char *)&v237 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v89);
  uint64_t v93 = (char *)&v237 - v92;
  uint64_t v296 = sub_1000AFA94(&qword_10094CFE8);
  __chkstk_darwin(v296);
  uint64_t v262 = (uint64_t)&v237 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v357 = type metadata accessor for DashboardCardView();
  uint64_t v95 = *(int *)(v357 + 20);
  uint64_t v358 = a1;
  uint64_t v96 = (void *)(a1 + v95);
  uint64_t v97 = *(void *)(a1 + v95 + 24);
  uint64_t v98 = *(void *)(a1 + v95 + 32);
  sub_10007E4EC((void *)(a1 + v95), v97);
  uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 16))(v97, v98);
  switch(v101)
  {
    case 1:
      sub_1000917F8(v99, v100, 1);
      sub_10008E75C((uint64_t)v96, (uint64_t)v372);
      sub_1000AFA94(&qword_10094D218);
      uint64_t v112 = (uint64_t)v328;
      uint64_t v113 = v327;
      char v114 = swift_dynamicCast();
      uint64_t v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v326 + 56);
      if (v114)
      {
        v115(v112, 0, 1, v113);
        uint64_t v116 = v112;
        uint64_t v117 = v311;
        sub_10009CE98(v116, v311, (uint64_t (*)(void))type metadata accessor for FriendCard);
        uint64_t v118 = v329;
        sub_10009CE98(v117, v329, (uint64_t (*)(void))type metadata accessor for FriendCard);
        uint64_t v119 = v358 + *(int *)(v357 + 24);
        uint64_t v120 = type metadata accessor for FriendCardView();
        sub_1000AEF2C(v119, v118 + *(int *)(v120 + 20), &qword_10094C750);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v118, 0, 1, v120);
      }
      else
      {
        v115(v112, 1, 1, v113);
        sub_10008DB18(v112, &qword_10094D1C8);
        uint64_t v151 = type metadata accessor for FriendCardView();
        uint64_t v118 = v329;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v329, 1, 1, v151);
      }
      id v148 = &qword_10094D080;
      sub_1000AEF2C(v118, v338, &qword_10094D080);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      sub_1000E9AB4();
      sub_1000E6C08();
      uint64_t v152 = (uint64_t)v339;
      _ConditionalContent<>.init(storage:)();
      uint64_t v153 = &qword_10094D070;
      sub_1000AEF2C(v152, v349, &qword_10094D070);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      sub_1000AC440();
      sub_1000AC4BC();
      uint64_t v154 = (uint64_t)v350;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v152, v153);
      uint64_t v155 = &qword_10094D060;
      sub_1000AEF2C(v154, v354, &qword_10094D060);
LABEL_49:
      swift_storeEnumTagMultiPayload();
      sub_10009DFC4();
      sub_10009E040();
      uint64_t v235 = (uint64_t)v355;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v154, v155);
      sub_1000AEF2C(v235, v366, &qword_10094CFB8);
      swift_storeEnumTagMultiPayload();
      sub_10009D8B8();
      sub_10009D934();
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v235, &qword_10094CFB8);
      uint64_t v150 = v118;
      return sub_10008DB18(v150, v148);
    case 2:
LABEL_11:
      sub_10008E75C((uint64_t)v96, (uint64_t)v372);
      sub_1000AFA94(&qword_10094D218);
      uint64_t v131 = (uint64_t)v343;
      uint64_t v132 = v342;
      char v133 = swift_dynamicCast();
      uint64_t v134 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v341 + 56);
      if (v133)
      {
        v134(v131, 0, 1, v132);
        uint64_t v135 = v320;
        sub_10009CE98(v131, v320, (uint64_t (*)(void))type metadata accessor for TrendsCard);
        uint64_t v136 = v321;
        sub_10009930C(v135, v321, (uint64_t (*)(void))type metadata accessor for TrendsCard);
        uint64_t v137 = v357;
        uint64_t v138 = v358;
        sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
        uint64_t v139 = *(void *)(v138 + *(int *)(v137 + 28));
        uint64_t v140 = qword_10094AC78;
        swift_retain();
        if (v140 != -1) {
          swift_once();
        }
        double v141 = *(double *)&qword_100998080;
        uint64_t v142 = v325;
        sub_100092088(v325);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v323 + 56))(v142, 0, 1, v324);
        double v143 = sub_10009259C(v96, v142, v141);
        sub_10008E75C((uint64_t)v96, (uint64_t)&v370);
        sub_100092908((uint64_t)&v370, v142, v143);
        sub_10008DB18((uint64_t)&v370, &qword_10094CEF0);
        sub_10008DB18(v142, &qword_10094CED0);
        sub_10009D22C(v135, (uint64_t (*)(void))type metadata accessor for TrendsCard);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v145 = (uint64_t)v322;
        uint64_t *v322 = KeyPath;
        sub_1000AFA94(&qword_10094C578);
        swift_storeEnumTagMultiPayload();
        uint64_t v146 = (int *)v346;
        sub_10009CE98(v136, v145 + *(int *)(v346 + 20), (uint64_t (*)(void))type metadata accessor for TrendsCard);
        sub_1000AEEC8((uint64_t)v372, v145 + v146[6], &qword_10094C750);
        *(void *)(v145 + v146[7]) = v139;
        *(double *)(v145 + v146[8]) = v143;
        uint64_t v110 = v344;
        sub_10009CE98(v145, v344, type metadata accessor for TrendsCardView);
        uint64_t v147 = 0;
      }
      else
      {
        uint64_t v147 = 1;
        v134(v131, 1, 1, v132);
        sub_10008DB18(v131, &qword_10094D190);
        uint64_t v146 = (int *)v346;
        uint64_t v110 = v344;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v345 + 56))(v110, v147, 1, v146);
      id v148 = &qword_10094D100;
      sub_1000AEF2C(v110, v361, &qword_10094D100);
      goto LABEL_19;
    case 3:
      switch(v99)
      {
        case 1:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v156 = (uint64_t)v264;
          uint64_t v157 = v265;
          char v158 = swift_dynamicCast();
          uint64_t v159 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56);
          if (v158)
          {
            v159(v156, 0, 1, v157);
            uint64_t v160 = v240;
            sub_10009CE98(v156, v240, (uint64_t (*)(void))type metadata accessor for LoadCard);
            uint64_t v161 = v239;
            sub_10009930C(v160, v239, (uint64_t (*)(void))type metadata accessor for LoadCard);
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            uint64_t v162 = swift_getKeyPath();
            uint64_t v163 = (uint64_t)v244;
            *char v244 = v162;
            sub_1000AFA94(&qword_10094C578);
            swift_storeEnumTagMultiPayload();
            uint64_t v164 = CardView;
            sub_10009CE98(v161, v163 + *(int *)(CardView + 20), (uint64_t (*)(void))type metadata accessor for LoadCard);
            sub_1000AEEC8((uint64_t)v372, v163 + *(int *)(v164 + 24), &qword_10094C750);
            uint64_t v165 = v163 + *(int *)(v164 + 28);
            type metadata accessor for BalanceDataProvider();
            sub_1000D050C(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
            *(void *)uint64_t v165 = Environment.init<A>(_:)();
            *(unsigned char *)(v165 + 8) = v166 & 1;
            uint64_t v167 = *(void **)(v160 + *(int *)(v157 + 36));
            sub_1000D050C(&qword_10094D008, (void (*)(uint64_t))type metadata accessor for LoadCardView);
            id v168 = v167;
            uint64_t v169 = v242;
            View.environment<A>(_:)();

            sub_10009D22C(v163, (uint64_t (*)(void))type metadata accessor for LoadCardView);
            sub_10009D22C(v160, (uint64_t (*)(void))type metadata accessor for LoadCard);
            uint64_t v170 = v270;
            uint64_t v118 = (uint64_t)v273;
            uint64_t v171 = v271;
            (*(void (**)(char *, char *, uint64_t))(v270 + 32))(v273, v169, v271);
            uint64_t v172 = 0;
          }
          else
          {
            uint64_t v172 = 1;
            v159(v156, 1, 1, v157);
            sub_10008DB18(v156, &qword_10094D1E8);
            uint64_t v118 = (uint64_t)v273;
            uint64_t v171 = v271;
            uint64_t v170 = v270;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56))(v118, v172, 1, v171);
          id v148 = &qword_10094D000;
          sub_1000AEF2C(v118, v298, &qword_10094D000);
          goto LABEL_42;
        case 2:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          type metadata accessor for HistoryItemsCard();
          if (swift_dynamicCast())
          {
            uint64_t v173 = v370;
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            uint64_t v174 = swift_getKeyPath();
            uint64_t v175 = (uint64_t)v241;
            *char v241 = v174;
            sub_1000AFA94(&qword_10094C578);
            swift_storeEnumTagMultiPayload();
            uint64_t v176 = v267;
            *(void *)(v175 + *(int *)(v267 + 20)) = v173;
            sub_1000AEEC8((uint64_t)v372, v175 + *(int *)(v176 + 24), &qword_10094C750);
            uint64_t v118 = v274;
            sub_10009CE98(v175, v274, (uint64_t (*)(void))type metadata accessor for HistoryItemsCardView);
            uint64_t v177 = 0;
          }
          else
          {
            uint64_t v177 = 1;
            uint64_t v118 = v274;
            uint64_t v176 = v267;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v266 + 56))(v118, v177, 1, v176);
          id v148 = &qword_10094D030;
          sub_1000AEF2C(v118, v303, &qword_10094D030);
          goto LABEL_47;
        case 3:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v178 = (uint64_t)v272;
          uint64_t v179 = v269;
          char v180 = swift_dynamicCast();
          uint64_t v181 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v268 + 56);
          if (v180)
          {
            v181(v178, 0, 1, v179);
            uint64_t v182 = v246;
            sub_10009CE98(v178, v246, (uint64_t (*)(void))type metadata accessor for AwardsCard);
            uint64_t v183 = v245;
            sub_10009930C(v182, v245, (uint64_t (*)(void))type metadata accessor for AwardsCard);
            uint64_t v118 = (uint64_t)v280;
            long long v184 = (int *)v276;
            if (qword_10094AC78 != -1) {
              swift_once();
            }
            double v185 = *(double *)&qword_100998080;
            uint64_t v186 = v325;
            uint64_t v187 = v358;
            sub_100092088(v325);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v323 + 56))(v186, 0, 1, v324);
            double v188 = sub_10009259C(v96, v186, v185);
            sub_10008E75C((uint64_t)v96, (uint64_t)v372);
            sub_100092908((uint64_t)v372, v186, v188);
            sub_10008DB18((uint64_t)v372, &qword_10094CEF0);
            sub_10008DB18(v186, &qword_10094CED0);
            uint64_t v189 = v357;
            sub_1000AEF2C(v187 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            LOBYTE(v187) = *(unsigned char *)(v187 + *(int *)(v189 + 32));
            uint64_t v190 = type metadata accessor for GeometryProxy();
            uint64_t v191 = (uint64_t)v248;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v248, 1, 1, v190);
            uint64_t v192 = swift_getKeyPath();
            uint64_t v193 = (uint64_t)v247;
            *char v247 = v192;
            sub_1000AFA94(&qword_10094C578);
            swift_storeEnumTagMultiPayload();
            sub_10009CE98(v183, v193 + v184[5], (uint64_t (*)(void))type metadata accessor for AwardsCard);
            *(double *)(v193 + v184[6]) = v188;
            sub_1000AEEC8((uint64_t)v372, v193 + v184[7], &qword_10094C750);
            *(unsigned char *)(v193 + v184[8]) = v187;
            sub_1000AEF2C(v191, v249, &qword_10094C580);
            State.init(wrappedValue:)();
            sub_10008DB18(v191, &qword_10094C580);
            sub_10009D22C(v182, (uint64_t (*)(void))type metadata accessor for AwardsCard);
            sub_10009CE98(v193, v118, (uint64_t (*)(void))type metadata accessor for AwardsCardView);
            uint64_t v194 = 0;
          }
          else
          {
            uint64_t v194 = 1;
            v181(v178, 1, 1, v179);
            sub_10008DB18(v178, &qword_10094D1D0);
            uint64_t v118 = (uint64_t)v280;
            long long v184 = (int *)v276;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v275 + 56))(v118, v194, 1, v184);
          id v148 = &qword_10094D048;
          sub_1000AEF2C(v118, v303, &qword_10094D048);
LABEL_47:
          swift_storeEnumTagMultiPayload();
          sub_1000C0EB0();
          sub_1000CAAAC();
          uint64_t v233 = (uint64_t)v305;
          _ConditionalContent<>.init(storage:)();
          uint64_t v234 = &qword_10094D020;
          sub_1000AEF2C(v233, v314, &qword_10094D020);
          goto LABEL_48;
        case 4:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v195 = (uint64_t)v279;
          uint64_t v196 = v278;
          char v197 = swift_dynamicCast();
          uint64_t v198 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v277 + 56);
          if (v197)
          {
            v198(v195, 0, 1, v196);
            uint64_t v199 = v252;
            sub_10009CE98(v195, v252, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
            uint64_t v200 = v251;
            sub_10009930C(v199, v251, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
            uint64_t v201 = v357;
            uint64_t v202 = v358;
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            LOBYTE(v202) = *(unsigned char *)(v202 + *(int *)(v201 + 32));
            uint64_t v203 = swift_getKeyPath();
            uint64_t v204 = (uint64_t)v253;
            uint64_t *v253 = v203;
            sub_1000AFA94(&qword_10094C578);
            swift_storeEnumTagMultiPayload();
            uint64_t v205 = (int *)v285;
            uint64_t v206 = *(int *)(v285 + 20);
            *(void *)(v204 + v206) = [objc_allocWithZone((Class)type metadata accessor for MessagesAppInstallationObserver()) init];
            sub_10009CE98(v200, v204 + v205[6], (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
            sub_1000AEEC8((uint64_t)v372, v204 + v205[7], &qword_10094C750);
            *(unsigned char *)(v204 + v205[8]) = v202;
            sub_10009D22C(v199, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
            uint64_t v118 = v286;
            sub_10009CE98(v204, v286, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
            uint64_t v207 = 0;
          }
          else
          {
            uint64_t v207 = 1;
            v198(v195, 1, 1, v196);
            sub_10008DB18(v195, &qword_10094D1B0);
            uint64_t v118 = v286;
            uint64_t v205 = (int *)v285;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v284 + 56))(v118, v207, 1, v205);
          id v148 = &qword_10094D098;
          sub_1000AEF2C(v118, v338, &qword_10094D098);
          goto LABEL_22;
        case 5:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v208 = (uint64_t)v283;
          uint64_t v209 = Card;
          char v210 = swift_dynamicCast();
          uint64_t v211 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v281 + 56);
          if (v210)
          {
            v211(v208, 0, 1, v209);
            uint64_t v212 = v255;
            sub_10009CE98(v208, v255, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
            uint64_t v213 = v254;
            sub_10009930C(v212, v254, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
            uint64_t v214 = v357;
            uint64_t v215 = v358;
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            LOBYTE(v214) = *(unsigned char *)(v215 + *(int *)(v214 + 32));
            uint64_t v216 = swift_getKeyPath();
            uint64_t v217 = v256;
            uint64_t *v256 = v216;
            sub_1000AFA94(&qword_10094C578);
            swift_storeEnumTagMultiPayload();
            uint64_t v218 = (int *)View;
            uint64_t v219 = (uint64_t *)((char *)v217 + *(int *)(View + 20));
            unint64_t v369 = sub_1000B1CB4((uint64_t)_swiftEmptyArrayStorage);
            sub_1000AFA94(&qword_10094D220);
            State.init(wrappedValue:)();
            uint64_t v220 = v371;
            void *v219 = v370;
            v219[1] = v220;
            uint64_t v221 = (char *)v217 + v218[6];
            LOBYTE(v369) = 0;
            State.init(wrappedValue:)();
            uint64_t v222 = v371;
            *uint64_t v221 = v370;
            *((void *)v221 + 1) = v222;
            sub_10009CE98(v213, (uint64_t)v217 + v218[7], (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
            sub_1000AEEC8((uint64_t)v372, (uint64_t)v217 + v218[8], &qword_10094C750);
            *((unsigned char *)v217 + v218[9]) = v214;
            *((unsigned char *)v217 + v218[10]) = v214 ^ 1;
            sub_10009D22C(v212, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCard);
            uint64_t v223 = (uint64_t)v217;
            uint64_t v118 = v292;
            sub_10009CE98(v223, v292, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextView);
            uint64_t v224 = 0;
          }
          else
          {
            uint64_t v224 = 1;
            v211(v208, 1, 1, v209);
            sub_10008DB18(v208, &qword_10094D1A8);
            uint64_t v118 = v292;
            uint64_t v218 = (int *)View;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v290 + 56))(v118, v224, 1, v218);
          id v148 = &qword_10094D0C0;
          sub_1000AEF2C(v118, v308, &qword_10094D0C0);
          goto LABEL_57;
        case 6:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v225 = (uint64_t)v289;
          uint64_t v226 = v288;
          char v227 = swift_dynamicCast();
          long long v228 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v287 + 56);
          if (v227)
          {
            v228(v225, 0, 1, v226);
            uint64_t v229 = v257;
            sub_10009CE98(v225, v257, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
            uint64_t v230 = v258;
            sub_10009930C(v229, v258, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            uint64_t v231 = v259;
            sub_100024260(v230, (uint64_t)v372, v259);
            sub_10009D22C(v229, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
            uint64_t v118 = v295;
            sub_10009CE98((uint64_t)v231, v295, (uint64_t (*)(void))type metadata accessor for CatalogTipCardView);
            uint64_t v232 = 0;
          }
          else
          {
            uint64_t v232 = 1;
            v228(v225, 1, 1, v226);
            sub_10008DB18(v225, &qword_10094D198);
            uint64_t v118 = v295;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v293 + 56))(v118, v232, 1, v294);
          id v148 = &qword_10094D0D8;
          sub_1000AEF2C(v118, v308, &qword_10094D0D8);
LABEL_57:
          swift_storeEnumTagMultiPayload();
          sub_1000B0484();
          sub_1000B03E0();
          uint64_t v152 = (uint64_t)v310;
          _ConditionalContent<>.init(storage:)();
          uint64_t v153 = &qword_10094D0B0;
          sub_1000AEF2C(v152, v349, &qword_10094D0B0);
          goto LABEL_23;
        case 7:
          goto LABEL_11;
        default:
          sub_10008E75C((uint64_t)v96, (uint64_t)v372);
          sub_1000AFA94(&qword_10094D218);
          char v121 = swift_dynamicCast();
          uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
          if (v121)
          {
            v122(v86, 0, 1, v87);
            sub_10009CE98((uint64_t)v86, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
            sub_10009930C((uint64_t)v93, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
            uint64_t v123 = v357;
            uint64_t v124 = v358;
            sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
            uint64_t v125 = *(void *)(v124 + *(int *)(v123 + 28));
            swift_retain();
            uint64_t v126 = v238;
            sub_100092088(v238);
            if (qword_10094AC78 != -1) {
              swift_once();
            }
            double v127 = *(double *)&qword_100998080;
            uint64_t v128 = v325;
            sub_100092088(v325);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v323 + 56))(v128, 0, 1, v324);
            double v129 = sub_10009259C(v96, v128, v127);
            sub_10008E75C((uint64_t)v96, (uint64_t)&v370);
            sub_100092908((uint64_t)&v370, v128, v129);
            sub_10008DB18((uint64_t)&v370, &qword_10094CEF0);
            sub_10008DB18(v128, &qword_10094CED0);
            sub_1000C03A0((uint64_t)v91, (uint64_t)v372, v125, v126, v83, v129);
            sub_10009D22C((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ActivityRingsCard);
            uint64_t v118 = v262;
            sub_10009CE98((uint64_t)v83, v262, (uint64_t (*)(void))type metadata accessor for ActivityRingsCardView);
            uint64_t v130 = 0;
          }
          else
          {
            uint64_t v130 = 1;
            v122(v86, 1, 1, v87);
            sub_10008DB18((uint64_t)v86, &qword_10094D210);
            uint64_t v118 = v262;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v118, v130, 1, v261);
          id v148 = &qword_10094CFE8;
          sub_1000AEF2C(v118, v298, &qword_10094CFE8);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          sub_1000C02FC();
          sub_1000B40B0();
          uint64_t v233 = (uint64_t)v299;
          _ConditionalContent<>.init(storage:)();
          uint64_t v234 = &qword_10094CFD8;
          sub_1000AEF2C(v233, v314, &qword_10094CFD8);
LABEL_48:
          swift_storeEnumTagMultiPayload();
          sub_1000AC348();
          sub_1000AC3C4();
          uint64_t v154 = (uint64_t)v315;
          _ConditionalContent<>.init(storage:)();
          sub_10008DB18(v233, v234);
          uint64_t v155 = &qword_10094CFC8;
          sub_1000AEF2C(v154, v354, &qword_10094CFC8);
          goto LABEL_49;
      }
    default:
      sub_10008E75C((uint64_t)v96, (uint64_t)v372);
      sub_1000AFA94(&qword_10094D218);
      uint64_t v102 = (uint64_t)v332;
      uint64_t v103 = v331;
      char v104 = swift_dynamicCast();
      long long v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v330 + 56);
      if (v104)
      {
        v105(v102, 0, 1, v103);
        uint64_t v106 = v316;
        sub_10009CE98(v102, v316, (uint64_t (*)(void))type metadata accessor for MetricCard);
        uint64_t v107 = v317;
        sub_10009930C(v106, v317, (uint64_t (*)(void))type metadata accessor for MetricCard);
        char v108 = *(unsigned char *)(v106 + *(int *)(v103 + 40));
        sub_1000AEF2C(v358 + *(int *)(v357 + 24), (uint64_t)v372, &qword_10094C750);
        uint64_t v109 = v318;
        sub_10009F0C4(v107, v108, (uint64_t)v372, v318);
        sub_10009D22C(v106, (uint64_t (*)(void))type metadata accessor for MetricCard);
        uint64_t v110 = v333;
        sub_10009CE98((uint64_t)v109, v333, (uint64_t (*)(void))type metadata accessor for MetricCardView);
        uint64_t v111 = 0;
      }
      else
      {
        uint64_t v111 = 1;
        v105(v102, 1, 1, v103);
        sub_10008DB18(v102, &qword_10094D180);
        uint64_t v110 = v333;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v334 + 56))(v110, v111, 1, v335);
      id v148 = &qword_10094D118;
      sub_1000AEF2C(v110, v361, &qword_10094D118);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      sub_10009E0BC();
      sub_10009F020();
      uint64_t v149 = (uint64_t)v363;
      _ConditionalContent<>.init(storage:)();
      sub_1000AEF2C(v149, v366, &qword_10094D0F0);
      swift_storeEnumTagMultiPayload();
      sub_10009D8B8();
      sub_10009D934();
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v149, &qword_10094D0F0);
      uint64_t v150 = v110;
      return sub_10008DB18(v150, v148);
  }
}

uint64_t sub_10009CE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100643878);
}

uint64_t sub_10009CE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050B100);
}

uint64_t sub_10009CE98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DashboardCardView()
{
  uint64_t result = qword_10094CE88;
  if (!qword_10094CE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MetricCardView()
{
  uint64_t result = qword_100966570;
  if (!qword_100966570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FitnessPlusUpNextView()
{
  uint64_t result = qword_10095FF50;
  if (!qword_10095FF50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009CFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100517EE4);
}

uint64_t sub_10009CFF8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009D030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100199EAC);
}

uint64_t type metadata accessor for AwardsCardView()
{
  uint64_t result = qword_10094C5F0;
  if (!qword_10094C5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ActivityRingsCardView()
{
  uint64_t result = qword_100960398;
  if (!qword_100960398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for CatalogTipCardView()
{
  uint64_t result = qword_100969F28;
  if (!qword_100969F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FriendsHighlightCardView()
{
  uint64_t result = qword_100967EB8;
  if (!qword_100967EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HistoryItemsCardView()
{
  uint64_t result = qword_100953798;
  if (!qword_100953798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LoadCardView()
{
  uint64_t result = qword_1009682A8;
  if (!qword_1009682A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for TrendsCardView(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100968E68);
}

uint64_t sub_10009D22C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10009D28C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10009D2EC(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = (id *)(a1 + a2[9]);

  uint64_t v6 = type metadata accessor for MetricFormattingHelper();
  uint64_t v7 = (char *)v5 + *(int *)(v6 + 20);
  uint64_t v8 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + a2[10]);
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[12];
  uint64_t v12 = type metadata accessor for Calendar.Component();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[13];
  uint64_t v14 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  uint64_t v15 = a1 + a2[15];
  uint64_t v16 = type metadata accessor for AxisMarkValues();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t sub_10009D528(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for DateInterval();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void sub_10009D644(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  uint64_t v5 = (id *)(a1 + a2[9]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for MetricDetailViewModel();
  uint64_t v7 = (char *)v5 + *(int *)(v6 + 36);
  uint64_t v8 = type metadata accessor for DateInterval();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = (char *)v5 + *(int *)(v6 + 44);
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = *(void **)(a1 + a2[11]);
}

uint64_t type metadata accessor for LoadCard()
{
  uint64_t result = qword_100965B20;
  if (!qword_100965B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FriendsHighlightCard()
{
  uint64_t result = qword_10095F3C0;
  if (!qword_10095F3C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FriendCard()
{
  uint64_t result = qword_100967560;
  if (!qword_100967560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10009D8B8()
{
  unint64_t result = qword_10094CFB0;
  if (!qword_10094CFB0)
  {
    sub_1000A1370(&qword_10094CFB8);
    sub_10009DFC4();
    sub_10009E040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFB0);
  }
  return result;
}

unint64_t sub_10009D934()
{
  unint64_t result = qword_10094D0E8;
  if (!qword_10094D0E8)
  {
    sub_1000A1370(&qword_10094D0F0);
    sub_10009E0BC();
    sub_10009F020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D0E8);
  }
  return result;
}

uint64_t sub_10009D9B0()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094CF98);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009980C(v0, (uint64_t)v3);
  sub_1000AFA94(&qword_10094D178);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10074E640;
  *(void *)(v4 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
  *(void *)(v4 + 40) = v5;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  uint64_t v6 = (void *)(v0 + *(int *)(type metadata accessor for DashboardCardView() + 20));
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  sub_10007E4EC(v6, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  uint64_t v11 = v10;
  LOBYTE(v8) = v12;
  v15[1] = v9;
  void v15[2] = v10;
  char v16 = v12;
  _print_unlocked<A, B>(_:_:)();
  sub_1000917F8(v9, v11, v8);
  unint64_t v13 = v18;
  *(void *)(v4 + 48) = v17;
  *(void *)(v4 + 56) = v13;
  static FitnessAccessibilityIdentifier.build(_:)();
  swift_bridgeObjectRelease();
  sub_10009DB80(&qword_10094CF90, &qword_10094CF98, (void (*)(void))sub_1000E1030);
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  return sub_10008DB18((uint64_t)v3, &qword_10094CF98);
}

uint64_t sub_10009DB80(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009DBF8()
{
  unint64_t result = qword_10094C788;
  if (!qword_10094C788)
  {
    sub_1000A1370(&qword_10094C780);
    sub_10009DD8C(&qword_10094C790, &qword_10094C778, (void (*)(void))sub_1000E9CC8);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C788);
  }
  return result;
}

unint64_t sub_10009DCBC()
{
  unint64_t result = qword_10094D248;
  if (!qword_10094D248)
  {
    sub_1000A1370(&qword_10094D230);
    sub_10009DE0C(&qword_10094D240, &qword_10094D228, (void (*)(void))sub_1000B23D8);
    sub_1000D050C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D248);
  }
  return result;
}

uint64_t sub_10009DD8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009DE0C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009DE8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10009DF0C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();

  uint64_t v5 = *(void **)(a1 + a2[13]);
}

unint64_t sub_10009DFC4()
{
  unint64_t result = qword_10094CFC0;
  if (!qword_10094CFC0)
  {
    sub_1000A1370(&qword_10094CFC8);
    sub_1000AC348();
    sub_1000AC3C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFC0);
  }
  return result;
}

unint64_t sub_10009E040()
{
  unint64_t result = qword_10094D058;
  if (!qword_10094D058)
  {
    sub_1000A1370(&qword_10094D060);
    sub_1000AC440();
    sub_1000AC4BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D058);
  }
  return result;
}

unint64_t sub_10009E0BC()
{
  unint64_t result = qword_10094D0F8;
  if (!qword_10094D0F8)
  {
    sub_1000A1370(&qword_10094D100);
    sub_1000D050C(&qword_10094D108, (void (*)(uint64_t))type metadata accessor for TrendsCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D0F8);
  }
  return result;
}

void *sub_10009E160(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  char v101 = a3;
  uint64_t v102 = a2;
  uint64_t v7 = a3[5];
  uint64_t v103 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for MetricCard();
  uint64_t v12 = v11[5];
  unint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)unint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  char v20 = v13[16];
  unsigned char v13[16] = v17;
  sub_1000917F8(v18, v19, v20);
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v97 = v11;
  uint64_t v21 = v11[9];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  uint64_t v24 = *(void **)&v9[v21];
  uint64_t v25 = *(void **)v22;
  *(void *)uint64_t v22 = v24;
  id v26 = v24;

  uint64_t v27 = (void *)*((void *)v23 + 1);
  uint64_t v28 = (void *)*((void *)v22 + 1);
  *((void *)v22 + 1) = v27;
  id v29 = v27;

  *((void *)v22 + 2) = *((void *)v23 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v22 + 3) = *((void *)v23 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v23 + 4);
  v22[40] = v23[40];
  *((void *)v22 + 4) = v30;
  uint64_t v99 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v31 = v99[9];
  uint64_t v32 = &v22[v31];
  uint64_t v33 = &v23[v31];
  uint64_t v34 = type metadata accessor for DateInterval();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v98 = v32;
  LODWORD(v32) = v36(v32, 1, v34);
  int v37 = v36(v33, 1, v34);
  if (v32)
  {
    if (v37)
    {
      size_t v38 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      uint64_t v39 = v98;
LABEL_11:
      memcpy(v39, v33, v38);
      goto LABEL_14;
    }
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v98, v33, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v98, 0, 1, v34);
  }
  else
  {
    if (v37)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v98, v34);
      size_t v38 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      uint64_t v39 = v98;
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v98, v33, v34);
  }
LABEL_14:
  v22[v99[10]] = v23[v99[10]];
  uint64_t v40 = v99[11];
  uint64_t v41 = &v22[v40];
  uint64_t v42 = &v23[v40];
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v44 + 24);
  v100(v41, v42, v43);
  v8[v97[10]] = v9[v97[10]];
  uint64_t v45 = v97[11];
  uint64_t v46 = *(void **)&v9[v45];
  uint64_t v47 = *(void **)&v8[v45];
  *(void *)&v8[v45] = v46;
  id v48 = v46;

  *((unsigned char *)v103 + v101[6]) = *((unsigned char *)v102 + v101[6]);
  uint64_t v49 = v101[7];
  uint64_t v50 = (uint64_t)v103 + v49;
  uint64_t v51 = (void *)((char *)v102 + v49);
  uint64_t v52 = *(void *)((char *)v102 + v49 + 24);
  if (*(void *)((char *)v103 + v49 + 24))
  {
    if (v52)
    {
      sub_10009EDF0((uint64_t *)v50, v51);
      goto LABEL_21;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v50);
  }
  else if (v52)
  {
    *(void *)(v50 + 24) = v52;
    *(void *)(v50 + 32) = v51[4];
    (**(void (***)(uint64_t, char *))(v52 - 8))(v50, (char *)v51);
    goto LABEL_21;
  }
  long long v53 = *(_OWORD *)v51;
  long long v54 = *((_OWORD *)v51 + 1);
  *(void *)(v50 + 32) = v51[4];
  *(_OWORD *)uint64_t v50 = v53;
  *(_OWORD *)(v50 + 16) = v54;
LABEL_21:
  uint64_t v55 = v101[8];
  uint64_t v56 = (void **)((char *)v103 + v55);
  uint64_t v57 = (void **)((char *)v102 + v55);
  uint64_t v58 = type metadata accessor for MetricChartData();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      uint64_t v90 = *v57;
      uint64_t v91 = *v56;
      *uint64_t v56 = *v57;
      id v92 = v90;

      v100((char *)v56 + *(int *)(v58 + 20), (char *)v57 + *(int *)(v58 + 20), v43);
      uint64_t v93 = *(int *)(v58 + 24);
      uint64_t v94 = *(void **)((char *)v57 + v93);
      uint64_t v95 = *(void **)((char *)v56 + v93);
      *(void **)((char *)v56 + v93) = v94;
      id v96 = v94;

      goto LABEL_27;
    }
    sub_10009D28C((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_26;
  }
  if (v62)
  {
LABEL_26:
    uint64_t v73 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v56, v57, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_27;
  }
  uint64_t v63 = *v57;
  *uint64_t v56 = *v57;
  uint64_t v64 = *(int *)(v58 + 20);
  uint64_t v65 = (char *)v56 + v64;
  uint64_t v66 = (char *)v57 + v64;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  id v68 = v63;
  v67(v65, v66, v43);
  uint64_t v69 = *(int *)(v58 + 24);
  uint64_t v70 = *(void **)((char *)v57 + v69);
  *(void **)((char *)v56 + v69) = v70;
  uint64_t v71 = *(void (**)(void **, void, uint64_t, uint64_t))(v59 + 56);
  id v72 = v70;
  v71(v56, 0, 1, v58);
LABEL_27:
  uint64_t v74 = v101[9];
  uint64_t v75 = (void **)((char *)v103 + v74);
  uint64_t v76 = (char *)v102 + v74;
  uint64_t v77 = *(void **)((char *)v102 + v74);
  uint64_t v78 = *v75;
  *uint64_t v75 = v77;
  id v79 = v77;

  uint64_t v80 = type metadata accessor for MetricFormattingHelper();
  uint64_t v81 = *(int *)(v80 + 20);
  uint64_t v82 = (char *)v75 + v81;
  uint64_t v83 = &v76[v81];
  uint64_t v84 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
  uint64_t v85 = *(int *)(v80 + 24);
  uint64_t v86 = *(void **)&v76[v85];
  uint64_t v87 = *(void **)((char *)v75 + v85);
  *(void **)((char *)v75 + v85) = v86;
  id v88 = v86;

  return v103;
}

void *sub_10009E868(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  v8[8] = v9[8];
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[9];
  uint64_t v12 = (void **)((char *)a1 + v11);
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void **)((char *)a2 + v11);
  uint64_t v15 = *v12;
  *uint64_t v12 = v14;
  id v16 = v14;

  uint64_t v17 = type metadata accessor for MetricFormattingHelper();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = (char *)v12 + v18;
  char v20 = &v13[v18];
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = *(int *)(v17 + 24);
  uint64_t v23 = *(void **)&v13[v22];
  uint64_t v24 = *(void **)((char *)v12 + v22);
  *(void **)((char *)v12 + v22) = v23;
  id v25 = v23;

  sub_10009EDF0((void *)((char *)a1 + a3[10]), (void *)((char *)a2 + a3[10]));
  uint64_t v26 = a3[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = a3[12];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for Calendar.Component();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  uint64_t v34 = a3[13];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for Date.FormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = a3[14];
  uint64_t v39 = *(void **)((char *)a2 + v38);
  uint64_t v40 = *(void **)((char *)a1 + v38);
  *(void *)((char *)a1 + v38) = v39;
  id v41 = v39;

  uint64_t v42 = a3[15];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for AxisMarkValues();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
  return a1;
}

uint64_t assignWithCopy for CardHeaderView(uint64_t a1, uint64_t a2)
{
  sub_10009EDF0((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v4)
    {
      *(void *)(a1 + 64) = v4;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 40);
    long long v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 40);
    goto LABEL_7;
  }
  sub_10009EDF0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

void *sub_10009EC44(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_10009EDF0((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]));
  uint64_t v7 = a3[6];
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 24);
  if (!*(void *)((char *)a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, char *))(v10 - 8))(v8, v9);
      goto LABEL_13;
    }
LABEL_12:
    long long v11 = *(_OWORD *)v9;
    long long v12 = *((_OWORD *)v9 + 1);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    goto LABEL_13;
  }
  if (!v10)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v8, (uint64_t *)v9);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t *sub_10009EDF0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

unint64_t sub_10009F020()
{
  unint64_t result = qword_10094D110;
  if (!qword_10094D110)
  {
    sub_1000A1370(&qword_10094D118);
    sub_1000D050C(&qword_10094D120, (void (*)(uint64_t))type metadata accessor for MetricCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D110);
  }
  return result;
}

uint64_t sub_10009F0C4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v55 = type metadata accessor for TimeZone();
  uint64_t v46 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  int v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for MetricChartData();
  uint64_t v53 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  long long v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v12 - 8);
  uint64_t v47 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for MetricDetailViewModel();
  __chkstk_darwin(v45);
  uint64_t v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v15 - 8);
  *a4 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  id v16 = (int *)type metadata accessor for MetricCardView();
  uint64_t v17 = (uint64_t)a4 + v16[5];
  uint64_t v54 = a1;
  sub_1000A3708(a1, v17, (uint64_t (*)(void))type metadata accessor for MetricCard);
  *((unsigned char *)a4 + v16[6]) = a2;
  uint64_t v18 = (uint64_t)a4 + v16[7];
  uint64_t v49 = a3;
  sub_1000AEF2C(a3, v18, &qword_10094C750);
  uint64_t v19 = type metadata accessor for MetricCard();
  char v20 = *(void **)(a1 + *(int *)(v19 + 44));
  id v48 = v16;
  uint64_t v21 = v16[9];
  uint64_t v50 = a4;
  uint64_t v22 = (char *)a4 + v21;
  *(uint64_t *)((char *)a4 + v21) = (uint64_t)v20;
  uint64_t v23 = type metadata accessor for MetricFormattingHelper();
  uint64_t v51 = &v22[*(int *)(v23 + 20)];
  uint64_t v24 = self;
  id v25 = v20;
  id v26 = [v24 mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v29 = (uint64_t)v52;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(int *)(v23 + 24);
  *(void *)&v22[v30] = sub_10009F6D8();
  uint64_t v31 = *(int *)(v19 + 36);
  uint64_t v32 = v54;
  sub_1000A3708(v54 + v31, v29, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
  if (*(unsigned char *)(v29 + 40) == 1 && *(void *)(v29 + 32) == 1)
  {
    uint64_t v33 = *(void *)(v29 + 16);
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v35 = v33 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v36 = (void (**)(char *, uint64_t))(v46 + 8);
      uint64_t v37 = *(void *)(v53 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1000A3708(v35, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MetricChartData);
        static TimeZone.current.getter();
        char v38 = Date.isSameDay(as:timeZone:)();
        (*v36)(v9, v55);
        if (v38) {
          break;
        }
        sub_10009D28C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MetricChartData);
        v35 += v37;
        if (!--v34)
        {
          uint64_t v39 = 1;
          uint64_t v41 = v49;
          uint64_t v40 = v50;
          uint64_t v32 = v54;
          uint64_t v42 = v47;
          goto LABEL_11;
        }
      }
      uint64_t v42 = v47;
      sub_1002F0A40((uint64_t)v11, v47);
      uint64_t v39 = 0;
      uint64_t v41 = v49;
      uint64_t v40 = v50;
      uint64_t v32 = v54;
LABEL_11:
      uint64_t v29 = (uint64_t)v52;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = 1;
      uint64_t v41 = v49;
      uint64_t v40 = v50;
      uint64_t v42 = v47;
    }
    uint64_t v44 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v42, v39, 1, v56);
    sub_10008DB18(v41, &qword_10094C750);
    sub_10009D28C(v32, (uint64_t (*)(void))type metadata accessor for MetricCard);
    swift_bridgeObjectRelease();
    sub_10009D28C(v29, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    return sub_1000AEEC8(v42, (uint64_t)v40 + v44[8], &qword_10094C1E8);
  }
  else
  {
    sub_10008DB18(v49, &qword_10094C750);
    sub_10009D28C(v32, (uint64_t (*)(void))type metadata accessor for MetricCard);
    sub_10009D28C(v29, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))((char *)v50 + v48[8], 1, 1, v56);
  }
}

id sub_10009F6D8()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setRoundingMode:2];
  [v0 setNumberStyle:1];
  [v0 setMaximumFractionDigits:0];
  id v1 = [objc_allocWithZone((Class)NSLengthFormatter) init];
  [v1 setNumberFormatter:v0];
  [v1 setUnitStyle:2];

  return v1;
}

uint64_t sub_10009F78C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009665D8);
  __chkstk_darwin(v3 - 8);
  uint64_t v109 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_1009665E0);
  uint64_t v5 = __chkstk_darwin(v108);
  uint64_t v117 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v107 = (uint64_t)&v92 - v8;
  __chkstk_darwin(v7);
  uint64_t v115 = (uint64_t)&v92 - v9;
  uint64_t v10 = type metadata accessor for AttributedString();
  __chkstk_darwin(v10 - 8);
  uint64_t v110 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Font.Leading();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t KeyPath = v12;
  __chkstk_darwin(v12);
  uint64_t v112 = (uint64_t)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v20 = (char *)&v92 - v19;
  uint64_t v119 = a1;
  uint64_t v122 = sub_1000A5058();
  uint64_t v123 = v21;
  sub_1000A06D0();
  uint64_t v116 = Text.init<A>(_:)();
  uint64_t v120 = v22;
  int v106 = v23;
  uint64_t v121 = v24;
  sub_100092088((uint64_t)v20);
  uint64_t v25 = enum case for DynamicTypeSize.large(_:);
  id v26 = *(void (**)(char *, void, uint64_t))(v15 + 104);
  uint64_t v93 = v26;
  v26(v18, enum case for DynamicTypeSize.large(_:), v14);
  uint64_t v27 = sub_1000A3B18((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  int v104 = dispatch thunk of static Comparable.< infix(_:_:)();
  id v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  v28(v18, v14);
  v28(v20, v14);
  int v105 = static Edge.Set.bottom.getter();
  sub_100092088((uint64_t)v20);
  unsigned int v101 = v25;
  uint64_t v100 = v15 + 104;
  v26(v18, v25, v14);
  uint64_t v99 = v27;
  dispatch thunk of static Comparable.< infix(_:_:)();
  v28(v18, v14);
  id v92 = v20;
  uint64_t v103 = (void (*)(uint64_t, uint64_t))v28;
  uint64_t v102 = v15 + 8;
  v28(v20, v14);
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  static Font.footnote.getter();
  uint64_t v38 = v112;
  uint64_t v37 = v113;
  uint64_t v39 = KeyPath;
  (*(void (**)(uint64_t, void, uint64_t))(v113 + 104))(v112, enum case for Font.Leading.tight(_:), KeyPath);
  uint64_t v118 = Font.leading(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = type metadata accessor for MetricCardView();
  uint64_t v41 = *(unsigned __int8 *)(v119 + *(int *)(v40 + 24));
  uint64_t v42 = v119 + *(int *)(v40 + 20);
  uint64_t v95 = type metadata accessor for MetricCard();
  uint64_t v43 = *(int *)(v95 + 36);
  uint64_t v96 = v42;
  uint64_t v44 = (void **)(v42 + v43);
  uint64_t v45 = *(void *)(v42 + v43 + 32);
  unsigned __int8 v46 = *(unsigned char *)(v42 + v43 + 40);
  if (qword_10094B048 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_100966508;
  sub_1000A3E18(v41);
  uint64_t v48 = Color.init(uiColor:)();
  sub_1000A17E8(v41, v44, v45, v46, v47, 0, v48, v110);
  swift_release();
  uint64_t v49 = Text.init(_:)();
  uint64_t v111 = v50;
  uint64_t v112 = v49;
  int v97 = v51;
  uint64_t v113 = v52;
  uint64_t v53 = (uint64_t)v92;
  uint64_t v94 = v44;
  uint64_t v54 = v119;
  sub_100092088((uint64_t)v92);
  v93(v18, v101, v14);
  LODWORD(v100) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v55 = v103;
  v103((uint64_t)v18, v14);
  v55(v53, v14);
  unsigned int v101 = static Edge.Set.all.getter();
  uint64_t v56 = v109;
  sub_1000A30B8(v54, v109);
  uint64_t v57 = v96 + *(int *)(v95 + 20);
  unint64_t v58 = *(void *)v57;
  uint64_t v59 = *(void *)(v57 + 8);
  int v60 = *(unsigned __int8 *)(v57 + 16);
  sub_100092088(v53);
  int v61 = sub_100092DA4(v53, v58, v59, v60);
  v55(v53, v14);
  uint64_t v62 = v107;
  sub_1000AEF2C(v56, v107, &qword_1009665D8);
  uint64_t v63 = v62 + *(int *)(v108 + 36);
  *(unsigned char *)uint64_t v63 = v61 == 2;
  *(void *)(v63 + 8) = 0x404B800000000000;
  *(unsigned char *)(v63 + 16) = 0;
  sub_10008DB18(v56, &qword_1009665D8);
  uint64_t v64 = v115;
  sub_1000AEEC8(v62, v115, &qword_1009665E0);
  if (*((unsigned char *)v94 + 40) == 1 && v94[4] == (void *)1)
  {
    sub_100643A78(v110);
    uint64_t v65 = Text.init(_:)();
    uint64_t v109 = v66;
    uint64_t v110 = v65;
    uint64_t v119 = v67;
    uint64_t v69 = v68 & 1;
    uint64_t v70 = static Edge.Set.all.getter();
    uint64_t v108 = 0x4000000000000000;
  }
  else
  {
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v119 = 0;
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v108 = 0;
  }
  char v71 = v97 & 1;
  LODWORD(v107) = v97 & 1;
  char v72 = v106 & 1;
  if (v100) {
    uint64_t v73 = 0x4010000000000000;
  }
  else {
    uint64_t v73 = 0x4020000000000000;
  }
  if (v104) {
    double v74 = -2.0;
  }
  else {
    double v74 = 0.0;
  }
  LOBYTE(v122) = v106 & 1;
  uint64_t v75 = v117;
  sub_1000AEF2C(v64, v117, &qword_1009665E0);
  uint64_t v76 = v116;
  uint64_t v77 = v98;
  uint64_t v78 = v120;
  void *v98 = v116;
  v77[1] = v78;
  *((unsigned char *)v77 + 16) = v72;
  v77[3] = v121;
  v77[4] = 0;
  *((double *)v77 + 5) = v74;
  *((unsigned char *)v77 + 48) = v105;
  v77[7] = v30;
  v77[8] = v32;
  v77[9] = v34;
  v77[10] = v36;
  *((unsigned char *)v77 + 88) = 0;
  uint64_t v79 = v118;
  v77[12] = KeyPath;
  v77[13] = v79;
  uint64_t v80 = v111;
  v77[14] = v112;
  v77[15] = v80;
  *((unsigned char *)v77 + 128) = v71;
  v77[17] = v113;
  *((unsigned char *)v77 + 144) = v101;
  v77[19] = 0;
  v77[20] = 0;
  v77[21] = v73;
  v77[22] = 0;
  *((unsigned char *)v77 + 184) = 0;
  uint64_t v81 = sub_1000AFA94(&qword_1009665E8);
  sub_1000AEF2C(v75, (uint64_t)v77 + *(int *)(v81 + 64), &qword_1009665E0);
  uint64_t v82 = (char *)v77 + *(int *)(v81 + 80);
  uint64_t v83 = v109;
  uint64_t v84 = v110;
  uint64_t v86 = v119;
  uint64_t v85 = v120;
  *(void *)uint64_t v82 = v110;
  *((void *)v82 + 1) = v86;
  *((void *)v82 + 2) = v69;
  *((void *)v82 + 3) = v83;
  uint64_t v87 = v108;
  *((void *)v82 + 4) = v70;
  *((void *)v82 + 5) = v87;
  *((void *)v82 + 7) = 0;
  *((void *)v82 + 8) = 0;
  *((void *)v82 + 6) = 0;
  v82[72] = 0;
  sub_1000A1750(v76, v85, v72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v88 = v111;
  uint64_t v89 = v112;
  char v90 = v107;
  sub_1000A1750(v112, v111, v107);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v84, v86, v69, v83);
  sub_10008DB18(v115, &qword_1009665E0);
  sub_1000A1760(v84, v86, v69, v83);
  sub_10008DB18(v117, &qword_1009665E0);
  sub_1000A06C0(v89, v88, v90);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v116, v120, v122);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_1000A01A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v60 = (char *)&v54 - v10;
  uint64_t v11 = type metadata accessor for AxisValue();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for MetricCardBarChartView();
  uint64_t v15 = a1;
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(v59 + 32));
  uint64_t v17 = *v16;
  int v18 = *((unsigned __int8 *)v16 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if (v18 != 1 || v17 != 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_8;
  }
  uint64_t v20 = AxisValue.index.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v20 != 4)
  {
LABEL_8:
    uint64_t v57 = v7;
    uint64_t v58 = a4;
    uint64_t v56 = v15;
    *(void *)&long long v66 = sub_1000A1504();
    *((void *)&v66 + 1) = v21;
    sub_1000A06D0();
    uint64_t v22 = Text.init<A>(_:)();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    *(void *)&long long v66 = static Color.white.getter();
    uint64_t v27 = Text.foregroundStyle<A>(_:)();
    uint64_t v29 = v28;
    char v31 = v30;
    sub_1000A06C0(v22, v24, v26);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_10094A738 != -1) {
      swift_once();
    }
    char v32 = v31 & 1;
    uint64_t v55 = Text.font(_:)();
    uint64_t v34 = v33;
    uint64_t v54 = v35;
    uint64_t v37 = v36 & 1;
    sub_1000A06C0(v27, v29, v32);
    swift_bridgeObjectRelease();
    uint64_t v38 = v60;
    uint64_t v39 = v56 + *(int *)(v59 + 44);
    uint64_t v40 = *v16;
    int v41 = *((unsigned __int8 *)v16 + 8);
    uint64_t v42 = v61;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    uint64_t v44 = v57;
    v43(v60, v62, v57);
    v43(v63, v39, v44);
    if (v41 == 1 && v40 == 1)
    {
      sub_100086394((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v45 = v63;
      char v46 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
      v47(v45, v44);
      v47(v38, v44);
      a4 = v58;
      if ((v46 & 1) == 0)
      {
        uint64_t v48 = 0x3FF0000000000000;
LABEL_16:
        *(void *)&long long v64 = v55;
        *((void *)&v64 + 1) = v34;
        v65[0] = v37;
        v65[1] = v54;
        v65[2] = v48;
        LOBYTE(v65[3]) = 1;
        sub_1000AFA94(&qword_10094E310);
        sub_1000A0724();
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
      v49(v63, v44);
      v49(v38, v44);
      a4 = v58;
    }
    uint64_t v48 = 0x3FD3333333333333;
    goto LABEL_16;
  }
  long long v64 = 0u;
  memset(v65, 0, 25);
  sub_1000AFA94(&qword_10094E310);
  sub_1000A0724();
LABEL_17:
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v66;
  long long v51 = v67;
  uint64_t v52 = v68;
  char v53 = v69;
  *(_OWORD *)a4 = v66;
  *(_OWORD *)(a4 + 16) = v51;
  *(void *)(a4 + 32) = v52;
  *(unsigned char *)(a4 + 40) = v53;
  return result;
}

uint64_t sub_1000A06C0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1000A06D0()
{
  unint64_t result = qword_100963400;
  if (!qword_100963400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100963400);
  }
  return result;
}

unint64_t sub_1000A0724()
{
  unint64_t result = qword_10094E318;
  if (!qword_10094E318)
  {
    sub_1000A1370(&qword_10094E310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094E318);
  }
  return result;
}

uint64_t sub_1000A0798@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v69 = a1;
  uint64_t v77 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_1009530C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v74 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100953100);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v73 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v72 = (char *)&v61 - v7;
  uint64_t v8 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AxisTick();
  uint64_t v71 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v61 - v14;
  uint64_t v15 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v15 - 8);
  long long v67 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v17 - 8);
  long long v66 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_1009530F0);
  uint64_t v68 = *(void *)(v75 - 8);
  uint64_t v19 = __chkstk_darwin(v75);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v61 - v23;
  __chkstk_darwin(v22);
  char v26 = (char *)&v61 - v25;
  uint64_t v27 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_10008DB18((uint64_t)v29, (uint64_t *)&unk_10095B890);
    uint64_t v34 = sub_1000AFA94(&qword_1009530E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v77, 1, 1, v34);
  }
  else
  {
    uint64_t v65 = v21;
    long long v64 = v13;
    uint64_t v63 = v31;
    char v36 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v62 = v30;
    v36(v33, v29, v30);
    uint64_t v37 = type metadata accessor for MetricCardBarChartView();
    uint64_t v38 = &v69[*(int *)(v37 + 32)];
    __chkstk_darwin(v37);
    char v69 = v33;
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v59 = sub_1000AFA94(&qword_100953108);
    unint64_t v60 = sub_1000A10C4();
    uint64_t v57 = sub_1000DB5F0;
    uint64_t v58 = &v55;
    char v56 = 1;
    uint64_t v55 = 0;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    uint64_t v39 = v68;
    uint64_t v40 = v26;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v26, v24, v75);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    long long v88 = v79;
    long long v89 = v80;
    uint64_t v90 = v81;
    static AxisTick.Length.automatic.getter();
    AxisTick.init(centered:length:stroke:)();
    uint64_t v41 = v39;
    if (v38[8] == 1 && *(void *)v38 == 1)
    {
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
      long long v85 = v82;
      long long v86 = v83;
      uint64_t v87 = v84;
      uint64_t v42 = (uint64_t)v72;
      AxisGridLine.init(centered:stroke:)();
      uint64_t v43 = type metadata accessor for AxisGridLine();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
    }
    else
    {
      uint64_t v44 = type metadata accessor for AxisGridLine();
      uint64_t v42 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v72, 1, 1, v44);
    }
    uint64_t v45 = (uint64_t)v73;
    uint64_t v46 = v71;
    uint64_t v47 = v64;
    uint64_t v48 = v65;
    uint64_t v49 = v75;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v65, v40, v75);
    v78[0] = v48;
    uint64_t v50 = v76;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v47, v76, v10);
    v78[1] = v47;
    sub_1000AEF2C(v42, v45, &qword_100953100);
    v78[2] = v45;
    uint64_t v51 = v74;
    sub_1000A1140(v78, v74);
    sub_10008DB18(v42, &qword_100953100);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v46 + 8);
    v52(v50, v10);
    char v53 = *(void (**)(char *, uint64_t))(v41 + 8);
    v53(v40, v49);
    sub_10008DB18(v45, &qword_100953100);
    v52(v47, v10);
    v53(v65, v49);
    uint64_t v54 = sub_1000AFA94(&qword_1009530E0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v51, 0, 1, v54);
    sub_1000AEEC8(v51, v77, &qword_1009530C8);
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v69, v62);
  }
}

unint64_t sub_1000A10C4()
{
  unint64_t result = qword_100953110;
  if (!qword_100953110)
  {
    sub_1000A1370(&qword_100953108);
    sub_1000A0724();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100953110);
  }
  return result;
}

uint64_t sub_1000A1140@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100969558);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009530F0);
  sub_1000A132C(&qword_1009530E8, &qword_1009530F0);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  uint64_t v10 = type metadata accessor for AxisTick();
  uint64_t v11 = &v7[*(int *)(v5 + 56)];
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v11, a1[1], v10);
  sub_1000A13B8();
  uint64_t v13 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_1000AEF2C(a1[2], v13, &qword_100953100);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2 + *(int *)(v5 + 56), v11, v10);
  return sub_1000AEEC8(v13, a2 + *(int *)(v5 + 72), &qword_100953100);
}

uint64_t sub_1000A132C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A1370(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000A13B8()
{
  unint64_t result = qword_1009530F8;
  if (!qword_1009530F8)
  {
    sub_1000A1370(&qword_100953100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009530F8);
  }
  return result;
}

uint64_t sub_1000A1424(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for MetricCardBarChartView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t type metadata accessor for MetricCardBarChartView()
{
  uint64_t result = qword_100952FA8;
  if (!qword_100952FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A1504()
{
  uint64_t v1 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date.FormatStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetricCardBarChartView();
  uint64_t v10 = v0 + *(int *)(v9 + 32);
  if (*(unsigned char *)(v10 + 8) == 1 && *(void *)v10 == 1)
  {
    static Date.FormatStyle.Symbol.Weekday.narrow.getter();
    Date.FormatStyle.weekday(_:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_100086394(&qword_100953118, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    Date.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v16;
  }
  else
  {
    uint64_t v12 = *(void **)(v0 + *(int *)(v9 + 56));
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v14 = [v12 stringFromDate:isa];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v11;
}

uint64_t sub_1000A1750(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000A1760(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A06C0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000A17A4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000A1750(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000A17E8(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  if ((a4 & (a3 == 0)) != 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = a2 + 1;
  }
  if (((1 << a1) & 0x2224471F80) != 0) {
    uint64_t v11 = a2 + 1;
  }
  else {
    uint64_t v11 = v10;
  }
  if (((1 << a1) & 0x5DDBB8E070) != 0) {
    uint64_t v11 = a2;
  }
  uint64_t v15 = *v11;
  char v16 = *((unsigned char *)a2 + *(int *)(type metadata accessor for MetricDetailViewModel() + 40));
  id v17 = v15;
  sub_1000A18EC(v15, a1, a5, a6 & 1, a7, 0, (v16 & 1) == 0, a8);
}

id sub_1000A18EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  LODWORD(v231) = a7;
  int v225 = a6;
  int v226 = a4;
  uint64_t v230 = a2;
  uint64_t v14 = sub_1000AFA94(&qword_1009610A8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v217 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AttributeContainer();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v217 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v25 = (char *)&v217 - v24;
  if (a1)
  {
    uint64_t v223 = v9;
    uint64_t v224 = a5;
    uint64_t v227 = a8;
    uint64_t v26 = v22;
    uint64_t v27 = v23;
    id v229 = a1;
    AttributeContainer.init()();
    uint64_t KeyPath = swift_getKeyPath();
    *(&v217 - 2) = (id)__chkstk_darwin(KeyPath);
    swift_getKeyPath();
    sub_1000AA6A0();
    AttributeContainer.subscript.getter();
    swift_release();
    uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
    uint64_t v228 = v26;
    uint64_t v30 = v26;
    uint64_t v31 = v29;
    v29(v21, v30);
    uint64_t v222 = a3;
    uint64_t v232 = a3;
    AttributeContainer.Builder.callAsFunction(_:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v231)
    {
      uint64_t v32 = swift_getKeyPath();
      *(&v217 - 2) = (id)__chkstk_darwin(v32);
      swift_getKeyPath();
      uint64_t v232 = v224;
      sub_1000A5D60();
      swift_retain();
      AttributeContainer.subscript.setter();
      id v33 = [self mainBundle];
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [v33 localizedStringForKey:v34 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v228;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v21, v25, v228);
      AttributedString.init(_:attributes:)();

      return (id)v31(v25, v36);
    }
    else
    {
      uint64_t v221 = v25;
      uint64_t v231 = v31;
      uint64_t v41 = 1;
      id v42 = v229;
      char v43 = v230;
      uint64_t v44 = v223;
      switch((char)v230)
      {
        case 1:
        case 3:
        case 4:
        case 19:
        case 23:
        case 30:
        case 34:
          goto LABEL_8;
        case 5:
        case 14:
        case 20:
        case 24:
        case 28:
        case 31:
        case 35:
          id v63 = [self secondUnit];
          [v42 doubleValueForUnit:v63];

          uint64_t v64 = static Duration.seconds(_:)();
          uint64_t v66 = v64;
          long long v67 = (void (*)(char *, char *, uint64_t))v65;
          if (v225)
          {
            if ([v42 _isZero])
            {
              uint64_t v68 = static Color.secondary.getter();
              uint64_t v69 = 0;
            }
            else
            {
              uint64_t v68 = static Color.white.getter();
              sub_1000A3E18(v43);
              uint64_t v69 = Color.init(uiColor:)();
            }
            swift_retain();
            sub_1005260F0(v66, v67, v222, v226 & 1, v68, v69, v227);
            swift_release_n();

            swift_release();
          }
          else
          {
            sub_100527048(v64, v65, v222, v226 & 1, v224, v227);
          }
          return (id)v231(v221, v228);
        case 6:
        case 15:
        case 21:
        case 25:
        case 32:
        case 36:
          id v70 = [self meterUnit];
          [v42 doubleValueForUnit:v70];
          double v72 = v71;

          id v73 = *v44;
          id result = [*v44 unitManager];
          if (!result) {
            goto LABEL_101;
          }
          uint64_t v74 = result;
          id v75 = [result userDistanceElevationUnit];

          id v76 = [v73 localizedStringWithDistanceInMeters:5 distanceType:0 unitStyle:v72];
          uint64_t v52 = v231;
          if (!v76) {
            goto LABEL_36;
          }
          uint64_t v77 = v76;
          char v54 = v43;
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v78;

          id v79 = [v73 localizedShortUnitStringForDistanceUnit:v75 textCase:1];
          if (!v79) {
            goto LABEL_40;
          }
          long long v80 = v79;
          uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v83 = v82;

          uint64_t v232 = v81;
LABEL_34:
          uint64_t v233 = v83;
          sub_1000A06D0();
          uint64_t v60 = StringProtocol.localizedUppercase.getter();
          uint64_t v62 = v120;
          swift_bridgeObjectRelease();
          if ((v225 & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_82;
        case 7:
        case 22:
        case 26:
        case 33:
        case 37:
          goto LABEL_53;
        case 8:
        case 17:
          id v96 = [self localizedShortPowerUnitString];
          if (!v96) {
            goto LABEL_90;
          }
          int v97 = v96;
          char v54 = v43;
          uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v100 = v99;

          unsigned int v101 = self;
          [v42 _value];
          id v103 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v102];
          id v104 = [v101 localizedStringFromNumber:v103 numberStyle:0];

          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v105;

          uint64_t v232 = v98;
          uint64_t v233 = v100;
          sub_1000A06D0();
          uint64_t v60 = StringProtocol.localizedUppercase.getter();
          uint64_t v62 = v106;
          swift_bridgeObjectRelease();
          goto LABEL_96;
        case 9:
        case 18:
          uint64_t v107 = sub_10071BB18(v230);
          if (v108) {
            goto LABEL_90;
          }
          id v109 = [self localizedShortCadenceUnitStringForActivityType:v107];
          uint64_t v52 = v231;
          if (!v109) {
            goto LABEL_36;
          }
          uint64_t v110 = v109;
          char v54 = v43;
          uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v83 = v112;

          id v113 = [self _countPerMinuteUnit];
          [v42 doubleValueForUnit:v113];
          double v115 = v114;

          uint64_t v116 = self;
          id v117 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v115];
          id v118 = [v116 localizedStringFromNumber:v117 numberStyle:0];

          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v119;

          uint64_t v232 = v111;
          goto LABEL_34;
        case 10:
          id v121 = sub_1000C4F40(10);
          [v42 doubleValueForUnit:v121];
          double v123 = v122;

          uint64_t v124 = self;
          id v125 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v123];
          id v126 = [v124 stringWithNumber:v125 decimalPrecision:1];

          if (!v126) {
            goto LABEL_90;
          }
          char v54 = v43;
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v127;

          id v128 = [self mainBundle];
          NSString v129 = String._bridgeToObjectiveC()();
          id v130 = [v128 localizedStringForKey:v129 value:0 table:0];

          uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v131;

          goto LABEL_96;
        case 11:
          id v132 = sub_1000C4F40(11);
          [v42 doubleValueForUnit:v132];
          double v134 = v133;

          id v135 = [*v44 localizedStringWithDistanceInMeters:1 distanceUnit:0 unitStyle:2 decimalPrecision:v134];
          if (!v135) {
            goto LABEL_90;
          }
          uint64_t v136 = v135;
          char v54 = v43;
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v137;

          id v138 = [*(id *)((char *)v44 + *(int *)(type metadata accessor for MetricFormattingHelper() + 24)) unitStringFromValue:9 unit:100.0];
          uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v139;

          goto LABEL_96;
        case 12:
          id v140 = sub_1000C4F40(12);
          [v42 doubleValueForUnit:v140];
          double v142 = v141;

          id v143 = *v44;
          id v144 = [*v44 localizedShortUnitStringForDistanceUnit:1];
          if (!v144)
          {
LABEL_90:

            goto LABEL_91;
          }
          uint64_t v145 = v144;
          uint64_t v218 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v146;

          id v147 = [v143 localizedStringWithDistanceInMeters:1 distanceUnit:0 unitStyle:2 decimalPrecision:v142];
          uint64_t v52 = v231;
          if (!v147)
          {
LABEL_40:
            swift_bridgeObjectRelease();

            goto LABEL_92;
          }
          id v148 = v147;
          char v54 = v43;
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v149;

          goto LABEL_81;
        case 13:
          uint64_t v41 = 2;
          goto LABEL_8;
        case 16:
          uint64_t v41 = 2;
          goto LABEL_53;
        case 27:
          uint64_t v41 = 3;
LABEL_8:
          id v45 = [self meterUnit];
          [v42 doubleValueForUnit:v45];
          double v47 = v46;

          id v48 = *v44;
          id result = [*v44 unitManager];
          if (!result)
          {
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
            goto LABEL_102;
          }
          uint64_t v49 = result;
          id v50 = [result userDistanceUnitForDistanceType:v41];

          id v51 = [v48 localizedStringWithDistanceInMeters:v50 distanceUnit:0 unitStyle:0 decimalPrecision:[self defaultPrecisionForDistanceUnit:v50] roundingMode:2 decimalTrimmingMode:1];
          uint64_t v52 = v231;
          if (!v51)
          {
LABEL_36:

            goto LABEL_92;
          }
          char v53 = v51;
          char v54 = v43;
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v57 = v56;

          id v58 = [v48 localizedShortUnitStringForDistanceUnit:v50 textCase:1];
          if (!v58)
          {

            swift_bridgeObjectRelease();
            goto LABEL_92;
          }
          uint64_t v59 = v58;
          uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v61;

          if (v225) {
            goto LABEL_82;
          }
          goto LABEL_12;
        case 29:
          uint64_t v41 = 3;
LABEL_53:
          uint64_t v220 = v27 + 8;
          id v150 = *v223;
          id result = [*v223 unitManager];
          if (!result) {
            goto LABEL_100;
          }
          uint64_t v151 = result;
          id v152 = [result paceDistanceUnitForDistanceType:v41];

          uint64_t v153 = FIUIPaceFormatForDistanceType();
          uint64_t v154 = sub_10071BB18(v43);
          id v217 = v150;
          uint64_t v219 = v153;
          if (v153 == 4)
          {
            id v156 = [v150 localizedSpeedUnitStringForDistanceType:v41 unitStyle:1];
            if (v156)
            {
              uint64_t v157 = v156;
              uint64_t v218 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v62 = v158;
              swift_bridgeObjectRelease();

              goto LABEL_74;
            }
          }
          else
          {
            if ((v155 & 1) != 0 || v154 != 46)
            {
              id v166 = [v150 localizedShortUnitStringForDistanceUnit:v152];
              if (!v166) {
                goto LABEL_73;
              }
              id v160 = v166;
              uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v165 = v167;
            }
            else
            {
              id result = [v150 unitManager];
              if (!result)
              {
LABEL_102:
                __break(1u);
                return result;
              }
              uint64_t v159 = result;
              id v160 = [result userLapLengthHKUnit];

              id v161 = [v150 localizedShortUnitStringForDistanceUnit:FIUIDistanceUnitForHKUnit()];
              if (!v161)
              {

                goto LABEL_73;
              }
              uint64_t v162 = v161;
              uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v165 = v164;
            }
            if ((unint64_t)(v153 - 2) < 2)
            {
              swift_bridgeObjectRelease();
              uint64_t v168 = FIUINumberOfUnitsInPaceForPaceFormat();
              uint64_t v169 = v163;
              id v170 = [self mainBundle];
              NSString v171 = String._bridgeToObjectiveC()();
              id v172 = [v170 localizedStringForKey:v171 value:0 table:0];

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              sub_1000AFA94((uint64_t *)&unk_1009546D0);
              uint64_t v173 = swift_allocObject();
              *(_OWORD *)(v173 + 16) = xmmword_10074E640;
              id v174 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v168];
              *(void *)(v173 + 56) = sub_1003B1708();
              *(void *)(v173 + 64) = sub_1001DCC84();
              *(void *)(v173 + 32) = v174;
              *(void *)(v173 + 96) = &type metadata for String;
              *(void *)(v173 + 104) = sub_1000AA64C();
              *(void *)(v173 + 72) = v169;
              *(void *)(v173 + 80) = v165;
              uint64_t v218 = String.init(format:_:)();
              uint64_t v62 = v175;
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
            if (v153 == 1)
            {
              swift_bridgeObjectRelease();
              id v176 = [self mainBundle];
              uint64_t v177 = v163;
              NSString v178 = String._bridgeToObjectiveC()();
              id v179 = [v176 localizedStringForKey:v178 value:0 table:0];

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              sub_1000AFA94((uint64_t *)&unk_1009546D0);
              uint64_t v180 = swift_allocObject();
              *(_OWORD *)(v180 + 16) = xmmword_1007509E0;
              uint64_t v232 = v177;
              uint64_t v233 = v165;
              sub_1000A06D0();
              uint64_t v181 = StringProtocol.localizedUppercase.getter();
              uint64_t v183 = v182;
              swift_bridgeObjectRelease();
              *(void *)(v180 + 56) = &type metadata for String;
              *(void *)(v180 + 64) = sub_1000AA64C();
              *(void *)(v180 + 32) = v181;
              *(void *)(v180 + 40) = v183;
              uint64_t v218 = String.init(format:_:)();
              uint64_t v62 = v184;
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
            swift_bridgeObjectRelease();
          }
LABEL_73:
          uint64_t v218 = 0;
          uint64_t v62 = (void *)0xE000000000000000;
LABEL_74:
          uint64_t v190 = self;
          id v191 = [v190 secondUnit];
          id v192 = [v190 meterUnit];
          id v193 = [v191 unitDividedByUnit:v192];

          [v42 doubleValueForUnit:v193];
          double v195 = v194;

          uint64_t v196 = v219;
          if (v219 == 4 && (*(void *)&v195 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          {
            char v54 = v43;
            id v201 = [self mainBundle];
            NSString v202 = String._bridgeToObjectiveC()();
            id v203 = [v201 localizedStringForKey:v202 value:0 table:0];

            uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v57 = v204;
          }
          else
          {
            id v197 = [v190 meterUnit:v217];
            id v198 = [self quantityWithUnit:v197 doubleValue:1.0];

            id v199 = [v217 localizedPaceStringWithDistance:v198 overDuration:v196 paceFormat:v41 distanceType:v195];
            if (!v199)
            {
              swift_bridgeObjectRelease();

              uint64_t v44 = v223;
              v231(v221, v228);
              goto LABEL_93;
            }
            char v54 = v43;
            uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v57 = v200;
          }
          uint64_t v52 = v231;
LABEL_81:
          uint64_t v60 = v218;
          if (v225)
          {
LABEL_82:
            if (objc_msgSend(v42, "_isZero", v217))
            {
              uint64_t v205 = static Color.secondary.getter();
              uint64_t v206 = 0;
            }
            else
            {
              uint64_t v205 = static Color.white.getter();
              sub_1000A3E18(v54);
              uint64_t v206 = Color.init(uiColor:)();
            }
            swift_retain();
            if (v226)
            {
              sub_100528968(v55, (uint64_t)v57, v60, v62, v222, v205, v206, v227);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
            }
            else
            {
              sub_100527F64(v55, v57, v60, v62, v222, v205, v206, v227);
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }

            swift_release();
          }
          else
          {
LABEL_12:
            if (v226) {
              sub_100527CE8(v55, (uint64_t)v57, v60, (uint64_t)v62, v222, v224);
            }
            else {
              sub_1000A9F54(v55, (uint64_t)v57, v60, (uint64_t)v62, v222, v224, v227);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          id result = (id)v52(v221, v228);
          break;
        case 38:
          char v54 = v230;
          id v185 = [self minuteUnit];
          [v42 doubleValueForUnit:v185];

          v186.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
          id v187 = [self stringWithNumber:v186.super.super.isa decimalPrecision:1 roundingMode:6];
          if (v187)
          {
            double v188 = v187;
            uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v57 = v189;
          }
          else
          {
            uint64_t v57 = (void *)0xE100000000000000;
            uint64_t v55 = 48;
          }
          id v209 = [self mainBundle];
          NSString v210 = String._bridgeToObjectiveC()();
          id v211 = [v209 localizedStringForKey:v210 value:0 table:0];

          uint64_t v212 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v214 = v213;

          uint64_t v232 = v212;
          uint64_t v233 = v214;
          sub_1000A06D0();
          uint64_t v215 = StringProtocol.localizedUppercase.getter();
          uint64_t v62 = v216;
          swift_bridgeObjectRelease();

          uint64_t v60 = v215;
LABEL_96:
          uint64_t v52 = v231;
          if ((v225 & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_82;
        default:
          id v84 = [self countUnit];
          [v42 doubleValueForUnit:v84];
          double v86 = v85;

          if (qword_10094AE18 != -1) {
            swift_once();
          }
          uint64_t v87 = (void *)qword_100961008;
          id v88 = objc_allocWithZone((Class)NSNumber);
          id v89 = v87;
          id v90 = [v88 initWithDouble:v86];
          id v91 = [v89 stringFromNumber:v90];

          if (v91)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v92 = swift_getKeyPath();
            *(&v217 - 2) = (id)__chkstk_darwin(v92);
            swift_getKeyPath();
            uint64_t v232 = v224;
            sub_1000A5D60();
            swift_retain();
            uint64_t v93 = v221;
            AttributeContainer.subscript.setter();
            uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
            uint64_t v95 = v228;
            v94(v21, v93, v228);
            AttributedString.init(_:attributes:)();

            return (id)v231(v93, v95);
          }
          else
          {

LABEL_91:
            uint64_t v52 = v231;
LABEL_92:
            v52(v221, v228);
LABEL_93:
            uint64_t v207 = (char *)v44 + *(int *)(type metadata accessor for MetricFormattingHelper() + 20);
            uint64_t v208 = type metadata accessor for AttributedString();
            return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v208 - 8) + 16))(v227, v207, v208);
          }
      }
    }
  }
  else
  {
    uint64_t v38 = (char *)v9 + *(int *)(type metadata accessor for MetricFormattingHelper() + 20);
    uint64_t v39 = type metadata accessor for AttributedString();
    uint64_t v40 = *(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    return (id)v40(a8, v38, v39);
  }
  return result;
}

uint64_t sub_1000A30B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = (int *)type metadata accessor for MetricCardLineChartView();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_1009665F0);
  uint64_t v6 = __chkstk_darwin(v61);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v59 = sub_1000AFA94(&qword_1009665F8);
  __chkstk_darwin(v59);
  uint64_t v60 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  __chkstk_darwin(v12);
  uint64_t v55 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MetricFormattingHelper();
  __chkstk_darwin(v14 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for MetricCardBarChartView();
  __chkstk_darwin(v54);
  id v17 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_1000AFA94(&qword_100966600);
  uint64_t v18 = __chkstk_darwin(v58);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v50 - v21;
  uint64_t v23 = type metadata accessor for MetricCardView();
  uint64_t v24 = v23;
  unsigned int v25 = *(unsigned __int8 *)(a1 + *(int *)(v23 + 24));
  if (v25 <= 0x11 && ((1 << v25) & 0x21D00) != 0)
  {
    uint64_t v26 = a1 + *(int *)(v23 + 20);
    uint64_t v27 = v26 + *(int *)(type metadata accessor for MetricCard() + 36);
    uint64_t v28 = *(void *)(v27 + 16);
    swift_bridgeObjectRetain();
    sub_1000A3E18(v25);
    uint64_t v29 = Color.init(uiColor:)();
    sub_1000A3708(a1 + *(int *)(v24 + 36), (uint64_t)&v5[v3[7]], (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
    uint64_t v30 = *(void *)(v27 + 32);
    char v31 = *(unsigned char *)(v27 + 40);
    uint64_t v32 = type metadata accessor for MetricDetailViewModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(&v5[v3[9]], v27 + *(int *)(v32 + 44), v57);
    *uint64_t v5 = v25;
    *((void *)v5 + 1) = v28;
    *((void *)v5 + 2) = v29;
    id v33 = &v5[v3[8]];
    *(void *)id v33 = v30;
    v33[8] = v31;
    sub_1000A3B18(&qword_100966620, (void (*)(uint64_t))type metadata accessor for MetricCardLineChartView);
    View.accessibilityHidden(_:)();
    sub_10009D28C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MetricCardLineChartView);
    NSString v34 = &qword_1009665F0;
    sub_1000AEEC8((uint64_t)v8, (uint64_t)v10, &qword_1009665F0);
    sub_1000AEF2C((uint64_t)v10, v60, &qword_1009665F0);
    swift_storeEnumTagMultiPayload();
    sub_1000A43E4();
    sub_1000A4308();
    _ConditionalContent<>.init(storage:)();
    uint64_t v35 = (uint64_t)v10;
  }
  else
  {
    uint64_t v37 = a1 + *(int *)(v23 + 20);
    uint64_t v38 = type metadata accessor for MetricCard();
    uint64_t v39 = *(int *)(v38 + 36);
    uint64_t v52 = v22;
    uint64_t v40 = v37 + v39;
    uint64_t v41 = *(void *)(v37 + v39 + 16);
    swift_bridgeObjectRetain();
    sub_1000A3E18(v25);
    uint64_t v51 = Color.init(uiColor:)();
    uint64_t v42 = v53;
    sub_1000A3708(a1 + *(int *)(v24 + 36), v53, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
    uint64_t v43 = *(void *)(v40 + 32);
    char v44 = *(unsigned char *)(v40 + 40);
    v63[3] = v38;
    v63[4] = (uint64_t)&off_1008D3128;
    id v45 = sub_1000B1710(v63);
    sub_1000A3708(v37, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MetricCard);
    uint64_t v46 = type metadata accessor for MetricDetailViewModel();
    uint64_t v47 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v40 + *(int *)(v46 + 44), v57);
    sub_1000A44C0(v25, v41, v51, v42, v43, v44, (uint64_t)v63, v47, v17);
    sub_1000A3B18(&qword_100966608, (void (*)(uint64_t))type metadata accessor for MetricCardBarChartView);
    View.accessibilityHidden(_:)();
    sub_10009D28C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MetricCardBarChartView);
    NSString v34 = &qword_100966600;
    uint64_t v48 = (uint64_t)v20;
    uint64_t v49 = (uint64_t)v52;
    sub_1000AEEC8(v48, (uint64_t)v52, &qword_100966600);
    sub_1000AEF2C(v49, v60, &qword_100966600);
    swift_storeEnumTagMultiPayload();
    sub_1000A43E4();
    sub_1000A4308();
    _ConditionalContent<>.init(storage:)();
    uint64_t v35 = v49;
  }
  return sub_10008DB18(v35, v34);
}

uint64_t sub_1000A3708(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A3770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v18 = *(void **)(a2 + v14);
  id v17 = *(void **)(a2 + v14 + 8);
  *(void *)uint64_t v15 = v18;
  *(void *)(v15 + 8) = v17;
  uint64_t v19 = *(void *)(a2 + v14 + 24);
  *(void *)(v15 + 16) = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 24) = v19;
  *(void *)(v15 + 32) = *(void *)(a2 + v14 + 32);
  *(unsigned char *)(v15 + 40) = *(unsigned char *)(a2 + v14 + 40);
  uint64_t v20 = type metadata accessor for MetricDetailViewModel();
  uint64_t v21 = *(int *)(v20 + 36);
  __dst = (void *)(v15 + v21);
  uint64_t v38 = v20;
  uint64_t v22 = (const void *)(v16 + v21);
  uint64_t v23 = type metadata accessor for DateInterval();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  id v25 = v18;
  id v26 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v22, 1, v23))
  {
    uint64_t v27 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v22, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(unsigned char *)(v15 + *(int *)(v38 + 40)) = *(unsigned char *)(v16 + *(int *)(v38 + 40));
  uint64_t v28 = *(int *)(v38 + 44);
  uint64_t v29 = v15 + v28;
  uint64_t v30 = v16 + v28;
  uint64_t v31 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = v39[11];
  *(unsigned char *)(a1 + v39[10]) = *(unsigned char *)(v40 + v39[10]);
  id v33 = *(void **)(v40 + v32);
  *(void *)(a1 + v32) = v33;
  id v34 = v33;
  return a1;
}

uint64_t sub_1000A39F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3A40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3AD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3B18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3BA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricDetailViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A3C54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = a3[9];
  __dst = (void *)(a1 + v9);
  uint64_t v21 = (const void *)(a2 + v9);
  *(void *)(a1 + 16) = v7;
  uint64_t v10 = type metadata accessor for DateInterval();
  uint64_t v11 = *(void *)(v10 - 8);
  char v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  id v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v21, 1, v10))
  {
    uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(__dst, v21, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v21, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

id sub_1000A3E18(char a1)
{
  switch(a1)
  {
    case 1:
    case 3:
      id result = [self distanceColors];
      if (!result) {
        goto LABEL_26;
      }
      uint64_t v17 = result;
      id v3 = [result nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
      goto LABEL_17;
    case 4:
    case 11:
    case 12:
    case 13:
    case 19:
    case 23:
    case 27:
    case 30:
    case 34:
      id result = [self distanceColors];
      if (!result)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v2 = result;
      id v3 = [result nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_5:
      id result = [self elapsedTimeColors];
      if (!result) {
        goto LABEL_24;
      }
      uint64_t v4 = result;
      id v3 = [result nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_8:
      id result = [self paceColors];
      if (result)
      {
        uint64_t v5 = result;
        id v3 = [result nonGradientTextColor];

        if (!v3)
        {
          __break(1u);
LABEL_11:
          id v6 = [self elevationColors];
          id v3 = [v6 nonGradientTextColor];

          if (!v3)
          {
            __break(1u);
LABEL_13:
            sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
            Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.59216, 0.4902, 0.88235, 1.0).super.isa;
            Class v8 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.76078, 0.63137, 1.0, 1.0).super.isa;
            uint64_t v9 = (objc_class *)type metadata accessor for GradientColors();
            uint64_t v10 = (char *)objc_allocWithZone(v9);
            *(void *)&v10[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
            *(void *)&v10[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v8;
            v21.receiver = v10;
            v21.super_class = v9;
            [super init];
            Class v12 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.63529, 0.5451, 0.88235, 1.0).super.isa;
            id v13 = (objc_class *)type metadata accessor for MetricColors();
            id v14 = (char *)objc_allocWithZone(v13);
            *(void *)&v14[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v11;
            *(void *)&v14[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v12;
            v20.receiver = v14;
            v20.super_class = v13;
            uint64_t v15 = (char *)[super init];
            id v16 = *(id *)&v15[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

            return v16;
          }
        }
        return v3;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    case 5:
    case 10:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
      goto LABEL_5;
    case 6:
    case 15:
    case 21:
    case 25:
    case 32:
    case 36:
      goto LABEL_11;
    case 7:
    case 16:
    case 22:
    case 26:
    case 29:
    case 33:
    case 37:
      goto LABEL_8;
    case 8:
    case 17:
LABEL_17:
      id v18 = [self powerColors];
      id v3 = [v18 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_19:
      id v19 = [self cadenceColors];
      id v3 = [v19 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_21:
      id result = [self fiui_meditationTeal];
      id v3 = result;
      if (result) {
        return v3;
      }
      goto LABEL_27;
    case 9:
    case 18:
      goto LABEL_19;
    case 38:
      goto LABEL_21;
    default:
      goto LABEL_13;
  }
}

void **sub_1000A4208(void **a1, void **a2, uint64_t a3)
{
  id v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  Class v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v14;
  id v15 = v14;
  return a1;
}

uint64_t type metadata accessor for MetricCardLineChartView()
{
  uint64_t result = qword_10095CF98;
  if (!qword_10095CF98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000A4308()
{
  unint64_t result = qword_100966618;
  if (!qword_100966618)
  {
    sub_1000A1370(&qword_1009665F0);
    sub_1000A3B18(&qword_100966620, (void (*)(uint64_t))type metadata accessor for MetricCardLineChartView);
    sub_1000A3B18((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966618);
  }
  return result;
}

unint64_t sub_1000A43E4()
{
  unint64_t result = qword_100966610;
  if (!qword_100966610)
  {
    sub_1000A1370(&qword_100966600);
    sub_1000A3B18(&qword_100966608, (void (*)(uint64_t))type metadata accessor for MetricCardBarChartView);
    sub_1000A3B18((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966610);
  }
  return result;
}

uint64_t sub_1000A44C0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v73 = a8;
  uint64_t v85 = a2;
  uint64_t v86 = a7;
  LODWORD(v81) = a1;
  int v13 = a6 & 1;
  uint64_t v14 = type metadata accessor for AxisMarkValues();
  uint64_t v83 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Locale.Language();
  uint64_t v78 = *(void *)(v16 - 8);
  uint64_t v79 = v16;
  __chkstk_darwin(v16);
  uint64_t v77 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100952F38);
  __chkstk_darwin(v18 - 8);
  id v76 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v20 - 8);
  double v71 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TimeZone();
  __chkstk_darwin(v22 - 8);
  uint64_t v69 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Calendar();
  __chkstk_darwin(v24 - 8);
  long long v67 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for Locale();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v26 = __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v66 = (char *)&v64 - v28;
  uint64_t v29 = sub_1000AFA94(&qword_100952F40);
  __chkstk_darwin(v29 - 8);
  uint64_t v65 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_100952F48);
  __chkstk_darwin(v31 - 8);
  id v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Calendar.Component();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v64 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = (int *)type metadata accessor for MetricCardBarChartView();
  *((unsigned char *)a9 + v38[5]) = v81;
  *(uint64_t *)((char *)a9 + v38[6]) = v85;
  *(uint64_t *)((char *)a9 + v38[7]) = a3;
  uint64_t v39 = (uint64_t)a9 + v38[9];
  uint64_t v85 = a4;
  sub_100086C18(a4, v39, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  uint64_t v40 = (char *)a9 + v38[8];
  *(void *)uint64_t v40 = a5;
  v40[8] = v13;
  sub_10008E75C(v86, (uint64_t)a9 + v38[10]);
  uint64_t v41 = (char *)a9 + v38[11];
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v74 = *(void *)(v42 - 8);
  uint64_t v75 = v42;
  uint64_t v43 = v41;
  uint64_t v44 = v73;
  (*(void (**)(char *, uint64_t))(v74 + 16))(v43, v73);
  uint64_t v81 = a5;
  id v45 = *(void (**)(char *, void, uint64_t))(v35 + 104);
  uint64_t v46 = (unsigned int *)&enum case for Calendar.Component.day(_:);
  int v80 = v13;
  if ((v13 & (a5 == 1)) == 0) {
    uint64_t v46 = (unsigned int *)&enum case for Calendar.Component.hour(_:);
  }
  v45(v37, *v46, v34);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))((char *)a9 + v38[12], v37, v34);
  uint64_t v47 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v33, 1, 1, v47);
  uint64_t v48 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v65, 1, 1, v48);
  swift_retain();
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  id v49 = [objc_allocWithZone((Class)NSDateFormatter) init];
  uint64_t v50 = v38[14];
  *(uint64_t *)((char *)a9 + v50) = (uint64_t)v49;
  uint64_t v51 = v68;
  static Locale.current.getter();
  uint64_t v52 = v77;
  Locale.language.getter();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v72);
  uint64_t v53 = (uint64_t)v76;
  Locale.Language.languageCode.getter();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v79);
  uint64_t v54 = type metadata accessor for Locale.LanguageCode();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    sub_10008DB18(v53, &qword_100952F38);
  }
  else
  {
    uint64_t v56 = v53;
    uint64_t v57 = Locale.LanguageCode.identifier.getter();
    uint64_t v59 = v58;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v54);
    uint64_t v89 = v57;
    uint64_t v90 = v59;
    uint64_t v87 = 26746;
    unint64_t v88 = 0xE200000000000000;
    sub_1000A06D0();
    if (StringProtocol.contains<A>(_:)())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v89 = v57;
      uint64_t v90 = v59;
      uint64_t v87 = 24938;
      unint64_t v88 = 0xE200000000000000;
      StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
    }
  }
  id v60 = *(id *)((char *)a9 + v50);
  NSString v61 = String._bridgeToObjectiveC()();
  [v60 setLocalizedDateFormatFromTemplate:v61];

  uint64_t v62 = v82;
  sub_1000A4D98(v81, v80);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v44, v75);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v86);
  sub_1000A4F70(v85);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))((char *)a9 + v38[15], v62, v84);
}

uint64_t sub_1000A4D98(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Calendar.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    id v11 = (unsigned int *)*(&off_1008CCE10 + a1);
  }
  else {
    id v11 = (unsigned int *)&enum case for Calendar.Component.month(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v11, v7);
  uint64_t v12 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
  sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_1009546C0);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000A4F70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricFormattingHelper();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000A4FCC(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  id v6 = *(id *)((char *)a1 + *(int *)(a2 + 24));
}

uint64_t sub_1000A5058()
{
  uint64_t v1 = type metadata accessor for MetricCardView();
  uint64_t v2 = v0 + *(int *)(v1 + 20);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for MetricCard() + 36);
  int v4 = *(unsigned __int8 *)(v3 + 40);
  if (v4 == 1 && !*(void *)(v3 + 32))
  {
    id v11 = [self mainBundle];
    NSString v16 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v16 value:0 table:0];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0x4C41544F54;
    char v6 = *(unsigned char *)(v0 + *(int *)(v1 + 24));
    uint64_t v7 = (void *)0xE500000000000000;
    if (((1 << v6) & 0x5DDBB8E070) == 0 && (((1 << v6) & 0x2224471F80) != 0 || (v4 & 1) == 0))
    {
      uint64_t v7 = (void *)0xE700000000000000;
      uint64_t v5 = 0x45474152455641;
    }
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "METRIC_CARD_");
    BYTE5(v17[1]) = 0;
    HIWORD(v17[1]) = -5120;
    v8._uint64_t countAndFlagsBits = v5;
    v8._object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 95;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    v10._uint64_t countAndFlagsBits = sub_10007D644(v6);
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    id v11 = [self mainBundle:v17[0], v17[1]];
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
  }

  return v14;
}

uint64_t type metadata accessor for GradientColors()
{
  return self;
}

uint64_t type metadata accessor for MetricColors()
{
  return self;
}

uint64_t sub_1000A5300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100647B8C);
}

Swift::Int sub_1000A5318()
{
  uint64_t v1 = v0;
  Hasher.init()();
  uint64_t Card = (int *)type metadata accessor for FitnessPlusUpNextCard();
  uint64_t v3 = v0 + Card[5];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  sub_100091494(*(void *)v3, (uint64_t)v5, *(unsigned char *)(v3 + 16));
  v20._uint64_t countAndFlagsBits = v4;
  v20._object = v5;
  sub_1000932C0(v20, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)();
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = v6;
    }
    sub_1000917F8(v7, v8, v9);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + Card[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + Card[7]));
  uint64_t v10 = v1 + Card[9];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *(void *)(v10 + 8);
  int v13 = *(unsigned __int8 *)(v10 + 16);
  if (v13)
  {
    if (v13 == 1)
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1000904DC(v12, v11, 1u);
    }
    else
    {
      if (v12 | v11)
      {
        if (v12 ^ 1 | v11) {
          Swift::UInt v18 = 4;
        }
        else {
          Swift::UInt v18 = 1;
        }
      }
      else
      {
        Swift::UInt v18 = 0;
      }
      Hasher._combine(_:)(v18);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    Swift::UInt v14 = *(void *)(v12 + 16);
    Hasher._combine(_:)(v14);
    if (v14)
    {
      uint64_t v15 = *(void *)(type metadata accessor for CatalogLockup() - 8);
      unint64_t v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      uint64_t v17 = *(void *)(v15 + 72);
      sub_1000A94F0(&qword_1009581F8, (void (*)(uint64_t))&type metadata accessor for CatalogLockup);
      swift_bridgeObjectRetain();
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v16 += v17;
        --v14;
      }
      while (v14);
      sub_1000904DC(v12, v11, 0);
    }
  }
  Hasher._combine(_:)(*(unsigned char *)(v1 + Card[10]));
  return Hasher.finalize()();
}

uint64_t sub_1000A55E8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  sub_1000904DC(*(void *)(a1 + a2[9]), *(void *)(a1 + a2[9] + 8), *(unsigned char *)(a1 + a2[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + a2[11]);
  uint64_t v5 = a1 + a2[12];

  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
}

uint64_t sub_1000A5690(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for AwardsCardFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  int v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v7;
  id v8 = v5;
  id v9 = v6;
  id v10 = v7;
  return a1;
}

void sub_1000A576C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
}

void sub_1000A5774(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v65 = a6;
  uint64_t v64 = a5;
  unsigned int v11 = a3;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v63 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  Swift::UInt v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v62 = (char *)&v56 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = type metadata accessor for AwardsCard();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v11 < 3 || a1 ^ 3 | a2)
  {
    *(void *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
  }
  else
  {
    NSString v61 = (int *)v24;
    int v60 = a4 & 1;
    sub_10007E4EC(v66, v66[3]);
    unint64_t v27 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()();
    unint64_t v28 = v27;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v30 = v12;
    uint64_t v31 = v13;
    if (v29 == 3 && (uint64_t v32 = sub_1000A5DB4()) != 0)
    {
      id v33 = (void *)v32;
      unint64_t v59 = v28;
      sub_1000AEF2C(v64, (uint64_t)v67, &qword_10094CEF0);
      uint64_t v34 = v68;
      if (v68)
      {
        uint64_t v35 = v69;
        sub_10007E4EC(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v30);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
      }
      else
      {
        sub_10008DB18((uint64_t)v67, &qword_10094CEF0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, 1, 1, v30);
      }
      uint64_t v39 = v30;
      uint64_t v40 = (void *)v66[5];
      uint64_t v41 = (void *)v66[6];
      uint64_t v42 = (void *)v66[7];
      uint64_t v43 = (uint64_t)v62;
      uint64_t v44 = &v26[v61[5]];
      *(_OWORD *)uint64_t v44 = xmmword_100750D20;
      v44[16] = 3;
      sub_1000AEF2C((uint64_t)v22, v43, (uint64_t *)&unk_1009555F0);
      id v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
      uint64_t v56 = v39;
      LODWORD(v39) = v45(v43, 1, v39);
      uint64_t v64 = (uint64_t)v33;
      uint64_t v66 = v33;
      uint64_t v57 = v41;
      id v46 = v41;
      uint64_t v47 = v40;
      id v48 = v40;
      uint64_t v58 = v42;
      id v49 = v42;
      if (v39 == 1)
      {
        uint64_t v50 = v63;
        UUID.init()();
        sub_10008DB18((uint64_t)v22, (uint64_t *)&unk_1009555F0);
        sub_10008DB18(v43, (uint64_t *)&unk_1009555F0);
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v26, v50, v56);
      }
      else
      {
        sub_10008DB18((uint64_t)v22, (uint64_t *)&unk_1009555F0);
        uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
        uint64_t v52 = v63;
        uint64_t v53 = v56;
        v51(v63, v43, v56);
        v51(v26, (uint64_t)v52, v53);
      }
      uint64_t v54 = v61;
      v26[v61[6]] = v60;
      v26[v54[7]] = v65 & 1;
      v26[v54[8]] = 1;
      *(void *)&v26[v54[9]] = v59;
      *(void *)&v26[v54[10]] = v64;
      *(void *)&v26[v54[11]] = v57;
      *(void *)&v26[v54[12]] = v47;
      *(void *)&v26[v54[13]] = v58;
      *(void *)(a7 + 24) = v54;
      *(void *)(a7 + 32) = &off_1008C3070;
      uint64_t v55 = sub_1000B1710((uint64_t *)a7);
      sub_1000A9060((uint64_t)v26, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for AwardsCard);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000AEF2C(v64, (uint64_t)v67, &qword_10094CEF0);
      uint64_t v36 = v68;
      if (v68)
      {
        uint64_t v37 = v69;
        sub_10007E4EC(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v30);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v67);
      }
      else
      {
        sub_10008DB18((uint64_t)v67, &qword_10094CEF0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v30);
      }
      *(void *)(a7 + 24) = v61;
      *(void *)(a7 + 32) = &off_1008C3070;
      uint64_t v38 = sub_1000B1710((uint64_t *)a7);
      sub_100013364((uint64_t)v18, v60, v65 & 1, 0, 0, 0, 0, 0, (uint64_t)v38, 0);
    }
  }
}

unint64_t sub_1000A5D60()
{
  unint64_t result = qword_10094C450;
  if (!qword_10094C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C450);
  }
  return result;
}

uint64_t sub_1000A5DB4()
{
  uint64_t v2 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0[3];
  uint64_t v58 = v0;
  sub_10007E4EC(v0, v6);
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v7(v5, enum case for AAUIAwardsDataProviderSection.limitedEdtion(_:), v2);
  unint64_t v8 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
  id v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_21;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_15;
  }
LABEL_3:
  if (v10 < 1) {
    goto LABEL_44;
  }
  uint64_t v54 = v9;
  unint64_t v55 = (unint64_t)v7;
  uint64_t v56 = v3 + 104;
  unint64_t v57 = v2;
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v13 = v12;
    if (objc_msgSend(v12, "unearned", v54))
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = v59;
  uint64_t v2 = v57;
  id v9 = v54;
  uint64_t v7 = (void (*)(char *, void, uint64_t))v55;
  if ((v59 & 0x8000000000000000) == 0)
  {
LABEL_16:
    if ((v14 & 0x4000000000000000) != 0) {
      goto LABEL_21;
    }
    if (*(void *)(v14 + 16)) {
      goto LABEL_18;
    }
    goto LABEL_22;
  }
LABEL_21:
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v15) {
      break;
    }
LABEL_18:
    if ((v14 & 0xC000000000000001) != 0) {
      goto LABEL_68;
    }
    if (*(void *)(v14 + 16)) {
      goto LABEL_65;
    }
    __break(1u);
  }
LABEL_22:
  swift_release();
  sub_10007E4EC(v58, v58[3]);
  v7(v5, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v2);
  unint64_t v1 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
  v9(v5, v2);
  if (v1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v16 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v17 = v1 & 0xC000000000000001;
    uint64_t v18 = 4;
    uint64_t v19 = &selRef_unavailable;
    uint64_t v56 = v16;
    unint64_t v57 = v1;
    unint64_t v55 = v1 & 0xC000000000000001;
    while (1)
    {
      id v24 = v17 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v1 + 8 * v18);
      uint64_t v25 = v24;
      uint64_t v26 = v18 - 3;
      if (__OFADD__(v18 - 4, 1)) {
        break;
      }
      if (![v24 v19[2]]) {
        goto LABEL_27;
      }
      id v27 = [v25 progress];
      if (!v27) {
        goto LABEL_27;
      }
      unint64_t v28 = v27;
      id v29 = [v25 goal];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = [v28 _unit];
        uint64_t v32 = self;
        id v33 = v31;
        id v34 = [v32 countUnit];
        sub_1000A6534();
        char v35 = static NSObject.== infix(_:_:)();

        if (v35)
        {
          [v30 doubleValueForUnit:v33];
          double v21 = v20;
          [v28 doubleValueForUnit:v33];
          double v23 = v22;

          uint64_t v16 = v56;
          unint64_t v1 = v57;
          unint64_t v17 = v55;
          if (v21 - v23 <= 1.0) {
            goto LABEL_42;
          }
          goto LABEL_26;
        }
        id v36 = v33;
        id v37 = [v32 largeCalorieUnit];
        char v38 = static NSObject.== infix(_:_:)();

        unint64_t v17 = v55;
        if (v38)
        {
          [v28 doubleValueForUnit:v36];
          double v40 = v39;
          [v30 doubleValueForUnit:v36];
          double v42 = v41;

          uint64_t v16 = v56;
          unint64_t v1 = v57;
          if (v42 * 0.9 < v40)
          {
LABEL_42:
            swift_bridgeObjectRelease_n();
            return (uint64_t)v25;
          }
          goto LABEL_26;
        }

        uint64_t v16 = v56;
        unint64_t v1 = v57;
      }
      else
      {
        uint64_t v30 = v25;
        id v36 = v28;
      }

      uint64_t v25 = v36;
LABEL_26:
      uint64_t v19 = &selRef_unavailable;
LABEL_27:

      ++v18;
      if (v26 == v16) {
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
  }
LABEL_46:
  swift_bridgeObjectRelease_n();
  uint64_t v43 = v58[3];
  sub_10007E4EC(v58, v43);
  unint64_t v44 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()();
  unint64_t v45 = v44;
  unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
  if (v44 >> 62)
  {
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    if (v46)
    {
LABEL_48:
      if (v46 < 1)
      {
        __break(1u);
        goto LABEL_77;
      }
      for (uint64_t j = 0; j != v46; ++j)
      {
        if ((v45 & 0xC000000000000001) != 0) {
          id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v48 = *(id *)(v45 + 8 * j + 32);
        }
        id v49 = v48;
        if ([v48 unearned])
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v43 = *(void *)(v59 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v14 = v59;
      if ((v59 & 0x8000000000000000) != 0) {
        goto LABEL_69;
      }
      goto LABEL_61;
    }
  }
  else
  {
    uint64_t v46 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v46) {
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_69;
  }
LABEL_61:
  if ((v14 & 0x4000000000000000) == 0)
  {
    if (!*(void *)(v14 + 16)) {
      goto LABEL_70;
    }
    goto LABEL_63;
  }
LABEL_69:
  swift_bridgeObjectRetain();
  uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v43)
  {
LABEL_63:
    if ((v14 & 0xC000000000000001) != 0)
    {
LABEL_68:
      id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_66;
    }
    if (*(void *)(v14 + 16))
    {
LABEL_65:
      id v50 = *(id *)(v14 + 32);
LABEL_66:
      uint64_t v25 = v50;
      swift_release();
      return (uint64_t)v25;
    }
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
LABEL_70:
  swift_release();
  sub_10007E4EC(v58, v58[3]);
  unint64_t v52 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()();
  uint64_t v43 = v52;
  if (!(v52 >> 62))
  {
    uint64_t result = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_72;
    }
LABEL_79:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_78:
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_79;
  }
LABEL_72:
  if ((v43 & 0xC000000000000001) != 0)
  {
    id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_75;
  }
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v53 = *(id *)(v43 + 32);
LABEL_75:
    uint64_t v25 = v53;
    swift_bridgeObjectRelease();
    return (uint64_t)v25;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000A6534()
{
  unint64_t result = qword_100954740;
  if (!qword_100954740)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100954740);
  }
  return result;
}

uint64_t sub_1000A6578()
{
  unint64_t v1 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v2 = (long long *)(v0 + v1[5]);
  long long v14 = *v2;
  LOBYTE(v15) = *((unsigned char *)v2 + 16);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  LOBYTE(v14) = *(unsigned char *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)();
  v4._uint64_t countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  type metadata accessor for UUID();
  sub_1000A6770((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 540945696;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  uint64_t v7 = *(void **)(v0 + v1[9]);
  if (v7)
  {
    id v8 = [v7 description:v14, v15];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unsigned int v11 = v10;
  }
  else
  {
    unsigned int v11 = (void *)0xE300000000000000;
    uint64_t v9 = 4271950;
  }
  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000A6728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6770(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A67B8()
{
  return sub_1000A67DC();
}

uint64_t sub_1000A67DC()
{
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 58;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  type metadata accessor for UUID();
  sub_1000A6DB4((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 540945696;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = sub_1000A6950(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_historyItems));
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000A6950(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  Swift::String v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return 10536;
  }
  double v39 = _swiftEmptyArrayStorage;
  sub_1000ABAB8(0, v8, 0);
  uint64_t v9 = (void *)(a1 + 32);
  id v33 = (void (**)(char *, uint64_t))(v2 + 8);
  id v34 = (void (**)(char *, uint64_t))(v5 + 8);
  do
  {
    id v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 8232;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    uint64_t v11 = v9[3];
    uint64_t v12 = v9[4];
    sub_10007E4EC(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
    sub_100611F0C((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = v35;
    v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    (*v34)(v7, v13);
    v15._uint64_t countAndFlagsBits = 8236;
    v15._object = (void *)0xE200000000000000;
    String.append(_:)(v15);
    uint64_t v16 = v9[3];
    uint64_t v17 = v9[4];
    sub_10007E4EC(v9, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    sub_100611F0C((unint64_t *)&qword_10094C018, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v18 = v36;
    v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    (*v33)(v4, v18);
    v20._uint64_t countAndFlagsBits = 8236;
    v20._object = (void *)0xE200000000000000;
    String.append(_:)(v20);
    uint64_t v21 = v9[3];
    uint64_t v22 = v9[4];
    sub_10007E4EC(v9, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 40))(v21, v22);
    Double.write<A>(to:)();
    v23._uint64_t countAndFlagsBits = 10528;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    id v24 = v37;
    unint64_t v25 = v38;
    uint64_t v26 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000ABAB8(0, v26[2] + 1, 1);
      uint64_t v26 = v39;
    }
    unint64_t v28 = v26[2];
    unint64_t v27 = v26[3];
    if (v28 >= v27 >> 1)
    {
      sub_1000ABAB8(v27 > 1, v28 + 1, 1);
      uint64_t v26 = v39;
    }
    void v26[2] = v28 + 1;
    id v29 = &v26[2 * v28];
    v29[4] = v24;
    v29[5] = v25;
    v9 += 5;
    --v8;
  }
  while (v8);
  id v37 = v26;
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000B1A84();
  uint64_t v30 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v30;
}

uint64_t sub_1000A6D70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6DFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6E44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A6ED8()
{
  uint64_t v1 = type metadata accessor for Artwork();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  uint64_t v35 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CatalogTipSectionItem();
  __chkstk_darwin(v34);
  Swift::String v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_100955650);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  int64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v34 - v9;
  *(void *)&long long v38 = 0;
  *((void *)&v38 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  long long v40 = v38;
  uint64_t v11 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v12 = (long long *)(v0 + v11[5]);
  char v13 = *((unsigned char *)v12 + 16);
  long long v38 = *v12;
  char v39 = v13;
  _print_unlocked<A, B>(_:_:)();
  v14._uint64_t countAndFlagsBits = 58;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  LOBYTE(v38) = *(unsigned char *)(v0 + v11[6]);
  _print_unlocked<A, B>(_:_:)();
  v15._uint64_t countAndFlagsBits = 58;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  type metadata accessor for UUID();
  sub_100095A68();
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  uint64_t v18 = v0 + v11[9];
  sub_1000AEF2C(v18, (uint64_t)v10, (uint64_t *)&unk_100955650);
  uint64_t v19 = type metadata accessor for CatalogTipSection();
  Swift::String v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  if (v20(v10, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_100955650);
    uint64_t v21 = (void *)0xE300000000000000;
    uint64_t v22 = 4271950;
  }
  else
  {
    Swift::String v23 = (uint64_t *)&v10[*(int *)(v19 + 40)];
    uint64_t v22 = *v23;
    uint64_t v21 = (void *)v23[1];
    swift_bridgeObjectRetain();
    sub_1000CABB4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
  }
  v24._uint64_t countAndFlagsBits = v22;
  v24._object = v21;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 8250;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  sub_1000AEF2C(v18, (uint64_t)v8, (uint64_t *)&unk_100955650);
  if (v20(v8, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_100955650);
    uint64_t v26 = (void *)0xEA00000000006B72;
    uint64_t v27 = 0x6F77747241206F4ELL;
  }
  else
  {
    sub_100039970((uint64_t)&v8[*(int *)(v19 + 36)], (uint64_t)v4);
    sub_1000CABB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    unint64_t v28 = v35;
    uint64_t v30 = v36;
    uint64_t v29 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, &v4[*(int *)(v34 + 20)], v37);
    sub_1000CABB4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CatalogTipSectionItem);
    uint64_t v27 = Artwork.description.getter();
    uint64_t v26 = v31;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  }
  v32._uint64_t countAndFlagsBits = v27;
  v32._object = v26;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1000A7328(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for CatalogTipCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(v7 + 20)), *(void *)(v5 + *(int *)(v7 + 20) + 8), *(unsigned char *)(v5 + *(int *)(v7 + 20) + 16));
  uint64_t v8 = v5 + *(int *)(v7 + 36);
  uint64_t v9 = type metadata accessor for CatalogTipSection();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v22 = a2;
    swift_bridgeObjectRelease();

    uint64_t v10 = v8 + *(int *)(v9 + 36);
    uint64_t v11 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v13 = v10 + v12[5];
    uint64_t v14 = type metadata accessor for Artwork();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v10 + v12[8];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14)) {
      v21(v16, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v10 + v12[12];
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    a2 = v22;
  }
  swift_release();
  uint64_t v19 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v19 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
  }

  return swift_release();
}

void *sub_1000A766C(void *a1, void *a2, uint64_t a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v96 = a3;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned char v13[16] = v17;
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v18 = v11[9];
  uint64_t v19 = &v8[v18];
  Swift::String v20 = &v9[v18];
  uint64_t v21 = type metadata accessor for CatalogTipSection();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_100955650);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v91 = v22;
    uint64_t v92 = v21;
    uint64_t v94 = a2;
    uint64_t v95 = a1;
    uint64_t v24 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v24;
    Swift::String v25 = (void *)*((void *)v20 + 2);
    uint64_t v26 = (void *)*((void *)v20 + 3);
    *((void *)v19 + 2) = v25;
    *((void *)v19 + 3) = v26;
    *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
    uint64_t v27 = *(int *)(v21 + 36);
    uint64_t v93 = v19;
    unint64_t v28 = &v19[v27];
    uint64_t v90 = v20;
    uint64_t v29 = &v20[v27];
    uint64_t v30 = type metadata accessor for ShelfLockupAttributedTagStrings();
    id v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    id v32 = v25;
    id v33 = v26;
    v31(v28, v29, v30);
    uint64_t v34 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v35 = v34[5];
    uint64_t v36 = &v28[v35];
    uint64_t v37 = &v29[v35];
    uint64_t v38 = type metadata accessor for Artwork();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v85(v36, v37, v38);
    uint64_t v40 = v34[6];
    double v41 = &v28[v40];
    double v42 = &v29[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)double v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = v34[7];
    unint64_t v45 = &v28[v44];
    uint64_t v46 = &v29[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)unint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    uint64_t v48 = v34[8];
    uint64_t v87 = v28;
    unint64_t v88 = v29;
    id v49 = &v28[v48];
    id v50 = &v29[v48];
    uint64_t v86 = v39;
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v50, 1, v38))
    {
      uint64_t v52 = sub_1000AFA94(&qword_1009512E8);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v85(v49, v50, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v49, 0, 1, v38);
    }
    uint64_t v53 = v34[9];
    uint64_t v54 = &v87[v53];
    unint64_t v55 = &v88[v53];
    uint64_t v56 = *((void *)v55 + 1);
    *(void *)uint64_t v54 = *(void *)v55;
    *((void *)v54 + 1) = v56;
    uint64_t v57 = v34[10];
    uint64_t v58 = &v87[v57];
    unint64_t v59 = &v88[v57];
    uint64_t v60 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    uint64_t v61 = v34[11];
    uint64_t v62 = &v87[v61];
    id v63 = &v88[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    uint64_t v65 = v34[12];
    uint64_t v66 = &v87[v65];
    uint64_t v89 = &v88[v65];
    uint64_t v67 = type metadata accessor for URL();
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68(v66, v89, v67);
    uint64_t v69 = *(int *)(v92 + 40);
    uint64_t v70 = (void *)((char *)v93 + v69);
    double v71 = (void *)((char *)v90 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = *(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56);
    swift_bridgeObjectRetain();
    v73(v93, 0, 1, v92);
    a2 = v94;
    a1 = v95;
  }
  *(void *)&v8[v11[10]] = *(void *)&v9[v11[10]];
  uint64_t v74 = *(int *)(v96 + 24);
  uint64_t v75 = (char *)a1 + v74;
  id v76 = (char *)a2 + v74;
  uint64_t v77 = *(void *)((char *)a2 + v74 + 24);
  swift_retain();
  if (v77)
  {
    uint64_t v78 = *((void *)v76 + 4);
    *((void *)v75 + 3) = v77;
    *((void *)v75 + 4) = v78;
    (**(void (***)(char *, char *, uint64_t))(v77 - 8))(v75, v76, v77);
  }
  else
  {
    long long v79 = *((_OWORD *)v76 + 1);
    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    *((_OWORD *)v75 + 1) = v79;
    *((void *)v75 + 4) = *((void *)v76 + 4);
  }
  uint64_t v80 = *(int *)(v96 + 28);
  uint64_t v81 = (void *)((char *)a1 + v80);
  uint64_t v82 = (void *)((char *)a2 + v80);
  uint64_t v83 = v82[1];
  *uint64_t v81 = *v82;
  v81[1] = v83;
  swift_retain();
  return a1;
}

uint64_t sub_1000A7BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100243AFC);
}

uint64_t type metadata accessor for CatalogTipSection()
{
  uint64_t result = qword_100951348;
  if (!qword_100951348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for CatalogTipSectionItem()
{
  uint64_t result = qword_10095EEE0;
  if (!qword_10095EEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A7C90()
{
  uint64_t v1 = type metadata accessor for TrendsCard();
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  type metadata accessor for UUID();
  sub_100095A68();
  v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 540945696;
  v5._object = (void *)0xE400000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = sub_1000A7DDC(*(void *)(v0 + *(int *)(v1 + 36)), *(unsigned char *)(v0 + *(int *)(v1 + 36) + 8));
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000A7DDC(uint64_t a1, char a2)
{
  uint64_t result = 1701736302;
  switch(a2)
  {
    case 1:
      v7._uint64_t countAndFlagsBits = sub_1000AB5F4(a1);
      String.append(_:)(v7);
      swift_bridgeObjectRelease();
      uint64_t v5 = 32;
      unint64_t v6 = 0xD000000000000012;
      goto LABEL_4;
    case 2:
      uint64_t result = sub_1000AB5F4(a1);
      break;
    case 3:
      return result;
    default:
      v4._uint64_t countAndFlagsBits = sub_1000AB5F4(a1);
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      uint64_t v5 = 32;
      unint64_t v6 = 0x73206873616C7073;
LABEL_4:
      unint64_t v9 = v6;
      unint64_t v8 = 0xE100000000000000;
      String.append(_:)(*(Swift::String *)&v5);
      swift_bridgeObjectRelease();
      uint64_t result = v9;
      break;
  }
  return result;
}

Swift::Int sub_1000A7EF8()
{
  uint64_t v1 = v0;
  Hasher.init()();
  Swift::String v2 = (int *)type metadata accessor for MetricCard();
  uint64_t v3 = v0 + v2[5];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  sub_100091494(*(void *)v3, (uint64_t)v5, *(unsigned char *)(v3 + 16));
  v18._uint64_t countAndFlagsBits = v4;
  v18._object = v5;
  sub_1000932C0(v18, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)();
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = v6;
    }
    sub_1000917F8(v7, v8, v9);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v2[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v2[7]));
  sub_1000A8040((uint64_t)v11);
  long long v15 = v11[2];
  long long v16 = v11[3];
  uint64_t v17 = v12;
  long long v13 = v11[0];
  long long v14 = v11[1];
  return Hasher.finalize()();
}

uint64_t sub_1000A8040(uint64_t a1)
{
  Swift::String v2 = v1;
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *v1;
  NSObject.hash(into:)();

  id v12 = v2[1];
  NSObject.hash(into:)();

  uint64_t v13 = (uint64_t)v2[2];
  swift_bridgeObjectRetain();
  sub_1000A8EA4(a1, v13);
  swift_bridgeObjectRelease();
  id v14 = v2[3];
  swift_bridgeObjectRetain();
  sub_1000A8EA0(a1, v14);
  swift_bridgeObjectRelease();
  Swift::UInt v15 = (Swift::UInt)v2[4];
  if (((_BYTE)v2[5] & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(v15);
  uint64_t v16 = type metadata accessor for MetricDetailViewModel();
  sub_1000A87F4((uint64_t)v2 + *(int *)(v16 + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    sub_1000A885C(&qword_10095DBC0, (void (*)(uint64_t))&type metadata accessor for DateInterval);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  Hasher._combine(_:)(*((unsigned char *)v2 + *(int *)(v16 + 40)));
  type metadata accessor for Date();
  sub_1000A885C((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1000A831C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v44 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_10095DBC8);
  __chkstk_darwin(v7);
  uint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v37[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v37[-v17];
  sub_1000A88A4();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_31;
  }
  double v42 = v16;
  uint64_t v43 = v18;
  uint64_t v40 = v13;
  double v41 = v9;
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || (sub_1000A8B64(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
    || (sub_1000A88E4(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  unint64_t v20 = *(void *)(a2 + 32);
  char v21 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) == 1)
  {
    if (v19)
    {
      uint64_t v22 = v44;
      uint64_t v23 = v4;
      if (v19 == 1)
      {
        if (v20 != 1) {
          char v21 = 0;
        }
        if ((v21 & 1) == 0) {
          goto LABEL_31;
        }
      }
      else
      {
        if (v20 <= 1) {
          char v21 = 0;
        }
        if ((v21 & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    else
    {
      if (v20) {
        char v21 = 0;
      }
      uint64_t v22 = v44;
      uint64_t v23 = v4;
      if ((v21 & 1) == 0) {
        goto LABEL_31;
      }
    }
  }
  else
  {
    if (v19 != v20) {
      char v21 = 1;
    }
    uint64_t v22 = v44;
    uint64_t v23 = v4;
    if (v21) {
      goto LABEL_31;
    }
  }
  uint64_t v39 = v6;
  uint64_t v24 = type metadata accessor for MetricDetailViewModel();
  uint64_t v25 = (uint64_t)v43;
  sub_1000A87F4(a1 + *(int *)(v24 + 36), (uint64_t)v43);
  uint64_t v26 = (uint64_t)v42;
  sub_1000A87F4(a2 + *(int *)(v24 + 36), (uint64_t)v42);
  uint64_t v27 = (uint64_t)v41;
  uint64_t v28 = (uint64_t)&v41[*(int *)(v7 + 48)];
  sub_1000A87F4(v25, (uint64_t)v41);
  sub_1000A87F4(v26, v28);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v29(v27, 1, v23) != 1)
  {
    uint64_t v30 = v24;
    uint64_t v31 = (uint64_t)v40;
    sub_1000A87F4(v27, (uint64_t)v40);
    if (v29(v28, 1, v23) != 1)
    {
      uint64_t v32 = v44;
      id v33 = v39;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 32))(v39, v28, v23);
      sub_1000A885C(&qword_10095DBD0, (void (*)(uint64_t))&type metadata accessor for DateInterval);
      int v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v34(v33, v23);
      sub_10008DB18((uint64_t)v42, (uint64_t *)&unk_1009546B0);
      sub_10008DB18((uint64_t)v43, (uint64_t *)&unk_1009546B0);
      v34((unsigned char *)v31, v23);
      sub_10008DB18(v27, (uint64_t *)&unk_1009546B0);
      uint64_t v24 = v30;
      if ((v38 & 1) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    sub_10008DB18((uint64_t)v42, (uint64_t *)&unk_1009546B0);
    sub_10008DB18((uint64_t)v43, (uint64_t *)&unk_1009546B0);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v31, v23);
LABEL_28:
    sub_10008DB18(v27, &qword_10095DBC8);
    goto LABEL_31;
  }
  sub_10008DB18(v26, (uint64_t *)&unk_1009546B0);
  sub_10008DB18(v25, (uint64_t *)&unk_1009546B0);
  if (v29(v28, 1, v23) != 1) {
    goto LABEL_28;
  }
  sub_10008DB18(v27, (uint64_t *)&unk_1009546B0);
LABEL_30:
  if (*(unsigned __int8 *)(a1 + *(int *)(v24 + 40)) == *(unsigned __int8 *)(a2 + *(int *)(v24 + 40)))
  {
    char v35 = static Date.== infix(_:_:)();
    return v35 & 1;
  }
LABEL_31:
  char v35 = 0;
  return v35 & 1;
}

uint64_t sub_1000A87F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A885C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A88A4()
{
  unint64_t result = qword_10094B780;
  if (!qword_10094B780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094B780);
  }
  return result;
}

uint64_t sub_1000A88E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v13 = v12;
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    char v14 = static NSObject.== infix(_:_:)();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A8B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricChartData();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
    uint64_t v19 = *(void *)(v5 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1001CBD5C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      sub_1001CBD5C(a2 + v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      if ((static NSObject.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0) {
        break;
      }
      char v14 = static NSObject.== infix(_:_:)();
      sub_1001CBDC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      sub_1001CBDC4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_1001CBDC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    sub_1001CBDC4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_15;
  }
  char v14 = 1;
  return v14 & 1;
}

void sub_1000A8D88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v8);
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    Hasher._combine(_:)(*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10));
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      NSObject.hash(into:)();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      NSObject.hash(into:)();

      --v3;
    }
    while (v3);
  }
}

void sub_1000A8EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MetricChartData();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::UInt v7 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v7);
  if (v7)
  {
    uint64_t v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v9 = *(void *)(v4 + 72);
    do
    {
      sub_1001CBD5C(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      type metadata accessor for Date();
      sub_1000A6DB4((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
      dispatch thunk of Hashable.hash(into:)();
      [*(id *)((char *)v6 + *(int *)(v3 + 24)) doubleValueForUnit:*v6];
      if ((v10 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v11 = v10;
      }
      else {
        Swift::UInt64 v11 = 0;
      }
      Hasher._combine(_:)(v11);
      NSObject.hash(into:)();
      sub_1001CBDC4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MetricChartData);
      v8 += v9;
      --v7;
    }
    while (v7);
  }
}

uint64_t sub_1000A9060(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A90CC()
{
  uint64_t v1 = type metadata accessor for AwardsCard();
  uint64_t v2 = v1;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24)))
  {
    _print_unlocked<A, B>(_:_:)();
    v3._uint64_t countAndFlagsBits = 58;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    _print_unlocked<A, B>(_:_:)();
    v4._uint64_t countAndFlagsBits = 58;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    type metadata accessor for UUID();
    sub_100095A68();
    v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    v6._uint64_t countAndFlagsBits = 540945696;
    v6._object = (void *)0xE400000000000000;
    String.append(_:)(v6);
    if (*(void *)(v0 + *(int *)(v2 + 36)))
    {
      sub_10022242C();
      uint64_t v7 = Array.description.getter();
      unint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 4271950;
      unint64_t v9 = 0xE300000000000000;
    }
  }
  else
  {
    Swift::UInt64 v10 = (long long *)(v0 + *(int *)(v1 + 20));
    long long v21 = *v10;
    LOBYTE(v22) = *((unsigned char *)v10 + 16);
    _print_unlocked<A, B>(_:_:)();
    v11._uint64_t countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    LOBYTE(v21) = 0;
    _print_unlocked<A, B>(_:_:)();
    v12._uint64_t countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    type metadata accessor for UUID();
    sub_100095A68();
    v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 540945696;
    v14._object = (void *)0xE400000000000000;
    String.append(_:)(v14);
    uint64_t v15 = *(void **)(v0 + *(int *)(v2 + 40));
    if (v15)
    {
      id v16 = [v15 description:v21, v22];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v9 = v18;
    }
    else
    {
      uint64_t v17 = 4271950;
      unint64_t v9 = 0xE300000000000000;
    }
    uint64_t v7 = v17;
  }
  unint64_t v19 = v9;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000A9368()
{
  type metadata accessor for FitnessPlusUpNextCard();
  _print_unlocked<A, B>(_:_:)();
  v0._uint64_t countAndFlagsBits = 58;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 58;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  type metadata accessor for UUID();
  sub_1000A94F0((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 540945696;
  v3._object = (void *)0xE400000000000000;
  String.append(_:)(v3);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

uint64_t sub_1000A94F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A9538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A9580(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(a2 + v14);
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  unsigned __int8 v18 = *(unsigned char *)(a2 + v14 + 16);
  sub_1000908B0(v16, v17, v18);
  *(void *)uint64_t v15 = v16;
  *(void *)(v15 + 8) = v17;
  *(unsigned char *)(v15 + 16) = v18;
  uint64_t v19 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  long long v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  uint64_t v21 = a3[12];
  long long v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

uint64_t destroy for TrendsSplashScreen(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  }

  return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 40);
}

int64_t sub_1000A9768(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v5 = v4;
  int v56 = a3;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v46 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TrendListMetric();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a1 + 16);
  int64_t v18 = (int64_t)_swiftEmptyArrayStorage;
  if (v17)
  {
    int v49 = a4 & 1;
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_1000B1C64(0, v17, 0);
    int64_t v18 = (int64_t)v57;
    uint64_t v19 = (unsigned __int8 *)(a1 + 32);
    uint64_t v20 = *(void *)(a2 + 16);
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v48 = v20;
    double v42 = v11;
    uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    double v41 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    while (1)
    {
      unint64_t v55 = (void *)v18;
      unsigned int v22 = *v19;
      uint64_t v21 = v19 + 1;
      int64_t v18 = v22;
      uint64_t v23 = sub_1000AAF10();
      uint64_t v25 = v24;
      sub_1000A9B5C(v22, v49, (uint64_t)v11);
      if (v5) {
        break;
      }
      uint64_t v26 = v50;
      (*v47)(v11, 0, 1, v50);
      if ((*v43)(v11, 1, v26) == 1) {
        goto LABEL_10;
      }
      uint64_t v52 = v21;
      int64_t v53 = v17;
      uint64_t v54 = 0;
      uint64_t v27 = v11;
      uint64_t v51 = v25;
      uint64_t v28 = *v41;
      uint64_t v29 = v46;
      (*v41)(v46, v27, v26);
      uint64_t v30 = sub_1000AB260();
      uint64_t v31 = v26;
      uint64_t v33 = v32;
      uint64_t v34 = v45;
      v28(&v16[*(int *)(v45 + 28)], v29, v31);
      *uint64_t v16 = v18;
      v16[1] = 1;
      uint64_t v35 = v51;
      *((void *)v16 + 1) = v23;
      *((void *)v16 + 2) = v35;
      uint64_t v36 = (uint64_t *)&v16[*(int *)(v34 + 32)];
      *uint64_t v36 = v30;
      v36[1] = v33;
      int64_t v18 = (int64_t)v55;
      uint64_t v57 = v55;
      unint64_t v38 = v55[2];
      unint64_t v37 = v55[3];
      if (v38 >= v37 >> 1)
      {
        sub_1000B1C64(v37 > 1, v38 + 1, 1);
        int64_t v18 = (int64_t)v57;
      }
      *(void *)(v18 + 16) = v38 + 1;
      sub_1000AB590((uint64_t)v16, v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v38);
      uint64_t v5 = v54;
      int64_t v17 = v53 - 1;
      uint64_t v11 = v42;
      uint64_t v19 = v52;
      if (v53 == 1) {
        return v18;
      }
    }
    swift_errorRelease();
    (*v47)(v11, 1, 1, v50);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_10095BFD0);
    sub_10032B234();
    swift_allocError();
    *uint64_t v39 = 0;
    swift_willThrow();
    swift_release();
  }
  return v18;
}

uint64_t sub_1000A9B5C@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (((a1 - 3) & 0xFB) != 0)
  {
    if (a1 <= 8u && ((1 << a1) & 0x127) != 0)
    {
      id v10 = sub_1000AAB04(a1, 0, 1.0);
      if (v11)
      {
        id v12 = v10;
        uint64_t v13 = v11;
        id v14 = [v4 mainBundle];
        NSString v15 = String._bridgeToObjectiveC()();
        id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1007509E0;
        *(void *)(v17 + 56) = &type metadata for String;
        *(void *)(v17 + 64) = sub_1000AA64C();
        *(void *)(v17 + 32) = v12;
        *(void *)(v17 + 40) = v13;
        static String.localizedStringWithFormat(_:_:)();
LABEL_10:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        sub_1000A06D0();
        uint64_t v26 = StringProtocol.localizedUppercase.getter();
        uint64_t v28 = v27;
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_1000AA800(a2);
        sub_1000A9F54(v33, v9, v26, v28, v29, 0, a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      goto LABEL_13;
    }
LABEL_12:
    sub_1000AAB04(a1, 0, 1.0);
    if (v31) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if (a1 > 8u || ((1 << a1) & 0x127) == 0) {
    goto LABEL_12;
  }
  id v18 = sub_1000AAB04(a1, 0, 1.0);
  if (v19)
  {
    id v20 = v18;
    uint64_t v21 = v19;
    id v22 = [v4 mainBundle];
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1007509E0;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_1000AA64C();
    *(void *)(v25 + 32) = v20;
    *(void *)(v25 + 40) = v21;
    static String.localizedStringWithFormat(_:_:)();
    goto LABEL_10;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  sub_10032B234();
  swift_allocError();
  *uint64_t v32 = 0;
  return swift_willThrow();
}

uint64_t sub_1000A9F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v51 = a5;
  uint64_t v10 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v10 - 8);
  uint64_t v47 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v12 - 8);
  unint64_t v55 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributedString();
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v54 = v14;
  __chkstk_darwin(v14);
  id v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_100960990);
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v20 = __chkstk_darwin(v56);
  uint64_t v46 = (uint64_t)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v45 = (uint64_t)&v45 - v22;
  uint64_t v23 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v23 - 8);
  id v24 = [self mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10074E640;
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v28 = sub_1000AA64C();
  *(void *)(v27 + 32) = v48;
  *(void *)(v27 + 40) = a2;
  *(void *)(v27 + 96) = &type metadata for String;
  *(void *)(v27 + 104) = v28;
  *(void *)(v27 + 64) = v28;
  *(void *)(v27 + 72) = a3;
  *(void *)(v27 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  uint64_t v29 = v49;
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v30 = v50;
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v58[0] = v51;
  sub_1000AA6A0();
  swift_retain();
  AttributedString.subscript.setter();
  if (v29)
  {
    uint64_t v31 = swift_getKeyPath();
    *(&v45 - 2) = __chkstk_darwin(v31);
    swift_getKeyPath();
    v58[0] = v29;
    sub_1000A5D60();
    swift_retain();
    AttributedString.subscript.setter();
  }
  uint64_t v32 = v53;
  uint64_t v33 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v16, v30, v54);
  v58[0] = a3;
  v58[1] = a4;
  uint64_t v34 = type metadata accessor for Locale();
  uint64_t v35 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v55, 1, 1, v34);
  sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_1000A06D0();
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_10008DB18(v35, (uint64_t *)&unk_10095BF60);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v19, 1, v56) == 1)
  {
    uint64_t v36 = &qword_100960988;
    uint64_t v37 = (uint64_t)v19;
  }
  else
  {
    uint64_t v38 = v45;
    sub_1000AA6F4((uint64_t)v19, v45);
    uint64_t v39 = v46;
    sub_1000AEF2C(v38, v46, &qword_100960990);
    uint64_t v40 = swift_getKeyPath();
    *(&v45 - 2) = __chkstk_darwin(v40);
    swift_getKeyPath();
    double v41 = v47;
    static Text.Scale.secondary.getter();
    uint64_t v42 = type metadata accessor for Text.Scale();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    uint64_t v43 = (void (*)(void *, void))AttributedString.subscript.modify();
    sub_1000AA7AC();
    AttributedSubstring.subscript.setter();
    v43(v58, 0);
    sub_10008DB18(v39, &qword_100960990);
    uint64_t v37 = v38;
    uint64_t v36 = &qword_100960990;
  }
  return sub_10008DB18(v37, v36);
}

unint64_t sub_1000AA64C()
{
  unint64_t result = qword_1009546F0;
  if (!qword_1009546F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009546F0);
  }
  return result;
}

unint64_t sub_1000AA6A0()
{
  unint64_t result = qword_10094C458;
  if (!qword_10094C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C458);
  }
  return result;
}

uint64_t sub_1000AA6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100960990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AA75C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AA7AC()
{
  unint64_t result = qword_100960A20;
  if (!qword_100960A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960A20);
  }
  return result;
}

uint64_t sub_1000AA800(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  if (v2 == 2 || (a1 & 1) != 0)
  {
    v10(v9, enum case for Font.TextStyle.title3(_:), v6);
    uint64_t v14 = enum case for Font.Design.rounded(_:);
    uint64_t v15 = type metadata accessor for Font.Design();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v5, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
    static Font.Weight.medium.getter();
  }
  else
  {
    v10(v9, enum case for Font.TextStyle.title(_:), v6);
    uint64_t v11 = enum case for Font.Design.rounded(_:);
    uint64_t v12 = type metadata accessor for Font.Design();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v5, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
    static Font.Weight.semibold.getter();
  }
  uint64_t v17 = static Font.system(_:design:weight:)();
  sub_1000AAAA4((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t sub_1000AAAA4(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094C448);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000AAB04(char a1, char a2, double a3)
{
  int v4 = a2 & 1;
  switch(a1)
  {
    case 1:
      uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
      if ((a2 & 1) == 0)
      {
        id v9 = [v8 localizedShortActiveEnergyUnitString];
        if (v9) {
          goto LABEL_19;
        }
        return 0;
      }
      id v9 = [v8 localizedLongActiveEnergyUnitString];
      if (!v9) {
        return 0;
      }
      goto LABEL_19;
    case 2:
      uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
      if ((a2 & 1) == 0)
      {
        id v9 = [v10 localizedShortUnitStringForDistanceType:1];
        if (!v9) {
          return 0;
        }
        goto LABEL_19;
      }
      id result = [v10 unitManager];
      if (result)
      {
        uint64_t v18 = result;
        id v19 = [result userDistanceUnitForDistanceType:1];

        id v9 = [v10 localizedLongUnitStringForDistanceUnit:v19 distanceInUnit:a3];
        if (!v9) {
          return 0;
        }
LABEL_19:
        id v16 = v9;
LABEL_20:
        uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return (id)v7;
      }
      __break(1u);
      return result;
    case 3:
    case 7:
      return sub_1000ABC44(a2 & 1, a3);
    case 4:
    case 6:
    case 8:
      id v11 = [self mainBundle];
      NSString v12 = String._bridgeToObjectiveC()();
      id v20 = [v11 localizedStringForKey:v12 value:0 table:0];

      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return (id)v7;
    case 5:
      if (qword_10094B0D0 != -1) {
        swift_once();
      }
      uint64_t v13 = (void *)qword_1009676D0;
      if (v4) {
        uint64_t v14 = 3;
      }
      else {
        uint64_t v14 = 1;
      }
      [(id)qword_1009676D0 setUnitStyle:v14];
      id v15 = [self minutes];
      id v16 = [v13 stringFromUnit:v15];

      goto LABEL_20;
    default:
      return (id)sub_100675788(a2 & 1);
  }
}

uint64_t sub_1000AAF10()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t sub_1000AB260()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t sub_1000AB590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendListMetric();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AB5F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendListMetric();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 10536;
  }
  NSString v25 = _swiftEmptyArrayStorage;
  sub_1000ABAB8(0, v6, 0);
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v8 = *(void *)(v3 + 72);
  do
  {
    sub_1000AB940(v7, (uint64_t)v5);
    uint64_t v9 = *((void *)v5 + 2);
    uint64_t v23 = (void *)*((void *)v5 + 1);
    uint64_t v24 = v9;
    swift_bridgeObjectRetain();
    v10._uint64_t countAndFlagsBits = 2108704;
    v10._object = (void *)0xE300000000000000;
    String.append(_:)(v10);
    if (v5[1])
    {
      if (v5[1] == 1) {
        uint64_t v11 = 1952541798;
      }
      else {
        uint64_t v11 = 1853321060;
      }
      unint64_t v12 = 0xE400000000000000;
    }
    else
    {
      unint64_t v12 = 0xE200000000000000;
      uint64_t v11 = 28789;
    }
    unint64_t v13 = v12;
    String.append(_:)(*(Swift::String *)&v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    sub_1000AB854((uint64_t)v5);
    id v16 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000ABAB8(0, v16[2] + 1, 1);
      id v16 = v25;
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      sub_1000ABAB8(v17 > 1, v18 + 1, 1);
      id v16 = v25;
    }
    void v16[2] = v18 + 1;
    id v19 = &v16[2 * v18];
    unsigned char v19[4] = v14;
    v19[5] = v15;
    v7 += v8;
    --v6;
  }
  while (v6);
  uint64_t v23 = v16;
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000A132C((unint64_t *)&qword_100958E70, (uint64_t *)&unk_10094B1F0);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v20;
}

uint64_t sub_1000AB854(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendListMetric();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AB8B0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AB940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendListMetric();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TrendListMetric()
{
  uint64_t result = qword_10095BF10;
  if (!qword_10095BF10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AB9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 32);
  unint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *unint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000ABAB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000ABAD8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000ABAD8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AFA94(&qword_10094D178);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1000ABC44(char a1, double a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
  if ((a1 & 1) == 0)
  {
    id result = [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) localizedShortUnitStringForDistanceType:1];
    if (result) {
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_8;
  }
  id result = [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v6 = result;
  id v7 = [result userDistanceUnitForDistanceType:1];

  id result = [v3 localizedLongUnitStringForDistanceUnit:v7 distanceInUnit:a2];
  if (result)
  {
LABEL_6:
    uint64_t v8 = result;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1007509E0;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000AA64C();
    *(void *)(v15 + 32) = v9;
    *(void *)(v15 + 40) = v11;
    uint64_t v16 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v16;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000ABEA0()
{
  return sub_1000ABEBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000ABEBC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000ABF1C(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000ABF1C(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = a1;
  v12[4] = ObjectType;
  aBlock[4] = sub_1000703E4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100070394;
  uint64_t aBlock[3] = &unk_1008CC310;
  NSString v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000B7550((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t sub_1000AC238(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  unint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  unint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = a3[12];
  uint64_t v20 = a3[13];
  uint64_t v21 = *(void **)(a2 + v19);
  *(void *)(a1 + v19) = v21;
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  swift_bridgeObjectRetain();
  id v23 = v17;
  id v24 = v18;
  id v25 = v21;
  id v26 = v22;
  return a1;
}

unint64_t sub_1000AC348()
{
  unint64_t result = qword_10094CFD0;
  if (!qword_10094CFD0)
  {
    sub_1000A1370(&qword_10094CFD8);
    sub_1000C02FC();
    sub_1000B40B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFD0);
  }
  return result;
}

unint64_t sub_1000AC3C4()
{
  unint64_t result = qword_10094D018;
  if (!qword_10094D018)
  {
    sub_1000A1370(&qword_10094D020);
    sub_1000C0EB0();
    sub_1000CAAAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D018);
  }
  return result;
}

unint64_t sub_1000AC440()
{
  unint64_t result = qword_10094D068;
  if (!qword_10094D068)
  {
    sub_1000A1370(&qword_10094D070);
    sub_1000E9AB4();
    sub_1000E6C08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D068);
  }
  return result;
}

unint64_t sub_1000AC4BC()
{
  unint64_t result = qword_10094D0A8;
  if (!qword_10094D0A8)
  {
    sub_1000A1370(&qword_10094D0B0);
    sub_1000B0484();
    sub_1000B03E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D0A8);
  }
  return result;
}

uint64_t sub_1000AC538(char *a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v51 = (uint64_t)&v44 - v6;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v48 = (char *)&v44 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - v12;
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v14 = type metadata accessor for Calendar.Component();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1007509E0;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = a1;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18, enum case for Calendar.Component.day(_:), v14);
  sub_1000C6A18(v17);
  swift_setDeallocating();
  uint64_t v20 = v47;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t result = DateComponents.day.getter();
  if (v22)
  {
    static os_log_type_t.error.getter();
    uint64_t v36 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_10074E640;
    id v38 = v36;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    unint64_t v40 = sub_10071B7D0();
    *(void *)(v37 + 56) = v40;
    double v41 = v13;
    unint64_t v42 = sub_1000DEEEC();
    *(void *)(v37 + 64) = v42;
    *(void *)(v37 + 32) = isa;
    v43.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    *(void *)(v37 + 96) = v40;
    *(void *)(v37 + 104) = v42;
    *(NSDate *)(v37 + 72) = v43;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v7);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v23 = v49;
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v44 = v13;
    __chkstk_darwin(result);
    *(&v44 - 2) = v20;
    *(&v44 - 1) = v19;
    uint64_t v45 = sub_1000ACFBC((void (*)(uint64_t *))sub_1000AD1A8, (uint64_t)(&v44 - 4), 0, v24);
    uint64_t v25 = *(void *)(v45 + 16);
    if (v25)
    {
      uint64_t v26 = v45 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      uint64_t v27 = *(char **)(v46 + 72);
      unint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v23 + 32);
      uint64_t v30 = (char *)_swiftEmptyArrayStorage;
      uint64_t v47 = v27;
      do
      {
        uint64_t v31 = v51;
        sub_1000ACB44(v26, v51);
        sub_1000ACADC(v31, (uint64_t)v5);
        if ((*v28)(v5, 1, v7) == 1)
        {
          sub_10008DB18((uint64_t)v5, &qword_10094E8A8);
        }
        else
        {
          uint64_t v32 = *v29;
          uint64_t v33 = v48;
          (*v29)(v48, v5, v7);
          v32(v50, v33, v7);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v30 = (char *)sub_1000ACE2C(0, *((void *)v30 + 2) + 1, 1, (unint64_t)v30);
          }
          unint64_t v35 = *((void *)v30 + 2);
          unint64_t v34 = *((void *)v30 + 3);
          if (v35 >= v34 >> 1) {
            uint64_t v30 = (char *)sub_1000ACE2C(v34 > 1, v35 + 1, 1, (unint64_t)v30);
          }
          *((void *)v30 + 2) = v35 + 1;
          v32(&v30[((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v35], v50, v7);
          uint64_t v27 = v47;
        }
        v26 += (uint64_t)v27;
        --v25;
      }
      while (v25);
    }
    else
    {
      uint64_t v30 = (char *)_swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v7);
    swift_bridgeObjectRelease();
    return (uint64_t)v30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000ACADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094E8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ACB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094E8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ACBAC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AFA94(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000ACE60(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1000ACE2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000ACBAC(a1, a2, a3, a4, &qword_10094E720, (uint64_t (*)(void))&type metadata accessor for DateComponents, (uint64_t (*)(void))&type metadata accessor for DateComponents);
}

uint64_t sub_1000ACE60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000ACFBC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v8 = sub_1000AFA94(&qword_10094E8A8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8 - 8);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a3;
  uint64_t v13 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (!v13) {
    return (uint64_t)v14;
  }
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000AD684(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = v25;
    uint64_t v15 = v23;
    if (a4 <= v23) {
      uint64_t v16 = v23;
    }
    else {
      uint64_t v16 = a4;
    }
    uint64_t v20 = v16;
    while (a4 != v15)
    {
      uint64_t v24 = v15;
      v21(&v24);
      if (v5)
      {
        swift_release();
        return (uint64_t)v14;
      }
      uint64_t v5 = 0;
      uint64_t v25 = v14;
      unint64_t v18 = v14[2];
      unint64_t v17 = v14[3];
      if (v18 >= v17 >> 1)
      {
        sub_1000AD684(v17 > 1, v18 + 1, 1);
        uint64_t v14 = v25;
      }
      void v14[2] = v18 + 1;
      uint64_t result = sub_1000AEEC8((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v18, &qword_10094E8A8);
      if (a4 < v23) {
        goto LABEL_19;
      }
      if (v20 == v15) {
        goto LABEL_20;
      }
      if (a4 == ++v15) {
        return (uint64_t)v14;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1000AD1A8@<X0>(char *a1@<X8>)
{
  return sub_1000AD1C8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000AD1C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = type metadata accessor for DateComponents();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v5 - 8);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Calendar.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Calendar.Component.day(_:), v7);
  uint64_t v34 = a1;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, 1, 1, v33);
  }
  uint64_t v19 = v29;
  uint64_t v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  Class v22 = Calendar._bridgeToObjectiveC()().super.isa;
  id v23 = (id)_HKActivityCacheDateComponentsFromDate();

  if (v23)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v25 = (uint64_t)v30;
    uint64_t v26 = v33;
    v24(v30, v19, v33);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v27((char *)v25, 0, 1, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v26) != 1)
    {
      unint64_t v28 = v32;
      v24(v32, (char *)v25, v26);
      return v27(v28, 0, 1, v26);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v25 = (uint64_t)v30;
    uint64_t v26 = v33;
    v27(v30, 1, 1, v33);
  }
  sub_10008DB18(v25, &qword_10094E8A8);
  return v27(v32, 1, 1, v26);
}

uint64_t sub_1000AD684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000AD6B4(a1, a2, a3, (void *)*v3, &qword_10094E8A0, &qword_10094E8A8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000AD6B4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AFA94(a5);
  uint64_t v13 = *(void *)(sub_1000AFA94(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1000AFA94(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  Class v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000AD8F4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(char *, void), uint64_t a7, void *a8, char a9, uint64_t a10, void *a11, unsigned __int8 a12, uint64_t a13, void *a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v224 = a8;
  uint64_t v220 = type metadata accessor for Calendar.Component();
  uint64_t v22 = *(void *)(v220 - 8);
  __chkstk_darwin(v220);
  uint64_t v219 = (char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94((uint64_t *)&unk_100954720);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v222 = (char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v28 = (uint64_t *)((char *)&v184 - v27);
  *(void *)&long long v225 = type metadata accessor for Date();
  uint64_t v29 = __chkstk_darwin(v225);
  uint64_t v221 = (char *)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  __chkstk_darwin(v31);
  unint64_t v35 = (char *)&v184 - v34;
  if (a2)
  {
    id v217 = v33;
    uint64_t v213 = v28;
    uint64_t v198 = v22;
    uint64_t v196 = a5;
    uint64_t v197 = v32;
    uint64_t v223 = v32;
    uint64_t v36 = a6;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = _swiftEmptyArrayStorage;
    uint64_t v214 = (void *)(v37 + 16);
    uint64_t v38 = a7;
    id v39 = a2;
    uint64_t v218 = v36;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    Class v41 = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v224;
    *(void *)(v42 + 24) = v37;
    *(void *)&long long v264 = sub_100087438;
    *((void *)&v264 + 1) = v42;
    *(void *)&long long v262 = _NSConcreteStackBlock;
    *((void *)&v262 + 1) = 1107296256;
    *(void *)&long long v263 = sub_1000873C4;
    *((void *)&v263 + 1) = &unk_1008BF2F0;
    NSDate v43 = _Block_copy(&v262);
    uint64_t v195 = v37;
    swift_retain();
    swift_release();
    id v194 = v39;
    [v39 enumerateStatisticsFromDate:isa toDate:v41 withBlock:v43];
    _Block_release(v43);

    *(void *)&long long v216 = v38;
    if ((a9 & 1) != 0
      && (sub_1000AEEC8(a10, (uint64_t)v260, &qword_100954678), sub_100088F34((uint64_t)v260) != 1))
    {
      long long v272 = v260[10];
      long long v273 = v260[11];
      char v274 = v261;
      long long v268 = v260[6];
      long long v269 = v260[7];
      long long v271 = v260[9];
      long long v270 = v260[8];
      long long v264 = v260[2];
      long long v265 = v260[3];
      long long v267 = v260[5];
      long long v266 = v260[4];
      long long v263 = v260[1];
      long long v262 = v260[0];
      uint64_t v51 = v214;
      swift_beginAccess();
      sub_1000AFF94(a10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B00C0);
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v53 = sub_1000B2DB8(v52, (uint64_t)&v262);
      uint64_t v212 = 0;
      sub_1000AFF94(a10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
      swift_bridgeObjectRelease();
      *uint64_t v51 = v53;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v212 = 0;
    }
    uint64_t v54 = v214;
    swift_beginAccess();
    uint64_t v55 = *(void *)(*v54 + 16);
    uint64_t v56 = v223;
    uint64_t v57 = *(void (**)(char *, void (*)(void, void), void))(v223 + 16);
    uint64_t v58 = v225;
    v57(v35, (void (*)(void, void))v218, v225);
    unint64_t v59 = (char *)v217;
    v57((char *)v217, (void (*)(void, void))v216, v58);
    Date.timeIntervalSinceReferenceDate.getter();
    double v61 = v60;
    Date.timeIntervalSinceReferenceDate.getter();
    sub_100087AC8(v55, (uint64_t)v253, v61, v62);
    uint64_t v211 = v253[0];
    uint64_t v205 = v253[1];
    uint64_t v206 = v253[2];
    *(double *)&uint64_t v63 = v254;
    double v64 = v255;
    uint64_t v65 = *(void *)&v256;
    double v66 = v257;
    uint64_t v67 = *(void (**)(char *, void))(v56 + 8);
    v67(v59, v58);
    uint64_t v223 = v56 + 8;
    uint64_t v218 = v67;
    v67(v35, v58);
    uint64_t v68 = (void (**)(char *, void *, void))*v54;
    uint64_t v69 = *(void (***)(char *, uint64_t))(*v54 + 16);
    double v200 = 0.0;
    uint64_t v70 = &selRef_initUsingEarnedShader_;
    if (!v69) {
      goto LABEL_38;
    }
    double v71 = (void *)v253[0];
    double v72 = v254;
    double v73 = v256;
    swift_bridgeObjectRetain();
    uint64_t v74 = 0;
    unint64_t v75 = 0;
    long long v216 = xmmword_10074E640;
    id v217 = v68;
    uint64_t v215 = v69;
    while (1)
    {
      uint64_t v82 = v68[v75 + 4];
      if (v82)
      {
        id v78 = v82;
        if (objc_msgSend(v78, v70[177], a11))
        {
          [v78 doubleValueForUnit:a11];
          if (v75 < v71[2])
          {
            double v81 = v83;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v84 = v71;
            }
            else {
              uint64_t v84 = sub_1005EC1D4(v71);
            }
            if (v75 >= v84[2])
            {
LABEL_163:
              __break(1u);
              return;
            }
            uint64_t v211 = (uint64_t)v84;
            uint64_t v85 = (double *)&v84[v74];
            v85[4] = v81;
            v85[5] = 1.0;
            *((unsigned char *)v85 + 48) = 0;

            if (v72 < v81)
            {
              *(double *)&uint64_t v63 = v81;
              double v64 = 1.0;
              double v72 = v81;
            }
            if (v73 < 0.0 || v81 < v73)
            {
              double v66 = 1.0;
              uint64_t v65 = *(void *)&v81;
              double v71 = (void *)v211;
            }
            else
            {
              double v81 = v73;
              double v71 = (void *)v211;
            }
            goto LABEL_14;
          }
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v224 = v71;
          id v76 = (void *)HKLogActivity;
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v77 = swift_allocObject();
          *(_OWORD *)(v77 + 16) = v216;
          *(void *)(v77 + 56) = sub_10007E2D8(0, &qword_100954730);
          *(void *)(v77 + 64) = sub_1002B1A38(&qword_100954738, &qword_100954730);
          *(void *)(v77 + 32) = v78;
          *(void *)(v77 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_100954740);
          *(void *)(v77 + 104) = sub_1002B1A38(&qword_100954748, (unint64_t *)&qword_100954740);
          *(void *)(v77 + 72) = a11;
          id v78 = v78;
          id v79 = v76;
          id v80 = a11;
          uint64_t v70 = &selRef_initUsingEarnedShader_;
          os_log(_:dso:log:_:_:)();

          double v71 = v224;
          uint64_t v69 = v215;
          uint64_t v68 = v217;
          swift_bridgeObjectRelease();
        }
      }
      double v81 = v73;
LABEL_14:
      ++v75;
      v74 += 3;
      double v73 = v81;
      if (v69 == (void (**)(char *, uint64_t))v75)
      {
        swift_bridgeObjectRelease();
        uint64_t v86 = *v214;
        uint64_t v87 = *(void *)(*v214 + 16);
        if (v87)
        {
          uint64_t v88 = v86 + 32;
          swift_bridgeObjectRetain();
          double v89 = 0.0;
          uint64_t v90 = 0;
          uint64_t v91 = *(void **)(v86 + 32);
          if (v91) {
            goto LABEL_34;
          }
LABEL_32:
          while (v87 != ++v90)
          {
            uint64_t v91 = *(void **)(v88 + 8 * v90);
            if (v91)
            {
LABEL_34:
              while (1)
              {
                id v92 = v91;
                if (!objc_msgSend(v92, v70[177], a11)) {
                  break;
                }
                [v92 doubleValueForUnit:a11];
                double v94 = v93;

                double v89 = v89 + v94;
                uint64_t v95 = v90 + 1;
                if (v87 - 1 == v90) {
                  goto LABEL_39;
                }
                ++v90;
                uint64_t v91 = *(void **)(v88 + 8 * v95);
                if (!v91) {
                  goto LABEL_32;
                }
              }
            }
          }
LABEL_39:
          swift_bridgeObjectRelease();
LABEL_40:
          uint64_t v96 = v213;
          uint64_t v97 = *v214;
          uint64_t v98 = *(void *)(*v214 + 16);
          uint64_t v203 = *(void *)&v64;
          uint64_t v204 = v63;
          uint64_t v201 = v65;
          uint64_t v202 = *(void *)&v66;
          if (v98)
          {
            swift_bridgeObjectRetain();
            uint64_t v99 = 0;
            uint64_t v100 = 0;
            while (1)
            {
              unsigned int v101 = *(void **)(v97 + 8 * v99 + 32);
              if (v101)
              {
                if (objc_msgSend(v101, v70[177], a11))
                {
                  if (__OFADD__(v100++, 1)) {
                    break;
                  }
                }
              }
              if (v98 == ++v99) {
                goto LABEL_48;
              }
            }
            __break(1u);
LABEL_48:
            swift_bridgeObjectRelease();
            double v103 = 0.0;
            if (v100 > 0) {
              double v103 = v89 / (double)v100;
            }
            double v200 = v103;
          }
          else
          {
            uint64_t v100 = 0;
          }
          id v104 = v221;
          uint64_t v105 = (uint64_t)v222;
          uint64_t v193 = a15 + 16;
          int v192 = a16;
          NSNumber v186 = a14;
          uint64_t v185 = a13;
          int v187 = a12;
          double v199 = (double)v100;
          sub_100087AC8(7, (uint64_t)v258, 0.0, 6.0);
          uint64_t v212 = (void *)v258[0];
          uint64_t v191 = v258[1];
          uint64_t v190 = v258[2];
          double v106 = *(double *)&v258[3];
          double v107 = *(double *)&v258[5];
          double v209 = *(double *)&v258[6];
          double v210 = *(double *)&v258[4];
          sub_100087AC8(7, (uint64_t)v259, 0.0, 6.0);
          uint64_t v213 = (void *)v259[0];
          uint64_t v189 = v259[1];
          uint64_t v188 = v259[2];
          double v108 = *(double *)&v259[3];
          double v109 = *(double *)&v259[5];
          double v207 = *(double *)&v259[4];
          double v208 = *(double *)&v259[6];
          v276[0] = v211;
          v276[1] = v205;
          v276[2] = v206;
          v276[3] = v204;
          v276[4] = v203;
          v276[5] = v201;
          v276[6] = v202;
          uint64_t v110 = *(void *)(v211 + 16);
          sub_1000B013C((uint64_t)v276);
          uint64_t v111 = sub_1000B0174(0, v110, v276);
          sub_1000B008C((uint64_t)v276);
          unint64_t v112 = 0;
          id v217 = (void (**)(char *, void *, void))(v197 + 32);
          id v113 = *(void **)(v111 + 16);
          uint64_t v215 = (void (**)(char *, uint64_t))(v198 + 8);
          *(void *)&long long v216 = v198 + 104;
          LODWORD(v214) = enum case for Calendar.Component.weekday(_:);
          double v114 = &qword_10094E8B8;
          double v115 = 1.0;
          double v116 = 0.0;
          while (2)
          {
            if ((void *)v112 == v113)
            {
              uint64_t v117 = sub_1000AFA94(v114);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v105, 1, 1, v117);
              id v118 = v113;
            }
            else
            {
              if ((v112 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
                goto LABEL_163;
              }
              if (v112 >= *(void *)(v111 + 16)) {
                goto LABEL_160;
              }
              uint64_t v119 = sub_1000AFA94(v114);
              uint64_t v120 = *(void *)(v119 - 8);
              sub_1000AEF2C(v111+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(void *)(v120 + 72) * v112, v105, v114);
              id v118 = (void *)(v112 + 1);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v105, 0, 1, v119);
            }
            sub_1000AEEC8(v105, (uint64_t)v96, (uint64_t *)&unk_100954720);
            uint64_t v121 = sub_1000AFA94(v114);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 48))(v96, 1, v121) == 1)
            {
              swift_bridgeObjectRelease();
              if (v187)
              {
                static os_log_type_t.default.getter();
                uint64_t v163 = (void *)HKLogActivity;
                sub_1000AFA94((uint64_t *)&unk_1009546D0);
                uint64_t v164 = swift_allocObject();
                long long v225 = xmmword_1007509E0;
                *(_OWORD *)(v164 + 16) = xmmword_1007509E0;
                uint64_t v251 = 0;
                unint64_t v252 = 0xE000000000000000;
                id v165 = v163;
                _StringGuts.grow(_:)(16);
                id v166 = v186;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v167 = v185;
                uint64_t v251 = v185;
                unint64_t v252 = (unint64_t)v166;
                v168._object = (void *)0xEC000000203A6D61;
                v168._uint64_t countAndFlagsBits = 0x72676F7473694820;
                String.append(_:)(v168);
                v275[0] = v211;
                v275[1] = v205;
                v275[2] = v206;
                v275[3] = v204;
                v275[4] = v203;
                v275[5] = v201;
                v275[6] = v202;
                sub_1000B013C((uint64_t)v275);
                uint64_t v169 = sub_1000B1808();
                NSString v171 = v170;
                sub_1000B008C((uint64_t)v275);
                v172._uint64_t countAndFlagsBits = v169;
                v172._object = v171;
                String.append(_:)(v172);
                swift_bridgeObjectRelease();
                uint64_t v173 = v251;
                unint64_t v174 = v252;
                *(void *)(v164 + 56) = &type metadata for String;
                unint64_t v175 = sub_1000AA64C();
                *(void *)(v164 + 64) = v175;
                *(void *)(v164 + 32) = v173;
                *(void *)(v164 + 40) = v174;
                os_log(_:dso:log:_:_:)();

                swift_bridgeObjectRelease();
                static os_log_type_t.default.getter();
                id v176 = (void *)HKLogActivity;
                uint64_t v177 = swift_allocObject();
                *(_OWORD *)(v177 + 16) = v225;
                uint64_t v251 = 0;
                unint64_t v252 = 0xE000000000000000;
                id v178 = v176;
                _StringGuts.grow(_:)(16);
                v179._uint64_t countAndFlagsBits = v167;
                v179._object = v166;
                String.append(_:)(v179);
                v180._uint64_t countAndFlagsBits = 0x6167657267674120;
                v180._object = (void *)0xEC000000203A6574;
                String.append(_:)(v180);
                double v226 = v200;
                double v227 = v199;
                _print_unlocked<A, B>(_:_:)();
                uint64_t v181 = v251;
                unint64_t v182 = v252;
                *(void *)(v177 + 56) = &type metadata for String;
                *(void *)(v177 + 64) = v175;
                *(void *)(v177 + 32) = v181;
                *(void *)(v177 + 40) = v182;
                os_log(_:dso:log:_:_:)();

                swift_bridgeObjectRelease();
              }
              double v226 = v200;
              double v227 = v199;
              uint64_t v228 = v211;
              uint64_t v229 = v205;
              uint64_t v230 = v206;
              uint64_t v231 = v204;
              uint64_t v232 = v203;
              uint64_t v233 = v201;
              uint64_t v234 = v202;
              uint64_t v235 = v212;
              uint64_t v236 = v191;
              uint64_t v237 = v190;
              double v238 = v106;
              double v239 = v210;
              double v240 = v107;
              double v241 = v209;
              char v242 = v213;
              uint64_t v243 = v189;
              uint64_t v244 = v188;
              double v245 = v108;
              double v246 = v207;
              double v247 = v109;
              double v248 = v208;
              double v249 = v116;
              char v250 = v192;
              ASFriendListDisplayMode.id.getter(&v226);
              uint64_t v183 = v193;
              swift_beginAccess();
              sub_1000AEEC8(v183, (uint64_t)&v251, &qword_100954678);
              sub_1000AEEC8((uint64_t)&v226, v183, &qword_100954678);
              sub_1000AFF94((uint64_t)&v251, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000B0010);
              OS_dispatch_semaphore.signal()();
              swift_release();

              return;
            }
            uint64_t v224 = v118;
            double v122 = v114;
            double v123 = v113;
            uint64_t v124 = v111;
            id v125 = (double *)((char *)v96 + *(int *)(v121 + 48));
            double v126 = *v125;
            char v127 = *((unsigned char *)v125 + 16);
            (*v217)(v104, v96, v225);
            if (qword_10094A5F0 != -1) {
              swift_once();
            }
            uint64_t v128 = type metadata accessor for Calendar();
            sub_1000876DC(v128, (uint64_t)qword_100997628);
            id v130 = v219;
            uint64_t v129 = v220;
            (*(void (**)(char *, void, uint64_t))v216)(v219, v214, v220);
            uint64_t v131 = Calendar.component(_:from:)();
            (*v215)(v130, v129);
            unint64_t v132 = v131 - 1;
            if (v132 <= 6 && (v127 & 1) == 0)
            {
              double v134 = v212;
              double v133 = v213;
              if (v132 < v212[2])
              {
                id v135 = (double *)&v212[3 * v132];
                if ((_BYTE)v135[6])
                {
                  double v136 = 1.0;
                  double v137 = 0.0;
                }
                else
                {
                  double v137 = v135[4];
                  double v136 = v135[5];
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  double v134 = sub_1005EC1D4(v134);
                }
                double v133 = v213;
                if (v132 >= v134[2]) {
                  goto LABEL_161;
                }
                double v138 = (v126 + v137 * v136) / (v136 + v115);
                uint64_t v139 = (double *)&v134[3 * v132];
                v139[4] = v138;
                v139[5] = v136 + v115;
                *((unsigned char *)v139 + 48) = 0;
                BOOL v140 = v106 < v138;
                if (v106 < v138) {
                  double v106 = (v126 + v137 * v136) / (v136 + v115);
                }
                double v141 = v210;
                if (v140) {
                  double v141 = v136 + v115;
                }
                BOOL v142 = v107 < 0.0;
                if (v138 < v107) {
                  BOOL v142 = 1;
                }
                if (v142) {
                  double v107 = (v126 + v137 * v136) / (v136 + v115);
                }
                double v143 = v209;
                if (v142) {
                  double v143 = v136 + v115;
                }
                double v209 = v143;
                double v210 = v141;
              }
              if (v132 >= v133[2])
              {
                id v104 = v221;
                uint64_t v105 = (uint64_t)v222;
              }
              else
              {
                id v144 = (double *)&v133[3 * v132];
                if ((_BYTE)v144[6])
                {
                  double v145 = 1.0;
                  double v146 = 0.0;
                }
                else
                {
                  double v146 = v144[4];
                  double v145 = v144[5];
                }
                if (swift_isUniquelyReferenced_nonNull_native())
                {
                  id v104 = v221;
                  uint64_t v105 = (uint64_t)v222;
                  double v133 = v213;
                }
                else
                {
                  double v133 = sub_1005EC1D4(v213);
                  id v104 = v221;
                  uint64_t v105 = (uint64_t)v222;
                }
                if (v132 >= v133[2]) {
                  goto LABEL_162;
                }
                double v115 = 1.0;
                double v147 = (v146 * v145 + 1.0) / (v145 + 1.0);
                id v148 = (double *)&v133[3 * v132];
                v148[4] = v147;
                v148[5] = v145 + 1.0;
                *((unsigned char *)v148 + 48) = 0;
                BOOL v149 = v108 < v147;
                if (v108 < v147) {
                  double v108 = (v146 * v145 + 1.0) / (v145 + 1.0);
                }
                double v150 = v207;
                if (v149) {
                  double v150 = v145 + 1.0;
                }
                BOOL v151 = v109 < 0.0;
                if (v147 < v109) {
                  BOOL v151 = 1;
                }
                if (v151) {
                  double v109 = (v146 * v145 + 1.0) / (v145 + 1.0);
                }
                double v152 = v208;
                if (v151) {
                  double v152 = v145 + 1.0;
                }
                double v207 = v150;
                double v208 = v152;
              }
              unint64_t v153 = v134[2];
              uint64_t v212 = v134;
              uint64_t v154 = (double *)(v134 + 4);
              char v155 = (double *)(v133 + 4);
              double v116 = 0.0;
              if (v153 && (v134[6] & 1) == 0 && v133[2])
              {
                uint64_t v111 = v124;
                if ((v133[6] & 1) == 0)
                {
                  id v113 = v123;
                  double v114 = v122;
                  unint64_t v112 = (unint64_t)v224;
                  if (*v155 > 0.0)
                  {
                    if (*v154 / *v155 > 0.0) {
                      double v116 = *v154 / *v155;
                    }
                    else {
                      double v116 = 0.0;
                    }
                  }
LABEL_112:
                  if (v153 > 1 && ((_BYTE)v154[5] & 1) == 0 && v133[2] > 1uLL)
                  {
                    id v156 = (double *)(v133 + 7);
                    if ((v133[9] & 1) == 0 && *v156 > 0.0 && v154[3] / *v156 > v116) {
                      double v116 = v154[3] / *v156;
                    }
                  }
                  if (v153 > 2 && ((_BYTE)v154[8] & 1) == 0 && v133[2] > 2uLL)
                  {
                    uint64_t v157 = (double *)(v133 + 10);
                    if ((v133[12] & 1) == 0 && *v157 > 0.0 && v154[6] / *v157 > v116) {
                      double v116 = v154[6] / *v157;
                    }
                  }
                  if (v153 > 3 && ((_BYTE)v154[11] & 1) == 0 && v133[2] > 3uLL)
                  {
                    char v158 = (double *)(v133 + 13);
                    if ((v133[15] & 1) == 0 && *v158 > 0.0 && v154[9] / *v158 > v116) {
                      double v116 = v154[9] / *v158;
                    }
                  }
                  if (v153 > 4 && ((_BYTE)v154[14] & 1) == 0 && v133[2] > 4uLL)
                  {
                    uint64_t v159 = (double *)(v133 + 16);
                    if ((v133[18] & 1) == 0 && *v159 > 0.0 && v154[12] / *v159 > v116) {
                      double v116 = v154[12] / *v159;
                    }
                  }
                  if (v153 > 5 && ((_BYTE)v154[17] & 1) == 0 && v133[2] > 5uLL)
                  {
                    id v160 = (double *)(v133 + 19);
                    if ((v133[21] & 1) == 0 && *v160 > 0.0 && v154[15] / *v160 > v116) {
                      double v116 = v154[15] / *v160;
                    }
                  }
                  uint64_t v213 = v133;
                  if (v153 > 6)
                  {
                    id v161 = v154 + 18;
                    if (((_BYTE)v161[2] & 1) == 0 && v133[2] > 6uLL)
                    {
                      uint64_t v162 = (double *)(v133 + 22);
                      if ((v133[24] & 1) == 0 && *v162 > 0.0 && *v161 / *v162 > v116) {
                        double v116 = *v161 / *v162;
                      }
                    }
                  }
LABEL_54:
                  v218(v104, v225);
                  continue;
                }
              }
              else
              {
                uint64_t v111 = v124;
              }
              id v113 = v123;
              double v114 = v122;
              unint64_t v112 = (unint64_t)v224;
              goto LABEL_112;
            }
            break;
          }
          id v104 = v221;
          uint64_t v105 = (uint64_t)v222;
          uint64_t v111 = v124;
          id v113 = v123;
          double v114 = v122;
          unint64_t v112 = (unint64_t)v224;
          goto LABEL_54;
        }
LABEL_38:
        double v89 = 0.0;
        goto LABEL_40;
      }
    }
  }
  if (a3)
  {
    uint64_t v44 = a4;
    uint64_t v45 = (void *)_convertErrorToNSError(_:)();
    static os_log_type_t.error.getter();
    uint64_t v46 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_10074E640;
    *(void *)(v47 + 56) = sub_10007E2D8(0, &qword_10094F0F0);
    *(void *)(v47 + 64) = sub_1002B1A38(&qword_1009546E0, &qword_10094F0F0);
    *(void *)(v47 + 32) = v44;
    *(void *)(v47 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_100954710);
    *(void *)(v47 + 104) = sub_1002B1A38((unint64_t *)&qword_100955F20, (unint64_t *)&qword_100954710);
    *(void *)(v47 + 72) = v45;
    id v48 = v46;
    id v49 = v44;
    id v50 = v45;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
  OS_dispatch_semaphore.signal()();
}

uint64_t sub_1000AEEC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000AFA94(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AEF2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000AFA94(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AEF90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v79 = a4;
  uint64_t v80 = a2;
  uint64_t v76 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_100967080);
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  __chkstk_darwin(v5);
  unint64_t v75 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100967088);
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  __chkstk_darwin(v7);
  uint64_t v67 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100967090);
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  __chkstk_darwin(v9);
  double v64 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_100967098);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  double v61 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000AFA94(&qword_1009670A0);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009670A8);
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  __chkstk_darwin(v13);
  double v72 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_1009670B0);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_1009670B8);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000AFA94(&qword_1009670C0);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_1009670C8);
  uint64_t v51 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_1009670D0);
  uint64_t v50 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94(&qword_1009670D8);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v82 = v26;
  uint64_t v83 = v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E4EC(a1, a1[3]);
  sub_1000AFAD8();
  double v81 = v29;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v79)
  {
    case 1:
      v89[17] = 5;
      sub_100667CE4();
      unint64_t v18 = v72;
      uint64_t v31 = v81;
      uint64_t v30 = v82;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v32 = v74;
      KeyedEncodingContainer.encode(_:forKey:)();
      uint64_t v33 = v73;
      goto LABEL_5;
    case 2:
      v89[23] = 10;
      sub_100667BE8();
      unint64_t v18 = v75;
      uint64_t v31 = v81;
      uint64_t v30 = v82;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      v89[22] = v80;
      sub_100667D8C();
      uint64_t v32 = v78;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v33 = v77;
      goto LABEL_5;
    case 3:
      switch(v80)
      {
        case 1:
          char v85 = 1;
          sub_100667D38();
          uint64_t v37 = v81;
          uint64_t v38 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v20);
          return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v37, v38);
        case 2:
          char v86 = 2;
          sub_1000AFC28();
          id v39 = v52;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          unint64_t v40 = *(void (**)(char *, uint64_t))(v53 + 8);
          Class v41 = v39;
          uint64_t v42 = (uint64_t *)v89;
          goto LABEL_13;
        case 3:
          v89[16] = 4;
          sub_1000AFD24();
          NSDate v43 = v55;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          unint64_t v40 = *(void (**)(char *, uint64_t))(v56 + 8);
          Class v41 = v43;
          uint64_t v42 = &v90;
          goto LABEL_13;
        case 4:
          v89[18] = 6;
          sub_100667C90();
          uint64_t v44 = v58;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          unint64_t v40 = *(void (**)(char *, uint64_t))(v59 + 8);
          Class v41 = v44;
          uint64_t v42 = &v91;
          goto LABEL_13;
        case 5:
          v89[19] = 7;
          sub_1000AFD78();
          uint64_t v45 = v61;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          unint64_t v40 = *(void (**)(char *, uint64_t))(v62 + 8);
          Class v41 = v45;
          uint64_t v42 = &v92;
LABEL_13:
          uint64_t v46 = *(v42 - 32);
          goto LABEL_17;
        case 6:
          v89[20] = 8;
          sub_1000AFBD4();
          uint64_t v47 = v64;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v48 = v65;
          uint64_t v46 = v66;
          goto LABEL_16;
        case 7:
          v89[21] = 9;
          sub_1000AFC7C();
          uint64_t v47 = v67;
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v48 = v68;
          uint64_t v46 = v69;
LABEL_16:
          unint64_t v40 = *(void (**)(char *, uint64_t))(v48 + 8);
          Class v41 = v47;
LABEL_17:
          v40(v41, v46);
          break;
        default:
          char v84 = 0;
          sub_1000AFCD0();
          uint64_t v36 = v81;
          uint64_t v35 = v82;
          KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v23);
          break;
      }
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v36, v35);
    default:
      char v88 = 3;
      sub_1000AFB2C();
      uint64_t v31 = v81;
      uint64_t v30 = v82;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v87 = v80;
      sub_1000AFB80();
      uint64_t v32 = v71;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v33 = v70;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v31, v30);
  }
}

uint64_t sub_1000AFA94(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000AFAD8()
{
  unint64_t result = qword_100967008;
  if (!qword_100967008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967008);
  }
  return result;
}

unint64_t sub_1000AFB2C()
{
  unint64_t result = qword_100967058;
  if (!qword_100967058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967058);
  }
  return result;
}

unint64_t sub_1000AFB80()
{
  unint64_t result = qword_1009670E8;
  if (!qword_1009670E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009670E8);
  }
  return result;
}

unint64_t sub_1000AFBD4()
{
  unint64_t result = qword_100967030;
  if (!qword_100967030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967030);
  }
  return result;
}

unint64_t sub_1000AFC28()
{
  unint64_t result = qword_100967068;
  if (!qword_100967068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967068);
  }
  return result;
}

unint64_t sub_1000AFC7C()
{
  unint64_t result = qword_100967028;
  if (!qword_100967028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967028);
  }
  return result;
}

unint64_t sub_1000AFCD0()
{
  unint64_t result = qword_100967078;
  if (!qword_100967078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967078);
  }
  return result;
}

unint64_t sub_1000AFD24()
{
  unint64_t result = qword_100967050;
  if (!qword_100967050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967050);
  }
  return result;
}

unint64_t sub_1000AFD78()
{
  unint64_t result = qword_100967038;
  if (!qword_100967038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967038);
  }
  return result;
}

void *sub_1000AFDCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  uint64_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_retain();
  if (v11(v10, 1, v6))
  {
    int v12 = *(_DWORD *)(v7 + 84);
    uint64_t v13 = *(void *)(v7 + 64);
    if (v12) {
      size_t v14 = *(void *)(v7 + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v9, v10, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    uint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v15 = v7 + 56;
    v16(v9, 0, 1, v6);
    int v12 = *(_DWORD *)(v15 + 28);
    uint64_t v13 = *(void *)(v15 + 8);
  }
  uint64_t v17 = v13 + ((v8 + 16) & ~v8);
  if (!v12) {
    ++v17;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 16))(((unint64_t)a1 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)a2 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1000AFF94(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 192);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    v4);
  return a1;
}

uint64_t sub_1000B0010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B008C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B00C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000B013C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B0174(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v27 = sub_1000AFA94(&qword_10094E8B8);
  uint64_t v7 = *(void *)(v27 - 8);
  uint64_t result = __chkstk_darwin(v27);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1;
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B03AC(0, v12 & ~(v12 >> 63), 0);
  if (a2 >= v28 && (v12 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = *a3;
    uint64_t v14 = a3[1];
    v25[1] = v3;
    v25[2] = v14 + 32;
    uint64_t v13 = v29;
    uint64_t v16 = *(void *)(v14 + 16);
    unint64_t v17 = v28;
    if (v16 <= v28) {
      uint64_t v16 = v28;
    }
    uint64_t v26 = v16;
    uint64_t v18 = v15;
    uint64_t v19 = (unsigned char *)(v15 + 24 * v28 + 48);
    while (a2 != v17)
    {
      if (v28 < 0) {
        goto LABEL_19;
      }
      if (v26 == v17) {
        goto LABEL_20;
      }
      Date.init(timeIntervalSinceReferenceDate:)();
      if (v17 >= *(void *)(v18 + 16))
      {
        long long v20 = 0uLL;
        char v21 = 1;
      }
      else
      {
        long long v20 = *((_OWORD *)v19 - 1);
        char v21 = *v19;
      }
      uint64_t v22 = &v10[*(int *)(v27 + 48)];
      *(_OWORD *)uint64_t v22 = v20;
      v22[16] = v21;
      uint64_t v29 = v13;
      unint64_t v24 = v13[2];
      unint64_t v23 = v13[3];
      if (v24 >= v23 >> 1)
      {
        sub_1000B03AC(v23 > 1, v24 + 1, 1);
        uint64_t v13 = v29;
      }
      v13[2] = v24 + 1;
      uint64_t result = sub_1000AEEC8((uint64_t)v10, (uint64_t)v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v24, &qword_10094E8B8);
      ++v17;
      v19 += 24;
      if (a2 == v17) {
        return (uint64_t)v13;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1000B03AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000AD6B4(a1, a2, a3, (void *)*v3, &qword_10094E8B0, &qword_10094E8B8);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_1000B03E0()
{
  unint64_t result = qword_10094D0D0;
  if (!qword_10094D0D0)
  {
    sub_1000A1370(&qword_10094D0D8);
    sub_1000D050C(&qword_10094D0E0, (void (*)(uint64_t))type metadata accessor for CatalogTipCardView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D0D0);
  }
  return result;
}

unint64_t sub_1000B0484()
{
  unint64_t result = qword_10094D0B8;
  if (!qword_10094D0B8)
  {
    sub_1000A1370(&qword_10094D0C0);
    sub_1000D050C(&qword_10094D0C8, (void (*)(uint64_t))type metadata accessor for FitnessPlusUpNextView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D0B8);
  }
  return result;
}

uint64_t sub_1000B0528(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1000B0590(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v78[1] = a5;
  uint64_t v83 = (char *)a3;
  char v84 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v82 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095F668);
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  __chkstk_darwin(v9);
  BOOL v11 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10095F670);
  uint64_t v79 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78[0] = type metadata accessor for TrainingLoadTrackingTip();
  __chkstk_darwin(v78[0]);
  uint64_t v16 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CustomizeSummaryTip();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return [objc_allocWithZone((Class)UICollectionViewCell) init];
  }
  char v21 = (char *)Strong;
  switch(IndexPath.section.getter())
  {
    case 0:
      swift_bridgeObjectRetain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v84 dequeueReusableCellWithReuseIdentifier:v22 forIndexPath:isa];

      type metadata accessor for TipUICollectionViewCell();
      uint64_t v25 = swift_dynamicCastClass();
      if (v25)
      {
        char v84 = v25;
        id v26 = v24;
      }
      else
      {
        char v84 = 0;
      }
      uint64_t v83 = &v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip];
      sub_1000B0528((uint64_t)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip], (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
      char v54 = static UUID.== infix(_:_:)();
      uint64_t v55 = type metadata accessor for UUID();
      uint64_t v56 = *(void (**)(char *, uint64_t))(*(void *)(v55 - 8) + 8);
      v56(v19, v55);
      if (v54)
      {
        uint64_t v57 = v84;
        if (v84)
        {
          uint64_t v58 = self;
          uint64_t v59 = v57;
          id v60 = [v58 grayColor];
          [v59 setTintColor:v60];

          uint64_t v89 = v17;
          uint64_t v90 = sub_1000B7550(&qword_10095F6B8, (void (*)(uint64_t))type metadata accessor for CustomizeSummaryTip);
          double v61 = sub_1000B1710(v88);
          sub_1000B0528((uint64_t)v83, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
          *(void *)(swift_allocObject() + 16) = v21;
          uint64_t v62 = v59;
          uint64_t v63 = v21;

          swift_release();
LABEL_26:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v88);
          return v24;
        }
LABEL_27:

        return v24;
      }
      uint64_t v64 = (uint64_t)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip];
      sub_1000B0528((uint64_t)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip], (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TrainingLoadTrackingTip);
      char v65 = static UUID.== infix(_:_:)();
      v56(v16, v55);
      if (v65)
      {
        uint64_t v66 = v84;
        if (v84)
        {
          uint64_t v89 = v78[0];
          uint64_t v90 = sub_1000B7550(&qword_10095F6B0, (void (*)(uint64_t))type metadata accessor for TrainingLoadTrackingTip);
          uint64_t v67 = sub_1000B1710(v88);
          sub_1000B0528(v64, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TrainingLoadTrackingTip);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v68 = v66;
          swift_retain();

          swift_release_n();
          goto LABEL_26;
        }
        goto LABEL_27;
      }

      return v24;
    case 1:
      NSString v36 = String._bridgeToObjectiveC()();
      Class v37 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v84 dequeueReusableCellWithReuseIdentifier:v36 forIndexPath:v37];

      type metadata accessor for ActivityDashboardCardCell();
      uint64_t v38 = swift_dynamicCastClass();
      if (!v38) {
        goto LABEL_27;
      }
      id v39 = (char *)v38;
      uint64_t v40 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
      uint64_t v41 = *(void *)(*(void *)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                      + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId);
      if (!*(void *)(v41 + 16))
      {
        uint64_t v87 = 0;
        long long v85 = 0u;
        long long v86 = 0u;
        id v69 = v24;
        if (*((void *)&v86 + 1)) {
          goto LABEL_33;
        }
LABEL_30:

        sub_10008DB18((uint64_t)&v85, &qword_10094CEF0);
        return v24;
      }
      id v42 = v24;
      swift_bridgeObjectRetain();
      unint64_t v43 = sub_10008F618((uint64_t)v83);
      if (v44)
      {
        sub_10008E75C(*(void *)(v41 + 56) + 40 * v43, (uint64_t)&v85);
      }
      else
      {
        uint64_t v87 = 0;
        long long v85 = 0u;
        long long v86 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v86 + 1)) {
        goto LABEL_30;
      }
LABEL_33:
      sub_100093E60(&v85, (uint64_t)v88);
      id result = [v21 view];
      if (result)
      {
        uint64_t v71 = result;
        id v72 = [result window];

        if (v72)
        {
          [v72 bounds];
        }
        uint64_t v73 = *(unsigned __int8 **)&v21[v40];
        uint64_t v74 = *(void *)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache];
        uint64_t v75 = *(void *)&v21[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_loadingCardHeightProvider];
        int v76 = v73[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode];
        uint64_t v77 = v73;
        sub_1000B134C(v88, v21, v77, v74, v75, v76, v39);

        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v88);
        return v24;
      }
      __break(1u);
      return result;
    case 2:
      NSString v45 = String._bridgeToObjectiveC()();
      Class v46 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v84 dequeueReusableCellWithReuseIdentifier:v45 forIndexPath:v46];

      type metadata accessor for ActivityDashboardEditButtonCell();
      uint64_t v47 = swift_dynamicCastClass();
      if (!v47) {
        goto LABEL_27;
      }
      __chkstk_darwin(v47);
      v78[-2] = v21;
      id v48 = v24;
      sub_1000AFA94(&qword_10095F690);
      sub_1000A132C(&qword_10095F698, &qword_10095F690);
      UIHostingConfiguration<>.init(content:)();
      static Edge.Set.all.getter();
      uint64_t v89 = v12;
      uint64_t v90 = sub_1000A132C((unint64_t *)&unk_10095F6A0, &qword_10095F670);
      sub_1000B1710(v88);
      UIHostingConfiguration.margins(_:_:)();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v14, v12);
      UICollectionViewCell.contentConfiguration.setter();

      return v24;
    case 3:
      NSString v49 = String._bridgeToObjectiveC()();
      Class v50 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v24 = [v84 dequeueReusableCellWithReuseIdentifier:v49 forIndexPath:v50];

      type metadata accessor for ActivityDashboardEntryLinksButtonCell();
      uint64_t v51 = swift_dynamicCastClass();
      if (!v51) {
        goto LABEL_27;
      }
      __chkstk_darwin(v51);
      v78[-2] = v21;
      id v52 = v24;
      sub_1000AFA94(&qword_10095F678);
      sub_1000A132C(&qword_10095F680, &qword_10095F678);
      UIHostingConfiguration<>.init(content:)();
      static Edge.Set.all.getter();
      uint64_t v53 = v81;
      uint64_t v89 = v81;
      uint64_t v90 = sub_1000A132C(&qword_10095F688, &qword_10095F668);
      sub_1000B1710(v88);
      UIHostingConfiguration.margins(_:_:)();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v11, v53);
      UICollectionViewCell.contentConfiguration.setter();

      return v24;
    default:
      os_log_type_t v27 = static os_log_type_t.error.getter();
      uint64_t v28 = HKLogActivity;
      uint64_t v29 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v8, a2, v6);
      if (os_log_type_enabled(v28, v27))
      {
        char v84 = v28;
        uint64_t v30 = v29;
        uint64_t v31 = swift_slowAlloc();
        v88[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v32 = _typeName(_:qualified:)();
        *(void *)&long long v85 = sub_10008F1F4(v32, v33, v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2048;
        uint64_t v34 = IndexPath.section.getter();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
        *(void *)&long long v85 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v35 = v84;
        _os_log_impl((void *)&_mh_execute_header, v84, v27, "%s Found unexpected section with value: %ld. Unable to configure cell.", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
      }

      return 0;
  }
}

uint64_t type metadata accessor for CustomizeSummaryTip()
{
  uint64_t result = qword_100961398;
  if (!qword_100961398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadTrackingTip()
{
  uint64_t result = qword_100963CF0;
  if (!qword_100963CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B134C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, int a6, char *a7)
{
  int v37 = a6;
  uint64_t v13 = sub_1000AFA94(&qword_10095F6E0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SummaryCoordinator();
  v46[4] = &off_1008C72D8;
  void v46[3] = v17;
  v46[0] = a3;
  uint64_t v18 = *(void **)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  *(void *)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController] = a2;
  id v19 = a3;
  id v20 = a2;

  sub_10008E75C((uint64_t)v46, (uint64_t)v45);
  uint64_t v21 = (uint64_t)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess();
  sub_1000B1774((uint64_t)v45, v21, &qword_10095F6E8);
  swift_endAccess();
  *(void *)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider] = a5;
  swift_retain();
  swift_release();
  sub_10008E75C((uint64_t)a1, (uint64_t)v45);
  uint64_t v22 = (uint64_t)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  swift_beginAccess();
  sub_1000B1774((uint64_t)v45, v22, &qword_10094CEF0);
  swift_endAccess();
  uint64_t v38 = a1;
  id v39 = a7;
  uint64_t v40 = a4;
  char v41 = v37;
  sub_1000AFA94(&qword_10095F6F0);
  uint64_t v23 = sub_1000A1370(&qword_10095F6F8);
  uint64_t v24 = sub_1000A132C(&qword_10095F700, &qword_10095F6F8);
  v45[0] = v23;
  v45[1] = v24;
  swift_getOpaqueTypeConformance2();
  UIHostingConfiguration<>.init(content:)();
  static Edge.Set.all.getter();
  v45[3] = v13;
  v45[4] = sub_1000A132C(&qword_10095F708, &qword_10095F6E0);
  sub_1000B1710(v45);
  UIHostingConfiguration.margins(_:_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  UICollectionViewCell.contentConfiguration.setter();
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_10007E4EC(a1, v25);
  LOBYTE(v16) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32))(v25, v26);
  sub_10008E75C((uint64_t)a1, (uint64_t)v42);
  if (v16)
  {
    uint64_t v27 = v43;
    uint64_t v28 = v44;
    sub_10007E4EC(v42, v43);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    int v33 = v31 != 3 || (v29 | v30) != 0;
    sub_1000917F8(v29, v30, v31);
  }
  else
  {
    int v33 = 0;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v42);
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling;
  if (v33 != a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling])
  {
    sub_1006E8DD8(v33, a7);
    a7[v34] = v33;
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v46);
}

uint64_t *sub_1000B1710(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000B1774(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000AFA94(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B17D8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t type metadata accessor for SummaryCoordinator()
{
  return self;
}

uint64_t sub_1000B1808()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[1];
  uint64_t v20 = v6;
  int64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v19[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000B1A48(0, v7, 0);
    uint64_t v8 = (void *)v19[0];
    uint64_t v9 = v6 + 32;
    do
    {
      Date.init(timeIntervalSinceReferenceDate:)();
      v19[0] = v8;
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        sub_1000B1A48(v10 > 1, v11 + 1, 1);
        uint64_t v8 = (void *)v19[0];
      }
      void v8[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v11, v4, v1);
      v9 += 8;
      --v7;
    }
    while (v7);
    sub_1000B1AE0((uint64_t)&v20);
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10008D5E0((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19[0] = v12;
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000B1A84();
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  v19[0] = 91;
  v19[1] = 0xE100000000000000;
  v16._uint64_t countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = 93;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  return v19[0];
}

uint64_t sub_1000B1A48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6AA0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1009559D0, (uint64_t (*)(void))&type metadata accessor for Date);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_1000B1A84()
{
  unint64_t result = qword_100958E70;
  if (!qword_100958E70)
  {
    sub_1000A1370((uint64_t *)&unk_10094B1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100958E70);
  }
  return result;
}

uint64_t sub_1000B1AE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B1B0C()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_editMode);
}

uint64_t sub_1000B1B20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for FitnessPlusCardFactory(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  long long v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 48, a2 + 48);
  return a1;
}

uint64_t sub_1000B1C64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6AA0(a1, a2, a3, (void *)*v3, &qword_10094E708, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  *uint64_t v3 = result;
  return result;
}

void *sub_1000B1CA0(void *a1)
{
  return sub_10009569C(0, a1[2], 0, a1);
}

unint64_t sub_1000B1CB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FB40);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000B1DD0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v49 = sub_1000AFA94(&qword_10094C770);
  uint64_t v57 = *(void *)(v49 - 8);
  uint64_t v3 = __chkstk_darwin(v49);
  Class v50 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v43 - v5;
  uint64_t v6 = type metadata accessor for DashboardCardView();
  uint64_t v7 = (int *)(v6 - 8);
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v47 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_1000AFA94(&qword_10094CF00);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10094D130);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10094D138);
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t v53 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  char v54 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v19 = (char *)&v43 - v18;
  uint64_t v55 = (char *)&v43 - v18;
  sub_100099488(0, (uint64_t)v11);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_10094CF00);
  v14[*(int *)(v12 + 36)] = 0;
  sub_10008DB18((uint64_t)v11, &qword_10094CF00);
  id v48 = type metadata accessor for DashboardCardView;
  uint64_t v44 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009930C(a1, v44, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  uint64_t v20 = *(unsigned __int8 *)(v47 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v46 = v20 | 7;
  uint64_t v47 = v21 + v8;
  uint64_t v22 = swift_allocObject();
  NSString v45 = type metadata accessor for DashboardCardView;
  sub_10009CE98((uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (uint64_t (*)(void))type metadata accessor for DashboardCardView);
  sub_1000B23D8();
  uint64_t v23 = v54;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v14, &qword_10094D130);
  uint64_t v24 = v52;
  uint64_t v25 = v19;
  uint64_t v26 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v25, v23, v53);
  sub_10008E75C(a1 + v7[7], (uint64_t)v62);
  sub_1000AEF2C(a1 + v7[8], (uint64_t)v63, &qword_10094C750);
  v63[40] = *(unsigned char *)(a1 + v7[10]);
  char v27 = static Edge.Set.all.getter();
  sub_100099374((uint64_t)v62, (uint64_t)v58);
  v58[88] = v27;
  long long v59 = xmmword_100751050;
  long long v60 = xmmword_100751050;
  char v61 = 0;
  sub_1000901D4((uint64_t)v62);
  sub_1000AEF2C((uint64_t)v58, (uint64_t)v62, &qword_10094C778);
  v63[89] = 0;
  sub_10008DB18((uint64_t)v58, &qword_10094C778);
  uint64_t v28 = v44;
  sub_10009930C(a1, v44, (uint64_t (*)(void))v48);
  uint64_t v29 = swift_allocObject();
  sub_10009CE98(v28, v29 + v21, (uint64_t (*)(void))v45);
  sub_1000AFA94(&qword_10094C780);
  sub_10009DBF8();
  uint64_t v30 = v50;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v62, &qword_10094C780);
  uint64_t v32 = v56;
  uint64_t v31 = v57;
  uint64_t v33 = v49;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v30, v49);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v35 = v54;
  v34(v54, v55, v26);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v36(v30, v32, v33);
  int v37 = v51;
  v34(v51, v35, v26);
  uint64_t v38 = sub_1000AFA94(&qword_10094D148);
  v36(&v37[*(int *)(v38 + 48)], v30, v33);
  id v39 = *(void (**)(char *, uint64_t))(v57 + 8);
  v39(v56, v33);
  uint64_t v40 = v53;
  char v41 = *(void (**)(char *, uint64_t))(v52 + 8);
  v41(v55, v53);
  v39(v30, v33);
  return ((uint64_t (*)(char *, uint64_t))v41)(v35, v40);
}

unint64_t sub_1000B23D8()
{
  unint64_t result = qword_10094D140;
  if (!qword_10094D140)
  {
    sub_1000A1370(&qword_10094D130);
    sub_100094954();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094D140);
  }
  return result;
}

Swift::Int sub_1000B247C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v67[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  uint64_t v9 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v10 = v0 + v9[5];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void **)(v10 + 8);
  int v13 = *(unsigned __int8 *)(v10 + 16);
  sub_100091494(*(void *)v10, (uint64_t)v12, *(unsigned char *)(v10 + 16));
  v77._uint64_t countAndFlagsBits = v11;
  v77._object = v12;
  sub_1000932C0(v77, v13);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v13 || v13 == 2)
  {
    Hasher._combine(_:)(v11);
  }
  else
  {
    if (v13 == 1)
    {
      String.hash(into:)();
      uint64_t v14 = v11;
      uint64_t v15 = (uint64_t)v12;
      char v16 = 1;
    }
    else
    {
      uint64_t v14 = v11;
      uint64_t v15 = (uint64_t)v12;
      char v16 = v13;
    }
    sub_1000917F8(v14, v15, v16);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v9[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v9[7]));
  sub_1000AEF2C(v1 + v9[10], (uint64_t)v8, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_1000A6770((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v17 = *(void **)(v1 + v9[9]);
  uint64_t v18 = &selRef_setCenterCoordinate_;
  if (!v17)
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
LABEL_43:
    Hasher._combine(_:)(0);
    int v64 = *(unsigned __int8 *)(v1 + v9[12]);
    if (v64 != 2) {
      goto LABEL_47;
    }
    if (!v17) {
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  id v19 = [v17 _activitySummaryIndex];
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)((Swift::UInt64)v19);
  id v20 = [v17 _wheelchairUse];
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)((Swift::UInt)v20);
  LOBYTE(v20) = [v17 paused];
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)((Swift::UInt8)v20);
  id v21 = [v17 activeEnergyBurned];
  uint64_t v22 = self;
  id v23 = [v22 largeCalorieUnit];
  [v21 doubleValueForUnit:v23];
  Swift::UInt64 v25 = v24;

  Hasher._combine(_:)(1u);
  if ((v25 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v26 = v25;
  }
  else {
    Swift::UInt64 v26 = 0;
  }
  Hasher._combine(_:)(v26);
  id v27 = [v17 appleMoveTime];
  id v28 = [v22 minuteUnit];
  [v27 doubleValueForUnit:v28];
  Swift::UInt64 v30 = v29;

  Hasher._combine(_:)(1u);
  if ((v30 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v31 = v30;
  }
  else {
    Swift::UInt64 v31 = 0;
  }
  Hasher._combine(_:)(v31);
  id v32 = [v17 appleExerciseTime];
  id v33 = [v22 minuteUnit];
  [v32 doubleValueForUnit:v33];
  Swift::UInt64 v35 = v34;

  Hasher._combine(_:)(1u);
  if ((v35 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v36 = v35;
  }
  else {
    Swift::UInt64 v36 = 0;
  }
  Hasher._combine(_:)(v36);
  id v37 = [v17 appleStandHours];
  id v38 = [v22 countUnit];
  [v37 doubleValueForUnit:v38];
  Swift::UInt64 v40 = v39;

  Hasher._combine(_:)(1u);
  if ((v40 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v41 = v40;
  }
  else {
    Swift::UInt64 v41 = 0;
  }
  Hasher._combine(_:)(v41);
  id v42 = [v17 activeEnergyBurnedGoal];
  id v43 = [v22 largeCalorieUnit];
  [v42 doubleValueForUnit:v43];
  Swift::UInt64 v45 = v44;

  Hasher._combine(_:)(1u);
  if ((v45 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v46 = v45;
  }
  else {
    Swift::UInt64 v46 = 0;
  }
  Hasher._combine(_:)(v46);
  id v47 = [v17 appleMoveTimeGoal];
  id v48 = [v22 minuteUnit];
  [v47 doubleValueForUnit:v48];
  Swift::UInt64 v50 = v49;

  Hasher._combine(_:)(1u);
  if ((v50 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v51 = v50;
  }
  else {
    Swift::UInt64 v51 = 0;
  }
  Hasher._combine(_:)(v51);
  id v52 = [v17 exerciseTimeGoal];
  if (v52)
  {
    uint64_t v53 = v52;
    id v54 = [v22 minuteUnit];
    [v53 doubleValueForUnit:v54];
    Swift::UInt64 v56 = v55;

    Hasher._combine(_:)(1u);
    if ((v56 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v57 = v56;
    }
    else {
      Swift::UInt64 v57 = 0;
    }
    Hasher._combine(_:)(v57);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v18 = &selRef_setCenterCoordinate_;
  id v58 = [v17 standHoursGoal];
  if (!v58) {
    goto LABEL_43;
  }
  long long v59 = v58;
  id v60 = [self countUnit];
  [v59 doubleValueForUnit:v60];
  Swift::UInt64 v62 = v61;

  Hasher._combine(_:)(1u);
  if ((v62 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v63 = v62;
  }
  else {
    Swift::UInt64 v63 = 0;
  }
  Hasher._combine(_:)(v63);
  int v64 = *(unsigned __int8 *)(v1 + v9[12]);
  if (v64 != 2)
  {
LABEL_47:
    if (v64) {
      goto LABEL_48;
    }
    goto LABEL_46;
  }
LABEL_45:
  if ([v17 v18[92]] == (id)2)
  {
LABEL_48:
    Swift::UInt8 v65 = 1;
    goto LABEL_49;
  }
LABEL_46:
  Swift::UInt8 v65 = 0;
LABEL_49:
  Hasher._combine(_:)(v65);
  long long v74 = v69;
  long long v75 = v70;
  uint64_t v76 = v71;
  long long v72 = *(_OWORD *)&v67[8];
  long long v73 = v68;
  return Hasher.finalize()();
}

Swift::Int sub_1000B2C24()
{
  uint64_t v1 = v0;
  Hasher.init()();
  uint64_t v2 = (int *)type metadata accessor for TrendsCard();
  uint64_t v3 = v0 + v2[5];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  sub_100091494(*(void *)v3, (uint64_t)v5, *(unsigned char *)(v3 + 16));
  v11._uint64_t countAndFlagsBits = v4;
  v11._object = v5;
  sub_1000932C0(v11, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)();
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = v6;
    }
    sub_1000917F8(v7, v8, v9);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v2[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v2[7]));
  sub_1000A7DDC(*(void *)(v1 + v2[9]), *(unsigned char *)(v1 + v2[9] + 8));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher.finalize()();
}

uint64_t sub_1000B2D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035149C);
}

uint64_t sub_1000B2DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100406B84);
}

void *sub_1000B2DB8(uint64_t a1, uint64_t a2)
{
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void **)(a1 + 32 + 8 * v6);
      if (v7)
      {
        uint64_t v8 = *(void *)(a2 + 16);
        if (v6 < *(void *)(v8 + 16))
        {
          uint64_t v9 = v8 + v5;
          if ((*(unsigned char *)(v9 + 48) & 1) == 0)
          {
            double v10 = *(double *)(v9 + 32);
            id v11 = v7;
            id v12 = [v11 _unit];
            [v11 doubleValueForUnit:v12];
            id v14 = [self quantityWithUnit:v12 doubleValue:v13 / v10];
          }
        }
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += 24;
    }
    while (v4 != v6);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1000B2F3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a3;
  uint64_t v7 = sub_1000AFA94(&qword_10094ED00);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v27 = *(void *)(v33 - 8);
  uint64_t v10 = __chkstk_darwin(v33);
  uint64_t v32 = (uint64_t)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v26 = (uint64_t)v25 - v12;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    v25[1] = v4;
    unint64_t v31 = a1 & 0xC000000000000001;
    Swift::UInt64 v29 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_pauseRingsCoordinator);
    id v14 = _swiftEmptyArrayStorage;
    id v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v15 = 4;
    uint64_t v30 = v13;
    while (1)
    {
      id v16 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v15);
      uint64_t v17 = v16;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      uint64_t v4 = a1;
      id v19 = [v16 friend];
      id v20 = [v17 snapshot];
      sub_1000B41D4(v19, v20, v34, v29, v9);

      if ((*v28)(v9, 1, v33) == 1)
      {
        sub_10008DB18((uint64_t)v9, &qword_10094ED00);
      }
      else
      {
        uint64_t v21 = v26;
        sub_1000B32D0((uint64_t)v9, v26, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItem);
        sub_1000B32D0(v21, v32, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v14 = (void *)sub_1000B3384(0, v14[2] + 1, 1, (unint64_t)v14);
        }
        unint64_t v23 = v14[2];
        unint64_t v22 = v14[3];
        if (v23 >= v22 >> 1) {
          id v14 = (void *)sub_1000B3384(v22 > 1, v23 + 1, 1, (unint64_t)v14);
        }
        void v14[2] = v23 + 1;
        sub_1000B32D0(v32, (uint64_t)v14+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItem);
      }
      a1 = v4;
      ++v15;
      if (v18 == v30)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000B32D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ActivitySharingFriendListItem()
{
  uint64_t result = qword_1009551A0;
  if (!qword_1009551A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B3384(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000ACBAC(a1, a2, a3, a4, &qword_10094F418, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItem, (uint64_t (*)(void))type metadata accessor for ActivitySharingFriendListItem);
}

void *sub_1000B33B8(uint64_t a1, uint64_t a2, void *a3, double *a4, unsigned int a5, uint64_t a6, char a7, void *a8, uint64_t a9)
{
  uint64_t v61 = a6;
  Swift::UInt64 v62 = a8;
  unsigned int v60 = a5;
  id v58 = a3;
  long long v59 = a4;
  uint64_t v57 = a2;
  uint64_t v12 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v12 - 8);
  Swift::UInt64 v45 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for MetricChartData();
  uint64_t v14 = *(void *)(v53 - 8);
  uint64_t v15 = __chkstk_darwin(v53);
  uint64_t v52 = (uint64_t)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v44 = (uint64_t)v42 - v17;
  uint64_t v18 = type metadata accessor for DateComponents();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::UInt64 v56 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v51 = a9;
    int v50 = a7 & 1;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v25 = v19 + 16;
    uint64_t v27 = a1;
    uint64_t v28 = a1 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
    Swift::UInt64 v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 40);
    uint64_t v29 = *(void *)(v25 + 56);
    id v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 32);
    Swift::UInt64 v55 = v26;
    uint64_t v47 = v29;
    id v48 = (void (**)(char *, char *, uint64_t))(v25 + 16);
    Swift::UInt64 v49 = (void (**)(uint64_t, uint64_t))(v25 - 8);
    uint64_t v43 = v14;
    Swift::UInt64 v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v42[1] = v27;
    swift_bridgeObjectRetain();
    int v64 = _swiftEmptyArrayStorage;
    uint64_t v30 = v45;
    uint64_t v31 = v25;
    while (1)
    {
      uint64_t v32 = v31;
      v55(v23, v28, v18);
      uint64_t v33 = *v63;
      (*v63)(v23, 0, 1, v18);
      if ((*v54)(v23, 1, v18) == 1) {
        break;
      }
      uint64_t v34 = (uint64_t)v56;
      (*v48)(v56, v23, v18);
      sub_1000B38F0(v34, v57, v58, v59, v60, v61, v50, v62, v30);
      if (v9)
      {
        (*v49)(v34, v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v64;
      }
      (*v49)(v34, v18);
      if ((*v46)(v30, 1, v53) == 1)
      {
        sub_10008DB18((uint64_t)v30, &qword_10094C1E8);
      }
      else
      {
        uint64_t v35 = (uint64_t)v30;
        uint64_t v36 = v44;
        sub_1000C19A0(v35, v44, (uint64_t (*)(void))type metadata accessor for MetricChartData);
        sub_1000C19A0(v36, v52, (uint64_t (*)(void))type metadata accessor for MetricChartData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v64 = (void *)sub_1001E717C(0, v64[2] + 1, 1, (unint64_t)v64);
        }
        unint64_t v38 = v64[2];
        unint64_t v37 = v64[3];
        if (v38 >= v37 >> 1) {
          int v64 = (void *)sub_1001E717C(v37 > 1, v38 + 1, 1, (unint64_t)v64);
        }
        Swift::UInt64 v39 = v64;
        v64[2] = v38 + 1;
        sub_1000C19A0(v52, (uint64_t)v39+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v38, (uint64_t (*)(void))type metadata accessor for MetricChartData);
        uint64_t v30 = v45;
      }
      v28 += v47;
      --v24;
      uint64_t v31 = v32;
      if (!v24)
      {
        v33(v23, 1, 1, v18);
        break;
      }
    }
  }
  else
  {
    Swift::UInt64 v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    int v64 = _swiftEmptyArrayStorage;
    v40(v23, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_1000B38F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, void *a8@<X7>, char *a9@<X8>)
{
  uint64_t v79 = a9;
  uint64_t v72 = a6;
  long long v73 = a8;
  LODWORD(v77) = a7;
  long long v75 = a4;
  uint64_t v76 = a5;
  id v74 = a3;
  uint64_t v78 = a2;
  uint64_t v81 = type metadata accessor for TimeZone();
  uint64_t v71 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Calendar();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v82 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v66 - v23;
  static Calendar.current.getter();
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v18, (uint64_t *)&unk_10095B890);
LABEL_8:
    uint64_t v35 = type metadata accessor for MetricChartData();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v79, 1, 1, v35);
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v25(v24, v18, v19);
  uint64_t v26 = v78;
  if (!*(void *)(v78 + 16) || (unint64_t v27 = sub_100529888(a1), (v28 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    goto LABEL_8;
  }
  uint64_t v70 = v20;
  unint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
  id v30 = v74;
  unint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = v80;
  double v33 = sub_10043C4B8(v31, (uint64_t)v30, 0.0);

  *long long v75 = v33 + *v75;
  int v34 = 1;
  long long v69 = v24;
  id v74 = v30;
  if (((1 << v76) & 0x5DDBB8E070) == 0)
  {
    if (((1 << v76) & 0x2224471F80) != 0) {
      goto LABEL_10;
    }
    if ((v77 & 1) == 0) {
      goto LABEL_15;
    }
  }
  int v34 = 0;
LABEL_10:
  if ((v77 & 1) != 0 && !v72)
  {
    LODWORD(v72) = v34;
    if (v29 >> 62) {
      goto LABEL_40;
    }
    uint64_t v37 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_31;
  }
LABEL_15:
  LODWORD(v72) = v34;
  if (!(v29 >> 62))
  {
    uint64_t v38 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      goto LABEL_17;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    Swift::UInt64 v49 = _swiftEmptyArrayStorage;
LABEL_30:
    uint64_t v53 = sub_1001EF044((uint64_t)v49);
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(v53 + 16);
LABEL_31:
    while (1)
    {
      id v54 = v73;
      swift_bridgeObjectRelease();
      if (!__OFADD__(*v54, v37)) {
        break;
      }
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    *v54 += v37;
    if (v72)
    {
      Swift::UInt64 v55 = v25;
      swift_bridgeObjectRelease();
    }
    else
    {
      Swift::UInt64 v55 = v25;
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
      {
LABEL_38:
        id v58 = v69;
        uint64_t v57 = v70;
        long long v59 = v82;
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v82, v69, v19);
        unsigned int v60 = self;
        id v61 = v74;
        id v62 = [v60 quantityWithUnit:v61 doubleValue:v33];
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v19);
        uint64_t v63 = v19;
        int v64 = v79;
        *(void *)uint64_t v79 = v61;
        uint64_t v65 = type metadata accessor for MetricChartData();
        v55(&v64[*(int *)(v65 + 20)], v59, v63);
        *(void *)&v64[*(int *)(v65 + 24)] = v62;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
      }
    }
    if (v37 < 1) {
      double v33 = 0.0;
    }
    else {
      double v33 = v33 / (double)v37;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v38) {
    goto LABEL_29;
  }
LABEL_17:
  uint64_t v67 = v25;
  uint64_t v68 = v20 + 32;
  uint64_t v78 = v19;
  uint64_t v80 = v32;
  uint64_t v83 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000ABAB8(0, v38 & ~(v38 >> 63), 0);
  if ((v38 & 0x8000000000000000) == 0)
  {
    uint64_t v39 = 0;
    long long v75 = (double *)(v29 & 0xC000000000000001);
    uint64_t v76 = v38;
    Swift::UInt64 v40 = (void (**)(char *, uint64_t))(v71 + 8);
    Swift::UInt64 v41 = (void (**)(char *, uint64_t))(v70 + 8);
    unint64_t v77 = v29;
    do
    {
      if (v75) {
        id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v42 = *(id *)(v29 + 8 * v39 + 32);
      }
      uint64_t v43 = v42;
      id v44 = [v42 endDate];
      Swift::UInt64 v45 = v82;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      static TimeZone.current.getter();
      uint64_t v46 = Date.dayOfMonth(in:)();
      uint64_t v48 = v47;
      (*v40)(v11, v81);
      (*v41)(v45, v78);

      Swift::UInt64 v49 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000ABAB8(0, v49[2] + 1, 1);
        Swift::UInt64 v49 = v83;
      }
      unint64_t v51 = v49[2];
      unint64_t v50 = v49[3];
      if (v51 >= v50 >> 1)
      {
        sub_1000ABAB8(v50 > 1, v51 + 1, 1);
        Swift::UInt64 v49 = v83;
      }
      ++v39;
      uint64_t v49[2] = v51 + 1;
      uint64_t v52 = &v49[2 * v51];
      v52[4] = v46;
      v52[5] = v48;
      unint64_t v29 = v77;
    }
    while (v76 != v39);
    swift_bridgeObjectRelease();
    uint64_t v19 = v78;
    uint64_t v25 = v67;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B409C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1D2C);
}

unint64_t sub_1000B40B0()
{
  unint64_t result = qword_10094CFF8;
  if (!qword_10094CFF8)
  {
    sub_1000A1370(&qword_10094D000);
    type metadata accessor for LoadCardView();
    type metadata accessor for BalanceDataProvider();
    sub_1000D050C(&qword_10094D008, (void (*)(uint64_t))type metadata accessor for LoadCardView);
    sub_1000D050C(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094CFF8);
  }
  return result;
}

id sub_1000B41D4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, void *a4@<X4>, char *a5@<X8>)
{
  id v106 = a4;
  uint64_t v112 = a3;
  id v116 = a1;
  uint64_t v97 = type metadata accessor for UUID();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  double v94 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v95 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Calendar();
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  __chkstk_darwin(v10);
  double v102 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DateComponents();
  uint64_t v100 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v105 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v17 - 8);
  uint64_t v111 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  unsigned int v101 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v90 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  double v108 = (char *)&v90 - v24;
  __chkstk_darwin(v23);
  double v114 = (char *)&v90 - v25;
  uint64_t v26 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v109 = (uint64_t)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  id v30 = (char *)&v90 - v29;
  uint64_t v31 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v31 - 8);
  uint64_t v113 = type metadata accessor for AttributedString();
  uint64_t v32 = *(void *)(v113 - 8);
  uint64_t v33 = __chkstk_darwin(v113);
  double v107 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  double v115 = (char *)&v90 - v35;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [self displayContextWithName:v36];

  if (v37)
  {
    uint64_t v93 = v12;
    uint64_t v99 = a5;
    id v38 = [v116 displayName];
    if (v38)
    {
      uint64_t v39 = v38;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      if (![v116 isMe])
      {
        uint64_t v98 = 0;
        uint64_t v41 = v113;
        if (!a2) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
      id v40 = [v37 keyColorForDisplayMode:v112];
      uint64_t v41 = v113;
      if (v40)
      {
        uint64_t v98 = Color.init(uiColor:)();
        if (!a2) {
          goto LABEL_12;
        }
LABEL_11:
        if (([a2 hasCarriedForwardGoals] & 1) == 0)
        {
          id v45 = [a2 activitySummary];
LABEL_14:
          if ([v116 isMe]) {
            LODWORD(v106) = [v106 isPaused];
          }
          else {
            LODWORD(v106) = 0;
          }
          id v92 = v45;
          if (v45)
          {
            uint64_t v46 = v45;
          }
          else
          {
            id v45 = [objc_allocWithZone((Class)HKActivitySummary) init];
            uint64_t v46 = 0;
          }
          id v47 = v46;
          [v45 setDeprecatedPauseForInternalSwiftClient:v106];
          uint64_t v48 = v112;
          sub_1000B4F78(a2, v45, v116, v112, (uint64_t)v37, (uint64_t)v30);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v41) == 1)
          {
            (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v41);

            swift_release();
            sub_10008DB18((uint64_t)v30, (uint64_t *)&unk_10095BFD0);
            uint64_t v49 = type metadata accessor for ActivitySharingFriendListItem();
            return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v99, 1, 1, v49);
          }
          uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
          v91(v107, v30, v41);
          sub_1000B5438(a2, v45, v116, v48, (uint64_t)v37, v109);
          Date.init()();
          if (a2)
          {
            id v50 = [a2 startDate];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v52 = v110;
            uint64_t v51 = v111;
            (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v16, v22, v111);
            uint64_t v53 = 0;
          }
          else
          {
            uint64_t v53 = 1;
            uint64_t v52 = v110;
            uint64_t v51 = v111;
          }
          id v54 = v108;
          Swift::UInt64 v55 = v101;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v16, v53, 1, v51);
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v55, v114, v51);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v16, 1, v51) == 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v54, v55, v51);
            sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_10095B890);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v51);
            (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v54, v16, v51);
          }
          char v56 = v102;
          static Calendar.current.getter();
          sub_1000AFA94((uint64_t *)&unk_1009559B0);
          uint64_t v57 = type metadata accessor for Calendar.Component();
          uint64_t v58 = *(void *)(v57 - 8);
          unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
          uint64_t v60 = swift_allocObject();
          *(_OWORD *)(v60 + 16) = xmmword_1007509E0;
          (*(void (**)(unint64_t, void, uint64_t))(v58 + 104))(v60 + v59, enum case for Calendar.Component.day(_:), v57);
          sub_1000C6A18(v60);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          id v61 = v105;
          Calendar.dateComponents(_:from:to:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v103 + 8))(v56, v104);
          if ([v116 isMe])
          {
            id v62 = (void *)0xE200000000000000;
            uint64_t v63 = 25965;
            uint64_t v64 = v93;
LABEL_33:
            uint64_t v118 = 0;
            unint64_t v119 = 0xE000000000000000;
            _StringGuts.grow(_:)(16);
            swift_bridgeObjectRelease();
            uint64_t v118 = 0x725F646E65697266;
            unint64_t v119 = 0xEB000000005F776FLL;
            uint64_t v73 = DateComponents.day.getter();
            if (v74) {
              uint64_t v75 = 0;
            }
            else {
              uint64_t v75 = v73;
            }
            uint64_t v117 = v75;
            v76._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v76);
            swift_bridgeObjectRelease();
            v77._uint64_t countAndFlagsBits = 95;
            v77._object = (void *)0xE100000000000000;
            String.append(_:)(v77);
            v78._uint64_t countAndFlagsBits = v63;
            v78._object = v62;
            String.append(_:)(v78);

            swift_bridgeObjectRelease();
            uint64_t v79 = v118;
            unint64_t v80 = v119;
            (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v64);
            uint64_t v81 = v111;
            uint64_t v82 = *(void (**)(char *, uint64_t))(v110 + 8);
            v82(v108, v111);
            v82(v114, v81);
            uint64_t v83 = (int *)type metadata accessor for ActivitySharingFriendListItem();
            char v84 = v99;
            uint64_t v85 = v113;
            long long v86 = v91;
            v91(&v99[v83[6]], v115, v113);
            v86(&v84[v83[7]], v107, v85);
            uint64_t v87 = v98;
            *(void *)char v84 = v116;
            *((void *)v84 + 1) = v87;
            sub_1000AEEC8(v109, (uint64_t)&v84[v83[8]], (uint64_t *)&unk_10095BFD0);
            *(void *)&v84[v83[9]] = v92;
            v84[v83[10]] = (char)v106;
            char v88 = (uint64_t *)&v84[v83[11]];
            *char v88 = v79;
            v88[1] = v80;
            (*(void (**)(char *, void, uint64_t, int *))(*((void *)v83 - 1) + 56))(v84, 0, 1, v83);
            id v89 = v116;
            return v89;
          }
          id v65 = [v116 UUID];
          uint64_t v64 = v93;
          if (v65)
          {
            uint64_t v66 = v65;
            uint64_t v67 = v94;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v68 = v96;
            long long v69 = v95;
            uint64_t v70 = v67;
            uint64_t v71 = v97;
            (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v70, v97);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v69, 0, 1, v71);
            id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48))(v69, 1, v71);
            if (result != 1)
            {
              uint64_t v63 = UUID.uuidString.getter();
              id v62 = v72;
              (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v71);
              goto LABEL_33;
            }
LABEL_42:
            __break(1u);
            return result;
          }
LABEL_41:
          id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v95, 1, 1, v97);
          goto LABEL_42;
        }
LABEL_12:
        id v45 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v42 = type metadata accessor for ActivitySharingFriendListItem();
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);

  return (id)v43(a5, 1, 1, v42);
}

void sub_1000B4F78(id a1@<X1>, id a2@<X2>, id a3@<X0>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v9 = a1;
  switch(a4)
  {
    case 0:
    case 1:
      if (objc_msgSend(a2, "as_movePercentStringWithContext:snapshot:", a5, a1)) {
        goto LABEL_26;
      }
      __break(1u);
      goto LABEL_4;
    case 2:
      if (objc_msgSend(a2, "as_exerciseProgressStringWithContext:", a5, a1)) {
        goto LABEL_26;
      }
      __break(1u);
LABEL_9:
      a3 = [a2 as_stepsStringWithContext:a5, v9];
      if (a3) {
        goto LABEL_26;
      }
      __break(1u);
LABEL_11:
      id v16 = a3;
      if (v9) {
        [v9 snapshotIndex:a2];
      }
LABEL_15:
      v17.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
      id v18 = [v16 friendWorkouts];
      if (!v18)
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
          && _CocoaArrayWrapper.endIndex.getter())
        {
          sub_1002F0A18((unint64_t)_swiftEmptyArrayStorage);
        }
        goto LABEL_21;
      }

      id v19 = [v16 friendWorkouts];
      if (!v19)
      {
LABEL_32:
        __break(1u);
        return;
      }
      uint64_t v20 = v19;
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      sub_1000AFA94(&qword_10094ECD8);
      sub_1000CD998((unint64_t *)&qword_100955BF0, (unint64_t *)&qword_100955BE0);
      uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v21 + 16))
      {
        uint64_t v22 = v17.super.super.isa;
        sub_10052995C((uint64_t)v22);
        if (v23)
        {
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
LABEL_21:
          sub_10007E2D8(0, &qword_10094ECC8);
          sub_1000CD998(&qword_10094ECD0, &qword_10094ECC8);
          v24.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      v24.super.Class isa = 0;
LABEL_24:
      id v25 = (id)ASWorkoutNameString();

      if (!v25)
      {
        __break(1u);
        goto LABEL_32;
      }

LABEL_26:
      AttributedString.init(_:)();
      uint64_t v26 = type metadata accessor for AttributedString();
      uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      v27(a6, 0, 1, v26);
      return;
    case 3:
      goto LABEL_9;
    case 4:
      goto LABEL_11;
    case 5:
      id v16 = [a2 as_pushesStringWithContext:a5, a1];
      if (v16) {
        goto LABEL_26;
      }
      __break(1u);
      goto LABEL_15;
    default:
LABEL_4:
      os_log_type_t v10 = static os_log_type_t.fault.getter();
      uint64_t v11 = (void *)HKLogActivity;
      os_log_type_t v12 = v10;
      if (os_log_type_enabled(HKLogActivity, v10))
      {
        uint64_t v13 = v11;
        uint64_t v14 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315394;
        sub_10008F1F4(0xD000000000000049, 0x80000001007B8420, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v14 + 12) = 2048;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v13, v12, "%s found unexpected ASFriendListDisplayMode %ld", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      uint64_t v15 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a6, 1, 1, v15);
      return;
  }
}

void sub_1000B5438(id a1@<X1>, id a2@<X2>, id a3@<X0>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v9 = a1;
  switch(a4)
  {
    case 0:
    case 1:
      if (objc_msgSend(a2, "as_moveProgressStringWithContext:formattingManager:snapshot:", a5, *(void *)(v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_fiuiFormattingManager), a1))
      {
        goto LABEL_25;
      }
      __break(1u);
      goto LABEL_4;
    case 2:
      if (objc_msgSend(a2, "as_exerciseDurationStringWithContext:", a5)) {
        goto LABEL_25;
      }
      __break(1u);
LABEL_9:
      a3 = [a2 as_distanceStringWithContext:a5 formattingManager:*(void *)(v6 + OBJC_IVAR____TtC10FitnessApp37ActivitySharingFriendListDataProvider_fiuiFormattingManager)];
      if (a3) {
        goto LABEL_25;
      }
      __break(1u);
LABEL_11:
      id v16 = a3;
      if (v9) {
        [v9 snapshotIndex:a2];
      }
      v22.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
      id v23 = [v16 friendWorkouts];
      if (!v23)
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
          && _CocoaArrayWrapper.endIndex.getter())
        {
          sub_1002F0A18((unint64_t)_swiftEmptyArrayStorage);
        }
        goto LABEL_20;
      }

      id v24 = [v16 friendWorkouts];
      if (!v24)
      {
LABEL_32:
        __break(1u);
        return;
      }
      id v25 = v24;
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      sub_1000AFA94(&qword_10094ECD8);
      sub_1000CD998((unint64_t *)&qword_100955BF0, (unint64_t *)&qword_100955BE0);
      uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v26 + 16))
      {
        uint64_t v27 = v22.super.super.isa;
        sub_10052995C((uint64_t)v27);
        if (v28)
        {
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
LABEL_20:
          sub_10007E2D8(0, &qword_10094ECC8);
          sub_1000CD998(&qword_10094ECD0, &qword_10094ECC8);
          v29.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      v29.super.Class isa = 0;
LABEL_23:
      id v30 = (id)ASWorkoutCaloriesString();

      if (!v30)
      {
        __break(1u);
        goto LABEL_32;
      }

LABEL_25:
      AttributedString.init(_:)();
      uint64_t v31 = type metadata accessor for AttributedString();
      id v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
      uint64_t v19 = v31;
      uint64_t v20 = a6;
      uint64_t v21 = 0;
LABEL_26:
      v18(v20, v21, 1, v19);
      return;
    case 3:
      goto LABEL_9;
    case 4:
      goto LABEL_11;
    case 5:
      uint64_t v17 = type metadata accessor for AttributedString();
      id v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
      uint64_t v19 = v17;
      uint64_t v20 = a6;
      uint64_t v21 = 1;
      goto LABEL_26;
    default:
LABEL_4:
      os_log_type_t v10 = static os_log_type_t.fault.getter();
      uint64_t v11 = (void *)HKLogActivity;
      os_log_type_t v12 = v10;
      if (os_log_type_enabled(HKLogActivity, v10))
      {
        uint64_t v13 = v11;
        uint64_t v14 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315394;
        sub_10008F1F4(0xD00000000000004CLL, 0x80000001007B83D0, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v14 + 12) = 2048;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v13, v12, "%s found unexpected ASFriendListDisplayMode %ld", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      uint64_t v15 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a6, 1, 1, v15);
      return;
  }
}

void sub_1000B5938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a2;
  uint64_t v4 = sub_1000AFA94(&qword_10095CB70);
  uint64_t v55 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v56 = v5;
  uint64_t v58 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t TrackingTip = type metadata accessor for TrainingLoadTrackingTip();
  __chkstk_darwin(TrackingTip);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CustomizeSummaryTip();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_10095F650);
  uint64_t v12 = *(void *)(v59 - 8);
  uint64_t v13 = __chkstk_darwin(v59);
  id v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v16 = (char *)&v48 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v18 = (char *)Strong;
    if (*(void *)(*(void *)(*(void *)(Strong
                                           + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                               + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards)
                   + 16))
    {
      uint64_t v53 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
      uint64_t v51 = a3;
      uint64_t v19 = type metadata accessor for UUID();
      sub_1000B7550((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
      NSDiffableDataSourceSnapshot.init()();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1008B6BD0);
      uint64_t v20 = (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip];
      sub_1000B0528((uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
      sub_1000B7550(&qword_10095F6B8, (void (*)(uint64_t))type metadata accessor for CustomizeSummaryTip);
      char v21 = Tip.shouldDisplay.getter();
      sub_1000C98F0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
      uint64_t v52 = v12;
      if (v21)
      {
        sub_1000AFA94((uint64_t *)&unk_1009555B0);
        uint64_t v22 = *(void *)(v19 - 8);
        unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1007509E0;
        unint64_t v25 = v24 + v23;
        sub_1000B0528(v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CustomizeSummaryTip);
        (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v25, v11, v19);
        uint64_t v12 = v52;
        uint64_t v60 = 0;
        char v61 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        swift_bridgeObjectRelease();
      }
      uint64_t v26 = (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip];
      sub_1000B7550(&qword_10095F6B0, (void (*)(uint64_t))type metadata accessor for TrainingLoadTrackingTip);
      if (Tip.shouldDisplay.getter())
      {
        sub_1000AFA94((uint64_t *)&unk_1009555B0);
        uint64_t v27 = *(void *)(v19 - 8);
        unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1007509E0;
        unint64_t v30 = v29 + v28;
        sub_1000B0528(v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TrainingLoadTrackingTip);
        (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v30, v8, v19);
        uint64_t v60 = 0;
        char v61 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        swift_bridgeObjectRelease();
      }
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1008B6BF8);
      uint64_t v31 = v53;
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_1000B64C0(v32);
      swift_bridgeObjectRelease();
      uint64_t v60 = 1;
      char v61 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1008B6C20);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1008B6C48);
      if ((*(unsigned char *)(*(void *)&v18[v31] + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) & 1) == 0)
      {
        uint64_t v53 = sub_1000AFA94((uint64_t *)&unk_1009555B0);
        uint64_t v33 = *(void *)(v19 - 8);
        unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
        uint64_t v35 = swift_allocObject();
        long long v50 = xmmword_1007509E0;
        *(_OWORD *)(v35 + 16) = xmmword_1007509E0;
        NSString v36 = *(void (**)(unint64_t, char *, uint64_t))(v33 + 16);
        v36(v35 + v34, &v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v19);
        uint64_t v60 = 2;
        char v61 = 0;
        uint64_t v49 = v19;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        swift_bridgeObjectRelease();
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v50;
        v36(v37 + v34, &v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v49);
        uint64_t v12 = v52;
        uint64_t v60 = 3;
        char v61 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        swift_bridgeObjectRelease();
      }
      id v38 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
      if (v38)
      {
        uint64_t v39 = v54;
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v54, v16, v59);
        uint64_t v40 = v58;
        sub_1000AEF2C(v57, v58, &qword_10095CB70);
        unint64_t v41 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v42 = v12;
        unint64_t v43 = (v56 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v44 = swift_allocObject();
        sub_1000AEEC8(v40, v44 + v41, &qword_10095CB70);
        *(void *)(v44 + v43) = v51;
        swift_retain();
        id v45 = v38;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        swift_release();
        uint64_t v46 = *(void (**)(char *, uint64_t))(v42 + 8);
        uint64_t v47 = v59;
        v46(v39, v59);
        v46(v16, v47);
        return;
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v59);
    }
  }
}

void sub_1000B61BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000AFA94(&qword_10095F650);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10095F728);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (char *)Strong;
    uint64_t v24 = a2;
    uint64_t v15 = swift_allocBox();
    uint64_t v16 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
    uint64_t v17 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    if (v17)
    {
      uint64_t v18 = v14;
      id v19 = v17;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18, v11, v5);
        uint64_t v20 = sub_1000B64C0(v24);
        swift_retain();
        uint64_t v21 = sub_1000B66A0((uint64_t)v20, v15, a3);
        swift_release();
        swift_beginAccess();
        NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v21);
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void **)&v13[v16];
        if (v22)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
          id v23 = v22;
          dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          swift_release();
        }
        else
        {
          swift_release();
        }
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }

    sub_10008DB18((uint64_t)v11, &qword_10095F728);
    swift_deallocBox();
  }
}

void *sub_1000B64C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1000B6A64(0, v6, 0);
    uint64_t v8 = a1 + 32;
    uint64_t v7 = v17;
    do
    {
      sub_10008E75C(v8, (uint64_t)v14);
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      sub_10007E4EC(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B6A64(0, v7[2] + 1, 1);
        uint64_t v7 = v17;
      }
      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000B6A64(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v7[2] = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, v5, v2);
      uint64_t v17 = v7;
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1000B66A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v33 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v41 = (char *)v27 - v14;
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    unint64_t v15 = 0;
    uint64_t v35 = v10 + 48;
    uint64_t v40 = (void (**)(char *))(v10 + 32);
    uint64_t v28 = a1;
    uint64_t v29 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10 + 56;
    uint64_t v37 = v10 + 16;
    v27[1] = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v32 = v10;
    while (v15 < *(void *)(a1 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = a1;
      uint64_t v18 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a1 + v16 + v18 * v15, v9);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v31(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_18;
      }
      id v19 = v8;
      uint64_t v20 = (uint64_t)v41;
      uint64_t v21 = *v40;
      uint64_t v22 = v19;
      (*v40)(v41);
      char v23 = sub_1000B6CE8(v20, v38, v39);
      if (v4)
      {
        (*v29)(v41, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v23)
      {
        uint64_t v30 = 0;
        ((void (*)(char *, char *, uint64_t))v21)(v33, v41, v9);
        uint64_t v24 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000B6A64(0, v24[2] + 1, 1);
          uint64_t v24 = v42;
        }
        unint64_t v26 = v24[2];
        unint64_t v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_1000B6A64(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v42;
        }
        os_log_t v24[2] = v26 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v21)((char *)v24 + v16 + v26 * v18, v33, v9);
        uint64_t v42 = v24;
        uint64_t v4 = v30;
        a1 = v28;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v29)(v41, v9);
        a1 = v17;
      }
      ++v15;
      uint64_t v8 = v22;
      uint64_t v10 = v32;
      if (v34 == v15)
      {
        v31(v8, 1, 1, v9);
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_18:
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_1009555F0);
    return (uint64_t)v42;
  }
  return result;
}

uint64_t sub_1000B6A64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6AA0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1009555B0, (uint64_t (*)(void))&type metadata accessor for UUID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B6AA0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AFA94(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B6CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10095F650);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v33(v11, v12, v8);
  uint64_t v13 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v11, v8);
  uint64_t v41 = a1;
  LODWORD(a2) = sub_1000B71A8((uint64_t (*)(char *))sub_1000B74C0, (uint64_t)v40, v13);
  swift_bridgeObjectRelease();
  int v36 = a2;
  if ((a2 & 1) == 0)
  {
    uint64_t v31 = v3;
    os_log_type_t v14 = static os_log_type_t.default.getter();
    unint64_t v15 = HKLogActivity;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, a1, v39);
    if (os_log_type_enabled(v15, v14))
    {
      swift_retain_n();
      os_log_t v30 = v15;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v44 = v29;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v17 = _typeName(_:qualified:)();
      uint64_t v43 = sub_10008F1F4(v17, v18, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_beginAccess();
      v33(v11, v12, v8);
      NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      v32(v11, v8);
      uint64_t v19 = v39;
      uint64_t v20 = Array.description.getter();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_10008F1F4(v20, v22, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      sub_1000B7550((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = v37;
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v42 = sub_10008F1F4(v24, v25, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v19);
      os_log_t v26 = v30;
      _os_log_impl((void *)&_mh_execute_header, v30, v14, "%s Not updating card content as the snapshot item identifiers\ndon't contain the uuid for the card we are trying to update.\nsnapshot: %s\n uuid: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    }
  }
  return v36 & 1;
}

BOOL sub_1000B71A8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1000B71E0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_1009555F0);
}