uint64_t sub_1006674F8(uint64_t a1)
{
  unint64_t v2;
  uint64_t vars8;

  v2 = sub_100667C90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667534(uint64_t a1)
{
  unint64_t v2 = sub_100667C90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100667570(uint64_t a1)
{
  unint64_t v2 = sub_1000AFC28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006675AC(uint64_t a1)
{
  unint64_t v2 = sub_1000AFC28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006675E8(uint64_t a1)
{
  unint64_t v2 = sub_100667D38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667624(uint64_t a1)
{
  unint64_t v2 = sub_100667D38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100667664(uint64_t a1)
{
  unint64_t v2 = sub_1000AFB2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006676A0(uint64_t a1)
{
  unint64_t v2 = sub_1000AFB2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006676DC(uint64_t a1)
{
  unint64_t v2 = sub_1000AFCD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667718(uint64_t a1)
{
  unint64_t v2 = sub_1000AFCD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100667754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1006677D4(uint64_t a1)
{
  unint64_t v2 = sub_100667BE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667810(uint64_t a1)
{
  unint64_t v2 = sub_100667BE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10066784C(uint64_t a1)
{
  unint64_t v2 = sub_1000AFC7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667888(uint64_t a1)
{
  unint64_t v2 = sub_1000AFC7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1006678C4()
{
  return sub_100667110(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1006678D0()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  sub_1000932C0(*(Swift::String *)v0, *((unsigned char *)v0 + 16));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v2 || v2 == 2)
  {
    Hasher._combine(_:)(v1);
  }
  else if (v2 == 1)
  {
    String.hash(into:)();
  }
}

Swift::Int sub_100667988()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(void **)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  v5._countAndFlagsBits = v1;
  v5._object = v2;
  sub_1000932C0(v5, v3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v3 || v3 == 2)
  {
    Hasher._combine(_:)(v1);
  }
  else if (v3 == 1)
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

unint64_t sub_100667A34()
{
  unint64_t result = qword_100966FA0;
  if (!qword_100966FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966FA0);
  }
  return result;
}

_UNKNOWN **sub_100667AB8()
{
  v12 = &type metadata for FitnessFeatures;
  unint64_t v13 = sub_1000EAAD8();
  v11[0] = 4;
  char v0 = isFeatureEnabled(_:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v11);
  if ((v0 & 1) == 0) {
    return &off_1008AF5E8;
  }
  uint64_t v1 = &off_1008AF5E8;
  if ((FIIsTinkerVegaOrFitnessJunior() & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1001E70B4(0, 56, 1, &off_1008AF5E8);
    }
    unint64_t v2 = v1[2];
    unint64_t v3 = v1[3];
    unint64_t v4 = v2 + 1;
    if (v2 >= v3 >> 1)
    {
      unint64_t v10 = v2 + 1;
      char v7 = v1;
      unint64_t v8 = v1[2];
      v9 = sub_1001E70B4((void *)(v3 > 1), v2 + 1, 1, v7);
      unint64_t v2 = v8;
      unint64_t v4 = v10;
      uint64_t v1 = v9;
    }
    v1[2] = v4;
    Swift::String v5 = &v1[3 * v2];
    *((_OWORD *)v5 + 2) = xmmword_100750CF0;
    *((unsigned char *)v5 + 48) = 3;
  }
  return (_UNKNOWN **)v1;
}

unint64_t sub_100667BE8()
{
  unint64_t result = qword_100967018;
  if (!qword_100967018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967018);
  }
  return result;
}

unint64_t sub_100667C3C()
{
  unint64_t result = qword_100967020;
  if (!qword_100967020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967020);
  }
  return result;
}

unint64_t sub_100667C90()
{
  unint64_t result = qword_100967040;
  if (!qword_100967040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967040);
  }
  return result;
}

unint64_t sub_100667CE4()
{
  unint64_t result = qword_100967048;
  if (!qword_100967048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967048);
  }
  return result;
}

unint64_t sub_100667D38()
{
  unint64_t result = qword_100967070;
  if (!qword_100967070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967070);
  }
  return result;
}

unint64_t sub_100667D8C()
{
  unint64_t result = qword_1009670E0;
  if (!qword_1009670E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009670E0);
  }
  return result;
}

unint64_t sub_100667E34()
{
  unint64_t result = qword_1009670F8;
  if (!qword_1009670F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009670F8);
  }
  return result;
}

unint64_t sub_100667E8C()
{
  unint64_t result = qword_100967100;
  if (!qword_100967100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967100);
  }
  return result;
}

unint64_t sub_100667EE4()
{
  unint64_t result = qword_100967108;
  if (!qword_100967108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967108);
  }
  return result;
}

unint64_t sub_100667F3C()
{
  unint64_t result = qword_100967110;
  if (!qword_100967110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967110);
  }
  return result;
}

uint64_t sub_100667FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100668E8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100667FDC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100667FE8(uint64_t a1)
{
  unint64_t v2 = sub_1000E7A14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100668024(uint64_t a1)
{
  unint64_t v2 = sub_1000E7A14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100668060()
{
  uint64_t v1 = 0x1000000000000;
  if (!v0[6]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v2 = 0;
  }
  unint64_t v3 = &_mh_execute_header;
  if (!v0[4]) {
    unint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x10000;
  if (!v0[2]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 256;
  if (!v0[1]) {
    uint64_t v6 = 0;
  }
  return sub_100054304(v6 | *v0 | v5 | v4 | (unint64_t)v3 | v2 | v1);
}

void sub_100668114()
{
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  if (os_log_type_enabled(HKLogActivity, v0))
  {
    unint64_t v3 = v1;
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = _typeName(_:qualified:)();
    sub_10008F1F4(v5, v6, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s did receive HKStandalonePhoneFitnessModeDidUpdateNotification notification", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v8 = (char *)Strong;
    uint64_t v9 = 0x1000000000000;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 6)) {
      uint64_t v9 = 0;
    }
    uint64_t v10 = 0x10000000000;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 5)) {
      uint64_t v10 = 0;
    }
    v11 = &_mh_execute_header;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 4)) {
      v11 = 0;
    }
    uint64_t v12 = 0x1000000;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 3)) {
      uint64_t v12 = 0;
    }
    uint64_t v13 = 0x10000;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 2)) {
      uint64_t v13 = 0;
    }
    uint64_t v14 = 256;
    if (!*(unsigned char *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 1)) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = sub_1000664E4(v14 | *(unsigned __int8 *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria) | v13 | v12 | (unint64_t)v11 | v10 | v9);
    if (!*(void *)&v8[OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery] && v15 != 5) {
      sub_10000DDEC();
    }
  }
}

id sub_10066832C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___CHOnboardingCoordinator_notifyTokens];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      int v4 = *(_DWORD *)(v1 + 4 * i + 32);
      notify_cancel(v4);
    }
    swift_bridgeObjectRelease();
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for OnboardingCoordinator();
  return [super dealloc];
}

void *sub_100668454()
{
  swift_getObjectType();
  uint64_t v1 = &v0[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  uint64_t v2 = 0x1000000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5]) {
    uint64_t v3 = 0;
  }
  int v4 = &_mh_execute_header;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4]) {
    int v4 = 0;
  }
  uint64_t v5 = 0x1000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x10000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2]) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 256;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1]) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_1000664E4(v7 | v0[OBJC_IVAR___CHOnboardingCoordinator_criteria] | v6 | v5 | (unint64_t)v4 | v3 | v2);
  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setBool:1 forKey:v10];

  unint64_t v11 = sub_10002345C(*v1, v1[1], v1[2], v1[3]);
  *uint64_t v1 = v11 & 1;
  uint64x2_t v12 = (uint64x2_t)vdupq_n_s64(v11);
  int16x8_t v13 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_100772EE0), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_100772ED0));
  *(int8x8_t *)v13.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v13), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v1 + 1) = vmovn_s16(v13).u32[0];
  v1[5] = BYTE5(v11) & 1;
  v1[6] = BYTE6(v11) & 1;
  uint64_t v14 = sub_1000664E4(v11 & 0x1010101010101);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  v16 = (void *)HKLogActivity;
  os_log_type_t v17 = v15;
  if (os_log_type_enabled(HKLogActivity, v15))
  {
    v30 = v0;
    v31 = v16;
    uint64_t v18 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v19 = _typeName(_:qualified:)();
    sub_10008F1F4(v19, v20, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v21 = 0x1000000000000;
    if (!v1[6]) {
      uint64_t v21 = 0;
    }
    uint64_t v22 = 0x10000000000;
    if (!v1[5]) {
      uint64_t v22 = 0;
    }
    v23 = &_mh_execute_header;
    if (!v1[4]) {
      v23 = 0;
    }
    uint64_t v24 = 0x1000000;
    if (!v1[3]) {
      uint64_t v24 = 0;
    }
    uint64_t v25 = 0x10000;
    if (!v1[2]) {
      uint64_t v25 = 0;
    }
    uint64_t v26 = 256;
    if (!v1[1]) {
      uint64_t v26 = 0;
    }
    uint64_t v27 = sub_100054304(v26 | *v1 | v25 | v24 | (unint64_t)v23 | v22 | v21);
    sub_10008F1F4(v27, v28, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v17, "%s set completed welcome views default; criteria %s newPhase %ld",
      (uint8_t *)v18,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t result = (void *)sub_10002A3AC();
  if (v14 != v8)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result onboardingCoordinatorPhaseDidChangeTo:v14];
      uint64_t result = (void *)swift_unknownObjectRelease();
    }
  }
  if (v14 == 5)
  {
    __chkstk_darwin(result);
    return (void *)dispatch thunk of UnfairLock.acquire<A>(_:)();
  }
  return result;
}

void *sub_1006688FC()
{
  swift_getObjectType();
  uint64_t v1 = &v0[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  uint64_t v2 = 0x1000000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6]) {
    uint64_t v2 = 0;
  }
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5]) {
    uint64_t v3 = 0x10000000000;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4]) {
    int v4 = &_mh_execute_header;
  }
  else {
    int v4 = 0;
  }
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3]) {
    uint64_t v5 = 0x1000000;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2]) {
    uint64_t v6 = 0x10000;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1]) {
    uint64_t v7 = 256;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_1000664E4(v7 | v0[OBJC_IVAR___CHOnboardingCoordinator_criteria] | v6 | v5 | (unint64_t)v4 | v3 | v2);
  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setBool:1 forKey:v10];

  uint64_t v11 = 0x1000000000000;
  if (!v1[6]) {
    uint64_t v11 = 0;
  }
  if (v1[5]) {
    uint64_t v12 = 0x10000000000;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v1[4]) {
    int16x8_t v13 = &_mh_execute_header;
  }
  else {
    int16x8_t v13 = 0;
  }
  if (v1[3]) {
    uint64_t v14 = 0x1000000;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v1[2]) {
    uint64_t v15 = 0x10000;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v1[1]) {
    uint64_t v16 = 256;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = sub_1000664E4(v16 | *v1 | v15 | v14 | (unint64_t)v13 | v12 | v11);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = (void *)HKLogActivity;
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(HKLogActivity, v18))
  {
    v34 = v0;
    uint64_t v21 = v19;
    uint64_t v35 = v8;
    uint64_t v22 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v23 = _typeName(_:qualified:)();
    sub_10008F1F4(v23, v24, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v25 = 0x1000000000000;
    if (!v1[6]) {
      uint64_t v25 = 0;
    }
    uint64_t v26 = 0x10000000000;
    if (!v1[5]) {
      uint64_t v26 = 0;
    }
    uint64_t v27 = &_mh_execute_header;
    if (!v1[4]) {
      uint64_t v27 = 0;
    }
    uint64_t v28 = 0x1000000;
    if (!v1[3]) {
      uint64_t v28 = 0;
    }
    uint64_t v29 = 0x10000;
    if (!v1[2]) {
      uint64_t v29 = 0;
    }
    uint64_t v30 = 256;
    if (!v1[1]) {
      uint64_t v30 = 0;
    }
    uint64_t v31 = sub_100054304(v30 | *v1 | v29 | v28 | (unint64_t)v27 | v26 | v25);
    sub_10008F1F4(v31, v32, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "%s set completed what's new views default; criteria %s newPhase %ld",
      (uint8_t *)v22,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v35;
    swift_slowDealloc();
  }
  uint64_t result = (void *)sub_10002A3AC();
  if (v17 != v8)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result onboardingCoordinatorPhaseDidChangeTo:v17];
      uint64_t result = (void *)swift_unknownObjectRelease();
    }
  }
  if (v17 == 5)
  {
    __chkstk_darwin(result);
    return (void *)dispatch thunk of UnfairLock.acquire<A>(_:)();
  }
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for OnboardingCoordinator.Criteria(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingCoordinator.Criteria(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[7]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingCoordinator.Criteria(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 7) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 7) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingCoordinator.Criteria()
{
  return &type metadata for OnboardingCoordinator.Criteria;
}

uint64_t sub_100668E8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4765766F4D736168 && a2 == 0xEB000000006C616FLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001007D39D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6372657845736168 && a2 == 0xEF6C616F47657369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E617453736168 && a2 == 0xEC0000006C616F47 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001007D39F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F4D6F6D65447369 && a2 == 0xEA00000000006564 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007D3A10)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1006691C0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1006691F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10000C8F8(a1, a2, a3, a4, a5, v5, 0);
}

uint64_t sub_100669218()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100669250()
{
}

unsigned char *storeEnumTagSinglePayload for OnboardingCoordinator.Criteria.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100669324);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unint64_t sub_100669350()
{
  unint64_t result = qword_100967268;
  if (!qword_100967268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967268);
  }
  return result;
}

void sub_1006693A8()
{
}

void *sub_1006693C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v33 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v33;
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v32 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v32;
    *(void *)(a1 + 88) = a2[11];
    long long v5 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v5;
    uint64_t v31 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v31;
    *(void *)(a1 + 144) = a2[18];
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(void *)(a1 + 184) = a2[23];
    *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    uint64_t v30 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v30;
    *(void *)(a1 + 232) = a2[29];
    long long v6 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v6;
    uint64_t v29 = a2[35];
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v29;
    *(void *)(a1 + 288) = a2[36];
    long long v7 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 312) = v7;
    uint64_t v28 = a2[42];
    *(void *)(a1 + 328) = a2[41];
    *(void *)(a1 + 336) = v28;
    *(void *)(a1 + 344) = a2[43];
    long long v8 = *((_OWORD *)a2 + 23);
    *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 368) = v8;
    *(void *)(a1 + 384) = a2[48];
    *(unsigned char *)(a1 + 392) = *((unsigned char *)a2 + 392);
    *(_OWORD *)(a1 + 400) = *((_OWORD *)a2 + 25);
    uint64_t v27 = a2[53];
    *(void *)(a1 + 416) = a2[52];
    *(void *)(a1 + 424) = v27;
    *(void *)(a1 + 432) = a2[54];
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 57);
    uint64_t v26 = a2[60];
    *(void *)(a1 + 472) = a2[59];
    *(void *)(a1 + 480) = v26;
    *(void *)(a1 + 488) = a2[61];
    long long v9 = *((_OWORD *)a2 + 32);
    *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
    *(_OWORD *)(a1 + 512) = v9;
    *(void *)(a1 + 528) = a2[66];
    *(void *)(a1 + 536) = a2[67];
    *(void *)(a1 + 544) = a2[68];
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 69);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 71);
    *(void *)(a1 + 584) = a2[73];
    *(unsigned char *)(a1 + 592) = *((unsigned char *)a2 + 592);
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 75);
    *(void *)(a1 + 616) = a2[77];
    *(void *)(a1 + 624) = a2[78];
    *(void *)(a1 + 632) = a2[79];
    long long v10 = *((_OWORD *)a2 + 41);
    *(_OWORD *)(a1 + 640) = *((_OWORD *)a2 + 40);
    *(_OWORD *)(a1 + 656) = v10;
    *(void *)(a1 + 672) = a2[84];
    *(void *)(a1 + 680) = a2[85];
    *(void *)(a1 + 688) = a2[86];
    long long v11 = *(_OWORD *)(a2 + 89);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 712) = v11;
    *(void *)(a1 + 728) = a2[91];
    *(void *)(a1 + 736) = a2[92];
    *(void *)(a1 + 744) = a2[93];
    long long v12 = *((_OWORD *)a2 + 48);
    *(_OWORD *)(a1 + 752) = *((_OWORD *)a2 + 47);
    *(_OWORD *)(a1 + 768) = v12;
    *(void *)(a1 + 784) = a2[98];
    *(unsigned char *)(a1 + 792) = *((unsigned char *)a2 + 792);
    *(_OWORD *)(a1 + 800) = *((_OWORD *)a2 + 50);
    *(void *)(a1 + 816) = a2[102];
    *(void *)(a1 + 824) = a2[103];
    *(void *)(a1 + 832) = a2[104];
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 105);
    *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 107);
    *(void *)(a1 + 888) = a2[111];
    *(void *)(a1 + 944) = a2[118];
    *(void *)(a1 + 872) = a2[109];
    long long v13 = *((_OWORD *)a2 + 57);
    *(_OWORD *)(a1 + 896) = *((_OWORD *)a2 + 56);
    *(_OWORD *)(a1 + 912) = v13;
    *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 119);
    *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 121);
    *(void *)(a1 + 984) = a2[123];
    *(unsigned char *)(a1 + 992) = *((unsigned char *)a2 + 992);
    *(void *)(a1 + 1032) = a2[129];
    *(void *)(a1 + 1088) = a2[136];
    *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 125);
    long long v14 = *(_OWORD *)(a2 + 139);
    *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 137);
    *(_OWORD *)(a1 + 1112) = v14;
    *(void *)(a1 + 1144) = a2[143];
    *(void *)(a1 + 1184) = a2[148];
    *(unsigned char *)(a1 + 1192) = *((unsigned char *)a2 + 1192);
    *(void *)(a1 + 1232) = a2[154];
    *(void *)(a1 + 1288) = a2[161];
    *(void *)(a1 + 1344) = a2[168];
    *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 155);
    *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 157);
    *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 171);
    *(void *)(a1 + 1384) = a2[173];
    *(unsigned char *)(a1 + 1392) = *((unsigned char *)a2 + 1392);
    *(void *)(a1 + 1432) = a2[179];
    *(void *)(a1 + 1488) = a2[186];
    *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 175);
    long long v15 = *(_OWORD *)(a2 + 187);
    long long v16 = *(_OWORD *)(a2 + 189);
    *(void *)(a1 + 880) = a2[110];
    *(_OWORD *)(a1 + 1496) = v15;
    *(_OWORD *)(a1 + 1512) = v16;
    *(void *)(a1 + 1544) = a2[193];
    *(void *)(a1 + 1584) = a2[198];
    *(unsigned char *)(a1 + 1592) = *((unsigned char *)a2 + 1592);
    *(void *)(a1 + 928) = a2[116];
    *(void *)(a1 + 936) = a2[117];
    *(void *)(a1 + 1016) = a2[127];
    *(void *)(a1 + 1024) = a2[128];
    *(_OWORD *)(a1 + 1040) = *((_OWORD *)a2 + 65);
    *(_OWORD *)(a1 + 1056) = *((_OWORD *)a2 + 66);
    *(void *)(a1 + 1072) = a2[134];
    *(void *)(a1 + 1080) = a2[135];
    *(void *)(a1 + 1128) = a2[141];
    *(void *)(a1 + 1136) = a2[142];
    *(_OWORD *)(a1 + 1152) = *((_OWORD *)a2 + 72);
    *(_OWORD *)(a1 + 1168) = *((_OWORD *)a2 + 73);
    *(_OWORD *)(a1 + 1200) = *((_OWORD *)a2 + 75);
    *(void *)(a1 + 1216) = a2[152];
    *(void *)(a1 + 1224) = a2[153];
    *(void *)(a1 + 1272) = a2[159];
    *(void *)(a1 + 1280) = a2[160];
    *(_OWORD *)(a1 + 1296) = *((_OWORD *)a2 + 81);
    *(_OWORD *)(a1 + 1312) = *((_OWORD *)a2 + 82);
    *(void *)(a1 + 1328) = a2[166];
    *(void *)(a1 + 1336) = a2[167];
    *(void *)(a1 + 1416) = a2[177];
    *(void *)(a1 + 1424) = a2[178];
    *(_OWORD *)(a1 + 1440) = *((_OWORD *)a2 + 90);
    *(_OWORD *)(a1 + 1456) = *((_OWORD *)a2 + 91);
    *(void *)(a1 + 1472) = a2[184];
    *(void *)(a1 + 1480) = a2[185];
    *(void *)(a1 + 1528) = a2[191];
    *(void *)(a1 + 1536) = a2[192];
    *(_OWORD *)(a1 + 1552) = *((_OWORD *)a2 + 97);
    *(_OWORD *)(a1 + 1568) = *((_OWORD *)a2 + 98);
    *(_OWORD *)(a1 + 1600) = *((_OWORD *)a2 + 100);
    uint64_t v17 = *(int *)(a3 + 64);
    uint64_t v23 = (char *)a2 + v17;
    __dst = (void *)(a1 + v17);
    *(_OWORD *)(a1 + 1616) = *((_OWORD *)a2 + 101);
    uint64_t v18 = type metadata accessor for DateComponents();
    uint64_t v22 = *(void *)(v18 - 8);
    unint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v18))
    {
      uint64_t v19 = sub_1000AFA94(&qword_10094E8A8);
      memcpy(__dst, v23, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(__dst, v23, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v18);
    }
  }
  return v3;
}

uint64_t sub_100669B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v31 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v31;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v30 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v30;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  uint64_t v29 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v29;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v28 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v28;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  long long v5 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v5;
  uint64_t v27 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v27;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  long long v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  uint64_t v26 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v26;
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v7 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v7;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  uint64_t v25 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v25;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  uint64_t v24 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v24;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v8 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v8;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v9 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v9;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  long long v10 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v10;
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v11 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v11;
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  long long v12 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v12;
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 1240);
  *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 1256);
  *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 1352);
  *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 1368);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  long long v13 = *(_OWORD *)(a2 + 1496);
  long long v14 = *(_OWORD *)(a2 + 1512);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(_OWORD *)(a1 + 1496) = v13;
  *(_OWORD *)(a1 + 1512) = v14;
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  long long v15 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v15;
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  uint64_t v16 = *(int *)(a3 + 64);
  uint64_t v21 = (const void *)(a2 + v16);
  __dst = (void *)(a1 + v16);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  uint64_t v17 = type metadata accessor for DateComponents();
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v21, 1, v17))
  {
    uint64_t v18 = sub_1000AFA94(&qword_10094E8A8);
    memcpy(__dst, v21, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v21, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_10066A308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(void *)(a1 + 1352) = *(void *)(a2 + 1352);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  *(void *)(a1 + 1368) = *(void *)(a2 + 1368);
  *(void *)(a1 + 1376) = *(void *)(a2 + 1376);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1400) = *(void *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(void *)(a1 + 1600) = *(void *)(a2 + 1600);
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  uint64_t v6 = *(int *)(a3 + 64);
  long long v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DateComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  long long v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000AFA94(&qword_10094E8A8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_10066ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v4;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  long long v11 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v11;
  long long v12 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v12;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v13 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v13;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  long long v14 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v14;
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  long long v15 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v15;
  long long v16 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v16;
  long long v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  long long v18 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v18;
  long long v19 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v19;
  long long v20 = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 776) = v20;
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  long long v21 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v21;
  long long v22 = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 744) = v22;
  long long v23 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(a1 + 648) = v23;
  long long v24 = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 664) = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 680) = v24;
  long long v25 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v25;
  long long v26 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v26;
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  long long v27 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v27;
  long long v28 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v28;
  long long v29 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v29;
  long long v30 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v30;
  long long v31 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v31;
  long long v32 = *(_OWORD *)(a2 + 1176);
  *(_OWORD *)(a1 + 1160) = *(_OWORD *)(a2 + 1160);
  *(_OWORD *)(a1 + 1176) = v32;
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  long long v33 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v33;
  long long v34 = *(_OWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1144) = v34;
  long long v35 = *(_OWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1048) = v35;
  long long v36 = *(_OWORD *)(a2 + 1080);
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
  *(_OWORD *)(a1 + 1080) = v36;
  long long v37 = *(_OWORD *)(a2 + 1016);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1016) = v37;
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  long long v38 = *(_OWORD *)(a2 + 1576);
  *(_OWORD *)(a1 + 1560) = *(_OWORD *)(a2 + 1560);
  *(_OWORD *)(a1 + 1576) = v38;
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  long long v39 = *(_OWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = *(_OWORD *)(a2 + 1496);
  *(_OWORD *)(a1 + 1512) = v39;
  long long v40 = *(_OWORD *)(a2 + 1544);
  *(_OWORD *)(a1 + 1528) = *(_OWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1544) = v40;
  long long v41 = *(_OWORD *)(a2 + 1448);
  *(_OWORD *)(a1 + 1432) = *(_OWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1448) = v41;
  long long v42 = *(_OWORD *)(a2 + 1480);
  *(_OWORD *)(a1 + 1464) = *(_OWORD *)(a2 + 1464);
  *(_OWORD *)(a1 + 1480) = v42;
  long long v43 = *(_OWORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  *(_OWORD *)(a1 + 1416) = v43;
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  uint64_t v44 = *(int *)(a3 + 64);
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  uint64_t v47 = type metadata accessor for DateComponents();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = sub_1000AFA94(&qword_10094E8A8);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  return a1;
}

uint64_t sub_10066B11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v8;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v9 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v9;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  long long v10 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v10;
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v11 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v11;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  long long v12 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v12;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v13 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v13;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v14;
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v15 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v15;
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRelease();
  long long v16 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v16;
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  long long v17 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v17;
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  swift_bridgeObjectRelease();
  long long v18 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v18;
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1400) = *(void *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  long long v19 = *(_OWORD *)(a2 + 1616);
  uint64_t v20 = *(int *)(a3 + 64);
  long long v21 = (void *)(a1 + v20);
  long long v22 = (void *)(a2 + v20);
  *(_OWORD *)(a1 + 1616) = v19;
  uint64_t v23 = type metadata accessor for DateComponents();
  uint64_t v24 = *(void *)(v23 - 8);
  long long v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = sub_1000AFA94(&qword_10094E8A8);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_10066B834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_10094E8A8);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 64);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10066B8E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_10094E8A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 64);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for FriendSuggestionItemView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FriendSuggestionItemView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FriendSuggestionItemView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FriendSuggestionItemView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FriendSuggestionItemView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FriendSuggestionItemView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendSuggestionItemView()
{
  return &type metadata for FriendSuggestionItemView;
}

uint64_t sub_10066BCCC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10066BCE8()
{
  double result = 0.0;
  xmmword_100967348 = xmmword_100773110;
  *(_OWORD *)&qword_100967358 = xmmword_100773110;
  return result;
}

uint64_t sub_10066BD00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v37 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  long long v34 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for RoundedRectangle();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (_OWORD *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000AFA94(&qword_100967368);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000AFA94(&qword_100967370);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  long long v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100967378);
  __chkstk_darwin(v14);
  long long v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v9 = static Alignment.topTrailing.getter();
  v9[1] = v17;
  uint64_t v18 = sub_1000AFA94(&qword_100967380);
  sub_10066C094(v1, (uint64_t)v9 + *(int *)(v18 + 44));
  id v19 = [self secondarySystemBackgroundColor];
  uint64_t v20 = Color.init(uiColor:)();
  char v21 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_100967368);
  long long v22 = &v13[*(int *)(v11 + 44)];
  *(void *)long long v22 = v20;
  v22[8] = v21;
  sub_10008DB18((uint64_t)v9, &qword_100967368);
  uint64_t v23 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v24 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v25 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v6 = _Q0;
  uint64_t v31 = (uint64_t)&v16[*(int *)(v14 + 36)];
  sub_100098288((uint64_t)v6, v31, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v31 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v16, &qword_100967370);
  sub_100097E90((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v13, &qword_100967370);
  long long v32 = v34;
  static AccessibilityChildBehavior.combine.getter();
  sub_10066E6C8();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v37);
  return sub_10008DB18((uint64_t)v16, &qword_100967378);
}

uint64_t sub_10066C094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v38 = sub_1000AFA94(&qword_1009673A0);
  uint64_t v3 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009673A8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v37 = (uint64_t)&v36 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_1009673B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_1009673B8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v21 = (char *)&v36 - v20;
  *(void *)uint64_t v14 = static HorizontalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  uint64_t v22 = sub_1000AFA94(&qword_1009673C0);
  sub_10066C4B8(a1, (uint64_t)&v14[*(int *)(v22 + 44)]);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v18, &qword_1009673B0);
  uint64_t v23 = &v18[*(int *)(v16 + 44)];
  long long v24 = v41;
  *(_OWORD *)uint64_t v23 = v40;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v42;
  sub_10008DB18((uint64_t)v14, &qword_1009673B0);
  sub_1000AEEC8((uint64_t)v18, (uint64_t)v21, &qword_1009673B8);
  uint64_t v25 = swift_allocObject();
  long long v26 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v25 + 64) = v26;
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v25 + 96) = *(void *)(a1 + 80);
  long long v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 32) = v27;
  sub_10066E8D0(a1);
  sub_1000AFA94(&qword_1009673C8);
  sub_10066E950();
  Button.init(action:label:)();
  uint64_t v28 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v38;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v38);
  uint64_t v31 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t *v31 = KeyPath;
  v31[1] = v28;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
  uint64_t v32 = v37;
  sub_1000AEEC8((uint64_t)v9, v37, &qword_1009673A8);
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v18, &qword_1009673B8);
  sub_1000AEF2C(v32, (uint64_t)v9, &qword_1009673A8);
  uint64_t v33 = v39;
  sub_1000AEF2C((uint64_t)v18, v39, &qword_1009673B8);
  uint64_t v34 = sub_1000AFA94(&qword_1009673D8);
  sub_1000AEF2C((uint64_t)v9, v33 + *(int *)(v34 + 48), &qword_1009673A8);
  sub_10008DB18(v32, &qword_1009673A8);
  sub_10008DB18((uint64_t)v21, &qword_1009673B8);
  sub_10008DB18((uint64_t)v9, &qword_1009673A8);
  return sub_10008DB18((uint64_t)v18, &qword_1009673B8);
}

uint64_t sub_10066C4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009673E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v82 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000AFA94(&qword_1009673E8);
  __chkstk_darwin(v78);
  uint64_t v84 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)&v67 - v8;
  uint64_t v79 = a1;
  uint64_t v9 = *(void **)(a1 + 40);
  sub_1005B75E8(v9, 80.0);
  uint64_t v87 = Image.init(uiImage:)();
  int v77 = static Edge.Set.all.getter();
  id v10 = [v9 givenName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  uint64_t v88 = v11;
  uint64_t v89 = v13;
  sub_1000A06D0();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  static Font.body.getter();
  uint64_t v19 = Text.font(_:)();
  uint64_t v80 = v20;
  uint64_t v81 = v19;
  char v22 = v21;
  uint64_t v86 = v23;
  swift_release();
  sub_1000A06C0(v14, v16, v18);
  swift_bridgeObjectRelease();
  if (qword_10094B088 != -1) {
    swift_once();
  }
  int v85 = v22 & 1;
  long long v76 = xmmword_100967348;
  uint64_t v75 = qword_100967358;
  uint64_t v74 = unk_100967360;
  int v73 = static Edge.Set.all.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v24 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  static Font.footnote.getter();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  sub_1000A06C0(v24, v26, v28);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v72 = Text.foregroundColor(_:)();
  uint64_t v71 = v34;
  char v36 = v35;
  uint64_t v70 = v37;
  swift_release();
  int v69 = v36 & 1;
  sub_1000A06C0(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  int v68 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = v82;
  sub_10066CA80(v82);
  LOBYTE(v29) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v55 = v84;
  sub_1000AEF2C(v46, v84, &qword_1009673E0);
  uint64_t v56 = v55 + *(int *)(v78 + 36);
  *(unsigned char *)uint64_t v56 = v29;
  *(void *)(v56 + 8) = v48;
  *(void *)(v56 + 16) = v50;
  *(void *)(v56 + 24) = v52;
  *(void *)(v56 + 32) = v54;
  *(unsigned char *)(v56 + 40) = 0;
  sub_10008DB18(v46, &qword_1009673E0);
  uint64_t v57 = v83;
  sub_1000AEEC8(v55, v83, &qword_1009673E8);
  char v58 = v85;
  LOBYTE(v88) = v85;
  sub_1000AEF2C(v57, v55, &qword_1009673E8);
  *(void *)a2 = v87;
  *(unsigned char *)(a2 + 8) = v77;
  *(_OWORD *)(a2 + 16) = xmmword_1007509C0;
  *(_OWORD *)(a2 + 32) = xmmword_1007509B0;
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v60 = v80;
  uint64_t v59 = v81;
  *(void *)(a2 + 56) = v81;
  *(void *)(a2 + 64) = v60;
  *(unsigned char *)(a2 + 72) = v58;
  *(void *)(a2 + 80) = v86;
  *(unsigned char *)(a2 + 88) = v73;
  *(_OWORD *)(a2 + 96) = v76;
  uint64_t v61 = v74;
  *(void *)(a2 + 112) = v75;
  *(void *)(a2 + 120) = v61;
  *(unsigned char *)(a2 + 128) = 0;
  uint64_t v62 = v72;
  uint64_t v63 = v71;
  *(void *)(a2 + 136) = v72;
  *(void *)(a2 + 144) = v63;
  char v64 = v69;
  *(unsigned char *)(a2 + 152) = v69;
  *(void *)(a2 + 160) = v70;
  *(unsigned char *)(a2 + 168) = v68;
  *(void *)(a2 + 176) = v39;
  *(void *)(a2 + 184) = v41;
  *(void *)(a2 + 192) = v43;
  *(void *)(a2 + 200) = v45;
  *(unsigned char *)(a2 + 208) = 0;
  uint64_t v65 = sub_1000AFA94(&qword_1009673F0);
  sub_1000AEF2C(v55, a2 + *(int *)(v65 + 80), &qword_1009673E8);
  swift_retain();
  sub_1000A1750(v59, v60, v85);
  swift_bridgeObjectRetain();
  sub_1000A1750(v62, v63, v64);
  swift_bridgeObjectRetain();
  sub_10008DB18(v57, &qword_1009673E8);
  sub_10008DB18(v55, &qword_1009673E8);
  sub_1000A06C0(v62, v63, v64);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v59, v60, v88);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10066CA80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Capsule();
  __chkstk_darwin(v3 - 8);
  v93 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009673F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlSize();
  uint64_t v91 = *(void *)(v8 - 8);
  uint64_t v92 = v8;
  __chkstk_darwin(v8);
  uint64_t v89 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ButtonBorderShape();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_100967400);
  uint64_t v14 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000AFA94(&qword_100967408);
  __chkstk_darwin(v77);
  char v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100967410);
  uint64_t v82 = *(void *)(v19 - 8);
  uint64_t v83 = v19;
  __chkstk_darwin(v19);
  uint64_t v80 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_100967418);
  __chkstk_darwin(v75);
  char v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_100967420);
  __chkstk_darwin(v79);
  v90 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)v1)
  {
    uint64_t v78 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v94 = a1;
    if ((void)v95
      && (unint64_t v24 = v96,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          sub_10066E8D0(v1),
          char v25 = sub_10066EA88(v24, v1),
          sub_10066EE3C(v1),
          swift_bridgeObjectRelease(),
          (v25 & 1) != 0))
    {
      uint64_t v26 = static Color.clear.getter();
      id v27 = [self tertiarySystemBackgroundColor];
      uint64_t v74 = Color.init(uiColor:)();
      char v28 = 1;
    }
    else
    {
      id v29 = [self tertiarySystemBackgroundColor];
      uint64_t v26 = Color.init(uiColor:)();
      uint64_t v74 = static Color.clear.getter();
      char v28 = 0;
    }
    uint64_t v30 = swift_allocObject();
    long long v31 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v30 + 72) = v31;
    *(_OWORD *)(v30 + 88) = *(_OWORD *)(v1 + 64);
    long long v32 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v30 + 24) = *(_OWORD *)v1;
    *(void *)(v30 + 104) = *(void *)(v1 + 80);
    *(unsigned char *)(v30 + 16) = v28;
    *(_OWORD *)(v30 + 40) = v32;
    __chkstk_darwin(v30);
    *((unsigned char *)&v74 - 80) = v28;
    *(_OWORD *)(&v74 - 9) = xmmword_100773120;
    *(_OWORD *)(&v74 - 7) = xmmword_100773130;
    *(_OWORD *)(&v74 - 5) = 0u;
    *(_OWORD *)(&v74 - 3) = 0u;
    sub_10066E8D0(v1);
    sub_1000AFA94(&qword_100967428);
    sub_1000A132C(&qword_100967430, &qword_100967428);
    Button.init(action:label:)();
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v95 = v26;
    swift_retain();
    uint64_t v34 = AnyShapeStyle.init<A>(_:)();
    uint64_t v35 = v76;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v76);
    char v36 = (uint64_t *)&v18[*(int *)(v77 + 36)];
    *char v36 = KeyPath;
    v36[1] = v34;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v35);
    uint64_t v37 = v81;
    BorderedProminentButtonStyle.init()();
    sub_10066ED68();
    sub_10000CE1C((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v38 = v80;
    uint64_t v39 = v85;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v37, v39);
    sub_10008DB18((uint64_t)v18, &qword_100967408);
    uint64_t v40 = v86;
    static ButtonBorderShape.capsule.getter();
    uint64_t v41 = swift_getKeyPath();
    uint64_t v42 = (uint64_t *)&v22[*(int *)(v75 + 36)];
    uint64_t v43 = sub_1000AFA94(&qword_100966318);
    uint64_t v45 = v87;
    uint64_t v44 = v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))((char *)v42 + *(int *)(v43 + 28), v40, v88);
    *uint64_t v42 = v41;
    uint64_t v47 = v82;
    uint64_t v46 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v22, v38, v83);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v44);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v46);
    uint64_t v49 = v91;
    uint64_t v48 = v92;
    uint64_t v50 = v89;
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v89, enum case for ControlSize.small(_:), v92);
    uint64_t v51 = swift_getKeyPath();
    uint64_t v52 = (uint64_t)v90;
    uint64_t v53 = (uint64_t *)&v90[*(int *)(v79 + 36)];
    uint64_t v54 = sub_1000AFA94(&qword_10094C440);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v53 + *(int *)(v54 + 28), v50, v48);
    *uint64_t v53 = v51;
    sub_1000AEF2C((uint64_t)v22, v52, &qword_100967418);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
    sub_10008DB18((uint64_t)v22, &qword_100967418);
    uint64_t v55 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v56 = type metadata accessor for RoundedCornerStyle();
    uint64_t v57 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v93, v55, v56);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    uint64_t v58 = (uint64_t)v78;
    sub_100098288(v57, (uint64_t)v78, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v59 = v58 + *(int *)(sub_1000AFA94(&qword_100967448) + 36);
    long long v60 = v96;
    *(_OWORD *)uint64_t v59 = v95;
    *(_OWORD *)(v59 + 16) = v60;
    *(void *)(v59 + 32) = v97;
    uint64_t v61 = sub_1000AFA94(&qword_100967450);
    *(void *)(v58 + *(int *)(v61 + 52)) = v74;
    *(_WORD *)(v58 + *(int *)(v61 + 56)) = 256;
    swift_retain();
    uint64_t v62 = static Alignment.center.getter();
    uint64_t v64 = v63;
    uint64_t v65 = (uint64_t *)(v58 + *(int *)(sub_1000AFA94(&qword_100967458) + 36));
    *uint64_t v65 = v62;
    v65[1] = v64;
    sub_100097E90(v57, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v66 = static Alignment.center.getter();
    uint64_t v68 = v67;
    swift_release();
    swift_release();
    uint64_t v69 = sub_1000AFA94(&qword_1009673E0);
    uint64_t v70 = v94;
    uint64_t v71 = v94 + *(int *)(v69 + 36);
    sub_1000AEF2C(v58, v71, &qword_1009673F8);
    uint64_t v72 = (uint64_t *)(v71 + *(int *)(sub_1000AFA94(&qword_100967460) + 36));
    *uint64_t v72 = v66;
    v72[1] = v68;
    sub_1000AEF2C(v52, v70, &qword_100967420);
    sub_10008DB18(v58, &qword_1009673F8);
    return sub_10008DB18(v52, &qword_100967420);
  }
  else
  {
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_10000CE1C((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10066D5A8()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.footnote(_:), v0);
  static Font.Weight.bold.getter();
  uint64_t v5 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t KeyPath = swift_getKeyPath();
  char v7 = static Edge.Set.all.getter();
  v9[1] = v4;
  v9[2] = KeyPath;
  v9[3] = v5;
  char v10 = v7;
  uint64_t v11 = 0x4020000000000000;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0x4020000000000000;
  char v15 = 0;
  LocalizedStringKey.init(stringLiteral:)();
  sub_1000AFA94(&qword_100962FF8);
  sub_10066E9FC();
  View.accessibilityLabel(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10066D788(char a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor();
  sub_10066E8D0(a2);
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v9 + 80) = v10;
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a2 + 64);
  *(void *)(v9 + 112) = *(void *)(a2 + 80);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v9 + 48) = v11;
  if (a1) {
    uint64_t v12 = &unk_100967480;
  }
  else {
    uint64_t v12 = &unk_100967470;
  }
  sub_1000713D0((uint64_t)v6, (uint64_t)v12, v9);
  return swift_release();
}

__n128 sub_10066D91C@<Q0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  uint64_t v20 = static VerticalAlignment.center.getter();
  sub_10066DA04(a1, (uint64_t)&v28, a3, a4, a5, a6, a7, a8, a9, a10);
  char v21 = v29;
  uint64_t v22 = v30;
  char v23 = v31;
  char v24 = v34;
  __n128 result = v28;
  long long v26 = v32;
  long long v27 = v33;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v23;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v27;
  *(unsigned char *)(a2 + 96) = v24;
  return result;
}

uint64_t sub_10066DA04@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  uint64_t v20 = type metadata accessor for Font.TextStyle();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v24 - 8);
  if (a1)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
    Image.init(systemName:)();
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release();
    v26._countAndFlagsBits = 32;
    v26._object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
    id v27 = [self mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v27 localizedStringForKey:v28 value:0 table:0];

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    long long v32 = v31;

    v33._countAndFlagsBits = v30;
    v33._object = v32;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v33);
    swift_bridgeObjectRelease();
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v34);
    LocalizedStringKey.init(stringInterpolation:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    a6 = a10;
    a5 = a9;
    a4 = a8;
    a3 = a7;
  }
  uint64_t v35 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for Font.TextStyle.caption2(_:), v20);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v40 = Text.font(_:)();
  uint64_t v42 = v41;
  char v44 = v43;
  uint64_t v46 = v45;
  swift_release();
  sub_1000A06C0(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t result = static Edge.Set.all.getter();
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = v42;
  *(unsigned char *)(a2 + 16) = v44 & 1;
  *(void *)(a2 + 24) = v46;
  *(unsigned char *)(a2 + 32) = result;
  *(double *)(a2 + 40) = a3;
  *(double *)(a2 + 48) = a4;
  *(double *)(a2 + 56) = a5;
  *(double *)(a2 + 64) = a6;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_10066DD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v6;
  v4[10] = v5;
  return _swift_task_switch(sub_10066DE1C, v6, v5);
}

uint64_t sub_10066DE1C()
{
  uint64_t v1 = (uint64_t *)v0[7];
  uint64_t v2 = *v1;
  v0[11] = *v1;
  if (v2)
  {
    uint64_t v3 = v1[6];
    uint64_t v4 = v1[7];
    uint64_t v5 = v1[8];
    uint64_t v6 = v1[9];
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10094ED18 + dword_10094ED18);
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[12] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10066DF80;
    return v9(v3, v4, v5, v6);
  }
  else
  {
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_10000CE1C((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    return EnvironmentObject.error()();
  }
}

uint64_t sub_10066DF80(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 49) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_10066E0CC, v4, v3);
}

uint64_t sub_10066E0CC()
{
  char v1 = *(unsigned char *)(v0 + 49);
  swift_release();
  if (v1)
  {
LABEL_4:
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  if (*(void *)(*(void *)(v0 + 56) + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 48) = 16;
    swift_retain();
    static Published.subscript.setter();
    goto LABEL_4;
  }
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  sub_10000CE1C((unint64_t *)&qword_10095C150, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailAlertCoordinator);
  return EnvironmentObject.error()();
}

uint64_t sub_10066E20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  type metadata accessor for MainActor();
  v4[14] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v6;
  v4[16] = v5;
  return _swift_task_switch(sub_10066E2A4, v6, v5);
}

uint64_t sub_10066E2A4()
{
  char v1 = *(uint64_t **)(v0 + 104);
  uint64_t v2 = *v1;
  *(void *)(v0 + 136) = *v1;
  if (v2)
  {
    long long v3 = *(_OWORD *)(v1 + 5);
    long long v4 = *(_OWORD *)(v1 + 9);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 7);
    *(_OWORD *)(v0 + 48) = v4;
    *(_OWORD *)(v0 + 16) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10066E3E8;
    return sub_1001D8404(v0 + 16);
  }
  else
  {
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_10000CE1C((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    return EnvironmentObject.error()();
  }
}

uint64_t sub_10066E3E8(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 97) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  return _swift_task_switch(sub_10066E534, v4, v3);
}

uint64_t sub_10066E534()
{
  char v1 = *(unsigned char *)(v0 + 97);
  swift_release();
  if (v1)
  {
LABEL_4:
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  if (*(void *)(*(void *)(v0 + 104) + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 64) = 1;
    *(void *)(v0 + 72) = 0;
    *(void *)(v0 + 80) = 0;
    *(void *)(v0 + 88) = 0;
    *(unsigned char *)(v0 + 96) = 16;
    swift_retain();
    static Published.subscript.setter();
    goto LABEL_4;
  }
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  sub_10000CE1C((unint64_t *)&qword_10095C150, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailAlertCoordinator);
  return EnvironmentObject.error()();
}

uint64_t sub_10066E67C@<X0>(uint64_t a1@<X8>)
{
  return sub_10066BD00(a1);
}

unint64_t sub_10066E6C8()
{
  unint64_t result = qword_100967388;
  if (!qword_100967388)
  {
    sub_1000A1370(&qword_100967378);
    sub_10066E768();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967388);
  }
  return result;
}

unint64_t sub_10066E768()
{
  unint64_t result = qword_100967390;
  if (!qword_100967390)
  {
    sub_1000A1370(&qword_100967370);
    sub_1000A132C(&qword_100967398, &qword_100967368);
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967390);
  }
  return result;
}

uint64_t sub_10066E82C()
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10066E894()
{
  long long v1 = *(_OWORD *)(v0 + 72);
  v3[0] = *(_OWORD *)(v0 + 56);
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 88);
  return sub_1004A3A48((uint64_t)v3);
}

uint64_t sub_10066E8D0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  swift_retain();
  swift_retain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_10066E950()
{
  unint64_t result = qword_1009673D0;
  if (!qword_1009673D0)
  {
    sub_1000A1370(&qword_1009673C8);
    sub_10066E9FC();
    sub_10000CE1C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009673D0);
  }
  return result;
}

unint64_t sub_10066E9FC()
{
  unint64_t result = qword_100962FF0;
  if (!qword_100962FF0)
  {
    sub_1000A1370(&qword_100962FF8);
    sub_1002857C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962FF0);
  }
  return result;
}

uint64_t sub_10066EA88(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v24 = v3;
    uint64_t v25 = v6;
    unint64_t v28 = v5 & 0xC000000000000001;
    id v26 = *(id *)(a2 + 40);
    unint64_t v27 = v5;
    uint64_t v7 = 4;
    uint64_t v8 = &selRef_configurePlayer;
    while (1)
    {
      a2 = v7 - 4;
      id v10 = v28 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v7);
      long long v11 = v10;
      uint64_t v3 = v7 - 3;
      if (__OFADD__(a2, 1)) {
        break;
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 contactWithKeys:isa];

      if (v13)
      {
        id v14 = [v13 v8[480]];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      id v18 = [v26 v8[480] v24];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      if (v17)
      {
        unint64_t v5 = v27;
        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

LABEL_19:
          uint64_t v22 = 1;
          goto LABEL_23;
        }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v9) {
          goto LABEL_19;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        unint64_t v5 = v27;
      }
      ++v7;
      uint64_t v8 = &selRef_configurePlayer;
      if (v3 == v25)
      {
        uint64_t v22 = 0;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_10066ECD4()
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10066ED3C()
{
  return sub_10066D788(*(unsigned char *)(v0 + 16), v0 + 24);
}

double sub_10066ED48@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10066D91C(*(unsigned char *)(v1 + 16), a1, *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80)).n128_u64[0];
  return result;
}

unint64_t sub_10066ED68()
{
  unint64_t result = qword_100967438;
  if (!qword_100967438)
  {
    sub_1000A1370(&qword_100967408);
    sub_1000A132C(&qword_100967440, &qword_100967400);
    sub_1000A132C(&qword_1009532A8, &qword_1009532B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967438);
  }
  return result;
}

uint64_t sub_10066EE3C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10066EEC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10005DB5C;
  return sub_10066DD84(a1, v4, v5, v1 + 32);
}

uint64_t sub_10066EF78()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10066EFE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000DBD6C;
  return sub_10066E20C(a1, v4, v5, v1 + 32);
}

uint64_t sub_10066F0A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10066F104()
{
  unint64_t result = qword_100967488;
  if (!qword_100967488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967488);
  }
  return result;
}

unint64_t sub_10066F15C()
{
  unint64_t result = qword_100967490;
  if (!qword_100967490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967490);
  }
  return result;
}

unint64_t sub_10066F1B4()
{
  unint64_t result = qword_100967498;
  if (!qword_100967498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967498);
  }
  return result;
}

uint64_t sub_10066F20C()
{
  AppDependency.wrappedValue.getter();
  id v0 = v6;
  id v6 = 0;
  id v1 = [v0 wheelchairUseWithError:&v6];

  if (v1)
  {
    id v2 = v6;
    [v1 wheelchairUse];

    return sub_1000AAF10();
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v3 = sub_1000AAF10();
    swift_errorRelease();
  }
  return v3;
}

uint64_t sub_10066F324()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  qword_1009987F8 = result;
  return result;
}

uint64_t sub_10066F38C()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_100998800);
  sub_1000876DC(v5, (uint64_t)qword_100998800);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10066F4F8()
{
  uint64_t v0 = sub_1000AFA94(&qword_1009674F0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_1009674F8);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_1009674E8);
  sub_1000258C4(v5, qword_100998818);
  sub_1000876DC(v5, (uint64_t)qword_100998818);
  sub_1001C8A48();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007B79C0;
  v6._countAndFlagsBits = 0xD000000000000014;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_10066F6E4@<X0>(void *a1@<X8>)
{
  if (qword_10094B090 != -1) {
    swift_once();
  }
  *a1 = qword_1009987F8;

  return swift_retain();
}

unint64_t sub_10066F754()
{
  unint64_t result = qword_1009674A0;
  if (!qword_1009674A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674A0);
  }
  return result;
}

uint64_t sub_10066F7A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094B0A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_1009674E8);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998818);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10066F858()
{
  unint64_t result = qword_1009674A8;
  if (!qword_1009674A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674A8);
  }
  return result;
}

unint64_t sub_10066F8B0()
{
  unint64_t result = qword_1009674B0;
  if (!qword_1009674B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674B0);
  }
  return result;
}

unint64_t sub_10066F908()
{
  unint64_t result = qword_1009674B8;
  if (!qword_1009674B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674B8);
  }
  return result;
}

void sub_10066F95C(void *a1@<X8>)
{
  *a1 = *(unsigned __int8 *)(v1 + 8);
}

uint64_t sub_10066F968()
{
  sub_10066FD94();
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_10066F9FC@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094B098 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998800);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10066FAA8()
{
  unint64_t result = qword_1009674C8;
  if (!qword_1009674C8)
  {
    sub_1000A1370(&qword_1009674D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674C8);
  }
  return result;
}

uint64_t sub_10066FB04(uint64_t a1)
{
  unint64_t v2 = sub_1001C8A48();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10066FB54()
{
  unint64_t result = qword_1009674D8;
  if (!qword_1009674D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674D8);
  }
  return result;
}

uint64_t sub_10066FBA8()
{
  uint64_t v0 = sub_10066F20C();

  return DisplayRepresentation.init(stringLiteral:)(v0);
}

uint64_t sub_10066FBE8(uint64_t a1)
{
  unint64_t v2 = sub_10066F908();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t initializeBufferWithCopyOfBuffer for TrendEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrendEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TrendEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendEntity()
{
  return &type metadata for TrendEntity;
}

unint64_t sub_10066FD94()
{
  unint64_t result = qword_1009674E0;
  if (!qword_1009674E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009674E0);
  }
  return result;
}

uint64_t sub_10066FDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, unsigned char *a9@<X8>, void *a10, uint64_t a11, uint64_t a12)
{
  int v30 = a7;
  int v33 = a4;
  int v34 = a6;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v36 = a8;
  uint64_t v37 = a12;
  uint64_t v35 = a11;
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AEF2C(a1, (uint64_t)v17, (uint64_t *)&unk_1009555F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    UUID.init()();
    sub_10008DB18((uint64_t)v17, (uint64_t *)&unk_1009555F0);
    uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32);
  }
  else
  {
    uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32);
    v22(v21, v17, v18);
  }
  char v23 = v30 & 1;
  v22(a9, v21, v18);
  uint64_t v24 = (int *)type metadata accessor for FriendCard();
  uint64_t v25 = &a9[v24[5]];
  uint64_t v26 = v32;
  *(void *)uint64_t v25 = v31;
  *((void *)v25 + 1) = v26;
  v25[16] = v33;
  a9[v24[6]] = a5 & 1;
  a9[v24[7]] = v34 & 1;
  a9[v24[8]] = v23;
  *(void *)&a9[v24[9]] = v36;
  *(void *)&a9[v24[10]] = a10;
  *(void *)&a9[v24[11]] = v35;
  id v27 = [a10 currentCompetition];
  uint64_t result = sub_10008DB18(a1, (uint64_t *)&unk_1009555F0);
  *(void *)&a9[v24[12]] = v27;
  *(void *)&a9[v24[13]] = v37;
  return result;
}

Swift::Int sub_100670064()
{
  uint64_t v62 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  long long v60 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v63 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v58 - v5;
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v58 - v7;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v58 - v18;
  Hasher.init()();
  uint64_t v66 = type metadata accessor for FriendCard();
  uint64_t v20 = v0;
  uint64_t v21 = v0 + *(int *)(v66 + 20);
  uint64_t v22 = *(void *)v21;
  char v23 = *(void **)(v21 + 8);
  int v24 = *(unsigned __int8 *)(v21 + 16);
  sub_100091494(*(void *)v21, (uint64_t)v23, *(unsigned char *)(v21 + 16));
  v77._countAndFlagsBits = v22;
  v77._object = v23;
  sub_1000932C0(v77, v24);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v24 || v24 == 2)
  {
    Hasher._combine(_:)(v22);
    uint64_t v25 = v20;
  }
  else
  {
    uint64_t v25 = v20;
    if (v24 == 1)
    {
      String.hash(into:)();
      uint64_t v26 = v22;
      uint64_t v27 = (uint64_t)v23;
      char v28 = 1;
    }
    else
    {
      uint64_t v26 = v22;
      uint64_t v27 = (uint64_t)v23;
      char v28 = v24;
    }
    sub_1000917F8(v26, v27, v28);
  }
  uint64_t v29 = v62;
  uint64_t v30 = v61;
  uint64_t v31 = v66;
  Hasher._combine(_:)(*(unsigned __int8 *)(v25 + *(int *)(v66 + 24)));
  Hasher._combine(_:)(*(unsigned char *)(v25 + *(int *)(v31 + 28)));
  uint64_t v32 = *(int *)(v31 + 40);
  int v33 = *(void **)(v25 + v32);
  if (v33)
  {
    id v34 = [v33 UUID];
    if (v34)
    {
      uint64_t v35 = v34;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
    }
    sub_1000AEEC8((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1009555F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v19, 1, 1, v8);
  }
  uint64_t v36 = v66;
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v13, (uint64_t *)&unk_1009555F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v66 = v25;
    uint64_t v38 = v30;
    uint64_t v39 = v29;
    uint64_t v40 = v32;
    uint64_t v41 = v36;
    uint64_t v42 = v59;
    v37(v59, v13, v8);
    Hasher._combine(_:)(1u);
    sub_1000A6E8C((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    char v43 = v42;
    uint64_t v36 = v41;
    uint64_t v32 = v40;
    uint64_t v29 = v39;
    uint64_t v30 = v38;
    uint64_t v25 = v66;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v43, v8);
  }
  uint64_t v44 = (uint64_t)v65;
  sub_10008DB18((uint64_t)v19, (uint64_t *)&unk_1009555F0);
  uint64_t v45 = *(void **)(v25 + *(int *)(v36 + 44));
  if (v45)
  {
    id v46 = [v45 snapshotUploadedDate];
    if (v46)
    {
      uint64_t v47 = v46;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
    }
    uint64_t v49 = (uint64_t)v64;
    uint64_t v50 = (uint64_t)v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v44, v48, 1, v29);
    sub_1000AEEC8(v44, v49, (uint64_t *)&unk_10095B890);
  }
  else
  {
    uint64_t v49 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v64, 1, 1, v29);
    uint64_t v50 = (uint64_t)v63;
  }
  sub_1000AEF2C(v49, v50, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v50, 1, v29) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v51 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v60, v50, v29);
    Hasher._combine(_:)(1u);
    sub_1000A6E8C((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v51, v29);
  }
  sub_10008DB18(v49, (uint64_t *)&unk_10095B890);
  uint64_t v52 = *(void **)(v25 + v32);
  if (v52 && (id v53 = [v52 currentCompetition]) != 0)
  {
    uint64_t v54 = v53;
    id v55 = [v53 description];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  id v56 = *(id *)(v25 + *(int *)(v36 + 52));
  NSObject.hash(into:)();

  long long v74 = v69;
  long long v75 = v70;
  uint64_t v76 = v71;
  long long v72 = v67;
  long long v73 = v68;
  return Hasher.finalize()();
}

uint64_t sub_100670808()
{
  type metadata accessor for FriendCard();
  _print_unlocked<A, B>(_:_:)();
  v0._countAndFlagsBits = 58;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  v1._countAndFlagsBits = 58;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  type metadata accessor for UUID();
  sub_1000A6E8C((unint64_t *)&qword_10095F730, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 540945696;
  v3._object = (void *)0xE400000000000000;
  String.append(_:)(v3);
  sub_1000AFA94(&qword_100967500);
  v4._countAndFlagsBits = Optional.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100670998(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v16;
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v19;
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)((char *)a1 + v18) = v20;
    uint64_t v21 = a3[12];
    uint64_t v22 = a3[13];
    char v23 = *(void **)((char *)a2 + v21);
    *(void *)((char *)a1 + v21) = v23;
    int v24 = *(void **)((char *)a2 + v22);
    *(void *)((char *)a1 + v22) = v24;
    id v25 = v16;
    id v26 = v19;
    id v27 = v20;
    id v28 = v23;
    id v29 = v24;
  }
  return a1;
}

void sub_100670AF8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));

  int v5 = *(void **)(a1 + a2[13]);
}

uint64_t sub_100670BB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  uint64_t v16 = a3[10];
  uint64_t v17 = a3[11];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = *(void **)(a2 + v17);
  *(void *)(a1 + v17) = v19;
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  char v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v15;
  id v25 = v18;
  id v26 = v19;
  id v27 = v22;
  id v28 = v23;
  return a1;
}

uint64_t sub_100670CC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)(a1 + v16);
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v18;

  uint64_t v20 = a3[10];
  uint64_t v21 = *(void **)(a1 + v20);
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  id v23 = v22;

  uint64_t v24 = a3[11];
  id v25 = *(void **)(a1 + v24);
  id v26 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v26;
  id v27 = v26;

  uint64_t v28 = a3[12];
  id v29 = *(void **)(a1 + v28);
  uint64_t v30 = *(void **)(a2 + v28);
  *(void *)(a1 + v28) = v30;
  id v31 = v30;

  uint64_t v32 = a3[13];
  int v33 = *(void **)(a2 + v32);
  id v34 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = v33;
  id v35 = v33;

  return a1;
}

uint64_t sub_100670E14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  uint64_t v17 = a3[10];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = a3[11];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[12];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  uint64_t v23 = a3[13];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  return a1;
}

uint64_t sub_100670F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100670F40);
}

uint64_t sub_100670F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 52));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100671000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100671014);
}

uint64_t sub_100671014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
  return result;
}

id sub_1006710E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController] = 0;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_cellPadding] = 0x4028000000000000;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_cellInset] = 0x4030000000000000;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for WorkoutDetailPowerTableViewCell();
  id v6 = [super initWithStyle:a1 reuseIdentifier:v5];

  uint64_t v7 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100751040;
  id v9 = v6;
  id v10 = [v9 contentView];
  id v11 = [v10 heightAnchor];

  id v12 = [v11 constraintGreaterThanOrEqualToConstant:132.0];
  *(void *)(v8 + 32) = v12;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa];

  return v9;
}

id sub_10067137C(void (**a1)(char *, char *), void *a2, void *a3, void *a4, char *a5, void *a6)
{
  id v122 = a6;
  v135 = a5;
  id v131 = a3;
  id v132 = a4;
  v138 = a1;
  uint64_t v123 = type metadata accessor for WorkoutDetailChartView();
  __chkstk_darwin(v123);
  uint64_t v124 = (uint64_t)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v121 - v9;
  uint64_t v11 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v11 - 8);
  v136 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v133 = *(void *)(v13 - 8);
  uint64_t v134 = v13;
  __chkstk_darwin(v13);
  uint64_t v126 = (uint64_t)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v15 - 8);
  v128 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v121 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v121 - v21;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  v130 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v137 = (char *)&v121 - v27;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v121 - v29;
  __n128 v32 = __chkstk_darwin(v31);
  id v34 = (char *)&v121 - v33;
  v127 = v10;
  v129 = v30;
  if (a2)
  {
    v121 = a2;
    uint64_t v35 = v24;
    uint64_t v36 = v23;
    id v37 = [a2 startDate:v32.n128_f64[0]];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v38(v22, v30, v36);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v35 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v39)(v22, 0, 1, v36);
    uint64_t v40 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v22, 1, v36) != 1)
    {
      uint64_t v41 = v36;
      v38(v34, v22, v36);
      uint64_t v24 = v40;
      a2 = v121;
      goto LABEL_8;
    }
    uint64_t v41 = v36;
    uint64_t v24 = v40;
    a2 = v121;
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v24 + 56);
    uint64_t v41 = v23;
    v39(v22, 1, 1, v23, v32);
  }
  id v42 = [v138 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18((uint64_t)v22, (uint64_t *)&unk_10095B890);
  if (!a2)
  {
    char v43 = (char *)v41;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v19, 1, 1, v41);
    uint64_t v44 = v138;
    uint64_t v45 = &selRef_configurePlayer;
LABEL_12:
    uint64_t v51 = v43;
    id v52 = [v44 v45[222]];
    id v53 = v137;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    char v43 = v51;
    sub_10008DB18((uint64_t)v19, (uint64_t *)&unk_10095B890);
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v45 = &selRef_configurePlayer;
  id v46 = [a2 endDate];
  uint64_t v47 = (uint64_t)v128;
  if (v46)
  {
    uint64_t v48 = v46;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  char v43 = (char *)v41;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v39)(v47, v49, 1, v41);
  sub_1000CBFEC(v47, (uint64_t)v19);
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v41);
  uint64_t v44 = v138;
  if (v50 == 1) {
    goto LABEL_12;
  }
  id v53 = v137;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v137, v19, v41);
LABEL_14:
  uint64_t v54 = *(void (**)(char *, char *, char *))(v24 + 16);
  uint64_t v55 = (uint64_t)v129;
  v54(v129, v34, v43);
  uint64_t v56 = (uint64_t)v130;
  v54(v130, v53, v43);
  id v57 = [self mainScreen];
  [v57 bounds];
  CGFloat v59 = v58;
  CGFloat v61 = v60;
  CGFloat v63 = v62;
  CGFloat v65 = v64;

  v140.origin.x = v59;
  v140.origin.y = v61;
  v140.size.width = v63;
  v140.size.height = v65;
  *(double *)&uint64_t v66 = CGRectGetWidth(v140) + -56.0;
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  uint64_t v67 = sub_10033A6D0(v55, v56, 0, 1, v66, 0, 1, 10.0, 90.0);
  type metadata accessor for WorkoutDetailPowerDataStore();
  swift_allocObject();
  long long v68 = v138;
  id v69 = a2;
  long long v70 = a2;
  id v71 = v131;
  id v72 = v132;
  sub_100530610(v68, v70, v71, v72);

  sub_10052E37C(v135);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v73 = (uint64_t)v136;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v73, 1, v134) == 1)
  {
    swift_release();
    swift_release();
    long long v74 = *(void (**)(char *, char *))(v24 + 8);
    v74(v53, v43);
    v74(v34, v43);
    return (id)sub_10008DB18(v73, &qword_10094D448);
  }
  uint64_t v76 = v43;
  v135 = v34;
  v138 = (void (**)(char *, char *))v24;
  uint64_t v77 = v126;
  sub_1001BB6FC(v73, v126);
  uint64_t v78 = (uint64_t)v127;
  sub_1001BB760(v77, (uint64_t)v127, type metadata accessor for WorkoutChartViewModel);
  *(void *)(v78 + *(int *)(v123 + 20)) = v67;
  uint64_t v79 = OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController;
  uint64_t v80 = v125;
  uint64_t v81 = *(void **)&v125[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController];
  if (v81)
  {
    sub_1001BB760(v78, v124, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
    swift_retain();
    id v82 = v81;
    dispatch thunk of UIHostingController.rootView.setter();
    id result = [v82 view];
    if (result)
    {
      uint64_t v83 = result;
      [result layoutIfNeeded];
      swift_release();
      swift_release();

      sub_1003A7054(v78, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
      sub_1003A7054(v77, type metadata accessor for WorkoutChartViewModel);
      uint64_t v84 = v138[1];
      v84(v53, v76);
      return (id)((uint64_t (*)(char *, char *))v84)(v135, v76);
    }
    __break(1u);
    goto LABEL_29;
  }
  sub_1001BB760(v78, v124, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
  id v85 = objc_allocWithZone((Class)sub_1000AFA94(&qword_10095A3B0));
  swift_retain();
  uint64_t v86 = (void *)UIHostingController.init(rootView:)();
  uint64_t v87 = *(void **)&v80[v79];
  *(void *)&v80[v79] = v86;
  id v88 = v86;

  id result = [v88 view];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v89 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = [v88 view];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v90 = result;
  id v91 = [self clearColor];
  [v90 setBackgroundColor:v91];

  id v92 = [v80 contentView];
  id result = [v88 view];
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v93 = result;
  uint64_t v134 = v67;
  v136 = v76;
  [v92 addSubview:result];

  [v122 addChildViewController:v88];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_100751160;
  id result = [v88 view];
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  long long v95 = result;
  id v96 = [result topAnchor];

  id v97 = [v80 contentView];
  id v98 = [v97 topAnchor];

  id v99 = [v96 constraintEqualToAnchor:v98 constant:12.0];
  *(void *)(v94 + 32) = v99;
  id result = [v88 view];
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v100 = result;
  id v101 = [result leadingAnchor];

  id v102 = [v80 contentView];
  id v103 = [v102 leadingAnchor];

  id v104 = [v101 constraintEqualToAnchor:v103 constant:12.0];
  *(void *)(v94 + 40) = v104;
  id result = [v88 view];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v105 = result;
  id v106 = [result trailingAnchor];

  id v107 = [v80 contentView];
  id v108 = [v107 trailingAnchor];

  id v109 = [v106 constraintEqualToAnchor:v108 constant:-12.0];
  *(void *)(v94 + 48) = v109;
  id result = [v88 view];
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v110 = v80;
  v111 = result;
  v112 = self;
  id v113 = [v111 bottomAnchor];

  id v114 = [v110 contentView];
  id v115 = [v114 bottomAnchor];

  id v116 = [v113 constraintEqualToAnchor:v115 constant:-12.0];
  *(void *)(v94 + 56) = v116;
  uint64_t v139 = v94;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v112 activateConstraints:isa];

  [v88 didMoveToParentViewController:v122];
  id result = [v88 view];
  if (result)
  {
    v118 = result;
    [result layoutIfNeeded];
    swift_release();
    swift_release();

    sub_1003A7054((uint64_t)v127, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
    sub_1003A7054(v126, type metadata accessor for WorkoutChartViewModel);
    v119 = v138[1];
    v120 = v136;
    v119(v137, v136);
    return (id)((uint64_t (*)(char *, char *))v119)(v135, v120);
  }
LABEL_36:
  __break(1u);
  return result;
}

id sub_1006722D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailPowerTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailPowerTableViewCell()
{
  return self;
}

uint64_t *sub_100672348(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CatalogLockup();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for MetricLocation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100672450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for MetricLocation();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1006724F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MetricLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006725B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MetricLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100672668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MetricLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100672720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CatalogLockup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MetricLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006727D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006727EC);
}

uint64_t sub_1006727EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CatalogLockup();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for MetricLocation();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1006728E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006728F8);
}

uint64_t sub_1006728F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CatalogLockup();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for MetricLocation();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for FitnessPlusUpNextCardActionContext()
{
  uint64_t result = qword_100967650;
  if (!qword_100967650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100672A48()
{
  uint64_t result = type metadata accessor for CatalogLockup();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MetricLocation();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100672B10()
{
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = CatalogLockup.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  return 0xD00000000000002ELL;
}

unint64_t sub_100672B94()
{
  sub_1000AFA94(&qword_10094DBA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = CatalogLockup.identifier.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_100522E98(inited);
}

uint64_t sub_100672C00()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000258C4(v0, qword_100998830);
  sub_1000876DC(v0, (uint64_t)qword_100998830);
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100672D98(uint64_t a1)
{
  return sub_100672DC0(a1, qword_100998848, 6, 19);
}

uint64_t sub_100672DAC(uint64_t a1)
{
  return sub_100672DC0(a1, qword_100998860, 12, 27);
}

uint64_t sub_100672DC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Date();
  sub_1000258C4(v7, a2);
  uint64_t v8 = sub_1000876DC(v7, (uint64_t)a2);
  return sub_100672E34(a3, a4, v8);
}

uint64_t sub_100672E20(uint64_t a1)
{
  return sub_100672DC0(a1, qword_100998878, 18, 35);
}

uint64_t sub_100672E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[0] = a2;
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  uint64_t v27 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  uint64_t v26 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar();
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v23 - v17;
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v15, v12);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23[1] = v9 + 8;
  v19(v11, v8);
  static Calendar.current.getter();
  uint64_t v20 = v27;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Calendar.Component.hour(_:), v27);
  uint64_t v21 = (uint64_t)v26;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  v19(v11, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) == 1)
  {
    sub_10023636C(v21);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    v25(v18, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v29, v21, v12);
  }
  return result;
}

char *sub_100673214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView;
  id v7 = objc_allocWithZone((Class)type metadata accessor for AchievementCellContentView());
  uint64_t v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v6] = v9;
  uint64_t v10 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView;
  id v11 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v12 = sub_10005DB50();
  [v11 setBackgroundColor:v12];

  id v13 = [v11 layer];
  [v13 setCornerRadius:12.0];

  [v11 setClipsToBounds:1];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[v10] = v11;
  uint64_t v14 = *(void **)(*(void *)&v3[v6] + OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView);
  *(void *)&v8[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementBadgeView] = v14;
  id v15 = v14;

  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for WorkoutDetailAwardTableViewCell();
  uint64_t v17 = (char *)[super initWithStyle:a1 reuseIdentifier:v16];

  uint64_t v18 = *(void **)&v17[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView];
  uint64_t v19 = *(void *)&v17[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView];
  uint64_t v20 = v17;
  [v18 addSubview:v19];
  id v21 = [v20 contentView];
  [v21 addSubview:v18];

  sub_1006734D8();
  return v20;
}

void sub_1006734D8()
{
  uint64_t v1 = v0;
  id v34 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100752640;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:sub_1001784A0()];
  *(void *)(v2 + 32) = v7;
  id v8 = [v3 bottomAnchor];
  id v9 = [v1 contentView];
  id v10 = [v9 bottomAnchor];

  sub_1001784A0();
  id v12 = [v8 constraintEqualToAnchor:v10 constant:-v11];

  *(void *)(v2 + 40) = v12;
  id v13 = [v3 leadingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 leadingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v2 + 48) = v16;
  id v17 = [v3 trailingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 trailingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v2 + 56) = v20;
  id v21 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView];
  id v22 = [v21 topAnchor];
  id v23 = [v3 topAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v2 + 64) = v24;
  id v25 = [v21 bottomAnchor];
  id v26 = [v3 bottomAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v2 + 72) = v27;
  id v28 = [v21 leadingAnchor];
  id v29 = [v3 leadingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v2 + 80) = v30;
  id v31 = [v21 trailingAnchor];
  id v32 = [v3 trailingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v2 + 88) = v33;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:isa];
}

void sub_10067392C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v7 - 8);
  sub_100223998(a1, a2, a3);
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v8 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  EntityProperty<>.init(title:)();
  id v9 = v8;
  swift_retain();
  [v9 unearned];
  EntityProperty.wrappedValue.setter();

  swift_release();
  sub_1003915D0();
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1001B5C10();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v10 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_1000818CC();
  double v11 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();
}

id sub_100673CA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAwardTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailAwardTableViewCell()
{
  return self;
}

void sub_100673D58()
{
  uint64_t v1 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView;
  id v2 = [objc_allocWithZone((Class)type metadata accessor for AchievementCellContentView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView;
  id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v5 = sub_10005DB50();
  [v4 setBackgroundColor:v5];

  id v6 = [v4 layer];
  [v6 setCornerRadius:12.0];

  [v4 setClipsToBounds:1];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100673ECC()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for PaceFormatter()) init];
  qword_1009676C8 = (uint64_t)result;
  return result;
}

id sub_100673F00()
{
  id result = [objc_allocWithZone((Class)NSMeasurementFormatter) init];
  qword_1009676D0 = (uint64_t)result;
  return result;
}

id sub_100673F34()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setMaximumFractionDigits:0];
  id result = [v0 setNumberStyle:3];
  qword_1009676D8 = (uint64_t)v0;
  return result;
}

id sub_100673F98(void *a1, char a2)
{
  id v5 = sub_10008CC68(byte_1007737FE[a2]);
  if ([a1 isCompatibleWithUnit:v5])
  {
    [a1 doubleValueForUnit:v5];
    double v7 = v6;
    id result = [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
    if (result)
    {
      id v9 = result;
      double v10 = sub_1005F2D50(result, a2, v7);

      return *(id *)&v10;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    id v11 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    return 0;
  }
  return result;
}

id sub_1006740C4(void *a1)
{
  id result = [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
  if (*(double *)&result == 0.0)
  {
    __break(1u);
  }
  else
  {
    id v4 = result;
    id v5 = [result userDistanceHKUnitForDistanceType:1];

    id v6 = [self secondUnit];
    id v7 = [v5 unitDividedByUnit:v6];

    if ([a1 isCompatibleWithUnit:v7])
    {
      [a1 doubleValueForUnit:v7];
      double v9 = v8;

      *(double *)&id result = 1.0 / v9;
    }
    else
    {
      static os_log_type_t.error.getter();
      id v10 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      *(double *)&id result = 0.0;
    }
  }
  return result;
}

uint64_t sub_100674238(void *a1)
{
  uint64_t v2 = type metadata accessor for DateComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = COERCE_DOUBLE(sub_100673F98(a1, 7));
  uint64_t v7 = 0;
  if ((v8 & 1) == 0)
  {
    double v9 = v6;
    double v10 = COERCE_DOUBLE(sub_1006740C4(a1));
    if ((v11 & 1) == 0)
    {
      double v12 = v10;
      if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
      {
        id v14 = self;
        id v15 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v9];
        id v16 = [v14 stringWithNumber:v15 decimalPrecision:3 roundingMode:4];

        if (!v16) {
          return 0;
        }
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        if (qword_10094B0C8 != -1) {
          swift_once();
        }
        id v17 = (void *)qword_1009676C8;
        sub_100335168(v12);
        Class isa = DateComponents._bridgeToObjectiveC()().super.isa;
        id v19 = [v17 stringForObjectValue:isa];

        if (v19)
        {
          uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          return v7;
        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        swift_bridgeObjectRelease();
      }
    }
    return 0;
  }
  return v7;
}

uint64_t sub_1006744D0(void *a1, unsigned __int8 a2)
{
  if (((a2 - 3) & 0xFB) == 0)
  {
    uint64_t v24 = sub_100674238(a1);
    if (!v25) {
      goto LABEL_20;
    }
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
    {
      id v28 = sub_1000AAB04(a2, 0, 1.0);
      if (v29)
      {
        id v30 = v28;
        uint64_t v31 = v29;
        uint64_t v45 = v26;
        id v32 = [self mainBundle];
        NSString v33 = String._bridgeToObjectiveC()();
        id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1007509E0;
        *(void *)(v35 + 56) = &type metadata for String;
        *(void *)(v35 + 64) = sub_1000AA64C();
        *(void *)(v35 + 32) = v30;
        *(void *)(v35 + 40) = v31;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v26 = v45;
        swift_bridgeObjectRelease();
LABEL_14:
        sub_1000A06D0();
        uint64_t v36 = StringProtocol.localizedUppercase.getter();
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v39 = (void *)sub_1006758D8();
        uint64_t v2 = (uint64_t)sub_10052463C(v26, v27, v36, v38, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v2;
      }
    }
    else
    {
      sub_1000AAB04(a2, 0, 1.0);
      if (v42) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  id v4 = sub_100673F98(a1, a2);
  if (v5) {
    goto LABEL_20;
  }
  double v6 = *(double *)&v4;
  if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
  {
    id v7 = sub_1000AAB04(a2, 0, *(double *)&v4);
    if (v8)
    {
      id v9 = v7;
      uint64_t v10 = v8;
      id v11 = [self mainBundle];
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
      *(void *)(v14 + 56) = &type metadata for String;
      *(void *)(v14 + 64) = sub_1000AA64C();
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v10;
      uint64_t v2 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
LABEL_20:
    sub_10032B234();
    swift_allocError();
    *char v43 = 0;
    swift_willThrow();
    return v2;
  }
  id v40 = sub_1000AAB04(a2, 0, *(double *)&v4);
  if (!v41) {
    goto LABEL_20;
  }
  uint64_t v2 = (uint64_t)v40;
LABEL_7:
  id v15 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v6];
  id v16 = [self stringWithNumber:v15 decimalPrecision:qword_100773808[(char)a2] roundingMode:4];

  if (!v16)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  sub_1000A06D0();
  uint64_t v20 = StringProtocol.localizedUppercase.getter();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  id v23 = (void *)sub_1006758D8();
  uint64_t v2 = (uint64_t)sub_10052463C(v17, v19, v20, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v2;
}

id sub_100674990(unsigned __int8 a1)
{
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  if (((a1 - 3) & 0xFB) != 0)
  {
    if (a1 <= 8u && ((1 << a1) & 0x127) != 0)
    {
      id v9 = sub_1000AAB04(a1, 0, 1.0);
      if (v10) {
        goto LABEL_9;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      sub_10032B234();
      swift_allocError();
      *uint64_t v22 = 0;
      swift_willThrow();
      return v1;
    }
LABEL_11:
    sub_1000AAB04(a1, 0, 1.0);
    if (v21) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (a1 > 8u || ((1 << a1) & 0x127) == 0) {
    goto LABEL_11;
  }
  id v9 = sub_1000AAB04(a1, 0, 1.0);
  if (!v10) {
    goto LABEL_12;
  }
LABEL_9:
  id v11 = v9;
  uint64_t v12 = v10;
  id v13 = [v3 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1007509E0;
  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = sub_1000AA64C();
  *(void *)(v16 + 32) = v11;
  *(void *)(v16 + 40) = v12;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1000A06D0();
  uint64_t v17 = StringProtocol.localizedUppercase.getter();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1006758D8();
  id v1 = sub_10052463C(v24, v8, v17, v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_100674CF4(void *a1, char a2)
{
  id v3 = sub_100673F98(a1, a2);
  if (v4) {
    return 0;
  }
  double v5 = *(double *)&v3;
  sub_1000AAB04(a2, 0, *(double *)&v3);
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v5];
    id v9 = [self stringWithNumber:v8 decimalPrecision:qword_100773808[a2] roundingMode:4];

    if (v9)
    {
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      id v13 = [self mainBundle];
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10074E640;
      *(void *)(v16 + 56) = &type metadata for String;
      unint64_t v17 = sub_1000AA64C();
      *(void *)(v16 + 64) = v17;
      *(void *)(v16 + 32) = v10;
      *(void *)(v16 + 40) = v12;
      sub_1000A06D0();
      uint64_t v18 = StringProtocol.localizedUppercase.getter();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      *(void *)(v16 + 96) = &type metadata for String;
      *(void *)(v16 + 104) = v17;
      *(void *)(v16 + 72) = v18;
      *(void *)(v16 + 80) = v20;
      uint64_t v7 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

id sub_100674F18(void *a1)
{
  id v3 = [objc_allocWithZone((Class)FIUIWorkoutActivityType) initWithActivityTypeIdentifier:52 isIndoor:0];
  uint64_t v4 = sub_100674238(a1);
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    uint64_t v11 = v6;
    id v12 = [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) localizedSpeedUnitStringForActivityType:v3];
    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v14;
      uint64_t v29 = v13;

      uint64_t v31 = v9;
      id v27 = self;
      id v15 = [v27 mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_10074E640;
      *(void *)(v18 + 56) = &type metadata for String;
      unint64_t v19 = sub_1000AA64C();
      *(void *)(v18 + 32) = v10;
      *(void *)(v18 + 40) = v11;
      *(void *)(v18 + 96) = &type metadata for String;
      *(void *)(v18 + 104) = v19;
      *(void *)(v18 + 64) = v19;
      *(void *)(v18 + 72) = v29;
      *(void *)(v18 + 80) = v28;
      swift_bridgeObjectRetain();
      uint64_t v30 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v22 = [v27 mainBundle];
      NSString v23 = String._bridgeToObjectiveC()();
      id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_10074E640;
      swift_bridgeObjectRelease();
      *(void *)(v25 + 56) = &type metadata for String;
      *(void *)(v25 + 64) = v19;
      *(void *)(v25 + 32) = v31;
      *(void *)(v25 + 40) = v8;
      *(void *)(v25 + 96) = &type metadata for String;
      *(void *)(v25 + 104) = v19;
      *(void *)(v25 + 72) = v30;
      *(void *)(v25 + 80) = v21;
      id v12 = (id)static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    return 0;
  }
  return v12;
}

uint64_t sub_10067521C@<X0>(void *a1@<X0>, unsigned __int8 a2@<W1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  if (((a2 - 3) & 0xFB) == 0)
  {
    uint64_t v27 = sub_100674238(a1);
    if (!v28) {
      goto LABEL_22;
    }
    uint64_t v29 = v27;
    uint64_t v30 = v28;
    if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
    {
      id v31 = sub_1000AAB04(a2, 0, 1.0);
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v50 = a4;
        id v48 = v31;
        id v34 = [self mainBundle];
        uint64_t v35 = v29;
        NSString v36 = String._bridgeToObjectiveC()();
        unsigned __int8 v37 = a3;
        id v38 = [v34 localizedStringForKey:v36 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        a3 = v37;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1007509E0;
        *(void *)(v39 + 56) = &type metadata for String;
        *(void *)(v39 + 64) = sub_1000AA64C();
        *(void *)(v39 + 32) = v48;
        *(void *)(v39 + 40) = v33;
        uint64_t v29 = v35;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_14:
        sub_1000A06D0();
        uint64_t v40 = StringProtocol.localizedUppercase.getter();
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_1000AA800(a3);
        sub_1000A9F54(v29, v30, v40, v42, v43, 0, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      sub_1000AAB04(a2, 0, 1.0);
      if (v46)
      {
        uint64_t v50 = a4;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  id v7 = sub_100673F98(a1, a2);
  if ((v8 & 1) == 0)
  {
    double v9 = *(double *)&v7;
    if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
    {
      id v10 = sub_1000AAB04(a2, 0, *(double *)&v7);
      if (v11)
      {
        uint64_t v12 = v11;
        id v49 = v10;
        id v13 = [self mainBundle];
        unsigned __int8 v14 = a3;
        NSString v15 = String._bridgeToObjectiveC()();
        id v16 = [v13 localizedStringForKey:v15 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1007509E0;
        *(void *)(v17 + 56) = &type metadata for String;
        *(void *)(v17 + 64) = sub_1000AA64C();
        *(void *)(v17 + 32) = v49;
        *(void *)(v17 + 40) = v12;
        a3 = v14;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else
    {
      sub_1000AAB04(a2, 0, *(double *)&v7);
      if (v45)
      {
LABEL_7:
        id v18 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v9];
        id v19 = [self stringWithNumber:v18 decimalPrecision:qword_100773808[(char)a2] roundingMode:4];

        if (v19)
        {
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          sub_1000A06D0();
          uint64_t v23 = StringProtocol.localizedUppercase.getter();
          uint64_t v25 = v24;
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_1000AA800(a3);
          sub_1000A9F54(v20, v22, v23, v25, v26, 0, a4);
          swift_bridgeObjectRelease();
LABEL_15:
          swift_bridgeObjectRelease();
          return swift_release();
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  sub_10032B234();
  swift_allocError();
  *uint64_t v47 = 0;
  return swift_willThrow();
}

id sub_100675744()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsFormattingManager();
  return [super dealloc];
}

uint64_t sub_100675788(char a1)
{
  if (a1)
  {
    if (qword_10094B0D0 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_1009676D0;
    [(id)qword_1009676D0 setUnitStyle:3];
    id v6 = [self hours];
    id v3 = [v5 stringFromUnit:v6];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  return v4;
}

uint64_t sub_1006758D8()
{
  id v0 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 defaultFontForTextStyle:v1];

  if (v2)
  {
    [v2 pointSize];
    double v4 = v3;
    id v5 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle3];
    id v6 = [v0 systemFontOfSize:UIFontSystemFontDesignRounded weight:v4 design:UIFontWeightMedium];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v5 scaledFontForFont:v6];

      return (uint64_t)v8;
    }
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100675A64(uint64_t a1, uint64_t a2)
{
  double v4 = (double)a1 / (round((double)a2 * 100.0) / 100.0);
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (qword_10094B0D8 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_1009676D8;
  id v9 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v4];
  id v10 = [v8 stringFromNumber:v9];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v12;

    id v13 = self;
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
    id v15 = [v13 stringWithNumber:v14 decimalPrecision:1];

    if (v15)
    {
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      id v19 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
      id v20 = [v13 stringWithNumber:v19 decimalPrecision:1];

      if (v20)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;

        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1007509E0;
        *(void *)(v24 + 56) = &type metadata for String;
        *(void *)(v24 + 64) = sub_1000AA64C();
        *(void *)(v24 + 32) = v11;
        *(void *)(v24 + 40) = v31;
        uint64_t v25 = static String.localizedStringWithFormat(_:_:)();
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = (void *)sub_1006758D8();
        id v29 = sub_10052904C(v16, v18, v21, v23, v25, v27, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return (uint64_t)v29;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for TrendsFormattingManager.TextError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100675E9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsFormattingManager.TextError()
{
  return &type metadata for TrendsFormattingManager.TextError;
}

unint64_t sub_100675ED8()
{
  unint64_t result = qword_100967710;
  if (!qword_100967710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967710);
  }
  return result;
}

uint64_t sub_100675F2C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100675F50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.colorScheme.setter();
}

void sub_100676038(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v2)
  {
    id v4 = v2;
    sub_10044A0C8(a2);
  }
}

id sub_100676144(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController] = 0;
  __n128 v3 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  *(_OWORD *)__n128 v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling] = 0;
  id v4 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  uint64_t v5 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  v8.receiver = v1;
  v8.super_class = v5;
  [super initWithCoder:a1];

  return v6;
}

id sub_100676218()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDashboardCardCell();
  [super dealloc];
}

uint64_t sub_1006762BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1006762EC()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_100676314(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100676328(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v137 = a2;
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  id v122 = (uint64_t *)((char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v132 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for TrendListMetric();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (uint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10095FC38);
  __chkstk_darwin(v14 - 8);
  uint64_t v134 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for TrendsActionContext(0);
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v17 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v18 - 8);
  uint64_t v121 = (uint64_t)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for CatalogTipSection();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v116 = (uint64_t)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v21 - 8);
  v128 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for CatalogTipCard();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v118 = (uint64_t)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_10095FC40);
  __chkstk_darwin(v24 - 8);
  uint64_t v126 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext();
  uint64_t v123 = *(void *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  uint64_t v117 = (uint64_t)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v136 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v112 - v31;
  v156[3] = a4;
  v156[4] = a5;
  uint64_t v33 = sub_1000B1710(v156);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v33, a1, a4);
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController;
  uint64_t v35 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  if (!v35) {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
  }
  v138 = a3;
  id v115 = v17;
  uint64_t v114 = OnboardingNavigationView;
  NSString v36 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
  unsigned __int8 v37 = v35;
  v141 = v33;
  uint64_t v142 = a4;
  uint64_t v143 = a5;
  if (v36(a4, a5))
  {
    id v38 = *(void **)&v138[v34];
    if (v38)
    {
      uint64_t v39 = v143;
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v143 + 16);
      uint64_t v41 = v38;
      uint64_t v42 = (uint64_t)v141;
      uint64_t v43 = v142;
      uint64_t v44 = v40(v142, v39);
      uint64_t v46 = v45;
      int v48 = v47;
      sub_1000917F8(v44, v45, v47);
      if (v48 != 3 || v44 | v46) {
        sub_1004D7C80(v42, v41, v43, v39);
      }
    }
    else
    {
LABEL_50:
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
  }
  id v49 = &v138[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess();
  sub_1000AEF2C((uint64_t)v49, (uint64_t)&v144, &qword_10095F6E8);
  if (!*((void *)&v145 + 1))
  {
    sub_10008DB18((uint64_t)&v144, &qword_10095F6E8);
    goto LABEL_16;
  }
  sub_10008E75C((uint64_t)&v144, (uint64_t)&v153);
  sub_10008DB18((uint64_t)&v144, &qword_10095F6E8);
  uint64_t v50 = *(void *)(*sub_10007E4EC(&v153, *((uint64_t *)&v154 + 1))
                  + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
  uint64_t v140 = *(void *)(v50 + 16);
  if (!v140)
  {
LABEL_14:
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v153);
LABEL_16:
    uint64_t v58 = v143;
    uint64_t v59 = v142;
    goto LABEL_17;
  }
  id v113 = v37;
  uint64_t v51 = (void *)(v50 + 32);
  uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
  id v52 = (void (**)(char *, uint64_t))(v136 + 8);
  uint64_t v136 = v50;
  swift_bridgeObjectRetain();
  uint64_t v53 = 0;
  while (1)
  {
    uint64_t v54 = v51[3];
    uint64_t v55 = v51[4];
    sub_10007E4EC(v51, v54);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
    v139(v142, v143);
    char v56 = static UUID.== infix(_:_:)();
    id v57 = *v52;
    (*v52)(v30, v27);
    v57(v32, v27);
    if (v56) {
      break;
    }
    ++v53;
    v51 += 5;
    if (v140 == v53)
    {
      swift_bridgeObjectRelease();
      unsigned __int8 v37 = v113;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v153);
  uint64_t v59 = v142;
  uint64_t v58 = v143;
  sub_1006AA1EC((uint64_t)v141, v53, 0, v142, v143);
  unsigned __int8 v37 = v113;
LABEL_17:
  double v60 = *(uint64_t (**)(uint64_t, uint64_t))(v58 + 16);
  uint64_t v61 = v60(v59, v58);
  int v63 = v61;
  switch(v64)
  {
    case 1:
      sub_1000917F8(v61, v62, 1);
LABEL_20:
      sub_1000AEF2C(v137, (uint64_t)&v144, &qword_100955A00);
      if (!*((void *)&v145 + 1))
      {

        uint64_t v81 = &qword_100955A00;
        id v82 = &v144;
        goto LABEL_35;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_50;
      }
      id v71 = (id)v153;
      swift_retain();
      sub_100371DCC(v71, 1);

      swift_release();
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
    case 2:
LABEL_25:
      sub_1000AEF2C(v137, (uint64_t)&v144, &qword_100955A00);
      if (*((void *)&v145 + 1))
      {
        uint64_t v72 = (uint64_t)v134;
        uint64_t v73 = v135;
        int v74 = swift_dynamicCast();
        uint64_t v75 = v133;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v133 + 56))(v72, v74 ^ 1u, 1, v73);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v72, 1, v73) != 1)
        {
          uint64_t v76 = (uint64_t)v115;
          sub_100678AB8(v72, (uint64_t)v115, type metadata accessor for TrendsActionContext);
          uint64_t v77 = v132;
          sub_1000AEF2C(v76, v132, &qword_10095BFB0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v77, 1, v131) == 1)
          {
            sub_10008DB18(v77, &qword_10095BFB0);
            if (*(unsigned __int8 *)(v76 + *(int *)(v73 + 20) + 8) == 255)
            {
              sub_100097EF0(v76, type metadata accessor for TrendsActionContext);

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
            }
            uint64_t v78 = *(void **)(*(void *)&v37[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                           + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager);
            id v79 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
            id v80 = sub_10020AD40(v78);
            [v37 presentViewController:v80 animated:1 completion:0];
          }
          else
          {
            uint64_t v83 = v77;
            uint64_t v84 = v129;
            sub_100678AB8(v83, v129, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
            sub_1003FEA50(v84);

            sub_100097EF0(v84, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
          }
          id v85 = type metadata accessor for TrendsActionContext;
          goto LABEL_38;
        }
      }
      else
      {
        sub_10008DB18((uint64_t)&v144, &qword_100955A00);
        uint64_t v72 = (uint64_t)v134;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v134, 1, 1, v135);
      }

      uint64_t v81 = &qword_10095FC38;
LABEL_34:
      id v82 = (long long *)v72;
LABEL_35:
      sub_10008DB18((uint64_t)v82, v81);
      break;
    case 3:
      switch(v61)
      {
        case 1:
          if (qword_10094AA90 != -1) {
            swift_once();
          }
          uint64_t v86 = qword_100997DB0;
          swift_getKeyPath();
          *(void *)&long long v144 = v86;
          sub_100678A70((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(unsigned char *)(v86 + 16))
          {
            [v37 showLoad];
          }
          else
          {
            id v103 = v122;
            *id v122 = ASFriendListDisplayMode.id.getter;
            v103[1] = 0;
            v103[2] = 0;
            v103[3] = 0;
            *(void *)&long long v153 = _swiftEmptyArrayStorage;
            sub_1000AFA94((uint64_t *)&unk_10095F6C0);
            State.init(wrappedValue:)();
            uint64_t v104 = *((void *)&v144 + 1);
            v103[4] = v144;
            v103[5] = v104;
            LOBYTE(v153) = 0;
            State.init(wrappedValue:)();
            uint64_t v105 = *((void *)&v144 + 1);
            *((unsigned char *)v103 + 48) = v144;
            v103[7] = v105;
            LOBYTE(v153) = 0;
            State.init(wrappedValue:)();
            uint64_t v106 = *((void *)&v144 + 1);
            *((unsigned char *)v103 + 64) = v144;
            v103[9] = v106;
            id v107 = (void *)((char *)v103 + *(int *)(v114 + 36));
            *id v107 = swift_getKeyPath();
            sub_1000AFA94(&qword_10094DFC8);
            swift_storeEnumTagMultiPayload();
            id v108 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
            id v109 = (void *)UIHostingController.init(rootView:)();
            [v37 presentViewController:v109 animated:1 completion:0];
          }
          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
        case 2:
          sub_1000AEF2C(v137, (uint64_t)v151, &qword_100955A00);
          if (v152)
          {
            if (swift_dynamicCast())
            {
              if (*((void *)&v154 + 1))
              {
                long long v145 = v154;
                long long v144 = v153;
                uint64_t v87 = (uint64_t)v155;
                v146 = v155;
                uint64_t v88 = *((void *)&v154 + 1);
                uint64_t v89 = sub_10007E4EC(&v144, *((uint64_t *)&v154 + 1));
                sub_100401F74((uint64_t)v89, (uint64_t)v37, v88, v87);

                sub_100350CBC((uint64_t)&v144);
                return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
              }
            }
            else
            {
              v155 = 0;
              long long v153 = 0u;
              long long v154 = 0u;
            }
          }
          else
          {
            sub_10008DB18((uint64_t)v151, &qword_100955A00);
            long long v153 = 0u;
            long long v154 = 0u;
            v155 = 0;
          }

          uint64_t v81 = (uint64_t *)&unk_10095FC48;
          goto LABEL_67;
        case 3:
          sub_1000AEF2C(v137, (uint64_t)&v153, &qword_100955A00);
          if (*((void *)&v154 + 1))
          {
            if (swift_dynamicCast())
            {
              v90 = v146;
              sub_1003F8CFC(v146, v138, v147, v148, v149, v150, *(CGFloat *)&v144, *((CGFloat *)&v144 + 1), *(CGFloat *)&v145, *((CGFloat *)&v145 + 1));
              swift_release();
              swift_release();
            }
            goto LABEL_50;
          }

          uint64_t v81 = &qword_100955A00;
LABEL_67:
          id v82 = &v153;
          goto LABEL_35;
        case 4:
          goto LABEL_20;
        case 5:
          sub_1000AEF2C(v137, (uint64_t)&v144, &qword_100955A00);
          if (*((void *)&v145 + 1))
          {
            uint64_t v72 = (uint64_t)v126;
            uint64_t v92 = CardActionContext;
            int v93 = swift_dynamicCast();
            uint64_t v94 = v123;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56))(v72, v93 ^ 1u, 1, v92);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v72, 1, v92) != 1)
            {
              uint64_t v95 = v117;
              sub_100678AB8(v72, v117, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              sub_1003FBEB8(v95, v95 + *(int *)(v92 + 20));
              uint64_t v96 = CatalogLockup.identifier.getter();
              uint64_t v98 = v97;
              id v99 = objc_retain(*(id *)(*(void *)&v37[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                      + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
              sub_10064E14C(v96, v98);
              swift_bridgeObjectRelease();

              sub_100097EF0(v95, (uint64_t (*)(void))type metadata accessor for FitnessPlusUpNextCardActionContext);
              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
            }
          }
          else
          {
            sub_10008DB18((uint64_t)&v144, &qword_100955A00);
            uint64_t v72 = (uint64_t)v126;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56))(v126, 1, 1, CardActionContext);
          }

          uint64_t v81 = &qword_10095FC40;
          goto LABEL_34;
        case 6:
          sub_10008E75C((uint64_t)v156, (uint64_t)&v144);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v72 = (uint64_t)v128;
          uint64_t v100 = v127;
          char v101 = swift_dynamicCast();
          id v102 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
          if ((v101 & 1) == 0)
          {
            v102(v72, 1, 1, v100);

            uint64_t v81 = &qword_10094D198;
            goto LABEL_34;
          }
          v102(v72, 0, 1, v100);
          uint64_t v76 = v118;
          sub_100678AB8(v72, v118, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
          uint64_t v72 = v121;
          sub_1000AEF2C(v76 + *(int *)(v100 + 36), v121, (uint64_t *)&unk_100955650);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v72, 1, v120) == 1)
          {
            sub_100097EF0(v76, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

            uint64_t v81 = (uint64_t *)&unk_100955650;
            goto LABEL_34;
          }
          uint64_t v110 = v72;
          uint64_t v111 = v116;
          sub_100678AB8(v110, v116, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          sub_1003FDF70(v111);
          sub_1003FC8BC(v111);

          sub_100097EF0(v111, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
          id v85 = (uint64_t (*)(void))type metadata accessor for CatalogTipCard;
          break;
        case 7:
          goto LABEL_25;
        default:

          return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
      }
LABEL_38:
      sub_100097EF0(v76, v85);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
    default:
      uint64_t v65 = v60(v59, v58);
      uint64_t v67 = v66;
      char v69 = v68;
      int v70 = sub_10007CCD8(v65, v66, v68);
      sub_1000917F8(v65, v67, v69);
      sub_1003F7088(v63, v70, 1, 0, 256);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v156);
}

uint64_t sub_100677794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v123 = type metadata accessor for UUID();
  uint64_t v119 = *(void *)(v123 - 8);
  uint64_t v9 = __chkstk_darwin(v123);
  id v122 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v100 - v11;
  uint64_t OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView();
  __chkstk_darwin(OnboardingNavigationView);
  uint64_t v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10094D190);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for TrendsCard();
  uint64_t v114 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_100955650);
  __chkstk_darwin(v21 - 8);
  uint64_t v110 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for CatalogTipSection();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v106 = (uint64_t)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for URL();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  id v115 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_10094D198);
  __chkstk_darwin(v25 - 8);
  id v113 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for CatalogTipCard();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v107 = (uint64_t)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130[3] = a4;
  v130[4] = a5;
  uint64_t v28 = sub_1000B1710(v130);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v28, a1, a4);
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController;
  uint64_t v30 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v30)
  {
    uint64_t v105 = v20;
    uint64_t v104 = v18;
    id v103 = v15;
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
    uint64_t v32 = v30;
    uint64_t v124 = v28;
    uint64_t v125 = a4;
    if (v31(a4, a5))
    {
      uint64_t v33 = *(void **)(a3 + v29);
      if (v33)
      {
        uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
        uint64_t v35 = v33;
        uint64_t v36 = (uint64_t)v124;
        uint64_t v37 = v125;
        uint64_t v38 = v34(v125, a5);
        uint64_t v40 = v39;
        int v42 = v41;
        sub_1000917F8(v38, v39, v41);
        if (v42 != 3 || v38 | v40) {
          sub_1004D7C80(v36, v35, v37, a5);
        }
LABEL_7:
      }
      else
      {
      }
    }
    else
    {
      uint64_t v43 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess();
      sub_1000AEF2C(v43, (uint64_t)&v127, &qword_10095F6E8);
      if (v129)
      {
        uint64_t v121 = a5;
        sub_10008E75C((uint64_t)&v127, (uint64_t)v126);
        sub_10008DB18((uint64_t)&v127, &qword_10095F6E8);
        uint64_t v44 = *(void *)(*sub_10007E4EC(v126, v126[3])
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        uint64_t v45 = v125;
        uint64_t v120 = *(void *)(v44 + 16);
        if (v120)
        {
          uint64_t v101 = OnboardingNavigationView;
          id v102 = v32;
          uint64_t v46 = (void *)(v44 + 32);
          unsigned __int8 v47 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
          int v48 = (void (**)(char *, uint64_t))(v119 + 8);
          uint64_t v119 = v44;
          swift_bridgeObjectRetain();
          uint64_t v49 = 0;
          while (1)
          {
            uint64_t v50 = v46[3];
            uint64_t v51 = v46[4];
            sub_10007E4EC(v46, v50);
            id v52 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
            uint64_t v53 = v51;
            uint64_t v45 = v125;
            v52(v50, v53);
            uint64_t v54 = v122;
            v47(v45, v121);
            char v55 = static UUID.== infix(_:_:)();
            char v56 = *v48;
            id v57 = v54;
            uint64_t v58 = v123;
            (*v48)(v57, v123);
            v56(v12, v58);
            if (v55) {
              break;
            }
            ++v49;
            v46 += 5;
            if (v120 == v49)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = v102;
              uint64_t OnboardingNavigationView = v101;
              goto LABEL_14;
            }
          }
          swift_bridgeObjectRelease();
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v126);
          a5 = v121;
          sub_1006AA1EC((uint64_t)v124, v49, 1, v45, v121);
          uint64_t v32 = v102;
          uint64_t OnboardingNavigationView = v101;
        }
        else
        {
LABEL_14:
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v126);
          a5 = v121;
        }
      }
      else
      {
        sub_10008DB18((uint64_t)&v127, &qword_10095F6E8);
        uint64_t v45 = v125;
      }
      uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
      uint64_t v60 = v59(v45, a5);
      uint64_t v62 = (uint64_t)v105;
      switch(v63)
      {
        case 1:
          sub_1000917F8(v60, v61, 1);
LABEL_20:
          id v70 = (id)ASActivityAppLaunchURLForSharingFriendList();
          id v71 = v115;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          id v72 = [self sharedApplication];
          URL._bridgeToObjectiveC()(v73);
          uint64_t v75 = v74;
          sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_100678A70((unint64_t *)&qword_10094B970, type metadata accessor for OpenExternalURLOptionsKey);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v72 openURL:v75 options:isa completionHandler:0];

          (*(void (**)(char *, uint64_t))(v116 + 8))(v71, v118);
          break;
        case 2:
LABEL_23:
          sub_10008E75C((uint64_t)v130, (uint64_t)&v127);
          sub_1000AFA94(&qword_10094D218);
          uint64_t v78 = (uint64_t)v104;
          uint64_t v79 = v117;
          int v80 = swift_dynamicCast();
          uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56);
          if (v80)
          {
            v81(v78, 0, 1, v79);
            sub_100678AB8(v78, v62, (uint64_t (*)(void))type metadata accessor for TrendsCard);
            if (*(unsigned char *)(v62 + *(int *)(v79 + 36) + 8)) {
              [v32 showAllTrendsAnimated:1];
            }

            id v82 = type metadata accessor for TrendsCard;
            uint64_t v83 = v62;
            goto LABEL_27;
          }
          v81(v78, 1, 1, v79);

          uint64_t v84 = &qword_10094D190;
LABEL_30:
          sub_10008DB18(v78, v84);
          break;
        case 3:
          switch(v60)
          {
            case 1:
              if (qword_10094AA90 != -1) {
                swift_once();
              }
              uint64_t v85 = qword_100997DB0;
              swift_getKeyPath();
              uint64_t v127 = v85;
              sub_100678A70((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
              ObservationRegistrar.access<A, B>(_:keyPath:)();
              swift_release();
              if (*(unsigned char *)(v85 + 16))
              {
                [v32 showLoad];

                return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v130);
              }
              uint64_t v92 = v103;
              *id v103 = ASFriendListDisplayMode.id.getter;
              v92[1] = 0;
              v92[2] = 0;
              v92[3] = 0;
              v126[0] = _swiftEmptyArrayStorage;
              sub_1000AFA94((uint64_t *)&unk_10095F6C0);
              State.init(wrappedValue:)();
              uint64_t v93 = v128;
              v92[4] = v127;
              v92[5] = v93;
              LOBYTE(v126[0]) = 0;
              State.init(wrappedValue:)();
              uint64_t v94 = v128;
              *((unsigned char *)v92 + 48) = v127;
              v92[7] = v94;
              LOBYTE(v126[0]) = 0;
              State.init(wrappedValue:)();
              uint64_t v95 = v128;
              *((unsigned char *)v92 + 64) = v127;
              v92[9] = v95;
              uint64_t v96 = (void *)((char *)v92 + *(int *)(OnboardingNavigationView + 36));
              *uint64_t v96 = swift_getKeyPath();
              sub_1000AFA94(&qword_10094DFC8);
              swift_storeEnumTagMultiPayload();
              id v97 = objc_allocWithZone((Class)sub_1000AFA94((uint64_t *)&unk_10095F6D0));
              uint64_t v35 = (char *)UIHostingController.init(rootView:)();
              [v32 presentViewController:v35 animated:1 completion:0];
              goto LABEL_7;
            case 2:
              [v32 navigateToHistoryAnimated:1];

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v130);
            case 3:
              id v77 = [v32 navigateToTrophyCaseAnimated:1 initialAchievement:0 shouldShowCelebration:0 forModalPresentation:0];
              goto LABEL_37;
            case 4:
              goto LABEL_20;
            case 5:
              id v86 = objc_retain(*(id *)(*(void *)&v32[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                                      + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
              sub_10064D718();

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v130);
            case 6:
              sub_10008E75C((uint64_t)v130, (uint64_t)&v127);
              sub_1000AFA94(&qword_10094D218);
              uint64_t v78 = (uint64_t)v113;
              uint64_t v88 = v112;
              char v89 = swift_dynamicCast();
              v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
              if ((v89 & 1) == 0)
              {
                v90(v78, 1, 1, v88);

                uint64_t v84 = &qword_10094D198;
                goto LABEL_30;
              }
              v90(v78, 0, 1, v88);
              uint64_t v91 = v107;
              sub_100678AB8(v78, v107, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);
              uint64_t v78 = v110;
              sub_1000AEF2C(v91 + *(int *)(v88 + 36), v110, (uint64_t *)&unk_100955650);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v78, 1, v109) == 1)
              {
                sub_100097EF0(v91, (uint64_t (*)(void))type metadata accessor for CatalogTipCard);

                uint64_t v84 = (uint64_t *)&unk_100955650;
                goto LABEL_30;
              }
              uint64_t v98 = v78;
              uint64_t v99 = v106;
              sub_100678AB8(v98, v106, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              sub_1003FDF70(v99);
              sub_1003FC8BC(v99);

              sub_100097EF0(v99, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
              id v82 = type metadata accessor for CatalogTipCard;
              uint64_t v83 = v91;
              break;
            case 7:
              goto LABEL_23;
            default:
              id v77 = [v32 showTodayAndShareImmediately:0 animated:1 forGoalCompleteNotification:0 goalRecommendation:0];
LABEL_37:

              return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v130);
          }
LABEL_27:
          sub_100097EF0(v83, (uint64_t (*)(void))v82);
          break;
        default:
          uint64_t v64 = v59(v45, a5);
          uint64_t v66 = v65;
          char v68 = v67;
          int v69 = sub_10007CCD8(v64, v65, v67);
          sub_1000917F8(v64, v66, v68);
          sub_1003F68A8(v69, 0, 0x100u);

          break;
      }
    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v130);
}

uint64_t sub_100678674@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1006786A4()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1006786CC()
{
  return swift_deallocObject();
}

unint64_t sub_1006786E4()
{
  unint64_t result = qword_1009677C0;
  if (!qword_1009677C0)
  {
    sub_1000A1370(&qword_1009677B8);
    sub_100678784();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009677C0);
  }
  return result;
}

unint64_t sub_100678784()
{
  unint64_t result = qword_1009677C8;
  if (!qword_1009677C8)
  {
    sub_1000A1370(&qword_1009677D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009677C8);
  }
  return result;
}

uint64_t sub_100678800()
{
  return EnvironmentValues.colorScheme.getter();
}

unint64_t sub_10067882C()
{
  unint64_t result = qword_1009677E0;
  if (!qword_1009677E0)
  {
    sub_1000A1370(&qword_100967788);
    sub_1006788CC();
    sub_1000A132C(&qword_10095D4E0, &qword_10095D4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009677E0);
  }
  return result;
}

unint64_t sub_1006788CC()
{
  unint64_t result = qword_1009677E8;
  if (!qword_1009677E8)
  {
    sub_1000A1370(&qword_100967780);
    sub_10067896C();
    sub_1000A132C(&qword_1009677F8, &qword_1009677D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009677E8);
  }
  return result;
}

unint64_t sub_10067896C()
{
  unint64_t result = qword_1009677F0;
  if (!qword_1009677F0)
  {
    sub_1000A1370(&qword_100967778);
    sub_1000A1370(&qword_1009677B8);
    sub_1006786E4();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094E2F0, &qword_10094E2F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009677F0);
  }
  return result;
}

void sub_100678A44()
{
  sub_100676038(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_100678A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100678AB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_100678B24(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100678BF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  __n128 v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100678C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100678CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100678D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100678DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100678E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100678E58);
}

uint64_t sub_100678E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100678F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100678F3C);
}

uint64_t sub_100678F3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for VideoLooperRepresentable()
{
  uint64_t result = qword_100967858;
  if (!qword_100967858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100679044()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1006790D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, v2, v5);
  LOBYTE(a2) = *(unsigned char *)(v2 + *(int *)(a2 + 20));
  id v9 = objc_allocWithZone((Class)type metadata accessor for VideoLooperView());
  return sub_1006CA36C((uint64_t)v7, a2);
}

uint64_t sub_1006791B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100679330(&qword_100967898);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100679238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100679330(&qword_100967898);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1006792B8()
{
}

uint64_t sub_1006792FC()
{
  return sub_100679330(&qword_100967890);
}

uint64_t sub_100679330(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VideoLooperRepresentable();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100679374()
{
  unint64_t v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for TrendsScrubberFlagpoleView();
  [super layoutSubviews];
  id v2 = [v0 layer];
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    [v1 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    [v1 bounds];
    CGFloat v13 = CGRectGetWidth(v17) * 0.5;
    id v14 = [self bezierPathWithRoundedRect:v6 cornerRadius:v8 v10, v12, v13];
    id v15 = [v14 CGPath];

    [v4 setPath:v15];
  }
  else
  {

    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

id sub_1006796B4()
{
  return sub_10067A918(type metadata accessor for TrendsScrubberFlagpoleView);
}

uint64_t type metadata accessor for TrendsScrubberFlagpoleView()
{
  return self;
}

uint64_t sub_10067973C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  sub_10007E2D8(0, &qword_100953458);
  double v10 = v4;
  *(void *)&v4[v9] = sub_1005CA0D4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
  *(void *)&v10[v11] = sub_1005CA0D4();
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = 0;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  CGFloat v13 = self;
  *(void *)&v10[v12] = [v13 whiteColor];

  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for TrendsScrubberPlatterView();
  id v14 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  UIContentSizeCategory v15 = (UIContentSizeCategory)[v14 layer];
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    CGRect v17 = (void *)v16;
    id v18 = [*(id *)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] CGColor];
    [v17 setFillColor:v18];

    uint64_t v19 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
    uint64_t v20 = *(void **)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel];
    uint64_t v21 = self;
    UIContentSizeCategory v15 = UIContentSizeCategoryExtraExtraExtraLarge;
    id v22 = v20;
    id v23 = [v21 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    if (v23)
    {
      uint64_t v24 = v23;
      [v22 setFont:v23];

      id v25 = *(id *)&v14[v19];
      id v26 = [v13 blackColor];
      [v25 setTextColor:v26];

      LODWORD(v27) = 1148846080;
      [*(id *)&v14[v19] setContentCompressionResistancePriority:0 forAxis:v27];
      uint64_t v28 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
      id v29 = *(id *)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel];
      id v30 = [v21 _preferredFontForTextStyle:UIFontTextStyleTitle3 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
      if (v30)
      {
        uint64_t v31 = v30;
        [v29 setFont:v30];

        id v32 = *(id *)&v14[v28];
        id v33 = [v13 blackColor];
        [v32 setTextColor:v33];

        uint64_t v34 = *(void **)&v14[v28];
        LODWORD(v35) = 1148846080;
        [v34 setContentCompressionResistancePriority:0 forAxis:v35];
        [v14 addSubview:*(void *)&v14[v19]];
        [v14 addSubview:v34];
        sub_100679FB4();
        id v36 = [self defaultCenter];
        [v36 addObserver:v14 selector:"fontSizeChangedWithNote:" name:UIContentSizeCategoryDidChangeNotification object:0];

        return (uint64_t)v14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100679B98()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
  id v2 = self;
  id v3 = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!v3)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = v3;
  [v1 setFont:v3];

  double v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel);
  id v6 = [v2 _preferredFontForTextStyle:UIFontTextStyleTitle3 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!v6)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  double v7 = v6;
  [v5 setFont:v6];

  double v8 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint);
  if (!v8) {
    goto LABEL_6;
  }
  id v9 = v8;
  id v10 = [v1 font];
  if (!v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  [v10 _scaledValueForValue:6.0];
  double v13 = v12;

  [v9 setConstant:v13];
LABEL_6:
  id v14 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint);
  if (!v14) {
    goto LABEL_9;
  }
  id v15 = v14;
  id v16 = [v5 font];
  if (!v16)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  CGRect v17 = v16;
  [v16 _scaledValueForValue:-3.0];
  double v19 = v18;

  [v15 setConstant:v19];
LABEL_9:
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint);
  if (v20)
  {
    id v21 = v20;
    double v22 = 0.0;
    if ((FIUICurrentLanguageRequiresTallScript() & 1) == 0)
    {
      id v23 = [v1 font];
      if (!v23)
      {
LABEL_29:
        __break(1u);
        return;
      }
      uint64_t v24 = v23;
      [v23 _scaledValueForValue:-1.0];
      double v22 = v25;
    }
    [v21 setConstant:v22];
  }
  id v26 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint);
  if (v26)
  {
    id v27 = v26;
    id v28 = [v1 font];
    if (v28)
    {
      id v29 = v28;
      [v28 _scaledValueForValue:4.0];
      double v31 = v30;

      [v27 setConstant:v31];
      goto LABEL_17;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_17:
  id v32 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint);
  if (!v32) {
    return;
  }
  id v37 = v32;
  id v33 = [v1 font];
  if (!v33) {
    goto LABEL_28;
  }
  uint64_t v34 = v33;
  [v33 _scaledValueForValue:-4.0];
  double v36 = v35;

  [v37 setConstant:v36];
}

void sub_100679FB4()
{
  unint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel];
  id v3 = [v2 leadingAnchor];
  id v4 = [v1 leadingAnchor];
  id v5 = [v2 font];
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v6 = v5;
  [v5 _scaledValueForValue:4.0];
  double v8 = v7;

  id v9 = [v3 constraintEqualToAnchor:v4 constant:v8];
  id v10 = [v2 trailingAnchor];
  id v11 = [v1 trailingAnchor];
  id v12 = [v2 font];
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v13 = v12;
  uint64_t v65 = v9;
  [v12 _scaledValueForValue:-4.0];
  double v15 = v14;

  id v63 = [v10 constraintEqualToAnchor:v11 constant:v15];
  id v16 = [v2 topAnchor];
  id v17 = [v1 topAnchor];
  id v18 = [v2 font];
  if (!v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v19 = v18;
  [v18 _scaledValueForValue:6.0];
  double v21 = v20;

  id v62 = [v16 constraintEqualToAnchor:v17 constant:v21];
  int v22 = FIUICurrentLanguageRequiresTallScript();
  id v23 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel];
  id v24 = [v23 topAnchor];
  id v25 = [v2 bottomAnchor];
  id v26 = [v2 font];
  if (!v26)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  id v27 = v26;
  double v28 = -1.0;
  if (v22) {
    double v28 = 0.0;
  }
  [v26 _scaledValueForValue:v28];
  double v30 = v29;

  id v61 = [v24 constraintEqualToAnchor:v25 constant:v30];
  id v31 = [v23 leadingAnchor];
  id v32 = [v2 leadingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  id v34 = [v23 trailingAnchor];
  id v35 = [v2 trailingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  id v37 = [v23 bottomAnchor];
  id v38 = [v1 bottomAnchor];
  id v39 = [v23 font];
  if (!v39) {
    goto LABEL_15;
  }
  uint64_t v40 = v39;
  [v39 _scaledValueForValue:-3.0];
  double v42 = v41;

  id v43 = [v37 constraintEqualToAnchor:v38 constant:v42];
  id v60 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100754580;
  *(void *)(v44 + 32) = v65;
  *(void *)(v44 + 40) = v63;
  *(void *)(v44 + 48) = v62;
  *(void *)(v44 + 56) = v61;
  *(void *)(v44 + 64) = v33;
  *(void *)(v44 + 72) = v36;
  *(void *)(v44 + 80) = v43;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v45 = v65;
  id v66 = v63;
  id v46 = v62;
  id v47 = v61;
  id v48 = v33;
  id v49 = v36;
  id v50 = v43;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v60 activateConstraints:isa];

  id v52 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = v46;
  id v53 = v46;

  uint64_t v54 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = v50;
  id v55 = v50;

  char v56 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = v47;
  id v57 = v47;

  uint64_t v58 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = v45;
  id v59 = v45;

  id v64 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = v66;
}

uint64_t sub_10067A570(void *a1)
{
  id v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  sub_10007E2D8(0, &qword_100953458);
  id v4 = v1;
  *(void *)&v1[v3] = sub_1005CA0D4();
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
  *(void *)&v4[v5] = sub_1005CA0D4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = 0;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = 0;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = 0;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = 0;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = 0;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  id v12 = [self whiteColor];

  *(void *)&v4[v11] = v12;
  double v13 = *(void **)&v4[v11];

  type metadata accessor for TrendsScrubberPlatterView();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10067A704()
{
  unint64_t v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for TrendsScrubberPlatterView();
  [super layoutSubviews];
  id v2 = [v0 layer];
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = [v1 layer];
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      [v6 bounds];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;

      id v15 = [self bezierPathWithRoundedRect:v8 cornerRadius:v10 v12, v14, 8.0];
      id v16 = [v15 CGPath];

      [v4 setPath:v16];
      return;
    }
  }
  else
  {
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10067A900()
{
  return sub_10067A918(type metadata accessor for TrendsScrubberPlatterView);
}

id sub_10067A918(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for TrendsScrubberPlatterView()
{
  return self;
}

char *sub_10067AA24(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  id v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    double v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    double v7 = a1;
    double v8 = a2[1];
    double v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    double v10 = a2[3];
    double v11 = a2[4];
    *((void *)a1 + 3) = v10;
    *((void *)a1 + 4) = v11;
    uint64_t v12 = *(int *)(a3 + 44);
    id v31 = &a1[v12];
    double v29 = a2[6];
    uint64_t v30 = (uint64_t)a2 + v12;
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v29;
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    double v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 16);
    double v14 = v4;
    id v15 = v8;
    id v16 = v9;
    objc_super v17 = v10;
    id v18 = v11;
    swift_retain();
    double v19 = v29;
    v28(v31, v30, DataType);
    uint64_t v20 = *(int *)(v5 + 48);
    uint64_t v21 = *(int *)(v5 + 52);
    int v22 = *(char **)((char *)a2 + v20);
    *(void *)&v7[v20] = v22;
    id v23 = &v7[v21];
    uint64_t v24 = (uint64_t)a2 + v21;
    id v25 = *(char **)((char *)a2 + v21);
    LOBYTE(v5) = *(unsigned char *)(v24 + 8);
    id v26 = v22;
    sub_1001AEDAC(v25, v5);
    *(void *)id v23 = v25;
    v23[8] = v5;
  }
  return v7;
}

void sub_10067AB90(id *a1, int *a2)
{
  swift_release();
  id v4 = (char *)a1 + a2[11];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v4, DataType);

  uint64_t v6 = (char *)a1 + a2[13];
  double v7 = *(void **)v6;
  char v8 = v6[8];

  sub_1001AEDC8(v7, v8);
}

void *sub_10067AC60(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  char v8 = *(void **)(a2 + 16);
  double v7 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v7;
  double v10 = *(void **)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  a1[4] = v10;
  a1[5] = v9;
  double v11 = *(void **)(a2 + 48);
  uint64_t v12 = a3[11];
  uint64_t v30 = (char *)a1 + v12;
  uint64_t v29 = a2 + v12;
  a1[6] = v11;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  double v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 16);
  id v14 = v5;
  id v15 = v6;
  id v16 = v8;
  id v17 = v7;
  id v18 = v10;
  swift_retain();
  id v19 = v11;
  v28(v30, v29, DataType);
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  int v22 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v22;
  id v23 = (char *)a1 + v21;
  uint64_t v24 = a2 + v21;
  id v25 = *(void **)(a2 + v21);
  LOBYTE(v11) = *(unsigned char *)(v24 + 8);
  id v26 = v22;
  sub_1001AEDAC(v25, (char)v11);
  *(void *)id v23 = v25;
  v23[8] = (char)v11;
  return a1;
}

uint64_t sub_10067AD7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  double v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  double v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  double v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  id v18 = *(void **)(a2 + 32);
  id v19 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v18;
  id v20 = v18;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v21 = *(void **)(a1 + 48);
  int v22 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v22;
  id v23 = v22;

  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 24))(v25, v26, DataType);
  uint64_t v28 = a3[12];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  id v35 = *(id *)v34;
  LOBYTE(a3) = *(unsigned char *)(v34 + 8);
  sub_1001AEDAC(*(id *)v34, (char)a3);
  id v36 = *(void **)v33;
  char v37 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = (_BYTE)a3;
  sub_1001AEDC8(v36, v37);
  return a1;
}

uint64_t sub_10067AEDC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[11];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 32))(v8, v9, DataType);
  uint64_t v11 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_10067AF9C(uint64_t a1, void *a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  double v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = a2[4];

  *(void *)(a1 + 40) = a2[5];
  swift_release();
  uint64_t v11 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = a2[6];

  uint64_t v12 = a3[11];
  uint64_t v13 = a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(DataType - 8) + 40))(v13, v14, DataType);
  uint64_t v16 = a3[12];
  id v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v18;
  id v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = v20[8];
  int v22 = *(void **)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_1001AEDC8(v22, v23);
  return a1;
}

uint64_t sub_10067B0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067B0E0);
}

uint64_t sub_10067B0E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 48);
    uint64_t v10 = DataType;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10067B190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067B1A4);
}

void *sub_10067B1A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 56);
    uint64_t v9 = DataType;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LoadItemsList()
{
  uint64_t result = qword_100967998;
  if (!qword_100967998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10067B298()
{
  uint64_t result = type metadata accessor for TrainingLoadDataType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10067B360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10067B37C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_10007E4EC(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_10067B3D4()
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v2 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(ItemsList + 44), DataType);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, DataType);
  if (v6 == enum case for TrainingLoadDataType.workoutType(_:))
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, DataType);
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1007509E0;
    id v11 = (id)FILocalizedNameForIndoorAgnosticActivityType();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      *(void *)(v10 + 56) = &type metadata for String;
      *(void *)(v10 + 64) = sub_1000AA64C();
      *(void *)(v10 + 32) = v13;
      *(void *)(v10 + 40) = v15;
      uint64_t v16 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      return v16;
    }
    __break(1u);
  }
  else if (v6 == enum case for TrainingLoadDataType.allDay(_:) || v6 == enum case for TrainingLoadDataType.workout(_:))
  {
    id v17 = [self mainBundle];
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v16;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10067B780()
{
  uint64_t v1 = v0;
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  __chkstk_darwin(ItemsList);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v6 = *(void *)(DataType - 8);
  __n128 v7 = __chkstk_darwin(DataType);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v6 + 104))(v9, enum case for TrainingLoadDataType.allDay(_:), DataType, v7);
  char v10 = static TrainingLoadDataType.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, DataType);
  if (v10)
  {
    char v11 = 0;
  }
  else
  {
    uint64_t v12 = v1 + *(int *)(ItemsList + 52);
    id v13 = *(id *)v12;
    char v14 = *(unsigned char *)(v12 + 8);
    sub_1001AEDAC(*(id *)v12, v14);
    uint64_t v15 = sub_1004E75C0(v13, v14);
    sub_1001AEDC8(v13, v14);
    swift_getKeyPath();
    int v22 = v15;
    sub_100085980(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    LOBYTE(v13) = v15[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__isFetchingWorkouts];

    sub_10068116C(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
    if (v13)
    {
      char v11 = 1;
    }
    else
    {
      uint64_t v16 = &v4[*(int *)(ItemsList + 52)];
      id v17 = *(id *)v16;
      char v18 = v16[8];
      sub_1001AEDAC(*(id *)v16, v18);
      id v19 = sub_1004E75C0(v17, v18);
      sub_1001AEDC8(v17, v18);
      swift_getKeyPath();
      int v22 = v19;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      LOBYTE(v17) = v19[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutEffortCacheIsPopulated];

      char v11 = v17 ^ 1;
    }
    sub_1006811D4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  }
  return v11 & 1;
}

uint64_t sub_10067BA70()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094F410);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + *(int *)(type metadata accessor for LoadItemsList() + 52);
  id v6 = *(id *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  sub_1001AEDAC(*(id *)v5, v7);
  uint64_t v8 = (char *)sub_1004E75C0(v6, v7);
  sub_1001AEDC8(v6, v7);
  swift_getKeyPath();
  v19[1] = v8;
  sub_100085980(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek];
  swift_bridgeObjectRetain();

  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = *(int *)(v1 + 48);
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v13 = *(void *)(v2 + 72);
    while (1)
    {
      sub_1000AEF2C(v12, (uint64_t)v4, &qword_10094F410);
      uint64_t v15 = *(void **)&v4[v11];
      if (v15)
      {
        unsigned int v16 = [*(id *)&v4[v11] paused];

        if (v16) {
          break;
        }
      }
      uint64_t v14 = type metadata accessor for DayIndex();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
      v12 += v13;
      if (!--v10) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for DayIndex();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v4, v17);
    return 1;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_10067BCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v259 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100967AA0);
  v249 = *(char **)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_1000AFA94(&qword_100967AA8);
  __chkstk_darwin(v258);
  char v7 = (char *)v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = sub_1000AFA94(&qword_100967A78);
  __chkstk_darwin(v254);
  uint64_t v241 = (uint64_t)v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v238);
  v240 = (char *)v195 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = type metadata accessor for PlainButtonStyle();
  uint64_t v230 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  v229 = (char *)v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_1000AFA94(&qword_100967AB0);
  uint64_t v219 = *(void *)(v221 - 8);
  __chkstk_darwin(v221);
  v218 = (char *)v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_1000AFA94(&qword_100967AB8);
  __chkstk_darwin(v217);
  v220 = (char *)v195 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1000AFA94(&qword_100967AC0);
  __chkstk_darwin(v222);
  uint64_t v223 = (uint64_t)v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = sub_1000AFA94(&qword_10095FFD8);
  uint64_t v226 = *(void *)(v227 - 8);
  __chkstk_darwin(v227);
  v224 = (char *)v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10095FFE0);
  __chkstk_darwin(v15 - 8);
  uint64_t v228 = (uint64_t)v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_1000AFA94(&qword_100967AC8);
  __chkstk_darwin(v225);
  uint64_t v231 = (uint64_t)v195 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1000AFA94(&qword_100967AD0);
  __chkstk_darwin(v234);
  v233 = (char *)v195 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_1000AFA94(&qword_100967AD8);
  uint64_t v237 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  v235 = (char *)v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v236 = (char *)v195 - v21;
  uint64_t v212 = sub_1000AFA94(&qword_100967AE0);
  uint64_t v200 = *(void *)(v212 - 8);
  __chkstk_darwin(v212);
  v199 = (char *)v195 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_1000AFA94(&qword_100967AE8);
  __chkstk_darwin(v209);
  uint64_t v210 = (uint64_t)v195 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = sub_1000AFA94(&qword_100967AF0);
  __chkstk_darwin(v252);
  uint64_t v253 = (uint64_t)v195 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_1000AFA94(&qword_100967A68);
  __chkstk_darwin(v216);
  uint64_t v206 = (uint64_t)v195 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  uint64_t v247 = *(void *)(ItemsList - 8);
  __chkstk_darwin(ItemsList);
  uint64_t v255 = v27;
  uint64_t v248 = (uint64_t)v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_1000AFA94(&qword_100967AF8);
  uint64_t v204 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  v202 = (char *)v195 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v203 = (char *)v195 - v30;
  uint64_t v198 = sub_1000AFA94(&qword_100967B00);
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v196 = (uint64_t)v195 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_100967B08);
  __chkstk_darwin(v32 - 8);
  uint64_t v201 = (uint64_t)v195 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v246 = (uint64_t)v195 - v35;
  uint64_t v211 = sub_1000AFA94(&qword_100967B10);
  __chkstk_darwin(v211);
  uint64_t v213 = (uint64_t)v195 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_1000AFA94(&qword_100961D90);
  uint64_t v243 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  v242 = (char *)v195 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_1000AFA94(&qword_100967A58);
  __chkstk_darwin(v257);
  v208 = (char *)v195 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v245 = (uint64_t)v195 - v40;
  uint64_t v251 = sub_1000AFA94(&qword_100967A48);
  __chkstk_darwin(v251);
  v214 = (char *)v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000AFA94(&qword_100967B18);
  __chkstk_darwin(v42 - 8);
  uint64_t v215 = (uint64_t)v195 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v256 = (uint64_t)v195 - v45;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v47 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  id v49 = (char *)v195 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000AFA94(&qword_100967A38);
  __chkstk_darwin(v50);
  v250 = (char *)v195 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10067B780())
  {
    v260 = 0;
    LOBYTE(v261) = 1;
    static VerticalEdge.Set.all.getter();
    View.listRowSeparator(_:edges:)();
    id v52 = v249;
    (*((void (**)(char *, char *, uint64_t))v249 + 2))(v7, v5, v3);
    swift_storeEnumTagMultiPayload();
    sub_10067FF2C();
    v260 = &type metadata for Spacer;
    v261 = &protocol witness table for Spacer;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*((uint64_t (**)(char *, uint64_t))v52 + 1))(v5, v3);
  }
  else
  {
    v195[1] = v50;
    v249 = v7;
    uint64_t v207 = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v49, a1 + *(int *)(ItemsList + 44), DataType);
    int v54 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v49, DataType);
    int v55 = enum case for TrainingLoadDataType.allDay(_:);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, DataType);
    uint64_t v56 = a1 + *(int *)(ItemsList + 52);
    id v57 = *(id *)v56;
    char v58 = *(unsigned char *)(v56 + 8);
    sub_1001AEDAC(*(id *)v56, v58);
    id v59 = (char *)sub_1004E75C0(v57, v58);
    sub_1001AEDC8(v57, v58);
    uint64_t v60 = a1;
    if (v54 == v55)
    {
      swift_getKeyPath();
      v260 = v59;
      sub_100085980(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      unint64_t v61 = *(void *)&v59[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries];
      swift_bridgeObjectRetain();

      uint64_t v62 = v257;
      if (v61 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v63 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v63)
      {
        if (sub_10067BA70())
        {
          LocalizedStringKey.init(stringLiteral:)();
          uint64_t v64 = Text.init(_:tableName:bundle:comment:)();
          uint64_t v66 = (uint64_t)v65;
          v260 = (void *)v64;
          v261 = v65;
          uint64_t v67 = v60;
          char v69 = v68 & 1;
          char v262 = v68 & 1;
          uint64_t v263 = v70;
          static VerticalEdge.Set.all.getter();
          id v71 = v242;
          View.listRowSeparator(_:edges:)();
          char v72 = v69;
          uint64_t v60 = v67;
          sub_1000A06C0(v64, v66, v72);
          swift_bridgeObjectRelease();
          uint64_t v73 = v243;
          uint64_t v74 = v245;
          uint64_t v75 = v244;
          (*(void (**)(uint64_t, char *, uint64_t))(v243 + 16))(v245, v71, v244);
          uint64_t v76 = v74 + *(int *)(v62 + 36);
          *(_OWORD *)uint64_t v76 = xmmword_100773B60;
          *(_OWORD *)(v76 + 16) = xmmword_100773B60;
          *(unsigned char *)(v76 + 32) = 0;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v75);
          LODWORD(v75) = static HierarchicalShapeStyle.secondary.getter();
          uint64_t v77 = v196;
          sub_1000AEF2C(v74, v196, &qword_100967A58);
          uint64_t v78 = v198;
          *(_DWORD *)(v77 + *(int *)(v198 + 36)) = v75;
          sub_10008DB18(v74, &qword_100967A58);
          uint64_t v79 = v246;
          sub_1000AEEC8(v77, v246, &qword_100967B00);
          uint64_t v80 = 0;
          uint64_t v81 = v247;
        }
        else
        {
          uint64_t v80 = 1;
          uint64_t v81 = v247;
          uint64_t v79 = v246;
          uint64_t v78 = v198;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v197 + 56))(v79, v80, 1, v78);
        uint64_t v177 = v79;
        id v178 = *(id *)v56;
        char v179 = *(unsigned char *)(v56 + 8);
        sub_1001AEDAC(*(id *)v56, v179);
        v180 = (char *)sub_1004E75C0(v178, v179);
        sub_1001AEDC8(v178, v179);
        swift_getKeyPath();
        v260 = v180;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        v181 = *(void **)&v180[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek];
        swift_bridgeObjectRetain();

        v260 = v181;
        swift_getKeyPath();
        uint64_t v182 = v248;
        sub_10068116C(v60, v248, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
        unint64_t v183 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        uint64_t v184 = swift_allocObject();
        sub_1006801B8(v182, v184 + v183);
        uint64_t v185 = swift_allocObject();
        *(void *)(v185 + 16) = sub_100680B10;
        *(void *)(v185 + 24) = v184;
        sub_1000AFA94(&qword_100967BD8);
        sub_1000AFA94(&qword_100967BE0);
        sub_1000A132C(&qword_100967BE8, &qword_100967BD8);
        sub_100085980(&qword_100967BF0, (void (*)(uint64_t))&type metadata accessor for DayIndex);
        sub_100680C24();
        v186 = v203;
        ForEach<>.init(_:id:content:)();
        uint64_t v187 = v201;
        sub_1000AEF2C(v177, v201, &qword_100967B08);
        uint64_t v188 = v204;
        v189 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
        v190 = v202;
        uint64_t v191 = v205;
        v189(v202, v186, v205);
        uint64_t v192 = v206;
        sub_1000AEF2C(v187, v206, &qword_100967B08);
        uint64_t v193 = sub_1000AFA94(&qword_100967C40);
        v189((char *)(v192 + *(int *)(v193 + 48)), v190, v191);
        v194 = *(void (**)(char *, uint64_t))(v188 + 8);
        v194(v190, v191);
        sub_10008DB18(v187, &qword_100967B08);
        sub_1000AEF2C(v192, v213, &qword_100967A68);
        swift_storeEnumTagMultiPayload();
        sub_10068006C();
        sub_1000A132C(&qword_100967A60, &qword_100967A68);
        uint64_t v112 = (uint64_t)v214;
        _ConditionalContent<>.init(storage:)();
        sub_10008DB18(v192, &qword_100967A68);
        v194(v186, v191);
        sub_10008DB18(v246, &qword_100967B08);
      }
      else
      {
        v260 = (void *)sub_10067B3D4();
        v261 = v98;
        sub_1000A06D0();
        uint64_t v99 = Text.init<A>(_:)();
        uint64_t v101 = (uint64_t)v100;
        v260 = (void *)v99;
        v261 = v100;
        char v103 = v102 & 1;
        char v262 = v102 & 1;
        uint64_t v263 = v104;
        static VerticalEdge.Set.all.getter();
        uint64_t v105 = v242;
        View.listRowSeparator(_:edges:)();
        sub_1000A06C0(v99, v101, v103);
        swift_bridgeObjectRelease();
        uint64_t v106 = v243;
        uint64_t v107 = v208;
        uint64_t v108 = v244;
        (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v208, v105, v244);
        uint64_t v109 = &v107[*(int *)(v62 + 36)];
        *(_OWORD *)uint64_t v109 = xmmword_100773B60;
        *((_OWORD *)v109 + 1) = xmmword_100773B60;
        v109[32] = 0;
        (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v108);
        uint64_t v110 = (uint64_t)v107;
        uint64_t v111 = v245;
        sub_1000AEEC8(v110, v245, &qword_100967A58);
        sub_1000AEF2C(v111, v213, &qword_100967A58);
        swift_storeEnumTagMultiPayload();
        sub_10068006C();
        sub_1000A132C(&qword_100967A60, &qword_100967A68);
        uint64_t v112 = (uint64_t)v214;
        _ConditionalContent<>.init(storage:)();
        sub_10008DB18(v111, &qword_100967A58);
      }
      sub_1000AEF2C(v112, v253, &qword_100967A48);
      swift_storeEnumTagMultiPayload();
      sub_10067FFCC();
      sub_1000A132C(&qword_100967A70, &qword_100967A78);
      uint64_t v175 = (uint64_t)v250;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v112, &qword_100967A48);
      uint64_t v176 = (uint64_t)v249;
    }
    else
    {
      swift_getKeyPath();
      v260 = v59;
      sub_100085980(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v82 = *(void *)&v59[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek];
      swift_bridgeObjectRetain();

      uint64_t v83 = *(void *)(v82 + 16);
      swift_bridgeObjectRelease();
      uint64_t v84 = v257;
      if (v83)
      {
        id v85 = *(id *)v56;
        char v86 = *(unsigned char *)(v56 + 8);
        sub_1001AEDAC(*(id *)v56, v86);
        uint64_t v87 = (char *)sub_1004E75C0(v85, v86);
        sub_1001AEDC8(v85, v86);
        swift_getKeyPath();
        v260 = v87;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v88 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek];
        swift_bridgeObjectRetain();

        v260 = v88;
        swift_getKeyPath();
        uint64_t v89 = v248;
        sub_10068116C(v60, v248, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
        uint64_t v90 = v247;
        unint64_t v91 = (*(unsigned __int8 *)(v247 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80);
        uint64_t v92 = swift_allocObject();
        sub_1006801B8(v89, v92 + v91);
        sub_1000AFA94(&qword_10094E840);
        sub_1000AFA94(&qword_100967B20);
        sub_1000A132C(&qword_100967B28, &qword_10094E840);
        sub_100085980((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
        sub_10068029C();
        uint64_t v93 = v60;
        uint64_t v94 = v199;
        ForEach<>.init(_:id:content:)();
        uint64_t v95 = v200;
        uint64_t v96 = v212;
        (*(void (**)(uint64_t, char *, uint64_t))(v200 + 16))(v210, v94, v212);
        swift_storeEnumTagMultiPayload();
        sub_10068006C();
        sub_10068055C();
        _ConditionalContent<>.init(storage:)();
        id v97 = v94;
        uint64_t v60 = v93;
        (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v96);
      }
      else
      {
        v260 = (void *)sub_10067B3D4();
        v261 = v113;
        sub_1000A06D0();
        uint64_t v114 = Text.init<A>(_:)();
        uint64_t v116 = (uint64_t)v115;
        v260 = (void *)v114;
        v261 = v115;
        char v118 = v117 & 1;
        char v262 = v117 & 1;
        uint64_t v263 = v119;
        static VerticalEdge.Set.all.getter();
        uint64_t v120 = v242;
        View.listRowSeparator(_:edges:)();
        sub_1000A06C0(v114, v116, v118);
        swift_bridgeObjectRelease();
        uint64_t v121 = v243;
        id v122 = v208;
        uint64_t v123 = v244;
        (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v208, v120, v244);
        uint64_t v124 = &v122[*(int *)(v84 + 36)];
        *(_OWORD *)uint64_t v124 = xmmword_100773B60;
        *((_OWORD *)v124 + 1) = xmmword_100773B60;
        v124[32] = 0;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v123);
        uint64_t v125 = (uint64_t)v122;
        uint64_t v126 = v245;
        sub_1000AEEC8(v125, v245, &qword_100967A58);
        sub_1000AEF2C(v126, v210, &qword_100967A58);
        swift_storeEnumTagMultiPayload();
        sub_10068006C();
        sub_10068055C();
        _ConditionalContent<>.init(storage:)();
        sub_10008DB18(v126, &qword_100967A58);
        uint64_t v89 = v248;
        uint64_t v90 = v247;
      }
      sub_10068116C(v60, v89, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
      unint64_t v127 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      uint64_t v128 = swift_allocObject();
      sub_1006801B8(v89, v128 + v127);
      sub_1000AFA94(&qword_100967B70);
      sub_10068063C();
      uint64_t v129 = v218;
      Button.init(action:label:)();
      uint64_t v130 = v219;
      uint64_t v131 = (uint64_t)v220;
      uint64_t v132 = v221;
      (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v220, v129, v221);
      uint64_t v133 = v131 + *(int *)(v217 + 36);
      *(_OWORD *)uint64_t v133 = xmmword_100773B70;
      *(_OWORD *)(v133 + 16) = xmmword_100773B80;
      *(unsigned char *)(v133 + 32) = 0;
      (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v132);
      LOBYTE(v132) = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v135 = v134;
      uint64_t v137 = v136;
      uint64_t v139 = v138;
      uint64_t v141 = v140;
      uint64_t v142 = v223;
      sub_1000AEF2C(v131, v223, &qword_100967AB8);
      uint64_t v143 = v142 + *(int *)(v222 + 36);
      *(unsigned char *)uint64_t v143 = v132;
      *(void *)(v143 + 8) = v135;
      *(void *)(v143 + 16) = v137;
      *(void *)(v143 + 24) = v139;
      *(void *)(v143 + 32) = v141;
      *(unsigned char *)(v143 + 40) = 0;
      sub_10008DB18(v131, &qword_100967AB8);
      long long v144 = v229;
      PlainButtonStyle.init()();
      sub_10068077C();
      sub_100085980(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      long long v145 = v224;
      uint64_t v146 = v232;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v230 + 8))(v144, v146);
      sub_10008DB18(v142, &qword_100967AC0);
      uint64_t v147 = static Alignment.center.getter();
      uint64_t v148 = v228;
      double v150 = sub_1004DE8C0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v228, 0.0, 1, 0.0, 1, v147, v149);
      (*(void (**)(char *, uint64_t, double))(v226 + 8))(v145, v227, v150);
      id v151 = sub_10005DB50();
      uint64_t v152 = Color.init(uiColor:)();
      LOBYTE(v130) = static Edge.Set.all.getter();
      uint64_t v153 = v231;
      sub_1000AEF2C(v148, v231, &qword_10095FFE0);
      uint64_t v154 = v153 + *(int *)(v225 + 36);
      *(void *)uint64_t v154 = v152;
      *(unsigned char *)(v154 + 8) = v130;
      sub_10008DB18(v148, &qword_10095FFE0);
      v155 = v240;
      v156 = &v240[*(int *)(v238 + 20)];
      uint64_t v157 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v158 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v158 - 8) + 104))(v156, v157, v158);
      __asm { FMOV            V0.2D, #14.0 }
      _OWORD *v155 = _Q0;
      uint64_t v164 = (uint64_t)v233;
      uint64_t v165 = (uint64_t)&v233[*(int *)(v234 + 36)];
      sub_10068116C((uint64_t)v155, v165, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v165 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
      sub_1000AEF2C(v153, v164, &qword_100967AC8);
      sub_1006811D4((uint64_t)v155, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      sub_10008DB18(v153, &qword_100967AC8);
      static VerticalEdge.Set.all.getter();
      sub_1006808BC();
      v166 = v235;
      View.listRowSeparator(_:edges:)();
      sub_10008DB18(v164, &qword_100967AD0);
      uint64_t v167 = v237;
      v168 = v236;
      uint64_t v169 = v239;
      (*(void (**)(char *, char *, uint64_t))(v237 + 32))(v236, v166, v239);
      uint64_t v170 = v215;
      sub_1000AEF2C(v256, v215, &qword_100967B18);
      v171 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
      v171(v166, v168, v169);
      uint64_t v172 = v241;
      sub_1000AEF2C(v170, v241, &qword_100967B18);
      uint64_t v173 = sub_1000AFA94(&qword_100967BD0);
      v171((char *)(v172 + *(int *)(v173 + 48)), v166, v169);
      v174 = *(void (**)(char *, uint64_t))(v167 + 8);
      v174(v166, v169);
      sub_10008DB18(v170, &qword_100967B18);
      sub_1000AEF2C(v172, v253, &qword_100967A78);
      swift_storeEnumTagMultiPayload();
      sub_10067FFCC();
      sub_1000A132C(&qword_100967A70, &qword_100967A78);
      uint64_t v175 = (uint64_t)v250;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v172, &qword_100967A78);
      v174(v168, v169);
      sub_10008DB18(v256, &qword_100967B18);
      uint64_t v176 = (uint64_t)v249;
    }
    sub_1000AEF2C(v175, v176, &qword_100967A38);
    swift_storeEnumTagMultiPayload();
    sub_10067FF2C();
    v260 = &type metadata for Spacer;
    v261 = &protocol witness table for Spacer;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v175, &qword_100967A38);
  }
}

uint64_t sub_10067DE90@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  id v73 = a1;
  uint64_t v87 = a4;
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  uint64_t v5 = ItemsList - 8;
  uint64_t v86 = *(void *)(ItemsList - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  __chkstk_darwin(ItemsList);
  uint64_t v84 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessibilityTraits();
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v76 = v8;
  __chkstk_darwin(v8);
  char v72 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivitySummaryItemView();
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_1000AFA94(&qword_100967C48);
  uint64_t v70 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100967C30);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100967C20);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_100967C08);
  __chkstk_darwin(v71);
  uint64_t v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000AFA94(&qword_100967C00);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v80 = v26;
  uint64_t v81 = v27;
  __chkstk_darwin(v26);
  uint64_t v74 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_100967C50);
  uint64_t v78 = *(void *)(v29 - 8);
  uint64_t v79 = v29;
  __chkstk_darwin(v29);
  uint64_t v77 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void **)(v89 + *(int *)(v5 + 56));
  uint64_t v32 = (char *)v14 + *(int *)(v12 + 24);
  uint64_t v33 = type metadata accessor for DayIndex();
  (*(void (**)(char *, id, uint64_t))(*(void *)(v33 - 8) + 16))(v32, v73, v33);
  uint64_t v34 = v88;
  *uint64_t v14 = v88;
  v14[1] = v31;
  id v73 = v34;
  id v35 = v31;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v36 = sub_100085980(&qword_100967C38, (void (*)(uint64_t))type metadata accessor for ActivitySummaryItemView);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v11, v69);
  sub_1006811D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ActivitySummaryItemView);
  uint64_t v37 = v72;
  static AccessibilityTraits.isButton.getter();
  uint64_t v90 = v12;
  unint64_t v91 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v67;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v76);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v38);
  id v39 = sub_10005DB50();
  uint64_t v40 = Color.init(uiColor:)();
  LOBYTE(v16) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v23, &qword_100967C30);
  uint64_t v41 = &v23[*(int *)(v21 + 44)];
  *(void *)uint64_t v41 = v40;
  v41[8] = (char)v16;
  sub_10008DB18((uint64_t)v19, &qword_100967C30);
  uint64_t v42 = v82;
  uint64_t v43 = &v82[*(int *)(v83 + 28)];
  uint64_t v44 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v45 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v43, v44, v45);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v42 = _Q0;
  uint64_t v51 = v71;
  uint64_t v52 = (uint64_t)&v25[*(int *)(v71 + 36)];
  sub_10068116C((uint64_t)v42, v52, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v52 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v23, (uint64_t)v25, &qword_100967C20);
  sub_1006811D4((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v23, &qword_100967C20);
  uint64_t v53 = v84;
  sub_10068116C(v89, v84, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  unint64_t v54 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v55 = (v85 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = swift_allocObject();
  sub_1006801B8(v53, v56 + v54);
  *(void *)(v56 + v55) = v88;
  unint64_t v57 = sub_100680D34();
  id v58 = v73;
  id v59 = v74;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v25, &qword_100967C08);
  static VerticalEdge.Set.all.getter();
  uint64_t v90 = v51;
  unint64_t v91 = v57;
  swift_getOpaqueTypeConformance2();
  uint64_t v60 = v77;
  uint64_t v61 = v80;
  View.listRowSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v61);
  uint64_t v63 = v78;
  uint64_t v62 = v79;
  uint64_t v64 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v87, v60, v79);
  uint64_t v65 = v64 + *(int *)(sub_1000AFA94(&qword_100967BE0) + 36);
  *(_OWORD *)uint64_t v65 = xmmword_100773B60;
  *(_OWORD *)(v65 + 16) = xmmword_100773B60;
  *(unsigned char *)(v65 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v60, v62);
}

void sub_10067E7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 48))
  {
    if (a2)
    {
      sub_1002B9D38((uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
LABEL_7:

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v9);
    }
    Date.init()();
    sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
    goto LABEL_7;
  }
}

uint64_t sub_10067E96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v91 = a3;
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  uint64_t v90 = *(void *)(ItemsList - 8);
  uint64_t v89 = *(void *)(v90 + 64);
  __chkstk_darwin(ItemsList - 8);
  uint64_t v88 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityTraits();
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v77 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v72);
  uint64_t v11 = (_OWORD *)((char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v68);
  uint64_t v65 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v64 - v14;
  uint64_t HistoryItemView = type metadata accessor for LoadHistoryItemView();
  __chkstk_darwin(HistoryItemView);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100967B50);
  __chkstk_darwin(v66);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_100967C58);
  uint64_t v74 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v69 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000AFA94(&qword_100967B40);
  __chkstk_darwin(v78);
  uint64_t v71 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_100967B38);
  uint64_t v83 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v75 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_100967C60);
  uint64_t v79 = *(void *)(v24 - 8);
  uint64_t v80 = v24;
  __chkstk_darwin(v24);
  uint64_t v76 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008E75C(a1, (uint64_t)v18);
  uint64_t v67 = a2;
  uint64_t v26 = *(void **)a2;
  uint64_t v27 = *(void **)(a2 + 16);
  uint64_t v28 = *(void **)(a2 + 24);
  uint64_t v29 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v15, 1, 1, v29);
  *((void *)v18 + 5) = v26;
  *((void *)v18 + 6) = v27;
  *((void *)v18 + 7) = v28;
  type metadata accessor for BalanceDataProvider();
  sub_100085980(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  id v30 = v26;
  id v31 = v27;
  id v32 = v28;
  *((void *)v18 + 8) = Environment.init<A>(_:)();
  v18[72] = v33 & 1;
  sub_1000AEF2C((uint64_t)v15, v65, (uint64_t *)&unk_10095BFD0);
  State.init(wrappedValue:)();
  sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095BFD0);
  uint64_t v34 = (char *)v11 + *(int *)(v72 + 28);
  uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v36 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #14.0 }
  _OWORD *v11 = _Q0;
  uint64_t v42 = v66;
  uint64_t v43 = (uint64_t)&v20[*(int *)(v66 + 36)];
  sub_10068116C((uint64_t)v11, v43, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v43 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_10068116C((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LoadHistoryItemView);
  sub_1006811D4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1006811D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for LoadHistoryItemView);
  uint64_t v44 = v77;
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v45 = sub_10068048C();
  id v46 = v69;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v84);
  sub_10008DB18((uint64_t)v20, &qword_100967B50);
  uint64_t v47 = v85;
  static AccessibilityTraits.isButton.getter();
  *(void *)&v92[0] = v42;
  *((void *)&v92[0] + 1) = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = (uint64_t)v71;
  uint64_t v49 = v73;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v47, v87);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v49);
  uint64_t v50 = v88;
  sub_10068116C(v67, v88, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  sub_10008E75C(v70, (uint64_t)v92);
  unint64_t v51 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  unint64_t v52 = (v89 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = swift_allocObject();
  sub_1006801B8(v50, v53 + v51);
  sub_100093E60(v92, v53 + v52);
  unint64_t v54 = sub_1006803AC();
  unint64_t v55 = v75;
  uint64_t v56 = v78;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v48, &qword_100967B40);
  static VerticalEdge.Set.all.getter();
  *(void *)&v92[0] = v56;
  *((void *)&v92[0] + 1) = v54;
  swift_getOpaqueTypeConformance2();
  unint64_t v57 = v76;
  uint64_t v58 = v81;
  View.listRowSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v55, v58);
  uint64_t v60 = v79;
  uint64_t v59 = v80;
  uint64_t v61 = v91;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v91, v57, v80);
  uint64_t v62 = v61 + *(int *)(sub_1000AFA94(&qword_100967B20) + 36);
  *(_OWORD *)uint64_t v62 = xmmword_100773B60;
  *(_OWORD *)(v62 + 16) = xmmword_100773B60;
  *(unsigned char *)(v62 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v57, v59);
}

__n128 sub_10067F338@<Q0>(uint64_t a1@<X8>)
{
  static VerticalAlignment.center.getter();
  sub_10067F478((uint64_t)&v12);
  long long v2 = v12;
  char v3 = v13.n128_u8[0];
  static Alignment.center.getter();
  sub_1004DE91C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v12, 0.0, 1, 0.0, 1);
  sub_1000A06C0(v2, *((uint64_t *)&v2 + 1), v3);
  swift_release();
  swift_bridgeObjectRelease();
  long long v4 = v21;
  long long v5 = v23;
  *(_OWORD *)(a1 + 160) = v22;
  *(_OWORD *)(a1 + 176) = v5;
  long long v6 = v17;
  long long v7 = v19;
  long long v8 = v20;
  *(_OWORD *)(a1 + 96) = v18;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v4;
  long long v9 = v15;
  long long v10 = v16;
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v9;
  *(void *)(a1 + 192) = v24;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = v13;
  *(_OWORD *)a1 = v12;
  *(__n128 *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 200) = 0;
  return result;
}

uint64_t sub_10067F478@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.body.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1000A06C0(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v14 = Image.init(systemName:)();
  int v15 = static HierarchicalShapeStyle.secondary.getter();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v14;
  *(_DWORD *)(a1 + 56) = v15;
  sub_1000A1750(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v7, v9, v11 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10067F5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100967A20);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100967A08);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100967A80);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_1000AFA94(&qword_100967A88);
  sub_10067F83C(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  uint64_t v15 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_100967A20);
  long long v17 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *long long v17 = KeyPath;
  v17[1] = v15;
  sub_10008DB18((uint64_t)v6, &qword_100967A20);
  static Font.Weight.bold.getter();
  sub_10067FDBC();
  View.fontWeight(_:)();
  sub_10008DB18((uint64_t)v9, &qword_100967A08);
  uint64_t v18 = static Color.white.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2, v13, v10);
  *(void *)(a2 + *(int *)(sub_1000AFA94(&qword_1009679F0) + 36)) = v18;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10067F83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100967A90);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v11 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(ItemsList + 44), DataType);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, DataType);
  int v16 = enum case for TrainingLoadDataType.allDay(_:);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, DataType);
  LocalizedStringKey.init(stringLiteral:)();
  v29[2] = Text.init(_:tableName:bundle:comment:)();
  v29[3] = v17;
  v29[4] = v18 & 1;
  v29[5] = v19;
  BOOL v30 = v15 != v16;
  _ConditionalContent<>.init(storage:)();
  uint64_t v20 = v31;
  uint64_t v21 = v32;
  uint64_t v22 = v33;
  uint64_t v23 = v34;
  char v24 = v35;
  if (sub_10067B780())
  {
    ProgressView<>.init<>()();
    uint64_t v25 = sub_1000AFA94(&qword_10094BFB8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
  }
  else
  {
    uint64_t v26 = sub_1000AFA94(&qword_10094BFB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
  }
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v6, &qword_100967A90);
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v21;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v23;
  *(unsigned char *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 1;
  uint64_t v27 = sub_1000AFA94(&qword_100967A98);
  sub_1000AEF2C((uint64_t)v6, a2 + *(int *)(v27 + 64), &qword_100967A90);
  sub_1001BB600(v20, v21, v22);
  sub_10008DB18((uint64_t)v9, &qword_100967A90);
  sub_10008DB18((uint64_t)v6, &qword_100967A90);
  return sub_1001BB654(v20, v21, v22);
}

uint64_t sub_10067FBF8()
{
  uint64_t v1 = sub_1000AFA94(&qword_1009679F0);
  __chkstk_darwin(v1);
  uint64_t v5 = v0;
  sub_10067F5E4(v0, (uint64_t)&v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1000AFA94(&qword_1009679F8);
  sub_10067FCE8();
  sub_10067FE80();
  return Section<>.init(header:content:)();
}

uint64_t sub_10067FCE0@<X0>(uint64_t a1@<X8>)
{
  return sub_10067BCEC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10067FCE8()
{
  unint64_t result = qword_100967A00;
  if (!qword_100967A00)
  {
    sub_1000A1370(&qword_1009679F0);
    sub_1000A1370(&qword_100967A08);
    sub_10067FDBC();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A00);
  }
  return result;
}

unint64_t sub_10067FDBC()
{
  unint64_t result = qword_100967A10;
  if (!qword_100967A10)
  {
    sub_1000A1370(&qword_100967A08);
    sub_1000A132C(&qword_100967A18, &qword_100967A20);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A10);
  }
  return result;
}

unint64_t sub_10067FE80()
{
  unint64_t result = qword_100967A28;
  if (!qword_100967A28)
  {
    sub_1000A1370(&qword_1009679F8);
    sub_10067FF2C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A28);
  }
  return result;
}

unint64_t sub_10067FF2C()
{
  unint64_t result = qword_100967A30;
  if (!qword_100967A30)
  {
    sub_1000A1370(&qword_100967A38);
    sub_10067FFCC();
    sub_1000A132C(&qword_100967A70, &qword_100967A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A30);
  }
  return result;
}

unint64_t sub_10067FFCC()
{
  unint64_t result = qword_100967A40;
  if (!qword_100967A40)
  {
    sub_1000A1370(&qword_100967A48);
    sub_10068006C();
    sub_1000A132C(&qword_100967A60, &qword_100967A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A40);
  }
  return result;
}

unint64_t sub_10068006C()
{
  unint64_t result = qword_100967A50;
  if (!qword_100967A50)
  {
    sub_1000A1370(&qword_100967A58);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967A50);
  }
  return result;
}

uint64_t sub_10068015C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_10007E4EC(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_1006801B8(uint64_t a1, uint64_t a2)
{
  uint64_t ItemsList = type metadata accessor for LoadItemsList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ItemsList - 8) + 32))(a2, a1, ItemsList);
  return a2;
}

uint64_t sub_10068021C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadItemsList() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10067E96C(a1, v6, a2);
}

unint64_t sub_10068029C()
{
  unint64_t result = qword_100967B30;
  if (!qword_100967B30)
  {
    sub_1000A1370(&qword_100967B20);
    sub_1000A1370(&qword_100967B38);
    sub_1000A1370(&qword_100967B40);
    sub_1006803AC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B30);
  }
  return result;
}

unint64_t sub_1006803AC()
{
  unint64_t result = qword_100967B48;
  if (!qword_100967B48)
  {
    sub_1000A1370(&qword_100967B40);
    sub_1000A1370(&qword_100967B50);
    sub_10068048C();
    swift_getOpaqueTypeConformance2();
    sub_100085980((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B48);
  }
  return result;
}

unint64_t sub_10068048C()
{
  unint64_t result = qword_100967B58;
  if (!qword_100967B58)
  {
    sub_1000A1370(&qword_100967B50);
    sub_100085980(&qword_100967B60, (void (*)(uint64_t))type metadata accessor for LoadHistoryItemView);
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B58);
  }
  return result;
}

unint64_t sub_10068055C()
{
  unint64_t result = qword_100967B68;
  if (!qword_100967B68)
  {
    sub_1000A1370(&qword_100967AE0);
    sub_10068029C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B68);
  }
  return result;
}

void sub_1006805D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for LoadItemsList() - 8);
  if (*(void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)) + 48)) {
    sub_1004AE9D4(1);
  }
}

unint64_t sub_10068063C()
{
  unint64_t result = qword_100967B78;
  if (!qword_100967B78)
  {
    sub_1000A1370(&qword_100967B70);
    sub_1006806DC();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B78);
  }
  return result;
}

unint64_t sub_1006806DC()
{
  unint64_t result = qword_100967B80;
  if (!qword_100967B80)
  {
    sub_1000A1370(&qword_100967B88);
    sub_1000A132C(&qword_100967B90, &qword_100967B98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967B80);
  }
  return result;
}

unint64_t sub_10068077C()
{
  unint64_t result = qword_100967BA0;
  if (!qword_100967BA0)
  {
    sub_1000A1370(&qword_100967AC0);
    sub_1006807F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BA0);
  }
  return result;
}

unint64_t sub_1006807F8()
{
  unint64_t result = qword_100967BA8;
  if (!qword_100967BA8)
  {
    sub_1000A1370(&qword_100967AB8);
    sub_1000A132C(&qword_100967BB0, &qword_100967AB0);
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BA8);
  }
  return result;
}

unint64_t sub_1006808BC()
{
  unint64_t result = qword_100967BB8;
  if (!qword_100967BB8)
  {
    sub_1000A1370(&qword_100967AD0);
    sub_10068095C();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BB8);
  }
  return result;
}

unint64_t sub_10068095C()
{
  unint64_t result = qword_100967BC0;
  if (!qword_100967BC0)
  {
    sub_1000A1370(&qword_100967AC8);
    sub_1006809FC();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BC0);
  }
  return result;
}

unint64_t sub_1006809FC()
{
  unint64_t result = qword_100967BC8;
  if (!qword_100967BC8)
  {
    sub_1000A1370(&qword_10095FFE0);
    sub_1000A1370(&qword_100967AC0);
    type metadata accessor for PlainButtonStyle();
    sub_10068077C();
    sub_100085980(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BC8);
  }
  return result;
}

uint64_t sub_100680B10@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for LoadItemsList() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10067DE90(a1, a2, v8, a3);
}

uint64_t sub_100680B98()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100680BD0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = sub_1000AFA94(&qword_10094F410);
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_100680C24()
{
  unint64_t result = qword_100967BF8;
  if (!qword_100967BF8)
  {
    sub_1000A1370(&qword_100967BE0);
    sub_1000A1370(&qword_100967C00);
    sub_1000A1370(&qword_100967C08);
    sub_100680D34();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967BF8);
  }
  return result;
}

unint64_t sub_100680D34()
{
  unint64_t result = qword_100967C10;
  if (!qword_100967C10)
  {
    sub_1000A1370(&qword_100967C08);
    sub_100680DD4();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967C10);
  }
  return result;
}

unint64_t sub_100680DD4()
{
  unint64_t result = qword_100967C18;
  if (!qword_100967C18)
  {
    sub_1000A1370(&qword_100967C20);
    sub_100680E74();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967C18);
  }
  return result;
}

unint64_t sub_100680E74()
{
  unint64_t result = qword_100967C28;
  if (!qword_100967C28)
  {
    sub_1000A1370(&qword_100967C30);
    type metadata accessor for ActivitySummaryItemView();
    sub_100085980(&qword_100967C38, (void (*)(uint64_t))type metadata accessor for ActivitySummaryItemView);
    swift_getOpaqueTypeConformance2();
    sub_100085980((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967C28);
  }
  return result;
}

uint64_t sub_100680F80()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadItemsList() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = (id *)(v0 + v2);

  swift_release();
  uint64_t v5 = (char *)v4 + v1[13];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v5, DataType);

  sub_1001AEDC8(*(id *)((char *)v4 + v1[15]), *((unsigned char *)v4 + v1[15] + 8));

  return swift_deallocObject();
}

void sub_1006810E0()
{
  uint64_t v1 = *(void *)(type metadata accessor for LoadItemsList() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10067E7A0(v0 + v2, v3);
}

uint64_t sub_10068116C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006811D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100681234()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadItemsList() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = (id *)(v0 + v2);

  swift_release();
  uint64_t v5 = (char *)v4 + v1[13];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v5, DataType);

  sub_1001AEDC8(*(id *)((char *)v4 + v1[15]), *((unsigned char *)v4 + v1[15] + 8));
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + v3);

  return swift_deallocObject();
}

void sub_100681394()
{
  uint64_t v1 = *(void *)(type metadata accessor for LoadItemsList() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  if (*(void *)(v0 + v2 + 48)) {
    sub_1004AE720(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  }
}

unint64_t sub_10068142C()
{
  unint64_t result = qword_100967C68;
  if (!qword_100967C68)
  {
    sub_1000A1370(&qword_100967C70);
    sub_10067FCE8();
    sub_10067FE80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967C68);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsAnalytics()
{
  return &type metadata for TrendsAnalytics;
}

unint64_t sub_1006814C4(char a1, char a2)
{
  unint64_t result = 1702260557;
  switch(a2)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x65636E6174736944;
      break;
    case 3:
      if (a1) {
        unint64_t result = 0xD000000000000014;
      }
      else {
        unint64_t result = 0x20676E696B6C6157;
      }
      break;
    case 4:
      unint64_t result = 0x78614D20324F56;
      break;
    case 5:
      unint64_t result = 0x6573696372657845;
      break;
    case 6:
      if (a1) {
        unint64_t result = 0x6E696D206C6C6F52;
      }
      else {
        unint64_t result = 0x694D20646E617453;
      }
      break;
    case 7:
      if (a1) {
        unint64_t result = 0xD000000000000013;
      }
      else {
        unint64_t result = 0x20676E696E6E7552;
      }
      break;
    case 8:
      unint64_t result = 0x2073746867696C46;
      break;
    default:
      if (a1) {
        unint64_t result = 1819045714;
      }
      else {
        unint64_t result = 0x646E617453;
      }
      break;
  }
  return result;
}

unint64_t sub_100681678(char a1, uint64_t a2, char a3)
{
  sub_1000AFA94(&qword_100967C78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  strcpy((char *)(inited + 32), "arrowDirection");
  *(unsigned char *)(inited + 47) = -18;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = 0x63697274656DLL;
  *(void *)(inited + 64) = 0xE600000000000000;
  sub_1006814C4(a3 & 1, a1);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v7;
  return sub_100522C44(inited);
}

void sub_100681790(char a1, uint64_t a2, char a3)
{
  id v6 = [self sharedConnection];
  if (v6)
  {
    NSString v7 = v6;
    unsigned int v8 = [v6 isHealthDataSubmissionAllowed];

    if (v8)
    {
      sub_100681678(a1, a2, a3 & 1);
      NSString v9 = String._bridgeToObjectiveC()();
      sub_1000A88A4();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      AnalyticsSendEvent();
    }
  }
}

void sub_1006818B0()
{
  sub_1000AFA94(&qword_100967C78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = 0x746E657665;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = String._bridgeToObjectiveC()();
  sub_100522C44(inited);
  NSString v1 = String._bridgeToObjectiveC()();
  sub_1000A88A4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

uint64_t sub_10068199C()
{
  swift_release();
  swift_release();
  sub_10005E5F8(*(void *)(v0 + 32));
  sub_100681A20(v0 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection);

  return swift_deallocClassInstance();
}

uint64_t sub_100681A18()
{
  return type metadata accessor for CatalogTipActivityTileDataModel();
}

uint64_t sub_100681A20(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_100955650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for PowerTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void destroy for PowerTargetValue(uint64_t a1)
{
}

uint64_t assignWithCopy for PowerTargetValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  id v4 = (void *)a2[2];
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for PowerTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PowerTargetValue()
{
  return &type metadata for PowerTargetValue;
}

uint64_t sub_100681B64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100681B80@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v6 = a2 & 1;
  uint64_t v7 = type metadata accessor for MetricText();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100681D14(a1, v6);
  if ((a2 & 1) == 0 && (a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    id v11 = [self localizedShortPowerUnitString];
    if (v11)
    {
      uint64_t v12 = v11;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  MetricText.init(value:unit:description:stale:includesSlashes:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
}

uint64_t sub_100681D00@<X0>(uint64_t a1@<X8>)
{
  return sub_100681B80(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_100681D14(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for LocalizationFeature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000AFA94(&qword_10095B438);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v23 - v18;
  if ((a2 & 1) != 0 || (v16 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v4 + 104))(v6, enum case for LocalizationFeature.workout(_:), v3, v17);
    uint64_t v21 = static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v26 = v16;
    static Locale.autoupdatingCurrent.getter();
    sub_1003ED738();
    FloatingPointFormatStyle.init(locale:)();
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
    FloatingPointFormatStyle.precision(_:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
    v20(v14, v11);
    sub_1004A47D8();
    BinaryFloatingPoint.formatted<A>(_:)();
    v20(v19, v11);
    return v27;
  }
  return v21;
}

uint64_t sub_100682078()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones);
  if (!v1) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v3 = v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  for (double i = 0.0; ; double i = i + *(double *)(*(void *)(v1 + 56) + 8 * v10))
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      continue;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v7) {
      return *(void *)&i;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        return *(void *)&i;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v7) {
          return *(void *)&i;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v7) {
            return *(void *)&i;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          if (!v12)
          {
            int64_t v2 = v11 + 4;
            if (v11 + 4 >= v7) {
              return *(void *)&i;
            }
            unint64_t v12 = *(void *)(v3 + 8 * v2);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v7) {
    return *(void *)&i;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v7) {
      return *(void *)&i;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1006821C4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CyclingPowerZonesConfigurationType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v10 = a2;
    uint64_t v11 = HKWorkoutActivity.cyclingPowerZonesConfiguration.getter();

    if (v11)
    {
LABEL_6:
      id v12 = v10;
      uint64_t v13 = HKWorkoutActivity.elapsedTimeInCyclingPowerZones.getter();

      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  if (!HKWorkout.cyclingPowerZonesConfiguration.getter())
  {

LABEL_16:
    *(void *)(v3 + 16) = 0;
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType, enum case for CyclingPowerZonesConfigurationType.automatic(_:), v6);
    uint64_t v13 = 0;
    goto LABEL_17;
  }
  if (a2)
  {
    id v10 = a2;
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v13 = HKWorkout.elapsedTimeInCyclingPowerZones.getter();
  swift_bridgeObjectRelease();
  if (!v13)
  {

    goto LABEL_15;
  }
LABEL_8:
  if (CyclingPowerZonesConfiguration.isEmpty.getter())
  {

    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  unint64_t v14 = CyclingPowerZonesConfiguration.zones.getter();
  if (v14 >> 62)
  {
    type metadata accessor for Zone();
    uint64_t v15 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for Zone();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14;
  }
  *(void *)(v3 + 16) = v15;
  CyclingPowerZonesConfiguration.configurationType.getter();

  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType, v9, v6);
LABEL_17:
  *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones) = v13;
  return v3;
}

uint64_t sub_10068241C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType;
  uint64_t v2 = type metadata accessor for CyclingPowerZonesConfigurationType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1006824D4()
{
  return type metadata accessor for WorkoutPowerInfo();
}

uint64_t type metadata accessor for WorkoutPowerInfo()
{
  uint64_t result = qword_100967DA8;
  if (!qword_100967DA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100682528()
{
  uint64_t result = type metadata accessor for CyclingPowerZonesConfigurationType();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1006825C4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v11;
    id v12 = (char *)a1 + v10;
    uint64_t v13 = (char *)a2 + v10;
    uint64_t v14 = type metadata accessor for UUID();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    id v16 = v11;
    v15(v12, v13, v14);
    uint64_t v17 = (int *)type metadata accessor for FriendsHighlightCard();
    uint64_t v18 = v17[5];
    uint64_t v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *((void *)v20 + 1);
    char v23 = v20[16];
    sub_100091494(*(void *)v20, v22, v23);
    *(void *)uint64_t v19 = v21;
    *((void *)v19 + 1) = v22;
    v19[16] = v23;
    v12[v17[6]] = v13[v17[6]];
    v12[v17[7]] = v13[v17[7]];
    v12[v17[8]] = v13[v17[8]];
    *(void *)&v12[v17[9]] = *(void *)&v13[v17[9]];
    uint64_t v24 = v17[10];
    uint64_t v25 = *(void **)&v13[v24];
    *(void *)&v12[v24] = v25;
    v12[v17[11]] = v13[v17[11]];
    v12[v17[12]] = v13[v17[12]];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)((char *)a2 + v26 + 24);
    swift_bridgeObjectRetain();
    id v30 = v25;
    if (v29)
    {
      uint64_t v31 = *((void *)v28 + 4);
      *((void *)v27 + 3) = v29;
      *((void *)v27 + 4) = v31;
      (**(void (***)(char *, char *, uint64_t))(v29 - 8))(v27, v28, v29);
    }
    else
    {
      long long v32 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v32;
      *((void *)v27 + 4) = *((void *)v28 + 4);
    }
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_100682848(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for FriendsHighlightCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(v7 + 20)), *(void *)(v5 + *(int *)(v7 + 20) + 8), *(unsigned char *)(v5 + *(int *)(v7 + 20) + 16));
  swift_bridgeObjectRelease();

  uint64_t result = a1 + a2[7];
  if (*(void *)(result + 24))
  {
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  }
  return result;
}

void *sub_10068298C(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  uint64_t v10 = (char *)a1 + v8;
  uint64_t v11 = (char *)a2 + v8;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v9;
  v13(v10, v11, v12);
  uint64_t v15 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v21 = v18[16];
  sub_100091494(*(void *)v18, v20, v21);
  *(void *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  v17[16] = v21;
  v10[v15[6]] = v11[v15[6]];
  v10[v15[7]] = v11[v15[7]];
  v10[v15[8]] = v11[v15[8]];
  *(void *)&v10[v15[9]] = *(void *)&v11[v15[9]];
  uint64_t v22 = v15[10];
  char v23 = *(void **)&v11[v22];
  *(void *)&v10[v22] = v23;
  v10[v15[11]] = v11[v15[11]];
  v10[v15[12]] = v11[v15[12]];
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a2 + v24 + 24);
  swift_bridgeObjectRetain();
  id v28 = v23;
  if (v27)
  {
    uint64_t v29 = *((void *)v26 + 4);
    *((void *)v25 + 3) = v27;
    *((void *)v25 + 4) = v29;
    (**(void (***)(char *, char *, uint64_t))(v27 - 8))(v25, v26, v27);
  }
  else
  {
    long long v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
    *((void *)v25 + 4) = *((void *)v26 + 4);
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100682BC0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v21 = v18[16];
  sub_100091494(*(void *)v18, v20, v21);
  uint64_t v22 = *(void *)v17;
  uint64_t v23 = *((void *)v17 + 1);
  *(void *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  char v24 = v17[16];
  v17[16] = v21;
  sub_1000917F8(v22, v23, v24);
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v15[10];
  uint64_t v26 = *(void **)&v12[v25];
  uint64_t v27 = *(void **)&v13[v25];
  *(void *)&v12[v25] = v27;
  id v28 = v27;

  v12[v15[11]] = v13[v15[11]];
  v12[v15[12]] = v13[v15[12]];
  uint64_t v29 = a3[7];
  uint64_t v30 = (uint64_t)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)((char *)a2 + v29 + 24);
  if (!*(void *)((char *)a1 + v29 + 24))
  {
    if (v32)
    {
      *(void *)(v30 + 24) = v32;
      *(void *)(v30 + 32) = *((void *)v31 + 4);
      (**(void (***)(uint64_t, char *))(v32 - 8))(v30, v31);
      goto LABEL_13;
    }
LABEL_12:
    long long v33 = *(_OWORD *)v31;
    long long v34 = *((_OWORD *)v31 + 1);
    *(void *)(v30 + 32) = *((void *)v31 + 4);
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    goto LABEL_13;
  }
  if (!v32)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v30);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v30, (uint64_t *)v31);
LABEL_13:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

char *sub_100682E58(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  id v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  v9[v12[11]] = v10[v12[11]];
  v9[v12[12]] = v10[v12[12]];
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  a1[v17] = a2[v17];
  return a1;
}

char *sub_100683014(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for FriendsHighlightCard();
  uint64_t v15 = v14[5];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  char v18 = v17[16];
  uint64_t v19 = *(void *)v16;
  uint64_t v20 = *((void *)v16 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  char v21 = v16[16];
  v16[16] = v18;
  sub_1000917F8(v19, v20, v21);
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  v11[v14[8]] = v12[v14[8]];
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  swift_bridgeObjectRelease();
  uint64_t v22 = v14[10];
  uint64_t v23 = *(void **)&v11[v22];
  *(void *)&v11[v22] = *(void *)&v12[v22];

  v11[v14[11]] = v12[v14[11]];
  v11[v14[12]] = v12[v14[12]];
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  if (*(void *)&a1[v24 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v24]);
  }
  long long v26 = *(_OWORD *)&a2[v24 + 16];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)&a2[v24];
  *((_OWORD *)v25 + 1) = v26;
  *((void *)v25 + 4) = *(void *)&a2[v24 + 32];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_100683228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068323C);
}

uint64_t sub_10068323C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FriendsHighlightCard();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10068336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100683380);
}

uint64_t sub_100683380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FriendsHighlightCard();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1006834B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006834CC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v3 = type metadata accessor for Divider();
  uint64_t v125 = *(void *)(v3 - 8);
  uint64_t v126 = v3;
  __chkstk_darwin(v3);
  uint64_t v123 = (int *)((char *)v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = sub_1000AFA94(&qword_10094C768) - 8;
  __chkstk_darwin(v124);
  uint64_t v132 = (uint64_t)v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v129 = (char *)v113 - v7;
  uint64_t v8 = (int *)type metadata accessor for FriendsHighlightCardView();
  uint64_t v128 = (char *)*((void *)v8 - 1);
  uint64_t v9 = *((void *)v128 + 8);
  __chkstk_darwin(v8);
  uint64_t v116 = (uint64_t)v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  *(void *)&long long v127 = (char *)v113 - v11;
  __chkstk_darwin(v12);
  id v122 = (char *)v113 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v113 - v15;
  uint64_t v17 = sub_1000AFA94(&qword_10094C770);
  uint64_t v130 = *(void *)(v17 - 8);
  uint64_t v131 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v113 - v21;
  uint64_t v121 = a1 + v8[6];
  uint64_t v23 = v121;
  uint64_t v24 = (int *)type metadata accessor for FriendsHighlightCard();
  *((void *)&v158 + 1) = v24;
  *(void *)&v159[0] = &off_1008CBE58;
  uint64_t v25 = sub_1000B1710((uint64_t *)&v157);
  sub_100687EAC(v23, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCard);
  sub_1000AEF2C(a1 + v8[7], (uint64_t)v159 + 8, &qword_10094C750);
  uint64_t v26 = v8[8];
  char v117 = v8;
  uint64_t v118 = v26;
  LOBYTE(v160) = *(unsigned char *)(a1 + v26);
  LOBYTE(v8) = static Edge.Set.all.getter();
  sub_100099374((uint64_t)&v157, (uint64_t)v147);
  BYTE8(v151) = (_BYTE)v8;
  long long v152 = xmmword_100751050;
  long long v153 = xmmword_100751050;
  LOBYTE(v154) = 0;
  sub_1000901D4((uint64_t)&v157);
  sub_1000AEF2C((uint64_t)v147, (uint64_t)&v157, &qword_10094C778);
  BYTE1(v163) = 0;
  sub_10008DB18((uint64_t)v147, &qword_10094C778);
  sub_100687EAC(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v27 = v128[80];
  uint64_t v28 = (v27 + 16) & ~v27;
  v113[1] = v27 | 7;
  v113[2] = v28 + v9;
  uint64_t v29 = swift_allocObject();
  uint64_t v114 = v28;
  id v115 = v16;
  sub_100687B38((uint64_t)v16, v29 + v28, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  sub_1000AFA94(&qword_10094C780);
  sub_10009DBF8();
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)&v157, &qword_10094C780);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v130 + 32);
  uint64_t v128 = v22;
  uint64_t v119 = v19;
  uint64_t v31 = v19;
  uint64_t v32 = a1;
  v30(v22, v31, v131);
  long long v33 = (char *)v123;
  Divider.init()();
  id v34 = [self quaternarySystemFillColor];
  uint64_t v35 = Color.init(_:)();
  LOBYTE(v28) = static Edge.Set.all.getter();
  uint64_t v36 = v125;
  uint64_t v37 = v126;
  uint64_t v38 = v132;
  (*(void (**)(uint64_t, char *, uint64_t))(v125 + 16))(v132, v33, v126);
  uint64_t v39 = v38 + *(int *)(v124 + 44);
  *(void *)uint64_t v39 = v35;
  *(unsigned char *)(v39 + 8) = v28;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v41 = (uint64_t)v129;
  uint64_t v42 = v37;
  uint64_t v43 = v121;
  uint64_t v44 = (uint64_t)v122;
  v40(v33, v42);
  sub_1000AEEC8(v38, v41, &qword_10094C768);
  LODWORD(v35) = *(unsigned __int8 *)(v43 + v24[11]);
  sub_100687EAC(v32, v44, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  if (v35 != 1)
  {
    sub_100687CAC(v44, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
    uint64_t v47 = v127;
    sub_100687EAC(v32, v127, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
    uint64_t v48 = v32;
    goto LABEL_7;
  }
  unint64_t v45 = v117;
  int v46 = *(unsigned __int8 *)(v44 + v117[6] + v24[12]);
  sub_100687CAC(v44, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v47 = v127;
  sub_100687EAC(v32, v127, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v48 = v32;
  if (v46 != 1)
  {
LABEL_7:
    sub_100687CAC(v47, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
    goto LABEL_8;
  }
  uint64_t v49 = *(void *)(*(void *)(v47 + v45[6] + v24[9]) + 16);
  sub_100687CAC(v47, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  if (!v49)
  {
LABEL_8:
    uint64_t v67 = v131;
    uint64_t v68 = v41;
    char v69 = *(unsigned char *)(v48 + v118);
    char v70 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v72 = v71;
    uint64_t v74 = v73;
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    char v79 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    char v88 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    LOBYTE(v133) = 0;
    LOBYTE(v166[0]) = 0;
    char v146 = 0;
    LOBYTE(v147[0]) = v69;
    *(_OWORD *)((char *)v147 + 8) = xmmword_100773EF0;
    BYTE8(v147[1]) = v70;
    *(void *)&long long v148 = v72;
    *((void *)&v148 + 1) = v74;
    *(void *)&long long v149 = v76;
    *((void *)&v149 + 1) = v78;
    LOBYTE(v150) = 0;
    BYTE8(v150) = v79;
    *(void *)&long long v151 = v81;
    *((void *)&v151 + 1) = v83;
    *(void *)&long long v152 = v85;
    *((void *)&v152 + 1) = v87;
    LOBYTE(v153) = 0;
    BYTE8(v153) = v88;
    *(void *)&long long v154 = v89;
    *((void *)&v154 + 1) = v90;
    *(void *)&long long v155 = v91;
    *((void *)&v155 + 1) = v92;
    LOBYTE(v156) = 0;
    sub_1006872E8((uint64_t)v147);
    sub_1000AEEC8((uint64_t)v147, (uint64_t)v144, &qword_100967F08);
    sub_1000AFA94(&qword_100967F10);
    sub_1000AFA94(&qword_100967F18);
    sub_1006872F4();
    sub_10009DE8C(&qword_100967F38, &qword_100967F18, (void (*)(void))sub_100687394);
    _ConditionalContent<>.init(storage:)();
    uint64_t v65 = v119;
    uint64_t v93 = v120;
    uint64_t v94 = v130;
    goto LABEL_9;
  }
  uint64_t v123 = v24;
  uint64_t v50 = v118;
  char v51 = *(unsigned char *)(v32 + v118);
  uint64_t v52 = v32;
  uint64_t v53 = (uint64_t)v115;
  sub_100687EAC(v32, (uint64_t)v115, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v54 = swift_allocObject();
  sub_100687B38(v53, v54 + v114, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v55 = swift_bridgeObjectRetain();
  sub_1004DF0AC(v166, v55, (v51 & 1) == 0, sub_100687564, v54);
  uint64_t v56 = v166[1];
  char v57 = v167;
  uint64_t v58 = v168;
  char v59 = v169;
  uint64_t v60 = v171;
  uint64_t v125 = v170;
  uint64_t v126 = v166[0];
  LODWORD(v124) = v172;
  long long v127 = v173;
  char v61 = *(unsigned char *)(v52 + v50);
  uint64_t v62 = v52;
  uint64_t v63 = v116;
  sub_100687EAC(v62, v116, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  uint64_t v64 = v63;
  uint64_t v65 = v119;
  if (v61) {
    char v66 = 0;
  }
  else {
    char v66 = *(unsigned char *)(v64 + v117[6] + (uint64_t)v123[7]) ^ 1;
  }
  sub_100687CAC(v64, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  *(void *)&v147[0] = v126;
  *((void *)&v147[0] + 1) = v56;
  LOBYTE(v147[1]) = v57;
  *((void *)&v147[1] + 1) = v58;
  LOBYTE(v148) = v59;
  *((void *)&v148 + 1) = v125;
  *(void *)&long long v149 = v60;
  BYTE8(v149) = v124;
  long long v150 = v127;
  LOBYTE(v151) = v66 & 1;
  sub_1006875D4((uint64_t)v147);
  sub_1000AEEC8((uint64_t)v147, (uint64_t)v144, &qword_100967F08);
  sub_1000AFA94(&qword_100967F10);
  sub_1000AFA94(&qword_100967F18);
  sub_1006872F4();
  sub_10009DE8C(&qword_100967F38, &qword_100967F18, (void (*)(void))sub_100687394);
  _ConditionalContent<>.init(storage:)();
  uint64_t v93 = v120;
  uint64_t v68 = (uint64_t)v129;
  uint64_t v94 = v130;
  uint64_t v67 = v131;
LABEL_9:
  uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
  uint64_t v96 = v128;
  uint64_t v97 = v67;
  v95(v65, v128, v67);
  uint64_t v98 = v132;
  sub_1000AEF2C(v68, v132, &qword_10094C768);
  long long v141 = v163;
  long long v142 = v164;
  __int16 v143 = v165;
  long long v137 = v159[2];
  long long v138 = v160;
  long long v139 = v161;
  long long v140 = v162;
  long long v133 = v157;
  long long v134 = v158;
  long long v135 = v159[0];
  long long v136 = v159[1];
  v95(v93, v65, v97);
  uint64_t v99 = sub_1000AFA94(&qword_100967F50);
  sub_1000AEF2C(v98, (uint64_t)&v93[*(int *)(v99 + 48)], &qword_10094C768);
  uint64_t v100 = *(int *)(v99 + 64);
  long long v101 = v142;
  v144[8] = v141;
  v144[9] = v142;
  long long v102 = v137;
  long long v103 = v138;
  v144[4] = v137;
  v144[5] = v138;
  long long v105 = v139;
  long long v104 = v140;
  v144[6] = v139;
  v144[7] = v140;
  long long v106 = v133;
  long long v107 = v134;
  v144[0] = v133;
  v144[1] = v134;
  long long v109 = v135;
  long long v108 = v136;
  v144[2] = v135;
  v144[3] = v136;
  uint64_t v110 = &v93[v100];
  *((_OWORD *)v110 + 8) = v141;
  *((_OWORD *)v110 + 9) = v101;
  *((_OWORD *)v110 + 4) = v102;
  *((_OWORD *)v110 + 5) = v103;
  *((_OWORD *)v110 + 6) = v105;
  *((_OWORD *)v110 + 7) = v104;
  *(_OWORD *)uint64_t v110 = v106;
  *((_OWORD *)v110 + 1) = v107;
  __int16 v145 = v143;
  *((_WORD *)v110 + 80) = v143;
  *((_OWORD *)v110 + 2) = v109;
  *((_OWORD *)v110 + 3) = v108;
  sub_100687464((uint64_t)v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1006873E4);
  sub_10008DB18(v68, &qword_10094C768);
  uint64_t v111 = *(void (**)(char *, uint64_t))(v94 + 8);
  v111(v96, v97);
  long long v154 = v141;
  long long v155 = v142;
  __int16 v156 = v143;
  long long v150 = v137;
  long long v151 = v138;
  long long v152 = v139;
  long long v153 = v140;
  v147[0] = v133;
  v147[1] = v134;
  long long v148 = v135;
  long long v149 = v136;
  sub_100687464((uint64_t)v147, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1006874E0);
  sub_10008DB18(v98, &qword_10094C768);
  return ((uint64_t (*)(char *, uint64_t))v111)(v65, v97);
}

uint64_t sub_100684068(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FriendsHighlightCardView();
  sub_1000AEF2C(a1 + *(int *)(v2 + 28), (uint64_t)v7, &qword_10094C750);
  if (!v8) {
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
  uint64_t v3 = sub_10007E4EC(v7, v8);
  uint64_t v4 = a1 + *(int *)(v2 + 24);
  memset(v6, 0, sizeof(v6));
  sub_100504520(v4, (uint64_t)v6, *v3);
  sub_10008DB18((uint64_t)v6, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
}

uint64_t sub_100684110(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FriendsHighlightCardView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  v12[3] = *(void *)(v6 + *(int *)(type metadata accessor for FriendsHighlightCard() + 36));
  sub_100687EAC(a1, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100687B38((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_100967F58);
  type metadata accessor for UUID();
  sub_1000AFA94(&qword_100967F60);
  sub_1000A132C(&qword_100967F68, &qword_100967F58);
  uint64_t v9 = sub_1000A1370(&qword_100967F70);
  unint64_t v10 = sub_100687660();
  v12[1] = v9;
  v12[2] = v10;
  swift_getOpaqueTypeConformance2();
  sub_100687FA0(&qword_100967FB0, (void (*)(uint64_t))type metadata accessor for ActivitySharingHighlightViewModel);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100684354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v52 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = a1;
  uint64_t v4 = type metadata accessor for FriendsHighlightCardView();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v59 = *(void *)(v60 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100967FA8);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100967F98);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v51 = sub_1000AFA94(&qword_100967F80);
  __chkstk_darwin(v51);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000AFA94(&qword_100967FB8);
  uint64_t v20 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_100967F70);
  __chkstk_darwin(v53);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v25 = sub_1000AFA94(&qword_100967FC0);
  sub_100684A14(v3, v62, (uint64_t)&v10[*(int *)(v25 + 44)]);
  LOBYTE(v3) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_1000AEF2C((uint64_t)v10, (uint64_t)v14, &qword_100967FA8);
  id v34 = &v14[*(int *)(v12 + 44)];
  char *v34 = v3;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_10008DB18((uint64_t)v10, &qword_100967FA8);
  sub_1000AEEC8((uint64_t)v14, (uint64_t)v17, &qword_100967F98);
  LOBYTE(v3) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_1000AEF2C((uint64_t)v17, (uint64_t)v19, &qword_100967F98);
  uint64_t v43 = &v19[*(int *)(v51 + 36)];
  *uint64_t v43 = v3;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_10008DB18((uint64_t)v17, &qword_100967F98);
  static Axis.Set.horizontal.getter();
  static Alignment.center.getter();
  sub_10009DE8C(&qword_100967F88, &qword_100967F80, (void (*)(void))sub_100687760);
  View.containerRelativeFrame(_:alignment:)();
  sub_10008DB18((uint64_t)v19, &qword_100967F80);
  uint64_t v44 = v54;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v22, v54);
  v24[*(int *)(v53 + 36)] = 0;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v44);
  uint64_t v45 = v55;
  sub_100687EAC(v62, v55, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v46 = v58;
  sub_100687EAC(v52, v58, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  unint64_t v47 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v48 = (v56 + *(unsigned __int8 *)(v60 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v49 = swift_allocObject();
  sub_100687B38(v45, v49 + v47, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  sub_100687B38(v46, v49 + v48, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  sub_100687660();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18((uint64_t)v24, &qword_100967F70);
}

uint64_t sub_100684934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 28));
  uint64_t v4 = type metadata accessor for FriendsHighlightCardView();
  sub_1000AEF2C(a2 + *(int *)(v4 + 28), (uint64_t)v11, &qword_10094C750);
  if (!v12) {
    return sub_10008DB18((uint64_t)v11, &qword_10094C750);
  }
  uint64_t v5 = (char **)sub_10007E4EC(v11, v12);
  uint64_t v6 = a2 + *(int *)(v4 + 24);
  v10[3] = &type metadata for FriendCardActionContext;
  v10[0] = v3;
  uint64_t v7 = *v5;
  id v8 = v3;
  sub_1004FA518(v6, (uint64_t)v10, v7);

  sub_10008DB18((uint64_t)v10, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v11);
}

uint64_t sub_100684A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a3;
  uint64_t v85 = a1;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  __chkstk_darwin(v5);
  uint64_t v81 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v80 = (uint64_t)&v76 - v8;
  uint64_t v9 = sub_1000AFA94(&qword_100967FC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100967FD0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v76 - v17;
  uint64_t v87 = (uint64_t)&v76 - v17;
  sub_100685348(a1, a2, (uint64_t)v11);
  char v19 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_100967FC8);
  uint64_t v28 = &v15[*(int *)(v13 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_100967FC8);
  sub_1000AEEC8((uint64_t)v15, (uint64_t)v18, &qword_100967FD0);
  uint64_t v29 = static Alignment.center.getter();
  uint64_t v91 = v30;
  uint64_t v92 = v29;
  uint64_t v77 = a2;
  sub_1003411AC((uint64_t)&v124);
  unsigned long long v33 = v124;
  uint64_t v31 = v33 >> 64;
  uint64_t v32 = v33;
  uint64_t v93 = v124;
  long long v34 = v125;
  char v35 = v126;
  if (*(unsigned __int8 *)(a2 + 8) >= 2u) {
    uint64_t v36 = 0x4028000000000000;
  }
  else {
    uint64_t v36 = 0x4034000000000000;
  }
  char v37 = static Edge.Set.all.getter();
  char v38 = *(unsigned char *)(v85 + *(int *)(type metadata accessor for FriendsHighlightCardView() + 32));
  double v39 = INFINITY;
  if (v38) {
    double v39 = 0.0;
  }
  double v89 = v39;
  uint64_t v209 = v92;
  uint64_t v210 = v91;
  uint64_t v211 = v32;
  uint64_t v212 = v31;
  long long v213 = v34;
  char v214 = v35;
  char v215 = v37;
  long long v216 = xmmword_100755AF0;
  uint64_t v217 = v36;
  uint64_t v218 = 0;
  char v219 = 0;
  static Alignment.center.getter();
  sub_1004DEB4C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v172, 0.0, 1, v89, v38);
  sub_100357674(v93, v31, v34, *((uint64_t *)&v34 + 1), v35);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v86 = v195;
  uint64_t v88 = v197;
  uint64_t v91 = v199;
  double v89 = v201;
  uint64_t v92 = v203;
  uint64_t v93 = v205;
  uint64_t v78 = v208;
  uint64_t v79 = v207;
  unsigned __int8 v171 = v196;
  unsigned __int8 v169 = v198;
  unsigned __int8 v167 = v200;
  char v165 = v202;
  char v163 = v204;
  char v161 = v206;
  sub_100341820((uint64_t)v158);
  long long v192 = v158[6];
  long long v193 = v158[7];
  __int16 v194 = v159;
  long long v188 = v158[2];
  long long v189 = v158[3];
  long long v191 = v158[5];
  long long v190 = v158[4];
  long long v187 = v158[1];
  long long v186 = v158[0];
  LODWORD(v77) = static Edge.Set.horizontal.getter();
  uint64_t v40 = v80;
  sub_100092088(v80);
  uint64_t v42 = v81;
  uint64_t v41 = v82;
  uint64_t v43 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, enum case for DynamicTypeSize.accessibility1(_:), v83);
  static DynamicTypeSize.< infix(_:_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v44(v42, v43);
  v44((char *)v40, v43);
  EdgeInsets.init(_all:)();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  long long v100 = v192;
  long long v101 = v193;
  LOWORD(v102) = v194;
  long long v96 = v188;
  long long v97 = v189;
  long long v98 = v190;
  long long v99 = v191;
  long long v94 = v186;
  long long v95 = v187;
  unsigned __int8 v103 = 0;
  uint64_t v53 = (uint64_t)v90;
  sub_1000AEF2C(v87, (uint64_t)v90, &qword_100967FD0);
  LOBYTE(v41) = v171;
  LODWORD(v82) = v171;
  unsigned __int8 v54 = v169;
  LODWORD(v83) = v169;
  LOBYTE(v42) = v167;
  LODWORD(v85) = v167;
  char v55 = v165;
  char v56 = v163;
  LOBYTE(v40) = v161;
  LODWORD(v81) = v103;
  uint64_t v57 = v53;
  uint64_t v58 = v84;
  sub_1000AEF2C(v57, v84, &qword_100967FD0);
  uint64_t v59 = sub_1000AFA94(&qword_100967FD8);
  uint64_t v60 = (void *)(v58 + *(int *)(v59 + 48));
  v104[10] = v182;
  v104[11] = v183;
  v104[12] = v184;
  v104[6] = v178;
  v104[7] = v179;
  v104[8] = v180;
  v104[9] = v181;
  v104[4] = v176;
  v104[5] = v177;
  v104[2] = v174;
  v104[3] = v175;
  v104[0] = v172;
  v104[1] = v173;
  *(void *)&v104[13] = v185;
  *((void *)&v104[13] + 1) = v86;
  LOBYTE(v104[14]) = v41;
  *(_DWORD *)((char *)&v104[14] + 1) = *(_DWORD *)v170;
  DWORD1(v104[14]) = *(_DWORD *)&v170[3];
  *((void *)&v104[14] + 1) = v88;
  LOBYTE(v104[15]) = v54;
  *(_DWORD *)((char *)&v104[15] + 1) = *(_DWORD *)v168;
  DWORD1(v104[15]) = *(_DWORD *)&v168[3];
  *((void *)&v104[15] + 1) = v91;
  LOBYTE(v104[16]) = (_BYTE)v42;
  *(_DWORD *)((char *)&v104[16] + 1) = *(_DWORD *)v166;
  DWORD1(v104[16]) = *(_DWORD *)&v166[3];
  *((double *)&v104[16] + 1) = v89;
  LOBYTE(v104[17]) = v55;
  LOBYTE(v42) = v55;
  *(_DWORD *)((char *)&v104[17] + 1) = *(_DWORD *)v164;
  DWORD1(v104[17]) = *(_DWORD *)&v164[3];
  *((void *)&v104[17] + 1) = v92;
  LOBYTE(v104[18]) = v56;
  LOBYTE(v41) = v56;
  *(_DWORD *)((char *)&v104[18] + 1) = *(_DWORD *)v162;
  DWORD1(v104[18]) = *(_DWORD *)&v162[3];
  *((void *)&v104[18] + 1) = v93;
  LOBYTE(v104[19]) = v40;
  *(_DWORD *)((char *)&v104[19] + 1) = *(_DWORD *)v160;
  DWORD1(v104[19]) = *(_DWORD *)&v160[3];
  uint64_t v62 = v78;
  uint64_t v61 = v79;
  *((void *)&v104[19] + 1) = v79;
  *(void *)&v104[20] = v78;
  memcpy(v60, v104, 0x148uLL);
  uint64_t v63 = v58 + *(int *)(v59 + 64);
  long long v110 = v100;
  long long v111 = v101;
  *(void *)&long long v112 = v102;
  long long v108 = v98;
  long long v109 = v99;
  long long v106 = v96;
  long long v107 = v97;
  long long v64 = v95;
  v105[0] = v94;
  v105[1] = v95;
  LOBYTE(v58) = v77;
  BYTE8(v112) = v77;
  long long v65 = v99;
  long long v66 = v100;
  long long v67 = v97;
  *(_OWORD *)(v63 + 64) = v98;
  *(_OWORD *)(v63 + 80) = v65;
  long long v68 = v111;
  long long v69 = v112;
  *(_OWORD *)(v63 + 96) = v66;
  *(_OWORD *)(v63 + 112) = v68;
  long long v70 = v106;
  *(_OWORD *)uint64_t v63 = v105[0];
  *(_OWORD *)(v63 + 16) = v64;
  *(void *)&long long v113 = v46;
  *((void *)&v113 + 1) = v48;
  *(void *)&long long v114 = v50;
  *((void *)&v114 + 1) = v52;
  char v71 = (char)v81;
  char v115 = (char)v81;
  *(unsigned char *)(v63 + 176) = (_BYTE)v81;
  char v72 = v71;
  *(_OWORD *)(v63 + 32) = v70;
  *(_OWORD *)(v63 + 48) = v67;
  long long v73 = v113;
  long long v74 = v114;
  *(_OWORD *)(v63 + 128) = v69;
  *(_OWORD *)(v63 + 144) = v73;
  *(_OWORD *)(v63 + 160) = v74;
  sub_100687C6C((uint64_t)v104, (void (*)(void, void, void, void, void))sub_100357428);
  sub_1003577C8((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1003574AC);
  sub_10008DB18(v87, &qword_100967FD0);
  v116[6] = v100;
  v116[7] = v101;
  uint64_t v117 = v102;
  v116[2] = v96;
  v116[3] = v97;
  v116[4] = v98;
  v116[5] = v99;
  v116[0] = v94;
  v116[1] = v95;
  char v118 = v58;
  uint64_t v119 = v46;
  uint64_t v120 = v48;
  uint64_t v121 = v50;
  uint64_t v122 = v52;
  char v123 = v72;
  sub_1003577C8((uint64_t)v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1003576F0);
  long long v134 = v182;
  long long v135 = v183;
  long long v136 = v184;
  long long v130 = v178;
  long long v131 = v179;
  long long v132 = v180;
  long long v133 = v181;
  long long v126 = v174;
  long long v127 = v175;
  long long v128 = v176;
  long long v129 = v177;
  unsigned long long v124 = v172;
  long long v125 = v173;
  uint64_t v137 = v185;
  uint64_t v138 = v86;
  char v139 = v82;
  *(_DWORD *)long long v140 = *(_DWORD *)v170;
  *(_DWORD *)&v140[3] = *(_DWORD *)&v170[3];
  uint64_t v141 = v88;
  char v142 = v83;
  *(_DWORD *)__int16 v143 = *(_DWORD *)v168;
  *(_DWORD *)&v143[3] = *(_DWORD *)&v168[3];
  uint64_t v144 = v91;
  char v145 = v85;
  *(_DWORD *)char v146 = *(_DWORD *)v166;
  *(_DWORD *)&v146[3] = *(_DWORD *)&v166[3];
  double v147 = v89;
  char v148 = (char)v42;
  *(_DWORD *)long long v149 = *(_DWORD *)v164;
  *(_DWORD *)&v149[3] = *(_DWORD *)&v164[3];
  uint64_t v150 = v92;
  char v151 = v41;
  *(_DWORD *)long long v152 = *(_DWORD *)v162;
  *(_DWORD *)&v152[3] = *(_DWORD *)&v162[3];
  uint64_t v153 = v93;
  char v154 = v40;
  *(_DWORD *)long long v155 = *(_DWORD *)v160;
  *(_DWORD *)&v155[3] = *(_DWORD *)&v160[3];
  uint64_t v156 = v61;
  uint64_t v157 = v62;
  sub_100687C6C((uint64_t)&v124, (void (*)(void, void, void, void, void))sub_100357674);
  return sub_10008DB18((uint64_t)v90, &qword_100967FD0);
}

uint64_t sub_100685348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = sub_1000AFA94(&qword_100967FE0);
  __chkstk_darwin(v29);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_100967FE8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AFA94(&qword_100967FF0);
  __chkstk_darwin(v27);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v24 - v15;
  sub_100092088((uint64_t)&v24 - v15);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for DynamicTypeSize.accessibility1(_:), v10);
  char v17 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  v18(v16, v10);
  if (v17)
  {
    *(void *)uint64_t v9 = static VerticalAlignment.top.getter();
    *((void *)v9 + 1) = 0x4020000000000000;
    v9[16] = 0;
    uint64_t v19 = sub_1000AFA94(&qword_100968010);
    sub_100685728(v26, a1, (uint64_t)&v9[*(int *)(v19 + 44)]);
    uint64_t v20 = &qword_100967FF0;
    sub_1000AEF2C((uint64_t)v9, (uint64_t)v7, &qword_100967FF0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100968000, &qword_100967FF0);
    sub_1000A132C(&qword_100968008, &qword_100967FE0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v21 = (uint64_t)v9;
  }
  else
  {
    *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
    *((void *)v5 + 1) = 0x4020000000000000;
    v5[16] = 0;
    uint64_t v22 = sub_1000AFA94(&qword_100967FF8);
    sub_100685F54(v26, a1, (uint64_t)&v5[*(int *)(v22 + 44)]);
    uint64_t v20 = &qword_100967FE0;
    sub_1000AEF2C((uint64_t)v5, (uint64_t)v7, &qword_100967FE0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100968000, &qword_100967FF0);
    sub_1000A132C(&qword_100968008, &qword_100967FE0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v21 = (uint64_t)v5;
  }
  return sub_10008DB18(v21, v20);
}

uint64_t sub_100685728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v92 = a2;
  uint64_t v94 = a1;
  uint64_t v3 = type metadata accessor for FriendsHighlightCardView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v93 = v3 - 8;
  uint64_t v87 = v4;
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = v5;
  uint64_t v89 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivitySharingHighlight();
  __chkstk_darwin(v6 - 8);
  uint64_t v86 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v83 - v13;
  uint64_t v15 = type metadata accessor for ActivitySharingAvatarView();
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100958548);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v83 - v24;
  sub_100687EAC(v94, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v26 = *(int *)(v16 + 28);
  *(void *)&long long v99 = 0;
  sub_1000AFA94(&qword_1009547D8);
  State.init(wrappedValue:)();
  *(_OWORD *)&v18[v26] = v101;
  LOBYTE(v26) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100687EAC((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  char v35 = &v22[*(int *)(v20 + 44)];
  *char v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_100687CAC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  long long v97 = v22;
  long long v95 = v25;
  sub_1000AEEC8((uint64_t)v22, (uint64_t)v25, &qword_100958548);
  uint64_t v98 = static HorizontalAlignment.leading.getter();
  uint64_t v36 = v92;
  sub_100092088((uint64_t)v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.xLarge(_:), v8);
  LODWORD(v90) = static DynamicTypeSize.< infix(_:_:)();
  char v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v11, v8);
  v37(v14, v8);
  uint64_t v38 = v94;
  sub_100686D50((uint64_t)v113);
  *(_OWORD *)&v115[87] = v113[5];
  *(_OWORD *)&v115[71] = v113[4];
  *(_OWORD *)&v115[55] = v113[3];
  *(_OWORD *)&v115[39] = v113[2];
  *(_OWORD *)&v115[135] = v113[8];
  *(_OWORD *)&v115[119] = v113[7];
  *(_OWORD *)&v115[103] = v113[6];
  *(_OWORD *)&v115[7] = v113[0];
  char v116 = 0;
  v115[151] = v114;
  *(_OWORD *)&v115[23] = v113[1];
  int v96 = 0;
  uint64_t v39 = v36;
  uint64_t v40 = *(void *)(v36 + *(int *)(v93 + 28));
  swift_getKeyPath();
  *(void *)&long long v101 = v40;
  sub_100687FA0((unint64_t *)&qword_100968510, (void (*)(uint64_t))type metadata accessor for MessagesAppInstallationObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  if (*(unsigned char *)(v40 + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled) == 1)
  {
    uint64_t v53 = v86;
    sub_100687EAC(v38, v86, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
    type metadata accessor for ActivitySharingReplyCoordinator();
    swift_allocObject();
    sub_10017BFB4(v53, 0);
    uint64_t v54 = v89;
    sub_100687EAC(v39, v89, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
    unint64_t v55 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    uint64_t v56 = swift_allocObject();
    sub_100687B38(v54, v56 + v55, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
    sub_100633F9C((uint64_t)sub_100687F18, v56, (uint64_t)v117);
    uint64_t v41 = v117[0];
    uint64_t v42 = v117[1];
    uint64_t v43 = v117[2];
    uint64_t v44 = v117[3];
    uint64_t v45 = v117[4];
    uint64_t v46 = v118;
    uint64_t v47 = v119;
    uint64_t v48 = v120;
    uint64_t v49 = v121;
    uint64_t v50 = v122;
    uint64_t v51 = v123;
    uint64_t v52 = v124;
  }
  uint64_t v92 = v42;
  uint64_t v93 = v45;
  uint64_t v87 = v46;
  uint64_t v88 = v47;
  uint64_t v94 = v52;
  if (v90) {
    uint64_t v57 = 0x4000000000000000;
  }
  else {
    uint64_t v57 = 0;
  }
  uint64_t v89 = v48;
  uint64_t v90 = v57;
  uint64_t v58 = (uint64_t)v97;
  uint64_t v59 = v43;
  uint64_t v60 = v49;
  sub_1000AEF2C((uint64_t)v95, (uint64_t)v97, &qword_100958548);
  uint64_t v61 = v58;
  uint64_t v62 = v91;
  sub_1000AEF2C(v61, v91, &qword_100958548);
  uint64_t v63 = (int *)sub_1000AFA94(&qword_100968018);
  long long v64 = (_OWORD *)(v62 + v63[12]);
  *(void *)&long long v99 = v98;
  *((void *)&v99 + 1) = v57;
  LOBYTE(v100[0]) = v96;
  *(_OWORD *)((char *)&v100[6] + 1) = *(_OWORD *)&v115[96];
  *(_OWORD *)((char *)&v100[7] + 1) = *(_OWORD *)&v115[112];
  *(_OWORD *)((char *)&v100[8] + 1) = *(_OWORD *)&v115[128];
  *(void *)((char *)&v100[9] + 1) = *(void *)&v115[144];
  *(_OWORD *)((char *)&v100[2] + 1) = *(_OWORD *)&v115[32];
  *(_OWORD *)((char *)&v100[3] + 1) = *(_OWORD *)&v115[48];
  *(_OWORD *)((char *)&v100[4] + 1) = *(_OWORD *)&v115[64];
  *(_OWORD *)((char *)&v100[5] + 1) = *(_OWORD *)&v115[80];
  *(_OWORD *)((char *)&v100[1] + 1) = *(_OWORD *)&v115[16];
  *(_OWORD *)((char *)v100 + 1) = *(_OWORD *)v115;
  long long v65 = v100[8];
  v64[8] = v100[7];
  v64[9] = v65;
  *(_OWORD *)((char *)v64 + 153) = *(_OWORD *)((char *)&v100[8] + 9);
  long long v66 = v100[4];
  v64[4] = v100[3];
  v64[5] = v66;
  long long v67 = v100[6];
  v64[6] = v100[5];
  v64[7] = v67;
  long long v68 = v100[0];
  *long long v64 = v99;
  v64[1] = v68;
  long long v69 = v100[2];
  v64[2] = v100[1];
  v64[3] = v69;
  uint64_t v70 = v62 + v63[16];
  *(void *)uint64_t v70 = 0;
  *(unsigned char *)(v70 + 8) = 0;
  char v71 = (uint64_t *)(v62 + v63[20]);
  uint64_t v72 = v92;
  *char v71 = v41;
  v71[1] = v72;
  v71[2] = v59;
  v71[3] = v44;
  uint64_t v85 = v50;
  uint64_t v86 = v44;
  uint64_t v73 = v94;
  uint64_t v74 = v87;
  uint64_t v75 = v88;
  v71[4] = v93;
  v71[5] = v74;
  uint64_t v76 = v89;
  v71[6] = v75;
  v71[7] = v76;
  v71[8] = v60;
  v71[9] = v50;
  uint64_t v84 = v51;
  v71[10] = v51;
  v71[11] = v73;
  sub_100687D14((uint64_t)&v99);
  uint64_t v82 = v51;
  uint64_t v81 = v50;
  uint64_t v77 = v92;
  uint64_t v78 = v86;
  uint64_t v79 = v93;
  sub_1003578B8(v41, v92, v59, v86, v93, v74, v75, v76, v60, v81, v82);
  sub_10008DB18((uint64_t)v95, &qword_100958548);
  sub_1003579BC(v41, v77, v59, v78, v79, v74, v75, v76, v60, v85, v84);
  long long v109 = *(_OWORD *)&v115[96];
  long long v110 = *(_OWORD *)&v115[112];
  long long v111 = *(_OWORD *)&v115[128];
  long long v105 = *(_OWORD *)&v115[32];
  long long v106 = *(_OWORD *)&v115[48];
  long long v107 = *(_OWORD *)&v115[64];
  long long v108 = *(_OWORD *)&v115[80];
  long long v103 = *(_OWORD *)v115;
  *(void *)&long long v101 = v98;
  *((void *)&v101 + 1) = v90;
  char v102 = v96;
  uint64_t v112 = *(void *)&v115[144];
  long long v104 = *(_OWORD *)&v115[16];
  sub_100687DE0((uint64_t)&v101);
  return sub_10008DB18((uint64_t)v97, &qword_100958548);
}

uint64_t sub_100685F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v33 = a3;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_100968020);
  __chkstk_darwin(v12 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - v15;
  *(void *)uint64_t v16 = static VerticalAlignment.top.getter();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = sub_1000AFA94(&qword_100968028);
  sub_1006862F4(a1, a2, (uint64_t)&v16[*(int *)(v17 + 44)]);
  uint64_t v31 = static HorizontalAlignment.leading.getter();
  sub_100092088((uint64_t)v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for DynamicTypeSize.xLarge(_:), v5);
  LOBYTE(a2) = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v8, v5);
  v18(v11, v5);
  if (a2) {
    uint64_t v19 = 0x4000000000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  sub_100686D50((uint64_t)v34);
  *(_OWORD *)&v36[103] = v34[6];
  *(_OWORD *)&v36[119] = v34[7];
  *(_OWORD *)&v36[135] = v34[8];
  *(_OWORD *)&v36[39] = v34[2];
  *(_OWORD *)&v36[55] = v34[3];
  *(_OWORD *)&v36[71] = v34[4];
  *(_OWORD *)&v36[87] = v34[5];
  *(_OWORD *)&v36[7] = v34[0];
  char v37 = 0;
  v36[151] = v35;
  *(_OWORD *)&v36[23] = v34[1];
  uint64_t v20 = v32;
  sub_1000AEF2C((uint64_t)v16, v32, &qword_100968020);
  uint64_t v21 = v33;
  sub_1000AEF2C(v20, v33, &qword_100968020);
  uint64_t v22 = (_OWORD *)(v21 + *(int *)(sub_1000AFA94(&qword_100968030) + 48));
  uint64_t v23 = v31;
  *(void *)&long long v38 = v31;
  *((void *)&v38 + 1) = v19;
  LOBYTE(v39[0]) = 0;
  *(_OWORD *)((char *)&v39[6] + 1) = *(_OWORD *)&v36[96];
  *(_OWORD *)((char *)&v39[7] + 1) = *(_OWORD *)&v36[112];
  *(_OWORD *)((char *)&v39[8] + 1) = *(_OWORD *)&v36[128];
  *(void *)((char *)&v39[9] + 1) = *(void *)&v36[144];
  *(_OWORD *)((char *)&v39[2] + 1) = *(_OWORD *)&v36[32];
  *(_OWORD *)((char *)&v39[3] + 1) = *(_OWORD *)&v36[48];
  *(_OWORD *)((char *)&v39[4] + 1) = *(_OWORD *)&v36[64];
  *(_OWORD *)((char *)&v39[5] + 1) = *(_OWORD *)&v36[80];
  *(_OWORD *)((char *)&v39[1] + 1) = *(_OWORD *)&v36[16];
  *(_OWORD *)((char *)v39 + 1) = *(_OWORD *)v36;
  long long v24 = v39[8];
  v22[8] = v39[7];
  v22[9] = v24;
  *(_OWORD *)((char *)v22 + 153) = *(_OWORD *)((char *)&v39[8] + 9);
  long long v25 = v39[4];
  v22[4] = v39[3];
  v22[5] = v25;
  long long v26 = v39[6];
  v22[6] = v39[5];
  v22[7] = v26;
  long long v27 = v39[0];
  *uint64_t v22 = v38;
  v22[1] = v27;
  long long v28 = v39[2];
  v22[2] = v39[1];
  v22[3] = v28;
  sub_100687D14((uint64_t)&v38);
  sub_10008DB18((uint64_t)v16, &qword_100968020);
  long long v48 = *(_OWORD *)&v36[96];
  long long v49 = *(_OWORD *)&v36[112];
  long long v50 = *(_OWORD *)&v36[128];
  long long v44 = *(_OWORD *)&v36[32];
  long long v45 = *(_OWORD *)&v36[48];
  long long v46 = *(_OWORD *)&v36[64];
  long long v47 = *(_OWORD *)&v36[80];
  long long v42 = *(_OWORD *)v36;
  v40[0] = v23;
  v40[1] = v19;
  char v41 = 0;
  uint64_t v51 = *(void *)&v36[144];
  long long v43 = *(_OWORD *)&v36[16];
  sub_100687DE0((uint64_t)v40);
  return sub_10008DB18(v20, &qword_100968020);
}

uint64_t sub_1006862F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v95 = a3;
  *(void *)&long long v96 = a2;
  uint64_t v88 = sub_1000AFA94(&qword_100953230);
  __chkstk_darwin(v88);
  uint64_t v82 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v97 = (char *)&v76 - v6;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  uint64_t v91 = v8;
  __chkstk_darwin(v7);
  uint64_t v87 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v76 - v11;
  uint64_t v83 = sub_1000AFA94(&qword_100953238);
  __chkstk_darwin(v83);
  uint64_t v79 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v81 = (uint64_t)&v76 - v14;
  uint64_t v15 = type metadata accessor for FriendsHighlightCardView();
  uint64_t v16 = v15 - 8;
  *(void *)&long long v84 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v84 + 64);
  __chkstk_darwin(v15);
  *(void *)&long long v85 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ActivitySharingHighlight();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100968038);
  uint64_t v89 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v80 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100968040);
  __chkstk_darwin(v23 - 8);
  uint64_t v94 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  long long v27 = (char *)&v76 - v26;
  uint64_t v28 = type metadata accessor for ActivitySharingAvatarView();
  uint64_t v29 = v28 - 8;
  __chkstk_darwin(v28);
  uint64_t v93 = (uint64_t)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v76 - v32;
  uint64_t v34 = a1;
  sub_100687EAC(a1, (uint64_t)&v76 - v32, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v35 = *(int *)(v29 + 28);
  *(void *)&long long v98 = 0;
  sub_1000AFA94(&qword_1009547D8);
  State.init(wrappedValue:)();
  uint64_t v92 = v33;
  *(_OWORD *)&v33[v35] = v107[0];
  uint64_t v36 = v96;
  uint64_t v37 = *(void *)(v96 + *(int *)(v16 + 28));
  swift_getKeyPath();
  *(void *)&v107[0] = v37;
  sub_100687FA0((unint64_t *)&qword_100968510, (void (*)(uint64_t))type metadata accessor for MessagesAppInstallationObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v37 + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v27, 1, 1, v21);
    goto LABEL_5;
  }
  uint64_t v76 = v21;
  uint64_t v77 = v27;
  sub_100687EAC(v34, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlight);
  type metadata accessor for ActivitySharingReplyCoordinator();
  swift_allocObject();
  sub_10017BFB4((uint64_t)v20, 0);
  uint64_t v38 = v36;
  uint64_t v39 = v85;
  sub_100687EAC(v38, v85, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  unint64_t v40 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v41 = swift_allocObject();
  sub_100687B38(v39, v41 + v40, (uint64_t (*)(void))type metadata accessor for FriendsHighlightCardView);
  sub_100633F9C((uint64_t)sub_100687F18, v41, (uint64_t)v109);
  long long v96 = v109[0];
  uint64_t v42 = v110;
  char v43 = v111;
  long long v84 = v112;
  long long v85 = v109[1];
  long long v78 = v113;
  uint64_t v44 = v114;
  uint64_t v45 = v115;
  char v46 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v106 = 0;
  long long v98 = v96;
  long long v99 = v85;
  *(void *)&long long v100 = v42;
  BYTE8(v100) = v43;
  long long v101 = v84;
  long long v102 = v78;
  *(void *)&long long v103 = v44;
  *((void *)&v103 + 1) = v45;
  LOBYTE(v104) = v46;
  *((void *)&v104 + 1) = v47;
  *(void *)&v105[0] = v48;
  *((void *)&v105[0] + 1) = v49;
  *(void *)&v105[1] = v50;
  BYTE8(v105[1]) = 0;
  uint64_t v51 = v90;
  uint64_t v52 = *(void (**)(char *, void, uint64_t))(v91 + 104);
  v52(v86, enum case for DynamicTypeSize.xSmall(_:), v90);
  uint64_t v53 = v87;
  v52(v87, enum case for DynamicTypeSize.xxxLarge(_:), v51);
  sub_100687FA0((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v55 = v88;
    uint64_t v56 = &v97[*(int *)(v88 + 48)];
    uint64_t v58 = v90;
    uint64_t v57 = v91;
    uint64_t v59 = *(void (**)(void))(v91 + 32);
    v59();
    *(void *)&long long v96 = v56;
    ((void (*)(char *, char *, uint64_t))v59)(v56, v53, v58);
    uint64_t v60 = v82;
    uint64_t v61 = &v82[*(int *)(v55 + 48)];
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v62(v82, v97, v58);
    v62(v61, v56, v58);
    uint64_t v63 = (uint64_t)v79;
    ((void (*)(char *, char *, uint64_t))v59)(v79, v60, v58);
    long long v64 = *(void (**)(char *, uint64_t))(v57 + 8);
    v64(v61, v58);
    long long v65 = &v60[*(int *)(v88 + 48)];
    ((void (*)(char *, char *, uint64_t))v59)(v60, v97, v58);
    ((void (*)(char *, void, uint64_t))v59)(v65, v96, v58);
    ((void (*)(uint64_t, char *, uint64_t))v59)(v63 + *(int *)(v83 + 36), v65, v58);
    v64(v60, v58);
    uint64_t v66 = v81;
    sub_1000AEEC8(v63, v81, &qword_100953238);
    sub_1000AFA94(&qword_100968050);
    sub_10009DE8C(&qword_100968058, &qword_100968050, (void (*)(void))sub_100687FE8);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    long long v67 = v80;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v66, &qword_100953238);
    v107[6] = v104;
    v108[0] = v105[0];
    *(_OWORD *)((char *)v108 + 9) = *(_OWORD *)((char *)v105 + 9);
    v107[2] = v100;
    v107[3] = v101;
    v107[4] = v102;
    v107[5] = v103;
    v107[0] = v98;
    v107[1] = v99;
    sub_10068803C((uint64_t)v107);
    uint64_t v68 = v89;
    uint64_t v69 = v76;
    long long v27 = v77;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v77, v67, v76);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v27, 0, 1, v69);
LABEL_5:
    uint64_t v71 = (uint64_t)v92;
    uint64_t v70 = v93;
    sub_100687EAC((uint64_t)v92, v93, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
    uint64_t v72 = v94;
    sub_1000AEF2C((uint64_t)v27, v94, &qword_100968040);
    uint64_t v73 = v95;
    sub_100687EAC(v70, v95, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
    uint64_t v74 = sub_1000AFA94(&qword_100968048);
    uint64_t v75 = v73 + *(int *)(v74 + 48);
    *(void *)uint64_t v75 = 0;
    *(unsigned char *)(v75 + 8) = 1;
    sub_1000AEF2C(v72, v73 + *(int *)(v74 + 64), &qword_100968040);
    sub_10008DB18((uint64_t)v27, &qword_100968040);
    sub_100687CAC(v71, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
    sub_10008DB18(v72, &qword_100968040);
    return sub_100687CAC(v70, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  }
  __break(1u);
  return result;
}

uint64_t sub_100686D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003409B0((uint64_t)&v38);
  uint64_t v35 = v39;
  uint64_t v36 = v38;
  int v34 = v40;
  uint64_t v37 = v41;
  static Font.subheadline.getter();
  uint64_t v6 = enum case for Font.Leading.tight(_:);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, enum case for Font.Leading.tight(_:), v2);
  uint64_t v32 = Font.leading(_:)();
  swift_release();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = swift_getKeyPath();
  sub_100340D98(&v38);
  uint64_t v28 = v39;
  uint64_t v29 = v38;
  int v9 = v40;
  uint64_t v30 = v41;
  static Font.caption.getter();
  v7(v5, v6, v2);
  uint64_t v27 = Font.leading(_:)();
  swift_release();
  v8(v5, v2);
  uint64_t v10 = swift_getKeyPath();
  int v25 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v11 = swift_getKeyPath();
  uint64_t v26 = v11;
  LOBYTE(v3) = v34;
  char v47 = v34;
  char v46 = 0;
  int v24 = v9;
  char v44 = v9;
  char v42 = 0;
  *(_DWORD *)(a1 + 17) = v38;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v38 + 3);
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v45;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v43;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v43[3];
  uint64_t v13 = v35;
  uint64_t v12 = v36;
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v3;
  char v14 = v3;
  uint64_t v15 = v32;
  uint64_t v16 = KeyPath;
  *(void *)(a1 + 24) = v37;
  *(void *)(a1 + 32) = v16;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = 1;
  *(unsigned char *)(a1 + 64) = 0;
  uint64_t v20 = v28;
  uint64_t v19 = v29;
  *(void *)(a1 + 72) = v29;
  *(void *)(a1 + 80) = v20;
  *(unsigned char *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v17;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v27;
  *(_DWORD *)(a1 + 120) = v25;
  *(void *)(a1 + 128) = v11;
  *(void *)(a1 + 136) = 1;
  *(unsigned char *)(a1 + 144) = 0;
  sub_1000A1750(v12, v13, v14);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = v20;
  uint64_t v22 = v20;
  LOBYTE(v20) = v24;
  sub_1000A1750(v19, v22, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A06C0(v19, v21, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v36, v35, v34);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006870C0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FriendsHighlightCardView();
  sub_1000AEF2C(a2 + *(int *)(v4 + 28), (uint64_t)v11, &qword_10094C750);
  if (!v12) {
    return sub_10008DB18((uint64_t)v11, &qword_10094C750);
  }
  uint64_t v5 = sub_10007E4EC(v11, v12);
  uint64_t v6 = a2 + *(int *)(v4 + 24);
  v10[3] = sub_100187B74();
  v10[0] = a1;
  uint64_t v7 = *v5;
  id v8 = a1;
  sub_1004FDF44(v6, (uint64_t)v10, v7);
  sub_10008DB18((uint64_t)v10, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v11);
}

uint64_t sub_100687188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_100960028);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v6 = sub_1000AFA94(&qword_100967F00);
  sub_1006834CC(v1, &v5[*(int *)(v6 + 44)]);
  uint64_t v7 = static Alignment.center.getter();
  sub_1004DEAF0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return sub_10008DB18((uint64_t)v5, &qword_100960028);
}

uint64_t sub_100687288()
{
  uint64_t v1 = *(void *)(type metadata accessor for FriendsHighlightCardView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100684068(v2);
}

uint64_t sub_1006872E8(uint64_t result)
{
  *(unsigned char *)(result + 161) = 1;
  return result;
}

unint64_t sub_1006872F4()
{
  unint64_t result = qword_100967F20;
  if (!qword_100967F20)
  {
    sub_1000A1370(&qword_100967F10);
    sub_1000A132C(&qword_100967F28, &qword_100967F30);
    sub_1002AA3AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967F20);
  }
  return result;
}

uint64_t sub_100687394()
{
  return sub_10009DE8C(&qword_100967F40, &qword_100967F48, (void (*)(void))sub_1006873BC);
}

uint64_t sub_1006873BC()
{
  return sub_10009DE8C(&qword_10094D790, &qword_10094D798, (void (*)(void))sub_1001A8E08);
}

uint64_t sub_1006873E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100687464(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_WORD *)(a1 + 160));
  return a1;
}

uint64_t sub_1006874E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100687564()
{
  uint64_t v1 = *(void *)(type metadata accessor for FriendsHighlightCardView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100684110(v2);
}

uint64_t sub_1006875D4(uint64_t result)
{
  *(unsigned char *)(result + 161) = 0;
  return result;
}

uint64_t sub_1006875E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FriendsHighlightCardView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100684354(a1, v6, a2);
}

unint64_t sub_100687660()
{
  unint64_t result = qword_100967F78;
  if (!qword_100967F78)
  {
    sub_1000A1370(&qword_100967F70);
    sub_1000A1370(&qword_100967F80);
    sub_10009DE8C(&qword_100967F88, &qword_100967F80, (void (*)(void))sub_100687760);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967F78);
  }
  return result;
}

unint64_t sub_100687760()
{
  unint64_t result = qword_100967F90;
  if (!qword_100967F90)
  {
    sub_1000A1370(&qword_100967F98);
    sub_1000A132C(&qword_100967FA0, &qword_100967FA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100967F90);
  }
  return result;
}

uint64_t sub_100687800()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for FriendsHighlightCardView();
  unint64_t v21 = (v3 + v4 + *(unsigned __int8 *)(*((void *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v6 = (id *)(v1 + v3);

  uint64_t v7 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v8 = (char *)v6 + v7[5];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = (char *)v6 + v7[6];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  uint64_t v13 = (char *)v6 + v2[12];
  uint64_t v14 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  uint64_t v15 = v1 + v21;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v1 + v21, v16);
  }
  else
  {
    swift_release();
  }

  uint64_t v17 = (char *)(v15 + v5[6]);
  v10(v17, v9);
  uint64_t v18 = type metadata accessor for FriendsHighlightCard();
  sub_1000917F8(*(void *)&v17[*(int *)(v18 + 20)], *(void *)&v17[*(int *)(v18 + 20) + 8], v17[*(int *)(v18 + 20) + 16]);
  swift_bridgeObjectRelease();

  uint64_t v19 = v15 + v5[7];
  if (*(void *)(v19 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
  }

  return swift_deallocObject();
}

uint64_t sub_100687B38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100687BA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FriendsHighlightCardView() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100684934(v0 + v2, v5);
}

uint64_t sub_100687C6C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100687CAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100687D14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100687DE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_100687EAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100687F30(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FriendsHighlightCardView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1006870C0(a1, v4);
}

uint64_t sub_100687FA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100687FE8()
{
  unint64_t result = qword_100968060;
  if (!qword_100968060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968060);
  }
  return result;
}

uint64_t sub_10068803C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10005E5F8(v2);
  return a1;
}

unint64_t sub_1006880C8()
{
  unint64_t result = qword_100968068;
  if (!qword_100968068)
  {
    sub_1000A1370(&qword_100960030);
    sub_1000A132C(&qword_100968070, &qword_100960028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968068);
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadCardFactory()
{
  return &type metadata for LoadCardFactory;
}

void sub_100688178(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  unsigned int v16 = a3;
  uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v16 < 3 || a1 ^ 1 | a2)
  {
    os_log_type_t v23 = static os_log_type_t.error.getter();
    int v24 = (void *)HKLogActivity;
    os_log_type_t v25 = v23;
    if (os_log_type_enabled(HKLogActivity, v23))
    {
      sub_100091494(a1, a2, a3);
      sub_100091494(a1, a2, a3);
      os_log_t v33 = v24;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      v34[0] = sub_10008F1F4(0x6472614364616F4CLL, 0xEF79726F74636146, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2080;
      v34[0] = a1;
      v34[1] = a2;
      unsigned __int8 v35 = a3;
      sub_100091494(a1, a2, a3);
      uint64_t v27 = String.init<A>(describing:)();
      v34[0] = sub_10008F1F4(v27, v28, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000917F8(a1, a2, a3);
      sub_1000917F8(a1, a2, a3);
      os_log_t v29 = v33;
      _os_log_impl((void *)&_mh_execute_header, v33, v25, "%s tried making load card with cardType %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    sub_1000CD028(a5, (uint64_t)v34);
    uint64_t v20 = v36;
    if (v36)
    {
      uint64_t v21 = v37;
      sub_10007E4EC(v34, v36);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 0, 1, v22);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v34);
    }
    else
    {
      sub_1000058F4((uint64_t)v34);
      uint64_t v30 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v19, 1, 1, v30);
    }
    *(void *)(a8 + 24) = type metadata accessor for LoadCard();
    *(void *)(a8 + 32) = &off_1008D2310;
    uint64_t v31 = sub_1000B1710((uint64_t *)a8);
    sub_1006200A0((uint64_t)v19, a4 & 1, a6 & 1, 1, (uint64_t)a7, (uint64_t)v31);
  }
}

id UIButton.withLineBreakMode(_:)(uint64_t a1)
{
  id v3 = [v1 titleLabel];
  [v3 setLineBreakMode:a1];

  return v5;
}

unint64_t sub_100688588(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000023;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000021;
      break;
    case 10:
      unint64_t result = 0xD000000000000024;
      break;
    case 11:
      unint64_t result = 0x5F44494C41564E49;
      break;
    case 12:
      unint64_t result = 0x5F544F4E5F59454BLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100688718@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100688588(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for TrendsCoachingGoalBucket(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100688810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsCoachingGoalBucket()
{
  return &type metadata for TrendsCoachingGoalBucket;
}

unint64_t sub_10068884C()
{
  unint64_t result = qword_100968078;
  if (!qword_100968078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968078);
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone()
{
  return &type metadata for Zone;
}

unint64_t sub_1006888B4()
{
  unint64_t result = qword_100968080;
  if (!qword_100968080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968080);
  }
  return result;
}

Swift::Int sub_100688908()
{
  double v1 = *v0;
  double v2 = v0[1];
  Hasher.init(_seed:)();
  sub_100376168(v1, v2);
  return Hasher._finalize()();
}

void sub_10068895C()
{
  sub_100376168(*v0, v0[1]);
}

Swift::Int sub_100688964()
{
  double v1 = *v0;
  double v2 = v0[1];
  Hasher.init(_seed:)();
  sub_100376168(v1, v2);
  return Hasher._finalize()();
}

char *sub_1006889B4(char *a1)
{
  *(void *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_hostingViewController] = 0;
  *(void *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_subView] = 0;
  int v3 = *(void **)&a1[OBJC_IVAR___CHFitnessAppContext_cloudDeviceProvider];
  *(void *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_cloudDeviceProvider] = v3;
  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  id v4 = v3;
  uint64_t v5 = (char *)[super initWithNibName:0 bundle:0];
  unsigned int v6 = *(void **)&v5[OBJC_IVAR___CHLegacyDevicesViewController_cloudDeviceProvider];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  objc_allocWithZone((Class)sub_1000AFA94(&qword_1009680C8));
  id v7 = v6;
  uint64_t v8 = v5;
  swift_retain();
  uint64_t v9 = (void *)UIHostingController.init(rootView:)();
  id v10 = [v9 view];
  uint64_t v11 = *(void **)&v8[OBJC_IVAR___CHLegacyDevicesViewController_subView];
  *(void *)&v8[OBJC_IVAR___CHLegacyDevicesViewController_subView] = v10;

  [v8 addChildViewController:v9];
  unint64_t result = (char *)[v8 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v13 = result;
  unint64_t result = (char *)[v9 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v14 = result;
  [v13 addSubview:result];

  id v15 = [v8 navigationController];
  if (v15)
  {
    unsigned int v16 = v15;
    [v15 setToolbarHidden:0];
  }
  id v17 = [v8 navigationItem];
  id v18 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v8 action:"doneTapped"];
  [v17 setLeftBarButtonItem:v18];
  swift_release();

  return v8;
}

void sub_100688C24()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    swift_bridgeObjectRetain();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [self presenterForPrivacySplashWithIdentifier:v2];

    if (v3)
    {
      id v4 = v3;
      [v4 setPresentingViewController:v1];
      [v4 present];

      double v1 = v4;
    }
    else
    {
      static os_log_type_t.error.getter();
      id v4 = HKLogActivity;
      os_log(_:dso:log:_:_:)();
    }
  }
}

void sub_100688E00()
{
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  [super viewDidLoad];
  double v1 = *(void **)&v0[OBJC_IVAR___CHLegacyDevicesViewController_subView];
  if (!v1) {
    goto LABEL_15;
  }
  id v2 = v1;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v4 = v3;
  [v3 addSubview:v2];

  id v5 = [v0 view];
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unsigned int v6 = v5;
  id v7 = [self systemBackgroundColor];
  [v6 setBackgroundColor:v7];

  id v8 = [v2 leadingAnchor];
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v10 = v9;
  id v11 = [v9 safeAreaLayoutGuide];

  id v12 = [v11 leadingAnchor];
  id v13 = [v8 constraintEqualToAnchor:v12];

  [v13 setActive:1];
  id v14 = [v2 trailingAnchor];
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unsigned int v16 = v15;
  id v17 = [v15 safeAreaLayoutGuide];

  id v18 = [v17 trailingAnchor];
  id v19 = [v14 constraintEqualToAnchor:v18];

  [v19 setActive:1];
  id v20 = [v2 topAnchor];
  id v21 = [v0 view];
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = [v21 safeAreaLayoutGuide];

    id v24 = [v23 topAnchor];
    id v25 = [v20 constraintEqualToAnchor:v24];

    [v25 setActive:1];
    id v26 = [v2 bottomAnchor];
    id v27 = [v0 view];
    if (v27)
    {
      unint64_t v28 = v27;
      id v29 = [v27 bottomAnchor];

      id v30 = [v26 constraintEqualToAnchor:v29];
      [v30 setActive:1];

      return;
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10068928C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for LegacyDevicesViewController()
{
  return self;
}

uint64_t sub_100689340()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100689378()
{
}

uint64_t sub_100689380()
{
  uint64_t v1 = type metadata accessor for IndexSet.Index();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v44 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)v33 - v5;
  uint64_t v7 = type metadata accessor for IndexSet();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100968188);
  uint64_t v12 = v11 - 8;
  __n128 v13 = __chkstk_darwin(v11);
  id v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v8;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  uint64_t v39 = v8 + 16;
  v38(v10, v0, v7, v13);
  sub_100067BE4(&qword_100968190, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  unsigned __int8 v40 = v10;
  dispatch thunk of Sequence.makeIterator()();
  unsigned int v16 = &v15[*(int *)(v12 + 44)];
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v37 = v2 + 16;
  v36(v6, v16, v1);
  sub_100067BE4(&qword_100968198, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  id v17 = v44;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v35 = sub_100067BE4(&qword_1009681A0, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
  int v18 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19(v17, v1);
  uint64_t v41 = v6;
  uint64_t v42 = v2 + 8;
  v19(v6, v1);
  uint64_t v20 = 0;
  if ((v18 & 1) == 0)
  {
    v33[1] = v18;
    id v21 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v20 = *v22;
    v21(v45, 0);
    id v23 = v40;
    ((void (*)(char *, char *, uint64_t))v38)(v40, v15, v7);
    dispatch thunk of Collection.formIndex(after:)();
    id v24 = *(void (**)(char *, uint64_t))(v43 + 8);
    v43 += 8;
    int v34 = v24;
    v24(v23, v7);
    id v25 = v41;
    while (1)
    {
      v36(v25, v16, v1);
      id v26 = v44;
      dispatch thunk of Collection.endIndex.getter();
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      v19(v26, v1);
      v19(v25, v1);
      if (v27) {
        break;
      }
      unint64_t v28 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v30 = *v29;
      v28(v45, 0);
      objc_super v31 = v40;
      ((void (*)(char *, char *, uint64_t))v38)(v40, v15, v7);
      dispatch thunk of Collection.formIndex(after:)();
      v34(v31, v7);
      if (v30 < v20) {
        uint64_t v20 = v30;
      }
    }
  }
  sub_10008DB18((uint64_t)v15, &qword_100968188);
  return v20;
}

uint64_t sub_100689850()
{
  uint64_t v1 = type metadata accessor for IndexSet.Index();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v44 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)v33 - v5;
  uint64_t v7 = type metadata accessor for IndexSet();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100968188);
  uint64_t v12 = v11 - 8;
  __n128 v13 = __chkstk_darwin(v11);
  id v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v8;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  uint64_t v39 = v8 + 16;
  v38(v10, v0, v7, v13);
  sub_100067BE4(&qword_100968190, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  unsigned __int8 v40 = v10;
  dispatch thunk of Sequence.makeIterator()();
  unsigned int v16 = &v15[*(int *)(v12 + 44)];
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v37 = v2 + 16;
  v36(v6, v16, v1);
  sub_100067BE4(&qword_100968198, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  id v17 = v44;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v35 = sub_100067BE4(&qword_1009681A0, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
  int v18 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19(v17, v1);
  uint64_t v41 = v6;
  uint64_t v42 = v2 + 8;
  v19(v6, v1);
  uint64_t v20 = 0;
  if ((v18 & 1) == 0)
  {
    v33[1] = v18;
    id v21 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v20 = *v22;
    v21(v45, 0);
    id v23 = v40;
    ((void (*)(char *, char *, uint64_t))v38)(v40, v15, v7);
    dispatch thunk of Collection.formIndex(after:)();
    id v24 = *(void (**)(char *, uint64_t))(v43 + 8);
    v43 += 8;
    int v34 = v24;
    v24(v23, v7);
    id v25 = v41;
    while (1)
    {
      v36(v25, v16, v1);
      id v26 = v44;
      dispatch thunk of Collection.endIndex.getter();
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      v19(v26, v1);
      v19(v25, v1);
      if (v27) {
        break;
      }
      unint64_t v28 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v30 = *v29;
      v28(v45, 0);
      objc_super v31 = v40;
      ((void (*)(char *, char *, uint64_t))v38)(v40, v15, v7);
      dispatch thunk of Collection.formIndex(after:)();
      v34(v31, v7);
      if (v20 <= v30) {
        uint64_t v20 = v30;
      }
    }
  }
  sub_10008DB18((uint64_t)v15, &qword_100968188);
  return v20;
}

__n128 sub_100689D20@<Q0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  a1[8] = v11;
  a1[9] = *(_OWORD *)v12;
  *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)&v12[9];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  *a1 = v3;
  a1[1] = v4;
  __n128 result = v6;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t DivingDataCalculator.formatAxisDate(_:)()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHDivingDataCalculator_axisFormatter);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 stringFromDate:isa];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t DivingDataCalculator.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t DivingDataCalculator.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*DivingDataCalculator.delegate.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___CHDivingDataCalculator_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  _OWORD v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_10068A01C;
}

void sub_10068A01C(void **a1, char a2)
{
  id v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t property wrapper backing initializer of DivingDataCalculator.metrics()
{
  return Published.init(initialValue:)();
}

uint64_t DivingDataCalculator.chartWidth.getter()
{
  return *(void *)(v0 + OBJC_IVAR___CHDivingDataCalculator__chartWidth);
}

void DivingDataCalculator.chartWidth.setter(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  __n128 v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v3 + OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  if (*(unsigned char *)(v3 + OBJC_IVAR___CHDivingDataCalculator__chartWidth + 8) == 1)
  {
    *(void *)uint64_t v14 = a1;
    *(unsigned char *)(v14 + 8) = a2 & 1;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v15 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10068A604;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008D51C8;
    id v17 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100067BE4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_10068A3FC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10068A434()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    unint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_10068A60C(v2);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v4 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    *(void *)(v5 + 8) = v3;
    swift_bridgeObjectRelease();
    v4(v11, 0);
    swift_release();
    swift_release();
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_10068A60C(v6);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v8 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    uint64_t *v9 = v7;
    swift_bridgeObjectRelease();
    v8(v11, 0);
    swift_release();
    swift_release();
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      [v10 divingDataDidFinishLoading];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_10068A604()
{
}

uint64_t sub_10068A60C(unint64_t a1)
{
  uint64_t v101 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v109 = (uint64_t)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94(&qword_100968170);
  uint64_t v4 = *(void **)(v112 - 8);
  __chkstk_darwin(v112);
  long long v99 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100968178);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100968180);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v111 = (uint64_t *)((char *)&v94 - v13);
  uint64_t v116 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  uint64_t v113 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v110 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int64_t v17 = (int64_t)&v94 - v16;
  __chkstk_darwin(v18);
  uint64_t v98 = (uint64_t)&v94 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v94 - v21;
  __chkstk_darwin(v23);
  unsigned __int8 v118 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))((char *)&v94 - v24);
  uint64_t v25 = type metadata accessor for Date();
  unint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v117 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v114 = (char *)&v94 - v29;
  __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  int v34 = (char **)((char *)&v94 - v33);
  uint64_t v115 = v1;
  uint64_t v35 = (double *)&v1[OBJC_IVAR___CHDivingDataCalculator__chartWidth];
  if (v1[OBJC_IVAR___CHDivingDataCalculator__chartWidth + 8]) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  double v36 = *v35;
  if (*v35 <= 0.0) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  if (a1 >> 62) {
    goto LABEL_78;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_5:
  uint64_t v94 = v4;
  unint64_t v107 = v32;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    id v37 = *(id *)(a1 + 32);
  }
  uint64_t v38 = v37;
  id v39 = [v37 quantityType];

  id v40 = [self quantityTypeForIdentifier:HKQuantityTypeIdentifierUnderwaterDepth];
  long long v97 = v22;
  if (v39)
  {
    if (v40)
    {
      id v41 = v40;
      sub_10007E2D8(0, &qword_10094F0F0);
      id v42 = v39;
      int v96 = static NSObject.== infix(_:_:)();

      id v39 = v41;
    }
    else
    {
      int v96 = 0;
    }
  }
  else
  {
    if (!v40)
    {
      int v96 = 1;
      goto LABEL_15;
    }
    int v96 = 0;
    id v39 = v40;
  }

LABEL_15:
  double v43 = floor(v36 / 3.0 * 0.5);
  uint64_t v44 = OBJC_IVAR___CHDivingDataCalculator_diveSession;
  uint64_t v45 = v115;
  id v46 = [*(id *)&v115[OBJC_IVAR___CHDivingDataCalculator_diveSession] endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v108 = v44;
  id v47 = [*(id *)&v45[v44] startDate];
  unint64_t v48 = v107;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince(_:)();
  double v50 = v49;
  *(void *)&long long v106 = v26;
  uint64_t v22 = (char *)(v26 + 8);
  unint64_t v26 = *(void *)(v26 + 8);
  ((void (*)(unint64_t, uint64_t))v26)(v48, v25);
  ((void (*)(char **, uint64_t))v26)(v34, v25);
  unint64_t v120 = (unint64_t)_swiftEmptyArrayStorage;
  if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
    goto LABEL_82;
  }
  if (v43 <= -9.22337204e18) {
    goto LABEL_83;
  }
  if (v43 >= 9.22337204e18) {
    goto LABEL_84;
  }
  unint64_t v107 = (unint64_t)v34;
  long long v104 = (char *)v17;
  long long v102 = (unint64_t *)v11;
  long long v103 = v8;
  if ((uint64_t)v43 < 0) {
    goto LABEL_85;
  }
  *(void *)&long long v106 = v106 + 16;
  double v36 = v50 / v43;
  unint64_t v95 = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v105 = (uint64_t)v43 + 1;
  uint64_t v4 = v114;
  int v34 = &selRef_setModalPresentationStyle_;
  do
  {
    uint64_t v51 = v115;
    a1 = v108;
    int64_t v17 = (int64_t)[*(id *)&v115[v108] startDate];
    uint64_t v52 = (char *)v107;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Date.addingTimeInterval(_:)();
    ((void (*)(char *, uint64_t))v26)(v52, v25);
    uint64_t v53 = *(void **)&v51[a1];
    uint64_t v11 = v52;
    id v54 = [v53 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      unint64_t v107 = v32;
      swift_bridgeObjectRetain();
      uint64_t v93 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v32 = v107;
      if (!v93) {
        return (uint64_t)_swiftEmptyArrayStorage;
      }
      goto LABEL_5;
    }
    uint64_t v55 = v117;
    Date.addingTimeInterval(_:)();
    ((void (*)(char *, uint64_t))v26)(v11, v25);
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))v106;
    uint64_t v57 = v4;
    uint64_t v58 = v118;
    (*(void (**)(void (**)(unint64_t, uint64_t, uint64_t, uint64_t), void *, uint64_t))v106)(v118, v57, v25);
    v56((char *)v58 + *(int *)(v116 + 20), v55, v25);
    IndexSet.init()();
    unint64_t v59 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v59 = sub_1001E8C30(0, *(void *)(v59 + 16) + 1, 1, v59);
    }
    unint64_t v61 = *(void *)(v59 + 16);
    unint64_t v60 = *(void *)(v59 + 24);
    if (v61 >= v60 >> 1) {
      unint64_t v59 = sub_1001E8C30(v60 > 1, v61 + 1, 1, v59);
    }
    *(void *)(v59 + 16) = v61 + 1;
    a1 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
    uint64_t v11 = *(char **)(v113 + 72);
    sub_100690ED8((uint64_t)v118, v59 + a1 + (void)v11 * v61, type metadata accessor for DivingDataCalculator.SampleBucket);
    unint64_t v120 = v59;
    ((void (*)(char *, uint64_t))v26)(v117, v25);
    uint64_t v4 = v114;
    uint64_t v62 = ((uint64_t (*)(char *, uint64_t))v26)(v114, v25);
    ++v8;
  }
  while ((char *)v105 != v8);
  uint64_t v8 = (char *)&v94;
  uint64_t v119 = 0;
  __chkstk_darwin(v62);
  *(&v94 - 4) = (void *)v95;
  char v63 = v96;
  *((unsigned char *)&v94 - 24) = v96 & 1;
  *(&v94 - 2) = &v120;
  *(&v94 - 1) = &v119;
  uint64_t v64 = swift_bridgeObjectRetain();
  sub_100690A90(v64, (void (*)(uint64_t, char *))sub_10068FCEC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v26 = v120;
  if ((v63 & 1) == 0)
  {
    int v34 = (char **)v112;
    uint64_t v25 = v116;
    int64_t v17 = (int64_t)v104;
    goto LABEL_45;
  }
  unint64_t v65 = *(void *)(v120 + 16);
  int v34 = (char **)v112;
  uint64_t v25 = v116;
  int64_t v17 = (int64_t)v104;
  if (!v65) {
    goto LABEL_86;
  }
  uint64_t v22 = v97;
  if (v65 >= 3)
  {
    uint64_t v8 = 0;
    unint64_t v26 = v65 - 2;
    int64_t v17 = a1;
    do
    {
      if ((unint64_t)v8 >= *(void *)(v120 + 16)) {
        goto LABEL_75;
      }
      sub_100690DB0(v120 + v17, (uint64_t)v22);
      char v66 = IndexSet.isEmpty.getter();
      sub_100690E7C((uint64_t)v22);
      if ((v66 & 1) == 0)
      {
        if ((unint64_t)(v8 + 1) >= *(void *)(v120 + 16)) {
          goto LABEL_76;
        }
        sub_100690DB0((uint64_t)&v11[v120 + v17], (uint64_t)v22);
        char v67 = IndexSet.isEmpty.getter();
        sub_100690E7C((uint64_t)v22);
        if (v67)
        {
          uint64_t v22 = (char *)v120;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = (char *)sub_1005EC304((unint64_t)v22);
          }
          if ((unint64_t)v8 >= *((void *)v22 + 2)) {
            goto LABEL_77;
          }
          IndexSet.insert(_:)(0);
          unint64_t v120 = (unint64_t)v22;
          uint64_t v22 = v97;
        }
      }
      ++v8;
      v17 += (int64_t)v11;
    }
    while ((char *)v26 != v8);
    unint64_t v26 = v120;
    int64_t v17 = (int64_t)v104;
  }
  uint64_t v8 = v119;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (((unint64_t)v8 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_87:
  uint64_t result = sub_1005EC304(v26);
  unint64_t v26 = result;
  if (((unint64_t)v8 & 0x8000000000000000) != 0) {
    goto LABEL_88;
  }
LABEL_43:
  if ((unint64_t)v8 < *(void *)(v26 + 16))
  {
    IndexSet.insert(_:)(0);
    unint64_t v120 = v26;
LABEL_45:
    unint64_t v108 = v26 + a1;
    uint64_t v69 = *(char **)(v26 + 16);
    unsigned __int8 v118 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    v113 += 48;
    uint64_t v117 = (char *)(v94 + 7);
    uint64_t v22 = (char *)(v94 + 6);
    uint64_t v114 = (char *)v26;
    swift_bridgeObjectRetain();
    unint64_t v107 = 0;
    uint64_t v8 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    *(void *)&long long v70 = 134218240;
    long long v106 = v70;
    double v36 = 0.0;
    a1 = (unint64_t)v103;
    uint64_t v115 = v69;
    while (2)
    {
      if (v8 == v69)
      {
        (*v118)(a1, 1, 1, v25);
        uint64_t v8 = v69;
        goto LABEL_52;
      }
      if ((unint64_t)v8 >= *((void *)v114 + 2)) {
        goto LABEL_73;
      }
      sub_100690DB0(v108 + (void)v8++ * (void)v11, a1);
      (*v118)(a1, 0, 1, v25);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))v113)(a1, 1, v25) == 1)
      {
LABEL_52:
        sub_10008DB18(a1, &qword_100968178);
        uint64_t v71 = (uint64_t)v102;
        (*(void (**)(unint64_t *, uint64_t, uint64_t, char **))v117)(v102, 1, 1, v34);
      }
      else
      {
        uint64_t v25 = (uint64_t)type metadata accessor for DivingDataCalculator.SampleBucket;
        uint64_t v72 = v98;
        sub_100690ED8(a1, v98, type metadata accessor for DivingDataCalculator.SampleBucket);
        uint64_t v73 = (uint64_t)&v99[*((int *)v34 + 12)];
        sub_100690ED8(v72, v73, type metadata accessor for DivingDataCalculator.SampleBucket);
        unint64_t v26 = v107 + 1;
        if (__OFADD__(v107, 1)) {
          goto LABEL_74;
        }
        uint64_t v71 = (uint64_t)v102;
        uint64_t v74 = (uint64_t)v102 + *((int *)v34 + 12);
        *long long v102 = v107;
        sub_100690ED8(v73, v74, type metadata accessor for DivingDataCalculator.SampleBucket);
        (*(void (**)(uint64_t, void, uint64_t, char **))v117)(v71, 0, 1, v34);
        unint64_t v107 = v26;
      }
      uint64_t v75 = v111;
      sub_100690E14(v71, (uint64_t)v111);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, char **))v22)(v75, 1, v34) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
      uint64_t v76 = *v75;
      sub_100690ED8((uint64_t)v75 + *((int *)v34 + 12), v17, type metadata accessor for DivingDataCalculator.SampleBucket);
      os_log_type_t v77 = static os_log_type_t.debug.getter();
      uint64_t v78 = v110;
      sub_100690DB0(v17, v110);
      sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
      uint64_t v79 = static OS_os_log.default.getter();
      if (os_log_type_enabled(v79, v77))
      {
        unint64_t v26 = swift_slowAlloc();
        *(_DWORD *)unint64_t v26 = v106;
        *(void *)(v26 + 4) = v76;
        *(_WORD *)(v26 + 12) = 2048;
        uint64_t v80 = v78;
        uint64_t v25 = v116;
        uint64_t v81 = IndexSet.count.getter();
        sub_100690E7C(v80);
        *(void *)(v26 + 14) = v81;
        _os_log_impl((void *)&_mh_execute_header, v79, v77, "DDC: Bucket %ld has %ld samples", (uint8_t *)v26, 0x16u);
        swift_slowDealloc();
      }
      else
      {
        sub_100690E7C(v78);
        uint64_t v25 = v116;
      }

      int64_t v17 = (int64_t)v104;
      char v82 = IndexSet.isEmpty.getter();
      int v34 = (char **)v112;
      a1 = (unint64_t)v103;
      if ((v82 & 1) == 0)
      {
        uint64_t v83 = sub_100689380();
        if (v84) {
          double v85 = 0.0;
        }
        else {
          double v85 = (double)v83;
        }
        uint64_t v86 = sub_100689850();
        if (v87) {
          double v88 = 0.0;
        }
        else {
          double v88 = (double)v86;
        }
        Date.timeIntervalSince(_:)();
        uint64_t v89 = v109;
        Date.addingTimeInterval(_:)();
        uint64_t v90 = v101;
        *(double *)(v89 + *(int *)(v101 + 24)) = v85;
        *(double *)(v89 + *(int *)(v90 + 28)) = v88;
        *(double *)(v89 + *(int *)(v90 + 20)) = (v85 + v88) * 0.5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = (void *)sub_1001E7108(0, v4[2] + 1, 1, (unint64_t)v4);
        }
        unint64_t v26 = v4[2];
        unint64_t v91 = v4[3];
        uint64_t v92 = (uint64_t)v4;
        if (v26 >= v91 >> 1) {
          uint64_t v92 = sub_1001E7108(v91 > 1, v26 + 1, 1, (unint64_t)v4);
        }
        uint64_t v4 = (void *)v92;
        *(void *)(v92 + 16) = v26 + 1;
        sub_100690ED8(v109, v92+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v26, type metadata accessor for WorkoutChartDataElement);
      }
      sub_100690E7C(v17);
      uint64_t v69 = v115;
      continue;
    }
  }
LABEL_89:
  __break(1u);
  return result;
}

void (*DivingDataCalculator.chartWidth.modify(void *a1))(void ****a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  v3[12] = malloc(*(void *)(v5 + 64));
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v3[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[14] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  uint64_t v10 = v1 + OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  v3[6] = *(void *)(v1 + OBJC_IVAR___CHDivingDataCalculator__chartWidth);
  v3 += 6;
  v3[9] = v8;
  v3[10] = v9;
  *((unsigned char *)v3 + 8) = *(unsigned char *)(v10 + 8);
  return sub_10068B6C4;
}

void sub_10068B6C4(void ****a1, char a2)
{
  unint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[12];
    DivingDataCalculator.chartWidth.setter((uint64_t)v2[6], *((unsigned char *)v2 + 56));
  }
  else
  {
    uint64_t v5 = (char *)v2[16] + (void)v2[9];
    if (v5[8] == 1)
    {
      uint64_t v7 = v2[14];
      uint64_t v6 = v2[15];
      uint64_t v8 = v2[12];
      uint64_t v15 = v2[13];
      uint64_t v9 = v2[10];
      uint64_t v10 = v2[11];
      char v11 = *((unsigned char *)v2 + 56);
      *(void *)uint64_t v5 = v2[6];
      v5[8] = v11;
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v2[4] = (void **)sub_10068A604;
      v2[5] = (void **)v13;
      *unint64_t v2 = _NSConcreteStackBlock;
      v2[1] = (void **)1107296256;
      v2[2] = (void **)sub_100070394;
      v2[3] = (void **)&unk_1008D51F0;
      uint64_t v14 = _Block_copy(v2);
      swift_release();
      static DispatchQoS.unspecified.getter();
      v2[8] = (void **)_swiftEmptyArrayStorage;
      sub_100067BE4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v14);

      ((void (*)(void **, void **))v10[1])(v8, v9);
      ((void (*)(void **, void **))v7[1])(v6, v15);
    }
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[12];
  }
  free(v3);
  free(v4);

  free(v2);
}

void sub_10068B918(void *a1)
{
  id v2 = [a1 quantity];
  [v2 _value];
  double v4 = v3;

  if (v4 > 0.0) {
    double v5 = v4;
  }
  else {
    double v5 = 0.0;
  }
  id v6 = [a1 quantityType];
  id v7 = [v6 identifier];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (v5 >= 11000.0)
  {
    os_log_type_t v14 = static os_log_type_t.error.getter();
    sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
    log = static OS_os_log.default.getter();
    if (os_log_type_enabled(log, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134217984;
      double v31 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, log, v14, "DivingDataCalculator bad sample value (out of bounds): %f", v15, 0xCu);
      swift_slowDealloc();

      return;
    }
    goto LABEL_20;
  }
LABEL_14:
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
  id v17 = a1;
  uint64_t v18 = static OS_os_log.default.getter();
  if (os_log_type_enabled(v18, v16))
  {
    uint64_t v19 = 0x6874706564;
    uint64_t v20 = swift_slowAlloc();
    double v31 = COERCE_DOUBLE(swift_slowAlloc());
    *(_DWORD *)uint64_t v20 = 136315650;
    id v21 = [v17 quantityType];
    id v22 = [v21 identifier];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v27 = 0xE500000000000000;
    }
    else
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28)
      {
        unint64_t v27 = 0xE500000000000000;
      }
      else
      {
        uint64_t v19 = 1886217588;
        unint64_t v27 = 0xE400000000000000;
      }
    }
    sub_10008F1F4(v19, v27, (uint64_t *)&v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2048;
    id v29 = [v17 quantity];
    [v29 _value];

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2048;
    if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v5 <= -9.22337204e18)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v5 >= 9.22337204e18)
    {
LABEL_37:
      __break(1u);
      return;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v16, "DivingDataCalculator: inserting %s %f (%ld)", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_30:
    if (v5 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v5 < 9.22337204e18)
    {
      type metadata accessor for DivingDataCalculator.SampleBucket(0);
      IndexSet.insert(_:)((uint64_t)v5);
      return;
    }
    __break(1u);
    goto LABEL_35;
  }

  if ((~*(void *)&v5 & 0x7FF0000000000000) != 0) {
    goto LABEL_30;
  }
  __break(1u);
LABEL_20:
}

uint64_t sub_10068BE7C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (uint64_t)&v36 - v7;
  __chkstk_darwin(v8);
  uint64_t v39 = (uint64_t)&v36 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v41 = a1;
  id v21 = [a1 startDate:v18];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100067BE4((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
  char v22 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23(v20, v16);
  sub_100690DB0(v2, (uint64_t)v15);
  uint64_t v38 = v4;
  if (v22)
  {
    sub_100690E7C((uint64_t)v15);
    sub_100690DB0(v2, (uint64_t)v12);
    uint64_t v24 = v2;
  }
  else
  {
    id v25 = [v41 endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v25) = dispatch thunk of static Comparable.< infix(_:_:)();
    v23(v20, v16);
    sub_100690E7C((uint64_t)v15);
    sub_100690DB0(v2, (uint64_t)v12);
    uint64_t v24 = v2;
    if ((v25 & 1) == 0)
    {
      sub_100690E7C((uint64_t)v12);
      uint64_t v29 = v40;
      sub_100690DB0(v2, v40);
      goto LABEL_11;
    }
  }
  id v26 = v41;
  id v27 = [v41 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v27) = dispatch thunk of static Comparable.< infix(_:_:)();
  v23(v20, v16);
  uint64_t v28 = v39;
  sub_100690DB0((uint64_t)v12, v39);
  if (v27)
  {
    sub_100690E7C(v28);
    sub_100690E7C((uint64_t)v12);
    uint64_t v29 = v40;
    sub_100690DB0(v24, v40);
    goto LABEL_7;
  }
  id v30 = [v26 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v36 = v24;
  LOBYTE(v30) = dispatch thunk of static Comparable.< infix(_:_:)();
  v23(v20, v16);
  sub_100690E7C(v28);
  sub_100690E7C((uint64_t)v12);
  uint64_t v29 = v40;
  sub_100690DB0(v36, v40);
  if ((v30 & 1) == 0)
  {
LABEL_11:
    char v33 = 1;
    goto LABEL_12;
  }
LABEL_7:
  id v31 = [v26 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v31) = dispatch thunk of static Comparable.< infix(_:_:)();
  v23(v20, v16);
  uint64_t v32 = v37;
  sub_100690DB0(v29, v37);
  if (v31)
  {
    sub_100690E7C(v32);
    char v33 = 0;
  }
  else
  {
    id v34 = [v26 endDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    char v33 = dispatch thunk of static Comparable.< infix(_:_:)() ^ 1;
    v23(v20, v16);
    sub_100690E7C(v32);
  }
LABEL_12:
  sub_100690E7C(v29);
  return v33 & 1;
}

char *sub_10068C368(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_1000AFA94(&qword_100968168);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v12 = &v4[OBJC_IVAR___CHDivingDataCalculator__metrics];
  char v49 = 1;
  uint64_t v31 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 11565;
  unint64_t v34 = 0xE200000000000000;
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  uint64_t v37 = 11565;
  unint64_t v38 = 0xE200000000000000;
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  uint64_t v41 = 11565;
  unint64_t v42 = 0xE200000000000000;
  uint64_t v43 = 11565;
  unint64_t v44 = 0xE200000000000000;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  char v48 = 1;
  uint64_t v13 = v4;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v14 = &v13[OBJC_IVAR___CHDivingDataCalculator__chartWidth];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_rawTempSamples] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_rawDepthSamples] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_healthStore] = a1;
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_diveSession] = a2;
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_formattingManager] = a3;
  id v15 = objc_allocWithZone((Class)NSDateFormatter);
  id v16 = a1;
  id v17 = a2;
  id v18 = a3;
  id v19 = [v15 init];
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_axisFormatter] = v19;
  id v20 = [self predicateForObjectsFromWorkout:v17];
  *(void *)&v13[OBJC_IVAR___CHDivingDataCalculator_predicate] = v20;

  v29.receiver = v13;
  v29.super_class = ObjectType;
  id v21 = [super init];
  char v22 = *(void **)&v21[OBJC_IVAR___CHDivingDataCalculator_axisFormatter];
  uint64_t v23 = v21;
  [v22 setDoesRelativeDateFormatting:0];
  [v22 setDateStyle:0];
  [v22 setTimeStyle:1];
  id v24 = v22;
  NSString v25 = String._bridgeToObjectiveC()();
  [v24 setDateFormat:v25];

  sub_10068C694();
  return v23;
}

uint64_t sub_10068C694()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10007E2D8(0, &qword_10094F0F0);
  swift_retain();
  Class isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierWaterTemperature).super.super.super.isa;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v3 = (void *)swift_allocObject();
  v3[2] = v2;
  _OWORD v3[3] = sub_10068EFF8;
  v3[4] = v0;
  swift_retain();
  swift_retain();
  sub_10068E10C(isa, (uint64_t)sub_10068F004, (uint64_t)v3);
  swift_release_n();

  swift_release();

  return swift_release();
}

uint64_t sub_10068C830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = a3;
    v8[3] = a2;
    v8[4] = a1;
    sub_10007E2D8(0, &qword_10094F0F0);
    swift_retain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    Class isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierUnderwaterDepth).super.super.super.isa;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    void v11[3] = sub_10068FA2C;
    v11[4] = v8;
    swift_retain();
    swift_retain();
    sub_10068E10C(isa, (uint64_t)sub_10068FA7C, (uint64_t)v11);

    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10068C9B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_10:
    os_log_type_t v58 = static os_log_type_t.error.getter();
    sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v59 = static OS_os_log.default.getter();
    if (os_log_type_enabled(v59, v58))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315394;
      if (a4)
      {
        swift_getErrorValue();
        Error.localizedDescription.getter();
        uint64_t v62 = v61;
      }
      else
      {
        uint64_t v62 = 0;
      }
      *((void *)&v105[0] + 1) = v62;
      sub_1000AFA94((uint64_t *)&unk_100958790);
      uint64_t v63 = Optional.description.getter();
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
      *(void *)&v105[0] = sub_10008F1F4(v63, v65, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v60 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        Error.localizedDescription.getter();
        uint64_t v67 = v66;
      }
      else
      {
        uint64_t v67 = 0;
      }
      *((void *)&v105[0] + 1) = v67;
      uint64_t v68 = Optional.description.getter();
      unint64_t v70 = v69;
      swift_bridgeObjectRelease();
      *(void *)&v105[0] = sub_10008F1F4(v68, v70, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, v58, "DivingDataCalculator internal error: %s %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return;
  }
  uint64_t v10 = Strong;
  if (a4 | a2)
  {

    goto LABEL_10;
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  LOBYTE(v107) = 1;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 40) = 11565;
  *(void *)(v11 + 48) = 0xE200000000000000;
  *(void *)(v11 + 56) = 0;
  *(void *)(v11 + 64) = 0xE000000000000000;
  *(void *)(v11 + 72) = 11565;
  *(void *)(v11 + 80) = 0xE200000000000000;
  *(void *)(v11 + 88) = 0;
  *(void *)(v11 + 96) = 0xE000000000000000;
  *(void *)(v11 + 104) = 11565;
  *(void *)(v11 + 112) = 0xE200000000000000;
  *(void *)(v11 + 120) = 11565;
  *(void *)(v11 + 128) = 0xE200000000000000;
  *(_OWORD *)(v11 + 136) = 0u;
  *(_OWORD *)(v11 + 152) = 0u;
  *(_OWORD *)(v11 + 168) = 0u;
  *(unsigned char *)(v11 + 184) = v107;
  uint64_t v12 = sub_10068D158(a5);
  long long v103 = v13;
  id v14 = sub_10068D768();
  uint64_t v100 = v15;
  id v101 = v14;
  uint64_t v98 = v17;
  uint64_t v99 = v16;
  uint64_t v18 = sub_10068A60C(a1);
  uint64_t v97 = sub_10068A60C(a5);
  uint64_t v96 = sub_10068DAA0();
  id v19 = self;
  sub_10068DD80();
  id v21 = v20;
  id v22 = [v19 stringWithNumber:v20 decimalPrecision:1];

  if (!v22)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v95 = v18;
  long long v104 = (void *)v12;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v93 = v24;
  uint64_t v94 = v23;

  uint64_t v25 = OBJC_IVAR___CHDivingDataCalculator_formattingManager;
  id v26 = [*(id *)&v10[OBJC_IVAR___CHDivingDataCalculator_formattingManager] localizedStringWithDepthInMeters:1 depthUnit:0.0];
  if (!v26)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v27 = v26;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)&v105[0] = v28;
  *((void *)&v105[0] + 1) = v30;
  sub_1000A06D0();
  uint64_t v31 = StringProtocol.localizedLowercase.getter();
  uint64_t v91 = v32;
  uint64_t v92 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void **)&v10[OBJC_IVAR___CHDivingDataCalculator_diveSession];
  id v34 = *(id *)&v10[v25];
  [v33 duration];
  id v35 = [v34 localizedUnderwaterTime:];

  if (!v35)
  {
LABEL_33:
    __break(1u);
    return;
  }
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  id v39 = *(id *)&v10[v25];
  uint64_t v40 = sub_10068DFA0(v39, a5);
  uint64_t v90 = v25;
  uint64_t v42 = v41;

  long long v43 = *(_OWORD *)(v11 + 160);
  v105[8] = *(_OWORD *)(v11 + 144);
  v106[0] = v43;
  *(_OWORD *)((char *)v106 + 9) = *(_OWORD *)(v11 + 169);
  long long v44 = *(_OWORD *)(v11 + 96);
  v105[4] = *(_OWORD *)(v11 + 80);
  v105[5] = v44;
  long long v45 = *(_OWORD *)(v11 + 128);
  v105[6] = *(_OWORD *)(v11 + 112);
  v105[7] = v45;
  long long v46 = *(_OWORD *)(v11 + 32);
  v105[0] = *(_OWORD *)(v11 + 16);
  v105[1] = v46;
  long long v47 = *(_OWORD *)(v11 + 64);
  _OWORD v105[2] = *(_OWORD *)(v11 + 48);
  v105[3] = v47;
  *(void *)(v11 + 16) = v95;
  *(void *)(v11 + 24) = v97;
  *(void *)(v11 + 32) = v96;
  *(void *)(v11 + 40) = v94;
  *(void *)(v11 + 48) = v93;
  *(void *)(v11 + 56) = v92;
  *(void *)(v11 + 64) = v91;
  *(void *)(v11 + 72) = v101;
  *(void *)(v11 + 80) = v100;
  *(void *)(v11 + 88) = v99;
  *(void *)(v11 + 96) = v98;
  *(void *)(v11 + 104) = v36;
  *(void *)(v11 + 112) = v38;
  *(void *)(v11 + 120) = v40;
  *(void *)(v11 + 128) = v42;
  *(_OWORD *)(v11 + 136) = 0u;
  *(_OWORD *)(v11 + 152) = 0u;
  *(_OWORD *)(v11 + 168) = 0u;
  *(unsigned char *)(v11 + 184) = 1;
  sub_100264974((uint64_t)v105);
  if (v104)
  {
    char v48 = *(void **)&v10[v90];
    id v49 = v104;
    id v50 = v103;
    id v51 = v48;
    sub_10068FB30(v104, v103);
    id v52 = [v49 quantity];
    [v52 _value];
    double v54 = v53;

    id v55 = [v51 localizedWaterTemperatureValue:v54];
    if (v55)
    {
      uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v57 = v56;
    }
    else
    {
      uint64_t v102 = 0;
      unint64_t v57 = 0;
    }
    id v71 = *(id *)&v10[v90];
    id v72 = [v50 quantity];
    [v72 _value];
    double v74 = v73;

    id v75 = [v71 localizedWaterTemperatureValue:v74];
    if (v75)
    {
      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v78 = v77;
    }
    else
    {
      uint64_t v76 = 0;
      unint64_t v78 = 0;
    }
    id v79 = [v49 quantity];
    [v79 _value];
    double v81 = v80;

    double v82 = floor(v81);
    id v83 = [v50 quantity];
    [v83 _value];
    double v85 = v84;

    *(double *)(v11 + 168) = v82;
    *(double *)(v11 + 176) = floor(v85);
    *(unsigned char *)(v11 + 184) = 0;

    if (!v78)
    {
      uint64_t v76 = 11565;
      unint64_t v78 = 0xE200000000000000;
    }

    uint64_t v86 = v102;
    if (v57)
    {
      unint64_t v87 = v57;
    }
    else
    {
      uint64_t v86 = 11565;
      unint64_t v87 = 0xE200000000000000;
    }
    uint64_t v88 = *(void *)(v11 + 136);
    uint64_t v89 = *(void *)(v11 + 144);
    *(void *)(v11 + 136) = v86;
    *(void *)(v11 + 144) = v87;
    *(void *)(v11 + 152) = v76;
    *(void *)(v11 + 160) = v78;
    sub_100264A48(v88, v89);
    sub_10068D4A0(v10, v11);
    sub_10068FB70(v104, v103);
  }
  else
  {
    sub_10068D4A0(v10, v11);
  }

  swift_release();
}

uint64_t sub_10068D158(unint64_t a1)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id v4 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    id v4 = *(id *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
    {
LABEL_10:
      static os_log_type_t.error.getter();
      sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
      uint64_t v9 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();
LABEL_11:

      return 0;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_28;
    }
    id v4 = *(id *)(a1 + 32);
  }
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  id v5 = [v4 quantityType];
  sub_10007E2D8(0, &qword_10094F0F0);
  Class isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierWaterTemperature).super.super.super.isa;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0)
  {

    goto LABEL_10;
  }
  if (v3)
  {
    unint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t)sub_100369D94(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = v8;
  sub_10068FCFC(&v16);
  uint64_t v1 = v16;
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = *(void *)(v16 + 16);
    swift_retain();
    if (v13) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  swift_retain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13)
  {
LABEL_29:
    swift_release_n();
    static os_log_type_t.error.getter();
    sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
    uint64_t v9 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();

    goto LABEL_11;
  }
LABEL_17:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v1 + 16))
    {
      id v10 = *(id *)(v1 + 32);
      swift_release();
      unint64_t v14 = v13 - 1;
      if (!__OFSUB__(v13, 1))
      {
        if ((v14 & 0x8000000000000000) == 0)
        {
          if (v14 < *(void *)(v1 + 16))
          {
            id v15 = *(id *)(v1 + 32 + 8 * v14);
LABEL_23:

            swift_release();
            return (uint64_t)v10;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
  id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_release();
  if (!__OFSUB__(v13, 1))
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10068D4A0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_10068FBF0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D5400;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067BE4((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

id sub_10068D768()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHDivingDataCalculator_formattingManager);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___CHDivingDataCalculator_healthStore);
  v28[0] = 0;
  id v4 = [v1 localizedGoalDescriptionForDive:v2 healthStore:v3 outValue:v28];
  id v5 = v28[0];
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
    id v10 = v5;
  }
  else
  {
    id v11 = v28[0];
    uint64_t v9 = (void *)0xE200000000000000;
    uint64_t v7 = 11565;
  }
  id v12 = [v1 unitManager];
  if (!v12) {
    __break(1u);
  }
  uint64_t v13 = v12;
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  id v14 = [v13 userDepthHKUnit];

  id v15 = [self meterUnit];
  LOBYTE(v13) = static NSObject.== infix(_:_:)();

  if (v13) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = 2;
  }
  v28[0] = (id)v7;
  v28[1] = v9;
  sub_1000A06D0();
  if ((StringProtocol.contains<A>(_:)() & 1) == 0)
  {
    id v26 = [v1 localizedDepthUnit:v16];
    if (v26)
    {
      uint64_t v27 = v26;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    return (id)v7;
  }
  id v17 = [self mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1007509E0;
  id result = [v1 localizedDepthUnit:v16];
  if (result)
  {
    id v22 = result;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_1000AA64C();
    *(void *)(v20 + 32) = v23;
    *(void *)(v20 + 40) = v25;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    return (id)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10068DAA0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v2;
  __chkstk_darwin(v1);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v9 = (char *)&v27 - v8;
  id v10 = *(void **)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession);
  uint64_t v11 = OBJC_IVAR___CHDivingDataCalculator_diveSession;
  uint64_t v28 = v0;
  uint64_t v29 = OBJC_IVAR___CHDivingDataCalculator_diveSession;
  id v12 = [v10 endDate:v7];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = [*(id *)(v0 + v11) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v31 = v14;
  v14(v5, v1);
  v14(v9, v1);
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v30 = 2 * *(void *)(v2 + 72);
  uint64_t v16 = swift_allocObject();
  uint64_t v32 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_100752410;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = v28;
  uint64_t v19 = v29;
  id v20 = [*(id *)(v28 + v29) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v21 = v9;
  uint64_t v22 = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17, v21, v1);
  id v23 = [*(id *)(v18 + v19) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.addingTimeInterval(_:)();
  uint64_t v24 = v31;
  v31(v5, v1);
  id v25 = [*(id *)(v18 + v19) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.addingTimeInterval(_:)();
  v24(v5, v22);
  return v32;
}

void sub_10068DD80()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession) workoutEvents];
  if (!v1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    NSNumber.init(integerLiteral:)(1);
    return;
  }
  uint64_t v2 = v1;
  sub_10007E2D8(0, (unint64_t *)&qword_10094BED8);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_4:
  if (v4 < 1)
  {
LABEL_26:
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    double v7 = v6;
    if ([v6 type] == (id)2)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v8 = _swiftEmptyArrayStorage[2];
    goto LABEL_20;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
LABEL_20:
  swift_release();
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }

  Int._bridgeToObjectiveC()();
}

uint64_t sub_10068DFA0(void *a1, unint64_t a2)
{
  unint64_t v3 = (void *)sub_10068D158(a2);
  if (!v3)
  {
    static os_log_type_t.error.getter();
    sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
    unint64_t v17 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();

    return 11565;
  }
  id v5 = v4;
  id v6 = v3;
  id v7 = v5;
  id v8 = [v6 quantity];
  [v8 _value];
  double v10 = v9;

  id v11 = [v7 quantity];
  [v11 _value];
  double v13 = v12;

  uint64_t result = (uint64_t)[a1 localizedWaterTemperatureRangeWithColdest:v10 hottest:v13];
  if (result)
  {
    unint64_t v15 = (void *)result;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v16;
  }
  __break(1u);
  return result;
}

void sub_10068E10C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = _swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR___CHDivingDataCalculator_predicate);
  double v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  void v9[4] = v7;
  v9[5] = a1;
  id v10 = objc_allocWithZone((Class)HKQuantitySeriesSampleQuery);
  v14[4] = sub_10068F0AC;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10068F840;
  v14[3] = &unk_1008D5338;
  id v11 = _Block_copy(v14);
  id v12 = a1;
  swift_retain();
  swift_retain();
  id v13 = [v10 initWithQuantityType:v12 predicate:v8 quantityHandler:v11];
  _Block_release(v11);
  swift_release();
  [*(id *)(v3 + OBJC_IVAR___CHDivingDataCalculator_healthStore) executeQuery:v13];
  swift_release();
}

uint64_t sub_10068E288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, void *a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (void *)Strong;
    *(void *)(Strong + *a6) = a1;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  return a4(a1, a2);
}

void sub_10068E328(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v36 = a8;
  uint64_t v37 = a7;
  uint64_t v35 = a6;
  int v38 = a5;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DateInterval();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
LABEL_4:
    if ((v38 & 1) == 0) {
      return;
    }
    goto LABEL_5;
  }
  sub_1000A87F4(a3, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10008DB18((uint64_t)v20, (uint64_t *)&unk_1009546B0);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  id v26 = a2;
  id v27 = a10;
  DateInterval.start.getter();
  DateInterval.end.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  Class v29 = Date._bridgeToObjectiveC()().super.isa;
  id v32 = [self quantitySampleWithType:v27 quantity:v26 startDate:isa endDate:v29];

  uint64_t v30 = v34;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v33 + 8);
  v31(v14, v34);
  v31(v17, v30);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a9 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (v38)
  {
LABEL_5:
    swift_beginAccess();
    uint64_t v25 = swift_bridgeObjectRetain();
    v37(v25, v35);
    swift_bridgeObjectRelease();
  }
}

id DivingDataCalculator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void DivingDataCalculator.init()()
{
}

id DivingDataCalculator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10068E88C@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t destroy for DiveMetrics(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 128);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DiveMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v14;
    uint64_t v11 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v12;
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t assignWithCopy for DiveMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 120);
  uint64_t v5 = (_OWORD *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v6)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10008DB18(a1 + 120, &qword_1009680E8);
      long long v7 = *(_OWORD *)(a2 + 136);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 136) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 136);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 136) = v8;
  }
  long long v9 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v9;
  return a1;
}

__n128 initializeWithTake for DiveMetrics(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for DiveMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 128)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(a2 + 128);
  if (!v10)
  {
    sub_10008DB18(a1 + 120, &qword_1009680E8);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v12;
    goto LABEL_6;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiveMetrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 169)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiveMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 169) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiveMetrics()
{
  return &type metadata for DiveMetrics;
}

uint64_t sub_10068EEA4()
{
  return type metadata accessor for DivingDataCalculator(0);
}

uint64_t type metadata accessor for DivingDataCalculator(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100968150);
}

void sub_10068EECC()
{
  sub_10068EF98();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10068EF98()
{
  if (!qword_100968160)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100968160);
    }
  }
}

uint64_t sub_10068EFF8(uint64_t a1, uint64_t a2)
{
  return sub_10068C830(a1, a2, v2);
}

uint64_t sub_10068F004(uint64_t a1, uint64_t a2)
{
  return sub_10068E288(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR___CHDivingDataCalculator_rawTempSamples);
}

uint64_t sub_10068F02C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10068F064()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10068F0AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  sub_10068E328(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t, uint64_t))(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void **)(v6 + 40));
}

uint64_t sub_10068F0D8(unint64_t a1, uint64_t a2, unint64_t a3, int a4, unint64_t *a5, uint64_t *a6)
{
  char v48 = a6;
  id v52 = a5;
  int v51 = a4;
  uint64_t v49 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  unint64_t v10 = (unint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v41 = (unint64_t)v38 - v12;
  uint64_t v13 = a1 - 1;
  if (__OFSUB__(a1, 1)) {
    goto LABEL_51;
  }
  if ((a3 & 0x8000000000000000) != 0 || (a3 & 0x4000000000000000) != 0)
  {
LABEL_52:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (v14) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_5:
      uint64_t v16 = 0;
      unint64_t v40 = v13 & ~(v13 >> 63);
      unint64_t v50 = a3 & 0xC000000000000001;
      v38[1] = &v54;
      *(void *)&long long v15 = 134218240;
      long long v42 = v15;
      *(void *)&long long v15 = 134217984;
      long long v39 = v15;
      unint64_t v45 = a1;
      uint64_t v46 = v14;
      unint64_t v43 = v10;
      uint64_t v44 = a2;
      while (1)
      {
        if (v50) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(a3 + 8 * v16 + 32);
        }
        uint64_t v18 = v17;
        uint64_t v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        if (sub_10068BE7C(v17))
        {
          LOBYTE(v10) = static os_log_type_t.debug.getter();
          sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
          id v20 = static OS_os_log.default.getter();
          unint64_t v10 = v10;
          if (os_log_type_enabled(v20, (os_log_type_t)v10))
          {
            uint64_t v21 = swift_slowAlloc();
            *(_DWORD *)uint64_t v21 = v42;
            *(void *)(v21 + 4) = v16;
            *(_WORD *)(v21 + 12) = 2048;
            *(void *)(v21 + 14) = a1;
            _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v10, "DDC: Putting sample %ld into bucket %ld", (uint8_t *)v21, 0x16u);
            swift_slowDealloc();
          }

          uint64_t v13 = (uint64_t)v52;
          unint64_t v22 = *v52;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v13 = v22;
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((a1 & 0x8000000000000000) != 0) {
              goto LABEL_47;
            }
          }
          else
          {
            unint64_t v22 = sub_1005EC304(v22);
            *id v52 = v22;
            if ((a1 & 0x8000000000000000) != 0) {
              goto LABEL_47;
            }
          }
          if (*(void *)(v22 + 16) <= a1) {
            goto LABEL_46;
          }
          a2 = a3;
          unint64_t v10 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
          uint64_t v13 = *(void *)(v47 + 72);
          a3 = v13 * a1;
          sub_10068B918(v18);
          unint64_t v24 = *v52;
          *char v48 = a1;
          if ((v51 & 1) == 0)
          {

            a3 = a2;
            a2 = v44;
LABEL_39:
            unint64_t v10 = v43;
            uint64_t v14 = v46;
            goto LABEL_7;
          }
          if (a1)
          {
            if (v40 >= *(void *)(v24 + 16)) {
              goto LABEL_49;
            }
            a1 = v41;
            sub_100690DB0(v24 + v10 + v13 * v40, v41);
            uint64_t v13 = IndexSet.isEmpty.getter();
            sub_100690E7C(a1);
            if ((v13 & 1) == 0)
            {

              a3 = a2;
              a2 = v44;
              a1 = v45;
              goto LABEL_39;
            }
          }
          os_log_type_t v25 = static os_log_type_t.debug.getter();
          id v26 = static OS_os_log.default.getter();
          os_log_type_t v27 = v25;
          if (os_log_type_enabled(v26, v25))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v28 = v39;
            unint64_t v53 = v45;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v26, v27, "DDC: Writing 0 descent to %ld", v28, 0xCu);
            swift_slowDealloc();
          }

          uint64_t v13 = (uint64_t)v52;
          unint64_t v29 = *v52;
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v13 = v29;
          if ((v30 & 1) == 0)
          {
            unint64_t v29 = sub_1005EC304(v29);
            *id v52 = v29;
          }
          uint64_t v14 = v46;
          if (*(void *)(v29 + 16) <= v45) {
            goto LABEL_48;
          }
          IndexSet.insert(_:)(0);

          a3 = a2;
          a2 = v44;
          a1 = v45;
          unint64_t v10 = v43;
        }
        else
        {
          sub_100690DB0(a2, v10);
          if (v51)
          {
            uint64_t v13 = IndexSet.isEmpty.getter();
            sub_100690E7C(v10);
            if (v13)
            {
            }
            else
            {
              os_log_type_t v31 = static os_log_type_t.debug.getter();
              sub_10007E2D8(0, (unint64_t *)&unk_100955F28);
              id v32 = static OS_os_log.default.getter();
              if (os_log_type_enabled(v32, v31))
              {
                uint64_t v33 = swift_slowAlloc();
                *(_DWORD *)uint64_t v33 = v39;
                *(void *)(v33 + 4) = a1;
                _os_log_impl((void *)&_mh_execute_header, v32, v31, "DDC: Writing 0 to ascent %ld", (uint8_t *)v33, 0xCu);
                swift_slowDealloc();
              }

              uint64_t v13 = *v48;
              uint64_t v34 = v52;
              unint64_t v35 = *v52;
              char v36 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t *v34 = v35;
              if (v36)
              {
                uint64_t v14 = v46;
                if (v13 < 0) {
                  goto LABEL_43;
                }
              }
              else
              {
                unint64_t v35 = sub_1005EC304(v35);
                *id v52 = v35;
                uint64_t v14 = v46;
                if (v13 < 0)
                {
LABEL_43:
                  __break(1u);
                  return swift_bridgeObjectRelease();
                }
              }
              if ((unint64_t)v13 >= *(void *)(v35 + 16)) {
                goto LABEL_50;
              }
              IndexSet.insert(_:)(0);
            }
          }
          else
          {

            sub_100690E7C(v10);
          }
        }
LABEL_7:
        ++v16;
        if (v19 == v14) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }

  return swift_bridgeObjectRelease();
}

void *sub_10068F704(void *a1, _OWORD *a2)
{
  swift_beginAccess();
  long long v4 = a2[10];
  long long v28 = a2[9];
  v29[0] = v4;
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)a2 + 169);
  long long v5 = a2[6];
  long long v24 = a2[5];
  long long v25 = v5;
  long long v6 = a2[8];
  long long v26 = a2[7];
  long long v27 = v6;
  long long v7 = a2[2];
  long long v20 = a2[1];
  long long v21 = v7;
  long long v8 = a2[4];
  long long v22 = a2[3];
  long long v23 = v8;
  swift_getKeyPath();
  swift_getKeyPath();
  long long v18 = v28;
  *(_OWORD *)uint64_t v19 = v29[0];
  *(_OWORD *)&v19[9] = *(_OWORD *)((char *)v29 + 9);
  long long v14 = v24;
  long long v15 = v25;
  long long v16 = v26;
  long long v17 = v27;
  long long v10 = v20;
  long long v11 = v21;
  long long v12 = v22;
  long long v13 = v23;
  a1;
  sub_10068FBF8((uint64_t)&v20);
  static Published.subscript.setter();
  swift_beginAccess();
  __n128 result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result divingDataDidFinishLoading:v10, v11, v12, v13, v14, v15, v16, v17, v18, *(void *)v19, *(void *)&v19[8], *(void *)&v19[16], *(void *)&v19[24]];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10068F840(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, unsigned int a6, void *a7)
{
  unsigned int v25 = a6;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v13 - 8);
  long long v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(void (**)(id, void *, char *, void *, void, void *))(a1 + 32);
  if (a4)
  {
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = type metadata accessor for DateInterval();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = type metadata accessor for DateInterval();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
  }
  swift_retain();
  id v19 = a2;
  id v20 = a3;
  id v21 = a5;
  id v22 = a7;
  v16(v19, a3, v15, a5, v25, a7);

  swift_release();
  return sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_1009546B0);
}

uint64_t sub_10068F9E4()
{
  swift_release();
  swift_errorRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10068FA2C(unint64_t a1, uint64_t a2)
{
  sub_10068C9B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10068FA3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10068FA7C(uint64_t a1, uint64_t a2)
{
  return sub_10068E288(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR___CHDivingDataCalculator_rawDepthSamples);
}

uint64_t sub_10068FAA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 144))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

id sub_10068FB30(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void sub_10068FB70(void *a1, void *a2)
{
  if (a1)
  {
  }
}

uint64_t sub_10068FBB0()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_10068FBF0()
{
  return sub_10068F704(*(void **)(v0 + 16), *(_OWORD **)(v0 + 24));
}

uint64_t sub_10068FBF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100264FA8(v2, v3);
  return a1;
}

uint64_t type metadata accessor for DivingDataCalculator.SampleBucket(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100968200);
}

uint64_t sub_10068FCEC(unint64_t a1, uint64_t a2)
{
  return sub_10068F0D8(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unint64_t **)(v2 + 32), *(uint64_t **)(v2 + 40));
}

uint64_t sub_10068FCFC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1001F11C4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10068FD78(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_10068FD78(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_100690590(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v6 = v4;
  uint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v119 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v117 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v103 = *v109;
        do
        {
          unint64_t v104 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v103) {
            goto LABEL_139;
          }
          uint64_t v105 = *(void *)&v9[16 * v104 + 32];
          uint64_t v106 = *(void *)&v9[16 * v11 + 24];
          sub_1006906C4((id *)(v103 + 8 * v105), (id *)(v103 + 8 * *(void *)&v9[16 * v11 + 16]), v103 + 8 * v106, v117);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1001EEF68((uint64_t)v9);
          }
          if (v104 >= *((void *)v9 + 2)) {
            goto LABEL_129;
          }
          uint64_t v107 = &v9[16 * v104 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v9 + 2);
          if (v11 > v108) {
            goto LABEL_130;
          }
          memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v108 - v11));
          *((void *)v9 + 2) = v108 - 1;
          unint64_t v11 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10007E2D8(0, (unint64_t *)&qword_100951108);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v117 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v119 = v8;
  }
  Swift::Int v112 = v6;
  Swift::Int v10 = 0;
  uint64_t v118 = *a1;
  uint64_t v110 = *a1 - 8;
  uint64_t v111 = *a1 + 16;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v115 = v3;
  while (1)
  {
    Swift::Int v12 = v10++;
    Swift::Int v114 = v12;
    if (v10 < v3)
    {
      uint64_t v13 = *(void **)(v118 + 8 * v12);
      id v14 = *(id *)(v118 + 8 * v10);
      id v15 = v13;
      id v16 = [v14 quantity];
      [v16 _value];
      double v18 = v17;

      id v19 = [v15 quantity];
      [v19 _value];
      double v21 = v20;

      Swift::Int v3 = v115;
      Swift::Int v10 = v12 + 2;
      if (v12 + 2 < v115)
      {
        id v22 = (id *)(v111 + 8 * v12);
        while (1)
        {
          long long v23 = *(v22 - 1);
          id v24 = *v22;
          id v25 = v23;
          id v26 = [v24 quantity];
          [v26 _value];
          double v28 = v27;

          id v29 = [v25 quantity];
          [v29 _value];
          double v31 = v30;

          if (v18 < v21 == v28 >= v31) {
            break;
          }
          ++v10;
          ++v22;
          Swift::Int v3 = v115;
          if (v115 == v10)
          {
            Swift::Int v10 = v115;
            goto LABEL_22;
          }
        }
        Swift::Int v3 = v115;
LABEL_22:
        Swift::Int v12 = v114;
      }
      if (v18 < v21)
      {
        if (v10 < v12) {
          goto LABEL_133;
        }
        if (v12 < v10)
        {
          id v32 = (uint64_t *)(v110 + 8 * v10);
          Swift::Int v33 = v10;
          Swift::Int v34 = v12;
          unint64_t v35 = (uint64_t *)(v118 + 8 * v12);
          do
          {
            if (v34 != --v33)
            {
              if (!v118) {
                goto LABEL_138;
              }
              uint64_t v36 = *v35;
              *unint64_t v35 = *v32;
              *id v32 = v36;
            }
            ++v34;
            --v32;
            ++v35;
          }
          while (v34 < v33);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_40;
    }
    if (__OFSUB__(v10, v12)) {
      goto LABEL_131;
    }
    if (v10 - v12 >= v112) {
      goto LABEL_40;
    }
    if (__OFADD__(v12, v112)) {
      goto LABEL_134;
    }
    Swift::Int v37 = v12 + v112 >= v3 ? v3 : v12 + v112;
    if (v37 < v12) {
      break;
    }
    if (v10 != v37)
    {
      uint64_t v90 = v110 + 8 * v10;
      uint64_t v38 = v118;
      Swift::Int v113 = v37;
      do
      {
        uint64_t v91 = *(void **)(v118 + 8 * v10);
        Swift::Int v92 = v12;
        uint64_t v116 = v90;
        do
        {
          uint64_t v93 = *(void **)v90;
          id v94 = v91;
          id v95 = v93;
          id v96 = [v94 quantity];
          [v96 _value];
          double v98 = v97;

          id v99 = [v95 quantity];
          [v99 _value];
          double v101 = v100;

          if (v98 >= v101) {
            break;
          }
          if (!v118) {
            goto LABEL_136;
          }
          uint64_t v102 = *(void **)v90;
          uint64_t v91 = *(void **)(v90 + 8);
          *(void *)uint64_t v90 = v91;
          *(void *)(v90 + 8) = v102;
          v90 -= 8;
          ++v92;
        }
        while (v10 != v92);
        ++v10;
        uint64_t v90 = v116 + 8;
        Swift::Int v12 = v114;
      }
      while (v10 != v113);
      Swift::Int v10 = v113;
      if (v113 < v114) {
        goto LABEL_126;
      }
      goto LABEL_41;
    }
LABEL_40:
    uint64_t v38 = v118;
    if (v10 < v12) {
      goto LABEL_126;
    }
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1001EE868(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v40 = *((void *)v9 + 2);
    unint64_t v39 = *((void *)v9 + 3);
    unint64_t v11 = v40 + 1;
    if (v40 >= v39 >> 1) {
      uint64_t v9 = sub_1001EE868((char *)(v39 > 1), v40 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v11;
    unint64_t v41 = v9 + 32;
    long long v42 = &v9[16 * v40 + 32];
    *(void *)long long v42 = v12;
    *((void *)v42 + 1) = v10;
    if (v40)
    {
      while (1)
      {
        unint64_t v43 = v11 - 1;
        if (v11 >= 4)
        {
          char v48 = &v41[16 * v11];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_115;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_116;
          }
          unint64_t v55 = v11 - 2;
          unint64_t v56 = &v41[16 * v11 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_118;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_121;
          }
          if (v60 >= v51)
          {
            unint64_t v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_125;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_77;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v72 = *((void *)v9 + 4);
            uint64_t v73 = *((void *)v9 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_71;
          }
          uint64_t v45 = *((void *)v9 + 4);
          uint64_t v44 = *((void *)v9 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_117;
        }
        unint64_t v55 = v11 - 2;
        uint64_t v61 = &v41[16 * v11 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_120;
        }
        uint64_t v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_123;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_124;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_77:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v66) {
          goto LABEL_119;
        }
        double v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_122;
        }
        if (v77 < v65) {
          goto LABEL_14;
        }
LABEL_79:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v83 = v38;
        if (!v38) {
          goto LABEL_137;
        }
        double v84 = v9;
        double v85 = &v41[16 * v82];
        uint64_t v86 = *(void *)v85;
        unint64_t v87 = &v41[16 * v43];
        uint64_t v88 = *((void *)v87 + 1);
        sub_1006906C4((id *)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v87), v83 + 8 * v88, v117);
        if (v1) {
          goto LABEL_109;
        }
        if (v88 < v86) {
          goto LABEL_112;
        }
        if (v43 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)double v85 = v86;
        *(void *)&v41[16 * v82 + 8] = v88;
        unint64_t v89 = *((void *)v84 + 2);
        if (v43 >= v89) {
          goto LABEL_114;
        }
        uint64_t v9 = v84;
        unint64_t v11 = v89 - 1;
        memmove(&v41[16 * v43], v87 + 16, 16 * (v89 - 1 - v43));
        *((void *)v84 + 2) = v89 - 1;
        uint64_t v38 = v118;
        if (v89 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v115;
    if (v10 >= v115) {
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100690590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v21 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 quantity];
      [v12 _value];
      double v14 = v13;

      id v15 = [v11 quantity];
      [v15 _value];
      double v17 = v16;

      if (v14 >= v17)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v21 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      double v18 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v18;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1006906C4(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  char v48 = __src;
  char v47 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      id v26 = (char *)&a4[v11];
      uint64_t v46 = v26;
      char v48 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        double v27 = (id *)(a3 - 8);
        double v28 = v4;
        unint64_t v41 = v5;
        while (1)
        {
          unint64_t v43 = v27 + 1;
          uint64_t v45 = v4;
          id v29 = v26 - 8;
          double v30 = *--v28;
          unint64_t v31 = (unint64_t)v26;
          id v32 = *((id *)v26 - 1);
          id v33 = v30;
          id v34 = [v32 quantity];
          [v34 _value];
          double v36 = v35;

          id v37 = [v33 quantity];
          [v37 _value];
          double v39 = v38;

          if (v36 >= v39)
          {
            uint64_t v46 = v29;
            if ((unint64_t)v43 < v31 || (unint64_t)v27 >= v31)
            {
              *double v27 = *(id *)v29;
              double v28 = v45;
              id v26 = v29;
              if (v45 <= v41) {
                goto LABEL_45;
              }
            }
            else
            {
              if (v43 != (id *)v31) {
                *double v27 = *(id *)v29;
              }
              double v28 = v45;
              id v26 = v29;
              if (v45 <= v41) {
                goto LABEL_45;
              }
            }
          }
          else
          {
            if (v43 != v45 || v27 >= v45) {
              *double v27 = *v28;
            }
            char v48 = v28;
            id v26 = (char *)v31;
            if (v28 <= v41) {
              goto LABEL_45;
            }
          }
          --v27;
          uint64_t v4 = v28;
          if (v26 <= (char *)a4) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_45;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v12 = (char *)&a4[v8];
    uint64_t v46 = v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      double v13 = a4;
      do
      {
        double v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        id v18 = [v16 quantity];
        [v18 _value];
        double v20 = v19;

        id v21 = [v17 quantity];
        [v21 _value];
        double v23 = v22;

        if (v20 >= v23)
        {
          id v25 = v14;
          if (v14 != v13) {
            *double v14 = *v13;
          }
          char v47 = ++v13;
          id v24 = v4;
        }
        else
        {
          id v24 = v4 + 1;
          id v25 = v14;
          if (v14 < v4 || v14 >= v24 || v14 != v4) {
            *double v14 = *v4;
          }
        }
        uint64_t v5 = v25 + 1;
        if (v13 >= (void **)v12) {
          break;
        }
        uint64_t v4 = v24;
      }
      while ((unint64_t)v24 < a3);
      char v48 = v5;
    }
LABEL_45:
    sub_1001EE998(&v48, &v47, &v46);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100690A90(uint64_t a1, void (*a2)(uint64_t, char *))
{
  uint64_t v3 = v2;
  double v35 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_100968178);
  __chkstk_darwin(v5 - 8);
  int64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  uint64_t v8 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v34 = (uint64_t)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_100968170);
  __chkstk_darwin(v33);
  id v32 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v31 = (void *)((char *)v25 - v12);
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v30 = v13;
  v25[2] = a1;
  v25[3] = v3;
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v27 = *(void *)(v8 + 72);
    double v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    id v29 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v25[1] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      sub_100690DB0(v15, (uint64_t)v7);
      id v16 = *v29;
      uint64_t v17 = v36;
      (*v29)(v7, 0, 1, v36);
      if ((*v28)(v7, 1, v17) == 1) {
        break;
      }
      id v26 = v16;
      uint64_t v18 = v34;
      sub_100690ED8((uint64_t)v7, v34, type metadata accessor for DivingDataCalculator.SampleBucket);
      uint64_t v19 = v33;
      uint64_t v20 = (uint64_t)&v32[*(int *)(v33 + 48)];
      sub_100690ED8(v18, v20, type metadata accessor for DivingDataCalculator.SampleBucket);
      uint64_t v21 = *(int *)(v19 + 48);
      uint64_t v22 = (uint64_t)v31;
      double v23 = (char *)v31 + v21;
      void *v31 = v14;
      sub_100690ED8(v20, v22 + v21, type metadata accessor for DivingDataCalculator.SampleBucket);
      v35(v14, v23);
      sub_10008DB18(v22, &qword_100968170);
      v15 += v27;
      if (v30 == ++v14)
      {
        v26(v7, 1, 1, v36);
        break;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v36);
  }
  sub_10008DB18((uint64_t)v7, &qword_100968178);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100690DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100690E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100968180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100690E7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100690ED8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100690F40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for IndexSet();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100691070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for IndexSet();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_100691144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100691224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_100691304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1006913E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1006914C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006914D8);
}

uint64_t sub_1006914D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for IndexSet();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1006915D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006915E4);
}

uint64_t sub_1006915E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for IndexSet();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1006916E8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IndexSet();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006917B8()
{
  uint64_t v1 = type metadata accessor for StepType();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == enum case for StepType.work(_:)
    || v6 == enum case for StepType.rest(_:)
    || v6 == enum case for StepType.warmUp(_:)
    || v6 == enum case for StepType.coolDown(_:))
  {
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v10;
  }
  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

id sub_100691A30()
{
  uint64_t v0 = (void *)sub_100692170();

  return v0;
}

uint64_t sub_100691A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100692858();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100691AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100692858();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100691B48()
{
}

void sub_100691B70(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    goto LABEL_27;
  }
  id v7 = objc_allocWithZone((Class)UIView);
  swift_retain();
  id v44 = a2;
  swift_bridgeObjectRetain();
  id v8 = [v7 init];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v43 = v3;
  uint64_t v45 = a1;
  id v10 = (id)FIUIBundle();
  if (!v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  uint64_t v14 = StringProtocol.localizedUppercase.getter();
  id v16 = v15;
  swift_bridgeObjectRelease();
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  long long v42 = a3;
  unint64_t v17 = v3;
  if (v9)
  {
    uint64_t v18 = 0;
    uint64_t v19 = OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones;
    do
    {
      if ((v43 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v20 = *(void *)(v17 + 8 * v18 + 32);
        swift_retain();
      }
      uint64_t v21 = *(void *)(v45 + v19);
      double v22 = 0.0;
      if (v21)
      {
        if (*(void *)(v21 + 16))
        {
          unint64_t v23 = sub_100005758(v18);
          if (v24) {
            double v22 = *(double *)(*(void *)(v21 + 56) + 8 * v23);
          }
        }
      }
      double v25 = COERCE_DOUBLE(sub_100682078());
      double v27 = v22 / v25;
      if (v25 <= 0.0) {
        double v27 = 0.0;
      }
      if (v26) {
        double v28 = 0.0;
      }
      else {
        double v28 = v27;
      }
      id v29 = objc_allocWithZone((Class)type metadata accessor for WorkoutTimeInZoneView());
      id v30 = v44;
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1003D1314(v20, v30, v14, v16, v22, v28);
      [v31 setTranslatesAutoresizingMaskIntoConstraints:0];

      id v32 = v31;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v18;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      swift_release();
      unint64_t v17 = v43;
    }
    while (v9 != v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v33 = [objc_allocWithZone((Class)UILabel) init];
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [self mainBundle];
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v33 setText:v37];

  id v38 = [self grayColor];
  [v33 setTextColor:v38];

  id v39 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v40 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  id v41 = [v39 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v40];

  [v33 setFont:v41];
  [v33 setNumberOfLines:0];

  swift_release();
  *long long v42 = v45;
  v42[1] = v44;
  v42[2] = v8;
  v42[3] = _swiftEmptyArrayStorage;
  v42[4] = v33;
}

ValueMetadata *type metadata accessor for WorkoutPowerTimeInZonesView()
{
  return &type metadata for WorkoutPowerTimeInZonesView;
}

unint64_t sub_10069211C()
{
  unint64_t result = qword_100968240;
  if (!qword_100968240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968240);
  }
  return result;
}

uint64_t sub_100692170()
{
  uint64_t v2 = (char *)v0[2];
  uint64_t v3 = *(void *)(*v0 + 16);
  if (!v3) {
    goto LABEL_36;
  }
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0) {
      unint64_t v6 = (char *)(v3 & 0xFFFFFFFFFFFFFF8);
    }
    else {
      unint64_t v6 = *(char **)(*v0 + 16);
    }
    id v30 = v2;
    swift_bridgeObjectRetain();
    unint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_32;
    }
  }
  else
  {
    unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    int v5 = v2;
  }
  unint64_t v6 = v2;
  if (!v4)
  {
LABEL_18:
    uint64_t v1 = v45;
    unint64_t v4 = *(void *)(v45 + 24);
    unint64_t v50 = v4;
    if (!(v4 >> 62))
    {
      uint64_t v26 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v26)
      {
LABEL_20:
        if (v26 >= 1)
        {
          uint64_t v27 = 0;
          do
          {
            if ((v4 & 0xC000000000000001) != 0) {
              id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v28 = *(id *)(v4 + 8 * v27 + 32);
            }
            id v29 = v28;
            ++v27;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1003D0C5C((unint64_t)_swiftEmptyArrayStorage, (unint64_t)_swiftEmptyArrayStorage, 10.0);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          while (v26 != v27);
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      sub_1000B1AE0((uint64_t)&v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v31 = *(void **)(v1 + 32);
      [v2 addSubview:v31];
      id v32 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_100752650;
      id v34 = [v31 leadingAnchor];
      id v35 = [v2 leadingAnchor];
      id v36 = [v34 constraintEqualToAnchor:v35];

      *(void *)(v33 + 32) = v36;
      id v37 = [v31 trailingAnchor];
      id v38 = [v2 trailingAnchor];
      id v39 = [v37 constraintEqualToAnchor:v38];

      *(void *)(v33 + 40) = v39;
      id v40 = [v31 topAnchor];
      id v41 = [v6 bottomAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41 constant:5.0];

      *(void *)(v33 + 48) = v42;
      specialized Array._endMutation()();
      sub_1001ABF94();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v32 activateConstraints:isa];

      return (uint64_t)v2;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    if (v26) {
      goto LABEL_20;
    }
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)(v45 + 24);
  unint64_t v49 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0 || v4 - 1 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v46 = self;
    uint64_t v8 = 0;
    uint64_t v9 = v2;
    uint64_t v47 = v7;
    unint64_t v48 = v4;
    do
    {
      if (v49) {
        id v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = (char *)*(id *)(v7 + 8 * v8 + 32);
      }
      unint64_t v6 = v10;
      id v11 = [*(id *)&v10[OBJC_IVAR____TtC10FitnessApp21WorkoutTimeInZoneView_zoneNameLabel] trailingAnchor];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v12 = [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp21WorkoutTimeInZoneView_rangeLabel] leadingAnchor];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v13 = v8 + 1;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v2 addSubview:v6];
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_100752650;
      id v15 = [v6 leadingAnchor];
      id v16 = [v2 leadingAnchor];
      id v17 = [v15 constraintEqualToAnchor:v16];

      *(void *)(v14 + 32) = v17;
      id v18 = [v6 trailingAnchor];
      id v19 = [v2 trailingAnchor];
      id v20 = [v18 constraintEqualToAnchor:v19];

      *(void *)(v14 + 40) = v20;
      id v21 = [v6 topAnchor];
      double v22 = &selRef_bottomAnchor;
      if (!v8) {
        double v22 = &selRef_topAnchor;
      }
      id v23 = [v9 *v22];
      id v24 = [v21 constraintEqualToAnchor:v23];

      *(void *)(v14 + 48) = v24;
      unint64_t v50 = v14;
      specialized Array._endMutation()();
      sub_1001ABF94();
      Class v25 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v46 activateConstraints:v25];

      uint64_t v9 = v6;
      ++v8;
      uint64_t v7 = v47;
    }
    while (v48 != v13);
    goto LABEL_18;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_100692858()
{
  unint64_t result = qword_100968248;
  if (!qword_100968248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968248);
  }
  return result;
}

uint64_t *sub_1006928AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    id v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    Card = (int *)type metadata accessor for LoadCard();
    uint64_t v14 = Card[5];
    id v15 = &v10[v14];
    id v16 = &v11[v14];
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    sub_100091494(*(void *)v16, v18, v19);
    *(void *)id v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    v10[Card[6]] = v11[Card[6]];
    v10[Card[7]] = v11[Card[7]];
    v10[Card[8]] = v11[Card[8]];
    uint64_t v20 = Card[9];
    id v21 = *(void **)&v11[v20];
    *(void *)&v10[v20] = v21;
    uint64_t v22 = a3[6];
    id v23 = (char *)a1 + v22;
    id v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 24);
    id v26 = v21;
    if (v25)
    {
      uint64_t v27 = *((void *)v24 + 4);
      *((void *)v23 + 3) = v25;
      *((void *)v23 + 4) = v27;
      (**(void (***)(char *, char *, uint64_t))(v25 - 8))(v23, v24, v25);
    }
    else
    {
      long long v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)id v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      *((void *)v23 + 4) = *((void *)v24 + 4);
    }
    uint64_t v29 = a3[7];
    id v30 = (char *)a1 + v29;
    unint64_t v31 = (char *)a2 + v29;
    id v32 = *(id *)v31;
    char v33 = v31[8];
    sub_1001AEDAC(*(id *)v31, v33);
    *(void *)id v30 = v32;
    v30[8] = v33;
  }
  return a1;
}

void sub_100692B14(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t Card = type metadata accessor for LoadCard();
  sub_1000917F8(*(void *)(v5 + *(int *)(Card + 20)), *(void *)(v5 + *(int *)(Card + 20) + 8), *(unsigned char *)(v5 + *(int *)(Card + 20) + 16));

  uint64_t v8 = a1 + a2[6];
  if (*(void *)(v8 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  uint64_t v9 = a1 + a2[7];
  id v10 = *(void **)v9;
  char v11 = *(unsigned char *)(v9 + 8);

  sub_1001AEDC8(v10, v11);
}

void *sub_100692C44(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t Card = (int *)type metadata accessor for LoadCard();
  uint64_t v12 = Card[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  v13[16] = v17;
  v8[Card[6]] = v9[Card[6]];
  v8[Card[7]] = v9[Card[7]];
  v8[Card[8]] = v9[Card[8]];
  uint64_t v18 = Card[9];
  char v19 = *(void **)&v9[v18];
  *(void *)&v8[v18] = v19;
  uint64_t v20 = a3[6];
  id v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 24);
  id v24 = v19;
  if (v23)
  {
    uint64_t v25 = *((void *)v22 + 4);
    *((void *)v21 + 3) = v23;
    *((void *)v21 + 4) = v25;
    (**(void (***)(char *, char *, uint64_t))(v23 - 8))(v21, v22, v23);
  }
  else
  {
    long long v26 = *((_OWORD *)v22 + 1);
    *(_OWORD *)id v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v26;
    *((void *)v21 + 4) = *((void *)v22 + 4);
  }
  uint64_t v27 = a3[7];
  long long v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  id v30 = *(id *)v29;
  char v31 = v29[8];
  sub_1001AEDAC(*(id *)v29, v31);
  *(void *)long long v28 = v30;
  v28[8] = v31;
  return a1;
}

void *sub_100692E5C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t Card = (int *)type metadata accessor for LoadCard();
  uint64_t v12 = Card[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  char v20 = v13[16];
  v13[16] = v17;
  sub_1000917F8(v18, v19, v20);
  v8[Card[6]] = v9[Card[6]];
  v8[Card[7]] = v9[Card[7]];
  v8[Card[8]] = v9[Card[8]];
  uint64_t v21 = Card[9];
  uint64_t v22 = *(void **)&v9[v21];
  uint64_t v23 = *(void **)&v8[v21];
  *(void *)&v8[v21] = v22;
  id v24 = v22;

  uint64_t v25 = a3[6];
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25 + 24);
  if (!*(void *)((char *)a1 + v25 + 24))
  {
    if (v28)
    {
      *(void *)(v26 + 24) = v28;
      *(void *)(v26 + 32) = *((void *)v27 + 4);
      (**(void (***)(uint64_t, char *))(v28 - 8))(v26, v27);
      goto LABEL_13;
    }
LABEL_12:
    long long v29 = *(_OWORD *)v27;
    long long v30 = *((_OWORD *)v27 + 1);
    *(void *)(v26 + 32) = *((void *)v27 + 4);
    *(_OWORD *)uint64_t v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    goto LABEL_13;
  }
  if (!v28)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v26, (uint64_t *)v27);
LABEL_13:
  uint64_t v31 = a3[7];
  id v32 = (char *)a1 + v31;
  char v33 = (char *)a2 + v31;
  id v34 = *(id *)v33;
  char v35 = v33[8];
  sub_1001AEDAC(*(id *)v33, v35);
  id v36 = *(void **)v32;
  char v37 = v32[8];
  *(void *)id v32 = v34;
  v32[8] = v35;
  sub_1001AEDC8(v36, v37);
  return a1;
}

char *sub_1006930D0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t Card = (int *)type metadata accessor for LoadCard();
  uint64_t v13 = Card[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[Card[6]] = v10[Card[6]];
  v9[Card[7]] = v10[Card[7]];
  v9[Card[8]] = v10[Card[8]];
  *(void *)&v9[Card[9]] = *(void *)&v10[Card[9]];
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  uint64_t v21 = &a1[v17];
  uint64_t v22 = &a2[v17];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_100693270(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t Card = (int *)type metadata accessor for LoadCard();
  uint64_t v13 = Card[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  char v16 = v15[16];
  uint64_t v17 = *(void *)v14;
  uint64_t v18 = *((void *)v14 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  char v19 = v14[16];
  v14[16] = v16;
  sub_1000917F8(v17, v18, v19);
  v9[Card[6]] = v10[Card[6]];
  v9[Card[7]] = v10[Card[7]];
  v9[Card[8]] = v10[Card[8]];
  uint64_t v20 = Card[9];
  uint64_t v21 = *(void **)&v9[v20];
  *(void *)&v9[v20] = *(void *)&v10[v20];

  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  if (*(void *)&a1[v22 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v22]);
  }
  long long v24 = *(_OWORD *)&a2[v22 + 16];
  *(_OWORD *)uint64_t v23 = *(_OWORD *)&a2[v22];
  *((_OWORD *)v23 + 1) = v24;
  *((void *)v23 + 4) = *(void *)&a2[v22 + 32];
  uint64_t v25 = a3[7];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  LOBYTE(v27) = v27[8];
  long long v29 = *(void **)v26;
  char v30 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  sub_1001AEDC8(v29, v30);
  return a1;
}

uint64_t sub_100693460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100693474);
}

uint64_t sub_100693474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t Card = type metadata accessor for LoadCard();
  uint64_t v12 = *(void *)(Card - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = Card;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10069359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006935B0);
}

uint64_t sub_1006935B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for LoadCard();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1006936C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006936E4()
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v24 = *(void *)(DataType - 8);
  uint64_t v25 = DataType;
  __chkstk_darwin(DataType);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v22 = *(void *)(ViewModel - 8);
  uint64_t v23 = ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizationFeature();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v12 = *(id *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_1001AEDAC(*(id *)v11, v13);
  id v14 = sub_1004E75C0(v12, v13);
  sub_1001AEDC8(v12, v13);
  swift_retain();

  LOBYTE(v14) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  if (v14)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7);
    uint64_t View = static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_1001AEDAC(v12, v13);
    id v16 = sub_1004E75C0(v12, v13);
    sub_1001AEDC8(v12, v13);
    swift_retain();

    uint64_t v18 = v24;
    uint64_t v17 = v25;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v3, enum case for TrainingLoadDataType.workout(_:), v25);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v17);
    uint64_t View = TrainingLoadViewModel.formattedFractionalDifferenceFromChronicBaselineForToday.getter();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    if (!v20) {
      return 11565;
    }
  }
  return View;
}

uint64_t sub_100693A3C()
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v22 = *(void *)(DataType - 8);
  uint64_t v23 = DataType;
  __chkstk_darwin(DataType);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v20 = *(void *)(ViewModel - 8);
  uint64_t v21 = ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizationFeature();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v12 = *(id *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_1001AEDAC(*(id *)v11, v13);
  id v14 = sub_1004E75C0(v12, v13);
  sub_1001AEDC8(v12, v13);
  swift_retain();

  LOBYTE(v14) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  if (v14)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7);
    uint64_t countAndFlagsBits = static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_1001AEDAC(v12, v13);
    id v16 = sub_1004E75C0(v12, v13);
    sub_1001AEDC8(v12, v13);
    swift_retain();

    uint64_t v18 = v22;
    uint64_t v17 = v23;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v3, enum case for TrainingLoadDataType.workout(_:), v23);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v17);
    uint64_t countAndFlagsBits = TrainingLoadViewModel.loadBandTodayLocalizedDescription()()._countAndFlagsBits;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  }
  return countAndFlagsBits;
}

uint64_t sub_100693D84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v8 = *(id *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_1001AEDAC(*(id *)v7, v9);
  id v10 = sub_1004E75C0(v8, v9);
  sub_1001AEDC8(v8, v9);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v11 = OvernightMetricsViewModel.localizedTitle.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v28 = v11;
  uint64_t v29 = v13;
  sub_1000A06D0();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  LOBYTE(v13) = v17 & 1;
  id v18 = [self secondaryLabelColor];
  uint64_t v28 = Color.init(_:)();
  uint64_t v19 = Text.foregroundStyle<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  sub_1000A06C0(v14, v16, v13);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v21;
  *(unsigned char *)(a1 + 16) = v23 & 1;
  *(void *)(a1 + 24) = v25;
  return result;
}

uint64_t sub_100693F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006941A8(v1, &v21);
  uint64_t v6 = *((void *)&v21 + 1);
  uint64_t v18 = v21;
  uint64_t v7 = v22;
  uint64_t v8 = v23;
  int v19 = v25;
  char v9 = v24;
  uint64_t v10 = v1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v11 = *(id *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  sub_1001AEDAC(*(id *)v10, v12);
  id v13 = sub_1004E75C0(v11, v12);
  sub_1001AEDC8(v11, v12);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v14 = OvernightMetricsViewModel.primaryTintColor.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = v18;
  *(void *)&long long v21 = v18;
  *((void *)&v21 + 1) = v6;
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  char v24 = v9;
  unsigned __int8 v25 = v19;
  uint64_t v26 = v14;
  static Font.Weight.medium.getter();
  sub_1000AFA94(&qword_100968420);
  sub_100699950(&qword_100968428, &qword_100968420, (void (*)(void))sub_1006999F4);
  View.fontWeight(_:)();
  sub_100699B18(v15, v6, v7);
  return swift_release();
}

double sub_1006941A8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = type metadata accessor for LocalizationFeature();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OvernightMetricsViewModel.Summary();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  uint64_t v78 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OvernightMetricsViewModel.Summary.Variant();
  uint64_t v75 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v65 - v17;
  uint64_t v19 = *(int *)(type metadata accessor for LoadCardView() + 28);
  uint64_t v66 = a1;
  uint64_t v20 = (unsigned char *)(a1 + v19);
  long long v21 = *(void **)v20;
  uint64_t v67 = v20;
  char v22 = v20[8];
  sub_1001AEDAC(v21, v22);
  id v23 = sub_1004E75C0(v21, v22);
  sub_1001AEDC8(v21, v22);
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  OvernightMetricsViewModel.summary.getter();
  char v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v68 = v12;
  uint64_t v69 = v10 + 8;
  uint64_t v70 = v9;
  uint64_t v25 = v9;
  uint64_t v26 = v75;
  v24(v12, v25);
  uint64_t v27 = v15;
  OvernightMetricsViewModel.Summary.variant.getter();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v78 + 8);
  BOOL v71 = v8;
  v78 += 8;
  v28(v8, v77);

  uint64_t v29 = *(unsigned char **)(v26 + 104);
  ((void (*)(char *, void, uint64_t))v29)(v27, enum case for OvernightMetricsViewModel.Summary.Variant.noData(_:), v13);
  LOBYTE(v21) = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)();
  char v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30(v27, v13);
  uint64_t v75 = v13;
  v30(v18, v13);
  if (v21)
  {
    id v32 = v72;
    uint64_t v31 = v73;
    uint64_t v33 = v74;
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for LocalizationFeature.workout(_:), v74);
    uint64_t v34 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    *(void *)&long long v82 = v34;
    *((void *)&v82 + 1) = v36;
    sub_1000A06D0();
    uint64_t v37 = Text.init<A>(_:)();
    uint64_t v39 = v37;
    uint64_t v40 = v38;
    *(void *)&long long v79 = v37;
    *((void *)&v79 + 1) = v38;
    char v42 = v41 & 1;
    *(void *)&long long v80 = v41 & 1;
    *((void *)&v80 + 1) = v43;
    LOBYTE(v81) = 0;
  }
  else
  {
    id v44 = *(void **)v67;
    uint64_t v65 = v24;
    char v45 = v67[8];
    sub_1001AEDAC(v44, v45);
    id v46 = sub_1004E75C0(v44, v45);
    uint64_t v67 = v29;
    uint64_t v47 = v46;
    sub_1001AEDC8(v44, v45);
    unint64_t v48 = v28;
    unint64_t v49 = v68;
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    unint64_t v50 = v71;
    OvernightMetricsViewModel.summary.getter();
    v65(v49, v70);
    OvernightMetricsViewModel.Summary.variant.getter();
    v48(v50, v77);

    uint64_t v51 = v75;
    ((void (*)(char *, void, uint64_t))v67)(v27, enum case for OvernightMetricsViewModel.Summary.Variant.insufficientData(_:), v75);
    LOBYTE(v49) = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)();
    v30(v27, v51);
    v30(v18, v51);
    if ((v49 & 1) == 0)
    {
      sub_1006948E0(v66, &v82);
      long long v79 = v82;
      long long v80 = v83;
      LOBYTE(v81) = v84;
      HIBYTE(v81) = 1;
      sub_1000AFA94(&qword_100953E60);
      sub_1000AFA94(&qword_1009598A0);
      sub_10038CA4C();
      sub_10038CC7C();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    }
    uint64_t v53 = v72;
    uint64_t v52 = v73;
    uint64_t v54 = v74;
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for LocalizationFeature.workout(_:), v74);
    uint64_t v55 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v57 = v56;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    *(void *)&long long v82 = v55;
    *((void *)&v82 + 1) = v57;
    sub_1000A06D0();
    uint64_t v37 = Text.init<A>(_:)();
    uint64_t v39 = v37;
    uint64_t v40 = v38;
    char v42 = v58 & 1;
    *(void *)&long long v79 = v37;
    *((void *)&v79 + 1) = v38;
    *(void *)&long long v80 = v58 & 1;
    *((void *)&v80 + 1) = v59;
    LOBYTE(v81) = 1;
  }
  sub_1000A1750(v37, v38, v42);
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  long long v79 = v82;
  long long v80 = v83;
  __int16 v81 = v84;
  sub_1000AFA94(&qword_100953E60);
  sub_1000AFA94(&qword_1009598A0);
  sub_10038CA4C();
  sub_10038CC7C();
  _ConditionalContent<>.init(storage:)();
  sub_1000A06C0(v39, v40, v42);
  swift_bridgeObjectRelease();
LABEL_7:
  double result = *(double *)&v82;
  long long v61 = v83;
  unsigned __int8 v62 = v84;
  char v63 = v85;
  BOOL v64 = v76;
  *uint64_t v76 = v82;
  v64[1] = v61;
  *((unsigned char *)v64 + 32) = v62;
  *((unsigned char *)v64 + 33) = v63;
  return result;
}

double sub_1006948E0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char v45 = a2;
  uint64_t v3 = type metadata accessor for LocalizationFeature();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v43 - v11;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v14 = *(id *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_1001AEDAC(*(id *)v13, v15);
  id v16 = sub_1004E75C0(v14, v15);
  sub_1001AEDC8(v14, v15);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  uint64_t v17 = OvernightMetricsViewModel.changeCountDescription.getter();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v12, v6);
  if (v19)
  {
    *(void *)&long long v51 = v17;
    *((void *)&v51 + 1) = v19;
    sub_1000A06D0();
    uint64_t v46 = Text.init<A>(_:)();
    uint64_t v47 = v21;
    uint64_t v48 = v22 & 1;
    uint64_t v49 = v23;
    char v50 = 0;
  }
  else
  {
    id v24 = *(id *)v13;
    uint64_t v25 = *(unsigned __int8 *)(v13 + 8);
    sub_1001AEDAC(*(id *)v13, *(unsigned char *)(v13 + 8));
    id v26 = sub_1004E75C0(v24, v25);
    sub_1001AEDC8(v24, v25);
    swift_retain();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v27 = OvernightMetricsViewModel.changeDetectedCountToday.getter();
    LOBYTE(v25) = v28;
    v20(v9, v6);
    if (v25) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = v27;
    }
    uint64_t v31 = v43;
    uint64_t v30 = v44;
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v5, enum case for LocalizationFeature.workout(_:), v44);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1007509E0;
    *(void *)(v32 + 56) = &type metadata for Int;
    *(void *)(v32 + 64) = &protocol witness table for Int;
    *(void *)(v32 + 32) = v29;
    uint64_t v33 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v51 = v33;
    *((void *)&v51 + 1) = v35;
    sub_1000A06D0();
    uint64_t v46 = Text.init<A>(_:)();
    uint64_t v47 = v37;
    uint64_t v48 = v36 & 1;
    uint64_t v49 = v38;
    char v50 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v51;
  long long v40 = v52;
  char v41 = v53;
  char v42 = v45;
  _OWORD *v45 = v51;
  v42[1] = v40;
  *((unsigned char *)v42 + 32) = v41;
  return result;
}

uint64_t sub_100694CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t countAndFlagsBits = a1;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v117 = *(void *)(v3 - 8);
  uint64_t v118 = v3;
  __chkstk_darwin(v3);
  uint64_t v116 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v97 = *(void *)(DataType - 8);
  double v98 = (void *)DataType;
  __chkstk_darwin(DataType);
  id v94 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v95 = *(void *)(ViewModel - 8);
  id v96 = (void *)ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v93 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Font.TextStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136[0]._uint64_t countAndFlagsBits = sub_100693A3C();
  v136[0]._object = v16;
  sub_1000A06D0();
  uint64_t v101 = Text.init<A>(_:)();
  uint64_t v102 = v17;
  uint64_t v99 = v18;
  char v20 = v19 & 1;
  uint64_t v111 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  uint64_t v112 = v13 + 104;
  v111(v15, enum case for Font.TextStyle.title2(_:), v12);
  uint64_t v21 = enum case for Font.Design.rounded(_:);
  uint64_t v22 = type metadata accessor for Font.Design();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(void (**)(char *, void, uint64_t))(v23 + 104);
  unsigned int v109 = v21;
  uint64_t v106 = v24;
  uint64_t v107 = v23 + 104;
  v24(v11, v21, v22);
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  uint64_t v110 = v22;
  uint64_t v108 = v23 + 56;
  uint64_t v105 = v25;
  v25(v11, 0, 1, v22);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v11, &qword_10094C448);
  id v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  Swift::Int v113 = v15;
  uint64_t v114 = v13 + 8;
  uint64_t v115 = v12;
  unint64_t v104 = v26;
  v26(v15, v12);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v27 = v101;
  uint64_t v28 = v99;
  uint64_t v29 = Text.font(_:)();
  uint64_t v100 = v30;
  LODWORD(v103) = v31;
  swift_release();
  sub_1000A06C0(v27, v28, v20);
  swift_bridgeObjectRelease();
  uint64_t v32 = countAndFlagsBits + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v33 = *(id *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_1001AEDAC(*(id *)v32, v34);
  id v35 = sub_1004E75C0(v33, v34);
  sub_1001AEDC8(v33, v34);
  swift_retain();

  LOBYTE(v35) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  if (v35)
  {
    uint64_t View = static Color.white.getter();
  }
  else
  {
    sub_1001AEDAC(v33, v34);
    id v37 = sub_1004E75C0(v33, v34);
    sub_1001AEDC8(v33, v34);
    swift_retain();

    uint64_t v39 = v97;
    uint64_t v38 = v98;
    long long v40 = v94;
    (*(void (**)(char *, void, void *))(v97 + 104))(v94, enum case for TrainingLoadDataType.workout(_:), v98);
    uint64_t v102 = v29;
    char v41 = v93;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    (*(void (**)(char *, void *))(v39 + 8))(v40, v38);
    uint64_t View = TrainingLoadViewModel.loadBandTodayColor()();
    uint64_t v29 = v102;
    (*(void (**)(char *, void *))(v95 + 8))(v41, v96);
  }
  char v42 = v103 & 1;
  v136[0]._uint64_t countAndFlagsBits = View;
  uint64_t v43 = v100;
  uint64_t v44 = Text.foregroundStyle<A>(_:)();
  uint64_t v101 = v45;
  uint64_t v102 = v44;
  uint64_t v103 = v46;
  char v48 = v47 & 1;
  sub_1000A06C0(v29, v43, v42);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v100) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  double v57 = sub_1006956BC(countAndFlagsBits, v136);
  object = v136[0]._object;
  uint64_t countAndFlagsBits = v136[0]._countAndFlagsBits;
  double v98 = v136[1]._object;
  uint64_t v99 = v136[1]._countAndFlagsBits;
  id v96 = v136[2]._object;
  uint64_t v97 = v136[2]._countAndFlagsBits;
  id v94 = (char *)v136[3]._object;
  uint64_t v95 = v136[3]._countAndFlagsBits;
  LODWORD(v93) = LOBYTE(v136[4]._countAndFlagsBits);
  char v59 = BYTE1(v136[4]._countAndFlagsBits);
  uint64_t v60 = v113;
  uint64_t v61 = v115;
  ((void (*)(char *, void, uint64_t, double))v111)(v113, enum case for Font.TextStyle.footnote(_:), v115, v57);
  uint64_t v62 = v110;
  v106(v11, v109, v110);
  v105(v11, 0, 1, v62);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v11, &qword_10094C448);
  v104(v60, v61);
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  BOOL v64 = v116;
  uint64_t v63 = v117;
  uint64_t v65 = v118;
  (*(void (**)(char *, void, uint64_t))(v117 + 104))(v116, enum case for Font.Leading.tight(_:), v118);
  uint64_t v66 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v68 = swift_getKeyPath();
  LOBYTE(v63) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  *(_DWORD *)char v151 = *(_DWORD *)v122;
  *(_DWORD *)&v153[3] = *(_DWORD *)&v121[3];
  *(_DWORD *)uint64_t v153 = *(_DWORD *)v121;
  int v144 = v124;
  __int16 v145 = v125;
  *(_DWORD *)&v151[3] = *(_DWORD *)&v122[3];
  HIWORD(v131._countAndFlagsBits) = v125;
  char v126 = v59;
  char v123 = 0;
  char v120 = 0;
  *(_DWORD *)((char *)&v131._countAndFlagsBits + 2) = v124;
  HIDWORD(v133._object) = *(_DWORD *)&v122[3];
  uint64_t v69 = countAndFlagsBits;
  v127._uint64_t countAndFlagsBits = countAndFlagsBits;
  v127._object = object;
  BOOL v71 = v98;
  uint64_t v70 = v99;
  v128._uint64_t countAndFlagsBits = v99;
  v128._object = v98;
  uint64_t v73 = v96;
  uint64_t v72 = v97;
  v129._uint64_t countAndFlagsBits = v97;
  v129._object = v96;
  uint64_t v75 = v94;
  uint64_t v74 = v95;
  v130._uint64_t countAndFlagsBits = v95;
  v130._object = v94;
  char v76 = (char)v93;
  LOBYTE(v131._countAndFlagsBits) = (_BYTE)v93;
  BYTE1(v131._countAndFlagsBits) = v59;
  v131._object = (void *)KeyPath;
  v132._uint64_t countAndFlagsBits = v66;
  v132._object = (void *)v68;
  v133._uint64_t countAndFlagsBits = 0;
  LOBYTE(v133._object) = 0;
  *(_DWORD *)((char *)&v133._object + 1) = *(_DWORD *)v122;
  LOBYTE(v134._countAndFlagsBits) = v63;
  HIDWORD(v134._countAndFlagsBits) = *(_DWORD *)&v121[3];
  *(_DWORD *)((char *)&v134._countAndFlagsBits + 1) = *(_DWORD *)v121;
  v134._object = v77;
  *(void *)&v135[0] = v78;
  *((void *)&v135[0] + 1) = v79;
  *(void *)&v135[1] = v80;
  BYTE8(v135[1]) = 0;
  char v140 = v48;
  char v137 = 0;
  v136[9] = *(Swift::String *)((char *)v135 + 9);
  *(_OWORD *)((char *)&v136[8] + 7) = v135[0];
  *(Swift::String *)((char *)&v136[7] + 7) = v134;
  *(Swift::String *)((char *)&v136[6] + 7) = v133;
  *(Swift::String *)((char *)&v136[1] + 7) = v128;
  *(Swift::String *)((char *)v136 + 7) = v127;
  *(Swift::String *)((char *)&v136[5] + 7) = v132;
  *(Swift::String *)((char *)&v136[4] + 7) = v131;
  *(Swift::String *)((char *)&v136[3] + 7) = v130;
  *(Swift::String *)((char *)&v136[2] + 7) = v129;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v139;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v139[3];
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v138;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v138[3];
  char v81 = v137;
  uint64_t v83 = v101;
  uint64_t v82 = v102;
  *(void *)a2 = v102;
  *(void *)(a2 + 8) = v83;
  *(unsigned char *)(a2 + 16) = v48;
  *(void *)(a2 + 24) = v103;
  *(unsigned char *)(a2 + 32) = v100;
  *(void *)(a2 + 40) = v50;
  *(void *)(a2 + 48) = v52;
  *(void *)(a2 + 56) = v54;
  *(void *)(a2 + 64) = v56;
  *(unsigned char *)(a2 + 72) = v81;
  Swift::String v84 = v136[7];
  *(Swift::String *)(a2 + 169) = v136[6];
  *(Swift::String *)(a2 + 185) = v84;
  Swift::String v85 = v136[9];
  *(Swift::String *)(a2 + 201) = v136[8];
  *(Swift::String *)(a2 + 217) = v85;
  Swift::String v86 = v136[3];
  *(Swift::String *)(a2 + 105) = v136[2];
  *(Swift::String *)(a2 + 121) = v86;
  Swift::String v87 = v136[5];
  *(Swift::String *)(a2 + 137) = v136[4];
  *(Swift::String *)(a2 + 153) = v87;
  Swift::String v88 = v136[1];
  *(Swift::String *)(a2 + 73) = v136[0];
  *(Swift::String *)(a2 + 89) = v88;
  v141[0] = v69;
  v141[1] = object;
  v141[2] = v70;
  v141[3] = v71;
  v141[4] = v72;
  v141[5] = v73;
  v141[6] = v74;
  v141[7] = v75;
  char v142 = v76;
  char v143 = v59;
  uint64_t v146 = KeyPath;
  uint64_t v147 = v66;
  uint64_t v148 = v68;
  uint64_t v149 = 0;
  char v150 = 0;
  char v152 = v63;
  char v154 = v77;
  uint64_t v155 = v78;
  uint64_t v156 = v79;
  uint64_t v157 = v80;
  char v158 = 0;
  uint64_t v89 = v82;
  uint64_t v90 = v83;
  sub_1000A1750(v82, v83, v48);
  swift_bridgeObjectRetain();
  sub_100699B20((uint64_t)&v127);
  sub_100699B9C((uint64_t)v141);
  sub_1000A06C0(v89, v90, v48);
  return swift_bridgeObjectRelease();
}

double sub_1006956BC@<D0>(uint64_t a1@<X0>, Swift::String *a2@<X8>)
{
  Swift::String v86 = a2;
  uint64_t BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison();
  uint64_t v79 = *(void *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  uint64_t v78 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v5 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84._uint64_t countAndFlagsBits = type metadata accessor for TrainingLoadViewModel();
  v83._uint64_t countAndFlagsBits = *(void *)(v84._countAndFlagsBits - 8);
  __chkstk_darwin(v84._countAndFlagsBits);
  v82._uint64_t countAndFlagsBits = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_100964D38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100964D40);
  __chkstk_darwin(v15 - 8);
  uint64_t v77 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  Swift::String v85 = (char *)&v71 - v18;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  char v20 = *(void **)v19;
  v81._uint64_t countAndFlagsBits = v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_1001AEDAC(v20, v21);
  id v22 = sub_1004E75C0(v20, v21);
  sub_1001AEDC8(v20, v21);
  swift_retain();

  LOBYTE(v22) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  if ((v22 & 1) == 0)
  {
    uint64_t v71 = a1;
    sub_1001AEDAC(v20, v21);
    id v29 = sub_1004E75C0(v20, v21);
    sub_1001AEDC8(v20, v21);
    swift_retain();

    uint64_t v30 = *(void (**)(void))(v5 + 104);
    unsigned int v73 = enum case for TrainingLoadDataType.workout(_:);
    uint64_t v74 = (void (*)(char *, void, uint64_t))v30;
    v30(v7);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    int v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v75 = v7;
    uint64_t v76 = DataType;
    uint64_t v72 = v31;
    v31(v7, DataType);
    TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter();
    uint64_t countAndFlagsBits = v84._countAndFlagsBits;
    id v33 = *(void (**)(char *, uint64_t))(v83._countAndFlagsBits + 8);
    v33(v11, v84._countAndFlagsBits);
    uint64_t SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary();
    uint64_t v35 = *(void *)(SampleDaySummary - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v14, 1, SampleDaySummary) == 1)
    {
      sub_10008DB18((uint64_t)v14, &qword_100964D38);
      uint64_t ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline();
      uint64_t v37 = (uint64_t)v85;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(ChronicBaseline - 8) + 56))(v85, 1, 1, ChronicBaseline);
    }
    else
    {
      uint64_t v38 = v78;
      TrainingLoadSampleDaySummary.trainingLoad.getter();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, SampleDaySummary);
      uint64_t v37 = (uint64_t)v85;
      TrainingLoadBaselineComparison.chronicBaseline.getter();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v38, BaselineComparison);
      uint64_t v39 = type metadata accessor for TrainingLoadChronicBaseline();
      uint64_t v40 = *(void *)(v39 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      uint64_t v41 = v77;
      sub_1000AEF2C(v37, v77, &qword_100964D40);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v40 + 88))(v41, v39) == enum case for TrainingLoadChronicBaseline.available(_:))
      {
        sub_1006963C4(v71, &v91._countAndFlagsBits);
        Swift::String v42 = v91;
        uint64_t countAndFlagsBits_low = LOBYTE(v92._countAndFlagsBits);
        object = v92._object;
        uint64_t KeyPath = swift_getKeyPath();
        Swift::String v87 = v42;
        v88._uint64_t countAndFlagsBits = countAndFlagsBits_low;
        v88._object = object;
        *(void *)uint64_t v89 = KeyPath;
        *(void *)&v89[8] = 4;
        *(void *)&v89[16] = 0;
        *(void *)&v89[24] = 0;
        LOBYTE(v90) = 0;
LABEL_9:
        sub_1000AFA94(&qword_100968458);
        sub_1000AFA94(&qword_100968460);
        sub_100699C18();
        sub_100699D24();
        _ConditionalContent<>.init(storage:)();
        Swift::String v84 = v91;
        Swift::String v83 = v92;
        Swift::String v82 = v93;
        Swift::String v81 = v94;
        char v63 = v95;
        sub_10008DB18(v37, &qword_100964D40);
        Swift::String v87 = v84;
        Swift::String v88 = v83;
        *(Swift::String *)uint64_t v89 = v82;
        *(Swift::String *)&v89[16] = v81;
        LOBYTE(v90) = v63;
        HIBYTE(v90) = 1;
        goto LABEL_10;
      }
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
    }
    uint64_t v46 = *(void **)v81._countAndFlagsBits;
    char v47 = *(unsigned char *)(v81._countAndFlagsBits + 8);
    sub_1001AEDAC(*(id *)v81._countAndFlagsBits, v47);
    id v48 = sub_1004E75C0(v46, v47);
    sub_1001AEDC8(v46, v47);
    swift_retain();

    uint64_t v49 = v75;
    uint64_t v50 = v76;
    v74(v75, v73, v76);
    uint64_t v51 = (char *)v82._countAndFlagsBits;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    v72(v49, v50);
    TrainingLoadViewModel.loadBandTodayLocalizedLongDescriptionInNonActiveState()();
    v33(v51, countAndFlagsBits);
    Swift::String v52 = String.uppercased()();
    swift_bridgeObjectRelease();
    Swift::String v91 = v52;
    sub_1000A06D0();
    uint64_t v53 = Text.init<A>(_:)();
    uint64_t v55 = v54;
    double v57 = v56;
    uint64_t v59 = v58 & 1;
    uint64_t v60 = swift_getKeyPath();
    id v61 = [self secondaryLabelColor];
    uint64_t v62 = Color.init(_:)();
    v87._uint64_t countAndFlagsBits = v53;
    v87._object = v55;
    v88._uint64_t countAndFlagsBits = v59;
    v88._object = v57;
    *(void *)uint64_t v89 = v60;
    *(_OWORD *)&v89[8] = xmmword_100768560;
    *(void *)&v89[24] = v62;
    LOBYTE(v90) = 1;
    goto LABEL_9;
  }
  sub_100696080((unint64_t *)&v91);
  Swift::String v23 = v91;
  uint64_t v24 = LOBYTE(v92._countAndFlagsBits);
  uint64_t v25 = v92._object;
  uint64_t v26 = swift_getKeyPath();
  id v27 = [self secondaryLabelColor];
  uint64_t v28 = Color.init(_:)();
  Swift::String v87 = v23;
  v88._uint64_t countAndFlagsBits = v24;
  v88._object = v25;
  *(void *)uint64_t v89 = v26;
  *(_OWORD *)&v89[8] = xmmword_100768560;
  *(void *)&v89[24] = v28;
  __int16 v90 = 0;
LABEL_10:
  sub_1000AFA94(&qword_100968488);
  sub_1000AFA94(&qword_100968490);
  sub_100699950(&qword_100968498, &qword_100968488, (void (*)(void))sub_100699C18);
  sub_100699D4C(&qword_1009684A0, &qword_100968490, (void (*)(void))sub_100699C18, (void (*)(void))sub_100699D24);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v91._countAndFlagsBits;
  Swift::String v65 = v92;
  Swift::String v66 = v93;
  Swift::String v67 = v94;
  char v68 = v95;
  char v69 = v96;
  uint64_t v70 = v86;
  *Swift::String v86 = v91;
  v70[1] = v65;
  v70[2] = v66;
  v70[3] = v67;
  LOBYTE(v70[4]._countAndFlagsBits) = v68;
  BYTE1(v70[4]._countAndFlagsBits) = v69;
  return result;
}

uint64_t sub_100696080@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v41 = type metadata accessor for LocalizationFeature();
  uint64_t v1 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1006936E4();
  uint64_t v48 = v4;
  unint64_t v40 = sub_1000A06D0();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v15 = static Text.+ infix(_:_:)();
  uint64_t v43 = v16;
  uint64_t v44 = v15;
  uint64_t v45 = v17;
  int v42 = v18 & 1;
  sub_1000A06C0(v10, v12, v14);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v19 = v41;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizationFeature.workout(_:), v41);
  uint64_t v20 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  uint64_t v47 = v20;
  uint64_t v48 = v22;
  uint64_t v23 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  LOBYTE(v10) = v26 & 1;
  id v27 = [self secondaryLabelColor];
  uint64_t v47 = Color.init(_:)();
  uint64_t v28 = Text.foregroundStyle<A>(_:)();
  uint64_t v30 = v29;
  LOBYTE(v5) = v31 & 1;
  sub_1000A06C0(v23, v25, v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v43;
  uint64_t v33 = v44;
  LOBYTE(v23) = v42;
  unint64_t v40 = static Text.+ infix(_:_:)();
  uint64_t v41 = v34;
  unint64_t v36 = v35;
  LOBYTE(v19) = v37;
  sub_1000A06C0(v28, v30, v5);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v33, v32, v23);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v46;
  unint64_t *v46 = v40;
  v39[1] = v36;
  *((unsigned char *)v39 + 16) = v19 & 1;
  v39[3] = v41;
  return result;
}

uint64_t sub_1006963C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  Swift::String v65 = a2;
  uint64_t v3 = type metadata accessor for LocalizationFeature();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v6 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  char v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v9 = *(void *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1006936E4();
  uint64_t v67 = v12;
  unint64_t v61 = sub_1000A06D0();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v58 = v14;
  uint64_t v59 = v15;
  char v17 = v16 & 1;
  uint64_t v18 = a1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v19 = *(id *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_1001AEDAC(*(id *)v18, v20);
  id v21 = sub_1004E75C0(v19, v20);
  sub_1001AEDC8(v19, v20);
  swift_retain();

  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, DataType);
  uint64_t View = TrainingLoadViewModel.loadBandTodayColor()();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, ViewModel);
  uint64_t v66 = View;
  uint64_t v23 = v58;
  uint64_t v24 = Text.foregroundStyle<A>(_:)();
  uint64_t v26 = v25;
  LOBYTE(v8) = v27 & 1;
  sub_1000A06C0(v13, v23, v17);
  swift_release();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v28 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v30 = v29;
  LOBYTE(v6) = v31 & 1;
  uint64_t v32 = static Text.+ infix(_:_:)();
  uint64_t v59 = v33;
  uint64_t ViewModel = v34;
  LODWORD(v58) = v35 & 1;
  sub_1000A06C0(v28, v30, v6);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v24, v26, (char)v8);
  swift_bridgeObjectRelease();
  char v37 = v62;
  uint64_t v36 = v63;
  uint64_t v38 = v64;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, enum case for LocalizationFeature.workout(_:), v64);
  uint64_t v39 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  uint64_t v66 = v39;
  uint64_t v67 = v41;
  uint64_t v42 = Text.init<A>(_:)();
  uint64_t v44 = v43;
  LOBYTE(v36) = v45 & 1;
  id v46 = [self secondaryLabelColor];
  uint64_t v66 = Color.init(_:)();
  uint64_t v47 = Text.foregroundStyle<A>(_:)();
  uint64_t v49 = v48;
  LOBYTE(v13) = v50 & 1;
  sub_1000A06C0(v42, v44, v36);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v59;
  LOBYTE(v42) = v58;
  uint64_t v63 = static Text.+ infix(_:_:)();
  uint64_t v64 = v52;
  uint64_t v54 = v53;
  LOBYTE(v38) = v55;
  sub_1000A06C0(v47, v49, v13);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v32, v51, v42);
  uint64_t result = swift_bridgeObjectRelease();
  double v57 = v65;
  *Swift::String v65 = v63;
  v57[1] = v54;
  *((unsigned char *)v57 + 16) = v38 & 1;
  v57[3] = v64;
  return result;
}

uint64_t sub_10069692C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  Carduint64_t View = type metadata accessor for LoadCardView();
  uint64_t v4 = CardView - 8;
  uint64_t v41 = *(void *)(CardView - 8);
  uint64_t v40 = *(void *)(v41 + 64);
  __chkstk_darwin(CardView);
  uint64_t v37 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009682E8);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009682F0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009682F8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100968300);
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  __chkstk_darwin(v16);
  uint64_t v36 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100968308);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  id v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100696D84(v2, (uint64_t)v8);
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v12, &qword_1009682E8);
  v12[*(int *)(v10 + 44)] = 0;
  sub_10008DB18((uint64_t)v8, &qword_1009682E8);
  uint64_t v22 = v2 + *(int *)(v4 + 32);
  uint64_t v23 = v2;
  uint64_t v35 = v2;
  sub_1000AEF2C(v22, (uint64_t)v43, &qword_10094C750);
  LOBYTE(v4) = v44 != 0;
  sub_10008DB18((uint64_t)v43, &qword_10094C750);
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v15, &qword_1009682F0);
  v15[*(int *)(v13 + 36)] = v4;
  sub_10008DB18((uint64_t)v12, &qword_1009682F0);
  uint64_t v24 = v37;
  sub_1006990E0(v23, v37);
  unint64_t v25 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v26 = swift_allocObject();
  sub_100699148(v24, v26 + v25);
  sub_1006991C4();
  char v27 = v36;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v15, &qword_1009682F8);
  uint64_t v28 = v24;
  sub_1006990E0(v35, v24);
  uint64_t v29 = swift_allocObject();
  sub_100699148(v28, v29 + v25);
  uint64_t v31 = v38;
  uint64_t v30 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v21, v27, v39);
  uint64_t v32 = (uint64_t (**)())&v21[*(int *)(v19 + 44)];
  *uint64_t v32 = sub_1006993FC;
  v32[1] = (uint64_t (*)())v29;
  uint64_t v32[2] = 0;
  v32[3] = 0;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v30);
  return sub_1000AEEC8((uint64_t)v21, v42, &qword_100968308);
}

uint64_t sub_100696D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a1;
  Carduint64_t View = type metadata accessor for LoadCardView();
  uint64_t v38 = *(void *)(CardView - 8);
  __chkstk_darwin(CardView - 8);
  uint64_t v39 = v4;
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v13 = type metadata accessor for AdaptiveStackType();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  __chkstk_darwin(v13);
  uint64_t v43 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000AFA94(&qword_100968348);
  uint64_t v41 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v37 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v40 = (char *)v34 - v17;
  uint64_t v42 = sub_1000AFA94(&qword_100968350);
  __chkstk_darwin(v42);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094AA90 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_100997DB0;
  swift_getKeyPath();
  uint64_t v46 = v20;
  sub_1000859C8((unint64_t *)&qword_10094E130, (void (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingStateHandler);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v20 + 16))
  {
    v34[0] = (uint64_t)v5;
    v34[1] = a2;
    sub_100092088((uint64_t)v12);
    id v21 = *(void (**)(char *, void, uint64_t))(v7 + 104);
    v21(v9, enum case for DynamicTypeSize.accessibility1(_:), v6);
    char v22 = static DynamicTypeSize.< infix(_:_:)();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v9, v6);
    v23(v12, v6);
    uint64_t v24 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
    if ((v22 & 1) == 0) {
      uint64_t v24 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v43, *v24, v36);
    sub_100092088((uint64_t)v12);
    v21(v9, enum case for DynamicTypeSize.xLarge(_:), v6);
    char v25 = static DynamicTypeSize.< infix(_:_:)();
    v23(v9, v6);
    v23(v12, v6);
    if (v25) {
      static VerticalAlignment.center.getter();
    }
    else {
      static VerticalAlignment.top.getter();
    }
    static HorizontalAlignment.leading.getter();
    uint64_t v27 = v34[0];
    sub_1006990E0(v44, v34[0]);
    unint64_t v28 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v29 = swift_allocObject();
    sub_100699148(v27, v29 + v28);
    sub_1000AFA94(&qword_100968358);
    sub_1000A132C(&qword_100968360, &qword_100968358);
    uint64_t v30 = v37;
    AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)();
    uint64_t v32 = v40;
    uint64_t v31 = v41;
    uint64_t v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v30, v45);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v19, v32, v33);
    swift_storeEnumTagMultiPayload();
    sub_1006993A4();
    sub_1000A132C(&qword_100968340, &qword_100968348);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1006993A4();
    sub_1000A132C(&qword_100968340, &qword_100968348);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100697408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v99 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100968368);
  __chkstk_darwin(v3 - 8);
  Swift::String v92 = (uint64_t *)((char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v95 = sub_1000AFA94(&qword_100960008) - 8;
  __chkstk_darwin(v95);
  uint64_t v93 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100960010);
  __chkstk_darwin(v6 - 8);
  uint64_t v97 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v94 = (uint64_t)&v81 - v9;
  __chkstk_darwin(v10);
  uint64_t v96 = (uint64_t)&v81 - v11;
  uint64_t v90 = type metadata accessor for DynamicTypeSize();
  uint64_t v103 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  Swift::String v83 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v88 = (uint64_t)&v81 - v14;
  uint64_t v15 = sub_1000AFA94(&qword_100968370);
  __chkstk_darwin(v15 - 8);
  uint64_t v101 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v18 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v82 = *(void *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  char v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  uint64_t v85 = *(void *)(DayView - 8);
  __chkstk_darwin(DayView);
  uint64_t v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_100968378) - 8;
  __chkstk_darwin(v84);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_100968380) - 8;
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v86 = (uint64_t)&v81 - v29;
  __chkstk_darwin(v30);
  uint64_t v102 = (uint64_t)&v81 - v31;
  uint64_t v32 = a1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v33 = *(id *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_1001AEDAC(*(id *)v32, v34);
  id v35 = sub_1004E75C0(v33, v34);
  sub_1001AEDC8(v33, v34);
  swift_retain();

  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, DataType);
  TrainingLoadViewModel.fractionalBaselineDifferenceFromChronicForToday.getter();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v22, ViewModel);
  uint64_t v36 = type metadata accessor for WidgetRenderingMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v101, 1, 1, v36);
  id v37 = *(id *)v32;
  LOBYTE(v35) = *(unsigned char *)(v32 + 8);
  sub_1001AEDAC(*(id *)v32, (char)v35);
  id v38 = sub_1004E75C0(v37, (char)v35);
  sub_1001AEDC8(v37, (char)v35);
  swift_retain();

  dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  TrainingLoadDayView.init(fractionalDifferenceFromAcuteToChronicBaseline:widgetRenderingMode:isLoading:)();
  uint64_t v39 = v88;
  sub_100092088(v88);
  uint64_t v40 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v41 = v103;
  uint64_t v42 = *(char **)(v103 + 104);
  uint64_t ViewModel = v103 + 104;
  uint64_t v101 = v42;
  uint64_t v43 = v83;
  LODWORD(v82) = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v44 = v90;
  ((void (*)(char *, void, uint64_t))v42)(v83, enum case for DynamicTypeSize.accessibility1(_:), v90);
  static DynamicTypeSize.< infix(_:_:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v103 = v41 + 8;
  v45(v43, v44);
  v45((char *)v39, v44);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v46 = v85;
  uint64_t v47 = DayView;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v26, v24, DayView);
  uint64_t v48 = &v26[*(int *)(v84 + 44)];
  long long v49 = v105;
  *(_OWORD *)uint64_t v48 = v104;
  *((_OWORD *)v48 + 1) = v49;
  *((_OWORD *)v48 + 2) = v106;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v47);
  sub_100092088(v39);
  ((void (*)(char *, uint64_t, uint64_t))v101)(v43, v40, v44);
  char v50 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v51 = v43;
  v45(v43, v44);
  v45((char *)v39, v44);
  if (v50) {
    uint64_t v52 = 0;
  }
  else {
    uint64_t v52 = 0x4024000000000000;
  }
  if (v50) {
    uint64_t v53 = 0x4028000000000000;
  }
  else {
    uint64_t v53 = 0;
  }
  char v54 = static Edge.Set.all.getter();
  uint64_t v55 = v86;
  sub_1000AEF2C((uint64_t)v26, v86, &qword_100968378);
  uint64_t v56 = v55 + *(int *)(v89 + 44);
  *(unsigned char *)uint64_t v56 = v54;
  *(void *)(v56 + 8) = 0;
  *(void *)(v56 + 16) = 0;
  *(void *)(v56 + 24) = v52;
  *(void *)(v56 + 32) = v53;
  *(unsigned char *)(v56 + 40) = 0;
  sub_10008DB18((uint64_t)v26, &qword_100968378);
  sub_1000AEEC8(v55, v102, &qword_100968380);
  uint64_t v57 = static HorizontalAlignment.leading.getter();
  uint64_t v58 = (uint64_t)v92;
  *Swift::String v92 = v57;
  *(void *)(v58 + 8) = 0x4000000000000000;
  *(unsigned char *)(v58 + 16) = 0;
  uint64_t v59 = sub_1000AFA94(&qword_100968388);
  sub_100697EE8(v99, (_OWORD *)(v58 + *(int *)(v59 + 44)));
  char v60 = static Edge.Set.top.getter();
  sub_100092088(v39);
  ((void (*)(char *, void, uint64_t))v101)(v51, v82, v44);
  static DynamicTypeSize.< infix(_:_:)();
  v45(v51, v44);
  v45((char *)v39, v44);
  EdgeInsets.init(_all:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v69 = v93;
  sub_1000AEF2C(v58, v93, &qword_100968368);
  uint64_t v70 = v69 + *(int *)(v95 + 44);
  *(unsigned char *)uint64_t v70 = v60;
  *(void *)(v70 + 8) = v62;
  *(void *)(v70 + 16) = v64;
  *(void *)(v70 + 24) = v66;
  *(void *)(v70 + 32) = v68;
  *(unsigned char *)(v70 + 40) = 0;
  sub_10008DB18(v58, &qword_100968368);
  uint64_t v71 = static Alignment.leading.getter();
  uint64_t v72 = v94;
  sub_1004DED20(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v94, 0.0, 1, 0.0, 1, v71, v73);
  sub_10008DB18(v69, &qword_100960008);
  uint64_t v74 = v96;
  sub_1000AEEC8(v72, v96, &qword_100960010);
  uint64_t v75 = v102;
  uint64_t v76 = v91;
  sub_1000AEF2C(v102, v91, &qword_100968380);
  uint64_t v77 = v97;
  sub_1000AEF2C(v74, v97, &qword_100960010);
  uint64_t v78 = v98;
  sub_1000AEF2C(v76, v98, &qword_100968380);
  uint64_t v79 = sub_1000AFA94(&qword_100968390);
  sub_1000AEF2C(v77, v78 + *(int *)(v79 + 48), &qword_100960010);
  sub_10008DB18(v74, &qword_100960010);
  sub_10008DB18(v75, &qword_100968380);
  sub_10008DB18(v77, &qword_100960010);
  return sub_10008DB18(v76, &qword_100968380);
}

uint64_t sub_100697EE8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100968398);
  __chkstk_darwin(v4 - 8);
  Swift::String v87 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_1009683A0);
  __chkstk_darwin(v85);
  uint64_t v88 = (uint64_t)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000AFA94(&qword_1009683A8);
  __chkstk_darwin(v86);
  uint64_t v93 = (uint64_t)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v90 = (uint64_t)v84 - v9;
  uint64_t v10 = type metadata accessor for Divider();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  __chkstk_darwin(v10);
  uint64_t v89 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)v84 - v13;
  Carduint64_t View = type metadata accessor for LoadCardView();
  __chkstk_darwin(CardView);
  uint64_t v98 = (uint64_t)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v95 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v84 - v20;
  uint64_t v22 = sub_1000AFA94(&qword_1009683B0);
  __chkstk_darwin(v22 - 8);
  uint64_t v100 = (char *)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v99 = (uint64_t)v84 - v25;
  sub_100694CBC(a1, (uint64_t)&v105);
  uint64_t v94 = CardView;
  uint64_t v26 = a1;
  uint64_t v27 = a1 + *(int *)(CardView + 28);
  id v28 = *(id *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_1001AEDAC(*(id *)v27, v29);
  id v30 = sub_1004E75C0(v28, v29);
  sub_1001AEDC8(v28, v29);
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  char v31 = OvernightMetricsViewModel.isWatchExperienceAvailable.getter();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v96 = v16;
  v32(v21, v16);

  if (v31 == 2)
  {
    uint64_t v33 = v98;
    sub_1006990E0(v26, v98);
LABEL_4:
    sub_10069950C(v33);
    uint64_t v34 = (uint64_t)v100;
    goto LABEL_5;
  }
  uint64_t v33 = v98;
  sub_1006990E0(v26, v98);
  if ((v31 & 1) == 0) {
    goto LABEL_4;
  }
  v84[1] = v26;
  uint64_t v52 = v33 + *(int *)(v94 + 28);
  id v53 = *(id *)v52;
  char v54 = *(unsigned char *)(v52 + 8);
  sub_1001AEDAC(*(id *)v52, v54);
  id v55 = sub_1004E75C0(v53, v54);
  sub_1001AEDC8(v53, v54);
  swift_retain();

  uint64_t v56 = v95;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  char v57 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter();
  v32(v56, v96);
  sub_10069950C(v33);
  uint64_t v34 = (uint64_t)v100;
  if (v57 != 2 && (v57 & 1) == 0)
  {
    Divider.init()();
    char v58 = static Axis.Set.horizontal.getter();
    uint64_t v59 = (uint64_t)v87;
    *Swift::String v87 = v58;
    uint64_t v60 = sub_1000AFA94(&qword_1009683C8);
    sub_100698764(v59 + *(int *)(v60 + 44));
    char v61 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v70 = v88;
    sub_1000AEF2C(v59, v88, &qword_100968398);
    uint64_t v71 = v70 + *(int *)(v85 + 36);
    *(unsigned char *)uint64_t v71 = v61;
    *(void *)(v71 + 8) = v63;
    *(void *)(v71 + 16) = v65;
    *(void *)(v71 + 24) = v67;
    *(void *)(v71 + 32) = v69;
    *(unsigned char *)(v71 + 40) = 0;
    sub_10008DB18(v59, &qword_100968398);
    uint64_t v72 = static Font.subheadline.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v74 = v93;
    sub_1000AEF2C(v70, v93, &qword_1009683A0);
    uint64_t v75 = (uint64_t *)(v74 + *(int *)(v86 + 36));
    *uint64_t v75 = KeyPath;
    v75[1] = v72;
    sub_10008DB18(v70, &qword_1009683A0);
    uint64_t v76 = v90;
    sub_1000AEEC8(v74, v90, &qword_1009683A8);
    uint64_t v78 = v91;
    uint64_t v77 = v92;
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    uint64_t v80 = v89;
    v79(v89, v97, v92);
    sub_1000AEF2C(v76, v74, &qword_1009683A8);
    v79((char *)v34, v80, v77);
    uint64_t v81 = sub_1000AFA94(&qword_1009683D0);
    sub_1000AEF2C(v74, v34 + *(int *)(v81 + 48), &qword_1009683A8);
    sub_10008DB18(v76, &qword_1009683A8);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
    v82(v97, v77);
    sub_10008DB18(v74, &qword_1009683A8);
    v82(v80, v77);
    uint64_t v83 = sub_1000AFA94(&qword_1009683B8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v34, 0, 1, v83);
    uint64_t v36 = v99;
    sub_1000AEEC8(v34, v99, &qword_1009683B0);
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v35 = sub_1000AFA94(&qword_1009683B8);
  uint64_t v36 = v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v99, 1, 1, v35);
LABEL_6:
  sub_1000AEF2C(v36, v34, &qword_1009683B0);
  long long v37 = v118[0];
  v101[12] = v117;
  v102[0] = v118[0];
  *(_OWORD *)((char *)v102 + 9) = *(_OWORD *)((char *)v118 + 9);
  long long v38 = v113;
  long long v39 = v114;
  v101[8] = v113;
  v101[9] = v114;
  long long v41 = v115;
  long long v40 = v116;
  v101[10] = v115;
  v101[11] = v116;
  long long v42 = v109;
  long long v43 = v110;
  v101[4] = v109;
  v101[5] = v110;
  long long v45 = v111;
  long long v44 = v112;
  v101[6] = v111;
  v101[7] = v112;
  long long v46 = v105;
  long long v47 = v106;
  v101[0] = v105;
  v101[1] = v106;
  long long v49 = v107;
  long long v48 = v108;
  v101[2] = v107;
  v101[3] = v108;
  a2[12] = v117;
  a2[13] = v37;
  *(_OWORD *)((char *)a2 + 217) = *(_OWORD *)((char *)v118 + 9);
  a2[8] = v38;
  a2[9] = v39;
  a2[10] = v41;
  a2[11] = v40;
  a2[4] = v42;
  a2[5] = v43;
  a2[6] = v45;
  a2[7] = v44;
  *a2 = v46;
  a2[1] = v47;
  a2[2] = v49;
  a2[3] = v48;
  uint64_t v50 = sub_1000AFA94(&qword_1009683C0);
  sub_1000AEF2C(v34, (uint64_t)a2 + *(int *)(v50 + 48), &qword_1009683B0);
  sub_100699568((uint64_t)v101);
  sub_10008DB18(v36, &qword_1009683B0);
  sub_10008DB18(v34, &qword_1009683B0);
  v103[12] = v117;
  v104[0] = v118[0];
  *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v118 + 9);
  v103[8] = v113;
  v103[9] = v114;
  v103[10] = v115;
  v103[11] = v116;
  v103[4] = v109;
  v103[5] = v110;
  v103[6] = v111;
  v103[7] = v112;
  v103[0] = v105;
  v103[1] = v106;
  v103[2] = v107;
  v103[3] = v108;
  return sub_10069975C((uint64_t)v103);
}

uint64_t sub_100698764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009683D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_1000AFA94(&qword_1009683E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v18 - v12;
  *(void *)uint64_t v13 = static VerticalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v14 = sub_1000AFA94(&qword_1009683E8);
  sub_100698958((uint64_t)&v13[*(int *)(v14 + 44)]);
  *(void *)uint64_t v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v15 = sub_1000AFA94(&qword_1009683F0);
  sub_100698B2C((uint64_t)&v7[*(int *)(v15 + 44)]);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v10, &qword_1009683E0);
  sub_1000AEF2C((uint64_t)v7, (uint64_t)v4, &qword_1009683D8);
  sub_1000AEF2C((uint64_t)v10, a1, &qword_1009683E0);
  uint64_t v16 = sub_1000AFA94(&qword_1009683F8);
  sub_1000AEF2C((uint64_t)v4, a1 + *(int *)(v16 + 48), &qword_1009683D8);
  sub_10008DB18((uint64_t)v7, &qword_1009683D8);
  sub_10008DB18((uint64_t)v13, &qword_1009683E0);
  sub_10008DB18((uint64_t)v4, &qword_1009683D8);
  return sub_10008DB18((uint64_t)v10, &qword_1009683E0);
}

uint64_t sub_100698958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_100968400);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - v7;
  sub_100693D84((uint64_t)v22);
  uint64_t v9 = v22[0];
  uint64_t v19 = v22[1];
  uint64_t v20 = v22[0];
  char v10 = v23;
  uint64_t v11 = v24;
  uint64_t v21 = v24;
  sub_100693F98((uint64_t)v8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v12(v5, v8, v2);
  *(void *)a1 = v9;
  uint64_t v13 = v19;
  *(void *)(a1 + 8) = v19;
  *(unsigned char *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  uint64_t v14 = sub_1000AFA94(&qword_100968450);
  v12((char *)(a1 + *(int *)(v14 + 64)), v5, v2);
  uint64_t v15 = v20;
  sub_1000A1750(v20, v13, v10);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  v16(v8, v2);
  v16(v5, v2);
  sub_1000A06C0(v15, v13, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100698B2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_100968400);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100968408);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100968410);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v23 - v15;
  sub_100693D84((uint64_t)v29);
  uint64_t v26 = v29[1];
  uint64_t v27 = v29[0];
  int v25 = v30;
  uint64_t v28 = v31;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100693F98((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 256;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_100968408);
  uint64_t v18 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v18 = v17;
  *((void *)v18 + 1) = 4;
  v18[16] = 0;
  sub_10008DB18((uint64_t)v9, &qword_100968408);
  sub_1000AEEC8((uint64_t)v13, (uint64_t)v16, &qword_100968410);
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v13, &qword_100968410);
  uint64_t v20 = v26;
  uint64_t v19 = v27;
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v20;
  LOBYTE(v3) = v25;
  *(unsigned char *)(a1 + 16) = v25;
  *(void *)(a1 + 24) = v28;
  *(_WORD *)(a1 + 32) = 256;
  *(void *)(a1 + 40) = KeyPath;
  *(void *)(a1 + 48) = 4;
  *(unsigned char *)(a1 + 56) = 0;
  uint64_t v21 = sub_1000AFA94(&qword_100968418);
  sub_1000AEF2C((uint64_t)v13, a1 + *(int *)(v21 + 48), &qword_100968410);
  sub_1000A1750(v19, v20, v3);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008DB18((uint64_t)v16, &qword_100968410);
  sub_10008DB18((uint64_t)v13, &qword_100968410);
  sub_1000A06C0(v19, v20, v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100698E3C(uint64_t a1)
{
  Carduint64_t View = type metadata accessor for LoadCardView();
  sub_1000AEF2C(a1 + *(int *)(CardView + 24), (uint64_t)v7, &qword_10094C750);
  if (!v8) {
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
  uint64_t v3 = (char **)sub_10007E4EC(v7, v8);
  uint64_t v4 = a1 + *(int *)(CardView + 20);
  memset(v6, 0, sizeof(v6));
  sub_1004FB8EC(v4, (uint64_t)v6, *v3);
  sub_10008DB18((uint64_t)v6, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
}

void sub_100698EE4(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for LoadCardView() + 28);
  id v2 = *(id *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_1001AEDAC(*(id *)v1, v3);
  uint64_t v4 = (unsigned __int8 *)sub_1004E75C0(v2, v3);
  sub_1001AEDC8(v2, v3);
  swift_getKeyPath();
  sub_1000859C8(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v5 = v4[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter + 9] << 8;

  if (v5 != 768)
  {
    sub_1001AEDAC(v2, v3);
    id v6 = sub_1004E75C0(v2, v3);
    sub_1001AEDC8(v2, v3);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
  }
  sub_1001AEDAC(v2, v3);
  id v8 = sub_1004E75C0(v2, v3);
  sub_1001AEDC8(v2, v3);
  sub_10021D878();
}

uint64_t sub_1006990E0(uint64_t a1, uint64_t a2)
{
  Carduint64_t View = type metadata accessor for LoadCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(CardView - 8) + 16))(a2, a1, CardView);
  return a2;
}

uint64_t sub_100699148(uint64_t a1, uint64_t a2)
{
  Carduint64_t View = type metadata accessor for LoadCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(CardView - 8) + 32))(a2, a1, CardView);
  return a2;
}

uint64_t sub_1006991AC()
{
  return sub_100699414(sub_100698E3C);
}

unint64_t sub_1006991C4()
{
  unint64_t result = qword_100968310;
  if (!qword_100968310)
  {
    sub_1000A1370(&qword_1009682F8);
    sub_100699240();
    sub_1002AA3AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968310);
  }
  return result;
}

unint64_t sub_100699240()
{
  unint64_t result = qword_100968318;
  if (!qword_100968318)
  {
    sub_1000A1370(&qword_1009682F0);
    sub_100699AA0(&qword_100968320, &qword_1009682E8, (void (*)(void))sub_100699304);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968318);
  }
  return result;
}

unint64_t sub_100699304()
{
  unint64_t result = qword_100968328;
  if (!qword_100968328)
  {
    sub_1000A1370(&qword_100968330);
    sub_1006993A4();
    sub_1000A132C(&qword_100968340, &qword_100968348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968328);
  }
  return result;
}

unint64_t sub_1006993A4()
{
  unint64_t result = qword_100968338;
  if (!qword_100968338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968338);
  }
  return result;
}

uint64_t sub_1006993FC()
{
  return sub_100699414((uint64_t (*)(uint64_t))sub_100698EE4);
}

uint64_t sub_100699414(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for LoadCardView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10069949C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LoadCardView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100697408(v4, a1);
}

uint64_t sub_10069950C(uint64_t a1)
{
  Carduint64_t View = type metadata accessor for LoadCardView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(CardView - 8) + 8))(a1, CardView);
  return a1;
}

uint64_t sub_100699568(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  char v8 = *(unsigned char *)(a1 + 144);
  char v9 = *(unsigned char *)(a1 + 145);
  sub_1000A1750(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_100699644(v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100699644(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
    char v12 = a9 & 1;
    return sub_1006996E0(a1, a2, a3, a4, a5, a6, a7, a8, v12);
  }
  else
  {
    sub_1000A1750(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_1006996E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  sub_1000A1750(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  if (a9) {
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10069975C(uint64_t a1)
{
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  char v7 = *(unsigned char *)(a1 + 144);
  char v8 = *(unsigned char *)(a1 + 145);
  sub_1000A06C0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_100699834(v12, v11, v10, v2, v3, v4, v5, v6, v7, v8);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100699834(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
    char v12 = a9 & 1;
    return sub_1006998D0(a1, a2, a3, a4, a5, a6, a7, a8, v12);
  }
  else
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1006998D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  sub_1000A06C0(a1, a2, a3 & 1);
  if (a9) {
    swift_release();
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100699950(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006999F4()
{
  unint64_t result = qword_100968430;
  if (!qword_100968430)
  {
    sub_1000A1370(&qword_100968438);
    sub_100699D4C(&qword_100968440, &qword_100968448, (void (*)(void))sub_10038CA4C, (void (*)(void))sub_10038CC7C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968430);
  }
  return result;
}

uint64_t sub_100699AA0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100699B18(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001BB654(a1, a2, a3);
}

uint64_t sub_100699B20(uint64_t a1)
{
  return a1;
}

uint64_t sub_100699B9C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100699C18()
{
  unint64_t result = qword_100968468;
  if (!qword_100968468)
  {
    sub_1000A1370(&qword_100968458);
    sub_100699CB8();
    sub_1000A132C(&qword_100952828, &qword_100952830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968468);
  }
  return result;
}

unint64_t sub_100699CB8()
{
  unint64_t result = qword_100968470;
  if (!qword_100968470)
  {
    sub_1000A1370(&qword_100968478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968470);
  }
  return result;
}

uint64_t sub_100699D24()
{
  return sub_100699950(&qword_100968480, &qword_100968460, (void (*)(void))sub_1000E2004);
}

uint64_t sub_100699D4C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100699DD8()
{
  unint64_t result = qword_1009684A8;
  if (!qword_1009684A8)
  {
    sub_1000A1370(&qword_100968308);
    sub_1000A1370(&qword_1009682F8);
    sub_1006991C4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009684A8);
  }
  return result;
}

void *sub_100699E88(unint64_t a1)
{
  return sub_10006A578(a1);
}

void *sub_100699E94(unint64_t a1)
{
  return sub_10006A578(a1);
}

void *sub_100699EA0(unint64_t a1)
{
  return sub_10006A578(a1);
}

void *sub_100699EAC(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10008F484(i, (uint64_t)v5);
    sub_10069AE58();
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_100699FA8()
{
  swift_getKeyPath();
  sub_10069AE00();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled);
}

uint64_t sub_10069A020@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10069AE00();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled);
  return result;
}

uint64_t sub_10069A0A0()
{
  return swift_release();
}

id sub_10069A140()
{
  uint64_t v1 = v0;
  ObservationRegistrar.init()();
  uint64_t v2 = self;
  id result = [v2 defaultWorkspace];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = result;
  NSString v5 = String._bridgeToObjectiveC()();
  unsigned __int8 v6 = [v4 applicationIsInstalled:v5];

  v1[OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled] = v6;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for MessagesAppInstallationObserver();
  id v7 = [super init];
  id result = [v2 defaultWorkspace];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  char v8 = result;
  [result addObserver:v7];

  id result = [v2 defaultWorkspace];
  if (result)
  {
    char v9 = result;
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 applicationIsInstalled:v10];

    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10069AE00();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    return v7;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10069A37C(uint64_t a1)
{
}

void *sub_10069A3A4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      unsigned __int8 v6 = v5;
      uint64_t v7 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v8 = [v5 bundleIdentifier];
      if (v8)
      {
        char v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if (v10 == 0xD000000000000013 && v12 == 0x80000001007D4A20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v6;
        }
        char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v4)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }

      ++v3;
      if (v7 == v2) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10069A534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 32) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10069A5CC, v6, v5);
}

uint64_t sub_10069A5CC()
{
  uint64_t v1 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  v0[2] = v1;
  sub_10069AE00();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_10069A6DC(uint64_t a1)
{
}

void sub_10069A704(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  uint64_t v8 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = sub_100699EAC(a1);
    if (v11)
    {
      uint64_t v12 = sub_10069A3A4((unint64_t)v11);
      swift_bridgeObjectRelease();

      if (v12)
      {
        os_log_type_t v13 = static os_log_type_t.default.getter();
        uint64_t v14 = (void *)HKLogActivity;
        os_log_type_t v15 = v13;
        if (os_log_type_enabled(HKLogActivity, v13))
        {
          os_log_t v25 = v14;
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136315138;
          uint64_t v24 = v16 + 4;
          uint64_t v17 = _typeName(_:qualified:)();
          uint64_t v26 = sub_10008F1F4(v17, v18, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          os_log_t v19 = v25;
          _os_log_impl((void *)&_mh_execute_header, v25, v15, a2, v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        uint64_t v20 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
        type metadata accessor for MainActor();
        id v21 = v4;
        uint64_t v22 = static MainActor.shared.getter();
        uint64_t v23 = (void *)swift_allocObject();
        void v23[2] = v22;
        v23[3] = &protocol witness table for MainActor;
        v23[4] = v21;
        sub_1000713D0((uint64_t)v10, a4, (uint64_t)v23);
        swift_release();
      }
    }
  }
}

uint64_t sub_10069A974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 32) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10069AA0C, v6, v5);
}

uint64_t sub_10069AA0C()
{
  uint64_t v1 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 0;
  v0[2] = v1;
  sub_10069AE00();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10069AB18(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a3) {
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = a1;
  a4(v6);

  return swift_bridgeObjectRelease();
}

id sub_10069AB94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MessagesAppInstallationObserver();
  return [super dealloc];
}

uint64_t sub_10069AC38()
{
  return type metadata accessor for MessagesAppInstallationObserver();
}

uint64_t type metadata accessor for MessagesAppInstallationObserver()
{
  uint64_t result = qword_1009684E8;
  if (!qword_1009684E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10069AC8C()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10069AD2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_10069A974(a1, v4, v5, v6);
}

void sub_10069ADE8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp31MessagesAppInstallationObserver__messagesIsInstalled) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_10069AE00()
{
  unint64_t result = qword_100968510;
  if (!qword_100968510)
  {
    type metadata accessor for MessagesAppInstallationObserver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968510);
  }
  return result;
}

unint64_t sub_10069AE58()
{
  unint64_t result = qword_100968518;
  if (!qword_100968518)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100968518);
  }
  return result;
}

uint64_t sub_10069AE9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10069A534(a1, v4, v5, v6);
}

void sub_10069AF50()
{
}

void sub_10069AFDC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v4 - 8);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_10096AA70);
    id v5 = a2;
    LocalizedStringResource.init(stringLiteral:)();
    EntityProperty<>.init(title:)();
    id v6 = v5;
    swift_retain();
    [v6 unearned];
    EntityProperty.wrappedValue.setter();

    swift_release();
    sub_1003915D0();
    sub_1000AFA94((uint64_t *)&unk_10096AA80);
    sub_1001B5C10();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v7 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
    sub_1000818CC();
    uint64_t v8 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
    UIView.annotate(with:)();
  }
}

void *sub_10069B1C4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8, char a9)
{
  uint64_t v10 = v9;
  uint64_t v16 = (objc_class *)type metadata accessor for TodayActivityTileDataModel();
  v10[7] = 0;
  v10[8] = 0;
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  swift_unknownObjectWeakInit();
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary] = 0;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_observers] = _swiftEmptyArrayStorage;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider] = a2;
  v50.receiver = v17;
  v50.super_class = v16;
  unint64_t v18 = a2;
  id v19 = [super init];
  uint64_t v20 = *(void **)(*(void *)&v18[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener]
                 + OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers);
  id v21 = v19;
  [v20 addObject:v21];
  sub_100391E04();

  v10[2] = v21;
  type metadata accessor for HistoryActivityTileDataModel();
  swift_allocObject();
  uint64_t v22 = a3;
  uint64_t v23 = sub_10026FD18(v22);

  v10[3] = v23;
  type metadata accessor for CatalogTipActivityTileDataModel();
  swift_allocObject();
  uint64_t v24 = swift_retain();
  v10[6] = sub_100023DE8(v24);
  type metadata accessor for TrendsActivityTileDataModel();
  swift_allocObject();
  id v25 = a1;
  id v44 = a4;
  id v26 = a5;
  id v27 = a6;
  void v10[4] = sub_100328E08(v25, v44, v26, v27, a9);
  sub_10008E75C(a7, (uint64_t)v49);
  id v28 = objc_allocWithZone((Class)type metadata accessor for AwardsActivityTileDataModel());
  char v29 = v18;
  id v30 = a8;
  v10[5] = sub_100380248(v49, v30, v29);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = v23[5];
  v23[5] = sub_10069BCBC;
  v23[6] = v31;
  sub_10005E5F8(v32);
  uint64_t v33 = v10[6];
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  uint64_t v35 = *(void *)(v33 + 32);
  *(void *)(v33 + 32) = sub_10069BCC4;
  *(void *)(v33 + 40) = v34;
  sub_10005E5F8(v35);
  uint64_t v36 = v10[4];
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = *(void *)(v36 + 104);
  *(void *)(v36 + 104) = sub_10069BCE8;
  *(void *)(v36 + 112) = v37;
  sub_10005E5F8(v38);
  uint64_t v39 = v10[5];
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  long long v41 = (uint64_t (**)())(v39 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
  uint64_t v42 = *(void *)(v39 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
  *long long v41 = sub_10069BD0C;
  v41[1] = (uint64_t (*)())v40;
  swift_retain();
  sub_10005E5F8(v42);

  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a7);
  swift_release();
  return v10;
}

uint64_t sub_10069B558()
{
  uint64_t v0 = type metadata accessor for IndexSet();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v5 = *(void (**)(char *))(result + 56);
    if (v5)
    {
      id v6 = &off_1008B7150;
      sub_10069BD30();
      swift_retain();
      sub_1000AFA94(&qword_100955540);
      sub_10069BD88();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v5(v3);
      sub_10005E5F8((uint64_t)v5);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10069B6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void (**)(char *))(result + 56);
    sub_10008A670((uint64_t)v8);
    uint64_t result = swift_release();
    if (v8)
    {
      uint64_t v9 = a2;
      sub_10069BD30();
      sub_1000AFA94(&qword_100955540);
      sub_10069BD88();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v8(v6);
      sub_10005E5F8((uint64_t)v8);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_10069B850@<X0>(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TrendPairTableViewCell.TrailingMetricType(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrendListMetric();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v3 + 32);
  if (*(unsigned char *)(v15 + 96) == 2)
  {
    uint64_t v16 = *(void *)(v15 + 88);
    if (a2)
    {
      if ((uint64_t)(a1 + 0x4000000000000000) < 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v17 = 2 * a1;
        if (((2 * a1) & 0x8000000000000000) == 0)
        {
          unint64_t v18 = *(void *)(v16 + 16);
          if (v17 < v18)
          {
            uint64_t v19 = v17 | 1;
            uint64_t v20 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
            uint64_t v21 = *(void *)(v11 + 72);
            sub_1000AB940(v20 + v21 * v17, (uint64_t)v14);
            if (v19 >= (uint64_t)v18)
            {
              uint64_t v22 = 1;
            }
            else
            {
              sub_1000AB940(v20 + v21 * v19, (uint64_t)v9);
              uint64_t v22 = 0;
            }
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v22, 2, v10);
            uint64_t v29 = sub_1000AFA94((uint64_t *)&unk_10095BFA0);
            uint64_t v30 = a3 + *(int *)(v29 + 48);
            sub_10069BC1C((uint64_t)v14, a3, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
            sub_10069BC1C((uint64_t)v9, v30, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a3, 0, 1, v29);
          }
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if ((a1 & 0x8000000000000000) != 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (*(void *)(v16 + 16) <= a1)
    {
LABEL_21:
      __break(1u);
      return result;
    }
    sub_1000AB940(v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * a1, a3);
    uint64_t v28 = sub_1000AFA94((uint64_t *)&unk_10095BFA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3 + *(int *)(v28 + 48), 2, 2, v10);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    uint64_t v26 = a3;
    uint64_t v27 = 0;
    uint64_t v25 = v28;
  }
  else
  {
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_10095BFA0);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v25 = v23;
    uint64_t v26 = a3;
    uint64_t v27 = 1;
  }

  return v24(v26, v27, 1, v25);
}

uint64_t sub_10069BB98()
{
  swift_release();
  swift_release();

  swift_release();
  sub_10005E5F8(*(void *)(v0 + 56));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityTileViewDataModel()
{
  return self;
}

uint64_t sub_10069BC1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10069BC84()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10069BCBC()
{
  return sub_10069B558();
}

uint64_t sub_10069BCC4()
{
  return sub_10069B6DC(v0, (uint64_t)&off_1008B7178);
}

uint64_t sub_10069BCE8()
{
  return sub_10069B6DC(v0, (uint64_t)&off_1008B71A0);
}

uint64_t sub_10069BD0C()
{
  return sub_10069B6DC(v0, (uint64_t)&off_1008B71D0);
}

unint64_t sub_10069BD30()
{
  unint64_t result = qword_100955538;
  if (!qword_100955538)
  {
    type metadata accessor for IndexSet();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955538);
  }
  return result;
}

unint64_t sub_10069BD88()
{
  unint64_t result = qword_100955548;
  if (!qword_100955548)
  {
    sub_1000A1370(&qword_100955540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955548);
  }
  return result;
}

uint64_t sub_10069BDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10069BE38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10069BEAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10069BF20()
{
  uint64_t v1 = (void *)v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = 2;
  id v2 = v1;
  static Published.subscript.setter();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_10069BFD8()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (char *)Strong;
    static os_log_type_t.default.getter();
    id v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendManager];
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1000E7078;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100010050;
    aBlock[3] = &unk_1008D5850;
    id v6 = _Block_copy(aBlock);
    swift_release();
    [v4 cloudKitAccountStatusWithCompletion:v6];
    _Block_release(v6);
  }
}

void sub_10069C178()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  id v3 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    int v6 = FIDeviceMeetsMinimumOSVersionDaytona();
    uint64_t v7 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
    if (v6 != v5[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion])
    {
      v5[v7] = FIDeviceMeetsMinimumOSVersionDaytona();
      char v8 = sub_10069DD90();
      v5[v7] = FIDeviceMeetsMinimumOSVersionDaytona();
      static os_log_type_t.default.getter();
      id v9 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      uint64_t v10 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = 0;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = v5;
      *(unsigned char *)(v11 + 40) = v8 & 1;
      uint64_t v12 = v5;
      sub_1000713D0((uint64_t)v2, (uint64_t)&unk_1009687F0, v11);
      swift_release();
    }
  }
}

id sub_10069C37C()
{
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v0);

  id v2 = [self defaultCenter];
  [v2 removeObserver:v0];

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FriendsSetupCoordinator();
  return [super dealloc];
}

uint64_t sub_10069C5C8(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) != v2)
  {
    uint64_t v33 = v1;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) = v2;
    uint64_t v19 = self;
    uint64_t v35 = v5;
    uint64_t v20 = v19;
    id v21 = [v19 standardUserDefaults];
    uint64_t v34 = v3;
    id v22 = v21;
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v24 = String._bridgeToObjectiveC()();
    [v22 setValue:isa forKey:v24];

    id v25 = [v20 standardUserDefaults];
    Date.init()();
    NSUserDefaults.set<A>(_:for:)();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v37 = *(void *)(v37 + 8);
    uint64_t v27 = v11;
    uint64_t v28 = v38;
    ((void (*)(char *, uint64_t))v37)(v27, v38);
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10069EF5C;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008D56E8;
    uint64_t v30 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    uint64_t v31 = v40;
    uint64_t v32 = v34;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v35);
    return ((uint64_t (*)(char *, uint64_t))v37)(v13, v28);
  }
  return result;
}

void sub_10069CAD8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      char v4 = sub_10002CB9C();
    }
    else
    {
      char v4 = 0;
    }
    v1[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] = v4 & 1;
  }
  os_log_type_t v5 = static os_log_type_t.default.getter();
  uint64_t v6 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    swift_retain_n();
    uint64_t v7 = v6;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_beginAccess();
    uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v9) {

    }
    sub_1000AFA94(&qword_1009687C0);
    uint64_t v10 = Optional.description.getter();
    sub_10008F1F4(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v5, "No longer assuming parity between phone and watch, resetting assumption to value from cache: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_10069CCE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_10069EE58;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D5670;
  uint64_t v14 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  id v15 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

void sub_10069CF8C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    uint64_t v13 = (void *)HKLogActivity;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogActivity, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      id v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v54 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Failed to fetch watch accounts info with error: %@", v16, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    goto LABEL_40;
  }
  static os_log_type_t.default.getter();
  id v19 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  unsigned __int8 v58 = 0;
  if (!a2)
  {
    long long v56 = 0u;
    long long v57 = 0u;
LABEL_28:
    sub_10008DB18((uint64_t)&v56, &qword_100955A00);
    goto LABEL_29;
  }
  v53[2] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v53[3] = v20;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v21 = sub_1000DE24C((uint64_t)&v54), (v22 & 1) != 0))
  {
    sub_10008F484(*(void *)(a2 + 56) + 32 * v21, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_1000DEDB4((uint64_t)&v54);
  if (!*((void *)&v57 + 1)) {
    goto LABEL_28;
  }
  sub_1000AFA94(&qword_1009687B8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    static os_log_type_t.fault.getter();
    id v35 = HKLogActivity;
    goto LABEL_30;
  }
  uint64_t v23 = v54;
  uint64_t v24 = *(void *)(v54 + 16);
  if (!v24)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v25 = 0;
  v53[1] = (char *)&type metadata for Any + 8;
  while (1)
  {
    uint64_t v26 = *(void *)(v23 + 8 * v25 + 32);
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
    if (*(void *)(v26 + 16))
    {
      uint64_t v30 = v27;
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1000DA1C0(v30, v29);
      if (v32)
      {
        sub_10008F484(*(void *)(v26 + 56) + 32 * v31, (uint64_t)&v54);
      }
      else
      {
        long long v54 = 0u;
        long long v55 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v55 + 1))
    {
      sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
      if (swift_dynamicCast())
      {
        Class isa = (Class)v56;
        goto LABEL_24;
      }
    }
    else
    {
      sub_10008DB18((uint64_t)&v54, &qword_100955A00);
    }
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
LABEL_24:
    char v34 = Bool.init(truncating:)();

    if (v34) {
      break;
    }
    if (v24 == ++v25) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v58 = 1;
  static os_log_type_t.default.getter();
  id v35 = HKLogActivity;
LABEL_30:
  os_log(_:dso:log:_:_:)();

LABEL_31:
  if (a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] == 1)
  {
    static os_log_type_t.default.getter();
    id v36 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    int v37 = v58;
    uint64_t v38 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists;
    if (v58 != a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists])
    {
      os_log_type_t v39 = static os_log_type_t.default.getter();
      uint64_t v40 = (void *)HKLogActivity;
      os_log_type_t v41 = v39;
      if (os_log_type_enabled(HKLogActivity, v39))
      {
        uint64_t v42 = v40;
        long long v43 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)long long v43 = 67109120;
        LODWORD(v54) = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v42, v41, "Watch CloudKit status changed to %{BOOL}d handling.", v43, 8u);
        swift_slowDealloc();
      }
      swift_beginAccess();
      unsigned __int8 v44 = v58;
      if (v58 != a3[v38])
      {
        a3[v38] = v58;
        id v45 = [self standardUserDefaults];
        LOBYTE(v56) = v44;
        NSUserDefaults.set<A>(_:for:)();
      }
      char v46 = sub_10069DD90();
      a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion] = FIDeviceMeetsMinimumOSVersionDaytona();
      static os_log_type_t.default.getter();
      id v47 = HKLogActivity;
      os_log(_:dso:log:_:_:)();

      uint64_t v48 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v11, 1, 1, v48);
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = 0;
      *(void *)(v49 + 24) = 0;
      *(void *)(v49 + 32) = a3;
      *(unsigned char *)(v49 + 40) = v46 & 1;
      objc_super v50 = a3;
      sub_1000713D0((uint64_t)v11, (uint64_t)&unk_1009687B0, v49);
      swift_release();
    }
    Date.init()();
    uint64_t v51 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v8, 0, 1, v51);
    uint64_t v52 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastWatchCloudKitAccountFetchTimestamp];
    swift_beginAccess();
    sub_1000E37D4((uint64_t)v8, v52);
    swift_endAccess();
  }
LABEL_40:
  a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountFetchInProgress] = 0;
}

uint64_t sub_10069D788(uint64_t a1, uint64_t a2, void *a3)
{
  char v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10069D834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 64) = a5;
  *(void *)(v5 + 24) = a4;
  return _swift_task_switch(sub_10069D858, 0, 0);
}

uint64_t sub_10069D858()
{
  *(void *)(v0 + 32) = type metadata accessor for MainActor();
  *(void *)(v0 + 40) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10069D8F0, v2, v1);
}

uint64_t sub_10069D8F0()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(unsigned char *)(v0 + 65) = *(unsigned char *)(v0 + 16);
  return _swift_task_switch(sub_10069D9B4, 0, 0);
}

uint64_t sub_10069D9B4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion) & 1) != 0
    || ([*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendListSectionManager) hasAnyFriendsSetup] & 1) != 0)
  {
    goto LABEL_5;
  }
  uint64_t v2 = (uint64_t (*)())[self sharedBehavior];
  if (!v2)
  {
    __break(1u);
    return _swift_task_switch(v2, v3, v4);
  }
  uint64_t v5 = v2;
  unint64_t v6 = (unint64_t)[v2 fitnessMode];

  if ((v6 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
LABEL_5:
    if (*(unsigned char *)(v0 + 64))
    {
      if ((*(unsigned char *)(v0 + 65) & 1) == 0)
      {
        *(void *)(v0 + 56) = static MainActor.shared.getter();
        uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v9 = v8;
        uint64_t v10 = sub_10069DCE4;
        goto LABEL_10;
      }
    }
    else if ((*(unsigned char *)(v0 + 65) & 1) == 0)
    {
      *(void *)(v0 + 48) = static MainActor.shared.getter();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v11;
      uint64_t v10 = sub_10069DB88;
LABEL_10:
      uint64_t v2 = v10;
      uint64_t v3 = v7;
      uint64_t v4 = v9;
      return _swift_task_switch(v2, v3, v4);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    id v12 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10069DB88()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16) = 1;
  id v2 = v1;
  static Published.subscript.setter();
  return _swift_task_switch(sub_10069DC40, 0, 0);
}

uint64_t sub_10069DC40()
{
  static os_log_type_t.default.getter();
  id v1 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10069DCE4()
{
  id v1 = (void *)v0[3];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = 0;
  id v2 = v1;
  static Published.subscript.setter();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10069DD90()
{
  os_log_type_t v1 = static os_log_type_t.default.getter();
  id v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    id v4 = v0;
    uint64_t v5 = v2;
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109632;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 14) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v5, v3, "Deriving account status from: [phone=%{BOOL}d], [watch=%{BOOL}d], [watch(assumed)=%{BOOL}d]", (uint8_t *)v6, 0x14u);
    swift_slowDealloc();
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive) != 1) {
    return 0;
  }
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) & 1) != 0
    || (*((unsigned char *)v0 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) & 1) != 0)
  {
    return 1;
  }
  uint64_t result = (uint64_t)[self sharedBehavior];
  if (result)
  {
    uint64_t v8 = (void *)result;
    unint64_t v9 = (unint64_t)[(id)result fitnessMode];

    return (v9 & 0xFFFFFFFFFFFFFFFELL) == 2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10069DF98@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FriendsSetupCoordinator();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_10069E028()
{
}

void sub_10069E044()
{
}

void sub_10069E060()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultWorkspace];
  if (v3)
  {
    id v4 = v3;
    URL.init(string:)();
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      uint64_t v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    sub_100522E98((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 openSensitiveURL:v8 withOptions:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10069E2E4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10069E364(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10069E3D4(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_10069E404(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10069E42C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

void sub_10069E484(char a1)
{
  id v2 = (__CFString *)kASDomain;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithSuiteName:v4];

  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v7 = (void *)HKLogActivity;
  BOOL v8 = os_log_type_enabled(HKLogActivity, v6);
  if (v5)
  {
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67109120;
      LODWORD(v22) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v6, "Setting defaults for fitness friends setup: %{BOOL}d", v10, 8u);
      swift_slowDealloc();
    }
    id v11 = v5;
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    [v11 setValue:isa forKey:kASActivitySharingIsSetup];

    CFPreferencesAppSynchronize(v2);
    id v13 = [objc_allocWithZone((Class)NPSManager) init];
    sub_1000AFA94(&qword_10094D178);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v15;
    uint64_t v16 = v2;
    sub_100044DCC(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class v17 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 synchronizeUserDefaultsDomain:v16 keys:v17];
  }
  else if (v8)
  {
    uint64_t v18 = v7;
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10008F1F4(v20, v21, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v6, "Error fetching UserDefaults with suitename %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void sub_10069E7C8(uint64_t a1)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void (***)(char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    id v18 = [self defaultWorkspace];
    if (v18)
    {
      id v19 = v18;
      URL.init(string:)();
      uint64_t v20 = type metadata accessor for URL();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v23 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v5, 1, v20) != 1)
      {
        URL._bridgeToObjectiveC()(v22);
        uint64_t v23 = v24;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
      }
      sub_100522E98((uint64_t)_swiftEmptyArrayStorage);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v19 openSensitiveURL:v23 withOptions:isa];
    }
    else
    {
      __break(1u);
    }
  }
  else if (a1 == 1)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive))
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists)) {
        return;
      }
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
      id v36 = sub_10069E044;
      uint64_t v37 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      Class v17 = &unk_1008D55D0;
    }
    else
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.default(_:), v12);
      uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      id v36 = sub_10069E028;
      uint64_t v37 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      Class v17 = &unk_1008D55A8;
    }
    char v34 = sub_100070394;
    id v35 = v17;
    uint64_t v27 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter();
    unint64_t v31 = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v27);

    v30[1](v8, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
  else if (a1)
  {
    static os_log_type_t.fault.getter();
    uint64_t v30 = (void (**)(char *, uint64_t))HKLogActivity;
    os_log(_:dso:log:_:_:)();
    uint64_t v26 = v30;
  }
  else
  {
    sub_10069E484(1);
  }
}

uint64_t sub_10069EDD0()
{
  return swift_deallocObject();
}

uint64_t sub_10069EE08(uint64_t a1, uint64_t a2)
{
  return sub_10069CCE0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10069EE10()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10069EE58()
{
  sub_10069CF8C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char **)(v0 + 32));
}

uint64_t sub_10069EE68()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000DBD6C;
  *(unsigned char *)(v4 + 64) = v3;
  *(void *)(v4 + 24) = v2;
  return _swift_task_switch(sub_10069D858, 0, 0);
}

uint64_t sub_10069EF24()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10069EF5C()
{
}

uint64_t sub_10069EF64()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_10069EFAC()
{
}

void sub_10069EFB4()
{
}

uint64_t sub_10069EFBC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10069EFF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10005DB5C;
  *(unsigned char *)(v4 + 64) = v3;
  *(void *)(v4 + 24) = v2;
  return _swift_task_switch(sub_10069D858, 0, 0);
}

uint64_t sub_10069F0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if (a1 == 1)
  {
    sub_100058A1C((uint64_t)v6);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1009580F0;
  *(void *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10069F30C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000DBD6C;
  return v7();
}

uint64_t sub_10069F3D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10069F418()
{
  uint64_t v2 = *(int **)(v0 + 32);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_10005DB5C;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000DBD6C;
  return v6();
}

uint64_t sub_10069F530()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10069F588()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  if (v1) {
    [*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator) startAnimating];
  }
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  v7[4] = sub_100322D60;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1006A042C;
  void v7[3] = &unk_1008D5918;
  uint64_t v5 = _Block_copy(v7);
  uint64_t v6 = v0;
  swift_release();
  [v2 trackLapsForWorkout:v3 completion:v5];
  _Block_release(v5);
}

void sub_10069F6B4(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    uint64_t v15 = v59;
    uint64_t v16 = v60;
    *(void *)(v14 + 56) = v60;
    Class v17 = sub_1000B1710((uint64_t *)(v14 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, v15, v16);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  if (a1)
  {
    dispatch_group_t v55 = dispatch_group_create();
    v45[1] = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    id v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a1;
    uint64_t v66 = sub_1006A0B68;
    uint64_t v67 = (void *)v19;
    aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_100070394;
    uint64_t v65 = &unk_1008D5968;
    uint64_t v20 = _Block_copy(&aBlock);
    unint64_t v58 = a1;
    uint64_t v21 = v20;
    long long v57 = a3;
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    unint64_t v22 = sub_100075B54();
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
    unint64_t v52 = sub_100075AF8();
    uint64_t v53 = v23;
    unint64_t v54 = v22;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    unint64_t v24 = v58;
    _Block_release(v21);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = v7 + 8;
    uint64_t v51 = v26;
    v26(v9, v6);
    objc_super v50 = *(void (**)(char *, uint64_t))(v11 + 8);
    v50(v13, v10);
    uint64_t v56 = v11 + 8;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (v27) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_6:
        if (v27 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v28 = 0;
        uint64_t v47 = *(void *)&v57[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue];
        unint64_t v46 = v24 & 0xC000000000000001;
        v45[2] = &v64;
        uint64_t v49 = v25;
        uint64_t v48 = v10;
        dispatch_group_t v29 = v55;
        do
        {
          if (v46) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v24 + 8 * v28 + 32);
          }
          unint64_t v31 = v30;
          char v32 = (void *)swift_allocObject();
          uint64_t v33 = v57;
          uint64_t v32[2] = v57;
          v32[3] = v31;
          v32[4] = v28;
          uint64_t v66 = sub_1006A0BB0;
          uint64_t v67 = v32;
          aBlock = _NSConcreteStackBlock;
          uint64_t v63 = 1107296256;
          uint64_t v64 = sub_100070394;
          uint64_t v65 = &unk_1008D59B8;
          char v34 = _Block_copy(&aBlock);
          id v35 = v33;
          id v36 = v29;
          id v37 = v31;
          static DispatchQoS.unspecified.getter();
          char v61 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v34);

          v51(v9, v6);
          uint64_t v10 = v48;
          v50(v13, v48);
          swift_release();
          ++v28;
          unint64_t v24 = v58;
        }
        while (v27 != v28);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v10;
    os_log_type_t v39 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    os_log_type_t v41 = v57;
    *(void *)(v40 + 16) = v57;
    uint64_t v66 = sub_1003EFF34;
    uint64_t v67 = (void *)v40;
    aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_100070394;
    uint64_t v65 = &unk_1008D5A08;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = v41;
    static DispatchQoS.unspecified.getter();
    char v61 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v44 = v55;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v42);

    v51(v9, v6);
    v50(v13, v38);
    swift_release();
  }
}

uint64_t sub_10069FD94(void *a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_14:
    swift_getKeyPath();
    swift_getKeyPath();
    a1;
    static Published.subscript.setter();
    return sub_100362438();
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0x8000000000000000) == 0)
  {
    Class v17 = a1;
    uint64_t v6 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(a2 + 8 * v6 + 32);
      }
      uint64_t v15 = v14;
      id v16 = [v14 distance:v17];
      if (v16)
      {
        uint64_t v7 = v16;
        id v8 = [self meterUnit];
        [v7 doubleValueForUnit:v8];
        uint64_t v10 = v9;
      }
      else
      {
        uint64_t v10 = 0;
      }
      ++v6;
      [v15 elapsedTime];
      uint64_t v12 = v11;
      type metadata accessor for WorkoutDurationMetrics();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      *(void *)(v13 + 24) = 0;
      *(void *)(v13 + 48) = 0;
      *(unsigned char *)(v13 + 56) = 1;
      *(void *)(v13 + 72) = 0;
      *(unsigned char *)(v13 + 80) = 1;
      *(_OWORD *)(v13 + 88) = 0u;
      *(_OWORD *)(v13 + 104) = 0u;
      *(void *)(v13 + 120) = 0;
      *(unsigned char *)(v13 + 128) = 1;
      *(void *)(v13 + 144) = 0;
      *(void *)(v13 + 152) = 0;
      *(void *)(v13 + 136) = 0;
      *(void *)(v13 + 32) = v10;
      *(unsigned char *)(v13 + 40) = 0;
      *(void *)(v13 + 64) = v12;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v4 != v6);
    a1 = v17;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10069FFE0(char *a1, void *a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  uint64_t v12 = *(void *)&a1[OBJC_IVAR___CHWorkoutDetailTrackLapDataSource_distanceUnit];
  uint64_t v13 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject();
  id v14 = v11;
  id v15 = a2;
  id v16 = v13;
  uint64_t v17 = sub_10043E60C(v14, v15, v12, v16, 0, 0);

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v24;
  void v19[2] = a1;
  v19[3] = v20;
  v19[4] = v17;
  aBlock[4] = sub_1006A0BFC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D5A58;
  uint64_t v21 = _Block_copy(aBlock);
  unint64_t v22 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  swift_release();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

uint64_t sub_1006A0318(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v5 = (void (*)(uint64_t *, void))static Published.subscript.modify();
  uint64_t v7 = v6;
  uint64_t v8 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v7 = v8;
  if (!result || v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1005EC1A8(v8);
    uint64_t v8 = result;
    *uint64_t v7 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    swift_release();
    specialized Array._endMutation()();
    v5(&v10, 0);
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A042C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, &qword_100968840);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006A04D0(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = v33;
    if (*(void *)(v33 + 16) > a2)
    {
      char v13 = *(unsigned char *)(v33 + a2 + 32);
      swift_bridgeObjectRelease();
      if (sub_100252154(v13) == 0x65636E6174736964 && v14 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          return sub_1003642C0(a1, a2);
        }
      }
      sub_1003621C4(a1, *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailTrackLapDataSource_distanceUnit), 0, (uint64_t)v11);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
      uint64_t v18 = Text.init(_:)();
      uint64_t v20 = v19;
      char v22 = v21 & 1;
      sub_1002528C4(1);
      uint64_t v23 = Text.foregroundColor(_:)();
      unint64_t v31 = v11;
      uint64_t v32 = v5;
      uint64_t v25 = v24;
      char v27 = v26;
      uint64_t v29 = v28;
      swift_release();
      sub_1000A06C0(v18, v20, v22);
      swift_bridgeObjectRelease();
      uint64_t v33 = v23;
      uint64_t v34 = v25;
      char v35 = v27 & 1;
      uint64_t v36 = v29;
      uint64_t v17 = AnyView.init<A>(_:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v32);
      return v17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A0780(unint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)(v10 + 8 * a1 + 32);
  swift_retain();
LABEL_5:
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 24))
  {
    uint64_t v4 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v4;
  }
  uint64_t result = self;
  BOOL v5 = __OFADD__(a1, 1);
  uint64_t v6 = a1 + 1;
  if (!v5)
  {
    uint64_t v7 = (void *)result;
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v6];
    id v9 = [v7 localizedStringFromNumber:v8 numberStyle:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    return v4;
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_1006A0A0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailTrackLapDataSource();
  return [super dealloc];
}

uint64_t sub_1006A0A44()
{
  return type metadata accessor for WorkoutDetailTrackLapDataSource();
}

uint64_t type metadata accessor for WorkoutDetailTrackLapDataSource()
{
  uint64_t result = qword_100968830;
  if (!qword_100968830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006A0A98()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1006A0AF0()
{
  return swift_deallocObject();
}

uint64_t sub_1006A0B28()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006A0B68()
{
  return sub_10069FD94(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006A0B70()
{
  return swift_deallocObject();
}

uint64_t sub_1006A0BB0()
{
  return sub_10069FFE0(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1006A0BBC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006A0BFC()
{
  return sub_1006A0318(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

char *sub_1006A0C1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for EntryLinksListView();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_dashboardViewController] = a1;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_catalogTipDataModel] = a2;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_summaryUserProfile] = a3;
  uint64_t v11 = (objc_class *)type metadata accessor for EntryLinksViewController();
  v35.receiver = v3;
  v35.super_class = v11;
  id v12 = a1;
  swift_retain();
  char v13 = (char *)[super initWithNibName:0 bundle:0];
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_dashboardViewController];
  uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_summaryUserProfile];
  *uint64_t v10 = v14;
  v10[1] = v15;
  v34[1] = 0x403E000000000000;
  sub_1003ED738();
  char v16 = v13;
  id v17 = v14;
  ScaledMetric.init(wrappedValue:)();
  uint64_t v18 = (void *)((char *)v10 + *(int *)(v8 + 36));
  *uint64_t v18 = 0x4024000000000000;
  v18[1] = 0;
  v18[2] = 0;
  v18[3] = 0;
  id v19 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100968890));
  uint64_t v20 = (void *)UIHostingController.init(rootView:)();
  char v21 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController];
  *(void *)&v16[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController] = v20;
  id v22 = v20;

  [v16 addChildViewController:v22];
  uint64_t v23 = self;
  uint64_t v24 = v16;
  id v25 = [v23 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setTitle:v28];

  uint64_t result = (char *)[v24 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v30 = result;
  uint64_t result = (char *)[v22 view];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v31 = result;
  [v30 addSubview:result];

  uint64_t result = (char *)[v24 view];
  if (result)
  {
    uint64_t v32 = result;
    id v33 = [self blackColor];
    [v32 setBackgroundColor:v33];

    swift_release();
    return v24;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1006A0FEC()
{
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for EntryLinksViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController];
  if (!v1) {
    goto LABEL_14;
  }
  id v2 = [v1 view];
  if (!v2) {
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  BOOL v5 = v4;
  [v4 addSubview:v3];

  id v6 = [v3 leadingAnchor];
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 leadingAnchor];
  id v11 = [v6 constraintEqualToAnchor:v10];

  [v11 setActive:1];
  id v12 = [v3 trailingAnchor];
  id v13 = [v0 view];
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = v13;
  id v15 = [v13 safeAreaLayoutGuide];

  id v16 = [v15 trailingAnchor];
  id v17 = [v12 constraintEqualToAnchor:v16];

  [v17 setActive:1];
  id v18 = [v3 topAnchor];
  id v19 = [v0 view];
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = [v19 safeAreaLayoutGuide];

    id v22 = [v21 topAnchor];
    id v23 = [v18 constraintEqualToAnchor:v22];

    [v23 setActive:1];
    id v24 = [v3 bottomAnchor];
    id v25 = [v0 view];
    if (v25)
    {
      NSString v26 = v25;
      id v27 = [v25 bottomAnchor];

      id v28 = [v24 constraintEqualToAnchor:v27];
      [v28 setActive:1];

      return;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1006A14D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntryLinksViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for EntryLinksViewController()
{
  return self;
}

ValueMetadata *type metadata accessor for AppSettingsPane()
{
  return &type metadata for AppSettingsPane;
}

unint64_t sub_1006A1598@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1006A1624(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1006A15D0()
{
  unint64_t result = qword_100968898;
  if (!qword_100968898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968898);
  }
  return result;
}

unint64_t sub_1006A1624(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

void sub_1006A1670()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewController();
  [super viewDidLoad];
  id v1 = [v0 collectionView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_super v2 = v1;
  [v1 setDelegate:v0];

  id v3 = [v0 collectionView];
  if (!v3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  char v4 = v3;
  [v3 setDataSource:v0];

  id v5 = [v0 collectionView];
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v6 = v5;
  [v5 setScrollEnabled:0];

  id v7 = [v0 collectionView];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v10 = String._bridgeToObjectiveC()();
  [v8 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v10];

  id v11 = [v0 collectionView];
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v12 = v11;
  id v13 = sub_10005DB50();
  [v12 setBackgroundColor:v13];

  id v14 = [v0 collectionView];
  if (v14)
  {
    id v15 = v14;
    [v14 reloadData];

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_1006A18F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutAppRecommendationCollectionViewController()
{
  return self;
}

unint64_t sub_1006A19CC(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithReuseIdentifier:v3 forIndexPath:isa];

  type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return (unint64_t)v5;
  }
  id v7 = (char *)v6;
  uint64_t v8 = *(void *)(v1
                 + OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_recentWorkoutAppRecommendations);
  id v9 = v5;
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v8 + 16))
  {
    sub_10008E75C(v8 + 40 * result + 32, (uint64_t)v12);
    id v11 = sub_10007E4EC((void *)(v1+ OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_appRecommendationDataProvider), *(void *)(v1+ OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_appRecommendationDataProvider+ 24));
    sub_1006A1F88(v12, *v11, v7);

    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v12);
    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006A1E04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = type metadata accessor for AppRecommendationDataProvider();
  v17[4] = &off_1008CFB48;
  v17[0] = a2;
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_10008E75C((uint64_t)v17, (uint64_t)v16);
  sub_10008E75C(a1, (uint64_t)v15);
  type metadata accessor for MainActor();
  swift_retain();
  id v10 = a3;
  uint64_t v11 = static MainActor.shared.getter();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  void v12[4] = v10;
  sub_100093E60(v16, (uint64_t)(v12 + 5));
  sub_100093E60(v15, (uint64_t)(v12 + 10));
  sub_1000713D0((uint64_t)v8, (uint64_t)&unk_1009688E0, (uint64_t)v12);
  swift_release();
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v17);
}

uint64_t sub_1006A1F88(void *a1, uint64_t a2, char *a3)
{
  uint64_t v14 = type metadata accessor for AppRecommendationDataProvider();
  id v15 = &off_1008CFB48;
  v13[0] = a2;
  uint64_t v6 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_10007E4EC(a1, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  v9(v7, v8);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v10];

  [v6 sizeToFit];
  uint64_t v11 = sub_10007E4EC(v13, v14);
  sub_1006A1E04((uint64_t)a1, *v11, a3);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v13);
}

unint64_t sub_1006A209C()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_recentWorkoutAppRecommendations);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (result >= *(void *)(v1 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_10008E75C(v1 + 40 * result + 32, (uint64_t)v7);
  unint64_t result = (unint64_t)[self defaultWorkspace];
  if (result)
  {
    NSString v3 = (void *)result;
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    sub_10007E4EC(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 openApplicationWithBundleID:v6];

    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1006A219C()
{
  swift_unknownObjectRelease();

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 40);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 80);

  return swift_deallocObject();
}

uint64_t sub_1006A21EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10042EE68(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

id sub_1006A22B8()
{
  id v0 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v1 = [self whiteColor];
  id v2 = [v1 CGColor];

  [v0 setStrokeColor:v2];
  [v0 setLineWidth:1.0];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100756B20;
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  *(NSNumber *)(v3 + 32) = NSNumber.init(floatLiteral:)(3.0);
  *(NSNumber *)(v3 + 40) = NSNumber.init(floatLiteral:)(1.0);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 setLineDashPattern:isa];

  return v0;
}

id sub_1006A2414()
{
  id v0 = [objc_allocWithZone((Class)CAShapeLayer) init];
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 1.0).super.isa;
  id v2 = [(objc_class *)isa CGColor];

  [v0 setStrokeColor:v2];
  [v0 setLineWidth:1.0];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100756B20;
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  *(NSNumber *)(v3 + 32) = NSNumber.init(floatLiteral:)(5.0);
  *(NSNumber *)(v3 + 40) = NSNumber.init(floatLiteral:)(2.0);
  specialized Array._endMutation()();
  Class v4 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 setLineDashPattern:v4];

  return v0;
}

char *sub_1006A2588(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v51 - v14;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  id v17 = objc_allocWithZone((Class)type metadata accessor for YearlyChartAxisLayer());
  id v18 = v4;
  *(void *)&v4[v16] = [v17 init];
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  sub_100087AC8(1, (uint64_t)v55, 0.0, 1.0);
  id v20 = objc_allocWithZone((Class)type metadata accessor for LineSeriesLayer());
  *(void *)&v18[v19] = sub_1006417F4((uint64_t)v55);
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  *(void *)&v18[v21] = sub_1006A3C34();
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  *(void *)&v18[v22] = sub_1006A3C34();
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  *(void *)&v18[v23] = sub_1006A22B8();
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  *(void *)&v18[v24] = sub_1006A2414();
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  *(void *)&v18[v25] = [objc_allocWithZone((Class)type metadata accessor for ChartValueGesturalOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthStrings] = _swiftEmptyArrayStorage;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels] = _swiftEmptyArrayStorage;
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthFormatter;
  id v27 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v28 = String._bridgeToObjectiveC()();
  [v27 setLocalizedDateFormatFromTemplate:v28];

  *(void *)&v18[v26] = v27;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors] = 0;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter] = 0;
  v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType] = 9;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit] = 0;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_months] = _swiftEmptyArrayStorage;
  objc_super v29 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit];
  *(_OWORD *)objc_super v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  v29[32] = 1;
  *(void *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = _swiftEmptyArrayStorage;
  Date.init()();
  Date.init()();
  Date.timeIntervalSinceReferenceDate.getter();
  double v31 = v30;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(12, (uint64_t)v56, v31, v32);
  long long v53 = v56[2];
  uint64_t v33 = v57;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  long long v52 = v56[1];
  long long v51 = v56[0];
  v34(v12, v9);
  v34(v15, v9);
  objc_super v35 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram];
  long long v36 = v52;
  *(_OWORD *)objc_super v35 = v51;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v53;
  *((void *)v35 + 6) = v33;
  Date.init()();
  Date.init()();
  Date.timeIntervalSinceReferenceDate.getter();
  double v38 = v37;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(365, (uint64_t)v58, v38, v39);
  long long v53 = v58[2];
  uint64_t v40 = v59;
  long long v52 = v58[1];
  long long v51 = v58[0];
  v34(v12, v9);
  v34(v15, v9);
  os_log_type_t v41 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitHistogram];
  long long v42 = v52;
  *(_OWORD *)os_log_type_t v41 = v51;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v53;
  *((void *)v41 + 6) = v40;

  id v43 = (objc_class *)type metadata accessor for YearlyLineChartView();
  v54.receiver = v18;
  v54.super_class = v43;
  dispatch_group_t v44 = (char *)objc_msgSendSuper2(&v54, "initWithFrame:", a1, a2, a3, a4);
  id v45 = [v44 layer];
  [v45 addSublayer:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer]];

  id v46 = [v44 layer];
  [v46 addSublayer:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer]];

  [v44 addSubview:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel]];
  [v44 addSubview:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel]];
  id v47 = [v44 layer];
  [v47 addSublayer:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer]];

  id v48 = [v44 layer];
  [v48 addSublayer:*(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer]];

  uint64_t v49 = *(void *)&v44[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay];
  [v44 addSubview:v49];
  *(void *)(v49 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource + 8) = &off_1008D5AC8;
  swift_unknownObjectWeakAssign();

  return v44;
}

uint64_t sub_1006A2B70(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  id v3 = objc_allocWithZone((Class)type metadata accessor for YearlyChartAxisLayer());
  Class v4 = v1;
  *(void *)&v1[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  sub_100087AC8(1, (uint64_t)v29, 0.0, 1.0);
  id v6 = objc_allocWithZone((Class)type metadata accessor for LineSeriesLayer());
  *(void *)&v4[v5] = sub_1006417F4((uint64_t)v29);
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  type metadata accessor for YearlyLineChartView();
  *(void *)&v4[v7] = sub_1006A3C34();
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  *(void *)&v4[v8] = sub_1006A3C34();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  *(void *)&v4[v9] = sub_1006A22B8();
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  *(void *)&v4[v10] = sub_1006A2414();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  *(void *)&v4[v11] = [objc_allocWithZone((Class)type metadata accessor for ChartValueGesturalOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthStrings] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels] = _swiftEmptyArrayStorage;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthFormatter;
  id v13 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setLocalizedDateFormatFromTemplate:v14];

  *(void *)&v4[v12] = v13;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors] = 0;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter] = 0;
  v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType] = 9;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit] = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_months] = _swiftEmptyArrayStorage;
  id v18 = &v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit];
  *(_OWORD *)id v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[32] = 1;
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1006A2E88()
{
  id v1 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v2 = v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100642410();
  double v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer);
  double v6 = v4 / *(double *)(v2 + 24);
  [v5 bounds];
  double MaxY = CGRectGetMaxY(v10);
  [v5 bounds];
  double v8 = MaxY - v6 * CGRectGetHeight(v11);
  [v1 moveToPoint:0.0, v8];
  [v5 bounds];
  [v1 addLineToPoint:CGRectGetMaxX(v12), v8];
  return v1;
}

id sub_1006A2FBC(double a1, double a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram + 8);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5) {
    double v6 = *(double *)(v4 + 32);
  }
  else {
    double v6 = 0.0;
  }
  double v7 = *(double *)(v3 + 24);
  double v8 = 1.0 - (v6 * a1 + a2) / v7;
  double v9 = 1.0 - ((v6 + *(double *)(v3 + 16) * (double)v5) * a1 + a2) / v7;
  id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
  CGRect v11 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer);
  [v11 bounds];
  [v10 moveToPoint:0.0, v8 * CGRectGetHeight(v14)];
  [v11 bounds];
  double MaxX = CGRectGetMaxX(v15);
  [v11 bounds];
  [v10 addLineToPoint:MaxX, v9 * CGRectGetHeight(v16)];
  return v10;
}

uint64_t sub_1006A30D4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for YearlyLineChartView();
  v56.receiver = v0;
  v56.super_class = v5;
  [super layoutSubviews];
  [v0 bounds];
  CGFloat x = v57.origin.x;
  CGFloat y = v57.origin.y;
  CGFloat width = v57.size.width;
  CGFloat height = v57.size.height;
  CGRect v58 = CGRectInset(v57, 16.0, 24.0);
  double v6 = v58.origin.x;
  double v7 = v58.origin.y;
  double v8 = v58.size.width;
  double v9 = v58.size.height;
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer] setFrame:];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer] setFrame:v6, v7, v8, v9];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer] setFrame:v6, v7, v8, v9];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer] setFrame:v6, v7, v8, v9];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay] setFrame:v6, v7, v8, v9];
  CGFloat v53 = v7;
  CGFloat v54 = v6;
  v59.origin.CGFloat x = v6;
  v59.origin.CGFloat y = v7;
  v59.size.CGFloat width = v8;
  v59.size.CGFloat height = v9;
  double v10 = CGRectGetWidth(v59);
  unint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels];
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_10;
    }
  }
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v14 = 0;
  double v15 = v10 / 11.0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v11 + 8 * v14 + 32);
    }
    uint64_t v17 = v16;
    uint64_t v18 = v14 + 1;
    double v19 = v15 * (double)v14 + 16.0;
    [v16 sizeToFit];
    id v20 = v17;
    v60.origin.CGFloat y = v53;
    v60.origin.CGFloat x = v54;
    v60.size.CGFloat width = v8;
    v60.size.CGFloat height = v9;
    double MaxY = CGRectGetMaxY(v60);
    [v20 bounds];
    [v20 setCenter:v19 MaxY + CGRectGetHeight(v61) * 0.5 + 1.0];

    uint64_t v14 = v18;
  }
  while (v12 != v18);
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel];
  [v22 sizeToFit];
  [v22 frame];
  [v22 setFrame:CGRectMake(16.0, 0.0, 0.0, 0.0)];
  CGFloat v24 = v53;
  CGFloat v23 = v54;
  v62.origin.CGFloat x = v54;
  v62.origin.CGFloat y = v53;
  v62.size.CGFloat width = v8;
  v62.size.CGFloat height = v9;
  [v22 _setFirstLineCapFrameOriginY:CGRectGetMinY(v62)];
  v63.origin.CGFloat x = v23;
  v63.origin.CGFloat y = v24;
  v63.size.CGFloat width = v8;
  v63.size.CGFloat height = v9;
  double v25 = CGRectGetWidth(v63);
  int64_t v26 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram] + 16);
  if (v26)
  {
    double v27 = v25 / (double)(v26 - 1);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001C91B8(0, v26, 0);
    uint64_t v28 = 0;
    objc_super v29 = (void *)aBlock[0];
    unint64_t v30 = *(void *)(aBlock[0] + 16);
    do
    {
      aBlock[0] = v29;
      unint64_t v31 = v29[3];
      if (v30 >= v31 >> 1)
      {
        sub_1001C91B8(v31 > 1, v30 + 1, 1);
        objc_super v29 = (void *)aBlock[0];
      }
      void v29[2] = v30 + 1;
      *(double *)&v29[v30++ + 4] = v27 * (double)v28++;
    }
    while (v26 != v28);
  }
  else
  {
    objc_super v29 = _swiftEmptyArrayStorage;
  }
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = v29;
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  double v32 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v1;
  *(_OWORD *)(v33 + 24) = xmmword_1007749E0;
  CGFloat v34 = v53;
  *(CGFloat *)(v33 + 40) = v54;
  *(CGFloat *)(v33 + 48) = v34;
  *(double *)(v33 + 56) = v8;
  *(double *)(v33 + 64) = v9;
  CGFloat v35 = y;
  *(CGFloat *)(v33 + 72) = x;
  *(CGFloat *)(v33 + 80) = v35;
  CGFloat v36 = height;
  *(CGFloat *)(v33 + 88) = width;
  *(CGFloat *)(v33 + 96) = v36;
  aBlock[4] = sub_1006A4138;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D5B00;
  double v37 = _Block_copy(aBlock);
  double v38 = v1;
  swift_release();
  double v39 = v47;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  uint64_t v40 = v49;
  uint64_t v41 = v52;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v39, v50);
}

id sub_1006A3778(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  CGFloat v24 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer);
  id v25 = sub_1006A2E88();
  id v26 = [v25 CGPath];

  [v24 setPath:v26];
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit + 32) & 1) == 0)
  {
    double v27 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer);
    id v28 = sub_1006A2FBC(*(double *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit), *(double *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit + 8));
    id v29 = [v28 CGPath];

    [v27 setPath:v29];
  }
  uint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer);
  unint64_t v31 = self;
  [v31 begin];
  [v31 setDisableActions:1];
  sub_100642044(v30);
  [v31 commit];
  double v32 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel);
  [v32 sizeToFit];
  [v32 frame];
  [v32 setFrame:a2, a3];
  double v33 = a5 + 4.0;
  uint64_t v34 = a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100642410();
  double v36 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v37 = v36 / *(double *)(v34 + 24);
  [v24 bounds];
  double MaxY = CGRectGetMaxY(v51);
  [v24 bounds];
  [v32 _setFirstLineCapFrameOriginY:v33 + MaxY - v37 * CGRectGetHeight(v52)];
  [v32 frame];
  CGFloat v40 = v39;
  double v42 = v41;
  double v44 = v43;
  double v46 = v45;
  v53.origin.CGFloat x = a8;
  v53.origin.CGFloat y = a9;
  v53.size.CGFloat width = a10;
  v53.size.CGFloat height = a11;
  double Width = CGRectGetWidth(v53);
  v54.origin.CGFloat x = v40;
  v54.origin.CGFloat y = v42;
  v54.size.CGFloat width = v44;
  v54.size.CGFloat height = v46;
  double v48 = Width - CGRectGetMaxX(v54);

  return [v32 setFrame:v48, v42, v44, v46];
}

id sub_1006A3A88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for YearlyLineChartView();
  return [super dealloc];
}

uint64_t type metadata accessor for YearlyLineChartView()
{
  return self;
}

id sub_1006A3C34()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v0 setFont:v1];

  objc_super v2 = self;
  id v3 = [v2 lightGrayColor];
  [v0 setTextColor:v3];

  id v4 = [v0 layer];
  id v5 = [v2 blackColor];
  id v6 = [v5 CGColor];

  [v4 setShadowColor:v6];
  id v7 = [v0 layer];
  [v7 setShadowRadius:2.0];

  id v8 = [v0 layer];
  LODWORD(v9) = 1063675494;
  [v8 setShadowOpacity:v9];

  id v10 = [v0 layer];
  [v10 setShadowOffset:0.0, 2.0];

  return v0;
}

uint64_t sub_1006A3E08(double a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter);
  if (!v2) {
    return 0;
  }
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit);
  if (!v3) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType);
  if (v4 == 9) {
    return 0;
  }
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer);
  id v7 = v2;
  id v8 = v3;
  [v6 bounds];
  double MaxX = CGRectGetMaxX(v30);
  if (a1 <= 0.0)
  {
    a1 = 0.0;
    if (MaxX >= 0.0) {
      goto LABEL_14;
    }
  }
  else if (MaxX >= a1)
  {
    goto LABEL_14;
  }
  if ((*(void *)&MaxX & 0xFFFFFFFFFFFFFLL) != 0) {
    double v10 = a1;
  }
  else {
    double v10 = MaxX;
  }
  if ((~*(void *)&MaxX & 0x7FF0000000000000) != 0) {
    a1 = MaxX;
  }
  else {
    a1 = v10;
  }
LABEL_14:
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    unint64_t v13 = 0;
    unint64_t v14 = 0;
    uint64_t v15 = v11 + 32;
    double v16 = -1000.0;
    do
    {
      double v17 = vabdd_f64(*(double *)(v15 + 8 * v14), a1);
      double v18 = vabdd_f64(v16, a1);
      if (v17 < v18) {
        unint64_t v13 = v14;
      }
      unint64_t v19 = v14 + 1;
      if (v17 < v18) {
        double v16 = *(double *)(v15 + 8 * v14);
      }
      ++v14;
    }
    while (v12 != v19);
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    unint64_t v13 = 0;
  }
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram);
  if (v13 >= *(void *)(v20 + 16) || (uint64_t v21 = v20 + 24 * v13, (*(unsigned char *)(v21 + 48) & 1) != 0))
  {
LABEL_26:

    return 0;
  }
  id v23 = [self quantityWithUnit:v8 doubleValue:*(double *)(v21 + 32)];
  CGFloat v24 = v23;
  if ((v4 | 4) == 7)
  {
    sub_100674F18(v23);
  }
  else
  {
    id v25 = [self mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100674CF4(v24, v4);
    swift_bridgeObjectRelease();
  }
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  uint64_t v29 = v28;

  return v29;
}

uint64_t sub_1006A4100()
{
  return swift_deallocObject();
}

id sub_1006A4138()
{
  return sub_1006A3778(*(void *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(CGFloat *)(v0 + 72), *(CGFloat *)(v0 + 80), *(CGFloat *)(v0 + 88), *(CGFloat *)(v0 + 96));
}

id sub_1006A4270()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PageControlView.Coordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for PageControlView.Coordinator()
{
  return self;
}

uint64_t destroy for PageControlView()
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for PageControlView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PageControlView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for PageControlView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PageControlView()
{
  return &type metadata for PageControlView;
}

id sub_1006A4458()
{
  uint64_t v1 = *v0;
  id v2 = [objc_allocWithZone((Class)UIPageControl) init];
  [v2 setBackgroundStyle:2];
  [v2 setNumberOfPages:v1];
  sub_1000AFA94(&qword_1009689E0);
  UIViewRepresentableContext.coordinator.getter();
  [v2 addTarget:v4 action:"updateCurrentPageWithSender:" forControlEvents:4096];

  return v2;
}

id sub_1006A4510(void *a1)
{
  long long v4 = *(_OWORD *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  sub_1000AFA94(&qword_1009510D8);
  Binding.wrappedValue.getter();
  return [a1 setCurrentPage:v6 v4, v5];
}

id sub_1006A4574@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  id v7 = (objc_class *)type metadata accessor for PageControlView.Coordinator();
  id v8 = (char *)objc_allocWithZone(v7);
  double v9 = &v8[OBJC_IVAR____TtCV10FitnessApp15PageControlView11Coordinator_control];
  *(void *)double v9 = v4;
  *((void *)v9 + 1) = v3;
  *((void *)v9 + 2) = v5;
  *((void *)v9 + 3) = v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  swift_retain();
  id result = [super init];
  *a1 = result;
  return result;
}

uint64_t sub_1006A4600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006A46F4();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1006A4664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006A46F4();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1006A46C8()
{
}

unint64_t sub_1006A46F4()
{
  unint64_t result = qword_1009689E8;
  if (!qword_1009689E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009689E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogTipCardFactory()
{
  return &type metadata for CatalogTipCardFactory;
}

void destroy for MirrorRaceCompleteView(uint64_t a1)
{
  swift_release();
  swift_release();

  id v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for MirrorRaceCompleteView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  unint64_t v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_retain();
  swift_retain();
  id v7 = v5;
  id v8 = v6;
  return a1;
}

void *assignWithCopy for MirrorRaceCompleteView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  id v7 = (void *)a2[5];
  id v8 = (void *)a1[5];
  a1[5] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for MirrorRaceCompleteView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for MirrorRaceCompleteView()
{
  return &type metadata for MirrorRaceCompleteView;
}

uint64_t sub_1006A490C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006A4928@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  CGRect v51 = a2;
  uint64_t v50 = type metadata accessor for RaceSecondsAheadOfGhostMetricView();
  uint64_t v57 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  objc_super v56 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  dispatch_group_t v55 = (char *)&v43 - v5;
  uint64_t v49 = type metadata accessor for RaceCompleteRaceTimeMetricView();
  uint64_t v46 = *(void *)(v49 - 8);
  uint64_t v6 = v46;
  __chkstk_darwin(v49);
  CGRect v54 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  double v10 = (char *)&v43 - v9;
  uint64_t v11 = type metadata accessor for LocalizationFeature();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_100951660);
  uint64_t v48 = *(void *)(v53 - 8);
  uint64_t v15 = v48;
  __chkstk_darwin(v53);
  CGRect v52 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v43 - v19;
  (*(void (**)(char *, void, uint64_t, __n128))(v12 + 104))(v14, enum case for LocalizationFeature.workout(_:), v11, v18);
  static Localization.workoutUILocalizedString(_:feature:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v21 = v20;
  id v47 = v20;
  static WorkoutNotificationFont.multilineTextView(with:lineLimit:)();
  swift_bridgeObjectRelease();
  v59[0] = *(_OWORD *)a1;
  swift_retain();
  RacePositionStatePublisher.raceFinishTime.getter();
  sub_1000E2384((uint64_t)v59);
  swift_retain();
  RacePositionStatePublisher.raceFinishTime.getter();
  sub_1000E2384((uint64_t)v59);
  swift_retain();
  RacePositionStatePublisher.secondsAheadOfGhost.getter();
  sub_1000E2384((uint64_t)v59);
  double v45 = v10;
  RaceCompleteRaceTimeMetricView.init(raceTime:didWinRace:)();
  swift_retain();
  RacePositionStatePublisher.secondsAheadOfGhost.getter();
  sub_1000E2384((uint64_t)v59);
  type metadata accessor for RaceWorkoutConfiguration();
  static RaceWorkoutConfiguration.raceCompleteColor.getter();
  Color.init(_:)();
  id v22 = *(id *)(a1 + 40);
  id v23 = v55;
  RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)();
  CGFloat v24 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  id v25 = v52;
  uint64_t v26 = v53;
  v24(v52, v21, v53);
  double v44 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  id v27 = v54;
  uint64_t v28 = v10;
  uint64_t v29 = v49;
  v44(v54, v28, v49);
  double v43 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  CGRect v30 = v23;
  uint64_t v31 = v50;
  v43(v56, v30, v50);
  char v58 = 1;
  double v32 = v51;
  v24(v51, v25, v26);
  double v33 = (int *)sub_1000AFA94(&qword_100968A08);
  v44(&v32[v33[12]], v27, v29);
  uint64_t v34 = v56;
  v43(&v32[v33[16]], v56, v31);
  double v35 = &v32[v33[20]];
  char v36 = v58;
  *(void *)double v35 = 0;
  v35[8] = v36;
  double v37 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v38 = v31;
  v37(v55, v31);
  double v39 = *(void (**)(char *, uint64_t))(v46 + 8);
  v39(v45, v29);
  CGFloat v40 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v41 = v53;
  v40(v47, v53);
  v37(v34, v38);
  v39(v54, v29);
  return ((uint64_t (*)(char *, uint64_t))v40)(v52, v41);
}

uint64_t sub_1006A4EBC()
{
  uint64_t v1 = type metadata accessor for WorkoutViewStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009689F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v0[1];
  v11[0] = *v0;
  v11[1] = v8;
  v11[2] = v0[2];
  *(void *)uint64_t v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v9 = sub_1000AFA94(&qword_1009689F8);
  sub_1006A4928((uint64_t)v11, &v7[*(int *)(v9 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v1);
  sub_1006A5064();
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1006A50C0((uint64_t)v7);
}

unint64_t sub_1006A5064()
{
  unint64_t result = qword_100968A00;
  if (!qword_100968A00)
  {
    sub_1000A1370(&qword_1009689F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968A00);
  }
  return result;
}

uint64_t sub_1006A50C0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009689F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006A5120()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_1006A517C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView;
  type metadata accessor for TrendsFooterTextView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v36.receiver = v11;
  v36.super_class = (Class)type metadata accessor for TrendExplanationView();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView;
  unint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView];
  uint64_t v15 = v12;
  [v14 setDelegate:v15];
  [v15 addSubview:v14];
  id v16 = [v14 leadingAnchor];
  id v17 = [v15 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:10.0];

  id v19 = [*(id *)&v12[v13] trailingAnchor];
  id v20 = [v15 trailingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 constant:-10.0];

  id v22 = [*(id *)&v12[v13] topAnchor];
  id v23 = [v15 topAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:10.0];

  id v25 = [*(id *)&v12[v13] bottomAnchor];
  id v26 = [v15 bottomAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:-10.0];

  uint64_t v28 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100751160;
  *(void *)(v29 + 32) = v18;
  *(void *)(v29 + 40) = v21;
  *(void *)(v29 + 48) = v24;
  *(void *)(v29 + 56) = v27;
  specialized Array._endMutation()();
  sub_1001ABF94();
  id v30 = v18;
  id v31 = v21;
  id v32 = v24;
  id v33 = v27;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  return v15;
}

id sub_1006A5560(char a1)
{
  sub_1000AFA94(&qword_100968AA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView);
  uint64_t v5 = NSForegroundColorAttributeName;
  *(void *)(inited + 40) = [v4 textColor];
  *(void *)(inited + 48) = NSFontAttributeName;
  uint64_t v6 = NSFontAttributeName;
  *(void *)(inited + 56) = [v4 font];
  unint64_t v7 = sub_100523B60(inited);
  swift_bridgeObjectRetain();
  sub_1003D7EB8(v7);
  swift_bridgeObjectRelease();
  id v8 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001DCBD0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithString:v9 attributes:isa];

  id v12 = [v4 textColor];
  id v13 = [v4 font];
  unint64_t v14 = sub_1005F3EB8(v13, a1);

  if (v14)
  {
    uint64_t v15 = (void *)sub_1004C2A30(v14);
    swift_bridgeObjectRelease();
    [v11 appendAttributedString:v15];
  }
  return v11;
}

id sub_1006A5840()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendExplanationView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendExplanationView()
{
  return self;
}

uint64_t sub_1006A58AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Date.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006A58D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_10026063C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithCopy for DivingDetailUnderwaterDepthChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_10026063C(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10026065C(v7, v8, v9);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for DivingDetailUnderwaterDepthChartView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_10026065C(v5, v6, v7);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for DivingDetailUnderwaterDepthChartView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DivingDetailUnderwaterDepthChartView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DivingDetailUnderwaterDepthChartView()
{
  return &type metadata for DivingDetailUnderwaterDepthChartView;
}

uint64_t sub_1006A5A90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006A5AAC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v53 = v51;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)v43 - v10;
  uint64_t v12 = type metadata accessor for DivingDataCalculator(0);
  uint64_t v13 = sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v47 = v12;
  uint64_t v48 = a1;
  uint64_t v14 = a2;
  int v45 = a3 & 1;
  uint64_t v46 = v13;
  uint64_t v15 = (char *)StateObject.wrappedValue.getter();
  id v16 = *(id *)&v15[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v17 = [v16 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v43[1] = v14;
  id v18 = v8;
  uint64_t v19 = v52;
  id v20 = (char *)StateObject.wrappedValue.getter();
  id v21 = *(id *)&v20[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v22 = [v21 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100264FEC((unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date);
  double v44 = v11;
  int v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v23 = v53;
  id v24 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v50 = v18;
  v24(v18, v19);
  v43[0] = v24;
  v24(v11, v19);
  sub_1000AFA94((uint64_t *)&unk_1009559D0);
  uint64_t v25 = *(void *)(v51 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10074E640;
  uint64_t v51 = v27;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = (char *)StateObject.wrappedValue.getter();
  id v30 = *(id *)&v29[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  id v31 = [v30 startDate];
  id v32 = v44;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v33 = v32;
  uint64_t v34 = *(void (**)(unint64_t, char *, uint64_t))(v53 + 32);
  v53 += 32;
  v34(v28, v33, v19);
  unint64_t v35 = v28 + v25;
  objc_super v36 = (char *)StateObject.wrappedValue.getter();
  id v37 = *(id *)&v36[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  if (v49)
  {
    id v38 = [v37 startDate];

    double v39 = v50;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Date.addingTimeInterval(_:)();
    ((void (*)(char *, uint64_t))v43[0])(v39, v52);
  }
  else
  {
    id v40 = [v37 endDate];

    uint64_t v41 = v50;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v34(v35, v41, v52);
  }
  return v51;
}

uint64_t sub_1006A5F3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  id v8 = [self systemGray6Color];
  uint64_t v9 = Color.init(_:)();
  uint64_t v10 = static HorizontalAlignment.leading.getter();
  sub_1006A615C(a1, a2, a3 & 0x101, (uint64_t)v27);
  char v30 = 1;
  *(_OWORD *)&v29[71] = v27[4];
  *(_OWORD *)&v29[55] = v27[3];
  *(_OWORD *)&v29[119] = v27[7];
  *(_OWORD *)&v29[135] = v27[8];
  *(_OWORD *)&v29[151] = v27[9];
  *(_WORD *)&v29[167] = v28;
  *(_OWORD *)&v29[87] = v27[5];
  *(_OWORD *)&v29[103] = v27[6];
  *(_OWORD *)&v29[7] = v27[0];
  *(_OWORD *)&v29[23] = v27[1];
  *(_OWORD *)&v29[39] = v27[2];
  long long v31 = (unint64_t)v10;
  LOBYTE(v32[0]) = 1;
  long long v11 = *(_OWORD *)&v29[128];
  *(_OWORD *)((char *)&v32[7] + 1) = *(_OWORD *)&v29[112];
  long long v12 = *(_OWORD *)&v29[112];
  *(_OWORD *)((char *)&v32[8] + 1) = *(_OWORD *)&v29[128];
  long long v13 = *(_OWORD *)&v29[144];
  *(_OWORD *)((char *)&v32[9] + 1) = *(_OWORD *)&v29[144];
  *(_OWORD *)((char *)&v32[9] + 10) = *(_OWORD *)&v29[153];
  long long v14 = *(_OWORD *)&v29[64];
  *(_OWORD *)((char *)&v32[3] + 1) = *(_OWORD *)&v29[48];
  long long v15 = *(_OWORD *)&v29[48];
  *(_OWORD *)((char *)&v32[4] + 1) = *(_OWORD *)&v29[64];
  long long v16 = *(_OWORD *)&v29[96];
  *(_OWORD *)((char *)&v32[5] + 1) = *(_OWORD *)&v29[80];
  long long v17 = *(_OWORD *)&v29[80];
  *(_OWORD *)((char *)&v32[6] + 1) = *(_OWORD *)&v29[96];
  long long v18 = *(_OWORD *)&v29[16];
  *(_OWORD *)((char *)v32 + 1) = *(_OWORD *)v29;
  long long v19 = *(_OWORD *)v29;
  *(_OWORD *)((char *)&v32[1] + 1) = *(_OWORD *)&v29[16];
  long long v20 = *(_OWORD *)&v29[32];
  *(_OWORD *)((char *)&v32[2] + 1) = *(_OWORD *)&v29[32];
  long long v21 = v32[8];
  *(_OWORD *)(a4 + 136) = v32[7];
  *(_OWORD *)(a4 + 152) = v21;
  *(_OWORD *)(a4 + 168) = v32[9];
  *(_OWORD *)(a4 + 178) = *(_OWORD *)((char *)&v32[9] + 10);
  long long v22 = v32[4];
  *(_OWORD *)(a4 + 72) = v32[3];
  *(_OWORD *)(a4 + 88) = v22;
  long long v23 = v32[6];
  *(_OWORD *)(a4 + 104) = v32[5];
  *(_OWORD *)(a4 + 120) = v23;
  long long v24 = v32[0];
  *(_OWORD *)(a4 + 8) = v31;
  *(_OWORD *)(a4 + 24) = v24;
  long long v25 = v32[2];
  *(_OWORD *)(a4 + 40) = v32[1];
  *(_OWORD *)(a4 + 56) = v25;
  long long v42 = v12;
  long long v43 = v11;
  v44[0] = v13;
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)&v29[153];
  long long v38 = v15;
  long long v39 = v14;
  long long v40 = v17;
  long long v41 = v16;
  long long v35 = v19;
  long long v36 = v18;
  *(void *)a4 = v9;
  v33[0] = v10;
  v33[1] = 0;
  char v34 = 1;
  long long v37 = v20;
  swift_retain();
  sub_1006A956C((uint64_t *)&v31);
  sub_1006A9644(v33);
  return swift_release();
}

uint64_t sub_1006A615C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  int v6 = a3 & 1;
  int v53 = a3 & 0x100;
  if ((a3 & 0x100) != 0)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v50 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    int v47 = a3 & 1;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v11 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    static Font.body.getter();
    uint64_t v16 = Text.font(_:)();
    uint64_t v55 = v17;
    uint64_t v56 = v16;
    uint64_t v46 = v18;
    char v20 = v19;
    swift_release();
    sub_1000A06C0(v11, v13, v15);
    swift_bridgeObjectRelease();
    type metadata accessor for DivingDataCalculator(0);
    sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
    long long v21 = (void *)StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();

    swift_release();
    swift_release();
    long long v70 = v60;
    long long v75 = v65;
    v76[0] = *(_OWORD *)v66;
    *(_OWORD *)((char *)v76 + 9) = *(_OWORD *)&v66[9];
    long long v71 = v61;
    long long v72 = v62;
    long long v73 = v63;
    long long v74 = v64;
    long long v67 = v57;
    long long v68 = v58;
    long long v69 = v59;
    swift_bridgeObjectRetain();
    sub_100264974((uint64_t)&v67);
    sub_1000A06D0();
    uint64_t v22 = Text.init<A>(_:)();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    static Font.body.getter();
    uint64_t v27 = Text.font(_:)();
    uint64_t v29 = v28;
    int v45 = a2;
    char v31 = v30;
    swift_release();
    sub_1000A06C0(v22, v24, v26);
    swift_bridgeObjectRelease();
    static Color.teal.getter();
    uint64_t v32 = Text.foregroundStyle<A>(_:)();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37 & 1;
    sub_1000A06C0(v27, v29, v31 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = v46;
    uint64_t v9 = v20 & 1;
    sub_1000A1750(v56, v46, v20 & 1);
    swift_bridgeObjectRetain();
    sub_1000A1750(v32, v34, v38);
    swift_bridgeObjectRetain();
    uint64_t v51 = v34;
    uint64_t v52 = v32;
    uint64_t v50 = v38;
    sub_1000A06C0(v32, v34, v38);
    uint64_t v10 = v36;
    swift_bridgeObjectRelease();
    uint64_t v7 = v45;
    sub_1000A06C0(v56, v46, v20 & 1);
    swift_bridgeObjectRelease();
    int v6 = v47;
    uint64_t v48 = 0x4040000000000000;
    uint64_t v49 = 0x4020000000000000;
  }
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = a1;
  *(void *)(v39 + 24) = v7;
  *(unsigned char *)(v39 + 32) = v6 != 0;
  *(unsigned char *)(v39 + 33) = BYTE1(v53);
  sub_10026063C(a1, v7, v6);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = v67;
  char v41 = BYTE8(v67);
  uint64_t v42 = v68;
  char v43 = BYTE8(v68);
  *(void *)a4 = v56;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = v9;
  *(void *)(a4 + 24) = v55;
  *(void *)(a4 + 32) = v52;
  *(void *)(a4 + 40) = v51;
  *(void *)(a4 + 48) = v50;
  *(void *)(a4 + 56) = v10;
  *(void *)(a4 + 64) = v49;
  *(unsigned char *)(a4 + 72) = 0;
  *(void *)(a4 + 80) = sub_1006A9728;
  *(void *)(a4 + 88) = v39;
  *(_WORD *)(a4 + 96) = 0;
  *(void *)(a4 + 104) = v40;
  *(unsigned char *)(a4 + 112) = v41;
  *(void *)(a4 + 120) = v42;
  *(unsigned char *)(a4 + 128) = v43;
  *(_OWORD *)(a4 + 136) = v69;
  *(void *)(a4 + 152) = v48;
  *(unsigned char *)(a4 + 160) = 0;
  *(unsigned char *)(a4 + 161) = v53 != 0;
  sub_1006A95C8(v56, v8, v9, v55, v52, v51, v50);
  return sub_1006A96A0(v56, v8, v9, v55, v52, v51, v50);
}

uint64_t sub_1006A6660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v66 = a5;
  int v59 = a4 & 0x100;
  uint64_t v64 = type metadata accessor for GeometryProxy();
  uint64_t v62 = *(void *)(v64 - 8);
  uint64_t v63 = *(void *)(v62 + 64);
  __chkstk_darwin(v64);
  long long v61 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100951EE0);
  __chkstk_darwin(v9 - 8);
  long long v57 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000AFA94(&qword_100951EE8);
  uint64_t v49 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000AFA94(&qword_100951EF0);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  long long v67 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_100968AA8);
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000AFA94(&qword_100968AB0);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  CGRect v54 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  LODWORD(v15) = a4;
  int v47 = a4;
  int v16 = a4 & 1;
  char v78 = v16;
  unsigned int v17 = (v15 >> 8) & 1;
  char v79 = BYTE1(v15) & 1;
  sub_1000AFA94(&qword_100951F48);
  sub_100264A98();
  Chart.init(content:)();
  uint64_t v72 = a2;
  long long v73 = a3;
  uint64_t v45 = a2;
  char v74 = v16;
  int v50 = v16;
  char v75 = v17;
  unsigned int v51 = v17;
  uint64_t v18 = sub_1000AFA94(&qword_100951F60);
  uint64_t v19 = sub_1000A132C(&qword_100951F68, &qword_100951EE8);
  uint64_t v20 = sub_1000A132C(&qword_100951F70, &qword_100951F60);
  uint64_t v21 = v46;
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v21);
  uint64_t v68 = a2;
  long long v69 = a3;
  char v70 = v16;
  char v71 = v17;
  uint64_t v22 = sub_1000AFA94(&qword_100968AB8);
  uint64_t v81 = v21;
  uint64_t v82 = v18;
  uint64_t v83 = v19;
  uint64_t v84 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_1000A132C(&qword_100968AC0, &qword_100968AB8);
  char v25 = v48;
  uint64_t v26 = v52;
  uint64_t v27 = v67;
  View.chartXAxis<A>(content:)();
  uint64_t v28 = v26;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v26);
  uint64_t v29 = v45;
  uint64_t v80 = sub_1006A5AAC(v45, (uint64_t)a3, v59 & 0xFE | v47 & 1u);
  uint64_t v30 = type metadata accessor for ScaleType();
  uint64_t v31 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v57, 1, 1, v30);
  sub_1000AFA94(&qword_100951F78);
  uint64_t v81 = v28;
  uint64_t v82 = v22;
  uint64_t v83 = OpaqueTypeConformance2;
  uint64_t v84 = v24;
  swift_getOpaqueTypeConformance2();
  sub_10045C828();
  uint64_t v32 = v54;
  uint64_t v33 = v55;
  View.chartXScale<A>(domain:type:)();
  sub_10008DB18(v31, &qword_100951EE0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v33);
  uint64_t v34 = v62;
  uint64_t v35 = v61;
  uint64_t v36 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v65, v64);
  uint64_t v37 = v34;
  unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 34) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v29;
  *(void *)(v39 + 24) = a3;
  LOBYTE(OpaqueTypeConformance2) = v50;
  *(unsigned char *)(v39 + 32) = v50;
  *(unsigned char *)(v39 + 33) = v51;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v39 + v38, v35, v36);
  uint64_t v40 = v58;
  uint64_t v41 = v66;
  uint64_t v42 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v66, v32, v60);
  char v43 = (void (**)())(v41 + *(int *)(sub_1000AFA94(&qword_100968AC8) + 36));
  *char v43 = sub_1006A9888;
  v43[1] = (void (*)())v39;
  void v43[2] = 0;
  v43[3] = 0;
  sub_10026063C(v29, a3, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v32, v42);
}

uint64_t sub_1006A6E40@<X0>(uint64_t a1@<X8>)
{
  v11[0] = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100951F48);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v5 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v22[7] = v19;
  v22[8] = v20;
  v23[0] = v21[0];
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)((char *)v21 + 9);
  v22[4] = v16;
  v22[5] = v17;
  v22[6] = v18;
  v22[0] = v12;
  v22[1] = v13;
  void v22[2] = v14;
  v22[3] = v15;
  int v6 = (void *)v12;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v22);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6) {
    uint64_t v7 = v6;
  }
  v11[1] = v7;
  sub_1000AFA94(&qword_100952030);
  sub_1000AFA94(&qword_100952038);
  sub_1000A132C(&qword_100952040, &qword_100952030);
  uint64_t v8 = sub_1000A1370(&qword_100951F58);
  *(void *)&long long v12 = type metadata accessor for RuleMark();
  *((void *)&v12 + 1) = &type metadata for Color;
  *(void *)&long long v13 = &protocol witness table for RuleMark;
  *((void *)&v13 + 1) = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v12 = v8;
  *((void *)&v12 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_100264FEC(&qword_100952048, (void (*)(uint64_t))type metadata accessor for WorkoutChartDataElement);
  ForEach<>.init(_:content:)();
  return (*(uint64_t (**)(void, char *, uint64_t))(v2 + 32))(v11[0], v4, v1);
}

uint64_t sub_1006A717C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100952050);
  __chkstk_darwin(v3 - 8);
  uint64_t v23 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v21[1] = (char *)v21 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v7 - 8);
  v21[0] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RuleMark();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  __chkstk_darwin(v9);
  long long v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100951F58);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  __chkstk_darwin(v13);
  uint64_t v22 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = type metadata accessor for WorkoutChartDataElement(0);
  v33[0] = -*(double *)(a1 + *(int *)(v16 + 24));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v33[0] = -*(double *)(a1 + *(int *)(v16 + 28));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  RuleMark.init<A, B>(x:yStart:yEnd:)();
  v33[0] = COERCE_DOUBLE(static Color.teal.getter());
  long long v17 = v22;
  uint64_t v18 = v24;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v18);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v29 = v18;
  uint64_t v30 = &type metadata for Color;
  uint64_t v31 = &protocol witness table for RuleMark;
  uint64_t v32 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v26;
  ChartContent.lineStyle(_:)();
  sub_100265034((uint64_t)v33);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v19);
}

uint64_t sub_1006A75F0(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v6 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v8 - 8);
  static AxisMarkPreset.inset.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(unsigned char *)(v9 + 32) = a3 & 1;
  *(unsigned char *)(v9 + 33) = HIBYTE(a3) & 1;
  sub_10026063C(a1, a2, a3 & 1);
  static AxisMarkPosition.automatic.getter();
  static AxisMarkValues.automatic.getter();
  sub_1000AFA94(&qword_100951FE8);
  sub_100264D58();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_1006A779C@<X0>(uint64_t a1@<X1>, void (*a2)(char *, char *, uint64_t)@<X2>, unsigned __int16 a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v83 = a1;
  uint64_t v81 = a4;
  int v82 = a3;
  int v84 = a3 & 0x100;
  uint64_t v76 = sub_1000AFA94(&qword_100952018);
  __chkstk_darwin(v76);
  char v75 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100952010);
  __chkstk_darwin(v5 - 8);
  char v74 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100951FE8);
  __chkstk_darwin(v7 - 8);
  uint64_t v77 = (uint64_t)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000AFA94(&qword_100951FB8);
  uint64_t v78 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100952020);
  uint64_t v86 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v71 - v20;
  uint64_t v80 = type metadata accessor for AxisGridLine();
  uint64_t v22 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  char v79 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v71 - v25;
  if (!AxisValue.index.getter())
  {
    uint64_t v89 = 0;
    long long v87 = 0u;
    long long v88 = 0u;
    uint64_t v72 = v26;
    AxisGridLine.init(centered:stroke:)();
    uint64_t v39 = static UnitPoint.bottomTrailing.getter();
    v71[2] = v71;
    v71[1] = v40;
    v71[0] = v41;
    __chkstk_darwin(v39);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    char v70 = &protocol witness table for Text;
    uint64_t v68 = &v65;
    long long v69 = &type metadata for Text;
    long long v67 = sub_1006A9B1C;
    char v66 = 1;
    uint64_t v65 = 0;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    AxisMark.offset(x:y:)();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v15, v13);
    uint64_t v42 = v86;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    uint64_t v43 = v16;
    v85(v21, v18, v16);
    uint64_t v44 = v22;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v46 = v79;
    v45(v79, v26, v80);
    uint64_t v47 = v42;
    uint64_t v48 = v43;
    uint64_t v49 = v21;
    long long v73 = v21;
    int v50 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v50(v18, v49, v43);
    unsigned int v51 = v75;
    uint64_t v52 = v46;
    uint64_t v53 = v80;
    v45(v75, v52, v80);
    uint64_t v54 = v76;
    uint64_t v55 = &v51[*(int *)(v76 + 48)];
    v50(v55, v18, v43);
    uint64_t v56 = (uint64_t)v74;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v74, v51, v53);
    v85((char *)(v56 + *(int *)(v54 + 48)), v55, v48);
    long long v57 = *(void (**)(char *, uint64_t))(v86 + 8);
    v57(v18, v48);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v44 + 8);
    v58(v79, v53);
    uint64_t v59 = v77;
    sub_1006A9B64(v56, v77);
    sub_1000AFA94(&qword_100952028);
    swift_storeEnumTagMultiPayload();
    sub_10008DB18(v56, &qword_100952010);
    v57(v73, v48);
    v58(v72, v53);
    uint64_t v60 = sub_1000AFA94(&qword_100952000);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 0, 1, v60);
    uint64_t v38 = v59;
    return sub_1006A9AB4(v38, v81);
  }
  char v75 = v11;
  uint64_t v76 = (uint64_t)v15;
  char v79 = (char *)v13;
  uint64_t v80 = (uint64_t)v18;
  uint64_t v27 = AxisValue.index.getter();
  uint64_t result = AxisValue.count.getter();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v27 == result - 1)
    {
      uint64_t v29 = static UnitPoint.trailing.getter();
      uint64_t v30 = v77;
      char v74 = (char *)v16;
      uint64_t v72 = (char *)v71;
      __chkstk_darwin(v29);
      long long v73 = v21;
      uint64_t v31 = v86;
      static AxisValueLabelCollisionResolution.automatic.getter();
      static AxisValueLabelOrientation.automatic.getter();
      char v70 = &protocol witness table for Text;
      uint64_t v68 = &v65;
      long long v69 = &type metadata for Text;
      long long v67 = sub_1006A9A9C;
      char v66 = 1;
      uint64_t v65 = 0;
      uint64_t v32 = v76;
      AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
      sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
      uint64_t v34 = v79;
      uint64_t v33 = v80;
      AxisMark.offset(x:y:)();
      (*(void (**)(uint64_t, char *))(v78 + 8))(v32, v34);
      uint64_t v36 = v73;
      uint64_t v35 = v74;
      (*(void (**)(char *, uint64_t, char *))(v31 + 32))(v73, v33, v74);
      (*(void (**)(uint64_t, char *, char *))(v31 + 16))(v30, v36, v35);
      sub_1000AFA94(&qword_100952028);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, char *))(v31 + 8))(v36, v35);
      uint64_t v37 = sub_1000AFA94(&qword_100952000);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v30, 0, 1, v37);
      uint64_t v38 = v30;
      return sub_1006A9AB4(v38, v81);
    }
    uint64_t v61 = sub_1000AFA94(&qword_100952000);
    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
    uint64_t v63 = v61;
    uint64_t v64 = v81;
    return v62(v64, 1, 1, v63);
  }
  return result;
}

uint64_t sub_1006A816C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v4 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v33[3] = v26;
  v33[7] = v30;
  v33[8] = v31;
  v34[0] = v32[0];
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v32 + 9);
  v33[4] = v27;
  double v33[5] = v28;
  v33[6] = v29;
  v33[0] = v23;
  v33[1] = v24;
  uint64_t v33[2] = v25;
  uint64_t v5 = *((void *)&v26 + 1);
  uint64_t v6 = v27;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v33);
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v6;
  sub_1000A06D0();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v3, &qword_10094C448);
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_1000A06C0(v7, v9, v11);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v22;
  *uint64_t v22 = v13;
  v21[1] = v15;
  *((unsigned char *)v21 + 16) = v17 & 1;
  v21[3] = v19;
  return result;
}

uint64_t sub_1006A83F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v4 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v33[3] = v26;
  v33[7] = v30;
  v33[8] = v31;
  v34[0] = v32[0];
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v32 + 9);
  v33[4] = v27;
  double v33[5] = v28;
  v33[6] = v29;
  v33[0] = v23;
  v33[1] = v24;
  uint64_t v33[2] = v25;
  uint64_t v5 = *((void *)&v25 + 1);
  uint64_t v6 = v26;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v33);
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v6;
  sub_1000A06D0();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v3, &qword_10094C448);
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_1000A06C0(v7, v9, v11);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v22;
  *uint64_t v22 = v13;
  v21[1] = v15;
  *((unsigned char *)v21 + 16) = v17 & 1;
  v21[3] = v19;
  return result;
}

uint64_t sub_1006A867C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3;
  int v17 = a3;
  uint64_t v20 = a4;
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  uint64_t v18 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v9 - 8);
  uint64_t v19 = sub_1000AFA94(&qword_100968AB8);
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v13 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v31[8] = v29;
  v32[0] = v30[0];
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v30 + 9);
  v31[4] = v25;
  v31[5] = v26;
  v31[6] = v27;
  v31[7] = v28;
  v31[0] = v21;
  v31[1] = v22;
  v31[2] = v23;
  v31[3] = v24;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v31);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(unsigned char *)(v14 + 32) = v4 & 1;
  *(unsigned char *)(v14 + 33) = BYTE1(v17) & 1;
  sub_10026063C(a1, a2, v4 & 1);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_100968AD0);
  type metadata accessor for Date();
  sub_1006A9928();
  AxisMarks.init<A>(preset:position:values:content:)();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(v20, v12, v19);
}

uint64_t sub_1006A89B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v45) = a4;
  uint64_t v44 = a3;
  uint64_t v43 = a2;
  uint64_t v47 = a1;
  uint64_t v52 = a5;
  uint64_t v51 = sub_1000AFA94(&qword_100968AE0) - 8;
  __chkstk_darwin(v51);
  int v50 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000AFA94(&qword_100951FB8);
  uint64_t v49 = *(void (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_100951FD0);
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v42 = type metadata accessor for AxisGridLine();
  uint64_t v38 = *(void *)(v42 - 8);
  uint64_t v16 = v38;
  __chkstk_darwin(v42);
  uint64_t v53 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v61 = 0;
  long long v59 = 0u;
  long long v60 = 0u;
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v41 = (char *)&v38 - v19;
  AxisGridLine.init(centered:stroke:)();
  static UnitPoint.topLeading.getter();
  uint64_t v54 = v43;
  uint64_t v55 = v44;
  __int16 v56 = (unsigned __int16)v45 & 0x101;
  uint64_t v57 = v47;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  static Color.gray.getter();
  uint64_t v21 = Color.opacity(_:)();
  swift_release();
  uint64_t v58 = v21;
  sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
  long long v22 = v12;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  v49[1](v10, v8);
  uint64_t v23 = v46;
  long long v24 = *(void (***)(char *, uint64_t))(v46 + 32);
  uint64_t v47 = v46 + 32;
  uint64_t v49 = v24;
  uint64_t v40 = v15;
  uint64_t v25 = v48;
  ((void (*)(char *, char *, uint64_t))v24)(v15, v12, v48);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  long long v26 = v53;
  uint64_t v27 = v42;
  v45(v53, v20, v42);
  long long v28 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v39 = v22;
  v28(v22, v15, v25);
  long long v29 = v50;
  uint64_t v30 = v27;
  v45(v50, v26, v27);
  uint64_t v31 = v51;
  uint64_t v32 = &v29[*(int *)(v51 + 56)];
  v28(v32, v22, v25);
  uint64_t v33 = v38;
  uint64_t v34 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v52, v29, v30);
  ((void (*)(uint64_t, char *, uint64_t))v49)(v34 + *(int *)(v31 + 56), v32, v25);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v23 + 8);
  v35(v40, v25);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v33 + 8);
  v36(v41, v30);
  v35(v39, v25);
  return ((uint64_t (*)(char *, uint64_t))v36)(v53, v30);
}

unint64_t sub_1006A8FCC@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  uint64_t v34 = StateObject.wrappedValue.getter();
  uint64_t v7 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v49[7] = v46;
  v49[8] = v47;
  v50[0] = v48[0];
  *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)v48 + 9);
  v49[4] = v43;
  void v49[5] = v44;
  v49[6] = v45;
  v49[0] = v39;
  v49[1] = v40;
  v49[2] = v41;
  v49[3] = v42;
  uint64_t v8 = (void *)v40;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v49);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  unint64_t result = AxisValue.index.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < v9[2])
  {
    uint64_t v11 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, (unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * result, v35);
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)v34;
    uint64_t v13 = *(void **)(v34 + OBJC_IVAR___CHDivingDataCalculator_axisFormatter);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v15 = [v13 stringFromDate:isa];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
    *(void *)&long long v39 = v16;
    *((void *)&v39 + 1) = v18;
    sub_1000A06D0();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    uint64_t v24 = type metadata accessor for Font.Design();
    uint64_t v25 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v36, 1, 1, v24);
    static Font.system(size:weight:design:)();
    sub_10008DB18(v25, &qword_10094C448);
    uint64_t v26 = Text.font(_:)();
    uint64_t v28 = v27;
    char v30 = v29;
    uint64_t v32 = v31;
    swift_release();
    sub_1000A06C0(v19, v21, v23);
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v33 = v37;
    *uint64_t v37 = v26;
    v33[1] = v28;
    *((unsigned char *)v33 + 16) = v30 & 1;
    v33[3] = v32;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1006A93D4()
{
  type metadata accessor for DivingDataCalculator(0);
  sub_100264FEC(&qword_100951F40, (void (*)(uint64_t))type metadata accessor for DivingDataCalculator);
  id v1 = (id)StateObject.wrappedValue.getter();
  GeometryProxy.size.getter();
  DivingDataCalculator.chartWidth.setter(v0, 0);
}

__n128 sub_1006A949C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void **)(v1 + 8);
  __int16 v5 = *(unsigned __int8 *)(v1 + 16);
  int v6 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v7 = static Alignment.center.getter();
  uint64_t v9 = v8;
  if (v6) {
    __int16 v10 = 256;
  }
  else {
    __int16 v10 = 0;
  }
  sub_1006A5F3C(v3, v4, v10 | v5, (uint64_t)v17);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  long long v11 = v17[11];
  *(_OWORD *)(a1 + 176) = v17[10];
  *(_OWORD *)(a1 + 192) = v11;
  *(_WORD *)(a1 + 208) = v18;
  long long v12 = v17[7];
  *(_OWORD *)(a1 + 112) = v17[6];
  *(_OWORD *)(a1 + 128) = v12;
  long long v13 = v17[9];
  *(_OWORD *)(a1 + 144) = v17[8];
  *(_OWORD *)(a1 + 160) = v13;
  long long v14 = v17[3];
  *(_OWORD *)(a1 + 48) = v17[2];
  *(_OWORD *)(a1 + 64) = v14;
  long long v15 = v17[5];
  *(_OWORD *)(a1 + 80) = v17[4];
  *(_OWORD *)(a1 + 96) = v15;
  __n128 result = (__n128)v17[1];
  *(_OWORD *)(a1 + 16) = v17[0];
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t *sub_1006A956C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1006A95C8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    char v9 = a7 & 1;
    sub_1000A1750(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    sub_1000A1750(a5, a6, v9);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1006A9644(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1006A96A0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    char v9 = a7 & 1;
    sub_1000A06C0(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    sub_1000A06C0(a5, a6, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006A9728(uint64_t a1)
{
  return sub_1006A9A6C(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1006A6660);
}

uint64_t sub_1006A9740()
{
  return sub_1006A9788((uint64_t (*)(void, void, void))sub_1006A6E40);
}

uint64_t sub_1006A9758()
{
  return sub_1006A9788((uint64_t (*)(void, void, void))sub_1006A75F0);
}

uint64_t sub_1006A9770()
{
  return sub_1006A9788((uint64_t (*)(void, void, void))sub_1006A867C);
}

uint64_t sub_1006A9788(uint64_t (*a1)(void, void, void))
{
  if (*(unsigned char *)(v1 + 33)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_1006A97B8()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 34) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_10026065C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1006A9888()
{
  type metadata accessor for GeometryProxy();

  sub_1006A93D4();
}

uint64_t sub_1006A9910(uint64_t a1)
{
  return sub_1006A9A6C(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1006A89B0);
}

unint64_t sub_1006A9928()
{
  unint64_t result = qword_100968AD8;
  if (!qword_100968AD8)
  {
    sub_1000A1370(&qword_100968AD0);
    sub_1000A1370(&qword_100951FB8);
    sub_1000A132C(&qword_100951FC0, &qword_100951FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968AD8);
  }
  return result;
}

unint64_t sub_1006A9A24@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006A8FCC(*(void *)(v1 + 40), a1);
}

uint64_t sub_1006A9A54(uint64_t a1)
{
  return sub_1006A9A6C(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1006A779C);
}

uint64_t sub_1006A9A6C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_1006A9A9C()
{
  return sub_1006A9B34((uint64_t (*)(void, void, void))sub_1006A83F4);
}

uint64_t sub_1006A9AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100951FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A9B1C()
{
  return sub_1006A9B34((uint64_t (*)(void, void, void))sub_1006A816C);
}

uint64_t sub_1006A9B34(uint64_t (*a1)(void, void, void))
{
  if (*(unsigned char *)(v1 + 33)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_1006A9B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100952010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DivingDetailChartDisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006A9C98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DivingDetailChartDisplayType()
{
  return &type metadata for DivingDetailChartDisplayType;
}

uint64_t sub_1006A9CD0()
{
  return sub_1000A132C(&qword_100968AE8, &qword_100968AF0);
}

unint64_t sub_1006A9D10()
{
  unint64_t result = qword_100968AF8;
  if (!qword_100968AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968AF8);
  }
  return result;
}

void sub_1006A9D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = self;
  id v6 = [v5 standardUserDefaults];
  NSString v7 = String._bridgeToObjectiveC()();
  unsigned __int8 v8 = [v6 BOOLForKey:v7];

  if ((v8 & 1) == 0)
  {
    id v9 = [v5 standardUserDefaults];
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 setBool:1 forKey:v10];
  }
  sub_1000AFA94(&qword_10095DDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10075FCD0;
  *(void *)(inited + 32) = 0x6570795474696465;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 0x546472614377656ELL;
  *(void *)(inited + 64) = 0xEB00000000657079;
  sub_1000CD028(a2, (uint64_t)v33);
  uint64_t v12 = v34;
  if (v34)
  {
    uint64_t v13 = v35;
    sub_10007E4EC(v33, v34);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    uint64_t v12 = v15;
    char v17 = v16;
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  }
  else
  {
    sub_1000058F4((uint64_t)v33);
    uint64_t v14 = 0;
    char v17 = -1;
  }
  Class isa = sub_1000D9C34(v14, v12, v17).super.super.isa;
  sub_100198058(v14, v12, v17);
  *(void *)(inited + 72) = isa;
  *(void *)(inited + 80) = 0x5464726143646C6FLL;
  *(void *)(inited + 88) = 0xEB00000000657079;
  sub_1000CD028(a3, (uint64_t)v33);
  uint64_t v19 = v34;
  if (v34)
  {
    uint64_t v20 = v35;
    sub_10007E4EC(v33, v34);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    uint64_t v19 = v22;
    char v24 = v23;
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  }
  else
  {
    sub_1000058F4((uint64_t)v33);
    uint64_t v21 = 0;
    char v24 = -1;
  }
  Class v25 = sub_1000D9C34(v21, v19, v24).super.super.isa;
  sub_100198058(v21, v19, v24);
  *(void *)(inited + 96) = v25;
  *(void *)(inited + 104) = 0x536472614377656ELL;
  *(void *)(inited + 112) = 0xEB00000000657A69;
  sub_1000CD028(a2, (uint64_t)v33);
  uint64_t v26 = v34;
  if (v34)
  {
    uint64_t v27 = v35;
    sub_10007E4EC(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  }
  else
  {
    sub_1000058F4((uint64_t)v33);
  }
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 0x5364726143646C6FLL;
  *(void *)(inited + 136) = 0xEB00000000657A69;
  sub_1000CD028(a3, (uint64_t)v33);
  uint64_t v28 = v34;
  if (v34)
  {
    uint64_t v29 = v35;
    sub_10007E4EC(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v33);
  }
  else
  {
    sub_1000058F4((uint64_t)v33);
  }
  *(NSNumber *)(inited + 144) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 152) = 0x65646E4964726163;
  *(void *)(inited + 160) = 0xE900000000000078;
  *(NSNumber *)(inited + 168) = Int._bridgeToObjectiveC()();
  unint64_t v30 = sub_1000D9C28(inited);
  NSString v31 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v30);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class v32 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

void sub_1006AA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 BOOLForKey:v8];

  sub_1000AFA94(&qword_10095DDE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752870;
  *(void *)(inited + 32) = 0x7463617265746E69;
  *(void *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 0x6570795464726163;
  *(void *)(inited + 64) = 0xE800000000000000;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  uint64_t v12 = v11;
  char v14 = v13;
  Class isa = sub_1000D9C34(v10, v11, v13).super.super.isa;
  sub_1000917F8(v10, v12, v14);
  *(void *)(inited + 72) = isa;
  *(void *)(inited + 80) = 0x657A695364726163;
  *(void *)(inited + 88) = 0xE800000000000000;
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x65646E4964726163;
  *(void *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x80000001007CC840;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  unint64_t v16 = sub_1000D9C28(inited);
  NSString v17 = String._bridgeToObjectiveC()();
  sub_1000D9B0C(v16);
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  Class v18 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  FIActivityAnalyticsSubmissionWithPayload();
}

id sub_1006AA47C()
{
  return sub_1006AA4A4(&OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint, (SEL *)&selRef_widthAnchor);
}

id sub_1006AA490()
{
  return sub_1006AA4A4(&OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint, (SEL *)&selRef_heightAnchor);
}

id sub_1006AA4A4(uint64_t *a1, SEL *a2)
{
  uint64_t v3 = *a1;
  unsigned int v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView) *a2];
    id v7 = [v6 constraintEqualToConstant:43.0];

    NSString v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    unsigned int v4 = 0;
  }
  id v9 = v4;
  return v5;
}

id sub_1006AA54C()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleBody];
  qword_100968B00 = (uint64_t)result;
  return result;
}

char *sub_1006AA594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext] = 0;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView;
  id v8 = objc_allocWithZone((Class)UIImageView);
  id v9 = v4;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = (void *)UIView.withContentMode(_:)();

  id v12 = [v11 layer];
  [v12 setCornerRadius:10.0];

  [v11 setClipsToBounds:1];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v7] = v11;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094B0E0 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)UILabel.withFont(_:)();

  [v15 setLineBreakMode:0];
  [v15 setNumberOfLines:0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v13] = v15;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[v16] = v17;
  *(void *)&v9[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(void *)&v9[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  if (a3)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  v28.receiver = v9;
  v28.super_class = (Class)type metadata accessor for MindfulnessSessionDetailHeaderCell();
  id v19 = [super initWithStyle:a1 reuseIdentifier:v18];

  id v20 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v21 = (char *)v19;
  id v22 = [v20 initWithTarget:v21 action:"navigateToCatalogItem"];
  id v23 = [v21 contentView];
  [v23 addGestureRecognizer:v22];

  id v24 = [v21 contentView];
  [v24 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView]];

  id v25 = [v21 contentView];
  [v25 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel]];

  id v26 = [v21 contentView];
  [v26 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel]];

  sub_1006AA95C();
  return v21;
}

void sub_1006AA95C()
{
  long long v42 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10075FC00;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 topAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5 constant:16.0];
  *(void *)(v1 + 32) = v6;
  id v7 = [v2 leadingAnchor];
  id v8 = [v0 contentView];
  id v9 = [v8 leadingAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9 constant:16.0];
  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = sub_1006AA47C();
  *(void *)(v1 + 56) = sub_1006AA490();
  id v11 = [v2 bottomAnchor];
  id v12 = [v0 contentView];
  id v13 = [v12 bottomAnchor];

  id v14 = [v11 constraintLessThanOrEqualToAnchor:v13 constant:-27.0];
  *(void *)(v1 + 64) = v14;
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel];
  id v16 = [v15 topAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 topAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:16.0];
  *(void *)(v1 + 72) = v19;
  id v20 = [v15 leadingAnchor];
  id v21 = [v2 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:19.0];

  *(void *)(v1 + 80) = v22;
  id v23 = [v15 trailingAnchor];
  id v24 = [v0 contentView];
  id v25 = [v24 trailingAnchor];

  id v26 = [v23 constraintEqualToAnchor:v25 constant:-16.0];
  *(void *)(v1 + 88) = v26;
  uint64_t v27 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel];
  id v28 = [v27 topAnchor];
  id v29 = [v15 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:4.0];

  *(void *)(v1 + 96) = v30;
  id v31 = [v27 leadingAnchor];
  id v32 = [v15 leadingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v1 + 104) = v33;
  id v34 = [v27 trailingAnchor];
  id v35 = [v0 contentView];
  id v36 = [v35 trailingAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36 constant:-16.0];
  *(void *)(v1 + 112) = v37;
  id v38 = [v27 bottomAnchor];
  id v39 = [v0 contentView];
  id v40 = [v39 bottomAnchor];

  id v41 = [v38 constraintLessThanOrEqualToAnchor:v40 constant:-27.0];
  *(void *)(v1 + 120) = v41;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];
}

void sub_1006AAF04(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v10 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel);
  *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel) = a1;
  id v14 = a1;

  uint64_t v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext);
  *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext) = a2;
  id v16 = a2;

  id v17 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);
  uint64_t v18 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  id v19 = sub_1005CBFB4((uint64_t)v14, (uint64_t)v12);
  sub_10008DB18((uint64_t)v12, &qword_100950BA8);
  [v17 setAttributedText:v19];

  id v20 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel);
  id v21 = sub_1005CD3D4();
  [v20 setAttributedText:v21];

  id v22 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  id v24 = v22;
  id v25 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v26 = [v25 source];

  LODWORD(v25) = [v26 _hasFirstPartyBundleID];
  if (v25)
  {
    id v27 = sub_1005CD058();
    [v24 setImage:v27];
  }
  else
  {
    uint64_t v64 = v16;
    id v28 = a3;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1006AEC10;
    *(void *)(v29 + 24) = v23;
    swift_retain();
    uint64_t v30 = MindfulnessSessionViewModel.sourceRevision.getter();
    id v31 = [(id)v30 source];

    LOBYTE(v30) = [v31 _isAppleWatch];
    if (v30)
    {
      id v27 = sub_1005CD128(43.0);
      id v32 = self;
      uint64_t v72 = sub_10022D7A4;
      uint64_t v73 = v29;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      char v70 = sub_100259288;
      char v71 = &unk_1008D60D0;
      id v33 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v32 fetchWatchIconWithParameters:v27 completion:v33];
      swift_release();
      id v34 = v33;
    }
    else
    {
      id v27 = sub_1005CD288(43.0);
      id v35 = self;
      uint64_t v72 = sub_10022D7A4;
      uint64_t v73 = v29;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      char v70 = sub_100259288;
      char v71 = &unk_1008D6080;
      id v36 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v35 fetchPhoneIconWithParameters:v27 completion:v36];
      swift_release();
      id v34 = v36;
    }
    _Block_release(v34);
    a3 = v28;
    id v16 = v64;
  }

  swift_release();
  uint64_t v37 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if ((v38 & 1) != 0 || v37 != 3) {
    goto LABEL_25;
  }
  unint64_t v39 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
  unint64_t v40 = v39;
  if (v39 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_11;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v40 & 0xC000000000000001) != 0)
  {
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v41 = *(id *)(v40 + 32);
  }
  long long v42 = v41;
  swift_bridgeObjectRelease();
  id v43 = [v42 metadata];
  if (v43)
  {
    long long v44 = v43;
    uint64_t v45 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v45 + 16) && (unint64_t v48 = sub_1000DA1C0(v46, v47), (v49 & 1) != 0))
    {
      sub_10008F484(*(void *)(v45 + 56) + 32 * v48, (uint64_t)&v67);
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v68 + 1))
    {
      sub_10005C2B0(&v67, &aBlock);
      *(void *)&long long v67 = 0;
      *((void *)&v67 + 1) = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      long long v50 = v67;
      uint64_t v51 = *(char **)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      uint64_t v52 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v53 = v14;
      id v54 = a3;
      sub_1004912E0(v50, *((uint64_t *)&v50 + 1), v51, v52, v54, v53);

      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
      swift_release();
      return;
    }
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }

  sub_10008DB18((uint64_t)&v67, &qword_100955A00);
LABEL_25:
  uint64_t v55 = *(void *)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  id v56 = v14;
  char v57 = sub_100719620();

  if (v57)
  {
    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v59 = v56;
    long long v60 = v16;
    uint64_t v62 = v65;
    uint64_t v61 = v66;
    sub_10008A670(v65);
    sub_100491ED0(v59, v55, v59, v58, v60, v62, v61);
    sub_10005E5F8(v62);
    swift_release();
  }
}

uint64_t sub_1006AB5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006AEC5C(a1, a2, a4);
}

uint64_t sub_1006AB5FC(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    uint64_t v10 = *(void *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    id v11 = objc_allocWithZone((Class)NSMutableAttributedString);
    id v12 = a1;
    id v13 = [v11 initWithAttributedString:v10];
    id v14 = objc_allocWithZone((Class)NSAttributedString);
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v14 initWithString:v15];

    [v13 appendAttributedString:v16];
    [v13 appendAttributedString:*(void *)&v12[OBJC_IVAR___CHCatalogItemViewModel_subtitle]];
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (void *)Strong;
      id v19 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);

      [v19 setAttributedText:v13];
    }
    id v20 = (void *)swift_allocObject();
    v20[2] = a5;
    v20[3] = a6;
    v20[4] = a3;
    sub_10008A670(a5);
    swift_retain();
    sub_100485D1C(v12, (uint64_t)sub_1006AEF64, (uint64_t)v20);

    return swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v23 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10074E640;
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_1000AA64C();
    *(void *)(v24 + 32) = 0xD000000000000050;
    *(void *)(v24 + 40) = 0x80000001007CA450;
    *(void *)(v24 + 96) = type metadata accessor for MindfulnessSessionViewModel();
    *(void *)(v24 + 104) = sub_1006AEEC4();
    *(void *)(v24 + 72) = a2;
    id v25 = v23;
    id v26 = a2;
    os_log(_:dso:log:_:_:)();

    return swift_bridgeObjectRelease();
  }
}

void sub_1006AB8DC(uint64_t a1, void (*a2)(void))
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      id v6 = sub_1006AA47C();

      [v6 setConstant:135.0];
    }
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = sub_1006AA490();

      [v9 setConstant:76.0];
    }
    swift_beginAccess();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      id v11 = (void *)v10;
      id v12 = *(id *)(v10 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView);

      [v12 setImage:a1];
    }
  }
  if (a2) {
    a2();
  }
}

void sub_1006ABA28()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext);
    if (v2)
    {
      id v3 = v1;
      id v6 = v2;
      char v4 = sub_100719620();

      if (v4)
      {
        id v5 = v3;
        sub_1006ADBE8(v5, (uint64_t)v6);

        id v6 = v5;
      }
    }
  }
}

id sub_1006ABB48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailHeaderCell();
  return [super dealloc];
}

uint64_t type metadata accessor for MindfulnessSessionDetailHeaderCell()
{
  return self;
}

uint64_t sub_1006ABC3C(void *a1, uint64_t a2)
{
  uint64_t v113 = sub_1000AFA94(&qword_10095DD18);
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v4 = *(void *)(v112 + 64);
  uint64_t v5 = __chkstk_darwin(v113);
  long long v111 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  __int16 v125 = (char *)&v95 - v6;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  int v124 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  long long v110 = (char *)&v95 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v116 = (char *)&v95 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v117 = (char *)&v95 - v16;
  __chkstk_darwin(v15);
  uint64_t v118 = (char *)&v95 - v17;
  uint64_t v109 = type metadata accessor for NavigationPriority();
  long long v108 = *(void (**)(char *, char *, uint64_t))(v109 - 8);
  __chkstk_darwin(v109);
  long long v107 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  long long v106 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for NavigationSource();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v103 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for NavigationIntent();
  uint64_t v98 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v100 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v23 - 8);
  uint64_t v99 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for NavigationRequest();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v122 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for NavigationResource();
  uint64_t v121 = *(void *)(v123 - 8);
  uint64_t v26 = __chkstk_darwin(v123);
  id v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  char v120 = (uint64_t *)((char *)&v95 - v29);
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v97 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131[3] = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  v131[4] = &off_1008C0440;
  v131[0] = a1;
  uint64_t v119 = a2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v58 = a1;
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v131);
  }
  id v126 = Strong;
  uint64_t v96 = v8;
  id v34 = [a1 metadata];
  if (!v34)
  {
    long long v127 = 0u;
    long long v128 = 0u;
    goto LABEL_13;
  }
  id v35 = v34;
  uint64_t v95 = v7;
  uint64_t v36 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v37 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v36 + 16) || (unint64_t v39 = sub_1000DA1C0(v37, v38), (v40 & 1) == 0))
  {
    long long v127 = 0u;
    long long v128 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10008F484(*(void *)(v36 + 56) + 32 * v39, (uint64_t)&v127);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v128 + 1))
  {
LABEL_13:
    swift_unknownObjectRelease();
    sub_10008DB18((uint64_t)&v127, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v131);
  }
  if (swift_dynamicCast())
  {
    uint64_t v41 = v129;
    uint64_t v42 = v130;
    if ([v126 navigateToSeymourTab])
    {
      static Log.default.getter();
      v43._uint64_t countAndFlagsBits = 0xD000000000000059;
      v43._object = (void *)0x80000001007BEBD0;
      v44._object = (void *)0x80000001007D5890;
      v44._uint64_t countAndFlagsBits = 0xD000000000000019;
      Logger.trace(file:function:)(v43, v44);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v32, v30);
      uint64_t v45 = *(void **)(v119 + OBJC_IVAR___CHFitnessAppContext_navigator);
      sub_10007E4EC(v45 + 11, v45[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      uint64_t v46 = v41;
      uint64_t v47 = v120;
      void *v120 = v46;
      v47[1] = v42;
      uint64_t v48 = enum case for WorkoutNavigationResource.identifier(_:);
      uint64_t v49 = type metadata accessor for WorkoutNavigationResource();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
      uint64_t v50 = v121;
      uint64_t v51 = v123;
      (*(void (**)(void *, void, uint64_t))(v121 + 104))(v47, enum case for NavigationResource.workout(_:), v123);
      (*(void (**)(char *, void *, uint64_t))(v50 + 16))(v28, v47, v51);
      static NavigationAnnotation.tabSwitch.getter();
      uint64_t v52 = v100;
      unsigned char *v100 = 1;
      (*(void (**)(unsigned char *, void, uint64_t))(v98 + 104))(v52, enum case for NavigationIntent.push(_:), v21);
      (*(void (**)(char *, void, uint64_t))(v101 + 104))(v103, enum case for NavigationSource.default(_:), v102);
      (*(void (**)(char *, void, uint64_t))(v104 + 104))(v106, enum case for NavigationRoutingBehavior.default(_:), v105);
      (*((void (**)(char *, void, uint64_t))v108 + 13))(v107, enum case for NavigationPriority.default(_:), v109);
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
      sub_1002698DC(0, *(void **)(v119 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator), *(void *)(v119 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8));
      id v53 = (void **)sub_10007E4EC(v45 + 6, v45[9]);
      uint64_t v55 = *v53;
      uint64_t v54 = (uint64_t)v53[1];
      if (v54 < 0)
      {
        swift_retain();
        char v57 = v110;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v55, v54);
      }
      else
      {
        id v56 = v55;
        char v57 = v110;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v60 = v95;
      uint64_t v61 = v96;
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
      long long v107 = (char *)(v96 + 16);
      long long v108 = v62;
      uint64_t v63 = v124;
      v62(v124, v57, v95);
      uint64_t v64 = *(unsigned __int8 *)(v61 + 80);
      uint64_t v105 = ((v64 + 16) & ~v64) + v9;
      uint64_t v65 = (v64 + 16) & ~v64;
      long long v106 = (char *)v65;
      uint64_t v119 = v64 | 7;
      uint64_t v66 = swift_allocObject();
      long long v67 = *(char **)(v61 + 32);
      uint64_t v109 = v61 + 32;
      long long v110 = v67;
      ((void (*)(uint64_t, char *, uint64_t))v67)(v66 + v65, v63, v60);
      uint64_t v68 = v112;
      long long v69 = v111;
      uint64_t v70 = v113;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v111, v125, v113);
      unint64_t v71 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v72 = v57;
      uint64_t v73 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v73 + v71, v69, v70);
      char v74 = (void *)(v73 + ((v4 + v71 + 7) & 0xFFFFFFFFFFFFFFF8));
      *char v74 = sub_1006AEB68;
      v74[1] = v66;
      long long v111 = (char *)&type metadata for () + 8;
      char v75 = v116;
      Promise.init(asyncOperation:)();
      uint64_t v104 = *(void *)(v61 + 8);
      ((void (*)(char *, uint64_t))v104)(v72, v60);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v125, v70);
      sub_10008E75C((uint64_t)v131, (uint64_t)&v127);
      uint64_t v76 = swift_allocObject();
      sub_100093E60(&v127, v76 + 16);
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = sub_1006AF410;
      *(void *)(v77 + 24) = v76;
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = sub_1006AF3E0;
      *(void *)(v78 + 24) = v77;
      char v79 = v124;
      uint64_t v80 = v75;
      v108(v124, v75, v60);
      unint64_t v81 = (v105 + 7) & 0xFFFFFFFFFFFFFFF8;
      __int16 v125 = (char *)(v81 + 16);
      uint64_t v82 = swift_allocObject();
      uint64_t v83 = v106;
      ((void (*)(char *, char *, uint64_t))v110)(&v106[v82], v79, v60);
      int v84 = (void *)(v82 + v81);
      *int v84 = sub_1000E2B90;
      v84[1] = v78;
      uint64_t v85 = v117;
      Promise.init(asyncOperation:)();
      uint64_t v86 = v80;
      long long v87 = (void (*)(char *, uint64_t))v104;
      ((void (*)(char *, uint64_t))v104)(v86, v60);
      sub_10008E75C((uint64_t)v131, (uint64_t)&v127);
      uint64_t v88 = swift_allocObject();
      sub_100093E60(&v127, v88 + 16);
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = sub_1006AF3C8;
      *(void *)(v89 + 24) = v88;
      v108(v79, v85, v60);
      uint64_t v90 = swift_allocObject();
      ((void (*)(char *, char *, uint64_t))v110)(&v83[v90], v79, v60);
      uint64_t v91 = (void *)(v90 + v81);
      *uint64_t v91 = sub_1001B3D88;
      v91[1] = v89;
      uint64_t v92 = v118;
      Promise.init(asyncOperation:)();
      v87(v85, v60);
      uint64_t v93 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = 0;
      *(void *)(v94 + 24) = 0;
      v93(sub_10006D36C, v94);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      v87(v92, v60);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v122, v115);
      (*(void (**)(void *, uint64_t))(v121 + 8))(v120, v123);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v131);
}

uint64_t sub_1006ACBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v109 = sub_1000AFA94(&qword_10095DD18);
  uint64_t v108 = *(void *)(v109 - 8);
  uint64_t v6 = *(void *)(v108 + 64);
  __chkstk_darwin(v109);
  long long v107 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v117 = (char *)&v93 - v8;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v115 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v115 + 64);
  __chkstk_darwin(v9);
  uint64_t v122 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v123 = (char *)&v93 - v12;
  __chkstk_darwin(v13);
  uint64_t v112 = (char *)&v93 - v14;
  __chkstk_darwin(v15);
  uint64_t v113 = (char *)&v93 - v16;
  __chkstk_darwin(v17);
  uint64_t v114 = (char *)&v93 - v18;
  uint64_t v106 = type metadata accessor for NavigationPriority();
  uint64_t v105 = *(void (**)(uint64_t, char *, uint64_t))(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v103 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for NavigationSource();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v100 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for NavigationIntent();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v24 - 8);
  uint64_t v97 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for NavigationRequest();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  char v120 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for NavigationResource();
  uint64_t v119 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  id v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v118 = (uint64_t *)((char *)&v93 - v30);
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v94 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v33 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129[3] = &type metadata for SeymourWorkoutRecommendation;
  v129[4] = &off_1008D0940;
  v129[0] = a1;
  v129[1] = a2;
  uint64_t v116 = a3;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v124 = Strong;
    uint64_t v93 = v9;
    sub_1000AFA94(&qword_10094DBA8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    swift_bridgeObjectRetain();
    *(void *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
    *(void *)(inited + 40) = v36;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_100522E98(inited);
    uint64_t v38 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
    if (*(void *)(v37 + 16) && (unint64_t v40 = sub_1000DA1C0(v38, v39), (v41 & 1) != 0))
    {
      sub_10008F484(*(void *)(v37 + 56) + 32 * v40, (uint64_t)&v125);
    }
    else
    {
      long long v126 = 0u;
      long long v125 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v126 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v43 = v127;
        uint64_t v42 = v128;
        if ([v124 navigateToSeymourTab])
        {
          static Log.default.getter();
          v44._uint64_t countAndFlagsBits = 0xD000000000000059;
          v44._object = (void *)0x80000001007BEBD0;
          v45._object = (void *)0x80000001007D5890;
          v45._uint64_t countAndFlagsBits = 0xD000000000000019;
          Logger.trace(file:function:)(v44, v45);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v33, v31);
          uint64_t v46 = *(void **)(v116 + OBJC_IVAR___CHFitnessAppContext_navigator);
          sub_10007E4EC(v46 + 11, v46[14]);
          dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
          uint64_t v47 = v118;
          void *v118 = v43;
          v47[1] = v42;
          uint64_t v48 = enum case for WorkoutNavigationResource.identifier(_:);
          uint64_t v49 = type metadata accessor for WorkoutNavigationResource();
          (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
          uint64_t v50 = v119;
          uint64_t v51 = v121;
          (*(void (**)(void *, void, uint64_t))(v119 + 104))(v47, enum case for NavigationResource.workout(_:), v121);
          (*(void (**)(char *, void *, uint64_t))(v50 + 16))(v28, v47, v51);
          static NavigationAnnotation.tabSwitch.getter();
          unsigned char *v23 = 1;
          (*(void (**)(unsigned char *, void, uint64_t))(v95 + 104))(v23, enum case for NavigationIntent.push(_:), v96);
          (*(void (**)(char *, void, uint64_t))(v98 + 104))(v100, enum case for NavigationSource.default(_:), v99);
          (*(void (**)(char *, void, uint64_t))(v101 + 104))(v103, enum case for NavigationRoutingBehavior.default(_:), v102);
          (*((void (**)(char *, void, uint64_t))v105 + 13))(v104, enum case for NavigationPriority.default(_:), v106);
          NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
          sub_1002698DC(0, *(void **)(v116 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator), *(void *)(v116 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8));
          uint64_t v52 = (void **)sub_10007E4EC(v46 + 6, v46[9]);
          uint64_t v54 = *v52;
          uint64_t v53 = (uint64_t)v52[1];
          if (v53 < 0)
          {
            swift_retain();
            id v56 = v123;
            AppCoordinator.navigateToRequest(_:)();
            sub_1000656A0(v54, v53);
          }
          else
          {
            id v55 = v54;
            id v56 = v123;
            BrowsingViewController.navigateToRequest(_:)();
          }
          uint64_t v57 = v115;
          uint64_t v103 = *(char **)(v115 + 16);
          uint64_t v116 = v115 + 16;
          id v58 = v122;
          uint64_t v59 = v93;
          ((void (*)(char *, char *, uint64_t))v103)(v122, v56, v93);
          uint64_t v60 = *(unsigned __int8 *)(v57 + 80);
          uint64_t v101 = ((v60 + 16) & ~v60) + v10;
          uint64_t v61 = (v60 + 16) & ~v60;
          uint64_t v102 = v61;
          uint64_t v106 = v60 | 7;
          uint64_t v62 = swift_allocObject();
          uint64_t v63 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 32);
          uint64_t v104 = (char *)(v57 + 32);
          uint64_t v105 = v63;
          v63(v62 + v61, v58, v59);
          uint64_t v64 = v108;
          uint64_t v65 = v107;
          uint64_t v66 = v117;
          uint64_t v67 = v109;
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v107, v117, v109);
          unint64_t v68 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
          uint64_t v69 = swift_allocObject();
          (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v69 + v68, v65, v67);
          uint64_t v70 = (void *)(v69 + ((v6 + v68 + 7) & 0xFFFFFFFFFFFFFFF8));
          *uint64_t v70 = sub_1006AEB68;
          v70[1] = v62;
          long long v107 = (char *)&type metadata for () + 8;
          unint64_t v71 = v112;
          Promise.init(asyncOperation:)();
          uint64_t v115 = *(void *)(v57 + 8);
          ((void (*)(char *, uint64_t))v115)(v123, v59);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v67);
          sub_10008E75C((uint64_t)v129, (uint64_t)&v125);
          uint64_t v72 = swift_allocObject();
          sub_100093E60(&v125, v72 + 16);
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = sub_1006AF410;
          *(void *)(v73 + 24) = v72;
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = sub_1006AF3E0;
          *(void *)(v74 + 24) = v73;
          char v75 = v122;
          uint64_t v76 = v71;
          uint64_t v77 = v103;
          ((void (*)(char *, char *, uint64_t))v103)(v122, v71, v59);
          unint64_t v78 = (v101 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v123 = (char *)(v78 + 16);
          uint64_t v79 = swift_allocObject();
          uint64_t v80 = v102;
          v105(v79 + v102, v75, v59);
          unint64_t v81 = (void *)(v79 + v78);
          *unint64_t v81 = sub_1000E2B90;
          v81[1] = v74;
          uint64_t v82 = v113;
          Promise.init(asyncOperation:)();
          uint64_t v83 = v76;
          int v84 = (void (*)(char *, uint64_t))v115;
          ((void (*)(char *, uint64_t))v115)(v83, v59);
          sub_10008E75C((uint64_t)v129, (uint64_t)&v125);
          uint64_t v85 = swift_allocObject();
          sub_100093E60(&v125, v85 + 16);
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = sub_1006AF3C8;
          *(void *)(v86 + 24) = v85;
          ((void (*)(char *, char *, uint64_t))v77)(v75, v82, v59);
          uint64_t v87 = swift_allocObject();
          v105(v87 + v80, v75, v59);
          uint64_t v88 = (void *)(v87 + v78);
          *uint64_t v88 = sub_1001B3D88;
          v88[1] = v86;
          uint64_t v89 = v114;
          Promise.init(asyncOperation:)();
          v84(v82, v59);
          uint64_t v90 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
          uint64_t v91 = swift_allocObject();
          *(void *)(v91 + 16) = 0;
          *(void *)(v91 + 24) = 0;
          v90(sub_10006D36C, v91);
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          v84(v89, v59);
          (*(void (**)(char *, uint64_t))(v110 + 8))(v120, v111);
          (*(void (**)(void *, uint64_t))(v119 + 8))(v118, v121);
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
      sub_10008DB18((uint64_t)&v125, &qword_100955A00);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v129);
}

uint64_t sub_1006ADBE8(void *a1, uint64_t a2)
{
  uint64_t v114 = sub_1000AFA94(&qword_10095DD18);
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v4 = *(void *)(v113 + 64);
  __chkstk_darwin(v114);
  uint64_t v112 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v120 = (char *)&v96 - v6;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v126 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v126 + 64);
  __chkstk_darwin(v7);
  long long v125 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v96 - v10;
  __chkstk_darwin(v11);
  long long v117 = (char *)&v96 - v12;
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v96 - v14;
  __chkstk_darwin(v15);
  uint64_t v119 = (char *)&v96 - v16;
  uint64_t v110 = (void (*)(char *, char *, uint64_t))type metadata accessor for NavigationPriority();
  uint64_t v109 = *((void *)v110 - 1);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  long long v107 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for NavigationSource();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v104 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NavigationIntent();
  uint64_t v99 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v101 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v22 - 8);
  uint64_t v100 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for NavigationRequest();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v123 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for NavigationResource();
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v26 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v121 = (uint64_t *)((char *)&v96 - v28);
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v98 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132[3] = type metadata accessor for MindfulnessSessionViewModel();
  v132[4] = &off_1008C0428;
  v132[0] = a1;
  uint64_t v32 = a2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v57 = a1;
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v132);
  }
  id v127 = Strong;
  id v34 = a1;
  uint64_t v35 = MindfulnessSessionViewModel.metadata.getter();
  if (!v35)
  {
    long long v128 = 0u;
    long long v129 = 0u;
    goto LABEL_13;
  }
  uint64_t v36 = v35;
  uint64_t v97 = v7;
  uint64_t v37 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  if (!*(void *)(v36 + 16) || (unint64_t v39 = sub_1000DA1C0(v37, v38), (v40 & 1) == 0))
  {
    long long v128 = 0u;
    long long v129 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10008F484(*(void *)(v36 + 56) + 32 * v39, (uint64_t)&v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v129 + 1))
  {
LABEL_13:
    swift_unknownObjectRelease();
    sub_10008DB18((uint64_t)&v128, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v132);
  }
  if (swift_dynamicCast())
  {
    uint64_t v42 = v130;
    uint64_t v41 = v131;
    if ([v127 navigateToSeymourTab])
    {
      static Log.default.getter();
      v43._uint64_t countAndFlagsBits = 0xD000000000000059;
      v43._object = (void *)0x80000001007BEBD0;
      v44._object = (void *)0x80000001007D5890;
      v44._uint64_t countAndFlagsBits = 0xD000000000000019;
      Logger.trace(file:function:)(v43, v44);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v31, v29);
      uint64_t v96 = v32;
      Swift::String v45 = *(void **)(v32 + OBJC_IVAR___CHFitnessAppContext_navigator);
      sub_10007E4EC(v45 + 11, v45[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      uint64_t v46 = v121;
      void *v121 = v42;
      v46[1] = v41;
      uint64_t v47 = enum case for WorkoutNavigationResource.identifier(_:);
      uint64_t v48 = type metadata accessor for WorkoutNavigationResource();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
      uint64_t v49 = v122;
      uint64_t v50 = v124;
      (*(void (**)(void *, void, uint64_t))(v122 + 104))(v46, enum case for NavigationResource.workout(_:), v124);
      (*(void (**)(char *, void *, uint64_t))(v49 + 16))(v26, v46, v50);
      static NavigationAnnotation.tabSwitch.getter();
      uint64_t v51 = v101;
      *uint64_t v101 = 1;
      (*(void (**)(unsigned char *, void, uint64_t))(v99 + 104))(v51, enum case for NavigationIntent.push(_:), v20);
      (*(void (**)(char *, void, uint64_t))(v102 + 104))(v104, enum case for NavigationSource.default(_:), v103);
      (*(void (**)(char *, void, uint64_t))(v105 + 104))(v107, enum case for NavigationRoutingBehavior.default(_:), v106);
      (*(void (**)(char *, void, void *))(v109 + 104))(v108, enum case for NavigationPriority.default(_:), v110);
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
      sub_1002698DC(0, *(void **)(v96 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator), *(void *)(v96 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8));
      uint64_t v52 = (void **)sub_10007E4EC(v45 + 6, v45[9]);
      uint64_t v54 = *v52;
      uint64_t v53 = (uint64_t)v52[1];
      if (v53 < 0)
      {
        swift_retain();
        id v56 = v111;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v54, v53);
      }
      else
      {
        id v55 = v54;
        id v56 = v111;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v59 = v97;
      uint64_t v60 = v126;
      uint64_t v61 = *(char **)(v126 + 16);
      long long v107 = (char *)(v126 + 16);
      uint64_t v108 = v61;
      uint64_t v62 = v125;
      ((void (*)(char *, char *, uint64_t))v61)(v125, v56, v97);
      uint64_t v63 = *(unsigned __int8 *)(v60 + 80);
      uint64_t v105 = ((v63 + 16) & ~v63) + v8;
      uint64_t v64 = (v63 + 16) & ~v63;
      uint64_t v111 = (char *)v64;
      uint64_t v106 = v63 | 7;
      uint64_t v65 = swift_allocObject();
      uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      uint64_t v109 = v60 + 32;
      uint64_t v110 = v66;
      v66((char *)(v65 + v64), v62, v59);
      uint64_t v67 = v113;
      unint64_t v68 = v112;
      uint64_t v69 = v120;
      uint64_t v70 = v114;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v112, v120, v114);
      unint64_t v71 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      uint64_t v72 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v72 + v71, v68, v70);
      uint64_t v73 = (void *)(v72 + ((v4 + v71 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v73 = sub_1006AEB68;
      v73[1] = v65;
      uint64_t v112 = (char *)&type metadata for () + 8;
      uint64_t v74 = v117;
      Promise.init(asyncOperation:)();
      uint64_t v104 = *(char **)(v60 + 8);
      uint64_t v126 = v60 + 8;
      uint64_t v75 = v97;
      ((void (*)(char *, uint64_t))v104)(v56, v97);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v70);
      sub_10008E75C((uint64_t)v132, (uint64_t)&v128);
      uint64_t v76 = swift_allocObject();
      sub_100093E60(&v128, v76 + 16);
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = sub_1006AEB98;
      *(void *)(v77 + 24) = v76;
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = sub_1000E02FC;
      *(void *)(v78 + 24) = v77;
      uint64_t v79 = v125;
      uint64_t v80 = v74;
      unint64_t v81 = v108;
      ((void (*)(char *, char *, uint64_t))v108)(v125, v74, v75);
      uint64_t v82 = v75;
      unint64_t v83 = (v105 + 7) & 0xFFFFFFFFFFFFFFF8;
      char v120 = (char *)(v83 + 16);
      uint64_t v84 = swift_allocObject();
      v110(&v111[v84], v79, v75);
      uint64_t v85 = (uint64_t (**)(uint64_t))(v84 + v83);
      *uint64_t v85 = sub_10003936C;
      v85[1] = (uint64_t (*)(uint64_t))v78;
      uint64_t v86 = v118;
      Promise.init(asyncOperation:)();
      uint64_t v87 = v80;
      uint64_t v88 = v104;
      ((void (*)(char *, uint64_t))v104)(v87, v75);
      sub_10008E75C((uint64_t)v132, (uint64_t)&v128);
      uint64_t v89 = swift_allocObject();
      sub_100093E60(&v128, v89 + 16);
      uint64_t v90 = swift_allocObject();
      *(void *)(v90 + 16) = sub_1006AEBAC;
      *(void *)(v90 + 24) = v89;
      ((void (*)(char *, char *, uint64_t))v81)(v79, v86, v75);
      uint64_t v91 = swift_allocObject();
      v110(&v111[v91], v79, v82);
      uint64_t v92 = (uint64_t (**)(uint64_t))(v91 + v83);
      *uint64_t v92 = sub_1001B36B8;
      v92[1] = (uint64_t (*)(uint64_t))v90;
      uint64_t v93 = v119;
      Promise.init(asyncOperation:)();
      ((void (*)(char *, uint64_t))v88)(v86, v82);
      uint64_t v94 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = 0;
      *(void *)(v95 + 24) = 0;
      v94(sub_10006D8B4, v95);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      ((void (*)(char *, uint64_t))v88)(v93, v82);
      (*(void (**)(char *, uint64_t))(v115 + 8))(v123, v116);
      (*(void (**)(void *, uint64_t))(v122 + 8))(v121, v124);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v132);
}

uint64_t sub_1006AEB6C()
{
  return sub_10001EC00(&qword_10095DD18);
}

uint64_t sub_1006AEB78(uint64_t a1, uint64_t a2)
{
  return sub_1006AF2D8(a1, a2, &qword_10095DD18, sub_10048B948);
}

uint64_t sub_1006AEB98()
{
  return sub_100648D40(v0 + 16);
}

uint64_t sub_1006AEBA0()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AEBAC(uint64_t a1)
{
  return sub_100648F78(a1, v1 + 16);
}

uint64_t sub_1006AEBC8()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AEBD8()
{
  return swift_deallocObject();
}

id sub_1006AEC10(uint64_t a1)
{
  return [*(id *)(v1 + 16) setImage:a1];
}

uint64_t sub_1006AEC24()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006AEC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000AFA94(&qword_100950BA8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for Trainer();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003A1240(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10008DB18((uint64_t)v10, &qword_100950BA8);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    id v18 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);

    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    id v19 = sub_1005CBFB4(a3, (uint64_t)v8);
    sub_10008DB18((uint64_t)v8, &qword_100950BA8);
    [v18 setAttributedText:v19];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1006AEEC4()
{
  unint64_t result = qword_100950C98;
  if (!qword_100950C98)
  {
    type metadata accessor for MindfulnessSessionViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100950C98);
  }
  return result;
}

uint64_t sub_1006AEF1C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void sub_1006AEF64(uint64_t a1)
{
  sub_1006AB8DC(a1, *(void (**)(void))(v1 + 16));
}

void sub_1006AEF70()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext] = 0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView;
  id v3 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = (void *)UIView.withContentMode(_:)();

  id v5 = [v4 layer];
  [v5 setCornerRadius:10.0];

  [v4 setClipsToBounds:1];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v4;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel;
  id v7 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094B0E0 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)UILabel.withFont(_:)();

  [v8 setLineBreakMode:0];
  [v8 setNumberOfLines:0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v6] = v8;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v9] = v10;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1006AF1A0()
{
  return sub_10001EC00(&qword_10095DD18);
}

uint64_t sub_1006AF1AC()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AF1B8()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AF1CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v4 = *(void *)(v3 - 8);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_1006AF244()
{
  return sub_10001EC00(&qword_10095DD18);
}

uint64_t sub_1006AF250()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1006AF288()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006AF2C0()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AF2CC()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006AF2D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  id v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1006AF3C8(uint64_t a1)
{
  return sub_1006AEBAC(a1);
}

uint64_t sub_1006AF3E0()
{
  return sub_1000E02FC();
}

double sub_1006AF414(void (*a1)(double *__return_ptr, double *, char *), double a2, uint64_t a3, uint64_t a4)
{
  void (*v31)(double *__return_ptr, double *, char *);
  double v32;
  double v33;

  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for DateInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = a2;
  uint64_t v14 = *(void *)(a4 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v15 = v8 + 16;
    uint64_t v17 = a4;
    uint64_t v18 = a4 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v19 = *(void *)(v15 + 56);
    uint64_t v20 = v15;
    unint64_t v21 = v15 + 40;
    uint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v29 = v16;
    uint64_t v25 = v19;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v30 = v20;
    uint64_t v27 = (void (**)(char *, uint64_t))(v20 - 8);
    v24[2] = v17;
    swift_bridgeObjectRetain();
    v24[1] = v21 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v29(v13, v18, v7);
      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v21;
      (*(void (**)(char *, void, uint64_t, uint64_t))v21)(v13, 0, 1, v7);
      if ((*v28)(v13, 1, v7) == 1) {
        break;
      }
      (*v26)(v10, v13, v7);
      v31(&v32, &v33, v10);
      if (v4)
      {
        (*v27)(v10, v7);
        swift_bridgeObjectRelease();
        return a2;
      }
      (*v27)(v10, v7);
      a2 = v32;
      id v33 = v32;
      v18 += v25;
      if (!--v14) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v22(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_1006AF6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void (**)(char *, char *))(a1 + 32);
  if (a2)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  }
  else
  {
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  if (a3)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  swift_retain();
  v12(v11, v9);
  swift_release();
  sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
  return sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_10095B890);
}

id sub_1006AF8CC(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v146 = a1;
  id v147 = a5;
  char v150 = a2;
  uint64_t v143 = type metadata accessor for WorkoutChartGroupView();
  __chkstk_darwin(v143);
  uint64_t v144 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  __int16 v145 = (uint64_t *)((char *)&v134 - v10);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  uint64_t v138 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v148 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v151 = (char *)&v134 - v17;
  __n128 v19 = __chkstk_darwin(v18);
  long long v135 = (char *)&v134 - v20;
  uint64_t v21 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity;
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity] = 0;
  char v137 = *(char **)(v14 + 56);
  uint64_t v136 = v14 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v137)(&v5[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_selectedDate], 1, 1, v13, v19);
  uint64_t v22 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  id v23 = objc_allocWithZone((Class)UIView);
  uint64_t v24 = v5;
  *(void *)&v5[v22] = [v23 init];
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = 0;
  uint64_t v25 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  *(void *)&v24[v25] = [objc_allocWithZone((Class)MKMapView) init];
  uint64_t v26 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  type metadata accessor for WorkoutGradientView();
  *(void *)&v24[v26] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation] = 0;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline] = 0;
  uint64_t v27 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback;
  *(void *)&v24[v27] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  uint64_t v149 = &v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions];
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions] = _swiftEmptyArrayStorage;
  uint64_t v28 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView;
  id v29 = [objc_allocWithZone((Class)type metadata accessor for WorkoutChartHeaderView()) init];
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v24[v28] = v29;
  uint64_t v30 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue;
  id v31 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v31 setQualityOfService:25];
  [v31 setMaxConcurrentOperationCount:1];

  *(void *)&v24[v30] = v31;
  uint64_t v32 = v150;
  id v33 = a3;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_dataCalculator] = a3;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager] = a4;
  id v35 = v146;
  id v34 = v147;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings] = v147;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout] = v35;
  uint64_t v36 = *(void **)&v5[v21];
  *(void *)&v5[v21] = v32;
  id v142 = v33;
  id v37 = a4;
  id v139 = v34;
  id v38 = v35;
  id v39 = v32;

  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_downhillRunDateIntervals] = sub_100182704();
  id v40 = [v38 sourceRevision];
  id v41 = [v40 source];

  LODWORD(v40) = [v41 _hasFirstPartyBundleID];
  uint64_t v42 = &selRef_supportsDistanceForWorkout_workoutActivity_;
  if (!v40) {
    uint64_t v42 = &selRef_hasDistanceForWorkout_workoutActivity_;
  }
  Swift::String v43 = *v42;
  id v140 = v37;
  id v146 = v39;
  unsigned __int8 v44 = [v37 v43:v38, v39];
  v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance] = v44;
  id v147 = v38;
  id v45 = [v38 fiui_activityType];
  if (!v45)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    id v45 = (id)static FIUIWorkoutActivityType.other.getter();
  }
  [v45 effectiveTypeIdentifier];
  [v45 isIndoor];
  id v141 = v45;
  [v45 swimmingLocationType];
  v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_isRouteable] = _HKWorkoutActivityTypeIsRouteable();
  if (v150)
  {
    id v46 = v146;
    id v47 = [v46 endDate];
    uint64_t v48 = v151;
    if (v47)
    {
      uint64_t v49 = v47;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v50 = v48;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      uint64_t v52 = (uint64_t)v138;
      v51(v138, v50, v13);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v137)(v52, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v52, 1, v13) != 1)
      {
        uint64_t v53 = v135;
        v51(v135, (char *)v52, v13);
        id v54 = [v46 startDate];
        id v55 = v151;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v51(&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_startDate], v55, v13);
        v51(&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate], v53, v13);
        uint64_t v56 = (uint64_t)v55;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v52 = (uint64_t)v138;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v137)(v138, 1, 1, v13);
    }

    sub_10008DB18(v52, (uint64_t *)&unk_10095B890);
  }
  id v57 = v147;
  id v58 = [v147 startDate];
  uint64_t v56 = (uint64_t)v151;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  v59(&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_startDate], v56, v13);
  id v60 = [v57 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v59(&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate], v56, v13);
LABEL_12:
  uint64_t v61 = *(void (**)(uint64_t))(v14 + 16);
  char v137 = &v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate];
  v61(v56);
  uint64_t v62 = v148;
  uint64_t v138 = &v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_startDate];
  v61((uint64_t)v148);
  Date.timeIntervalSince(_:)();
  double v64 = v63;
  uint64_t v65 = *(void (**)(char *, uint64_t))(v14 + 8);
  v65(v62, v13);
  v65((char *)v56, v13);
  if (v64 > 1350.0)
  {
    id v66 = [self mainBundle];
    NSString v67 = String._bridgeToObjectiveC()();
    id v68 = [v66 localizedStringForKey:v67 value:0 table:0];

    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v71 = v70;

    uint64_t v72 = v149;
    swift_beginAccess();
    uint64_t v73 = *(void **)v72;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v72 = v73;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v73 = sub_100084014(0, v73[2] + 1, 1, v73);
      *(void *)uint64_t v72 = v73;
    }
    unint64_t v76 = v73[2];
    unint64_t v75 = v73[3];
    if (v76 >= v75 >> 1)
    {
      uint64_t v73 = sub_100084014((void *)(v75 > 1), v76 + 1, 1, v73);
      *(void *)uint64_t v149 = v73;
    }
    v73[2] = v76 + 1;
    uint64_t v77 = &v73[2 * v76];
    v77[4] = v69;
    v77[5] = v71;
    swift_endAccess();
    uint64_t v56 = (uint64_t)v151;
  }
  uint64_t v78 = v149;
  if (v64 > 5400.0)
  {
    id v79 = [self mainBundle];
    NSString v80 = String._bridgeToObjectiveC()();
    id v81 = [v79 localizedStringForKey:v80 value:0 table:0];

    uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = v83;

    swift_beginAccess();
    uint64_t v85 = *(void **)v78;
    char v86 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v78 = v85;
    if ((v86 & 1) == 0)
    {
      uint64_t v85 = sub_100084014(0, v85[2] + 1, 1, v85);
      *(void *)uint64_t v78 = v85;
    }
    unint64_t v88 = v85[2];
    unint64_t v87 = v85[3];
    if (v88 >= v87 >> 1)
    {
      uint64_t v85 = sub_100084014((void *)(v87 > 1), v88 + 1, 1, v85);
      *(void *)uint64_t v149 = v85;
    }
    v85[2] = v88 + 1;
    uint64_t v89 = &v85[2 * v88];
    v89[4] = v82;
    v89[5] = v84;
    swift_endAccess();
    uint64_t v56 = (uint64_t)v151;
    uint64_t v78 = v149;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)v78 + 16))
  {
    id v90 = [self mainBundle];
    NSString v91 = String._bridgeToObjectiveC()();
    id v92 = [v90 localizedStringForKey:v91 value:0 table:0];

    uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v95 = v94;

    swift_beginAccess();
    uint64_t v96 = *(void **)v78;
    char v97 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v78 = v96;
    if ((v97 & 1) == 0)
    {
      uint64_t v96 = sub_100084014(0, v96[2] + 1, 1, v96);
      *(void *)uint64_t v78 = v96;
    }
    unint64_t v99 = v96[2];
    unint64_t v98 = v96[3];
    if (v99 >= v98 >> 1)
    {
      uint64_t v96 = sub_100084014((void *)(v98 > 1), v99 + 1, 1, v96);
      *(void *)uint64_t v149 = v96;
    }
    v96[2] = v99 + 1;
    uint64_t v100 = &v96[2 * v99];
    v100[4] = v93;
    v100[5] = v95;
    uint64_t v101 = v149;
    swift_endAccess();
    uint64_t v102 = swift_bridgeObjectRetain();
    sub_1001E5134(v102);
    swift_bridgeObjectRelease();
    id v103 = objc_allocWithZone((Class)UISegmentedControl);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v105 = [v103 initWithItems:isa];

    *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl] = v105;
    uint64_t v56 = (uint64_t)v151;
    if (v105) {
      [v105 setSelectedSegmentIndex:*(void *)(*(void *)v101 + 16) - 1];
    }
  }
  else
  {
    *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl] = 0;
  }
  ((void (*)(uint64_t, char *, uint64_t))v61)(v56, v138, v13);
  uint64_t v106 = (uint64_t)v148;
  ((void (*)(char *, char *, uint64_t))v61)(v148, v137, v13);
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  uint64_t v107 = sub_10033A6D0(v56, v106, 0, 1, 0, 1, 1, 10.0, 90.0);
  uint64_t v108 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties;
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties] = v107;
  uint64_t v109 = (char *)v147;
  uint64_t v148 = v109;
  char v151 = (char *)v146;
  id v110 = v140;
  id v111 = [v140 dataCalculator];
  uint64_t v112 = *(void *)&v24[v108];
  type metadata accessor for WorkoutChartDataStore();
  swift_allocObject();
  uint64_t v113 = (char *)v110;
  uint64_t v149 = v113;
  id v114 = v139;
  swift_retain();
  sub_1005CFC00(v109, v150, v111, v114, v112, v113);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v116 = (uint64_t)v145;
  *__int16 v145 = KeyPath;
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  long long v117 = (int *)v143;
  uint64_t v118 = *(int *)(v143 + 20);
  id v119 = objc_allocWithZone((Class)UISelectionFeedbackGenerator);
  swift_retain();
  swift_retain();
  *(void *)(v116 + v118) = [v119 init];
  uint64_t v120 = v116 + v117[8];
  char v153 = 0;
  State.init(wrappedValue:)();
  uint64_t v121 = v155;
  *(unsigned char *)uint64_t v120 = v154;
  *(void *)(v120 + 8) = v121;
  uint64_t v122 = v116 + v117[9];
  char v153 = 0;
  State.init(wrappedValue:)();
  uint64_t v123 = v155;
  *(unsigned char *)uint64_t v122 = v154;
  *(void *)(v122 + 8) = v123;
  uint64_t v124 = (uint64_t *)(v116 + v117[7]);
  sub_1006B6B44(&qword_100965FA0, (void (*)(uint64_t))type metadata accessor for WorkoutChartDataStore);
  swift_retain();
  *uint64_t v124 = ObservedObject.init(wrappedValue:)();
  v124[1] = v125;
  uint64_t v126 = (uint64_t *)(v116 + v117[6]);
  sub_1006B6B44(&qword_100968D00, (void (*)(uint64_t))type metadata accessor for WorkoutChartProperties);
  uint64_t v127 = ObservedObject.init(wrappedValue:)();
  uint64_t v129 = v128;
  swift_release();
  *uint64_t v126 = v127;
  v126[1] = v129;
  sub_1006B6670(v116, v144);
  id v130 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100968D08));
  *(void *)&v24[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController] = UIHostingController.init(rootView:)();

  uint64_t v131 = (objc_class *)type metadata accessor for WorkoutDetailedMetricsViewController();
  v152.receiver = v24;
  v152.super_class = v131;
  id v132 = [super initWithNibName:0 bundle:0];
  swift_release();

  sub_1006B6828(v116);
  return v132;
}

void sub_1006B0960()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  id v66 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for WorkoutDetailedMetricsViewController();
  v70.receiver = v0;
  v70.super_class = v5;
  [super viewDidLoad];
  uint64_t v6 = &selRef_unavailable;
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v8 = v7;
  uint64_t v9 = self;
  id v10 = [v9 systemBackgroundColor];
  [v8 setBackgroundColor:v10];

  id v11 = [v2 navigationItem];
  id v12 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v2 action:"close"];
  [v11 setRightBarButtonItem:v12];

  id v13 = [v2 navigationItem];
  id v14 = [self mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  p_type = v17;

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setTitle:v18];

  __n128 v19 = &selRef_setModalPresentationStyle_;
  uint64_t v20 = &selRef__presentShareSheetWithTitle_image_workoutData_;
  if (v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_isRouteable] != 1)
  {
LABEL_19:
    *(void *)(*(void *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties]
              + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate
              + 8) = &off_1008D6440;
    swift_unknownObjectWeakAssign();
    sub_1006B2F00(0);
    uint64_t v44 = type metadata accessor for Date();
    uint64_t v45 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v66, 1, 1, v44);
    sub_1006B2528(v45);
    sub_10008DB18(v45, (uint64_t *)&unk_10095B890);
    uint64_t v46 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
    [v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView] setBackgroundColor:[v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView] backgroundColor]];
    id v47 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl];
    if (v47)
    {
      id v48 = v47;
      [v48 addTarget:v2 action:"durationChanged:" forControlEvents:4096];
      [v48 v19[213]];
      [*(id *)&v2[v46] v20[268] v48];
    }
    [*(id *)&v2[v46] v19[213] 0 v61];
    id v49 = [v2 v6[52]];
    if (v49)
    {
      uint64_t v50 = v49;
      [v49 v20[268]:v2[v46]];

      uint64_t v51 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController];
      id v52 = [v51 v6[52]];
      if (v52)
      {
        uint64_t v53 = v52;
        [v52 v19[213]];

        id v54 = [v51 v6[52]];
        if (v54)
        {
          id v55 = v54;
          id v56 = [v9 clearColor];
          [v55 setBackgroundColor:v56];

          id v57 = [v2 v6[52]];
          if (v57)
          {
            id v58 = v57;
            id v59 = [v51 v6[52]];
            if (v59)
            {
              id v60 = v59;
              [v58 v20[268] v59];

              [v2 addChildViewController:v51];
              [v51 didMoveToParentViewController:v2];
              sub_1006B1590();
              sub_1006B33A8();
              return;
            }
            goto LABEL_35;
          }
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v21 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  [*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView] setDelegate:v2];
  [*(id *)&v2[v21] _setEdgeInsets:12.0, 12.0, 60.0, 12.0];
  [*(id *)&v2[v21] setShowsScale:1];
  [*(id *)&v2[v21] setShowsCompass:0];
  [*(id *)&v2[v21] setShowsAttribution:0];
  [*(id *)&v2[v21] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v2[v21] setMapType:5];
  id v22 = [*(id *)&v2[v21] layer];
  [v22 setCornerRadius:12.0];

  uint64_t v64 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  [*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView] addSubview:*(void *)&v2[v21]];
  uint64_t v23 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  uint64_t v24 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100756B20;
  id v26 = v24;
  id v27 = [v9 blackColor];
  id v28 = [v27 colorWithAlphaComponent:0.0];

  *(void *)(inited + 32) = v28;
  uint64_t v65 = v9;
  id v29 = [v9 blackColor];
  id v30 = [v29 colorWithAlphaComponent:0.5];

  *(void *)(inited + 40) = v30;
  *(void *)&long long v67 = inited;
  specialized Array._endMutation()();
  unint64_t v31 = v67;
  id v63 = v26;
  p_type = (char **)[v26 layer];
  self;
  uint64_t v32 = (void *)swift_dynamicCastObjCClass();
  if (v32)
  {
    id v62 = v32;
    if (v31 >> 62) {
      goto LABEL_28;
    }
    uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      uint64_t v20 = &selRef__presentShareSheetWithTitle_image_workoutData_;
      __n128 v19 = &selRef_setModalPresentationStyle_;
      if (!v33) {
        break;
      }
      uint64_t v69 = _swiftEmptyArrayStorage;
      sub_1001C8EB4(0, v33 & ~(v33 >> 63), 0);
      if (v33 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      uint64_t v61 = p_type;
      uint64_t v6 = 0;
      id v34 = v69;
      p_type = &stru_100925FF0.type;
      while ((char **)v33 != v6)
      {
        if ((v31 & 0xC000000000000001) != 0) {
          id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v35 = *(id *)(v31 + 8 * (void)v6 + 32);
        }
        uint64_t v36 = v35;
        id v37 = [v35 CGColor:v61];
        type metadata accessor for CGColor(0);
        uint64_t v68 = v38;

        *(void *)&long long v67 = v37;
        uint64_t v69 = v34;
        unint64_t v40 = v34[2];
        unint64_t v39 = v34[3];
        if (v40 >= v39 >> 1)
        {
          sub_1001C8EB4(v39 > 1, v40 + 1, 1);
          id v34 = v69;
        }
        uint64_t v6 = (char **)((char *)v6 + 1);
        void v34[2] = v40 + 1;
        sub_10005C2B0(&v67, &v34[4 * v40 + 4]);
        if ((char **)v33 == v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = &selRef_unavailable;
          uint64_t v20 = &selRef__presentShareSheetWithTitle_image_workoutData_;
          __n128 v19 = &selRef_setModalPresentationStyle_;
          p_type = v61;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_18:
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v62 setColors:isa];

    id v42 = *(id *)&v2[v23];
    sub_1004CD508((uint64_t)&off_1008B71F8);

    [*(id *)&v2[v23] v19[213]];
    id v43 = [*(id *)&v2[v23] layer];
    [v43 setCornerRadius:12.0];

    [*(id *)&v2[v64] v20[268] *(void *)&v2[v23]];
    uint64_t v9 = v65;
    goto LABEL_19;
  }
LABEL_36:

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1006B12F0(char a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WorkoutDetailedMetricsViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  [v3 configureWithOpaqueBackground];
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = [v4 systemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = v5;
  id v8 = [v4 systemBackgroundColor];
  [v7 setShadowColor:v8];

  id v9 = [v1 navigationItem];
  [v9 setScrollEdgeAppearance:v7];

  id v10 = [v1 tabBarController];
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 tabBar];

    id v13 = [objc_allocWithZone((Class)UITabBarAppearance) init];
    [v12 setScrollEdgeAppearance:v13];
  }
}

void sub_1006B1590()
{
  uint64_t v1 = v0;
  id v2 = [self mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v141.origin.CGFloat x = v4;
  v141.origin.CGFloat y = v6;
  v141.size.CGFloat width = v8;
  v141.size.CGFloat height = v10;
  double Width = CGRectGetWidth(v141);
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100752650;
  uint64_t v13 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  id v14 = [*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView] topAnchor];
  id v15 = [v1 view];
  if (!v15)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v16 = v15;
  id v17 = [v15 safeAreaLayoutGuide];

  id v18 = [v17 topAnchor];
  id v19 = [v14 constraintEqualToAnchor:v18];

  *(void *)(v12 + 32) = v19;
  id v20 = [*(id *)&v1[v13] leadingAnchor];
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v22 = v21;
  id v23 = [v21 safeAreaLayoutGuide];

  id v24 = [v23 leadingAnchor];
  id v25 = [v20 constraintEqualToAnchor:v24 constant:16.0];

  *(void *)(v12 + 40) = v25;
  id v26 = [*(id *)&v1[v13] trailingAnchor];
  id v27 = [v1 view];
  if (!v27)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v28 = v27;
  double v29 = (Width + -32.0) * 0.7;
  id v30 = self;
  id v31 = [v28 safeAreaLayoutGuide];

  id v32 = [v31 trailingAnchor];
  id v33 = [v26 constraintEqualToAnchor:v32 constant:-16.0];

  *(void *)(v12 + 48) = v33;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 activateConstraints:isa];

  id v35 = [*(id *)&v1[v13] heightAnchor];
  id v36 = [v35 constraintEqualToConstant:0.0];

  id v37 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint];
  *(void *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = v36;

  if (v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_isRouteable] == 1)
  {
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100764D30;
    uint64_t v39 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
    id v40 = [*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView] topAnchor];
    id v41 = [*(id *)&v1[v13] topAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41];

    *(void *)(v38 + 32) = v42;
    id v43 = [*(id *)&v1[v39] leadingAnchor];
    id v44 = [*(id *)&v1[v13] leadingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    *(void *)(v38 + 40) = v45;
    id v46 = [*(id *)&v1[v39] trailingAnchor];
    id v47 = [*(id *)&v1[v13] trailingAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    *(void *)(v38 + 48) = v48;
    id v49 = [*(id *)&v1[v39] heightAnchor];
    id v50 = [v49 constraintEqualToConstant:v29];

    *(void *)(v38 + 56) = v50;
    uint64_t v51 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
    id v52 = [*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView] topAnchor];
    id v53 = [*(id *)&v1[v39] topAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    *(void *)(v38 + 64) = v54;
    id v55 = [*(id *)&v1[v51] leadingAnchor];
    id v56 = [*(id *)&v1[v39] leadingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    *(void *)(v38 + 72) = v57;
    id v58 = [*(id *)&v1[v51] trailingAnchor];
    id v59 = [*(id *)&v1[v39] trailingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    *(void *)(v38 + 80) = v60;
    id v61 = [*(id *)&v1[v51] bottomAnchor];
    id v62 = [*(id *)&v1[v39] bottomAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    *(void *)(v38 + 88) = v63;
    uint64_t v64 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView];
    id v65 = [v64 bottomAnchor];
    id v66 = [*(id *)&v1[v39] bottomAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66 constant:-6.0];

    *(void *)(v38 + 96) = v67;
    id v68 = [v64 leadingAnchor];
    id v69 = [*(id *)&v1[v13] leadingAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69 constant:16.0];

    *(void *)(v38 + 104) = v70;
    id v71 = [v64 trailingAnchor];
    id v72 = [*(id *)&v1[v13] trailingAnchor];
    id v73 = [v71 constraintEqualToAnchor:v72 constant:-16.0];

    *(void *)(v38 + 112) = v73;
  }
  else
  {
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100752650;
    uint64_t v64 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView];
    id v75 = [v64 topAnchor];
    id v76 = [*(id *)&v1[v13] topAnchor];
    id v77 = [v75 constraintEqualToAnchor:v76];

    *(void *)(v74 + 32) = v77;
    id v78 = [v64 leadingAnchor];
    id v79 = [*(id *)&v1[v13] leadingAnchor];
    id v80 = [v78 constraintEqualToAnchor:v79];

    *(void *)(v74 + 40) = v80;
    id v81 = [v64 trailingAnchor];
    id v82 = [*(id *)&v1[v13] trailingAnchor];
    id v83 = [v81 constraintEqualToAnchor:v82];

    *(void *)(v74 + 48) = v83;
  }
  specialized Array._endMutation()();
  Class v84 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v85 = v30;
  [v30 activateConstraints:v84];

  char v86 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl];
  if (v86)
  {
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_100751160;
    id v88 = v86;
    id v89 = [v88 topAnchor];
    id v90 = [v64 bottomAnchor];
    id v91 = [v89 constraintEqualToAnchor:v90 constant:22.0];

    uint64_t v92 = NSLayoutConstraint.priority(_:)();
    *(void *)(v87 + 32) = v92;
    id v93 = [v88 leadingAnchor];
    id v94 = [*(id *)&v1[v13] leadingAnchor];
    id v95 = [v93 constraintEqualToAnchor:v94];

    *(void *)(v87 + 40) = v95;
    id v96 = [v88 trailingAnchor];
    id v97 = [*(id *)&v1[v13] trailingAnchor];
    id v98 = [v96 constraintEqualToAnchor:v97];

    *(void *)(v87 + 48) = v98;
    id v99 = [v88 bottomAnchor];
    id v100 = [*(id *)&v1[v13] bottomAnchor];
    id v101 = [v99 constraintEqualToAnchor:v100];

    *(void *)(v87 + 56) = v101;
    uint64_t v85 = v30;
    specialized Array._endMutation()();
    v102.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v30 activateConstraints:v102.super.isa];
  }
  else
  {
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_100751040;
    id v104 = [*(id *)&v1[v13] bottomAnchor];
    id v105 = [v64 bottomAnchor];
    id v106 = [v104 constraintEqualToAnchor:v105];

    *(void *)(v103 + 32) = v106;
    specialized Array._endMutation()();
    v102.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v30 activateConstraints:v102.super.isa];
  }

  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_10075C680;
  uint64_t v108 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController];
  id v109 = [v108 view];
  if (!v109) {
    goto LABEL_24;
  }
  id v110 = v109;
  id v111 = [v109 topAnchor];

  id v112 = [*(id *)&v1[v13] bottomAnchor];
  id v113 = [v111 constraintEqualToAnchor:v112 constant:16.0];

  *(void *)(v107 + 32) = v113;
  id v114 = [v108 view];
  if (!v114)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v115 = v114;
  id v116 = [v114 leadingAnchor];

  id v117 = [v1 view];
  if (!v117)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v118 = v117;
  id v119 = [v117 leadingAnchor];

  id v120 = [v116 constraintEqualToAnchor:v119];
  *(void *)(v107 + 40) = v120;
  id v121 = [v108 view];
  if (!v121)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v122 = v121;
  id v123 = [v121 trailingAnchor];

  id v124 = [v1 view];
  if (!v124)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v125 = v124;
  id v126 = [v124 trailingAnchor];

  id v127 = [v123 constraintEqualToAnchor:v126];
  *(void *)(v107 + 48) = v127;
  id v128 = [v108 view];
  if (!v128)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v129 = v128;
  id v130 = [v128 bottomAnchor];

  id v131 = [v1 view];
  if (!v131)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v132 = v131;
  id v133 = [v131 bottomAnchor];

  id v134 = [v130 constraintEqualToAnchor:v133];
  *(void *)(v107 + 56) = v134;
  id v135 = [v108 view];
  if (!v135)
  {
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v136 = v135;
  id v137 = [v135 heightAnchor];

  id v138 = [v137 constraintGreaterThanOrEqualToConstant:v29];
  *(void *)(v107 + 64) = v138;
  specialized Array._endMutation()();
  Class v139 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v85 activateConstraints:v139];
}

void sub_1006B2528(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  CGFloat v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v41 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v41 - v15;
  sub_100005D34(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_10095B890);
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties);
    double v18 = *(double *)(v17 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    double v19 = *(double *)(v17 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
        * *(double *)(v17 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    if (v18 < v19 || v18 - v19 < 0.01)
    {
      uint64_t v38 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate, v7);
      sub_1006B2AAC((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      uint64_t v39 = *(void **)(v38 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
      NSString v40 = String._bridgeToObjectiveC()();
      [v39 setText:v40];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      sub_1006B2AAC((uint64_t)v14);
      uint64_t v42 = v20;
      uint64_t v22 = v21;
      id v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v14, v7);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Date.addingTimeInterval(_:)();
      v23(v11, v7);
      swift_release();
      sub_1006B2AAC((uint64_t)v14);
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      v23(v14, v7);
      id v28 = [self mainBundle];
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10074E640;
      *(void *)(v31 + 56) = &type metadata for String;
      unint64_t v32 = sub_1000AA64C();
      *(void *)(v31 + 32) = v42;
      *(void *)(v31 + 40) = v22;
      *(void *)(v31 + 96) = &type metadata for String;
      *(void *)(v31 + 104) = v32;
      *(void *)(v31 + 64) = v32;
      *(void *)(v31 + 72) = v25;
      *(void *)(v31 + 80) = v27;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      id v33 = *(void **)(*(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView)
                     + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
      NSString v34 = String._bridgeToObjectiveC()();
      [v33 setText:v34];
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    uint64_t v35 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
    sub_1006B2AAC((uint64_t)v16);
    id v36 = *(void **)(v35 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
    NSString v37 = String._bridgeToObjectiveC()();
    [v36 setText:v37];
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
  }
}

void sub_1006B2AAC(uint64_t a1)
{
  double v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  if (v3)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
    uint64_t v21 = sub_1006B6B18;
    uint64_t v22 = v4;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v5 = sub_1006B5C54;
    CGFloat v6 = &unk_1008D6668;
  }
  else
  {
    double v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
    uint64_t v21 = sub_1002B1858;
    uint64_t v22 = v4;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v5 = sub_1006AF6DC;
    CGFloat v6 = &unk_1008D6690;
  }
  double v19 = v5;
  uint64_t v20 = v6;
  uint64_t v7 = _Block_copy(&aBlock);
  id v8 = v3;
  swift_retain();
  swift_release();
  [v8 _enumerateActiveTimePeriods:v7];
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();

  uint64_t v10 = swift_release();
  __chkstk_darwin(v10);
  long long v16[2] = a1;
  double v11 = sub_1006AF414((void (*)(double *__return_ptr, double *, char *))sub_1006B6B20, 0.0, (uint64_t)v16, v9);
  swift_bridgeObjectRelease();
  double v12 = floor(v11);
  if (v12 < 3600.0) {
    uint64_t v13 = 3;
  }
  else {
    uint64_t v13 = 2;
  }
  id v14 = [*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager) fitnessUIFormattingManager];
  id v15 = [v14 stringWithDuration:v13 durationFormat:v12];

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006B2D68@<X0>(double *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = *a1;
  DateInterval.end.getter();
  uint64_t v9 = Date.compare(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if (v9 == 1)
  {
    uint64_t result = DateInterval.duration.getter();
    double v8 = v8 + v12;
  }
  else
  {
    DateInterval.start.getter();
    uint64_t v13 = Date.compare(_:)();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v7, v4);
    if (v13 == 1)
    {
      DateInterval.start.getter();
      Date.timeIntervalSince(_:)();
      double v15 = v14;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v7, v4);
      double v8 = v8 + v15;
    }
  }
  *a2 = v8;
  return result;
}

void sub_1006B2F00(void *a1)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance) != 1) {
    return;
  }
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 distanceType];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v5 statisticsForType:v6];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = a1;
        if (!a1) {
          id v10 = [v8 sumQuantity];
        }
        id v11 = a1;
        id v34 = [v5 fiui_activityType];

        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v7 = v5;
    }
  }
  id v10 = a1;
  if (!a1) {
    id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
  }
                                                                + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout), "totalDistance"));
  double v12 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
  id v13 = a1;
  id v34 = [v12 fiui_activityType];
  if (!v34)
  {

    __break(1u);
    goto LABEL_32;
  }
LABEL_14:
  if (v10)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    id v10 = v10;
    double v14 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
    id v15 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
    id v16 = [v14 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v15];

    if (v16)
    {
      uint64_t v17 = FIUIDistanceTypeForActivityType();
      uint64_t v35 = 1;
      uint64_t v18 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager;
      id v19 = [*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager) fitnessUIFormattingManager];
      id v20 = [self meterUnit];
      [v10 doubleValueForUnit:v20];
      double v22 = v21;

      id v23 = [v19 localizedNaturalScaleStringWithDistanceInMeters:v17 distanceType:0 unitStyle:&v35 usedUnit:v22];
      if (v23)
      {
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 0;
        uint64_t v26 = 0;
      }
      id v27 = [*(id *)(v2 + v18) fitnessUIFormattingManager];
      id v28 = [v27 localizedShortUnitStringForDistanceUnit:v35];

      if (v28)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1000A06D0();
        uint64_t v29 = StringProtocol.localizedUppercase.getter();
        uint64_t v31 = v30;
        swift_bridgeObjectRelease();
        if (v26) {
          uint64_t v32 = v24;
        }
        else {
          uint64_t v32 = 11565;
        }
        if (!v26) {
          uint64_t v26 = 0xE200000000000000;
        }
        id v33 = sub_10052463C(v32, v26, v29, v31, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        [*(id *)(*(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView)+ OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel) setAttributedText:v33];

        return;
      }
LABEL_32:

      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
  }
}

void sub_1006B33A8()
{
  uint64_t v5 = v0;
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings;
  id v7 = [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings) allValidLocations];
  sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_31;
    }
  }
  else if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_31;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    id v9 = *(id *)(v8 + 32);
  }
  id v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v2 = &selRef_setPercentMinimized_;
  [v10 coordinate];
  double v3 = v11;
  double v4 = v12;

  id v13 = [*(id *)(v0 + v6) allValidLocations];
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v8 >> 62))
  {
    unint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  unint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_8:
    unint64_t v15 = v14 - 1;
    if (__OFSUB__(v14, 1))
    {
      __break(1u);
    }
    else if ((v8 & 0xC000000000000001) == 0)
    {
      if ((v15 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v15 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v16 = *(id *)(v8 + 8 * v15 + 32);
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_38;
    }
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    [v17 v2[455]];
    double v19 = v18;
    double v21 = v20;

    id v40 = [objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()) init];
    [v40 setCoordinate:v3, v4];
    uint64_t v1 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
    [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView) addAnnotation:v40];
    if ([*(id *)(v0 + v6) count] == (id)1)
    {
      v42.latitude = v3;
      v42.longitude = v4;
      MKMapPoint v22 = MKMapPointForCoordinate(v42);
      id v23 = *(id *)(v0 + v1);
      [v23 setVisibleMapRect:v22.x, v22.y, 1500.0, 1500.0];

      id v24 = *(id *)(v0 + v1);
      [v24 setCenterCoordinate:v3, v4];
LABEL_41:

      return;
    }
    id v25 = [objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()) init];
    [v25 setCoordinate:v19, v21];
    uint64_t v39 = v25;
    [*(id *)(v0 + v1) addAnnotation:v25];
    id v26 = [*(id *)(v0 + v6) allValidLocations];
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v14 >> 62))
    {
      uint64_t v27 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v27)
      {
LABEL_17:
        uint64_t v38 = v1;
        sub_1001C932C(0, v27 & ~(v27 >> 63), 0);
        if (v27 < 0)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v27; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v29 = *(id *)(v14 + 8 * i + 32);
          }
          uint64_t v30 = v29;
          [v29 v2[455] v38];
          MKMapPoint v31 = MKMapPointForCoordinate(v43);

          unint64_t v33 = _swiftEmptyArrayStorage[2];
          unint64_t v32 = _swiftEmptyArrayStorage[3];
          if (v33 >= v32 >> 1) {
            sub_1001C932C(v32 > 1, v33 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v33 + 1;
          *(MKMapPoint *)&_swiftEmptyArrayStorage[2 * v33 + 4] = v31;
        }
        swift_bridgeObjectRelease();
        uint64_t v1 = v38;
        goto LABEL_40;
      }
LABEL_39:
      swift_bridgeObjectRelease();
LABEL_40:
      id v35 = [self polylineWithPoints:&_swiftEmptyArrayStorage[4] count:[*(id *)(v0 + v6) count]];
      swift_bridgeObjectRelease();
      id v36 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
      *(void *)(v0 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline) = v35;
      id v37 = v35;

      [*(id *)(v5 + v1) addOverlay:v37 level:1];
      id v24 = *(id *)(v5 + v1);
      [v37 boundingMapRect];
      [v24 setVisibleMapRect:1];

      goto LABEL_41;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_31:

  swift_bridgeObjectRelease();
}

uint64_t sub_1006B3930(void *a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v32 + 64);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  double v12 = (char *)&v32 - v11;
  id v13 = [a1 selectedSegmentIndex];
  uint64_t v14 = v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions;
  swift_beginAccess();
  if (v13 == (id)(*(void *)(*(void *)v14 + 16) - 1))
  {
    dispatch thunk of UIHostingController.rootView.getter();
    uint64_t v15 = *(void *)&v12[*(int *)(v6 + 24) + 8];
    swift_retain();
    sub_10033ABA8(1, 10.0, 90.0);
    swift_release();
    *(void *)(*(void *)&v12[*(int *)(v6 + 28) + 8]
              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v15;
    swift_retain();
    swift_release();
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    sub_1006B6670((uint64_t)v12, (uint64_t)v8);
    type metadata accessor for MainActor();
    uint64_t v17 = static MainActor.shared.getter();
    unint64_t v18 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    sub_1006B66D8((uint64_t)v8, v19 + v18);
    double v20 = &unk_100968CE8;
  }
  else
  {
    double v21 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v22 = v32;
    id v23 = [a1 selectedSegmentIndex];
    dispatch thunk of UIHostingController.rootView.getter();
    uint64_t v24 = *(void *)&v12[*(int *)(v6 + 24) + 8];
    swift_retain();
    if (v23)
    {
      sub_10033ABA8(0, 60.0, 60.0);
      swift_release();
      *(void *)(*(void *)&v12[*(int *)(v6 + 28) + 8]
                + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v24;
      swift_retain();
      swift_release();
      uint64_t v25 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 1, 1, v25);
      sub_1006B6670((uint64_t)v12, (uint64_t)v21);
      type metadata accessor for MainActor();
      uint64_t v26 = static MainActor.shared.getter();
      unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v26;
      *(void *)(v19 + 24) = &protocol witness table for MainActor;
      sub_1006B66D8((uint64_t)v21, v19 + v27);
      double v20 = &unk_100968CD8;
    }
    else
    {
      sub_10033ABA8(0, 15.0, 60.0);
      swift_release();
      *(void *)(*(void *)&v12[*(int *)(v6 + 28) + 8]
                + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v24;
      swift_retain();
      swift_release();
      uint64_t v28 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v5, 1, 1, v28);
      sub_1006B6670((uint64_t)v12, (uint64_t)v21);
      type metadata accessor for MainActor();
      uint64_t v29 = static MainActor.shared.getter();
      unint64_t v30 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v29;
      *(void *)(v19 + 24) = &protocol witness table for MainActor;
      sub_1006B66D8((uint64_t)v21, v19 + v30);
      double v20 = &unk_100968CE0;
    }
  }
  sub_1000713D0((uint64_t)v5, (uint64_t)v20, v19);
  swift_release();
  return sub_1006B6828((uint64_t)v12);
}

id sub_1006B3EC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailedMetricsViewController();
  return [super dealloc];
}

uint64_t sub_1006B40E0()
{
  return type metadata accessor for WorkoutDetailedMetricsViewController();
}

uint64_t type metadata accessor for WorkoutDetailedMetricsViewController()
{
  uint64_t result = qword_100968C58;
  if (!qword_100968C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1006B4134()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1000E383C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1006B4328(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v49 - v14;
  sub_100005D34(a1, (uint64_t)&v49 - v14);
  uint64_t v16 = (uint64_t)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_selectedDate];
  swift_beginAccess();
  sub_1000E37D4((uint64_t)v15, v16);
  swift_endAccess();
  [*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback] selectionChanged];
  sub_100005D34(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) != 1)
  {
    id v50 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v50(v9, v13, v3);
    id v23 = v9;
    uint64_t v24 = *(void (**)(char *))(v4 + 16);
    uint64_t v25 = v23;
    v24(v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
    sub_1006B2528((uint64_t)v15);
    sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
    if (v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance] == 1)
    {
      id v49 = *(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue];
      [v49 cancelAllOperations];
      ((void (*)(char *, char *, uint64_t))v24)(v7, v25, v3);
      unint64_t v26 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v1;
      v50((char *)(v27 + v26), v7, v3);
      aBlock[4] = sub_1006B59C0;
      aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      aBlock[3] = &unk_1008D6488;
      uint64_t v28 = _Block_copy(aBlock);
      uint64_t v29 = v1;
      swift_release();
      [v49 addOperationWithBlock:v28];
      _Block_release(v28);
      double v30 = *(double *)(*(void *)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties]
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration)
          * 0.5;
      id v31 = *(id *)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings];
      id v32 = sub_1006D3FD4(v30);

      if (v32)
      {
        [v32 coordinate];
        double v34 = v33;
        double v36 = v35;

        uint64_t v37 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
        uint64_t v38 = *(void **)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
        if (v38)
        {
          [v38 setCoordinate:v34, v36];
          return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v25, v3);
        }
        id v44 = (objc_class *)type metadata accessor for WorkoutScrubbedLocationAnnotation();
        id v45 = (char *)objc_allocWithZone(v44);
        id v46 = (double *)&v45[OBJC_IVAR____TtC10FitnessApp33WorkoutScrubbedLocationAnnotation_coordinate];
        double *v46 = v34;
        v46[1] = v36;
        v51.receiver = v45;
        v51.super_class = v44;
        id v47 = [super init];
        id v48 = *(void **)&v29[v37];
        *(void *)&v29[v37] = v47;
        id v43 = v47;

        [*(id *)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView] addAnnotation:v43];
      }
      else
      {
        uint64_t v39 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
        id v40 = *(void **)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
        if (!v40) {
          return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v25, v3);
        }
        uint64_t v41 = *(void **)&v29[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView];
        id v42 = v40;
        [v41 removeAnnotation:v42];
        id v43 = *(id *)&v29[v39];
        *(void *)&v29[v39] = 0;
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v25, v3);
  }
  sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
  uint64_t v17 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
  unint64_t v18 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
  if (v18)
  {
    uint64_t v19 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView];
    id v20 = v18;
    [v19 removeAnnotation:v20];
    double v21 = *(void **)&v1[v17];
    *(void *)&v1[v17] = 0;
  }
  sub_1006B2F00(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, 1, 1, v3);
  sub_1006B2528((uint64_t)v15);
  return sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10095B890);
}

void sub_1006B48A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_dataCalculator);
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
  id v18 = *(id *)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  id v9 = v7;
  id v10 = v8;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1006B5B28;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100259288;
  aBlock[3] = &unk_1008D6500;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  uint64_t v16 = v18;
  [v9 totalDistanceForWorkout:v10 workoutActivity:v18 atDate:isa completion:v15];
  _Block_release(v15);
}

void sub_1006B4AE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v45 = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v47 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v48 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  id v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    if (a2)
    {
      uint64_t v43 = v7;
      uint64_t v44 = v6;
      swift_errorRetain();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      id v18 = HKLogWorkouts;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
      if (os_log_type_enabled(v18, v17))
      {
        swift_errorRetain();
        swift_errorRetain();
        os_log_t v42 = v18;
        uint64_t v19 = swift_slowAlloc();
        uint64_t v41 = (void **)swift_slowAlloc();
        long long aBlock = v41;
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v20 = Date.debugDescription.getter();
        uint64_t v49 = sub_10008F1F4(v20, v21, (uint64_t *)&aBlock);
        int v40 = v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
        *(_WORD *)(v19 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v22 = Error.localizedDescription.getter();
        uint64_t v49 = sub_10008F1F4(v22, v23, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v24 = v42;
        _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v40, "Error receiving distance for %s: %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
      }
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v25 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v16;
      id v54 = sub_1006B5C4C;
      uint64_t v55 = v26;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v51 = 1107296256;
      id v52 = sub_100070394;
      id v53 = &unk_1008D65A0;
      uint64_t v27 = _Block_copy(&aBlock);
      id v28 = v16;
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1006B6B44((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      uint64_t v29 = v47;
      uint64_t v6 = v44;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v27);

      swift_errorRelease();
      uint64_t v7 = v43;
      (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v29, v6);
      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v10, v48);
    }
    double v30 = v45;
    if (v45)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v31 = v7;
      id v32 = v30;
      double v33 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v16;
      *(void *)(v34 + 24) = v32;
      id v54 = sub_1006B5BEC;
      uint64_t v55 = v34;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v51 = 1107296256;
      id v52 = sub_100070394;
      id v53 = &unk_1008D6550;
      double v35 = _Block_copy(&aBlock);
      id v36 = v16;
      id v37 = v32;
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1006B6B44((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      uint64_t v38 = v47;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v35);

      (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v38, v6);
      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v10, v48);
    }
    else
    {
    }
  }
}

void sub_1006B5214(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
  id v2 = objc_allocWithZone((Class)NSAttributedString);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 initWithString:v3];

  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel) setAttributedText:v4];
}

void sub_1006B52B8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self sharedApplication];
  id v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView), "urlForMapAttribution"));
  if (v9)
  {
    id v10 = v9;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
    {
      URL._bridgeToObjectiveC()(v11);
      uint64_t v13 = v12;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1006B6B44((unint64_t *)&qword_10094B970, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 openURL:v13 options:isa completionHandler:0];

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  __break(1u);
}

uint64_t sub_1006B5554(void *a1)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings);
  *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings) = a1;
  id v14 = a1;

  uint64_t v15 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  id v16 = *(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView);
  Class isa = (Class)[v16 annotations];
  if (!isa)
  {
    sub_1000AFA94(&qword_100957EC8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v16 removeAnnotations:isa];

  id v18 = *(id *)(v1 + v15);
  Class v19 = (Class)[v18 overlays];
  if (!v19)
  {
    sub_1000AFA94((uint64_t *)&unk_100957ED0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v19 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v18 removeOverlays:v19];

  sub_1006B33A8();
  uint64_t v20 = v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_selectedDate;
  swift_beginAccess();
  sub_100005D34(v20, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  sub_1006B4328((uint64_t)v5);
  sub_10008DB18((uint64_t)v5, (uint64_t *)&unk_10095B890);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1006B58F4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1006B59C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1006B48A4(v2, v3);
}

uint64_t sub_1006B5A24()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006B5A5C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1006B5B28(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1006B4AE0(a1, a2, v6, v7);
}

uint64_t sub_1006B5BAC()
{
  return swift_deallocObject();
}

void sub_1006B5BEC()
{
  sub_1006B2F00(*(void **)(v0 + 24));
}

uint64_t sub_1006B5C14()
{
  return swift_deallocObject();
}

void sub_1006B5C4C()
{
  sub_1006B5214(*(void *)(v0 + 16));
}

uint64_t sub_1006B5C54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void (**)(char *, char *))(a1 + 32);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v9(v8, v6);
  swift_release();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

uint64_t sub_1006B5D9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1006B5E18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  static Published.subscript.setter();
  sub_100338F54();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

void sub_1006B5F8C()
{
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity] = 0;
  uint64_t v1 = &v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_selectedDate];
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = 0;
  uint64_t v4 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)MKMapView) init];
  uint64_t v5 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  type metadata accessor for WorkoutGradientView();
  *(void *)&v0[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline] = 0;
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions] = _swiftEmptyArrayStorage;
  uint64_t v7 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView;
  id v8 = [objc_allocWithZone((Class)type metadata accessor for WorkoutChartHeaderView()) init];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v7] = v8;
  uint64_t v9 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue;
  id v10 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v10 setQualityOfService:25];
  [v10 setMaxConcurrentOperationCount:1];

  *(void *)&v0[v9] = v10;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1006B6190(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v36 - v8;
  __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v36 - v10;
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout), "metadata", v13));
  uint64_t v43 = v12;
  uint64_t v44 = v11;
  os_log_t v42 = v15;
  if (!v16)
  {
    uint64_t v18 = a1;
    long long v47 = 0u;
    long long v48 = 0u;
    goto LABEL_9;
  }
  os_log_type_t v17 = v16;
  uint64_t v18 = a1;
  uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v19 + 16) || (unint64_t v22 = sub_1000DA1C0(v20, v21), (v23 & 1) == 0))
  {
    long long v47 = 0u;
    long long v48 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v48 + 1))
  {
LABEL_9:
    sub_10008DB18((uint64_t)&v47, &qword_100955A00);
    goto LABEL_10;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    unsigned int v37 = 0;
    goto LABEL_11;
  }
  id v24 = v45;
  unsigned int v37 = [v45 BOOLValue];

LABEL_11:
  uint64_t v25 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  id v36 = v25;
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Date.addingTimeInterval(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  swift_release();
  uint64_t v26 = v42;
  DateInterval.init(start:end:)();
  uint64_t v27 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_downhillRunDateIntervals);
  id v28 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutChartedDistancePathRenderer());
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
  *(void *)&v28[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals] = 0;
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(&v28[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval], v26, v44);
  *(void *)&v28[v29] = v27;
  swift_bridgeObjectRetain();
  id v32 = v28;
  swift_bridgeObjectRelease();
  v32[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode] = v37;

  *(void *)&v32[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = v36;
  double v33 = (objc_class *)type metadata accessor for WorkoutOverlayPathRenderer();
  v46.receiver = v32;
  v46.super_class = v33;
  [super initWithOverlay:v18];
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v30);
  return v34;
}

uint64_t sub_1006B6670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartGroupView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006B66D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartGroupView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006B673C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_10062F394(a1, v5, v6, v7);
}

uint64_t sub_1006B6828(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutChartGroupView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006B6888(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005DB5C;
  return sub_10062F394(a1, v5, v6, v7);
}

uint64_t sub_1006B6978()
{
  uint64_t v1 = type metadata accessor for WorkoutChartGroupView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006B6AE0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006B6B18(uint64_t a1, uint64_t a2)
{
  return sub_1006CBB70(a1, a2, v2);
}

uint64_t sub_1006B6B20@<X0>(double *a1@<X0>, double *a2@<X8>)
{
  return sub_1006B2D68(a1, a2);
}

uint64_t sub_1006B6B44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1006B6B9C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_nextMoveMode] = a1;
  *(void *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType] = a2;
  *(void *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_healthStore] = a3;
  *(void *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_formattingManager] = a4;
  id v7 = a3;
  id v8 = a4;
  sub_1006B7410(a2);
  sub_1006B7758(a2);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MoveModeChangePromptViewController();
  id v11 = [super initWithTitle:v9 detailText:v10 icon:0 contentLayout:2];

  return v11;
}

void sub_1006B6D10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094C820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v24 - v6;
  id v8 = (objc_class *)type metadata accessor for MoveModeChangePromptViewController();
  v24.receiver = v0;
  v24.super_class = v8;
  [super viewDidLoad];
  id v9 = [v0 view];
  if (v9)
  {
    NSString v10 = v9;
    id v11 = self;
    id v12 = [v11 secondarySystemGroupedBackgroundColor];
    [v10 setBackgroundColor:v12];

    id v13 = [self boldButton];
    [v13 addTarget:v1 action:"didTapAcceptButton" forControlEvents:64];
    unint64_t v14 = *(void *)&v1[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType];
    sub_1006B7AA0(v14);
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 setTitle:v15 forState:0];

    id v16 = v13;
    UIButton.configuration.getter();
    uint64_t v17 = type metadata accessor for UIButton.Configuration();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17))
    {
      sub_10019B930((uint64_t)v7, (uint64_t)v4);
      UIButton.configuration.setter();

      sub_10019B998((uint64_t)v7);
    }
    else
    {
      id v18 = [v11 blackColor];
      UIButton.Configuration.baseForegroundColor.setter();
      UIButton.configuration.setter();
    }
    id v19 = [v1 buttonTray];
    [v19 addButton:v16];

    sub_1006B7D60(v14);
    if (v20)
    {
      id v21 = [self linkButton];
      [v21 addTarget:v1 action:"didTapSkipButton" forControlEvents:64];
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 setTitle:v22 forState:0];

      id v23 = [v1 buttonTray];
      [v23 addButton:v21];
    }
    [v1 setModalInPresentation:1];
  }
  else
  {
    __break(1u);
  }
}

id sub_1006B70AC()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType];
  if (v1 > 6)
  {
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    NSString v10 = (void *)HKLogActivity;
    os_log_type_t v4 = v9;
    if (os_log_type_enabled(HKLogActivity, v9))
    {
      id v11 = v0;
      uint64_t v6 = v10;
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v7 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v8 = "MoveModeChangePromptViewController attempted to handle accept button for unknown notification type: %ld";
      goto LABEL_9;
    }
  }
  else if (((1 << v1) & 0x71) != 0)
  {
    os_log_type_t v2 = static os_log_type_t.fault.getter();
    uint64_t v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      uint64_t v5 = v0;
      uint64_t v6 = v3;
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v7 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v8 = "MoveModeChangePromptViewController attempted to handle accept button for unexpected notification type: %ld";
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v6, v4, v8, v7, 0xCu);
      swift_slowDealloc();
    }
  }
  else if (((1 << v1) & 6) != 0)
  {
    [self saveActivityMoveModeAndDefaultGoalSamplesForActivityMoveMode:*(void *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_nextMoveMode] healthStore:*(void *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_healthStore] formattingManager:*(void *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_formattingManager]];
  }
  return [v0 dismissViewControllerAnimated:1 completion:0];
}

id sub_1006B736C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MoveModeChangePromptViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for MoveModeChangePromptViewController()
{
  return self;
}

uint64_t sub_1006B7410(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      os_log_type_t v1 = static os_log_type_t.fault.getter();
      objc_super v2 = (void *)HKLogActivity;
      os_log_type_t v3 = v1;
      uint64_t v4 = 0xD000000000000028;
      if (os_log_type_enabled(HKLogActivity, v1))
      {
        uint64_t v5 = v2;
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v7 = "MoveModeChangePromptViewController attempted to localize title for unexpected notification type: %ld";
        goto LABEL_6;
      }
      break;
    case 1:
    case 2:
    case 3:
      id v10 = [self mainBundle];
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      uint64_t v4 = 0xD000000000000025;
      os_log_type_t v8 = static os_log_type_t.fault.getter();
      os_log_type_t v9 = (void *)HKLogActivity;
      os_log_type_t v3 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        uint64_t v5 = v9;
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v7 = "MoveModeChangePromptViewController attempted to localize title for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v5, v3, v7, v6, 0xCu);
        swift_slowDealloc();
      }
      break;
  }
  return v4;
}

uint64_t sub_1006B7758(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      os_log_type_t v1 = static os_log_type_t.fault.getter();
      objc_super v2 = (void *)HKLogActivity;
      os_log_type_t v3 = v1;
      uint64_t v4 = 0xD00000000000002ELL;
      if (os_log_type_enabled(HKLogActivity, v1))
      {
        uint64_t v5 = v2;
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v7 = "MoveModeChangePromptViewController attempted to localize description for unexpected notification type: %ld";
        goto LABEL_6;
      }
      break;
    case 1:
    case 2:
    case 3:
      id v10 = [self mainBundle];
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      uint64_t v4 = 0xD00000000000002BLL;
      os_log_type_t v8 = static os_log_type_t.fault.getter();
      os_log_type_t v9 = (void *)HKLogActivity;
      os_log_type_t v3 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        uint64_t v5 = v9;
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v7 = "MoveModeChangePromptViewController attempted to localize description for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v5, v3, v7, v6, 0xCu);
        swift_slowDealloc();
      }
      break;
  }
  return v4;
}

uint64_t sub_1006B7AA0(unint64_t a1)
{
  if (a1 > 6)
  {
    uint64_t v4 = 0xD000000000000033;
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    id v12 = (void *)HKLogActivity;
    os_log_type_t v3 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      uint64_t v5 = v12;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v7 = "MoveModeChangePromptViewController attempted to localize accept button title for unknown notification type: %ld";
      goto LABEL_8;
    }
  }
  else if (((1 << a1) & 0x71) != 0)
  {
    os_log_type_t v1 = static os_log_type_t.fault.getter();
    objc_super v2 = (void *)HKLogActivity;
    os_log_type_t v3 = v1;
    uint64_t v4 = 0xD000000000000036;
    if (os_log_type_enabled(HKLogActivity, v1))
    {
      uint64_t v5 = v2;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v7 = "MoveModeChangePromptViewController attempted to localize accept button title for unexpected notification type: %ld";
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v5, v3, v7, v6, 0xCu);
      swift_slowDealloc();
    }
  }
  else
  {
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v4;
}

uint64_t sub_1006B7D60(uint64_t a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      os_log_type_t v2 = static os_log_type_t.fault.getter();
      os_log_type_t v3 = (void *)HKLogActivity;
      os_log_type_t v4 = v2;
      if (!os_log_type_enabled(HKLogActivity, v2)) {
        goto LABEL_7;
      }
      uint64_t v5 = v3;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v7 = "MoveModeChangePromptViewController attempted to localize skip button title for unexpected notification type: %ld";
      goto LABEL_6;
    case 1:
    case 2:
      id v10 = [self mainBundle];
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    case 3:
      return v1;
    default:
      os_log_type_t v8 = static os_log_type_t.fault.getter();
      NSString v9 = (void *)HKLogActivity;
      os_log_type_t v4 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        uint64_t v5 = v9;
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v7 = "MoveModeChangePromptViewController attempted to localize skip button title for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v5, v4, v7, v6, 0xCu);
        swift_slowDealloc();
      }
LABEL_7:
      uint64_t v1 = 0;
      break;
  }
  return v1;
}

uint64_t sub_1006B8008(double a1, double a2, double a3)
{
  *(void *)(v4 + 48) = v3;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  *(double *)(v4 + 24) = a1;
  return _swift_task_switch(sub_1006B8030, 0, 0);
}

uint64_t sub_1006B8030()
{
  double v2 = v0[4];
  double v1 = v0[5];
  double v3 = v0[3];
  id v4 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithBundleIdentifier:v5];
  *((void *)v0 + 7) = v6;

  id v7 = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:v3 scale:v2];
  *((void *)v0 + 8) = v7;
  os_log_type_t v8 = (double *)swift_task_alloc();
  *((void *)v0 + 9) = v8;
  *((void *)v8 + 2) = v6;
  *((void *)v8 + 3) = v7;
  v8[4] = v1;
  NSString v9 = (void *)swift_task_alloc();
  *((void *)v0 + 10) = v9;
  uint64_t v10 = sub_1000AFA94(&qword_1009547D8);
  void *v9 = v0;
  v9[1] = sub_1006B81D0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000019, 0x80000001007D5F30, sub_1006B8AD8, v8, v10);
}

uint64_t sub_1006B81D0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    double v2 = sub_1006B8358;
  }
  else
  {
    swift_task_dealloc();
    double v2 = sub_1006B82EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006B82EC()
{
  uint64_t v1 = *(void **)(v0 + 64);

  uint64_t v2 = *(void *)(v0 + 16);
  double v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1006B8358()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1006B83CC(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10095FE68);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(double *)(v13 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1006B8B78;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1006B866C;
  aBlock[3] = &unk_1008D6710;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  [a2 getCGImageForImageDescriptor:a3 completion:v14];
  _Block_release(v14);
}

void sub_1006B858C(void *a1, double a2)
{
  if (a1)
  {
    id v4 = objc_allocWithZone((Class)UIImage);
    id v5 = a1;
    id v6 = [v4 initWithCGImage:v5 scale:0 orientation:a2];
    sub_1000AFA94(&qword_10095FE68);
    CheckedContinuation.resume(returning:)();
  }
  else
  {
    sub_1006B8BF0();
    swift_allocError();
    sub_1000AFA94(&qword_10095FE68);
    CheckedContinuation.resume(throwing:)();
  }
}

void sub_1006B866C(uint64_t a1, void *a2)
{
  double v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1006B86D8(double a1, double a2, double a3)
{
  long long v8 = v3[1];
  *(_OWORD *)(v4 + 16) = *v3;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v3[2];
  *(_OWORD *)(v4 + 57) = *(_OWORD *)((char *)v3 + 41);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 80) = v9;
  *(void *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = sub_1006B87C0;
  *(void *)(v9 + 48) = v4 + 16;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(double *)(v9 + 24) = a1;
  return _swift_task_switch(sub_1006B8030, 0, 0);
}

uint64_t sub_1006B87C0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

Swift::Int sub_1006B88C0()
{
  return Hasher._finalize()();
}

uint64_t sub_1006B8948()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1006B89CC()
{
  return Hasher._finalize()();
}

uint64_t sub_1006B8A50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

unint64_t sub_1006B8A84()
{
  unint64_t result = qword_100968D58;
  if (!qword_100968D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968D58);
  }
  return result;
}

void sub_1006B8AD8(uint64_t a1)
{
  sub_1006B83CC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1006B8AE4()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095FE68);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1006B8B78(void *a1)
{
  sub_1000AFA94(&qword_10095FE68);
  double v3 = *(double *)(v1 + 16);

  sub_1006B858C(a1, v3);
}

unint64_t sub_1006B8BF0()
{
  unint64_t result = qword_100968D70;
  if (!qword_100968D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968D70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecentWorkoutAppRecommendation.RecentWorkoutAppError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006B8CE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentWorkoutAppRecommendation.RecentWorkoutAppError()
{
  return &type metadata for RecentWorkoutAppRecommendation.RecentWorkoutAppError;
}

uint64_t initializeWithCopy for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t assignWithTake for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for RecentWorkoutAppRecommendation()
{
  return &type metadata for RecentWorkoutAppRecommendation;
}

unint64_t sub_1006B8E9C()
{
  unint64_t result = qword_100968D78;
  if (!qword_100968D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100968D78);
  }
  return result;
}

uint64_t *sub_1006B8EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TrendListMetric();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000AFA94(&qword_10095BFB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      uint64_t v12 = *(int *)(v7 + 28);
      uint64_t v26 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for AttributedString();
      NSString v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v26, v13, v14);
      uint64_t v16 = *(int *)(v7 + 32);
      uint64_t v17 = (uint64_t *)((char *)a1 + v16);
      id v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v20(a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    NSString v22 = (char *)a1 + v21;
    id v23 = (char *)a2 + v21;
    int v24 = v23[8];
    *(void *)NSString v22 = *(void *)v23;
    if (v24 == 255)
    {
      v22[8] = v23[8];
    }
    else
    {
      v22[8] = v24;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1006B9110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendListMetric();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + *(int *)(v4 + 28);
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 8) != 255)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1006B9210(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000AFA94(&qword_10095BFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v9 = a2[2];
    a1[1] = a2[1];
    a1[2] = v9;
    uint64_t v10 = *(int *)(v6 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for AttributedString();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = *(int *)(v6 + 32);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v19(a1, 0, 1, v6);
  }
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (char *)a1 + v20;
  NSString v22 = (char *)a2 + v20;
  int v23 = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  if (v23 == 255)
  {
    v21[8] = v22[8];
  }
  else
  {
    v21[8] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006B93E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v11 = *(int *)(v6 + 28);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = type metadata accessor for AttributedString();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      uint64_t v16 = *(int *)(v6 + 32);
      uint64_t v17 = (void *)(a1 + v16);
      uint64_t v18 = (void *)(a2 + v16);
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      uint64_t v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain();
      v19(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1006BC2B8(a1, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
LABEL_6:
    uint64_t v20 = sub_1000AFA94(&qword_10095BFB0);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v6 + 28);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = *(int *)(v6 + 32);
  id v32 = (void *)(a1 + v31);
  double v33 = (void *)(a2 + v31);
  *id v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  int v23 = (uint64_t *)(a2 + v21);
  int v24 = *(unsigned __int8 *)(a1 + v21 + 8);
  int v25 = *((unsigned __int8 *)v23 + 8);
  if (v24 == 255)
  {
    if (v25 == 255)
    {
      uint64_t v34 = *v23;
      *(unsigned char *)(v22 + 8) = *((unsigned char *)v23 + 8);
      *(void *)uint64_t v22 = v34;
    }
    else
    {
      *(void *)uint64_t v22 = *v23;
      *(unsigned char *)(v22 + 8) = v25;
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 255)
  {
    sub_1006B9708(v22);
    char v26 = *((unsigned char *)v23 + 8);
    *(void *)uint64_t v22 = *v23;
    *(unsigned char *)(v22 + 8) = v26;
  }
  else
  {
    *(void *)uint64_t v22 = *v23;
    *(unsigned char *)(v22 + 8) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1006B9708(uint64_t a1)
{
  return a1;
}

_WORD *sub_1006B975C(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000AFA94(&qword_10095BFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
    uint64_t v9 = *(int *)(v6 + 28);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
    (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

void *sub_1006B98E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v11 = *(int *)(v6 + 28);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1006BC2B8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
LABEL_6:
    uint64_t v15 = sub_1000AFA94(&qword_10095BFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v21 = a2[2];
  a1[1] = a2[1];
  a1[2] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(v6 + 28);
  int v23 = (char *)a1 + v22;
  int v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = *(int *)(v6 + 32);
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (uint64_t)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  if (*((unsigned __int8 *)a1 + v16 + 8) == 255)
  {
LABEL_11:
    *(void *)uint64_t v17 = *(void *)v18;
    *(unsigned char *)(v17 + 8) = v18[8];
    return a1;
  }
  int v19 = v18[8];
  if (v19 == 255)
  {
    sub_1006B9708(v17);
    goto LABEL_11;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006B9B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006B9B70);
}

uint64_t sub_1006B9B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10095BFB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 <= 3) {
      return 0;
    }
    else {
      return v10 ^ 0xFF;
    }
  }
}

uint64_t sub_1006B9C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006B9C48);
}

uint64_t sub_1006B9C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10095BFB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t type metadata accessor for TrendsActionContext(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100968DD8);
}

void sub_1006B9D2C()
{
  sub_1000E9754(319, (unint64_t *)&qword_1009543C8, (uint64_t (*)(uint64_t))type metadata accessor for TrendListMetric, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1006B9DF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    unsigned int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for TrendsCard();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    sub_100091494(*(void *)v16, v18, v19);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    uint64_t v20 = v13[9];
    uint64_t v21 = &v10[v20];
    uint64_t v22 = &v11[v20];
    uint64_t v23 = *(void *)v22;
    LOBYTE(v22) = v22[8];
    *(void *)uint64_t v21 = v23;
    v21[8] = (char)v22;
    uint64_t v24 = a3[6];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 24);
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 4);
      *((void *)v25 + 3) = v27;
      *((void *)v25 + 4) = v28;
      (**(void (***)(char *, char *, uint64_t))(v27 - 8))(v25, v26, v27);
    }
    else
    {
      long long v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((void *)v25 + 4) = *((void *)v26 + 4);
    }
    uint64_t v30 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v30) = *(uint64_t *)((char *)a2 + v30);
  }
  swift_retain();
  return a1;
}

char *sub_1006BA054(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  unsigned int v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for TrendsCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  uint64_t v16 = v12[9];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *(void *)&a1[v20] = *(void *)&a2[v20];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *sub_1006BA200(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  unsigned int v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for TrendsCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  char v16 = v15[16];
  uint64_t v17 = *(void *)v14;
  uint64_t v18 = *((void *)v14 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  char v19 = v14[16];
  v14[16] = v16;
  sub_1000917F8(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  uint64_t v20 = v12[9];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  uint64_t v23 = *(void *)v22;
  LOBYTE(v22) = v22[8];
  *(void *)uint64_t v21 = v23;
  v21[8] = (char)v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[6];
  uint64_t v25 = &a1[v24];
  if (*(void *)&a1[v24 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v24]);
  }
  long long v26 = *(_OWORD *)&a2[v24 + 16];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)&a2[v24];
  *((_OWORD *)v25 + 1) = v26;
  *((void *)v25 + 4) = *(void *)&a2[v24 + 32];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

uint64_t sub_1006BA3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TrendsCard();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1006BA520(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for TrendsCard();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1006BA638(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for TrendListMetric();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BA6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v70 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  unint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_1009542D0);
  uint64_t v5 = __chkstk_darwin(v75);
  uint64_t v67 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v69 = (char *)&v57 - v7;
  uint64_t v74 = sub_1000AFA94(&qword_100968FB0);
  __chkstk_darwin(v74);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrendsCardView(0);
  uint64_t v61 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v63 = v11;
  uint64_t v66 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for VerticalLayoutTrendView();
  __chkstk_darwin(v59);
  uint64_t v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_1000AFA94(&qword_100968F58);
  __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100968FB8);
  uint64_t v72 = *(void *)(v15 - 8);
  uint64_t v73 = v15;
  __chkstk_darwin(v15);
  id v62 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TrendListMetric();
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v58 + 64);
  uint64_t v19 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = sub_1000AFA94(&qword_100968F50);
  __chkstk_darwin(v23);
  id v71 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(int *)(v10 + 20);
  uint64_t v60 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = type metadata accessor for TrendsCard();
  uint64_t v28 = v26 + *(int *)(v27 + 36);
  if (*(unsigned __int8 *)(v28 + 8) - 1 > 1)
  {
    ProgressView<>.init<>()();
    uint64_t v48 = static Alignment.center.getter();
    uint64_t v49 = v67;
    double v51 = sub_1004DD0F0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v67, 0.0, 1, INFINITY, 0, v48, v50);
    (*(void (**)(char *, uint64_t, double))(v68 + 8))(v4, v70, v51);
    id v52 = &qword_1009542D0;
    uint64_t v53 = v49;
    uint64_t v54 = (uint64_t)v69;
    sub_1000AEEC8(v53, (uint64_t)v69, &qword_1009542D0);
    sub_1000AEF2C(v54, (uint64_t)v9, &qword_1009542D0);
    swift_storeEnumTagMultiPayload();
    sub_100014A54();
    sub_1000E2118();
    _ConditionalContent<>.init(storage:)();
    uint64_t v55 = v54;
  }
  else
  {
    id v69 = v9;
    uint64_t v70 = v23;
    uint64_t v29 = *(void *)v28;
    if (*(void *)(v29 + 16))
    {
      uint64_t v30 = v27;
      uint64_t v31 = *(unsigned __int8 *)(v58 + 80);
      id v57 = v22;
      sub_1000EA4B0(v29 + ((v31 + 32) & ~v31), (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_1000EA4B0((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      uint64_t v78 = v30;
      id v79 = &off_1008D1370;
      id v32 = sub_1000B1710((uint64_t *)&v77);
      sub_1000EA4B0(v26, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for TrendsCard);
      uint64_t v33 = *(int *)(v10 + 28);
      uint64_t v34 = v60;
      uint64_t v35 = *(void *)(v60 + v33);
      *uint64_t v13 = swift_getKeyPath();
      sub_1000AFA94(&qword_10094C578);
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = v59;
      sub_1006BC318((uint64_t)v20, (uint64_t)v13 + *(int *)(v59 + 20), (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_100093E60(&v77, (uint64_t)v13 + *(int *)(v36 + 24));
      *(uint64_t *)((char *)v13 + *(int *)(v36 + 28)) = v35;
      uint64_t v37 = v64;
      sub_1000EA4B0((uint64_t)v13, v64, (uint64_t (*)(void))type metadata accessor for VerticalLayoutTrendView);
      *(unsigned char *)(v37 + *(int *)(v65 + 36)) = 0;
      swift_retain();
      sub_1006BC2B8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VerticalLayoutTrendView);
      uint64_t v38 = (uint64_t)v57;
      sub_1000EA4B0((uint64_t)v57, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      uint64_t v39 = v34;
      uint64_t v40 = v66;
      sub_1000EA4B0(v39, v66, type metadata accessor for TrendsCardView);
      uint64_t v41 = (v31 + 16) & ~v31;
      unint64_t v42 = (v41 + v18 + *(unsigned __int8 *)(v61 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      uint64_t v43 = swift_allocObject();
      sub_1006BC318((uint64_t)v20, v43 + v41, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_1006BC318(v40, v43 + v42, type metadata accessor for TrendsCardView);
      sub_1000E21E8();
      uint64_t v44 = v62;
      View.onTapGesture(count:perform:)();
      swift_release();
      sub_10008DB18(v37, &qword_100968F58);
      sub_1006BC2B8(v38, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      uint64_t v46 = (uint64_t)v71;
      uint64_t v45 = v72;
      uint64_t v47 = v73;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v44, v73);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v47);
    }
    else
    {
      uint64_t v46 = (uint64_t)v71;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v73);
    }
    id v52 = &qword_100968F50;
    sub_1000AEF2C(v46, (uint64_t)v69, &qword_100968F50);
    swift_storeEnumTagMultiPayload();
    sub_100014A54();
    sub_1000E2118();
    _ConditionalContent<>.init(storage:)();
    uint64_t v55 = v46;
  }
  return sub_10008DB18(v55, v52);
}

uint64_t sub_1006BAF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EA4B0(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  uint64_t v7 = type metadata accessor for TrendListMetric();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t v8 = &v6[*(int *)(v4 + 20)];
  *(void *)uint64_t v8 = 0;
  v8[8] = -1;
  uint64_t v9 = type metadata accessor for TrendsCardView(0);
  sub_1000AEF2C(a2 + *(int *)(v9 + 24), (uint64_t)v16, &qword_10094C750);
  if (v17)
  {
    uint64_t v10 = (char **)sub_10007E4EC(v16, v17);
    uint64_t v11 = a2 + *(int *)(v9 + 20);
    v15[3] = v4;
    uint64_t v12 = sub_1000B1710(v15);
    sub_1000EA4B0((uint64_t)v6, (uint64_t)v12, type metadata accessor for TrendsActionContext);
    sub_1004FA574(v11, (uint64_t)v15, *v10);
    sub_1006BC2B8((uint64_t)v6, type metadata accessor for TrendsActionContext);
    sub_10008DB18((uint64_t)v15, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v16);
  }
  else
  {
    sub_1006BC2B8((uint64_t)v6, type metadata accessor for TrendsActionContext);
    return sub_10008DB18((uint64_t)v16, &qword_10094C750);
  }
}

uint64_t sub_1006BB124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a2;
  id v83 = (char *)a3;
  uint64_t v81 = a4;
  uint64_t v80 = sub_1000AFA94(&qword_100968F28);
  __chkstk_darwin(v80);
  uint64_t v76 = (uint64_t *)((char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000AFA94(&qword_100968F80);
  __chkstk_darwin(v78);
  uint64_t v79 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100953230);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v63 - v10;
  uint64_t v84 = sub_1000AFA94(&qword_100953238);
  uint64_t v11 = __chkstk_darwin(v84);
  uint64_t v68 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v71 = (uint64_t)&v63 - v13;
  uint64_t v85 = type metadata accessor for TrendsStack();
  __chkstk_darwin(v85);
  long long v77 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000AFA94(&qword_100968F88);
  uint64_t v73 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  id v69 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)&v63 - v18;
  uint64_t v19 = type metadata accessor for DynamicTypeSize();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v63 - v24;
  uint64_t v26 = a1;
  sub_100092088((uint64_t)&v63 - v24);
  uint64_t v75 = *(void (**)(char *, void, uint64_t))(v20 + 104);
  v75(v23, enum case for DynamicTypeSize.xLarge(_:), v19);
  uint64_t v74 = sub_10000F604((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v65 = v20;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v23, v19);
  uint64_t v66 = v20 + 8;
  uint64_t v64 = v27;
  v27(v25, v19);
  if (a1)
  {
    uint64_t v63 = v7;
    uint64_t v76 = (void *)v15;
    uint64_t v89 = type metadata accessor for TrendsCard();
    id v90 = &off_1008D1370;
    uint64_t v28 = sub_1000B1710((uint64_t *)&v87);
    sub_1000EA4B0(v82, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for TrendsCard);
    uint64_t v29 = type metadata accessor for TrendsCardView(0);
    sub_1000AEF2C(v26 + *(int *)(v29 + 24), (uint64_t)v86, &qword_10094C750);
    uint64_t v30 = *(void *)(v26 + *(int *)(v29 + 28));
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = (uint64_t)v83;
    uint64_t v33 = v77;
    *long long v77 = KeyPath;
    sub_1000AFA94(&qword_10094C578);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = (int *)v85;
    sub_100093E60(&v87, (uint64_t)v33 + *(int *)(v85 + 20));
    sub_1000AEEC8((uint64_t)v86, (uint64_t)v33 + v34[6], &qword_10094C750);
    *(uint64_t *)((char *)v33 + v34[7]) = v32;
    *(uint64_t *)((char *)v33 + v34[8]) = v30;
    uint64_t v35 = v75;
    v75(v25, enum case for DynamicTypeSize.xxLarge(_:), v19);
    v35(v23, enum case for DynamicTypeSize.accessibility4(_:), v19);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if (result)
    {
      uint64_t v37 = v63;
      uint64_t v38 = v67;
      uint64_t v39 = (uint64_t)&v67[*(int *)(v63 + 48)];
      uint64_t v40 = v65;
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      v41(v67, v25, v19);
      id v83 = (char *)v39;
      v41((char *)v39, v23, v19);
      unint64_t v42 = v70;
      uint64_t v43 = &v70[*(int *)(v37 + 48)];
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      v44(v70, v38, v19);
      v44(v43, (char *)v39, v19);
      uint64_t v45 = (uint64_t)v68;
      v41(v68, v42, v19);
      uint64_t v46 = v64;
      v64(v43, v19);
      uint64_t v47 = &v42[*(int *)(v37 + 48)];
      v41(v42, v38, v19);
      v41(v47, v83, v19);
      v41((char *)(v45 + *(int *)(v84 + 36)), v47, v19);
      v46(v42, v19);
      uint64_t v48 = v71;
      sub_1000AEEC8(v45, v71, &qword_100953238);
      uint64_t v49 = sub_10000F604(&qword_100968F18, (void (*)(uint64_t))type metadata accessor for TrendsStack);
      uint64_t v50 = sub_1000A132C(&qword_100953248, &qword_100953238);
      double v51 = v69;
      uint64_t v53 = v84;
      uint64_t v52 = v85;
      uint64_t v54 = (uint64_t)v77;
      View.dynamicTypeSize<A>(_:)();
      sub_10008DB18(v48, &qword_100953238);
      sub_1006BC2B8(v54, (uint64_t (*)(void))type metadata accessor for TrendsStack);
      uint64_t v55 = v73;
      id v56 = v72;
      id v57 = v76;
      (*(void (**)(char *, char *, void *))(v73 + 32))(v72, v51, v76);
      (*(void (**)(uint64_t, char *, void *))(v55 + 16))(v79, v56, v57);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v87 = v52;
      *((void *)&v87 + 1) = v53;
      uint64_t v88 = v49;
      uint64_t v89 = v50;
      swift_getOpaqueTypeConformance2();
      sub_1000A132C(&qword_100968F20, &qword_100968F28);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, void *))(v55 + 8))(v56, v57);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v58 = static VerticalAlignment.center.getter();
    uint64_t v59 = (uint64_t)v76;
    *uint64_t v76 = v58;
    *(void *)(v59 + 8) = 0x4024000000000000;
    *(unsigned char *)(v59 + 16) = 0;
    uint64_t v60 = sub_1000AFA94(&qword_100968F90);
    sub_1006BBB38(v26, (uint64_t)v83, v82, v59 + *(int *)(v60 + 44));
    sub_1000AEF2C(v59, v79, &qword_100968F28);
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = sub_10000F604(&qword_100968F18, (void (*)(uint64_t))type metadata accessor for TrendsStack);
    uint64_t v62 = sub_1000A132C(&qword_100953248, &qword_100953238);
    *(void *)&long long v87 = v85;
    *((void *)&v87 + 1) = v84;
    uint64_t v88 = v61;
    uint64_t v89 = v62;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100968F20, &qword_100968F28);
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v59, &qword_100968F28);
  }
  return result;
}

uint64_t sub_1006BBB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v7 = sub_1000AFA94(&qword_100968F98);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  __chkstk_darwin(v7);
  uint64_t v51 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100968FA0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v56 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (uint64_t)&v49 - v13;
  uint64_t v14 = (int *)type metadata accessor for TrendsStack();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v52 = sub_1006BC060(a2);
  uint64_t v21 = v20;
  uint64_t v22 = type metadata accessor for TrendsCard();
  uint64_t v60 = v22;
  uint64_t v61 = &off_1008D1370;
  uint64_t v23 = sub_1000B1710((uint64_t *)&v59);
  uint64_t v49 = a3;
  sub_1000EA4B0(a3, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for TrendsCard);
  uint64_t v24 = type metadata accessor for TrendsCardView(0);
  uint64_t v25 = a1 + *(int *)(v24 + 24);
  sub_1000AEF2C(v25, (uint64_t)v58, &qword_10094C750);
  uint64_t v26 = *(int *)(v24 + 28);
  uint64_t v50 = a1;
  uint64_t v27 = *(void *)(a1 + v26);
  *uint64_t v17 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  sub_100093E60(&v59, (uint64_t)v17 + v14[5]);
  sub_1000AEEC8((uint64_t)v58, (uint64_t)v17 + v14[6], &qword_10094C750);
  *(uint64_t *)((char *)v17 + v14[7]) = (uint64_t)v52;
  *(uint64_t *)((char *)v17 + v14[8]) = v27;
  sub_1006BC318((uint64_t)v17, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  if (*(void *)(v21 + 16))
  {
    uint64_t v60 = v22;
    uint64_t v61 = &off_1008D1370;
    uint64_t v28 = sub_1000B1710((uint64_t *)&v59);
    sub_1000EA4B0(v49, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for TrendsCard);
    sub_1000AEF2C(v25, (uint64_t)v58, &qword_10094C750);
    uint64_t v29 = *(void *)(v50 + v26);
    *uint64_t v17 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    sub_100093E60(&v59, (uint64_t)v17 + v14[5]);
    sub_1000AEEC8((uint64_t)v58, (uint64_t)v17 + v14[6], &qword_10094C750);
    *(uint64_t *)((char *)v17 + v14[7]) = v21;
    *(uint64_t *)((char *)v17 + v14[8]) = v29;
    swift_retain();
    swift_retain();
    char v30 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v39 = v51;
    sub_1000EA4B0((uint64_t)v17, v51, (uint64_t (*)(void))type metadata accessor for TrendsStack);
    uint64_t v40 = v54;
    uint64_t v41 = v39 + *(int *)(v54 + 36);
    *(unsigned char *)uint64_t v41 = v30;
    *(void *)(v41 + 8) = v32;
    *(void *)(v41 + 16) = v34;
    *(void *)(v41 + 24) = v36;
    *(void *)(v41 + 32) = v38;
    *(unsigned char *)(v41 + 40) = 0;
    sub_1006BC2B8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendsStack);
    uint64_t v42 = v53;
    sub_1000AEEC8(v39, v53, &qword_100968F98);
    uint64_t v43 = 0;
    uint64_t v44 = v40;
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v43 = 1;
    uint64_t v42 = v53;
    uint64_t v44 = v54;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v42, v43, 1, v44);
  sub_1000EA4B0((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  uint64_t v45 = v56;
  sub_1000AEF2C(v42, v56, &qword_100968FA0);
  uint64_t v46 = v57;
  sub_1000EA4B0((uint64_t)v17, v57, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  uint64_t v47 = sub_1000AFA94(&qword_100968FA8);
  sub_1000AEF2C(v45, v46 + *(int *)(v47 + 48), &qword_100968FA0);
  sub_10008DB18(v42, &qword_100968FA0);
  sub_1006BC2B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  sub_10008DB18(v45, &qword_100968FA0);
  return sub_1006BC2B8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendsStack);
}

void *sub_1006BC060(uint64_t a1)
{
  uint64_t v7 = *(void *)(a1 + 16);
  double v8 = ceil((double)v7 * 0.5);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v1 = a1;
  uint64_t v3 = v7 - (uint64_t)v8;
  if (__OFSUB__(v7, (uint64_t)v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = sub_1006BA638((uint64_t)v8, a1);
  uint64_t v2 = v9;
  uint64_t v5 = v10;
  unint64_t v6 = v11;
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v12 = sub_100369DAC(v4, v2, v5, v6);
    goto LABEL_14;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13[2];
  swift_release();
  if (__OFSUB__(v6 >> 1, v5)) {
    goto LABEL_28;
  }
  if (v14 != (v6 >> 1) - v5)
  {
LABEL_29:
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
LABEL_14:
  swift_unknownObjectRelease();
  uint64_t v15 = sub_100584E40(v3, v1);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_16:
    sub_100369DAC(v15, v17, v19, v21);
    goto LABEL_23;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)swift_dynamicCastClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v23 = v22[2];
  swift_release();
  if (__OFSUB__(v21 >> 1, v19))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v23 != (v21 >> 1) - v19)
  {
LABEL_31:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_23:
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1006BC2B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006BC318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006BC380()
{
  uint64_t v1 = (int *)(type metadata accessor for TrendListMetric() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = type metadata accessor for TrendsCardView(0);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + v1[9];
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v5;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v5, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v8 + *(int *)(v4 + 20);
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = type metadata accessor for TrendsCard();
  sub_1000917F8(*(void *)(v10 + *(int *)(v12 + 20)), *(void *)(v10 + *(int *)(v12 + 20) + 8), *(unsigned char *)(v10 + *(int *)(v12 + 20) + 16));
  swift_bridgeObjectRelease();
  uint64_t v13 = v8 + *(int *)(v4 + 24);
  if (*(void *)(v13 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v13);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006BC5EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TrendListMetric() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for TrendsCardView(0) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1006BAF48(v0 + v2, v5);
}

ValueMetadata *type metadata accessor for TrendsCoachingAverageInformation()
{
  return &type metadata for TrendsCoachingAverageInformation;
}

id sub_1006BC6CC(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProviderObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProvider] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  swift_retain();
  id v2 = [super initWithNibName:0 bundle:0];
  id result = [v2 tableView];
  if (result)
  {
    uint64_t v4 = result;
    [result setSeparatorStyle:0];

    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1006BC78C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  [super viewDidLoad];
  id v3 = [v0 navigationItem];
  [v3 setLargeTitleDisplayMode:1];

  id v4 = [v1 navigationItem];
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setTitle:v8];

  id result = [v1 tableView];
  if (result)
  {
    uint64_t v10 = result;
    type metadata accessor for WorkoutsListTableViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v12 = String._bridgeToObjectiveC()();
    [v10 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v12];

    type metadata accessor for ActivitySharingFriendDetailDataProvider();
    sub_1003746DC((unint64_t *)&unk_100958E80, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendDetailDataProvider);
    ObservableObject<>.objectWillChange.getter();
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = ObjectType;
    type metadata accessor for ObservableObjectPublisher();
    uint64_t v15 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProviderObserver] = v15;
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006BCA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = (void *)HKLogActivity;
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(HKLogActivity, v10))
  {
    os_log_t v22 = v11;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v7;
    aBlock[0] = v14;
    uint64_t v23 = v3;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v15 = _typeName(_:qualified:)();
    uint64_t v26 = sub_10008F1F4(v15, v16, aBlock);
    uint64_t v3 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v17 = v22;
    _os_log_impl((void *)&_mh_execute_header, v22, v12, "%s received object will change", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v24;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  sub_1000DF004();
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)sub_1006BD7BC;
  aBlock[5] = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008D6950;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1003746DC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v7);
}

void sub_1006BCE30()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong tableView];

    if (v2)
    {
      [v2 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1006BD0BC(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  [v5 setSelectionStyle:0];
  type metadata accessor for WorkoutsListTableViewCell();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return (unint64_t)v5;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProvider);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v17 = v8;
  id v18 = v5;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  unint64_t result = IndexPath.row.getter();
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v22 + 8 * result + 32);
LABEL_6:
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    id v12 = [self clearColor];
    uint64_t v13 = *(void *)(v7 + OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView);
    [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView) setBackgroundColor:v12];

    [*(id *)(*(void *)(v13 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView)+ OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView) setHidden:0];
    uint64_t v14 = *(void **)(v17 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager);
    id v15 = objc_retain(*(id *)(v17
                            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext));
    id v16 = v14;
    sub_1001B430C(v11, v15, v16, 0, 0, 0, 0);

    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

id sub_1006BD4D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController()
{
  return self;
}

double sub_1006BD578@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  return result;
}

uint64_t sub_1006BD63C(void *a1)
{
  uint64_t v1 = (void *)a1[1];
  objc_super v2 = (void *)a1[5];
  long long v3 = (void *)a1[7];
  uint64_t v4 = (void *)a1[10];
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v4;
  swift_retain();
  swift_retain();
  id v7 = v1;
  swift_retain();
  id v8 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1006BD744()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006BD77C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006BD7B4(uint64_t a1)
{
  return sub_1006BCA64(a1, *(void *)(v1 + 16));
}

void sub_1006BD7BC()
{
}

char *sub_1006BD7C4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  char v12 = &v11[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
  *(void *)char v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &v11[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_insets];
  *(_OWORD *)uint64_t v13 = xmmword_100775450;
  *((_OWORD *)v13 + 1) = xmmword_100775460;

  v29.receiver = v11;
  v29.super_class = (Class)type metadata accessor for PillLabelView();
  uint64_t v14 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v15 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label];
  uint64_t v17 = v14;
  [v17 addSubview:v16];
  id v18 = [v17 layer];
  [v18 setCornerRadius:4.0];

  uint64_t v19 = self;
  unint64_t v20 = v17;
  id v21 = [v19 whiteColor];
  [v20 setBackgroundColor:v21];

  id v22 = *(id *)&v14[v15];
  id v23 = [v19 blackColor];
  [v22 setTextColor:v23];

  uint64_t v24 = *(void **)&v14[v15];
  uint64_t v25 = self;
  id v26 = v24;
  id v27 = [v25 preferredFontForTextStyle:UIFontTextStyleCaption2];
  [v26 setFont:v27];

  return v20;
}

uint64_t sub_1006BDA24(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  id v4 = objc_allocWithZone((Class)UILabel);
  id v5 = v1;
  id v6 = [v4 init];

  *(void *)&v1[v3] = v6;
  id v7 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  id v8 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_insets];
  *(_OWORD *)id v8 = xmmword_100775450;
  *((_OWORD *)v8 + 1) = xmmword_100775460;

  swift_bridgeObjectRelease();
  type metadata accessor for PillLabelView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1006BDC80()
{
  return sub_1006BEA94(0, type metadata accessor for PillLabelView);
}

uint64_t type metadata accessor for PillLabelView()
{
  return self;
}

char *sub_1006BDD10(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer;
  id v10 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 initWithTarget:0 action:0];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)type metadata accessor for PillLabelView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  double result = (char *)[self energyColors];
  if (result)
  {
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors] = result;
    *(void *)&v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource + 8] = 0;
    swift_unknownObjectWeakInit();
    uint64_t v15 = &v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
    *((void *)v15 + 1) = 0;
    *((void *)v15 + 2) = 0;
    *(void *)uint64_t v15 = 0;

    v26.receiver = v11;
    v26.super_class = (Class)type metadata accessor for ChartValueGesturalOverlayView();
    uint64_t v16 = (char *)[super initWithFrame:a1, a2, a3, a4];
    uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer];
    id v18 = v16;
    [v17 addTarget:v18 action:"gestureDidChangeWithSender:"];
    [v17 setMinimumPressDuration:0.1];
    [v18 addGestureRecognizer:v17];
    uint64_t v19 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
    unint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView];
    [v20 setAlpha:0.0];
    uint64_t v21 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
    [*(id *)&v18[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView] setAlpha:0.0];
    uint64_t v22 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors;
    id v23 = [*(id *)&v18[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors] gradientLightColor];
    [v20 setBackgroundColor:v23];

    uint64_t v24 = *(void **)&v18[v21];
    id v25 = [*(id *)&v18[v22] gradientDarkColor];
    [v24 setBackgroundColor:v25];

    [v18 addSubview:*(void *)&v18[v19]];
    [v18 addSubview:*(void *)&v18[v21]];

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1006BDFDC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer;
  id v4 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithTarget:0 action:0];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)type metadata accessor for PillLabelView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id result = [self energyColors];
  if (result)
  {
    id v9 = result;

    uint64_t v10 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors;
    *(void *)&v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors] = v9;
    uint64_t v11 = (uint64_t)&v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource];
    *(void *)&v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource + 8] = 0;
    swift_unknownObjectWeakInit();
    uint64_t v12 = &v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
    *((void *)v12 + 1) = 0;
    *((void *)v12 + 2) = 0;
    *(void *)uint64_t v12 = 0;

    sub_10019B9F8(v11);
    swift_bridgeObjectRelease();
    type metadata accessor for ChartValueGesturalOverlayView();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006BE1A0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData + 16];
  if (v2)
  {
    uint64_t v3 = *((void *)v1 + 1);
    uint64_t v4 = *(void *)v1;
    id v5 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView];
    uint64_t v6 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
    *(void *)uint64_t v6 = v3;
    *((void *)v6 + 1) = v2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label];
    if (*((void *)v6 + 1))
    {
      swift_bridgeObjectRetain();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v8 = 0;
    }
    [v7 setText:v8];

    [v5 setNeedsLayout];
    [v5 invalidateIntrinsicContentSize];
    [v5 sizeToFit];
    [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView] alpha];
    if (v13 >= 1.0) {
      double v14 = 1.0;
    }
    else {
      double v14 = 0.0;
    }
    uint64_t v15 = self;
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = v0;
    *(void *)(v16 + 32) = v4;
    *(void *)(v16 + 40) = v3;
    *(void *)(v16 + 48) = v2;
    uint64_t v22 = sub_1006BECD8;
    uint64_t v23 = v16;
    id v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    unint64_t v20 = sub_100070394;
    uint64_t v21 = &unk_1008D6A70;
    uint64_t v11 = _Block_copy(&v18);
    uint64_t v17 = v0;
    swift_release();
    [v15 animateKeyframesWithDuration:0 delay:v11 options:0 animations:0.1 completion:0.0];
  }
  else
  {
    id v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v0;
    uint64_t v22 = sub_1006BEC90;
    uint64_t v23 = v10;
    id v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    unint64_t v20 = sub_100070394;
    uint64_t v21 = &unk_1008D6A20;
    uint64_t v11 = _Block_copy(&v18);
    uint64_t v12 = v0;
    swift_release();
    [v9 animateWithDuration:v11 animations:0.1];
  }
  _Block_release(v11);
}

void sub_1006BE478(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(double *)(v11 + 24) = a5;
  *(void *)(v11 + 32) = a2;
  *(void *)(v11 + 40) = a3;
  uint64_t v21 = sub_1006BED2C;
  uint64_t v22 = v11;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_100070394;
  unint64_t v20 = &unk_1008D6AC0;
  uint64_t v12 = _Block_copy(&v17);
  id v13 = a1;
  swift_bridgeObjectRetain();
  swift_release();
  [v10 addKeyframeWithRelativeStartTime:v12 relativeDuration:0.0 animations:a4];
  _Block_release(v12);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  uint64_t v21 = sub_1006BED3C;
  uint64_t v22 = v14;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_100070394;
  unint64_t v20 = &unk_1008D6B10;
  uint64_t v15 = _Block_copy(&v17);
  id v16 = v13;
  swift_release();
  [v10 addKeyframeWithRelativeStartTime:v15 relativeDuration:0.0 animations:1.0];
  _Block_release(v15);
}

void sub_1006BE640(char *a1, double a2)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_100998308;
  [a1 bounds];
  [v4 setFrame:a2, 0.0, v5, CGRectGetHeight(v26)];
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView];
  [v6 frame];
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  [v6 setCenter:a2, -v7];
  [a1 bounds];
  double v8 = CGRectGetMinX(v27) + -8.0;
  [a1 bounds];
  double MaxX = CGRectGetMaxX(v28);
  [v6 frame];
  double MinX = CGRectGetMinX(v29);
  [v6 frame];
  CGFloat v15 = v11;
  CGFloat v16 = v12;
  CGFloat v17 = v13;
  CGFloat v18 = v14;
  if (MinX >= v8)
  {
    double v20 = MaxX + 8.0;
    if (v20 >= CGRectGetMaxX(*(CGRect *)&v11)) {
      return;
    }
    [v6 frame];
    CGFloat v15 = v21;
    CGFloat v16 = v22;
    CGFloat v17 = v23;
    CGFloat v18 = v24;
    [v6 frame];
    double v19 = v20 - CGRectGetMaxX(v31);
  }
  else
  {
    [v6 frame];
    double v19 = v8 - CGRectGetMinX(v30);
  }
  v32.origin.CGFloat x = v15;
  v32.origin.CGFloat y = v16;
  v32.size.CGFloat width = v17;
  v32.size.CGFloat height = v18;
  CGRect v33 = CGRectOffset(v32, v19, 0.0);

  [v6 setFrame:v33.origin.x, v33.origin.y, v33.size.width, v33.size.height];
}

uint64_t sub_1006BE8AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  [a1 locationInView:v2];
  double v6 = v5;
  double v7 = (char *)[a1 state];
  if ((unint64_t)(v7 - 3) >= 3)
  {
    if ((unint64_t)(v7 - 1) >= 2)
    {
      if (v7)
      {
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      goto LABEL_8;
    }
    uint64_t v9 = sub_1006A3E08(v6);
    uint64_t v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData);
    *uint64_t v10 = v9;
    v10[1] = v11;
    v10[2] = v12;
  }
  else
  {
    double v8 = (void *)(v2 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData);
    *double v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
  }
  swift_bridgeObjectRelease();
  sub_1006BE1A0();
LABEL_8:

  return swift_unknownObjectRelease();
}

id sub_1006BEA7C(uint64_t a1)
{
  return sub_1006BEA94(a1, type metadata accessor for ChartValueGesturalOverlayView);
}

id sub_1006BEA94(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for ChartValueGesturalOverlayView()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for ChartValueGesturalOverlayData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ChartValueGesturalOverlayData()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ChartValueGesturalOverlayData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ChartValueGesturalOverlayData(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChartValueGesturalOverlayData()
{
  return &type metadata for ChartValueGesturalOverlayData;
}

uint64_t sub_1006BEC58()
{
  return swift_deallocObject();
}

id sub_1006BEC90()
{
  return sub_1006BED44(0.0);
}

uint64_t sub_1006BEC98()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006BECD8()
{
  sub_1006BE478(*(void **)(v0 + 24), *(void *)(v0 + 40), *(void *)(v0 + 48), *(double *)(v0 + 16), *(double *)(v0 + 32));
}

uint64_t sub_1006BECEC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006BED2C()
{
  sub_1006BE640(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

id sub_1006BED3C()
{
  return sub_1006BED44(1.0);
}

id sub_1006BED44(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView) setAlpha:];
  objc_super v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView);

  return [v4 setAlpha:a1];
}

uint64_t sub_1006BEDC0()
{
  type metadata accessor for IdleTimerAssertion();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  qword_1009690B0 = result;
  return result;
}

uint64_t sub_1006BEDF8@<X0>(uint64_t *a1@<X8>)
{
  CGRect v29 = a1;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  CGRect v26 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - v9;
  UUID.init()();
  uint64_t v11 = (unint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)(*(void *)(v1 + 16) + 16);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  swift_beginAccess();
  unint64_t v13 = *(void *)(v1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 16) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v13 = sub_1001E70C8(0, *(void *)(v13 + 16) + 1, 1, v13);
    unint64_t *v11 = v13;
  }
  unint64_t v16 = *(void *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  if (v16 >= v15 >> 1)
  {
    unint64_t v13 = sub_1001E70C8(v15 > 1, v16 + 1, 1, v13);
    unint64_t *v11 = v13;
  }
  *(void *)(v13 + 16) = v16 + 1;
  CGFloat v17 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v17(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, v7, v4);
  swift_endAccess();
  if (!v12)
  {
    CGFloat v18 = v26;
    static WOLog.app.getter();
    double v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      double v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Disabling idle timer", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
    id v22 = [self sharedApplication];
    [v22 setIdleTimerDisabled:1];
  }
  double v23 = v29;
  v29[3] = v4;
  double v24 = sub_1000B1710(v23);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v17)(v24, v10, v4);
}

uint64_t sub_1006BF144(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v55 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v51 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v51 - v10;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v12 - 8);
  double v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  CGFloat v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v53 = (char *)v51 - v20;
  sub_10008F484(a1, (uint64_t)v58);
  int v21 = swift_dynamicCast();
  id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (!v21)
  {
    v22(v14, 1, 1, v15);
LABEL_11:
    sub_1000CD2E4((uint64_t)v14);
    static WOLog.app.getter();
    sub_10008F484(a1, (uint64_t)v58);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v54 = v3;
      uint64_t v57 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      sub_10008F484((uint64_t)v58, (uint64_t)v56);
      uint64_t v40 = String.init<A>(describing:)();
      v56[0] = sub_10008F1F4(v40, v41, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v58);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Trying to release an idle timer assertion, but the token is not a UUID: %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v5, v54);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v58);

      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v5, v3);
    }
  }
  v22(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_11;
  }
  uint64_t v52 = v8;
  uint64_t v54 = v3;
  double v23 = v53;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v53, v14, v15);
  uint64_t v24 = v1 + 16;
  uint64_t v25 = swift_beginAccess();
  uint64_t v26 = *(void *)(v1 + 16);
  __chkstk_darwin(v25);
  v51[-2] = v23;
  swift_bridgeObjectRetain();
  BOOL v27 = sub_1000B71A8((uint64_t (*)(char *))sub_1006C02C8, (uint64_t)&v51[-4], v26);
  uint64_t v28 = swift_bridgeObjectRelease();
  if (v27)
  {
    __chkstk_darwin(v28);
    v51[-2] = v23;
    swift_beginAccess();
    uint64_t result = sub_1006BFEC8((uint64_t (*)(unint64_t))sub_1006BF93C, (uint64_t)&v51[-4]);
    uint64_t v30 = *(void *)(*(void *)v24 + 16);
    uint64_t v31 = v54;
    if (v30 < result)
    {
      __break(1u);
    }
    else
    {
      sub_1001C76F0(result, v30);
      swift_endAccess();
      if (!*(void *)(*(void *)v24 + 16))
      {
        static WOLog.app.getter();
        CGRect v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v34 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Enabling idle timer", v34, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v31);
        id v35 = [self sharedApplication];
        [v35 setIdleTimerDisabled:0];
      }
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, v15);
    }
  }
  else
  {
    uint64_t v42 = v52;
    static WOLog.app.getter();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v23, v15);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = v54;
    if (v45)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      v51[1] = v47 + 4;
      sub_100095A68();
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v57 = sub_10008F1F4(v48, v49, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v16 + 8);
      v50(v18, v15);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Trying to remove an idle timer token that we don't know about: %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      double v23 = v53;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v54);
    }
    else
    {
      uint64_t v50 = *(void (**)(char *, uint64_t))(v16 + 8);
      v50(v18, v15);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v46);
    }
    return ((uint64_t (*)(char *, uint64_t))v50)(v23, v15);
  }
  return result;
}

uint64_t type metadata accessor for IdleTimerAssertion()
{
  return self;
}

uint64_t sub_1006BF93C()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_1006BF96C(uint64_t (*a1)(uint64_t *))
{
  uint64_t v3 = *(void **)v1;
  uint64_t v63 = *(void *)(*(void *)v1 + 16);
  if (!v63) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v66 = v3;
  while (1)
  {
    unint64_t v78 = v5;
    uint64_t v6 = v3[v4 + 4];
    uint64_t v7 = v3[v4 + 5];
    uint64_t v8 = v3[v4 + 6];
    uint64_t v9 = v3[v4 + 7];
    uint64_t v11 = v3[v4 + 8];
    uint64_t v10 = v3[v4 + 9];
    unint64_t v13 = v3[v4 + 10];
    uint64_t v12 = v3[v4 + 11];
    uint64_t v14 = v3[v4 + 12];
    uint64_t v69 = v6;
    uint64_t v70 = v7;
    uint64_t v71 = v8;
    uint64_t v72 = v9;
    uint64_t v73 = v11;
    uint64_t v74 = v10;
    unint64_t v75 = v13;
    uint64_t v76 = v12;
    uint64_t v77 = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    char v15 = a1(&v69);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v13;
    }
    char v16 = v15;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v16) {
      break;
    }
    unint64_t v5 = v78 + 1;
    v4 += 9;
    uint64_t v3 = v66;
    if (v63 == v78 + 1)
    {
      swift_bridgeObjectRelease();
      return v66[2];
    }
  }
  uint64_t v17 = v66;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v13 = v78;
  unint64_t v19 = v78 + 1;
  if (!__OFADD__(v78, 1))
  {
    unint64_t v20 = v66[2];
    if (v19 == v20) {
      return v13;
    }
    uint64_t v21 = v4 * 8 + 168;
    while (v19 < v20)
    {
      uint64_t v67 = v17;
      unint64_t v68 = v19;
      unint64_t v78 = v13;
      double v23 = (void *)((char *)v17 + v21);
      uint64_t v24 = *(void *)((char *)v17 + v21 - 56);
      uint64_t v61 = *(void *)((char *)v17 + v21 - 64);
      uint64_t v64 = v21;
      uint64_t v25 = *(void *)((char *)v17 + v21 - 48);
      uint64_t v26 = *(void *)((char *)v17 + v21 - 40);
      uint64_t v28 = *(void *)((char *)v17 + v21 - 32);
      uint64_t v27 = *(v23 - 3);
      unint64_t v30 = *(v23 - 2);
      uint64_t v29 = *(v23 - 1);
      uint64_t v31 = *v23;
      uint64_t v69 = v61;
      uint64_t v70 = v24;
      uint64_t v71 = v25;
      uint64_t v72 = v26;
      uint64_t v73 = v28;
      uint64_t v74 = v27;
      unint64_t v75 = v30;
      uint64_t v76 = v29;
      uint64_t v77 = v31;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      char v32 = a1(&v69);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v32)
      {
        uint64_t v17 = v67;
        unint64_t v22 = v68;
        unint64_t v13 = v78;
      }
      else
      {
        unint64_t v33 = v78;
        uint64_t v17 = v67;
        unint64_t v22 = v68;
        if (v68 != v78)
        {
          if ((v78 & 0x8000000000000000) != 0) {
            goto LABEL_30;
          }
          unint64_t v34 = v67[2];
          if (v78 >= v34) {
            goto LABEL_31;
          }
          if (v68 >= v34) {
            goto LABEL_32;
          }
          id v35 = &v67[9 * v78 + 4];
          uint64_t v36 = *v35;
          uint64_t v37 = v35[1];
          uint64_t v38 = v35[2];
          uint64_t v39 = v35[3];
          uint64_t v40 = v35[4];
          uint64_t v52 = v35[5];
          uint64_t v41 = v35[6];
          uint64_t v51 = v35[7];
          uint64_t v42 = v35[8];
          uint64_t v43 = *(v23 - 6);
          uint64_t v54 = *(v23 - 7);
          uint64_t v55 = *(v23 - 8);
          uint64_t v62 = *(v23 - 5);
          uint64_t v44 = *(v23 - 3);
          uint64_t v58 = *(v23 - 2);
          uint64_t v59 = *(v23 - 4);
          uint64_t v45 = *(v23 - 1);
          uint64_t v46 = *v23;
          uint64_t v56 = v45;
          uint64_t v57 = v44;
          uint64_t v53 = v36;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v50 = v42;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v17 = sub_1005EC2A0(v67);
          }
          uint64_t v47 = &v17[9 * v33];
          v47[4] = v55;
          v47[5] = v54;
          v47[6] = v43;
          v47[7] = v62;
          v47[8] = v59;
          v47[9] = v57;
          v47[10] = v58;
          v47[11] = v56;
          v47[12] = v46;
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t result = swift_release();
          unint64_t v22 = v68;
          if (v68 >= v17[2]) {
            goto LABEL_33;
          }
          uint64_t v48 = (void *)((char *)v17 + v64);
          *(v48 - 8) = v53;
          *(v48 - 7) = v37;
          *(v48 - 6) = v38;
          *(v48 - 5) = v39;
          *(v48 - 4) = v40;
          *(v48 - 3) = v52;
          *(v48 - 2) = v41;
          *(v48 - 1) = v51;
          *uint64_t v48 = v50;
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t result = swift_release();
          *uint64_t v60 = v17;
          unint64_t v33 = v78;
        }
        BOOL v49 = __OFADD__(v33, 1);
        unint64_t v13 = v33 + 1;
        if (v49) {
          goto LABEL_29;
        }
      }
      unint64_t v19 = v22 + 1;
      unint64_t v20 = v17[2];
      uint64_t v21 = v64 + 72;
      if (v19 == v20) {
        return v13;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BFEC8(uint64_t (*a1)(unint64_t), uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v33 - v10;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v44 = v4;
  unint64_t v15 = *v4;
  uint64_t v16 = *(void *)(*v4 + 16);
  if (!v16) {
    return 0;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v35 = v12;
  uint64_t v45 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v36 = v17;
  while (1)
  {
    char v19 = a1(v15 + v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v19) {
      break;
    }
    ++v18;
    v17 += v45;
    if (v16 == v18)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v18, 1))
  {
    unint64_t v21 = *(void *)(v15 + 16);
    if (v18 + 1 == v21) {
      return v18;
    }
    uint64_t v22 = v45 + v17;
    unint64_t v23 = v18 + 1;
    uint64_t v24 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    uint64_t v39 = a1;
    uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v35 + 8);
    unint64_t v33 = (uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 40);
    uint64_t v37 = v14;
    uint64_t v38 = a2;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    while (v23 < v21)
    {
      uint64_t v25 = v15 + v22;
      uint64_t v26 = (uint64_t (*)(char *))a1;
      uint64_t v27 = *v24;
      (*v24)(v14, v25, v7);
      LOBYTE(v26) = v26(v14);
      uint64_t result = (*v40)(v14, v7);
      if (v26)
      {
        a1 = v39;
        uint64_t v24 = v43;
      }
      else
      {
        uint64_t v24 = v43;
        if (v23 != v18)
        {
          if ((v18 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v28 = *v44;
          if (v18 >= *(void *)(*v44 + 16)) {
            goto LABEL_33;
          }
          unint64_t v35 = *(void *)(*v44 + 16);
          uint64_t v34 = v18 * v45;
          uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v27)(v41, v28 + v36 + v18 * v45, v7);
          if (v23 >= v35) {
            goto LABEL_34;
          }
          v27(v42, v28 + v22, v7);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v44 = v28;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1005EC2B4(v28);
            unint64_t v28 = result;
            *uint64_t v44 = result;
          }
          if (v18 >= *(void *)(v28 + 16)) {
            goto LABEL_35;
          }
          unint64_t v29 = v28 + v36 + v34;
          unint64_t v30 = *v33;
          uint64_t result = (*v33)(v29, v42, v7);
          if (v23 >= *(void *)(*v44 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = v30(*v44 + v22, v41, v7);
          uint64_t v24 = v43;
        }
        BOOL v31 = __OFADD__(v18++, 1);
        a1 = v39;
        if (v31) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v23 + 1;
      uint64_t v14 = v37;
      if (__OFADD__(v23, 1)) {
        goto LABEL_30;
      }
      unint64_t v15 = *v44;
      unint64_t v21 = *(void *)(*v44 + 16);
      ++v23;
      v22 += v45;
      if (v32 == v21) {
        return v18;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006C02C8()
{
  return sub_1006BF93C() & 1;
}

id sub_1006C02E4()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  swift_beginAccess();
  sub_1000AEF2C(v1, (uint64_t)&v7, &qword_100955A00);
  if (v8)
  {
    sub_10005C2B0(&v7, &v9);
    uint64_t v2 = (void **)&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player];
    swift_beginAccess();
    uint64_t v3 = *v2;
    if (*v2)
    {
      swift_endAccess();
      sub_10007E4EC(&v9, v10);
      id v4 = v3;
      [v4 removeTimeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();

      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v9);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v9);
      swift_endAccess();
    }
  }
  else
  {
    sub_10008DB18((uint64_t)&v7, &qword_100955A00);
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for RingCelebrationViewController();
  return [super dealloc];
}

uint64_t sub_1006C0514()
{
  return type metadata accessor for RingCelebrationViewController();
}

uint64_t type metadata accessor for RingCelebrationViewController()
{
  uint64_t result = qword_100969200;
  if (!qword_100969200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1006C0568()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v7 = (char *)&v110 - v6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v110 - v13;
  unint64_t v15 = (objc_class *)type metadata accessor for RingCelebrationViewController();
  v122.receiver = v1;
  v122.super_class = v15;
  [super viewDidLoad];
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v17 = result;
  id v18 = [self blackColor];
  [v17 setBackgroundColor:v18];

  id v19 = [self celebrationMovieURLForGoalType:1];
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return (id)sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10094B790);
  }
  unint64_t v20 = v19;
  uint64_t v115 = v14;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v7, v11, v8);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  v22(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return (id)sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10094B790);
  }
  unint64_t v23 = v115;
  v21(v115, v7, v8);
  uint64_t v111 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v23, v8);
  uint64_t v112 = v8;
  v22(v4, 0, 1, v8);
  uint64_t v24 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  swift_beginAccess();
  sub_1000B1774((uint64_t)v4, v24, (uint64_t *)&unk_10094B790);
  swift_endAccess();
  [v1 configurePlayer];
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel];
  uint64_t v26 = self;
  id v27 = [v26 mainBundle];
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v27 localizedStringForKey:v28 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setText:v30];

  [v25 setTextAlignment:1];
  id v114 = v25;
  [v25 setNumberOfLines:0];
  BOOL v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel];
  id v32 = [v26 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v35];

  [v31 setTextAlignment:1];
  [v31 setNumberOfLines:0];
  id result = [v1 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v36 = result;
  uint64_t v37 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView];
  [result addSubview:v37];

  id result = [v1 view];
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v38 = result;
  [result addSubview:v114];

  id result = [v1 view];
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v39 = result;
  [result addSubview:v31];

  id v40 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v40 _scaledValueForValue:-40.0];
  double v42 = v41;

  id v43 = [v31 lastBaselineAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v44 = result;
  id v113 = v31;
  id v45 = [result safeAreaLayoutGuide];

  id v46 = [v45 bottomAnchor];
  id v47 = [v43 constraintEqualToAnchor:v46 constant:v42];

  uint64_t v48 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  BOOL v49 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint] = v47;

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_10075C8A0;
  id v51 = [v37 topAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v52 = result;
  id v53 = [result topAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53];
  *(void *)(v50 + 32) = v54;
  id v55 = [v37 leadingAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v56 = result;
  id v57 = [result leadingAnchor];

  id v58 = [v55 constraintEqualToAnchor:v57];
  *(void *)(v50 + 40) = v58;
  id v59 = [v37 trailingAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v60 = result;
  uint64_t v110 = v48;
  id v61 = [result trailingAnchor];

  id v62 = [v59 constraintEqualToAnchor:v61];
  *(void *)(v50 + 48) = v62;
  id v63 = [v37 bottomAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v64 = result;
  id v65 = [result bottomAnchor];

  id v66 = [v63 constraintEqualToAnchor:v65];
  *(void *)(v50 + 56) = v66;
  id v67 = v114;
  id v68 = [v114 leadingAnchor];
  id result = [v1 view];
  id v69 = v113;
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v70 = result;
  id v71 = [result leadingAnchor];

  id v72 = [v68 constraintEqualToAnchor:v71 constant:16.0];
  *(void *)(v50 + 64) = v72;
  id v73 = [v67 trailingAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v74 = result;
  id v75 = [result trailingAnchor];

  id v76 = [v73 constraintEqualToAnchor:v75 constant:-16.0];
  *(void *)(v50 + 72) = v76;
  id v77 = [v67 bottomAnchor];
  id v78 = [v69 topAnchor];
  id v79 = [v77 constraintEqualToAnchor:v78];

  *(void *)(v50 + 80) = v79;
  id v80 = [v69 leadingAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v81 = result;
  id v82 = [result leadingAnchor];

  id v83 = [v80 constraintEqualToAnchor:v82 constant:16.0];
  *(void *)(v50 + 88) = v83;
  id v84 = [v69 trailingAnchor];
  id result = [v1 view];
  uint64_t v85 = v110;
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  char v86 = result;
  long long v87 = self;
  id v88 = [v86 trailingAnchor];

  id v89 = [v84 constraintEqualToAnchor:v88];
  id v90 = *(void **)&v1[v85];
  *(void *)(v50 + 96) = v89;
  *(void *)(v50 + 104) = v90;
  long long aBlock = (void **)v50;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v91 = v90;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v87 activateConstraints:isa];

  id v93 = self;
  id v94 = [v93 defaultCenter];
  [v94 addObserver:v1 selector:"textSizeChangedWithNotification:" name:UIContentSizeCategoryDidChangeNotification object:0];

  id v95 = [v93 defaultCenter];
  [v95 addObserver:v1 selector:"appWillResignActive:" name:UIApplicationWillResignActiveNotification object:0];

  id v96 = [v93 defaultCenter];
  id v97 = self;
  id v98 = [v97 mainQueue];
  uint64_t v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v120 = sub_1006C3CEC;
  uint64_t v121 = v99;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v117 = 1107296256;
  uint64_t v118 = sub_1000711BC;
  id v119 = &unk_1008D6E58;
  id v100 = _Block_copy(&aBlock);
  swift_release();
  id v101 = [v96 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v98 usingBlock:v100];
  _Block_release(v100);

  swift_unknownObjectRelease();
  id v102 = [v93 defaultCenter];
  id v103 = [v97 mainQueue];
  uint64_t v104 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v120 = sub_1006C3CF4;
  uint64_t v121 = v104;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v117 = 1107296256;
  uint64_t v118 = sub_1000711BC;
  id v119 = &unk_1008D6E80;
  id v105 = _Block_copy(&aBlock);
  swift_release();
  id v106 = [v102 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v103 usingBlock:v105];
  _Block_release(v105);

  swift_unknownObjectRelease();
  if (v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] != 1)
  {
    [v114 setAlpha:0.0];
    [v113 setAlpha:0.0];
    uint64_t v108 = v111;
    uint64_t v107 = v112;
    return (id)(*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v115, v107);
  }
  id result = [v1 view];
  uint64_t v108 = v111;
  uint64_t v107 = v112;
  if (result)
  {
    id v109 = result;
    [result setAlpha:0.0];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v115, v107);
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1006C1490()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong configurePlayer];
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = (id *)(v2 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
    swift_beginAccess();
    id v5 = *v4;

    [v5 play];
  }
}

void sub_1006C1554()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong teardownPlayer];
  }
}

void sub_1006C16A0(char a1)
{
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for RingCelebrationViewController();
  [super viewDidAppear:a1 & 1];
  [v1 configurePlayer];
  int v3 = v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade];
  id v4 = self;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  if (v3 == 1)
  {
    unint64_t v21 = (uint64_t (*)())sub_1006C3C8C;
    uint64_t v22 = v5;
    unint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    id v19 = sub_100070394;
    unint64_t v20 = &unk_1008D6DE0;
    uint64_t v6 = _Block_copy(&v17);
    long long v7 = v1;
    swift_release();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    unint64_t v21 = sub_1006C3C88;
    uint64_t v22 = v8;
    unint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    id v19 = sub_1004AE478;
    unint64_t v20 = &unk_1008D6E30;
    uint64_t v9 = _Block_copy(&v17);
    uint64_t v10 = v7;
    swift_release();
    [v4 animateWithDuration:v6 animations:v9 completion:0.5];
    _Block_release(v9);
    _Block_release(v6);
  }
  else
  {
    unint64_t v21 = (uint64_t (*)())sub_1006C3C18;
    uint64_t v22 = v5;
    unint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    id v19 = sub_100070394;
    unint64_t v20 = &unk_1008D6D40;
    uint64_t v11 = _Block_copy(&v17);
    uint64_t v12 = v1;
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    unint64_t v21 = sub_1006C3C88;
    uint64_t v22 = v13;
    unint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    id v19 = sub_1004AE478;
    unint64_t v20 = &unk_1008D6D90;
    uint64_t v14 = _Block_copy(&v17);
    unint64_t v15 = v12;
    swift_release();
    [v4 animateWithDuration:v11 animations:v14 completion:0.3];
    _Block_release(v14);
    _Block_release(v11);
    uint64_t v16 = (id *)&v15[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player];
    swift_beginAccess();
    [*v16 play];
  }
}

void sub_1006C19E4(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    id v2 = v1;
    [v1 setAlpha:1.0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006C1C88(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  type metadata accessor for MainActor();
  v2[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[11] = v4;
  v2[12] = v3;
  return _swift_task_switch(sub_1006C1D20, v4, v3);
}

uint64_t sub_1006C1D20()
{
  uint64_t v1 = (id *)(v0[9] + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  swift_beginAccess();
  if (*v1 && (id v2 = [*v1 currentItem]) != 0)
  {
    uint64_t v3 = v2;
    v0[13] = [v2 asset];

    sub_1000AFA94(&qword_10094FDA8);
    uint64_t v4 = static AVPartialAsyncProperty<A>.duration.getter();
    v0[14] = v4;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[15] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1006C1E8C;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 2, v4);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1006C1E8C()
{
  uint64_t v3 = *v1;
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void **)(v2 + 104);
  if (v0)
  {
    swift_errorRelease();

    swift_release();
    uint64_t v5 = *(void *)(v3 + 88);
    uint64_t v6 = *(void *)(v3 + 96);
    long long v7 = sub_10059A0B4;
  }
  else
  {

    swift_release();
    uint64_t v5 = *(void *)(v3 + 88);
    uint64_t v6 = *(void *)(v3 + 96);
    long long v7 = sub_1006C1FF4;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1006C1FF4()
{
  uint64_t result = swift_release();
  unint64_t v2 = *(void *)(v0 + 16);
  if ((v2 & 0x8000000000000000) != 0) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  unint64_t v3 = *(unsigned int *)(v0 + 24);
  if ((v3 & 0x80000000) != 0) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  if (!v3)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = v2 / v3;
  if (!is_mul_ok(v4, 0x3B9ACA00uLL))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if ((double)(1000000000 * v4) * 0.9 < (double)*(uint64_t *)(v0 + 64)) {
    sub_1006C21F4();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_1006C21F4()
{
  if ((v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 1;
    uint64_t v1 = self;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v0;
    uint64_t v12 = sub_1006C3BF8;
    uint64_t v13 = v2;
    uint64_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v10 = sub_100070394;
    uint64_t v11 = &unk_1008D6C00;
    unint64_t v3 = _Block_copy(&v8);
    unint64_t v4 = v0;
    swift_release();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    uint64_t v12 = sub_1006C3C00;
    uint64_t v13 = v5;
    uint64_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v10 = sub_1004AE478;
    uint64_t v11 = &unk_1008D6C50;
    uint64_t v6 = _Block_copy(&v8);
    long long v7 = v4;
    swift_release();
    [v1 animateKeyframesWithDuration:0 delay:v3 options:v6 animations:1.5 completion:0.0];
    _Block_release(v6);
    _Block_release(v3);
  }
}

void sub_1006C2398(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v13 = sub_1006C3C08;
  uint64_t v14 = v3;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100070394;
  uint64_t v12 = &unk_1008D6CA0;
  unint64_t v4 = _Block_copy(&v9);
  id v5 = a1;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v4 relativeDuration:0.0 animations:0.5];
  _Block_release(v4);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v13 = sub_1006C3C10;
  uint64_t v14 = v6;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100070394;
  uint64_t v12 = &unk_1008D6CF0;
  long long v7 = _Block_copy(&v9);
  id v8 = v5;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v7 relativeDuration:0.5 animations:1.0];
  _Block_release(v7);
}

void sub_1006C2540(void *a1)
{
  id v2 = [a1 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  id v4 = [self clearColor];
  [v3 setBackgroundColor:v4];

  id v5 = [a1 view];
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 setAlpha:0.0];
}

id sub_1006C2614(uint64_t a1, void *a2)
{
  static os_log_type_t.default.getter();
  id v3 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  return [a2 dismissViewControllerAnimated:0 completion:0];
}

id sub_1006C26F4(uint64_t a1, uint64_t a2, void *a3)
{
  v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player] = 0;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer] = 0;
  id v4 = &v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  id v6 = &v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  *id v6 = 0u;
  v6[1] = 0u;
  v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 0;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView;
  id v8 = objc_allocWithZone((Class)UIView);
  uint64_t v9 = v3;
  id v10 = [v8 init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v7] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel;
  id v12 = [objc_allocWithZone((Class)UILabel) init];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t v13 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  uint64_t v14 = (void *)UILabel.withFont(_:)();

  unint64_t v15 = self;
  id v16 = [v15 whiteColor];
  uint64_t v17 = UILabel.withTextColor(_:)();

  *(void *)&v9[v11] = v17;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) init];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v30 = 1;
  unint64_t v20 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  unint64_t v21 = (void *)UILabel.withFont(_:)();

  id v22 = [v15 fu_systemTextGreyColor];
  [v21 setTextColor:v22];

  *(void *)&v9[v18] = v21;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  *(void *)&v9[v23] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  if (a2)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  v29.receiver = v9;
  v29.super_class = (Class)type metadata accessor for RingCelebrationViewController();
  id v25 = [super initWithNibName:v24 bundle:a3];

  return v25;
}

id sub_1006C2AA0(void *a1)
{
  v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_observers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer] = 0;
  id v2 = &v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  id v4 = &v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  *id v4 = 0u;
  v4[1] = 0u;
  v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 0;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView;
  id v6 = objc_allocWithZone((Class)UIView);
  uint64_t v7 = v1;
  id v8 = [v6 init];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v5] = v8;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t v11 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  id v12 = (void *)UILabel.withFont(_:)();

  uint64_t v13 = self;
  id v14 = [v13 whiteColor];
  uint64_t v15 = UILabel.withTextColor(_:)();

  *(void *)&v7[v9] = v15;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) init];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v26 = 1;
  uint64_t v18 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  id v19 = (void *)UILabel.withFont(_:)();

  id v20 = [v13 fu_systemTextGreyColor];
  [v19 setTextColor:v20];

  *(void *)&v7[v16] = v19;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  *(void *)&v7[v21] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  v25.receiver = v7;
  v25.super_class = (Class)type metadata accessor for RingCelebrationViewController();
  id v22 = [super initWithCoder:a1];

  return v22;
}

void sub_1006C2DE8()
{
  sub_1001F7DF0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1006C2EBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&epoch - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&epoch - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player];
  uint64_t result = swift_beginAccess();
  if (!*v9)
  {
    uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer;
    if (!*(void *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer])
    {
      uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
      swift_beginAccess();
      sub_1000AEF2C(v12, (uint64_t)v4, (uint64_t *)&unk_10094B790);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        return sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10094B790);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        id v13 = objc_allocWithZone((Class)AVPlayerItem);
        URL._bridgeToObjectiveC()(v14);
        uint64_t v16 = v15;
        id v17 = [v13 initWithURL:v15];
        id v40 = v17;

        id v18 = [objc_allocWithZone((Class)AVPlayer) init];
        [v18 _setParticipatesInAudioSession:0];
        [v18 setActionAtItemEnd:1];
        [v18 replaceCurrentItemWithPlayerItem:v17];
        id v19 = [self playerLayerWithPlayer:v18];
        [v19 setVideoGravity:AVLayerVideoGravityResizeAspect];
        id v20 = *v9;
        char *v9 = v18;
        id v21 = v18;
        id v38 = v21;

        id v22 = *(void **)&v1[v11];
        *(void *)&v1[v11] = v19;
        id v23 = v19;
        id v39 = v23;

        id v24 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView] layer];
        [v24 addSublayer:v23];

        id v25 = [self defaultCenter];
        NSString v26 = String._bridgeToObjectiveC()();
        id v27 = [v21 currentItem];
        [v25 addObserver:v1 selector:"beginFadeOut" name:v26 object:v27];

        __C::CMTime v47 = CMTime.init(seconds:preferredTimescale:)(0.1, 1000000000);
        Swift::Int64 value = v47.value;
        LODWORD(v26) = v47.timescale;
        Swift::Int64 epoch = v47.epoch;
        uint64_t v29 = HIDWORD(*(void *)&v47.timescale);
        sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
        char v30 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v1;
        id v45 = sub_1006C3AA4;
        uint64_t v46 = v31;
        long long aBlock = _NSConcreteStackBlock;
        unint64_t v42 = 1107296256;
        id v43 = sub_1006C38C0;
        uint64_t v44 = &unk_1008D6B60;
        id v32 = _Block_copy(&aBlock);
        NSString v33 = v1;
        swift_release();
        long long aBlock = (void **)value;
        unint64_t v42 = __PAIR64__(v29, v26);
        id v34 = v38;
        id v43 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
        id v35 = [v38 addPeriodicTimeObserverForInterval:&aBlock queue:v30 usingBlock:v32];
        _Block_release(v32);

        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        uint64_t v36 = (uint64_t)&v33[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
        swift_beginAccess();
        sub_1000B1774((uint64_t)&aBlock, v36, &qword_100955A00);
        swift_endAccess();

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  return result;
}

uint64_t sub_1006C33EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v4 = a2;
  unint64_t v6 = HIDWORD(a2);
  uint64_t v7 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = v11;
  *(void *)(v13 + 40) = a1;
  *(_DWORD *)(v13 + 48) = v4;
  *(_DWORD *)(v13 + 52) = v6;
  *(void *)(v13 + 56) = a3;
  swift_release();
  sub_1000693DC((uint64_t)v9, (uint64_t)&unk_100969220, v13);
  return swift_release();
}

uint64_t sub_1006C355C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  void v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  type metadata accessor for MainActor();
  v7[10] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[11] = v9;
  v7[12] = v8;
  return _swift_task_switch(sub_1006C35FC, v9, v8);
}

uint64_t sub_1006C35FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 104) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1006C370C;
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_1006C1C88(v3);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 104) == 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1006C370C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 104);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_1006C384C, v4, v3);
}

uint64_t sub_1006C384C()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 104) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006C38C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);

  return swift_release();
}

void sub_1006C3974()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  swift_beginAccess();
  if (*v1) {
    [*v1 replaceCurrentItemWithPlayerItem:0];
  }
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer);
  if (v3)
  {
    [v3 setPlayer:0];
    uint64_t v4 = *(void **)(v0 + v2);
    if (v4) {
      [v4 removeFromSuperlayer];
    }
  }
  id v5 = *v1;
  *uint64_t v1 = 0;

  uint64_t v6 = *(void **)(v0 + v2);
  *(void *)(v0 + v2) = 0;
}

uint64_t sub_1006C3A6C()
{
  return swift_deallocObject();
}

uint64_t sub_1006C3AA4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1006C33EC(a1, a2, a3);
}

uint64_t sub_1006C3AAC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006C3AE4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006C3B24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10005DB5C;
  return sub_1006C355C(a1, v4, v5, v6, v7, v9, v8);
}

void sub_1006C3BF8()
{
  sub_1006C2398(*(void **)(v0 + 16));
}

id sub_1006C3C00(uint64_t a1)
{
  return sub_1006C2614(a1, *(void **)(v1 + 16));
}

id sub_1006C3C08()
{
  return sub_1006C3C20(0.0);
}

void sub_1006C3C10()
{
  sub_1006C2540(*(void **)(v0 + 16));
}

id sub_1006C3C18()
{
  return sub_1006C3C20(1.0);
}

id sub_1006C3C20(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel) setAlpha:];
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel);

  return [v4 setAlpha:a1];
}

void sub_1006C3C8C()
{
  sub_1006C19E4(*(void **)(v0 + 16));
}

id sub_1006C3C94()
{
  uint64_t v1 = (id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  swift_beginAccess();
  return [*v1 play];
}

void sub_1006C3CEC()
{
}

void sub_1006C3CF4()
{
}

void sub_1006C3D60(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0x80000001007C9E60;
  unint64_t v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001007C9E40;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x4547444142;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

id sub_1006C3DC4()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleTitle2];
  qword_1009988B0 = (uint64_t)result;
  return result;
}

char *sub_1006C3E0C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  id v12 = [v10 init];
  uint64_t v13 = (void *)UILabel.withNumberOfLines(_:)();

  id v14 = (void *)UILabel.withLineBreakMode(_:)();
  if (qword_10094B0F0 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)UILabel.withFont(_:)();

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v9] = v15;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  uint64_t v16 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label];
  id v18 = v16;
  [v18 addSubview:v17];
  sub_1006C4228();

  return v18;
}

id sub_1006C3F90(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label;
  id v4 = objc_allocWithZone((Class)UILabel);
  unint64_t v5 = v1;
  id v6 = [v4 init];
  uint64_t v7 = (void *)UILabel.withNumberOfLines(_:)();

  uint64_t v8 = (void *)UILabel.withLineBreakMode(_:)();
  if (qword_10094B0F0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)UILabel.withFont(_:)();

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v3] = v9;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  id v10 = [super initWithCoder:a1];

  return v10;
}

void sub_1006C40D0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label);
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v5];
}

void sub_1006C4228()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 constant:25.0];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-10.0];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 trailingAnchor];
  id v12 = [v1 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 leadingAnchor];
  id v15 = [v1 leadingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_1006C449C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView()
{
  return self;
}

void sub_1006C4504()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation) == 1
      && *(unsigned char *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear) == 1
      && (*(unsigned char *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted) & 1) == 0)
    {
      sub_1006C7C4C();
    }
  }
}

id sub_1006C4794()
{
  sub_10007E4EC(&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider], *(void *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider + 24]);
  sub_100067C2C((unint64_t *)&unk_10095B790, v1, (void (*)(uint64_t))type metadata accessor for TrophyCaseAwardDetailViewController);
  objc_super v2 = v0;
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  return [super dealloc];
}

void sub_1006C4A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  objc_super v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  id v12 = (char *)&v55 - v11;
  if (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1
    && v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowCelebration] == 1)
  {
    id v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement];
    if ((objc_msgSend(v13, "unearned", v10) & 1) == 0)
    {
      id v14 = [v13 template];
      id v15 = [v14 uniqueName];

      if (!v15)
      {
        __break(1u);
        goto LABEL_17;
      }
      id v16 = [self celebrationMovieURLForAchievementIdentifer:v15];

      if (v16)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v17(v4, v8, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v17(v12, v4, v5);
          id v18 = [v1 view];
          if (v18)
          {
            id v19 = v18;
            objc_super v20 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer];
            [v18 addSubview:v20];

            id v21 = [v20 topAnchor];
            id v22 = [v1 view];
            if (v22)
            {
              id v23 = v22;
              id v24 = [v22 topAnchor];

              id v25 = [v21 constraintEqualToAnchor:v24];
              [v25 setActive:1];

              id v26 = [v20 leadingAnchor];
              id v27 = [v1 view];
              if (v27)
              {
                NSString v28 = v27;
                id v29 = [v27 leadingAnchor];

                id v30 = [v26 constraintEqualToAnchor:v29];
                [v30 setActive:1];

                id v31 = [v20 trailingAnchor];
                id v32 = [v1 view];
                if (v32)
                {
                  NSString v33 = v32;
                  id v34 = [v32 trailingAnchor];

                  id v35 = [v31 constraintEqualToAnchor:v34];
                  [v35 setActive:1];

                  id v36 = [v20 bottomAnchor];
                  id v37 = [v1 view];
                  if (v37)
                  {
                    id v38 = v37;
                    id v39 = [v37 safeAreaLayoutGuide];

                    id v40 = [v39 bottomAnchor];
                    id v41 = [v36 constraintEqualToAnchor:v40];

                    [v41 setActive:1];
                    id v42 = objc_allocWithZone((Class)AVPlayer);
                    URL._bridgeToObjectiveC()(v43);
                    id v45 = v44;
                    id v46 = [v42 initWithURL:v44];

                    [v46 setActionAtItemEnd:1];
                    id v47 = [self playerLayerWithPlayer:v46];
                    [v47 setVideoGravity:AVLayerVideoGravityResizeAspectFill];
                    uint64_t v48 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer];
                    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = v46;
                    id v49 = v46;

                    uint64_t v50 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer];
                    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = v47;
                    id v51 = v47;

                    id v52 = [v20 layer];
                    [v52 addSublayer:v51];

                    id v53 = [self defaultCenter];
                    id v54 = [v49 currentItem];
                    [v53 addObserver:v1 selector:"playerFinished:" name:AVPlayerItemDidPlayToEndTimeNotification object:v54];

                    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
                    return;
                  }
                  goto LABEL_21;
                }
LABEL_20:
                __break(1u);
LABEL_21:
                __break(1u);
                return;
              }
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      sub_1001C8AF0((uint64_t)v4);
    }
  }
}

void sub_1006C51C4(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  [super viewDidAppear:a1 & 1];
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer];
  if (v3)
  {
    [v3 play];
  }
  else if (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1 {
         && (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] & 1) == 0)
  }
  {
    sub_1006C7C4C();
  }
}

void sub_1006C52B4()
{
  if (v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1
    && (v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 1;
    id v1 = [v0 collectionView];
    if (v1)
    {
      id v2 = v1;
      [v1 setAlpha:0.0];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1006C543C(char a1)
{
  id v3 = [v1 navigationController];
  if (!v3) {
    return;
  }
  id v16 = v3;
  id v4 = [v3 viewControllers];
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 >= 2)
  {
    id v7 = [v16 viewControllers];
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v9 - 2;
    if (__OFSUB__(v9, 2))
    {
      __break(1u);
    }
    else
    {
      id v11 = [v16 viewControllers];
      uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v12 & 0xC000000000000001) == 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v13 = *(id *)(v12 + 8 * v10 + 32);
LABEL_12:
          id v14 = v13;
          swift_bridgeObjectRelease();
          id v19 = &OBJC_PROTOCOL___UINavigationControllerDelegate;
          if (swift_dynamicCastObjCProtocolConditional()) {
            [v16 setDelegate:];
          }
          id v18 = &OBJC_PROTOCOL___CHActivityHistoryPaletteNavigationController;
          id v15 = (void *)swift_dynamicCastObjCProtocolConditional();
          if (v15) {
            [v15 detachPalette];
          }
          v17.receiver = v1;
          v17.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
          [super viewWillAppear:a1 & 1];

          return;
        }
        __break(1u);
        return;
      }
    }
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
}

uint64_t sub_1006C5780(uint64_t result)
{
  if (result > 2) {
    return 0;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    if (!*((unsigned char *)&off_1008B7250 + result + 32))
    {
      id v24 = self;
      id v25 = [v24 mainScreen];
      [v25 bounds];
      CGFloat v27 = v26;
      CGFloat v29 = v28;
      CGFloat v31 = v30;
      CGFloat v33 = v32;

      v81.origin.CGFloat x = v27;
      v81.origin.CGFloat y = v29;
      v81.size.CGFloat width = v31;
      v81.size.CGFloat height = v33;
      double Height = CGRectGetHeight(v81);
      id v35 = [v24 mainScreen];
      [v35 scale];
      double v37 = v36;

      id v38 = self;
      id v39 = [v38 fractionalWidthDimension:1.0];
      double v40 = Height / v37 * 0.8;
      id v41 = [v38 estimatedDimension:v40];
      id v42 = self;
      id v43 = [v42 sizeWithWidthDimension:v39 heightDimension:v41];

      id v44 = [self itemWithLayoutSize:v43];
      [v44 setContentInsets:0.0, 0.0, 10.0, 0.0];
      id v45 = [v38 fractionalWidthDimension:1.0];
      id v46 = [v38 estimatedDimension:v40];
      id v47 = [v42 sizeWithWidthDimension:v45 heightDimension:v46];

      uint64_t v48 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_100751040;
      *(void *)(v49 + 32) = v44;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      id v50 = v44;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v52 = [v48 verticalGroupWithLayoutSize:v47 subitems:isa];

      id v20 = [self sectionWithGroup:v52];
      return (uint64_t)v20;
    }
    if (*((unsigned char *)&off_1008B7250 + result + 32) == 1)
    {
      id v1 = self;
      id v2 = [v1 fractionalWidthDimension:1.0];
      id v3 = [v1 estimatedDimension:80.0];
      id v4 = self;
      id v79 = [v4 sizeWithWidthDimension:v2 heightDimension:v3];

      id v5 = [self itemWithLayoutSize:v79];
      id v6 = [v1 fractionalWidthDimension:1.0];
      id v7 = [v1 estimatedDimension:80.0];
      id v8 = [v4 sizeWithWidthDimension:v6 heightDimension:v7];

      uint64_t v9 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_100751040;
      *(void *)(v10 + 32) = v5;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      id v11 = v5;
      Class v12 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v13 = [v9 verticalGroupWithLayoutSize:v8 subitems:v12];

      id v14 = [v1 fractionalWidthDimension:1.0];
      id v15 = [v1 estimatedDimension:0.0];
      id v16 = [v4 sizeWithWidthDimension:v14 heightDimension:v15];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v17 = v16;
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = [self boundarySupplementaryItemWithLayoutSize:v17 elementKind:v18 alignment:1];

      [v19 setContentInsets:0.0, 15.0, 0.0, 15.0];
      id v20 = [self sectionWithGroup:v13];
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_100751040;
      *(void *)(v21 + 32) = v19;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_100958760);
      id v22 = v19;
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 setBoundarySupplementaryItems:v23];

      return (uint64_t)v20;
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v54 = (void *)Strong;
      unint64_t v55 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
      swift_bridgeObjectRetain();

      if (!(v55 >> 62))
      {
LABEL_9:
        uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_10;
      }
    }
    else
    {
      unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    if (v56)
    {
      id v57 = self;
      id v58 = [v57 estimatedDimension:80.0];
      id v59 = [v57 estimatedDimension:100.0];
      uint64_t v60 = self;
      id v80 = [v60 sizeWithWidthDimension:v58 heightDimension:v59];

      id v61 = [self itemWithLayoutSize:v80];
      id v62 = [v57 estimatedDimension:80.0];
      id v63 = [v57 estimatedDimension:0.0];
      id v64 = [v60 sizeWithWidthDimension:v62 heightDimension:v63];

      id v65 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_100751040;
      *(void *)(v66 + 32) = v61;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      id v67 = v61;
      Class v68 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v69 = [v65 horizontalGroupWithLayoutSize:v64 subitems:v68];

      id v70 = [v57 fractionalWidthDimension:1.0];
      id v71 = [v57 estimatedDimension:0.0];
      id v72 = [v60 sizeWithWidthDimension:v70 heightDimension:v71];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v73 = v72;
      NSString v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v75 = [self boundarySupplementaryItemWithLayoutSize:v73 elementKind:v74 alignment:1];

      [v75 setContentInsets:0.0, 0.0, 0.0, 0.0];
      id v20 = [self sectionWithGroup:v69];
      [v20 setOrthogonalScrollingBehavior:1];
      uint64_t v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = xmmword_100751040;
      *(void *)(v76 + 32) = v75;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_100958760);
      id v77 = v75;
      Class v78 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 setBoundarySupplementaryItems:v78];

      [v20 setContentInsets:0.0, 15.0, 0.0, 15.0];
      return (uint64_t)v20;
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1006C629C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement) relevantEarnedInstance];
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 externalIdentifier];

    if (v12)
    {
      uint64_t v27 = v7;
      uint64_t v28 = v3;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      id v16 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider);
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v16 workoutForUUID:v17];

      if (v18)
      {
        swift_bridgeObjectRelease();
        id v19 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout);
        *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout) = v18;
        id v20 = v18;

        sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
        uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v22 = swift_allocObject();
        swift_unknownObjectWeakInit();
        CGFloat v33 = sub_10035DB4C;
        id v34 = (void *)v22;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v30 = 1107296256;
        CGFloat v31 = sub_100070394;
        double v32 = &unk_1008D7038;
        Class v23 = _Block_copy(&aBlock);
        swift_release();
        static DispatchQoS.unspecified.getter();
        long long aBlock = (void **)_swiftEmptyArrayStorage;
        sub_100067C2C((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AFA94((uint64_t *)&unk_1009555E0);
        sub_100075AF8();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v23);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
      }
      else
      {
        uint64_t v24 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v25 = (void *)swift_allocObject();
        v25[2] = v24;
        v25[3] = v13;
        void v25[4] = v15;
        CGFloat v33 = sub_1006CA2B0;
        id v34 = v25;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v30 = 1107296256;
        CGFloat v31 = sub_100070394;
        double v32 = &unk_1008D7010;
        double v26 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v16 addUpdateHandler:v26];
        _Block_release(v26);
        swift_release();
      }
    }
  }
}

void sub_1006C6718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v14 = *(void *)&Strong[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout],
        Strong,
        !v14))
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v20 = static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    uint64_t v21 = v9;
    swift_beginAccess();
    id v16 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    NSString v17 = (void *)swift_allocObject();
    v17[2] = v15;
    v17[3] = a2;
    v17[4] = a3;
    aBlock[4] = sub_1006CA300;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008D7088;
    id v18 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100067C2C((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v19 = (void *)v20;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  }
}

void sub_1006C6A70()
{
  uint64_t v0 = type metadata accessor for IndexSet();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      id v8 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider);

      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v8 workoutForUUID:v9];
    }
    else
    {
      id v10 = 0;
    }
    uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout];
    *(void *)&v5[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = v10;
  }
  swift_beginAccess();
  id v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 collectionView];

    if (v14)
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        swift_bridgeObjectRelease();
      }
      IndexSet.init(integer:)();
      IndexSet._bridgeToObjectiveC()(v16);
      id v18 = v17;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      [v14 reloadSections:v18];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for TrophyCaseAwardDetailViewController()
{
  return self;
}

void sub_1006C6E90(void *a1)
{
  id v1 = [a1 collectionView];
  if (v1)
  {
    id v2 = v1;
    [v1 reloadData];
  }
  else
  {
    __break(1u);
  }
}

id sub_1006C6F4C(id a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = IndexPath.section.getter();
  if (v9 <= 2)
  {
    if (v9 < 0)
    {
      __break(1u);
    }
    else
    {
      if (!*((unsigned char *)&off_1008B7228 + v9 + 32))
      {
        NSString v21 = String._bridgeToObjectiveC()();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        a1 = [a1 dequeueReusableCellWithReuseIdentifier:v21 forIndexPath:isa];

        type metadata accessor for TrophyCaseAwardDetailBadgeCell();
        uint64_t v23 = swift_dynamicCastClass();
        if (!v23) {
          return a1;
        }
        uint64_t v24 = (void *)v23;
        id v25 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider);
        double v26 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator);
        id v27 = a1;
        [v25 setPaused:[v26 isPaused]];
        uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement);
        char v29 = *(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowEarned);
        sub_10007E4EC((void *)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider), *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider + 24));
        char v30 = dispatch thunk of AAUIAwardsDataProviding.shouldShowProgressBar(for:)();
        sub_1005BEF8C(v28, v29, v30 & 1, *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView), *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider), v25, *(unsigned char *)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend));
        a1 = v27;
        sub_1006C8AD4(v24);

LABEL_21:
        return a1;
      }
      if (*((unsigned char *)&off_1008B7228 + v9 + 32) == 1)
      {
        NSString v10 = String._bridgeToObjectiveC()();
        Class v11 = IndexPath._bridgeToObjectiveC()().super.isa;
        a1 = [a1 dequeueReusableCellWithReuseIdentifier:v10 forIndexPath:v11];

        type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
        if (!swift_dynamicCastClass()) {
          return a1;
        }
        id v12 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout);
        if (!v12) {
          return a1;
        }
        uint64_t v13 = *(void *)(v3
                        + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider
                        + 24);
        v36[1] = *(void *)(v3
                           + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider
                           + 32);
        v36[0] = sub_10007E4EC((void *)(v3+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider), v13);
        a1 = a1;
        id v2 = v12;
        id v14 = [v2 UUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        UUID.uuidString.getter();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        unint64_t v15 = dispatch thunk of AAUIAwardsDataProviding.achievements(forWorkoutIdentifier:)();
        swift_bridgeObjectRelease();
        id v16 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext);
        unint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager);
        if (!(v15 >> 62))
        {
          uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
          swift_bridgeObjectRelease();
          sub_10058AE8C(v2, v16, (void *)v17, v18);

          return a1;
        }
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      NSString v31 = String._bridgeToObjectiveC()();
      Class v32 = IndexPath._bridgeToObjectiveC()().super.isa;
      a1 = [a1 dequeueReusableCellWithReuseIdentifier:v31 forIndexPath:v32];

      type metadata accessor for TrophyCaseAwardDetailFriendCell();
      uint64_t v33 = swift_dynamicCastClass();
      if (!v33) {
        return a1;
      }
      id v16 = (void *)v33;
      a1 = a1;
      unint64_t v34 = IndexPath.row.getter();
      unint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
      if ((v17 & 0xC000000000000001) == 0)
      {
        if ((v34 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v34 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v35 = *(id *)(v17 + 8 * v34 + 32);
LABEL_20:
          sub_1005E571C(v35);

          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRetain();
    id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  id v19 = objc_allocWithZone((Class)UICollectionViewCell);

  return [v19 init];
}

double sub_1006C7820()
{
  uint64_t v1 = self;
  id v2 = [v1 mainScreen];
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v24.origin.CGFloat x = v4;
  v24.origin.CGFloat y = v6;
  v24.size.CGFloat width = v8;
  v24.size.CGFloat height = v10;
  double Width = CGRectGetWidth(v24);
  id v12 = [v1 mainScreen];
  [v12 bounds];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  v25.origin.CGFloat x = v14;
  v25.origin.CGFloat y = v16;
  v25.size.CGFloat width = v18;
  v25.size.CGFloat height = v20;
  CGRectGetHeight(v25);
  id v21 = [v0 navigationController];
  if (v21)
  {
    uint64_t v22 = v21;
    [v21 _topBarHeight];
  }
  return (Width - Width * 0.76) * 0.5;
}

void sub_1006C797C()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell);
  if (v1)
  {
    id v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView];
    if (v2)
    {
      double v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer];
      CGFloat v4 = v1;
      id v5 = v2;
      [v3 addSubview:v5];
      id v7 = v5;
      [v3 bounds];
      double MidX = CGRectGetMidX(v9);
      [v3 bounds];
      [v7 setCenter:MidX, CGRectGetMidY(v10)];
    }
  }
}

void sub_1006C7C4C()
{
  if (*(void *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell])
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 1;
    uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView];
    [v0 badgeFrame];
    [v1 setFrame:];
    [v1 resizeBadgeForCurrentViewSize];
    [v0 placeBadgeViewInContainer];
    if ([*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement] unearned])
    {
      CGFloat v2 = 0.75;
      double v3 = 0.5;
    }
    else
    {
      [v1 setPaused:0];
      [v1 playFlipInAnimation];
      CGFloat v2 = 0.5;
      double v3 = 1.0;
    }
    CGAffineTransformMakeScale(&v19, v2, v2);
    CGFloat a = v19.a;
    CGFloat b = v19.b;
    CGFloat c = v19.c;
    CGFloat d = v19.d;
    tCGFloat x = v19.tx;
    tCGFloat y = v19.ty;
    id v10 = [v0 collectionView];
    if (v10)
    {
      Class v11 = v10;
      v19.CGFloat a = a;
      v19.CGFloat b = b;
      v19.CGFloat c = c;
      v19.CGFloat d = d;
      v19.tCGFloat x = tx;
      v19.tCGFloat y = ty;
      [v10 setTransform:&v19];

      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v0;
      double v13 = self;
      *(void *)&v19.tCGFloat x = sub_1006CA25C;
      *(void *)&v19.tCGFloat y = v12;
      *(void *)&v19.CGFloat a = _NSConcreteStackBlock;
      *(void *)&v19.CGFloat b = 1107296256;
      *(void *)&v19.CGFloat c = sub_100070394;
      *(void *)&v19.CGFloat d = &unk_1008D6F20;
      CGFloat v14 = _Block_copy(&v19);
      double v15 = v0;
      swift_retain();
      swift_release();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v15;
      *(void *)&v19.tCGFloat x = sub_1006CA264;
      *(void *)&v19.tCGFloat y = v16;
      *(void *)&v19.CGFloat a = _NSConcreteStackBlock;
      *(void *)&v19.CGFloat b = 1107296256;
      *(void *)&v19.CGFloat c = sub_1004AE478;
      *(void *)&v19.CGFloat d = &unk_1008D6F70;
      double v17 = _Block_copy(&v19);
      CGFloat v18 = v15;
      swift_release();
      [v13 animateWithDuration:v14 animations:v17 completion:v3];
      _Block_release(v17);
      _Block_release(v14);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 1;
  }
}

void sub_1006C7F38(void *a1)
{
  id v2 = [a1 collectionView];
  if (v2)
  {
    double v3 = v2;
    v6[0] = 0x3FF0000000000000;
    v6[1] = 0;
    _OWORD v6[2] = 0;
    v6[3] = 0x3FF0000000000000;
    v6[4] = 0;
    v6[5] = 0;
    [v2 setTransform:v6];

    id v4 = [a1 collectionView];
    if (v4)
    {
      id v5 = v4;
      [v4 setAlpha:1.0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1006C7FE0(int a1, id a2)
{
  id v2 = [a2 navigationController];
  if (v2)
  {
    id v3 = v2;
    [v2 setNavigationBarHidden:0 animated:0];
  }
}

id sub_1006C8050(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, char a13, char a14, char a15, char a16, char a17, char *a18, uint64_t a19, uint64_t a20)
{
  v89[3] = a19;
  v89[4] = a20;
  id v73 = sub_1000B1710(v89);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a19 - 8) + 32))(v73, a4, a19);
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer;
  id v26 = objc_allocWithZone((Class)UIView);
  id v27 = a18;
  id v28 = [v26 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v29 = [self blackColor];
  [v28 setBackgroundColor:v29];

  uint64_t v30 = UIView.forAutoLayout()();
  *(void *)&a18[v25] = v30;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell] = 0;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = 0;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = 0;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = 0;
  NSString v31 = &v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
  *(void *)NSString v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v84 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement] = _swiftEmptyArrayStorage;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement] = a1;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_healthStore] = a2;
  sub_10008E75C((uint64_t)v89, (uint64_t)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider]);
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeImageFactory] = a5;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider] = a6;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formattingManager] = a7;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider] = a8;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator] = a9;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext] = a10;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager] = a11;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider] = a12;
  id v76 = objc_allocWithZone((Class)AAUIBadgeView);
  id v32 = a1;
  id v71 = a2;
  id v72 = a5;
  id v75 = a6;
  id v80 = a7;
  id v83 = a8;
  id v70 = a9;
  id v77 = a10;
  id v78 = a11;
  id v81 = a12;
  id v33 = [v76 initUsingEarnedShader:a15 & 1];
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView] = v33;
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendListManager] = a3;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] = a13;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowCelebration] = a14;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowEarned] = a15;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowAssociatedWorkout] = a16;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend] = a17;
  type metadata accessor for FriendsAchievementDataProvider();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v32;
  *(void *)(inited + 24) = a3;
  id v35 = a3;
  id v86 = v32;
  id v36 = v35;
  id v37 = [v36 allFriends];
  if (v37)
  {
    id v38 = v37;
    sub_10007E2D8(0, (unint64_t *)&qword_10094ECC0);
    sub_10044BEE8();
    uint64_t v39 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    double v40 = [objc_allocWithZone((Class)CNContactStore) init:v70, v71, v72];
    id v41 = sub_1003691DC(v39);
    swift_bridgeObjectRelease();
    id v42 = sub_100402230((unint64_t)v41, inited, v40);
    swift_release();
  }
  else
  {
    swift_release();
    id v42 = _swiftEmptyArrayStorage;
  }
  *(void *)&v27[v84] = v42;

  swift_bridgeObjectRelease();
  id v43 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  v88.receiver = v27;
  v88.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  [super initWithCollectionViewLayout:v43];

  id v45 = v44;
  id v46 = [v45 navigationItem];
  [v46 setLargeTitleDisplayMode:2];

  id result = [v45 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v48 = result;
  uint64_t v49 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v50 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_1004005B8;
  aBlock[5] = v49;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007DAA0;
  aBlock[3] = &unk_1008D70B0;
  id v51 = _Block_copy(aBlock);
  id v52 = [v50 initWithSectionProvider:v51];
  _Block_release(v51);
  swift_release();
  [v48 setCollectionViewLayout:v52];

  id result = [v45 collectionView];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v53 = result;
  type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v55 = String._bridgeToObjectiveC()();
  [v53 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v55];

  id result = [v45 collectionView];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v56 = result;
  type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  uint64_t v57 = swift_getObjCClassFromMetadata();
  NSString v58 = String._bridgeToObjectiveC()();
  [v56 registerClass:v57 forCellWithReuseIdentifier:v58];

  id result = [v45 collectionView];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v59 = result;
  type metadata accessor for TrophyCaseAwardDetailFriendCell();
  uint64_t v60 = swift_getObjCClassFromMetadata();
  NSString v61 = String._bridgeToObjectiveC()();
  [v59 registerClass:v60 forCellWithReuseIdentifier:v61];

  id result = [v45 collectionView];
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  id v62 = result;
  type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  uint64_t v63 = swift_getObjCClassFromMetadata();
  id v64 = UICollectionElementKindSectionHeader;
  NSString v65 = String._bridgeToObjectiveC()();
  [v62 registerClass:v63 forSupplementaryViewOfKind:v64 withReuseIdentifier:v65];

  if ((a17 & 1) == 0)
  {
    id v67 = [v45 navigationItem];
    id v68 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:9 target:v45 action:"shareTapped:"];
    [v67 setRightBarButtonItem:v68];
  }
  sub_100067C2C((unint64_t *)&unk_10095B790, v66, (void (*)(uint64_t))type metadata accessor for TrophyCaseAwardDetailViewController);
  id v69 = v45;
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();

  sub_1006C629C();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v89);
  return v69;
}

id sub_1006C8960(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, long long a9, void *a10, void *a11, unsigned __int8 a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  id v35 = a7;
  id v36 = a8;
  id v33 = a5;
  unint64_t v34 = a6;
  NSString v31 = a2;
  id v32 = a3;
  uint64_t v30 = a1;
  long long v29 = a9;
  id v27 = a11;
  id v28 = a10;
  int v26 = a12;
  uint64_t v20 = *(void *)(a18 - 8);
  __chkstk_darwin(a1);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (char *)objc_allocWithZone((Class)type metadata accessor for TrophyCaseAwardDetailViewController());
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a4, a18);
  return sub_1006C8050(v30, v31, v32, (uint64_t)v22, v33, v34, v35, v36, (void *)v29, *((void **)&v29 + 1), v28, v27, v26, a13, a14, a15, a16, v23, a18,
           a19);
}

void sub_1006C8AD4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Class v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell);
  *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell) = a1;
  id v13 = a1;

  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView) == 1)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    CGFloat v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1006CA2A4;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008D6FC0;
    uint64_t v16 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100067C2C((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1006C8DC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer;
  id v3 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v4 = [self blackColor];
  [v3 setBackgroundColor:v4];

  uint64_t v5 = UIView.forAutoLayout()();
  *(void *)&v1[v2] = v5;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = 0;
  uint64_t v6 = &v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1006C8F44()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer;
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] pause];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer];
  if (v2) {
    [v2 removeFromSuperlayer];
  }
  id v3 = *(void **)&v0[v1];
  *(void *)&v0[v1] = 0;

  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer] removeFromSuperview];
  id v4 = [v0 collectionView];
  if (v4)
  {
    id v5 = v4;
    [v4 setAlpha:1.0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006C9008()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_1006C9300;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D6ED0;
  Class v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067C2C((unint64_t *)&qword_100953B50, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1006C92C8()
{
  return swift_deallocObject();
}

void sub_1006C9300()
{
  sub_1006C6E90(*(void **)(v0 + 16));
}

uint64_t sub_1006C9308(unint64_t a1)
{
  if (a1 > 2)
  {
    __break(1u);
  }
  else
  {
    if (!*((unsigned char *)&off_1008B72A0 + a1 + 32)) {
      return 1;
    }
    if (*((unsigned char *)&off_1008B72A0 + a1 + 32) == 1) {
      return *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout)
    }
          && (*(unsigned char *)(v1
                       + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowAssociatedWorkout) & 1) != 0;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend)) {
      return 0;
    }
    unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
    if (!(v3 >> 62)) {
      return *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1006C93D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  id v78 = *(void (***)(char *, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v9 - 8);
  Class v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  id v79 = *(id *)(v12 - 8);
  __chkstk_darwin(v12);
  CGFloat v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = IndexPath.section.getter();
  if (v15 > 2) {
    return;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*((unsigned char *)&off_1008B72C8 + v15 + 32)) {
    return;
  }
  if (*((unsigned char *)&off_1008B72C8 + v15 + 32) == 1)
  {
    uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout];
    if (!v16) {
      return;
    }
    double v17 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_healthStore];
    id v18 = objc_allocWithZone((Class)FIUIModel);
    CGAffineTransform v19 = v17;
    id v76 = v16;
    id v78 = v19;
    id v77 = [v18 initWithHealthStore:v19];
    if (v77)
    {
      uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext];
      uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager];
      uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider];
      uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeImageFactory];
      CGRect v24 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendListManager];
      id v71 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider];
      id v73 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator];
      uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider];
      id v75 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formattingManager];
      uint64_t v74 = type metadata accessor for CHAwardsDataProvider();
      sub_10008E75C((uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider], (uint64_t)v80);
      uint64_t v27 = v81;
      uint64_t v26 = v82;
      uint64_t v28 = sub_1000DDC00((uint64_t)v80, v81);
      id v70 = &v67;
      __n128 v29 = __chkstk_darwin(v28);
      NSString v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v32 + 16))(v31, v29);
      id v72 = v20;
      id v69 = v21;
      id v79 = v22;
      id v33 = v23;
      id v34 = v24;
      id v35 = v71;
      id v67 = v35;
      id v36 = v73;
      id v68 = v36;
      id v37 = v25;
      id v71 = v37;
      id v38 = v75;
      id v73 = v38;
      id v39 = sub_1002224CC((uint64_t)v31, v74, v27, v26);
      id v75 = v39;
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v80);
      id v40 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
      id v41 = v76;
      LOBYTE(v66) = 1;
      id v65 = v38;
      id v63 = v36;
      id v64 = v37;
      id v62 = v35;
      id v43 = v77;
      id v42 = v78;
      id v44 = v72;
      id v45 = v69;
      id v46 = [v40 initWithWorkout:v41 workoutActivity:0 healthStore:v78 model:v77 fitnessAppContext:v72 workoutFormattingManager:v69 workoutDataProvider:v79 badgeImageFactory:v33 friendListManager:v34 achievementLocalizationProvider:v62 pauseRingsCoordinator:v63 achievementResourceProvider:v64 formattingManager:v65 awardsDataProvider:v39 shouldExposeDeepLinkToTrainingLoadFromEffort:v66];
      id v76 = v41;

      if (v46)
      {
        [v46 setEdgesForExtendedLayout:0];
        id v47 = [v1 navigationController];
        [v47 pushViewController:v46 animated:1];
      }
      return;
    }
LABEL_25:
    __break(1u);
    return;
  }
  id v77 = (id)v12;
  unint64_t v48 = IndexPath.row.getter();
  uint64_t v49 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement];
  if ((v49 & 0xC000000000000001) != 0) {
    goto LABEL_22;
  }
  if ((v48 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v48 >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v50 = *(id *)(v49 + 8 * v48 + 32);
LABEL_14:
  id v51 = [v50 UUID];
  id v52 = v77;
  if (v51)
  {
    id v53 = v51;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    Class isa = 0;
  }
  Date.init()();
  Class v55 = Date._bridgeToObjectiveC()().super.isa;
  v78[1](v4, v2);
  id v56 = (id)ASActivityAppLaunchURLForFriendOnDate();

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v57 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v58);
  uint64_t v60 = v59;
  sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100067C2C((unint64_t *)&qword_10094B970, 255, type metadata accessor for OpenExternalURLOptionsKey);
  Class v61 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v57 openURL:v60 options:v61 completionHandler:0];

  (*((void (**)(char *, id))v79 + 1))(v14, v52);
}

uint64_t sub_1006C9C08(void *a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v10 = UICollectionElementKindSectionHeader;
    NSString v11 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v13 = [a1 dequeueReusableSupplementaryViewOfKind:v10 withReuseIdentifier:v11 forIndexPath:isa];

    uint64_t result = IndexPath.section.getter();
    if (result <= 2)
    {
      if (result < 0)
      {
        __break(1u);
        return result;
      }
      type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
      if (swift_dynamicCastClass())
      {
        id v13 = v13;
        sub_1006C40D0();
      }
    }
    return (uint64_t)v13;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_10;
  }
  id v8 = objc_allocWithZone((Class)UICollectionReusableView);

  return (uint64_t)[v8 init];
}

void sub_1006C9D88()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement];
  id v2 = [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider] shareDescriptionForAchievement:v1];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    id v7 = sub_100133B74(v1);
    id v8 = (uint64_t *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
    *id v8 = v4;
    v8[1] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage];
    *(void *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = v7;
    id v10 = v7;

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100752410;
    uint64_t v12 = type metadata accessor for TrophyCaseAwardDetailViewController();
    *(void *)(v11 + 32) = v0;
    *(void *)(v11 + 88) = &type metadata for String;
    *(void *)(v11 + 56) = v12;
    *(void *)(v11 + 64) = v4;
    *(void *)(v11 + 72) = v6;
    *(void *)(v11 + 120) = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
    *(void *)(v11 + 96) = v10;
    id v13 = objc_allocWithZone((Class)UIActivityViewController);
    id v22 = v10;
    CGFloat v14 = v0;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v13 initWithActivityItems:isa applicationActivities:0];

    Class v17 = (Class)sub_1000FCD04();
    if (!v17)
    {
      type metadata accessor for ActivityType(0);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class v17 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [v16 setExcludedActivityTypes:v17];

    id v18 = [v14 navigationController];
    if (v18
      || (id v20 = objc_msgSend(v14, "hk_window")) != 0
      && (uint64_t v21 = v20,
          id v18 = [v20 rootViewController],
          v21,
          v18))
    {
      [v18 presentViewController:v16 animated:1 completion:0];

      CGAffineTransform v19 = v16;
    }
    else
    {
      CGAffineTransform v19 = v22;
      id v22 = v16;
    }
  }
}

id sub_1006CA034()
{
  id v1 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = UIImagePNGRepresentation(v3);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v8 = v7;

      id v9 = objc_allocWithZone((Class)LPImage);
      sub_10025C56C(v6, v8);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v9 initWithData:isa MIMEType:v11];
      sub_1000939A4(v6, v8);

      [v1 setImage:v12];
      if (*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText + 8))
      {
        swift_bridgeObjectRetain();
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v13 = 0;
      }
      [v1 setSummary:v13];

      sub_1000939A4(v6, v8);
    }
  }
  return v1;
}

void sub_1006CA1C0()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer);
  if (v1) {
    [v1 removeFromSuperlayer];
  }
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer) setAlpha:0.0];
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation) == 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear) == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted) & 1) == 0)
  {
    sub_1006C7C4C();
  }
}

void sub_1006CA25C()
{
  sub_1006C7F38(*(void **)(v0 + 16));
}

void sub_1006CA264(int a1)
{
  sub_1006C7FE0(a1, *(id *)(v1 + 16));
}

uint64_t sub_1006CA26C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1006CA2A4()
{
}

void sub_1006CA2B0()
{
  sub_1006C6718(v0[2], v0[3], v0[4]);
}

uint64_t sub_1006CA2C0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006CA300()
{
}

ValueMetadata *type metadata accessor for ActivitySharingIdentifiableReply()
{
  return &type metadata for ActivitySharingIdentifiableReply;
}

uint64_t sub_1006CA354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000094AC(a1, a2, a3, (void (*)(void))sub_100593064);
}

char *sub_1006CA36C(uint64_t a1, char a2)
{
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player] = 0;
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer] = 0;
  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers] = _swiftEmptyArrayStorage;
  uint64_t v6 = &v2[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_url];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  uint64_t v32 = a1;
  (*(void (**)(char *, uint64_t))(v30 + 16))(v6, a1);
  v2[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] = a2;
  v39.receiver = v2;
  v39.super_class = (Class)type metadata accessor for VideoLooperView();
  unint64_t v8 = [(char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0]];
  [v8 configurePlayer];
  id v9 = [v8 window];

  if (v9 && (v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
  {
    id v10 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!v10) {
      goto LABEL_8;
    }
    NSString v11 = &selRef_play;
  }
  else
  {
    id v10 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!v10) {
      goto LABEL_8;
    }
    NSString v11 = &selRef_pause;
  }
  [v10 *v11];
LABEL_8:
  id v12 = self;
  id v13 = [v12 defaultCenter];
  if (qword_10094A878 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_100997B08;
  uint64_t v15 = self;
  id v16 = [v15 mainQueue];
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = ObjectType;
  id v37 = sub_1006CB5FC;
  uint64_t v38 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_1000711BC;
  id v36 = &unk_1008D71D0;
  CGAffineTransform v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v13 addObserverForName:v14 object:0 queue:v16 usingBlock:v19];
  _Block_release(v19);

  id v21 = [v12 defaultCenter];
  if (qword_10094A880 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_100997B10;
  id v23 = [v15 mainQueue];
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = ObjectType;
  id v37 = sub_1006CB604;
  uint64_t v38 = v25;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  id v35 = sub_1000711BC;
  id v36 = &unk_1008D7220;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = [v21 addObserverForName:v22 object:0 queue:v23 usingBlock:v26];
  _Block_release(v26);

  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10074E640;
  *(void *)(v28 + 56) = swift_getObjectType();
  *(void *)(v28 + 32) = v20;
  *(void *)(v28 + 88) = swift_getObjectType();
  *(void *)(v28 + 64) = v27;

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers] = v28;
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1006CA83C()
{
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  if (os_log_type_enabled(HKLogActivity, v0))
  {
    uint64_t v3 = v1;
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = _typeName(_:qualified:)();
    uint64_t v12 = sub_10008F1F4(v5, v6, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s did receive ActivityTileViewControllerPlayVideos", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v8 = Strong;
    id v9 = [Strong window];

    if (v9 && (v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
    {
      id v10 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
      if (v10)
      {
        NSString v11 = &selRef_play;
        goto LABEL_10;
      }
    }
    else
    {
      id v10 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
      if (v10)
      {
        NSString v11 = &selRef_pause;
LABEL_10:
        [v10 *v11 v12 v13[0]];
      }
    }
  }
}

void sub_1006CAA18()
{
  os_log_type_t v0 = static os_log_type_t.default.getter();
  uint64_t v1 = (void *)HKLogActivity;
  os_log_type_t v2 = v0;
  if (os_log_type_enabled(HKLogActivity, v0))
  {
    uint64_t v3 = v1;
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = _typeName(_:qualified:)();
    sub_10008F1F4(v5, v6, v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s did receive ActivityTileViewControllerPauseVideos", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v8 = (void *)Strong;
    id v9 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player);
    id v10 = v9;

    if (v9)
    {
      [v10 pause];
    }
  }
}

id sub_1006CABB4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10008F484(v4, (uint64_t)v8);
      id v5 = [v3 defaultCenter];
      sub_10007E4EC(v8, v8[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for VideoLooperView();
  return [super dealloc];
}

uint64_t sub_1006CAD8C()
{
  return type metadata accessor for VideoLooperView();
}

uint64_t type metadata accessor for VideoLooperView()
{
  uint64_t result = qword_1009693B0;
  if (!qword_1009693B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1006CAE74()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoLooperView();
  [super didMoveToWindow];
  id v1 = [v0 window];

  if (v1 && (v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
  {
    id result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!result) {
      return result;
    }
    uint64_t v3 = &selRef_play;
  }
  else
  {
    id result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!result) {
      return result;
    }
    uint64_t v3 = &selRef_pause;
  }
  return [result *v3];
}

uint64_t sub_1006CB034()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1006CB0E8()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  objc_super v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player;
  if (!*(void *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player])
  {
    uint64_t v6 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer;
    if (!*(void *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer])
    {
      id v7 = objc_allocWithZone((Class)AVPlayerItem);
      URL._bridgeToObjectiveC()(v8);
      id v10 = v9;
      id v11 = [v7 initWithURL:v9];

      id v12 = [objc_allocWithZone((Class)AVQueuePlayer) init];
      [v12 _setParticipatesInAudioSession:0];
      [v12 setPreventsDisplaySleepDuringVideoPlayback:0];
      [v12 setAllowsExternalPlayback:0];
      [v12 insertItem:v11 afterItem:0];
      id v13 = [self playerLayerWithPlayer:v12];
      uint64_t v14 = *(void **)&v1[v5];
      *(void *)&v1[v5] = v12;
      id v15 = v12;

      id v16 = *(void **)&v1[v6];
      *(void *)&v1[v6] = v13;
      id v17 = v13;

      uint64_t v18 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
      type metadata accessor for MainActor();
      id v19 = v15;
      uint64_t v20 = static MainActor.shared.getter();
      id v21 = (void *)swift_allocObject();
      void v21[2] = v20;
      v21[3] = &protocol witness table for MainActor;
      v21[4] = v19;
      sub_10005810C((uint64_t)v4, (uint64_t)&unk_1009693C8, (uint64_t)v21);
      swift_release();
      id v22 = [v1 layer];
      [v22 addSublayer:v17];
    }
  }
}

void sub_1006CB3B4()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player);
  if (v2) {
    [v2 replaceCurrentItemWithPlayerItem:0];
  }
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer;
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer);
  if (v4)
  {
    [v4 setPlayer:0];
    uint64_t v5 = *(void **)(v0 + v3);
    if (v5) {
      [v5 removeFromSuperlayer];
    }
  }
  uint64_t v6 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  id v7 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;
}

uint64_t sub_1006CB498()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006CB4D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10000C5A4(a1, v4, v5, v6);
}

uint64_t sub_1006CB58C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006CB5C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1006CB5FC()
{
}

void sub_1006CB604()
{
}

double sub_1006CB618()
{
  id v1 = [v0 metadata];
  if (!v1)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_1000DA1C0(v4, v5), (v7 & 1) == 0))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_10:
    sub_10008DB18((uint64_t)&v17, &qword_100955A00);
    return 0.0;
  }
  sub_10007E2D8(0, &qword_100954730);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0.0;
  }
  unint64_t v8 = self;
  id v9 = [v8 wattUnit];
  unsigned int v10 = [v16 isCompatibleWithUnit:v9];

  if (v10)
  {
    id v11 = [v8 wattUnit];
  }
  else
  {
    NSString v14 = String._bridgeToObjectiveC()();
    id v11 = [v8 unitFromString:v14];
  }
  [v16 doubleValueForUnit:v11];
  double v12 = v15;

  return v12;
}

void *sub_1006CB820()
{
  id v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v20 - v10;
  id v21 = _swiftEmptyArrayStorage;
  id v12 = [v1 endDate];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  id v13 = v12;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10095B890);
    return v21;
  }
  v14(v11, v4, v5);
  id v15 = [v1 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [v1 workoutEvents];
  sub_10007E2D8(0, (unint64_t *)&qword_10094BED8);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100415634((uint64_t)v9, v11, v17, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  long long v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  v18(v11, v5);
  return v21;
}

uint64_t sub_1006CBB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v22 - v10;
  uint64_t v24 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  NSString v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v11, a1, v5);
  v15(v9, v23, v5);
  id v16 = (unint64_t *)(a3 + 16);
  DateInterval.init(start:end:)();
  swift_beginAccess();
  unint64_t v17 = *(void *)(a3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v17 = sub_1001E704C(0, *(void *)(v17 + 16) + 1, 1, v17);
    unint64_t *v16 = v17;
  }
  unint64_t v20 = *(void *)(v17 + 16);
  unint64_t v19 = *(void *)(v17 + 24);
  if (v20 >= v19 >> 1)
  {
    unint64_t v17 = sub_1001E704C(v19 > 1, v20 + 1, 1, v17);
    unint64_t *v16 = v17;
  }
  *(void *)(v17 + 16) = v20 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v20, v14, v24);
  return swift_endAccess();
}

uint64_t sub_1006CBDD8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v23 - v10;
  uint64_t v12 = type metadata accessor for DateInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v11, a1, v5);
  v16(v9, a2, v5);
  unint64_t v17 = v24;
  DateInterval.init(start:end:)();
  unint64_t v18 = *v17;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v18 = sub_1001E704C(0, *(void *)(v18 + 16) + 1, 1, v18);
    *unint64_t v17 = v18;
  }
  unint64_t v21 = *(void *)(v18 + 16);
  unint64_t v20 = *(void *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    unint64_t v18 = sub_1001E704C(v20 > 1, v21 + 1, 1, v18);
    *unint64_t v17 = v18;
  }
  *(void *)(v18 + 16) = v21 + 1;
  return (*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v21, v15, v12);
}

double sub_1006CC05C()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = __chkstk_darwin(v8).n128_u64[0];
  id v11 = (char *)&v20 - v10;
  id v12 = [v0 endDate];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v14(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10008DB18((uint64_t)v3, (uint64_t *)&unk_10095B890);
    return 0.0;
  }
  v14(v11, v3, v4);
  id v15 = [v0 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince(_:)();
  double v17 = v16;
  unint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v11, v4);
  return v17;
}

id sub_1006CC378()
{
  uint64_t v1 = v0;
  id v2 = [v0 workoutConfiguration];
  id v3 = [v2 activityType];

  id v4 = [v1 workoutConfiguration];
  id v5 = [v4 locationType];

  BOOL v6 = v5 == (id)2;
  sub_1000AFA94(&qword_1009693D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v8;
  id v9 = [v1 workoutConfiguration];
  id v10 = [v9 swimmingLocationType];

  *(void *)(inited + 48) = v10;
  unint64_t v11 = sub_1005244CC(inited);
  sub_1003D89A4(v11);
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithActivityTypeIdentifier:v3 isIndoor:v6 metadata:isa];

  return v14;
}

double sub_1006CC500()
{
  return sub_1006CCA98((uint64_t)&_HKPrivateMetadataKeyWorkoutAverageCadence, (SEL *)&selRef__countPerMinuteUnit);
}

uint64_t sub_1006CC684()
{
  uint64_t v1 = v0;
  id v2 = [v0 metadata];
  if (!v2)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_9;
  }
  id v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v4 + 16) || (unint64_t v7 = sub_1000DA1C0(v5, v6), (v8 & 1) == 0))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_9:
    sub_10008DB18((uint64_t)&v17, &qword_100955A00);
    goto LABEL_10;
  }
  sub_10007E2D8(0, &qword_100954730);
  if (swift_dynamicCast()) {
    return v19;
  }
LABEL_10:
  id v10 = [v1 metadata:v17];
  if (!v10)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_20:
    sub_10008DB18((uint64_t)&v17, &qword_100955A00);
    return 0;
  }
  unint64_t v11 = v10;
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v12 + 16) && (unint64_t v15 = sub_1000DA1C0(v13, v14), (v16 & 1) != 0))
  {
    sub_10008F484(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_20;
  }
  sub_10007E2D8(0, &qword_100954730);
  if (swift_dynamicCast()) {
    return v19;
  }
  else {
    return 0;
  }
}

void *sub_1006CC8FC(void *a1)
{
  [a1 _isMetricDistance];
  Class isa = (Class)[v1 workoutEvents];
  if (!isa)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10094BED8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v3 = (id)FISplitsForMeasuringSystemIdentifier();

  sub_10007E2D8(0, (unint64_t *)&qword_10094BED8);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = sub_1006CD07C(v4);
  swift_bridgeObjectRelease();
  return v5;
}

double sub_1006CCA84()
{
  return sub_1006CCA98((uint64_t)&_HKPrivateMetadataKeyWorkoutStepCount, (SEL *)&selRef_countUnit);
}

double sub_1006CCA98(uint64_t a1, SEL *a2)
{
  id v4 = [v2 metadata];
  if (!v4)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v6 + 16) || (unint64_t v9 = sub_1000DA1C0(v7, v8), (v10 & 1) == 0))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10008F484(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_9:
    sub_10008DB18((uint64_t)&v16, &qword_100955A00);
    return 0.0;
  }
  sub_10007E2D8(0, &qword_100954730);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0.0;
  }
  id v11 = [self *a2];
  [v15 doubleValueForUnit:v11];
  double v13 = v12;

  return v13;
}

void sub_1006CCC70(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  *(void *)&double v5 = __chkstk_darwin(v4 - 8).n128_u64[0];
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *a1;
  id v9 = [*a1 metadata:v5];
  if (!v9)
  {
    long long v37 = 0u;
    long long v38 = 0u;
    goto LABEL_12;
  }
  char v10 = v9;
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v11 + 16) || (unint64_t v14 = sub_1000DA1C0(v12, v13), (v15 & 1) == 0))
  {
    long long v37 = 0u;
    long long v38 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_10008F484(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1))
  {
LABEL_12:
    sub_10008DB18((uint64_t)&v37, &qword_100955A00);
    goto LABEL_13;
  }
  sub_10007E2D8(0, &qword_100954730);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    id v24 = 0;
    goto LABEL_14;
  }
  long long v16 = v39;
  id v17 = [v8 metadata];
  if (!v17)
  {
    long long v37 = 0u;
    long long v38 = 0u;
LABEL_22:

    goto LABEL_12;
  }
  long long v18 = v17;
  uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v19 + 16) && (unint64_t v22 = sub_1000DA1C0(v20, v21), (v23 & 1) != 0))
  {
    sub_10008F484(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1)) {
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_13;
  }
  uint64_t v25 = v39;
  uint64_t v26 = self;
  id v27 = [v26 meterUnit];
  [v25 doubleValueForUnit:v27];
  double v29 = v28;

  id v30 = [v26 secondUnit];
  [v16 doubleValueForUnit:v30];
  double v32 = v31;

  id v33 = [v8 dateInterval];
  static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = type metadata accessor for DateInterval();
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v34);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v7, 1, v34) != 1)
  {
    Class isa = DateInterval._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v34);
  }
  id v24 = [objc_allocWithZone((Class)FIUIWorkoutSplit) initWithDistance:isa duration:v29 dateInterval:v32];

LABEL_14:
  *a2 = v24;
}

void *sub_1006CD07C(unint64_t a1)
{
  unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * i);
      double v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = v4;
      sub_1006CCC70(&v9, &v8);

      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return (void *)v10;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t *sub_1006CD204(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Calendar();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    char v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    *(uint64_t *)((char *)v7 + v14) = *(uint64_t *)((char *)a2 + v14);
    id v16 = v15;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1006CD318(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_1006CD3B0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Calendar();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  id v14 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1006CD478(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1006CD548(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_1006CD5E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006CD6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006CD6B8);
}

uint64_t sub_1006CD6B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Calendar();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1006CD768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006CD77C);
}

void *sub_1006CD77C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Calendar();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDailyGoalChartView()
{
  uint64_t result = qword_100969430;
  if (!qword_100969430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006CD870()
{
  uint64_t result = type metadata accessor for Calendar();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006CD928()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006CD944@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100969550);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006D1178((unint64_t *)&qword_100953E28, &qword_100953E30, &qword_100953E38, &qword_100953E40);
  sub_1000AEF2C(*a1, (uint64_t)v7, &qword_100953E30);
  uint64_t v8 = type metadata accessor for AxisGridLine();
  uint64_t v9 = &v7[*(int *)(v5 + 56)];
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, a1[1], v8);
  uint64_t v11 = type metadata accessor for AxisTick();
  uint64_t v12 = &v7[*(int *)(v5 + 72)];
  uint64_t v13 = a1[2];
  uint64_t v14 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v13, v11);
  sub_1000AEEC8((uint64_t)v7, a2, &qword_100953E30);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2 + *(int *)(v5 + 56), v9, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2 + *(int *)(v5 + 72), v12, v11);
}

uint64_t sub_1006CDB20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100969560);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006D1178((unint64_t *)&qword_10095D090, &qword_10095D098, &qword_10095D0A0, &qword_10095D0A8);
  sub_1000AEF2C(*a1, (uint64_t)v7, &qword_10095D098);
  uint64_t v8 = type metadata accessor for AxisGridLine();
  uint64_t v9 = &v7[*(int *)(v5 + 56)];
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, a1[1], v8);
  uint64_t v11 = type metadata accessor for AxisTick();
  uint64_t v12 = &v7[*(int *)(v5 + 72)];
  uint64_t v13 = a1[2];
  uint64_t v14 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v13, v11);
  sub_1000AEEC8((uint64_t)v7, a2, &qword_10095D098);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2 + *(int *)(v5 + 56), v9, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2 + *(int *)(v5 + 72), v12, v11);
}

uint64_t sub_1006CDCFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100969520);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009694F0);
  sub_1000A132C(&qword_1009694E8, &qword_1009694F0);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  uint64_t v10 = type metadata accessor for AxisGridLine();
  long long v18 = &v7[*(int *)(v5 + 56)];
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(void))(v11 + 16))();
  uint64_t v12 = type metadata accessor for AxisTick();
  uint64_t v13 = &v7[*(int *)(v5 + 72)];
  uint64_t v14 = a1[2];
  uint64_t v15 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, v14, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v5 + 56), v18, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2 + *(int *)(v5 + 72), v13, v12);
}

uint64_t sub_1006CDF34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityDailyGoalChartView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v9[1] = sub_1006CE0C8(*(void *)(a1 + *(int *)(v5 + 36)));
  sub_1006D0ED0(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1006D1040((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  sub_1000AFA94((uint64_t *)&unk_10095C9B0);
  sub_1000AFA94(&qword_100969498);
  sub_1000A132C(&qword_100969528, (uint64_t *)&unk_10095C9B0);
  sub_1006D0A7C();
  sub_1006D1124();
  return ForEach<>.init(_:content:)();
}

void *sub_1006CE0C8(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v25 = type metadata accessor for ActivityDailyGoalChartView();
      id v26 = *(id *)(v27 + *(int *)(v25 + 24));
      uint64_t v3 = _swiftEmptyArrayStorage;
      uint64_t v4 = 4;
      uint64_t v5 = &selRef_unavailable;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          unint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v6 = (char *)*(id *)(a1 + 8 * v4);
        }
        uint64_t v7 = v6;
        uint64_t v8 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        uint64_t v9 = *(void *)&v6[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];
        id v10 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
        uint64_t result = [v26 v5[9] v25];
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = result;
        id v13 = [result v5[9]];

        uint64_t v14 = &selRef_minuteUnit;
        if ((unint64_t)(v9 - 1) < 2) {
          goto LABEL_12;
        }
        if (v9) {
          break;
        }
        uint64_t v14 = &selRef_userActiveEnergyBurnedUnit;
        uint64_t v15 = v13;
LABEL_13:
        id v16 = [v15 *v14];

        [v10 doubleValueForUnit:v16];
        double v18 = v17;

        if ((~*(void *)&v18 & 0x7FF0000000000000) == 0) {
          goto LABEL_24;
        }
        if (v18 <= -9.22337204e18) {
          goto LABEL_25;
        }
        if (v18 >= 9.22337204e18) {
          goto LABEL_26;
        }
        uint64_t v19 = sub_100441AF8((uint64_t)v7);
        uint64_t v21 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1001E8C64(0, v3[2] + 1, 1, v3);
        }
        unint64_t v23 = v3[2];
        unint64_t v22 = v3[3];
        if (v23 >= v22 >> 1) {
          uint64_t v3 = sub_1001E8C64((void *)(v22 > 1), v23 + 1, 1, v3);
        }
        v3[2] = v23 + 1;
        id v24 = &v3[3 * v23];
        v24[4] = v19;
        v24[5] = v21;
        v24[6] = (uint64_t)v18;

        ++v4;
        uint64_t v5 = &selRef_unavailable;
        if (v8 == v2) {
          goto LABEL_29;
        }
      }
      uint64_t v14 = &selRef_countUnit;
LABEL_12:
      uint64_t v15 = self;
      goto LABEL_13;
    }
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_29:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1006CE398@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  id v91 = a2;
  uint64_t v78 = a3;
  uint64_t v77 = sub_1000AFA94(&qword_100969538);
  __chkstk_darwin(v77);
  id v76 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for RuleMark();
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v68 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_100951F58);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v70 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_100952038);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v89 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  objc_super v88 = (char *)v67 - v9;
  uint64_t v83 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v83);
  uint64_t v11 = (_OWORD *)((char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1000AFA94(&qword_100969540);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100953EA0);
  __chkstk_darwin(v15 - 8);
  long long v87 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v90 = (void (*)(char *, char *, uint64_t))((char *)v67 - v18);
  uint64_t v80 = type metadata accessor for BarMark();
  uint64_t v82 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v20 = (char *)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_1009694A0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v84 = v21;
  uint64_t v85 = v22;
  __chkstk_darwin(v21);
  id v79 = (char *)v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000AFA94(&qword_100969548);
  id v94 = *(void **)(v92 - 8);
  __chkstk_darwin(v92);
  id v93 = (char *)v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  id v95 = (char *)v67 - v26;
  uint64_t v28 = a1[1];
  uint64_t v81 = *a1;
  uint64_t v27 = v81;
  id v86 = (void *)a1[2];
  double v29 = v86;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v100 = v27;
  uint64_t v101 = v28;
  swift_bridgeObjectRetain();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v100 = (uint64_t)v29;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v67[1] = v14;
  BarMark.init<A, B>(x:y:width:height:stacking:)();
  uint64_t v30 = v83;
  double v31 = (char *)v11 + *(int *)(v83 + 20);
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #5.0 }
  _OWORD *v11 = _Q0;
  uint64_t v39 = sub_1006D0DCC(&qword_1009694A8, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
  id v40 = v79;
  uint64_t v41 = v80;
  ChartContent.clipShape<A>(_:style:)();
  sub_1002854A8((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v41);
  uint64_t v96 = Color.gradient.getter();
  uint64_t v100 = v41;
  uint64_t v101 = v30;
  id v102 = &protocol witness table for BarMark;
  uint64_t v103 = v39;
  swift_getOpaqueTypeConformance2();
  id v42 = v93;
  uint64_t v43 = v84;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v43);
  id v44 = v94 + 4;
  uint64_t v85 = v94[4];
  ((void (*)(char *, char *, uint64_t))v85)(v95, v42, v92);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v45 = v81;
  uint64_t v100 = v81;
  uint64_t v101 = v28;
  swift_bridgeObjectRetain();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v100 = v45;
  uint64_t v101 = v28;
  swift_bridgeObjectRetain();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  if (__OFADD__(v86, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v100 = (uint64_t)v86 + 1;
    id v86 = v44;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v47 = v68;
    RuleMark.init<A, B>(xStart:xEnd:y:)();
    uint64_t v100 = *v91;
    unint64_t v48 = v70;
    uint64_t v49 = v71;
    ChartContent.foregroundStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v49);
    sub_1000AFA94(&qword_10094E770);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1007509E0;
    *(void *)(v50 + 32) = 0x4014000000000000;
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    uint64_t v96 = v49;
    id v97 = &type metadata for Color;
    id v98 = &protocol witness table for RuleMark;
    uint64_t v99 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    id v51 = v89;
    uint64_t v52 = v73;
    ChartContent.lineStyle(_:)();
    sub_100265034((uint64_t)&v100);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v52);
    uint64_t v53 = v74;
    id v90 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    id v91 = (uint64_t *)(v74 + 32);
    id v54 = v88;
    Class v55 = v51;
    uint64_t v56 = v75;
    v90(v88, v51, v75);
    id v57 = v93;
    NSString v58 = (void (*)(char *, char *, uint64_t))v94[2];
    uint64_t v59 = v92;
    v58(v93, v95, v92);
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v60(v55, v54, v56);
    Class v61 = v76;
    v58(v76, v57, v59);
    uint64_t v62 = v77;
    id v63 = &v61[*(int *)(v77 + 48)];
    v60(v63, v55, v56);
    uint64_t v64 = v78;
    ((void (*)(uint64_t, char *, uint64_t))v85)(v78, v61, v59);
    v90((char *)(v64 + *(int *)(v62 + 48)), v63, v56);
    id v65 = *(void (**)(char *, uint64_t))(v53 + 8);
    v65(v88, v56);
    uint64_t v66 = (void (*)(char *, uint64_t))v94[1];
    v66(v95, v59);
    v65(v89, v56);
    return ((uint64_t (*)(char *, uint64_t))v66)(v93, v59);
  }
  return result;
}

uint64_t sub_1006CEFC4()
{
  uint64_t v0 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v2 - 8);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  static AxisMarkValues.automatic.getter();
  sub_1000AFA94(&qword_100969510);
  sub_1006D0E14();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_1006CF124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for AxisTick();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for AxisGridLine();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v42 = (char *)&v37 - v13;
  uint64_t v14 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000AFA94(&qword_1009694F0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t v49 = a1;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  sub_1000AFA94(&qword_100969500);
  sub_1006D0CE4();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  uint64_t v53 = 0;
  long long v51 = 0u;
  long long v52 = 0u;
  uint64_t v23 = v42;
  AxisGridLine.init(centered:stroke:)();
  static AxisTick.Length.automatic.getter();
  AxisTick.init(centered:length:stroke:)();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v41 = v19;
  v24(v19, v22, v16);
  v50[0] = v19;
  uint64_t v25 = v44;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  long long v38 = v11;
  uint64_t v27 = v45;
  v26(v11, v23, v45);
  v50[1] = v11;
  uint64_t v29 = v46;
  uint64_t v28 = v47;
  uint64_t v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v8, v47);
  v50[2] = v30;
  sub_1006CDCFC(v50, v48);
  double v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v8, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
  v32(v23, v27);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v34 = v22;
  uint64_t v35 = v39;
  v33(v34, v39);
  v31(v30, v28);
  v32(v38, v27);
  return ((uint64_t (*)(char *, uint64_t))v33)(v41, v35);
}

uint64_t sub_1006CF600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v44 = sub_1000AFA94(&qword_100953230);
  __chkstk_darwin(v44);
  uint64_t v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - v4;
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void **)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v43 = sub_1000AFA94(&qword_100953238);
  __chkstk_darwin(v43);
  uint64_t v40 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v42 = (uint64_t)&v38 - v15;
  uint64_t v16 = sub_1000AFA94(&qword_100953240);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v41 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)();
  if (!v47)
  {
    uint64_t v37 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v45, v37, 1, v16);
  }
  uint64_t v39 = v17;
  sub_1000A06D0();
  uint64_t v46 = Text.init<A>(_:)();
  uint64_t v47 = v19;
  char v48 = v20 & 1;
  uint64_t v49 = v21;
  uint64_t v22 = (void (*)(char *, void, uint64_t))v7[13];
  v22(v12, enum case for DynamicTypeSize.xSmall(_:), v6);
  v22(v9, enum case for DynamicTypeSize.xxxLarge(_:), v6);
  sub_1006D0DCC((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v24 = v2;
    uint64_t v25 = v44;
    uint64_t v26 = v9;
    uint64_t v27 = &v5[*(int *)(v44 + 48)];
    uint64_t v38 = v16;
    uint64_t v28 = (void (*)(char *, char *, uint64_t))v7[4];
    v28(v5, v12, v6);
    uint64_t v29 = v27;
    v28(v27, v26, v6);
    uint64_t v30 = &v24[*(int *)(v25 + 48)];
    double v31 = (void (*)(char *, char *, uint64_t))v7[2];
    v31(v24, v5, v6);
    v31(v30, v29, v6);
    uint64_t v32 = (uint64_t)v40;
    v28(v40, v24, v6);
    uint64_t v33 = (void (*)(char *, uint64_t))v7[1];
    v33(v30, v6);
    uint64_t v34 = &v24[*(int *)(v44 + 48)];
    v28(v24, v5, v6);
    v28(v34, v29, v6);
    v28((char *)(v32 + *(int *)(v43 + 36)), v34, v6);
    uint64_t v16 = v38;
    v33(v24, v6);
    uint64_t v35 = v42;
    sub_1000AEEC8(v32, v42, &qword_100953238);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    id v36 = v41;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v35, &qword_100953238);
    sub_1000A06C0(v46, v47, v48);
    swift_bridgeObjectRelease();
    uint64_t v17 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v45, v36, v16);
    uint64_t v37 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v45, v37, 1, v16);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006CFB50()
{
  uint64_t v0 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v2 - 8);
  static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)();
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_1009694D8);
  sub_1006D0C34();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_1006CFCC0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v40 = sub_1000AFA94(&qword_1009694F8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100953100);
  __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000AFA94(&qword_1009694F0);
  uint64_t v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v34 - v16;
  __chkstk_darwin(v18);
  char v20 = (char *)&v34 - v19;
  uint64_t v42 = a1;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  sub_1000AFA94(&qword_100969500);
  sub_1006D0CE4();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  uint64_t v21 = v20;
  id v36 = (void (*)(char *, char *, uint64_t))v12[4];
  uint64_t v37 = v12 + 4;
  v36(v20, v17, v11);
  if (AxisValue.index.getter())
  {
    uint64_t v22 = type metadata accessor for AxisGridLine();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  }
  else
  {
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    long long v46 = v43;
    long long v47 = v44;
    uint64_t v48 = v45;
    AxisGridLine.init(centered:stroke:)();
    uint64_t v23 = type metadata accessor for AxisGridLine();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 0, 1, v23);
  }
  uint64_t v24 = (void (*)(char *, char *, uint64_t))v12[2];
  v24(v14, v20, v11);
  uint64_t v25 = v38;
  sub_1000AEF2C((uint64_t)v8, v38, &qword_100953100);
  sub_1000A132C(&qword_1009694E8, &qword_1009694F0);
  uint64_t v26 = v39;
  v24(v39, v14, v11);
  sub_1000A13B8();
  uint64_t v35 = v14;
  uint64_t v27 = (uint64_t)v8;
  uint64_t v28 = v25;
  uint64_t v29 = v40;
  uint64_t v30 = (uint64_t)&v26[*(int *)(v40 + 48)];
  sub_1000AEF2C(v28, v30, &qword_100953100);
  double v31 = v41;
  v36(v41, v26, v11);
  sub_1000AEEC8(v30, (uint64_t)&v31[*(int *)(v29 + 48)], &qword_100953100);
  sub_10008DB18(v27, &qword_100953100);
  uint64_t v32 = (void (*)(char *, uint64_t))v12[1];
  v32(v21, v11);
  sub_10008DB18(v28, &qword_100953100);
  return ((uint64_t (*)(char *, uint64_t))v32)(v35, v11);
}

uint64_t sub_1006D01B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = sub_1000AFA94(&qword_100953230);
  __chkstk_darwin(v45);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_1000AFA94(&qword_100953238);
  __chkstk_darwin(v13);
  uint64_t v42 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v44 = (uint64_t)&v38 - v16;
  uint64_t v47 = sub_1000AFA94(&qword_100953240);
  uint64_t v17 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v43 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)();
  if (v49 == 1)
  {
    uint64_t v19 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, v19, 1, v47);
  }
  uint64_t v41 = v13;
  uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v49 = v20;
  sub_1000A06D0();
  uint64_t v48 = Text.init<A>(_:)();
  uint64_t v49 = v21;
  char v50 = v22 & 1;
  uint64_t v51 = v23;
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v46 + 104);
  v24(v12, enum case for DynamicTypeSize.xSmall(_:), v7);
  v24(v9, enum case for DynamicTypeSize.xxxLarge(_:), v7);
  sub_1006D0DCC((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v39 = v17;
    uint64_t v40 = a1;
    uint64_t v26 = v45;
    uint64_t v27 = &v6[*(int *)(v45 + 48)];
    uint64_t v28 = v3;
    uint64_t v29 = v46;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v30(v6, v12, v7);
    uint64_t v38 = v27;
    v30(v27, v9, v7);
    double v31 = &v28[*(int *)(v26 + 48)];
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v32(v28, v6, v7);
    v32(v31, v27, v7);
    uint64_t v33 = (uint64_t)v42;
    v30(v42, v28, v7);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v29 + 8);
    v34(v31, v7);
    uint64_t v17 = v39;
    uint64_t v35 = &v28[*(int *)(v45 + 48)];
    v30(v28, v6, v7);
    v30(v35, v38, v7);
    v30((char *)(v33 + *(int *)(v41 + 36)), v35, v7);
    a1 = v40;
    v34(v28, v7);
    uint64_t v36 = v44;
    sub_1000AEEC8(v33, v44, &qword_100953238);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    uint64_t v37 = v43;
    View.dynamicTypeSize<A>(_:)();
    sub_10008DB18(v36, &qword_100953238);
    sub_1000A06C0(v48, v49, v50);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v37, v47);
    uint64_t v19 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, v19, 1, v47);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006D0728@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v2 = sub_1000AFA94(&qword_100969470);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000AFA94(&qword_100969478);
  uint64_t v6 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1;
  sub_1000AFA94(&qword_100969480);
  sub_1006D0A08();
  Chart.init(content:)();
  uint64_t v9 = sub_1000AFA94(&qword_1009694B0);
  uint64_t v10 = sub_1000A132C(&qword_1009694B8, &qword_100969470);
  uint64_t v11 = sub_1000A132C(&qword_1009694C0, &qword_1009694B0);
  View.chartXAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000AFA94(&qword_1009694C8);
  uint64_t v16 = v2;
  uint64_t v17 = v9;
  uint64_t v18 = v10;
  uint64_t v19 = v11;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_1009694D0, &qword_1009694C8);
  uint64_t v12 = v14[0];
  View.chartYAxis<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v12);
}

uint64_t sub_1006D0A00()
{
  return sub_1006CDF34(*(void *)(v0 + 16));
}

unint64_t sub_1006D0A08()
{
  unint64_t result = qword_100969488;
  if (!qword_100969488)
  {
    sub_1000A1370(&qword_100969480);
    sub_1006D0A7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969488);
  }
  return result;
}

unint64_t sub_1006D0A7C()
{
  unint64_t result = qword_100969490;
  if (!qword_100969490)
  {
    sub_1000A1370(&qword_100969498);
    sub_1000A1370(&qword_1009694A0);
    type metadata accessor for BarMark();
    type metadata accessor for RoundedRectangle();
    sub_1006D0DCC(&qword_1009694A8, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A1370(&qword_100951F58);
    type metadata accessor for RuleMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969490);
  }
  return result;
}

unint64_t sub_1006D0C34()
{
  unint64_t result = qword_1009694E0;
  if (!qword_1009694E0)
  {
    sub_1000A1370(&qword_1009694D8);
    sub_1000A132C(&qword_1009694E8, &qword_1009694F0);
    sub_1000A13B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009694E0);
  }
  return result;
}

uint64_t sub_1006D0CDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006D01B4(a1);
}

unint64_t sub_1006D0CE4()
{
  unint64_t result = qword_100969508;
  if (!qword_100969508)
  {
    sub_1000A1370(&qword_100969500);
    sub_1000A1370(&qword_100953238);
    sub_1000A132C(&qword_100953248, &qword_100953238);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969508);
  }
  return result;
}

uint64_t sub_1006D0DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006D0E14()
{
  unint64_t result = qword_100969518;
  if (!qword_100969518)
  {
    sub_1000A1370(&qword_100969510);
    sub_1000A132C(&qword_1009694E8, &qword_1009694F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969518);
  }
  return result;
}

uint64_t sub_1006D0EC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006CF600(a1);
}

uint64_t sub_1006D0ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityDailyGoalChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006D0F34()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivityDailyGoalChartView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006D1040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityDailyGoalChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006D10A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ActivityDailyGoalChartView() - 8);
  uint64_t v6 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_1006CE398(a1, v6, a2);
}

unint64_t sub_1006D1124()
{
  unint64_t result = qword_100969530;
  if (!qword_100969530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969530);
  }
  return result;
}

uint64_t sub_1006D1178(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006D120C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1006D134C()
{
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self separatorColor];
  [v0 setBackgroundColor:v1];

  return v0;
}

id sub_1006D13E4()
{
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v0;
}

uint64_t *sub_1006D1440(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)v4 + v9 + 24) = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 24);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }
    else
    {
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1006D1604(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + *(int *)(a2 + 20));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_1006D16D0(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)((char *)a2 + v7 + 24);
  *(_OWORD *)((char *)a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9 + 24);
  if (v12)
  {
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = v12;
    *((void *)v10 + 4) = v13;
    (**(void (***)(void))(v12 - 8))();
  }
  else
  {
    long long v14 = *((_OWORD *)v11 + 1);
    *(_OWORD *)long long v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v14;
    *((void *)v10 + 4) = *((void *)v11 + 4);
  }
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1006D1848(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_10009EDF0((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]));
  uint64_t v7 = a3[6];
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 24);
  if (!*(void *)((char *)a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, char *))(v10 - 8))(v8, v9);
      goto LABEL_13;
    }
LABEL_12:
    long long v11 = *(_OWORD *)v9;
    long long v12 = *((_OWORD *)v9 + 1);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    goto LABEL_13;
  }
  if (!v10)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
    goto LABEL_12;
  }
  sub_10009EDF0((uint64_t *)v8, (uint64_t *)v9);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1006D19F8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  long long v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  uint64_t v13 = &a1[v9];
  long long v14 = &a2[v9];
  *((void *)v13 + 4) = *((void *)v14 + 4);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  return a1;
}

char *sub_1006D1B08(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v8]);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  if (*(void *)&a1[v12 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&a1[v12]);
  }
  long long v14 = *(_OWORD *)&a2[v12 + 16];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)&a2[v12];
  *((_OWORD *)v13 + 1) = v14;
  *((void *)v13 + 4) = *(void *)&a2[v12 + 32];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  return a1;
}

uint64_t sub_1006D1C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D1C7C);
}

uint64_t sub_1006D1C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1006D1D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D1D58);
}

uint64_t sub_1006D1D58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1006D1E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006D1E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = type metadata accessor for TrendsStack();
  uint64_t v3 = v2 - 8;
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v41 = *(void *)(v42 + 64);
  __chkstk_darwin(v2);
  uint64_t v40 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v11 = (char *)v39 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_100969608);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_100969610) - 8;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = static HorizontalAlignment.leading.getter();
  uint64_t v17 = v1;
  sub_100092088((uint64_t)v11);
  unsigned int v45 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v18 = *(void (**)(void))(v6 + 104);
  uint64_t v46 = v6 + 104;
  uint64_t v47 = (void (*)(char *, void, uint64_t))v18;
  v18(v8);
  uint64_t v44 = sub_1000A3B60((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v19 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  long long v43 = v20;
  v20(v8, v5);
  v20(v11, v5);
  uint64_t v21 = 0x4035000000000000;
  if (v19) {
    uint64_t v21 = 0x4024000000000000;
  }
  *(void *)long long v14 = v16;
  *((void *)v14 + 1) = v21;
  v14[16] = 0;
  v39[1] = &v14[*(int *)(sub_1000AFA94(&qword_100969618) + 44)];
  v39[2] = v17;
  uint64_t v53 = *(void *)(v17 + *(int *)(v3 + 36));
  uint64_t v22 = v40;
  sub_1006D3AA8(v17, v40, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  unint64_t v23 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1006D3974(v22, v24 + v23, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_100969620);
  sub_1000AFA94(&qword_100969628);
  sub_1000A132C(&qword_100969630, &qword_100969620);
  uint64_t v25 = sub_1000A1370(&qword_100969638);
  unint64_t v26 = sub_1006D3698();
  uint64_t v51 = v25;
  unint64_t v52 = v26;
  swift_getOpaqueTypeConformance2();
  sub_1000A3B60(&qword_100969658, (void (*)(uint64_t))type metadata accessor for TrendListMetric);
  ForEach<>.init(_:content:)();
  LOBYTE(v22) = static Edge.Set.top.getter();
  sub_100092088((uint64_t)v11);
  v47(v8, v45, v5);
  dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v27 = v43;
  v43(v8, v5);
  v27(v11, v5);
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = v48;
  sub_1000AEF2C((uint64_t)v14, v48, &qword_100969608);
  uint64_t v37 = v36 + *(int *)(v49 + 44);
  *(unsigned char *)uint64_t v37 = v22;
  *(void *)(v37 + 8) = v29;
  *(void *)(v37 + 16) = v31;
  *(void *)(v37 + 24) = v33;
  *(void *)(v37 + 32) = v35;
  *(unsigned char *)(v37 + 40) = 0;
  sub_10008DB18((uint64_t)v14, &qword_100969608);
  return sub_1000AEEC8(v36, v50, &qword_100969610);
}

uint64_t sub_1006D23AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for TrendsStack();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v23 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = type metadata accessor for TrendListMetric();
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v22 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100969650);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100969638);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v16 = sub_1000AFA94(&qword_100969660);
  sub_1006D26D4(a2, a1, (uint64_t)&v12[*(int *)(v16 + 44)]);
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v15, &qword_100969650);
  v15[*(int *)(v13 + 36)] = 0;
  sub_10008DB18((uint64_t)v12, &qword_100969650);
  sub_1006D3AA8(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  sub_1006D3AA8(a2, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrendsStack);
  unint64_t v17 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v18 = (v8 + *(unsigned __int8 *)(v23 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1006D3974((uint64_t)v9, v19 + v17, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  sub_1006D3974((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(void))type metadata accessor for TrendsStack);
  sub_1006D3698();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18((uint64_t)v15, &qword_100969638);
}

uint64_t sub_1006D26D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v44 = a3;
  uint64_t v4 = type metadata accessor for TrendArrowIndicatorViewRepresentable();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100956D50);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000AFA94(&qword_100956D58) - 8;
  __chkstk_darwin(v43);
  uint64_t v41 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v42 = (uint64_t)&v40 - v14;
  uint64_t v15 = type metadata accessor for TrendsStack();
  uint64_t v16 = (void *)(a1 + *(int *)(v15 + 20));
  uint64_t v17 = v16[3];
  uint64_t v18 = v16[4];
  sub_10007E4EC(v16, v17);
  LOBYTE(v18) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18) & 1;
  uint64_t v19 = *(void *)(a1 + *(int *)(v15 + 32));
  uint64_t v20 = v40;
  sub_1006D3AA8(v40, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  v7[*(int *)(v5 + 28)] = v18;
  *(void *)&v7[*(int *)(v5 + 32)] = v19;
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1006D3AA8((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrendArrowIndicatorViewRepresentable);
  uint64_t v21 = &v11[*(int *)(v9 + 44)];
  long long v22 = v46;
  *(_OWORD *)uint64_t v21 = v45;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v47;
  sub_1006D3B10((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TrendArrowIndicatorViewRepresentable);
  LOBYTE(v19) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = v41;
  sub_1000AEF2C((uint64_t)v11, v41, &qword_100956D50);
  uint64_t v32 = v31 + *(int *)(v43 + 44);
  *(unsigned char *)uint64_t v32 = v19;
  *(void *)(v32 + 8) = v24;
  *(void *)(v32 + 16) = v26;
  *(void *)(v32 + 24) = v28;
  *(void *)(v32 + 32) = v30;
  *(unsigned char *)(v32 + 40) = 0;
  sub_10008DB18((uint64_t)v11, &qword_100956D50);
  uint64_t v33 = v42;
  sub_1000AEEC8(v31, v42, &qword_100956D58);
  uint64_t v34 = static HorizontalAlignment.leading.getter();
  sub_1006D2ABC(v20, a1, v48);
  v49[464] = 0;
  memcpy(&v49[7], v48, 0x1C8uLL);
  sub_1000AEF2C(v33, v31, &qword_100956D58);
  uint64_t v35 = v44;
  sub_1000AEF2C(v31, v44, &qword_100956D58);
  uint64_t v36 = sub_1000AFA94(&qword_100969668);
  uint64_t v37 = (void *)(v35 + *(int *)(v36 + 48));
  v50[0] = v34;
  v50[1] = 0;
  LOBYTE(v50[2]) = 0;
  memcpy((char *)&v50[2] + 1, v49, 0x1CFuLL);
  memcpy(v37, v50, 0x1E0uLL);
  uint64_t v38 = v35 + *(int *)(v36 + 64);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 0;
  sub_1006D3B70((uint64_t)v50);
  sub_10008DB18(v33, &qword_100956D58);
  v51[0] = v34;
  v51[1] = 0;
  char v52 = 0;
  memcpy(v53, v49, sizeof(v53));
  sub_1006D3C54((uint64_t)v51);
  return sub_10008DB18(v31, &qword_100956D58);
}

uint64_t sub_1006D2ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v66 = a3;
  uint64_t v64 = type metadata accessor for DynamicTypeSize();
  uint64_t v59 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  id v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (uint64_t)v56 - v6;
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (char *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)&v86[0] = v11;
  *((void *)&v86[0] + 1) = v12;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = static Alignment.leading.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v86, 0.0, 1, 0.0, 1, v20, v21, v13, v15, v19, v17);
  sub_1000A06C0(v13, v15, v19);
  swift_bridgeObjectRelease();
  long long v125 = v86[5];
  long long v126 = v86[6];
  long long v127 = v86[7];
  long long v128 = v86[8];
  long long v121 = v86[1];
  long long v122 = v86[2];
  long long v123 = v86[3];
  long long v124 = v86[4];
  long long v120 = v86[0];
  uint64_t KeyPath = swift_getKeyPath();
  *((void *)&v67 + 1) = static Font.callout.getter();
  *(void *)&long long v67 = swift_getKeyPath();
  uint64_t v68 = swift_getKeyPath();
  char v119 = 0;
  uint64_t v22 = type metadata accessor for TrendListMetric();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v69[*(int *)(v22 + 28)], v7);
  uint64_t v23 = Text.init(_:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  LOBYTE(v17) = v28 & 1;
  uint64_t v29 = static Alignment.leading.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v86, 0.0, 1, 0.0, 1, v29, v30, v23, v25, v17, v27);
  sub_1000A06C0(v23, v25, v17);
  swift_bridgeObjectRelease();
  long long v134 = v86[5];
  long long v135 = v86[6];
  long long v136 = v86[7];
  long long v137 = v86[8];
  long long v130 = v86[1];
  long long v131 = v86[2];
  long long v132 = v86[3];
  long long v133 = v86[4];
  long long v129 = v86[0];
  uint64_t v61 = swift_getKeyPath();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v31 = v62;
  sub_100092088(v62);
  unsigned int v58 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v32 = v59;
  id v57 = *(void (**)(char *))(v59 + 104);
  uint64_t v33 = v63;
  uint64_t v34 = v64;
  v57(v63);
  v56[1] = sub_1000A3B60((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v23) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v33, v34);
  v35((char *)v31, v34);
  if (v23) {
    double v36 = 0.0;
  }
  else {
    double v36 = -3.0;
  }
  long long v115 = v134;
  long long v116 = v135;
  long long v117 = v136;
  long long v118 = v137;
  long long v112 = v131;
  long long v113 = v132;
  long long v114 = v133;
  long long v110 = v129;
  long long v111 = v130;
  char v109 = 0;
  LODWORD(v59) = static Edge.Set.bottom.getter();
  sub_100092088(v31);
  ((void (*)(char *, void, uint64_t))v57)(v33, v58, v34);
  dispatch thunk of static Comparable.< infix(_:_:)();
  v35(v33, v34);
  v35((char *)v31, v34);
  char v37 = v109;
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  char v71 = 0;
  long long v46 = (char *)sub_1005F2334(*v69);
  id v47 = *(id *)&v46[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  uint64_t v48 = Color.init(uiColor:)();
  char v49 = v71;
  v72[6] = v126;
  v72[7] = v127;
  v72[8] = v128;
  v72[2] = v122;
  v72[3] = v123;
  v72[4] = v124;
  v72[5] = v125;
  v72[0] = v120;
  v72[1] = v121;
  uint64_t v50 = KeyPath;
  *(void *)&long long v73 = KeyPath;
  *((void *)&v73 + 1) = 0x3FE999999999999ALL;
  long long v74 = v67;
  *(void *)&long long v75 = v68;
  *((void *)&v75 + 1) = 1;
  v77[6] = v116;
  v77[7] = v117;
  v77[8] = v118;
  v77[2] = v112;
  v77[3] = v113;
  v77[4] = v114;
  v77[5] = v115;
  v77[0] = v110;
  v77[1] = v111;
  uint64_t v51 = v60;
  uint64_t v52 = v61;
  *(void *)&long long v78 = v61;
  *((void *)&v78 + 1) = 0x3FE999999999999ALL;
  *(void *)&long long v79 = v60;
  *((void *)&v79 + 1) = 1;
  LOBYTE(v80) = v37;
  uint64_t v81 = 0;
  *(double *)&long long v82 = v36;
  char v53 = v59;
  BYTE8(v82) = v59;
  *(void *)&long long v83 = v39;
  *((void *)&v83 + 1) = v41;
  *(void *)&long long v84 = v43;
  *((void *)&v84 + 1) = v45;
  LOBYTE(v85) = v71;
  *((void *)&v85 + 1) = v48;
  v86[10] = v67;
  v86[11] = v75;
  v86[6] = v126;
  v86[7] = v127;
  v86[8] = v128;
  v86[9] = v73;
  v86[2] = v122;
  v86[3] = v123;
  v86[4] = v124;
  v86[5] = v125;
  v86[0] = v120;
  v86[1] = v121;
  *(_OWORD *)((char *)&v86[24] + 8) = v82;
  *(_OWORD *)((char *)&v86[25] + 8) = v83;
  *(_OWORD *)((char *)&v86[26] + 8) = v84;
  *(_OWORD *)((char *)&v86[27] + 8) = v85;
  *(_OWORD *)((char *)&v86[20] + 8) = v118;
  *(_OWORD *)((char *)&v86[21] + 8) = v78;
  *(_OWORD *)((char *)&v86[22] + 8) = v79;
  *(_OWORD *)((char *)&v86[23] + 8) = v80;
  *(_OWORD *)((char *)&v86[16] + 8) = v114;
  *(_OWORD *)((char *)&v86[17] + 8) = v115;
  *(_OWORD *)((char *)&v86[18] + 8) = v116;
  *(_OWORD *)((char *)&v86[19] + 8) = v117;
  *(_OWORD *)((char *)&v86[12] + 8) = v110;
  *(_OWORD *)((char *)&v86[13] + 8) = v111;
  *(_OWORD *)((char *)&v86[14] + 8) = v112;
  char v54 = v119;
  char v76 = v119;
  LOBYTE(v86[12]) = v119;
  *(_OWORD *)((char *)&v86[15] + 8) = v113;
  memcpy(v66, v86, 0x1C8uLL);
  v87[6] = v116;
  v87[7] = v117;
  v87[8] = v118;
  v87[2] = v112;
  v87[3] = v113;
  v87[4] = v114;
  v87[5] = v115;
  v87[0] = v110;
  v87[1] = v111;
  uint64_t v88 = v52;
  uint64_t v89 = 0x3FE999999999999ALL;
  uint64_t v90 = v51;
  uint64_t v91 = 1;
  char v92 = v37;
  uint64_t v93 = 0;
  double v94 = v36;
  char v95 = v53;
  uint64_t v96 = v39;
  uint64_t v97 = v41;
  uint64_t v98 = v43;
  uint64_t v99 = v45;
  char v100 = v49;
  uint64_t v101 = v48;
  sub_1006D3D50((uint64_t)v72);
  sub_1006D3DCC((uint64_t)v77);
  sub_1006D3E40((uint64_t)v87);
  v102[6] = v126;
  v102[7] = v127;
  v102[8] = v128;
  _OWORD v102[2] = v122;
  v102[3] = v123;
  v102[4] = v124;
  v102[5] = v125;
  v102[0] = v120;
  v102[1] = v121;
  uint64_t v103 = v50;
  uint64_t v104 = 0x3FE999999999999ALL;
  long long v105 = v67;
  uint64_t v106 = v68;
  uint64_t v107 = 1;
  char v108 = v54;
  return sub_1006D3EB4((uint64_t)v102);
}

uint64_t sub_1006D32D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006D3AA8(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  uint64_t v7 = type metadata accessor for TrendListMetric();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t v8 = &v6[*(int *)(v4 + 20)];
  *(void *)uint64_t v8 = 0;
  v8[8] = -1;
  uint64_t v9 = type metadata accessor for TrendsStack();
  sub_1000AEF2C(a2 + *(int *)(v9 + 24), (uint64_t)v20, &qword_10094C750);
  if (v21)
  {
    uint64_t v10 = (char **)sub_10007E4EC(v20, v21);
    uint64_t v11 = (void *)(a2 + *(int *)(v9 + 20));
    v19[3] = v4;
    uint64_t v12 = sub_1000B1710(v19);
    sub_1006D3AA8((uint64_t)v6, (uint64_t)v12, type metadata accessor for TrendsActionContext);
    uint64_t v13 = *v10;
    uint64_t v14 = v11[3];
    uint64_t v15 = v11[4];
    uint64_t v16 = sub_10007E4EC(v11, v14);
    sub_100676328((uint64_t)v16, (uint64_t)v19, v13, v14, v15);
    sub_1006D3B10((uint64_t)v6, type metadata accessor for TrendsActionContext);
    sub_10008DB18((uint64_t)v19, &qword_100955A00);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v20);
  }
  else
  {
    sub_1006D3B10((uint64_t)v6, type metadata accessor for TrendsActionContext);
    return sub_10008DB18((uint64_t)v20, &qword_10094C750);
  }
}

uint64_t sub_1006D34CC()
{
  uint64_t v1 = type metadata accessor for TrendsStack();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v3 + *(int *)(v1 + 20));
  uint64_t v5 = v3 + *(int *)(v1 + 24);
  if (*(void *)(v5 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v5);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006D3618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TrendsStack() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1006D23AC(a1, v6, a2);
}

unint64_t sub_1006D3698()
{
  unint64_t result = qword_100969640;
  if (!qword_100969640)
  {
    sub_1000A1370(&qword_100969638);
    sub_1000A132C(&qword_100969648, &qword_100969650);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969640);
  }
  return result;
}

uint64_t sub_1006D375C()
{
  uint64_t v1 = (int *)(type metadata accessor for TrendListMetric() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = type metadata accessor for TrendsStack();
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + v1[9];
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v5;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v5, v9);
  }
  else
  {
    swift_release();
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v8 + *(int *)(v4 + 20));
  uint64_t v10 = v8 + *(int *)(v4 + 24);
  if (*(void *)(v10 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v10);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006D3974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006D39DC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TrendListMetric() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for TrendsStack() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1006D32D4(v0 + v2, v5);
}

uint64_t sub_1006D3AA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006D3B10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006D3B70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 224);
  uint64_t v3 = *(void *)(a1 + 232);
  char v4 = *(unsigned char *)(a1 + 240);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1006D3C54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 224);
  uint64_t v3 = *(void *)(a1 + 232);
  char v4 = *(unsigned char *)(a1 + 240);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006D3D50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006D3DCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006D3E40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006D3EB4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1006D3F34()
{
  unint64_t result = qword_100969670;
  if (!qword_100969670)
  {
    sub_1000A1370(&qword_100969610);
    sub_1000A132C(&qword_100969678, &qword_100969608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969670);
  }
  return result;
}

id sub_1006D3FD4(double a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = v3;
  id v9 = [v3 allValidLocations];
  unint64_t v34 = sub_1002E0AE0();
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62) {
    goto LABEL_36;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v11 < 2) {
      return 0;
    }
    id v12 = [v35 allValidLocations];
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v13 & 0xC000000000000001) != 0)
    {
      uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v14 = (char *)*(id *)(v13 + 32);
    }
    uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    id v15 = [v3 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Date.timeIntervalSince(_:)();
    double v2 = v16;
    uint64_t v17 = *(void (**)(void, void))(v6 + 8);
    v6 += 8;
    id v12 = v17;
    v17(v8, v5);
    id v18 = [v35 allValidLocations];
    unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v19 >> 62))
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_9:
    id v33 = v3;
    double v21 = fabs(v2);
    swift_bridgeObjectRelease();
    if (v20 < 1) {
      break;
    }
    uint64_t v3 = 0;
    while (!__OFSUB__(v20, v3))
    {
      uint64_t v22 = (uint64_t)&v3[(v20 - (uint64_t)v3) / 2];
      if (__OFADD__(v3, (v20 - (uint64_t)v3) / 2)) {
        goto LABEL_32;
      }
      id v23 = [v35 allValidLocations];
      uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v24 & 0xC000000000000001) != 0)
      {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v22 < 0) {
          goto LABEL_33;
        }
        if ((unint64_t)v22 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_34;
        }
        id v25 = *(id *)(v24 + 8 * v22 + 32);
      }
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      id v27 = [v26 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSince(_:)();
      double v29 = v28;
      ((void (*)(char *, uint64_t))v12)(v8, v5);
      double v2 = fabs(v29);
      if (v2 < 0.5)
      {

        return v26;
      }
      if (v2 < v21)
      {

        id v33 = v26;
        double v21 = v2;
      }
      id v30 = [v26 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v30) = static Date.< infix(_:_:)();
      ((void (*)(char *, uint64_t))v12)(v8, v5);
      if (v30)
      {
        uint64_t v3 = (char *)(v22 + 1);
        if (__OFADD__(v22, 1)) {
          goto LABEL_35;
        }
        uint64_t v22 = v20;
      }
      uint64_t v20 = v22;
      if ((uint64_t)v3 >= v22) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_25:
  if (v21 > a1)
  {

    return 0;
  }
  return v33;
}

void *assignWithCopy for ActivityDayHistogram(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  return a1;
}

__n128 initializeWithTake for ActivityDayHistogram(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ActivityDayHistogram(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDayHistogram(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityDayHistogram(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1006D4658(unsigned __int8 a1)
{
  if (*(void *)(*v1 + 16) <= (unint64_t)a1
    || (uint64_t v2 = 24 * a1, v3 = *v1 + v2, (*(unsigned char *)(v3 + 48) & 1) != 0)
    || (uint64_t v4 = v1[7], *(void *)(v4 + 16) <= (unint64_t)a1)
    || (*(unsigned char *)(v4 + v2 + 48) & 1) != 0
    || (double v5 = *(double *)(v4 + v2 + 32), v5 <= 0.0))
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    *(double *)&uint64_t result = *(double *)(v3 + 32) / v5;
  }
  return result;
}

BOOL sub_1006D46C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[7];
  uint64_t v6 = a2[8];
  if ((sub_1003755DC(*a1, *a2) & 1) == 0 || !sub_10037564C(v2, v5) || (sub_1003755DC(v4, v7) & 1) == 0) {
    return 0;
  }

  return sub_10037564C(v3, v6);
}

id sub_1006D47D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DemoDataProvider();
  [super dealloc];
}

char *sub_1006D4818(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel;
  id v11 = objc_allocWithZone((Class)UILabel);
  id v12 = v5;
  id v13 = [v11 init];
  uint64_t v14 = (void *)UILabel.withNumberOfLines(_:)();

  id v15 = (void *)UILabel.withLineBreakMode(_:)();
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v10] = v15;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) init];
  id v18 = (void *)UILabel.withNumberOfLines(_:)();

  unint64_t v19 = (void *)UILabel.withLineBreakMode(_:)();
  id v20 = [self secondaryLabelColor];
  double v21 = (void *)UILabel.withTextColor(_:)();

  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v12[v16] = v21;

  v26.receiver = v12;
  v26.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  uint64_t v22 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel];
  uint64_t v24 = v22;
  [v24 addSubview:v23];
  [v24 addSubview:*(void *)&v24[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel]];
  sub_1006D4BA0();

  return v24;
}

id sub_1006D4A08(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel;
  id v5 = objc_allocWithZone((Class)UILabel);
  uint64_t v6 = v2;
  id v7 = [v5 init];
  uint64_t v8 = (void *)UILabel.withNumberOfLines(_:)();

  id v9 = (void *)UILabel.withLineBreakMode(_:)();
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v2[v4] = v9;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) init];
  id v12 = (void *)UILabel.withNumberOfLines(_:)();

  id v13 = (void *)UILabel.withLineBreakMode(_:)();
  id v14 = [self secondaryLabelColor];
  id v15 = (void *)UILabel.withTextColor(_:)();

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v10] = v15;

  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  [super initWithCoder:a1];

  return v16;
}

void sub_1006D4BA0()
{
  uint64_t v1 = v0;
  objc_super v26 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100754580;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel];
  id v4 = [v3 topAnchor];
  id v5 = [v1 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 trailingAnchor];
  id v8 = [v1 trailingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8 constant:-15.0];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 leadingAnchor];
  id v11 = [v1 leadingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 constant:15.0];

  *(void *)(v2 + 48) = v12;
  id v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel];
  id v14 = [v13 topAnchor];
  id v15 = [v3 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:8.0];

  *(void *)(v2 + 56) = v16;
  id v17 = [v13 bottomAnchor];
  id v18 = [v1 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:-15.0];

  *(void *)(v2 + 64) = v19;
  id v20 = [v13 trailingAnchor];
  id v21 = [v1 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:-15.0];

  *(void *)(v2 + 72) = v22;
  id v23 = [v13 leadingAnchor];
  id v24 = [v1 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:15.0];

  *(void *)(v2 + 80) = v25;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 activateConstraints:isa];
}

id sub_1006D4F38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseSectionHeaderView()
{
  return self;
}

id sub_1006D4FDC()
{
  AAUIAwardsDataProviderSection.localized()();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v1 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  objc_super v2 = NSFontAttributeName;
  uint64_t v3 = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 40) = v3;
  sub_1000DFC2C(inited);
  id v4 = objc_allocWithZone((Class)NSAttributedString);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001DCBD0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithString:v5 attributes:isa];

  return v7;
}

id sub_1006D5158()
{
  _StringGuts.grow(_:)(22);
  AAUIAwardsDataProviderSection.rawValue.getter();
  swift_bridgeObjectRelease();
  v0._object = (void *)0x80000001007D6710;
  v0._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v0);
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  NSString v5 = self;
  id v6 = NSFontAttributeName;
  id v7 = [v5 preferredFontForTextStyle:UIFontTextStyleFootnote];
  *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 40) = v7;
  sub_1000DFC2C(inited);
  id v8 = objc_allocWithZone((Class)NSAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001DCBD0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithString:v9 attributes:isa];

  return v11;
}

double sub_1006D5398(double a1)
{
  double v1 = a1 + -30.0;
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  id v3 = (void *)UILabel.withNumberOfLines(_:)();

  id v4 = (void *)UILabel.withLineBreakMode(_:)();
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [objc_allocWithZone((Class)UILabel) init];
  id v6 = (void *)UILabel.withNumberOfLines(_:)();

  id v7 = (void *)UILabel.withLineBreakMode(_:)();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = sub_1006D4FDC();
  [v4 setAttributedText:v8];

  id v9 = sub_1006D5158();
  [v7 setAttributedText:v9];

  [v4 sizeThatFits:v1, 1.79769313e308];
  double v11 = v10;
  [v7 sizeThatFits:v1];
  double v13 = v12;

  return v11 + 8.0 + v13 + 15.0;
}

uint64_t sub_1006D5530(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = 0;
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription] = 0;
  id v4 = &v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
  *(void *)id v4 = 0;
  v4[8] = 1;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations] = _swiftEmptyArrayStorage;
  id v6 = v1;

  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations] = _swiftEmptyArrayStorage;
  sub_10019B9F8(v3);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for AddToYourRingCollectionViewController();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1006D567C()
{
  id result = [self defaultWorkspace];
  if (result)
  {
    id v2 = result;
    [result removeObserver:v0];

    uint64_t v3 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription;
    id v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription];
    if (v4) {
      [v4 invalidate];
    }
    *(void *)&v0[v3] = 0;
    swift_unknownObjectRelease();
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
    return [super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006D5864()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
  [super viewDidLoad];
  id v1 = [v0 collectionView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v2 = v1;
  [v1 setDelegate:v0];

  id v3 = [v0 collectionView];
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v4 = v3;
  [v3 setDataSource:v0];

  id v5 = [v0 collectionView];
  if (v5)
  {
    id v6 = v5;
    [v5 setScrollEnabled:0];

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1006D5990()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  id v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  id v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  void v9[4] = v7;
  v9[5] = sub_1006DB238;
  v9[6] = v5;
  swift_release();
  sub_1000693DC((uint64_t)v4, (uint64_t)&unk_1009698F0, (uint64_t)v9);
  swift_release();
  id result = [self defaultWorkspace];
  if (result)
  {
    double v11 = result;
    [result addObserver:v1];

    id v12 = objc_msgSend(objc_msgSend(self, "subjectMonitorRegistry"), "addMonitor:", v1);
    swift_unknownObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription) = v12;
    swift_unknownObjectRelease();
    swift_getObjectType();
    type metadata accessor for NetworkConditionsChanged();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)();
    swift_release();
    swift_release();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v14);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006D5C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a1;
  v6[11] = a4;
  type metadata accessor for MainActor();
  v6[14] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[15] = v8;
  v6[16] = v7;
  return _swift_task_switch(sub_1006D5D20, v8, v7);
}

uint64_t sub_1006D5D20()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 136) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider, v0 + 16);

    uint64_t v3 = sub_10007E4EC((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = *v3;
    *(void *)(v0 + 144) = *v3;
    return _swift_task_switch(sub_1006D5E28, v4, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 80) = *(void *)(v0 + 136) == 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1006D5E28()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler);
  uint64_t v3 = *v2;
  *uint64_t v2 = v0[12];
  v2[1] = v1;
  swift_retain();
  sub_10005E5F8(v3);
  sub_1001ADBAC();
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  return _swift_task_switch(sub_1006D5EC0, v4, v5);
}

uint64_t sub_1006D5EC0()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  **(unsigned char **)(v0 + 80) = *(void *)(v0 + 136) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1006D5F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v11 = static MainActor.shared.getter();
    id v12 = (void *)swift_allocObject();
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    void v12[4] = v10;
    swift_release();
    sub_1000713D0((uint64_t)v6, a3, (uint64_t)v12);
    swift_release();
  }
}

uint64_t sub_1006D60B4()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  void v8[4] = v6;
  v8[5] = ObjectType;
  swift_release();
  sub_1000713D0((uint64_t)v3, (uint64_t)&unk_1009698C8, (uint64_t)v8);
  swift_release();
  v5(v3, 1, 1, v4);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  uint64_t v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  swift_release();
  sub_1000713D0((uint64_t)v3, (uint64_t)&unk_1009698D8, (uint64_t)v11);
  swift_release();
  v5(v3, 1, 1, v4);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  id v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  swift_release();
  sub_1000713D0((uint64_t)v3, (uint64_t)&unk_1009698E0, (uint64_t)v14);
  return swift_release();
}

id sub_1006D6364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v35 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v35 - v10;
  __chkstk_darwin(v12);
  id v14 = (char *)v35 - v13;
  __chkstk_darwin(v15);
  uint64_t v38 = (char *)v35 - v16;
  IndexSet.init()();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v11, v14, v2);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    double v36 = v14;
    uint64_t v37 = v3;
    id v18 = (void (**)(char *, uint64_t))(v3 + 8);
    id v19 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    v35[1] = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    do
    {
      ++v20;
      IndexSet.init(integer:)();
      IndexSet.union(_:)();
      id v21 = *v18;
      (*v18)(v5, v2);
      v21(v11, v2);
      id v22 = *v19;
      (*v19)(v11, v8, v2);
    }
    while (v17 != v20);
    swift_bridgeObjectRelease();
    id v14 = v36;
    uint64_t v3 = v37;
  }
  else
  {
    id v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  }
  id v23 = v38;
  v22(v38, v11, v2);
  id v24 = *(void (**)(char *, uint64_t))(v3 + 8);
  v24(v14, v2);
  id v25 = v39;
  id result = [v39 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  id v27 = result;
  id v28 = [result window];

  id result = [v25 collectionView];
  id v30 = result;
  if (!v28)
  {
    if (result)
    {
      [result reloadData];
      goto LABEL_12;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  IndexSet._bridgeToObjectiveC()(v29);
  uint64_t v32 = v31;
  [v30 reloadSections:v31];

  id v30 = v32;
LABEL_12:

  double v33 = *(double *)&v25[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight];
  sub_1006EBFDC();
  if (v33 != v34)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1005753E0();
      swift_unknownObjectRelease();
    }
  }
  return (id)((uint64_t (*)(char *, uint64_t))v24)(v23, v2);
}

uint64_t sub_1006D6710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[35] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[36] = v5;
  v4[37] = *(void *)(v5 - 8);
  v4[38] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[39] = v6;
  v4[40] = *(void *)(v6 - 8);
  v4[41] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[42] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[43] = v8;
  v4[44] = v7;
  return _swift_task_switch(sub_1006D6860, v8, v7);
}

id sub_1006D6860()
{
  id result = [self sharedBehavior];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v2 = result;
  unsigned int v3 = [result isStandalonePhoneFitnessMode];

  if (v3)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {

      uint64_t v20 = (uint64_t (__cdecl *)())((char *)&dword_100966388 + dword_100966388);
      uint64_t v5 = (void *)swift_task_alloc();
      v0[45] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1006D6CD0;
      return (id)v20();
    }
    swift_release();
    uint64_t v17 = v0[41];
    uint64_t v6 = v0[38];
    uint64_t v19 = v0[40];
    uint64_t v21 = v0[39];
    uint64_t v8 = v0[36];
    uint64_t v7 = v0[37];
    sub_1000DF004();
    id v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v13 = swift_allocObject();
    swift_beginAccess();
    id v14 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    v0[7] = v13;
    v0[6] = sub_1006DB1D4;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100070394;
    v0[5] = &unk_1008D75A0;
    uint64_t v11 = _Block_copy(v0 + 2);
    swift_retain();
    uint64_t v12 = v17;
    static DispatchQoS.unspecified.getter();
    v0[32] = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v16 = v0[41];
    uint64_t v19 = v0[40];
    uint64_t v6 = v0[38];
    uint64_t v21 = v0[39];
    uint64_t v8 = v0[36];
    uint64_t v7 = v0[37];
    swift_release();
    sub_1000DF004();
    id v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v9 = swift_allocObject();
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    v0[13] = v9;
    v0[12] = sub_1006DB1B0;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_100070394;
    v0[11] = &unk_1008D7578;
    uint64_t v11 = _Block_copy(v0 + 8);
    swift_retain();
    uint64_t v12 = v16;
    static DispatchQoS.unspecified.getter();
    v0[33] = _swiftEmptyArrayStorage;
  }
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v21);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return (id)v15();
}

uint64_t sub_1006D6CD0(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 368) = a1;
  *(unsigned char *)(v4 + 376) = a2;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 352);
  uint64_t v6 = *(void *)(v3 + 344);
  return _swift_task_switch(sub_1006D6DFC, v6, v5);
}

uint64_t sub_1006D6DFC()
{
  uint64_t v1 = (void *)v0;
  char v2 = *(unsigned char *)(v0 + 376);
  uint64_t v3 = v1[46];
  swift_release();
  if ((v2 & 1) != 0 || v3 > 9)
  {
    uint64_t v5 = v1[41];
    uint64_t v6 = v1[38];
    uint64_t v18 = v1[40];
    uint64_t v19 = v1[39];
    uint64_t v7 = v1[36];
    uint64_t v17 = v1[37];
    sub_1000DF004();
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v12 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    v1[7] = v12;
    v1[6] = sub_1006DB1D4;
    v1[2] = _NSConcreteStackBlock;
    v1[3] = 1107296256;
    v1[4] = sub_100070394;
    v1[5] = &unk_1008D75A0;
    uint64_t v11 = _Block_copy(v1 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v1[32] = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v4 = v1[46];
    uint64_t v5 = v1[41];
    uint64_t v6 = v1[38];
    uint64_t v18 = v1[40];
    uint64_t v19 = v1[39];
    uint64_t v7 = v1[36];
    uint64_t v17 = v1[37];
    sub_1000DF004();
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v8 = swift_allocObject();
    swift_beginAccess();
    uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v10 = swift_allocObject();
    v1[19] = v10;
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v4;
    v1[18] = sub_1006DB230;
    v1[14] = _NSConcreteStackBlock;
    v1[15] = 1107296256;
    v1[16] = sub_100070394;
    v1[17] = &unk_1008D75F0;
    uint64_t v11 = _Block_copy(v1 + 14);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v1[34] = _swiftEmptyArrayStorage;
  }
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v5, v19);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v1[1];
  return v14();
}

void sub_1006D7188(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = &Strong[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
    *(void *)uint64_t v4 = 0;
    v4[8] = 1;
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_1006D6364(a2);
  }
}

void sub_1006D7220(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = &Strong[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
    *(void *)uint64_t v4 = a2;
    v4[8] = 0;
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5
    && (uint64_t v6 = (void *)v5,
        uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell),
        id v8 = v7,
        v6,
        v7))
  {
    sub_10044FD30();
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (!v9) {
      return;
    }
    id v8 = (id)v9;
    sub_1006D6364((uint64_t)&off_1008B7368);
  }
}

uint64_t sub_1006D731C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[28] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[32] = v6;
  v4[33] = *(void *)(v6 - 8);
  v4[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[35] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[36] = v8;
  v4[37] = v7;
  return _swift_task_switch(sub_1006D746C, v8, v7);
}

uint64_t sub_1006D746C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v2 = (void *)Strong;
    sub_10008E75C(Strong+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider, (uint64_t)(v0 + 8));

    sub_10007E4EC(v0 + 8, v0[11]);
    uint64_t v16 = (uint64_t (__cdecl *)())((char *)&dword_10094DB58 + dword_10094DB58);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[38] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1006D7798;
    return v16();
  }
  else
  {
    swift_release();
    uint64_t v5 = v0[34];
    uint64_t v6 = v0[31];
    uint64_t v15 = v0[33];
    uint64_t v17 = v0[32];
    uint64_t v7 = v0[29];
    uint64_t v8 = v0[30];
    sub_1000DF004();
    id v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v9 = swift_allocObject();
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = _swiftEmptyArrayStorage;
    v0[6] = sub_1006DB1A8;
    v0[7] = v11;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100070394;
    v0[5] = &unk_1008D7550;
    uint64_t v12 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[27] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v5, v17);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1006D7798(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 312) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v3 + 288);
    uint64_t v5 = *(void *)(v3 + 296);
    uint64_t v6 = sub_1006D7C54;
  }
  else
  {
    uint64_t v9 = v3 + 288;
    uint64_t v8 = *(void *)(v3 + 288);
    uint64_t v7 = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1006D78E8;
    uint64_t v4 = v8;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006D78E8()
{
  uint64_t v1 = v0[39];
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 8));
  if (!*(void *)(v1 + 16)) {
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v3 = (void *)Strong;
  sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_networkEvaluator, (uint64_t)(v0 + 13));

  sub_10007E4EC(v0 + 13, v0[16]);
  dispatch thunk of NetworkEvaluating.queryNetworkConditions()();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 13));
  uint64_t v4 = NetworkConditions.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == NetworkConditions.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v8 = (void *)v0[39];
LABEL_7:
    uint64_t v20 = v8;
    goto LABEL_8;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_7;
  }
  uint64_t v20 = (void *)v0[39];
LABEL_8:
  uint64_t v9 = v0[34];
  uint64_t v10 = v0[31];
  uint64_t v22 = v0[33];
  uint64_t v23 = v0[32];
  uint64_t v11 = v0[29];
  uint64_t v12 = v0[30];
  sub_1000DF004();
  uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  id v14 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v20;
  v0[6] = sub_1006DB1A8;
  v0[7] = v15;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008D7550;
  uint64_t v16 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[27] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v9, v23);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1006D7C54()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 8));
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[31];
  uint64_t v12 = v0[33];
  uint64_t v13 = v0[32];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  sub_1000DF004();
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = _swiftEmptyArrayStorage;
  v0[6] = sub_1006DB1A8;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008D7550;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[27] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1006D7EAC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    *(void *)(Strong
              + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations) = a2;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_1006D6364((uint64_t)&off_1008B7390);
  }
}

uint64_t sub_1006D7F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[28] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[32] = v6;
  v4[33] = *(void *)(v6 - 8);
  v4[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[35] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[36] = v8;
  v4[37] = v7;
  return _swift_task_switch(sub_1006D80AC, v8, v7);
}

uint64_t sub_1006D80AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 13));

    uint64_t v3 = sub_10007E4EC(v0 + 13, v0[16]);
    uint64_t v4 = *v3;
    v0[38] = *v3;
    uint64_t v5 = sub_1006D8420;
LABEL_5:
    return _swift_task_switch(v5, v4, 0);
  }
  v0[43] = _swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_10008E75C(v6 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    uint64_t v8 = sub_10007E4EC(v0 + 8, v0[11]);
    uint64_t v4 = *v8;
    v0[44] = *v8;
    uint64_t v5 = sub_1006D8D8C;
    goto LABEL_5;
  }
  swift_release();
  uint64_t v19 = v0[43];
  uint64_t v9 = v0[34];
  uint64_t v10 = v0[31];
  uint64_t v21 = v0[33];
  uint64_t v22 = v0[32];
  uint64_t v11 = v0[29];
  uint64_t v12 = v0[30];
  sub_1000DF004();
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = v13;
  v15[3] = v19;
  uint64_t v15[4] = _swiftEmptyArrayStorage;
  v0[6] = sub_1006DAD94;
  v0[7] = v15;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008D73E8;
  uint64_t v16 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[27] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v9, v22);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1006D8420()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = *(void *)(v1 + 216);
  v0[39] = v2;
  v0[40] = *(void *)(v1 + 224);
  if (*(unsigned char *)(v1 + 232) == 1)
  {
    v0[42] = *(void *)(v1 + 216);
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[37];
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1006D8768;
    uint64_t v8 = v5;
    uint64_t v9 = v6;
  }
  else
  {
    if (!*(unsigned char *)(v1 + 232))
    {
      swift_retain();
      uint64_t v3 = (void *)swift_task_alloc();
      v0[41] = v3;
      uint64_t v4 = sub_1000AFA94(&qword_10095C080);
      *uint64_t v3 = v0;
      v3[1] = sub_1006D857C;
      return Task.value.getter(v4, v2, (char *)&type metadata for () + 8, v4, &protocol self-conformance witness table for Error);
    }
    uint64_t v8 = v0[36];
    uint64_t v9 = v0[37];
    uint64_t v7 = sub_1006D8A78;
  }
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1006D857C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 304);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_1006DB414;
  }
  else
  {
    uint64_t v4 = sub_1006D86B4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006D86B4()
{
  uint64_t v1 = v0[38];
  sub_100403EB0(v0[39], v0[40], 0);
  if (*(unsigned char *)(v1 + 232) == 1)
  {
    uint64_t v2 = v0[37];
    v0[42] = *(void *)(v0[38] + 216);
    uint64_t v3 = v0[36];
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1006D8768;
    uint64_t v5 = v3;
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[37];
    uint64_t v4 = sub_1006D8A78;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1006D8768()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 13));
  v0[43] = v0[42];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    uint64_t v3 = sub_10007E4EC(v0 + 8, v0[11]);
    uint64_t v4 = *v3;
    v0[44] = *v3;
    return _swift_task_switch(sub_1006D8D8C, v4, 0);
  }
  else
  {
    swift_release();
    uint64_t v15 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v6 = v0[31];
    uint64_t v17 = v0[33];
    uint64_t v18 = v0[32];
    uint64_t v7 = v0[29];
    uint64_t v8 = v0[30];
    sub_1000DF004();
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v9 = swift_allocObject();
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v9;
    uint64_t v11[3] = v15;
    v11[4] = _swiftEmptyArrayStorage;
    v0[6] = sub_1006DAD94;
    v0[7] = v11;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100070394;
    v0[5] = &unk_1008D73E8;
    uint64_t v12 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[27] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1006D8A78()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 13));
  v0[43] = _swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    uint64_t v3 = sub_10007E4EC(v0 + 8, v0[11]);
    uint64_t v4 = *v3;
    v0[44] = *v3;
    return _swift_task_switch(sub_1006D8D8C, v4, 0);
  }
  else
  {
    swift_release();
    uint64_t v15 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v6 = v0[31];
    uint64_t v17 = v0[33];
    uint64_t v18 = v0[32];
    uint64_t v7 = v0[29];
    uint64_t v8 = v0[30];
    sub_1000DF004();
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v9 = swift_allocObject();
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v9;
    uint64_t v11[3] = v15;
    v11[4] = _swiftEmptyArrayStorage;
    v0[6] = sub_1006DAD94;
    v0[7] = v11;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100070394;
    v0[5] = &unk_1008D73E8;
    uint64_t v12 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[27] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1006D8D8C()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = *(void *)(v1 + 216);
  v0[45] = v2;
  v0[46] = *(void *)(v1 + 224);
  if (*(unsigned char *)(v1 + 232) == 1)
  {
    v0[48] = *(void *)(v1 + 224);
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[37];
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1006D90D4;
    uint64_t v8 = v5;
    uint64_t v9 = v6;
  }
  else
  {
    if (!*(unsigned char *)(v1 + 232))
    {
      swift_retain();
      uint64_t v3 = (void *)swift_task_alloc();
      v0[47] = v3;
      uint64_t v4 = sub_1000AFA94(&qword_10095C080);
      *uint64_t v3 = v0;
      v3[1] = sub_1006D8EE8;
      return Task.value.getter(v4, v2, (char *)&type metadata for () + 8, v4, &protocol self-conformance witness table for Error);
    }
    uint64_t v8 = v0[36];
    uint64_t v9 = v0[37];
    uint64_t v7 = sub_1006D9364;
  }
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1006D8EE8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 352);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_1006D9020;
  }
  else
  {
    uint64_t v4 = sub_1006DB418;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006D9020()
{
  uint64_t v1 = v0[44];
  sub_100403EB0(v0[45], v0[46], 0);
  if (*(unsigned char *)(v1 + 232) == 1)
  {
    v0[48] = *(void *)(v0[44] + 224);
    uint64_t v2 = v0[36];
    uint64_t v3 = v0[37];
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1006D90D4;
    uint64_t v5 = v2;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[37];
    uint64_t v4 = sub_1006D9364;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1006D90D4()
{
  uint64_t v1 = v0[48];
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 8));
  uint64_t v2 = (void *)v0[48];
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v0[43];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[31];
  uint64_t v15 = v0[33];
  uint64_t v16 = v0[32];
  uint64_t v5 = v0[29];
  uint64_t v14 = v0[30];
  sub_1000DF004();
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v12;
  void v8[4] = v2;
  v0[6] = sub_1006DAD94;
  v0[7] = v8;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008D73E8;
  uint64_t v9 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[27] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v16);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1006D9364()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)(v0 + 8));
  uint64_t v11 = v0[43];
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[31];
  uint64_t v13 = v0[33];
  uint64_t v14 = v0[32];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  sub_1000DF004();
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  void v7[3] = v11;
  v7[4] = _swiftEmptyArrayStorage;
  v0[6] = sub_1006DAD94;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100070394;
  v0[5] = &unk_1008D73E8;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[27] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1006D95CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations) = a2;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations) = a3;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_1006D6364((uint64_t)&off_1008B73B8);
  }
}

uint64_t type metadata accessor for AddToYourRingCollectionViewController()
{
  return self;
}

uint64_t sub_1006D975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  sub_1000AFA94(&qword_10094B7A0);
  v4[14] = swift_task_alloc();
  v4[15] = type metadata accessor for MainActor();
  unsigned char v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_1006D9828, v6, v5);
}

uint64_t sub_1006D9828()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 2));

    sub_10007E4EC(v0 + 2, v0[5]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[19] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1006D9A64;
    return sub_10059593C();
  }
  else
  {
    swift_release();
    swift_beginAccess();
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = v0[14];
      uint64_t v8 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      uint64_t v10 = static MainActor.shared.getter();
      uint64_t v11 = (void *)swift_allocObject();
      void v11[2] = v10;
      uint64_t v11[3] = &protocol witness table for MainActor;
      v11[4] = v9;
      swift_release();
      sub_1000713D0(v7, (uint64_t)&unk_1009698B8, (uint64_t)v11);
      swift_release();
    }
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1006D9A64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1006D9B84, v3, v2);
}

uint64_t sub_1006D9B84()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    void v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_1000713D0(v3, (uint64_t)&unk_1009698B8, (uint64_t)v7);
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1006D9D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  sub_1000AFA94(&qword_10094B7A0);
  v4[14] = swift_task_alloc();
  v4[15] = type metadata accessor for MainActor();
  unsigned char v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_1006D9E48, v6, v5);
}

uint64_t sub_1006D9E48()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 2));

    sub_10007E4EC(v0 + 2, v0[5]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[19] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1006DA084;
    return sub_10059593C();
  }
  else
  {
    swift_release();
    swift_beginAccess();
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = v0[14];
      uint64_t v8 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      uint64_t v10 = static MainActor.shared.getter();
      uint64_t v11 = (void *)swift_allocObject();
      void v11[2] = v10;
      uint64_t v11[3] = &protocol witness table for MainActor;
      v11[4] = v9;
      swift_release();
      sub_1000713D0(v7, (uint64_t)&unk_1009698A0, (uint64_t)v11);
      swift_release();
    }
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1006DA084()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1006DA1A4, v3, v2);
}

uint64_t sub_1006DA1A4()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    void v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_1000713D0(v3, (uint64_t)&unk_1009698A0, (uint64_t)v7);
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1006DA39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  sub_1000AFA94(&qword_10094B7A0);
  v4[14] = swift_task_alloc();
  v4[15] = type metadata accessor for MainActor();
  unsigned char v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_1006DA468, v6, v5);
}

uint64_t sub_1006DA468()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10008E75C(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 2));

    sub_10007E4EC(v0 + 2, v0[5]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[19] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1006DA584;
    return sub_10059593C();
  }
  else
  {
    return _swift_task_switch(sub_1006DA70C, 0, 0);
  }
}

uint64_t sub_1006DA584()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1006DA6A4, v3, v2);
}

uint64_t sub_1006DA6A4()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  return _swift_task_switch(sub_1006DA70C, 0, 0);
}

uint64_t sub_1006DA70C()
{
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1006DA798, v2, v1);
}

uint64_t sub_1006DA798()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = v0[14];
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    void v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_1000713D0(v3, (uint64_t)&unk_100969880, (uint64_t)v7);
    swift_release();
  }
  uint64_t v8 = v0[17];
  uint64_t v9 = v0[18];
  return _swift_task_switch(sub_1006DA90C, v8, v9);
}

uint64_t sub_1006DA90C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006DAA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  id v8 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  void v12[4] = v10;
  swift_release();
  sub_1000713D0((uint64_t)v7, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1006DAB9C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006DABD4()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DABDC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006DA39C(a1, v4, v5, v6);
}

uint64_t sub_1006DAC90()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DAC98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006D7F5C(a1, v4, v5, v6);
}

uint64_t sub_1006DAD4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006DAD94()
{
  sub_1006D95CC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1006DADA0()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DADA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006D9D7C(a1, v4, v5, v6);
}

uint64_t sub_1006DAE5C()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DAE64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_1006D7F5C(a1, v4, v5, v6);
}

uint64_t sub_1006DAF18()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DAF20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006D975C(a1, v4, v5, v6);
}

uint64_t sub_1006DAFD4()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DAFDC()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DAFE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006D6710(a1, v4, v5, v6);
}

uint64_t sub_1006DB0A4()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DB0AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000DBD6C;
  return sub_1006D731C(a1, v4, v5, v6);
}

uint64_t sub_1006DB160()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DB168()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006DB1A8()
{
  sub_1006D7EAC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1006DB1B0()
{
  sub_1006D7188(v0, (uint64_t)&off_1008B7318);
}

void sub_1006DB1D4()
{
  sub_1006D7188(v0, (uint64_t)&off_1008B7340);
}

uint64_t sub_1006DB1F8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1006DB230()
{
  sub_1006D7220(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1006DB238()
{
  sub_1006D5F40(v0, (uint64_t)&unk_1008D7678, (uint64_t)&unk_100969900);
}

uint64_t sub_1006DB270()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006DB2B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000DBD6C;
  return sub_1006D5C84(a1, v4, v5, v6, v7, v8);
}

void sub_1006DB380()
{
  sub_1006D5F40(v0, (uint64_t)&unk_1008D7650, (uint64_t)&unk_1009698F8);
}

uint64_t sub_1006DB3B8()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DB3C0()
{
  return sub_1006DB3C8();
}

uint64_t sub_1006DB3C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006DB434@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006DB44C(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram, a1);
}

uint64_t sub_1006DB440@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006DB44C(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram, a1);
}

uint64_t sub_1006DB44C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(v2 + *a1);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (*v4)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = v4[4];
    uint64_t v10 = v4[5];
    uint64_t v11 = v4[6];
    uint64_t v12 = *v4;
    uint64_t v13 = v5;
  }
  else
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v15 = 24;
    }
    sub_100087AC8(v15, (uint64_t)&v20, 0.0, (double)v15);
    uint64_t v16 = v23;
    uint64_t v17 = *v4;
    long long v18 = v21;
    *(_OWORD *)uint64_t v4 = v20;
    *((_OWORD *)v4 + 1) = v18;
    *((_OWORD *)v4 + 2) = v22;
    v4[6] = v16;
    sub_1000B013C((uint64_t)&v20);
    sub_1000D6120(v17);
    uint64_t v10 = *((void *)&v22 + 1);
    uint64_t v11 = v23;
    uint64_t v8 = *((void *)&v21 + 1);
    uint64_t v9 = v22;
    uint64_t v7 = v21;
    uint64_t v13 = *((void *)&v20 + 1);
    uint64_t v12 = v20;
  }
  uint64_t result = sub_1003E5E24(v6);
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v10;
  a2[6] = v11;
  return result;
}

id sub_1006DB5C8()
{
  return sub_1006DB774(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer, (uint64_t (*)(uint64_t))sub_1006DB5E8);
}

char *sub_1006DB5E8()
{
  sub_1006DB434(v7);
  id v0 = objc_allocWithZone((Class)type metadata accessor for BarSeriesLayer());
  uint64_t v1 = sub_1004CFAFC((uint64_t)v7);
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 0;
  uint64_t result = (char *)[self sedentaryColors];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100756B20;
  uint64_t result = (char *)[v3 gradientDarkColor];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v4 + 32) = result;
  uint64_t result = (char *)[v3 gradientLightColor];
  if (result)
  {
    *(void *)(v4 + 40) = result;
    specialized Array._endMutation()();
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors] = v4;
    swift_bridgeObjectRelease();
    unint64_t v5 = swift_bridgeObjectRetain();
    sub_100583824(v5);

    swift_bridgeObjectRelease();
    uint64_t v6 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
    *(void *)uint64_t v6 = 0x4000000000000000;
    v6[8] = 0;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1006DB754()
{
  return sub_1006DB774(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer, (uint64_t (*)(uint64_t))sub_1006DB7D8);
}

id sub_1006DB774(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

char *sub_1006DB7D8()
{
  sub_1006DB440(v14);
  id v0 = objc_allocWithZone((Class)type metadata accessor for BarSeriesLayer());
  uint64_t v1 = sub_1004CFAFC((uint64_t)v14);
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 0;
  uint64_t result = (char *)[self sedentaryColors];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  uint64_t result = (char *)[result gradientDarkColor];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  id v5 = [result colorWithAlphaComponent:0.3];

  uint64_t result = (char *)[v3 gradientLightColor];
  if (result)
  {
    uint64_t v6 = result;
    id v7 = [result colorWithAlphaComponent:0.3];

    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100756B20;
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v7;
    uint64_t v13 = v8;
    specialized Array._endMutation()();
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors] = v13;
    id v9 = v5;
    id v10 = v7;
    swift_bridgeObjectRelease();
    unint64_t v11 = swift_bridgeObjectRetain();
    sub_100583824(v11);

    swift_bridgeObjectRelease();
    uint64_t v12 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
    *(void *)uint64_t v12 = 0x4000000000000000;
    v12[8] = 0;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1006DB9B0()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v49 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v5 = (char *)&v48 - v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v48 - v7;
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v48 - v10;
  id v50 = sub_1006DDC48();
  if (qword_10094B0A8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1000876DC(v0, (uint64_t)qword_100998830);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v13(v11, v12, v0);
  if (qword_10094B0F8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100969980;
  sub_1006DDD24();
  if (v15)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  [v14 setDateFormat:v16];

  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v18 = [v14 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v11, v0);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v50 setText:v20];

  id v48 = sub_1006DDC48();
  if (qword_10094B0B0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000876DC(v0, (uint64_t)qword_100998848);
  v13(v8, v21, v0);
  long long v22 = (void *)qword_100969980;
  sub_1006DDD24();
  if (v23)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  [v22 setDateFormat:v24, v48];

  Class v25 = Date._bridgeToObjectiveC()().super.isa;
  id v26 = [v22 stringFromDate:v25];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v19(v8, v0);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v48 setText:v27];

  id v28 = sub_1006DDC48();
  if (qword_10094B0B8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1000876DC(v0, (uint64_t)qword_100998860);
  v13(v5, v29, v0);
  id v30 = (void *)qword_100969980;
  sub_1006DDD24();
  if (v31)
  {
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v32 = 0;
  }
  [v30 setDateFormat:v32];

  Class v33 = Date._bridgeToObjectiveC()().super.isa;
  id v34 = [v30 stringFromDate:v33];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v19(v5, v0);
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v28 setText:v35];

  id v36 = sub_1006DDC48();
  if (qword_10094B0C0 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1000876DC(v0, (uint64_t)qword_100998878);
  v13(v49, v37, v0);
  uint64_t v38 = (void *)qword_100969980;
  sub_1006DDD24();
  if (v39)
  {
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v40 = 0;
  }
  [v38 setDateFormat:v40];

  uint64_t v41 = v49;
  Class v42 = Date._bridgeToObjectiveC()().super.isa;
  id v43 = [v38 stringFromDate:v42];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v19(v41, v0);
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v36 setText:v44];

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_100751160;
  id v46 = v48;
  *(void *)(v45 + 32) = v50;
  *(void *)(v45 + 40) = v46;
  *(void *)(v45 + 48) = v28;
  *(void *)(v45 + 56) = v36;
  uint64_t v51 = v45;
  specialized Array._endMutation()();
  return v51;
}

uint64_t sub_1006DC000(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((void *)v9 + 6) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((void *)v10 + 6) = 0;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ChartAxisGridLayer());
  uint64_t v13 = v4;
  *(void *)&v4[v11] = sub_10025CF10(1);
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer] = 0;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer] = 0;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels;
  *(void *)&v13[v14] = sub_1006DB9B0();
  uint64_t v15 = &v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight] = 0x4051400000000000;

  v38.receiver = v13;
  v38.super_class = (Class)type metadata accessor for ActivityStandChartView();
  NSString v16 = [super initWithFrame:a1, a2, a3, a4];
  id v17 = [v16 layer];
  [v17 addSublayer:*(void *)&v16[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer]];

  id v18 = [v16 layer];
  id v19 = sub_1006DB5C8();
  [v18 addSublayer:v19];

  id v20 = [v16 layer];
  id v21 = sub_1006DB754();
  [v20 addSublayer:v21];

  unint64_t v22 = *(void *)&v16[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels];
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v28 = [self defaultCenter];
    id v29 = [self mainQueue];
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v36 = sub_1006DDA60;
    uint64_t v37 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000711BC;
    uint64_t ObjectType = &unk_1008D76B8;
    uint64_t v31 = _Block_copy(aBlock);
    swift_release();
    id v32 = [v28 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:v29 usingBlock:v31];
    _Block_release(v31);

    uint64_t ObjectType = (void *)swift_getObjectType();
    aBlock[0] = v32;
    uint64_t v33 = (uint64_t)&v16[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
    swift_beginAccess();
    sub_1000DDEE8((uint64_t)aBlock, v33);
    swift_endAccess();
    return (uint64_t)v16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v23 >= 1)
  {
    for (uint64_t i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v22 + 8 * i + 32);
      }
      NSString v27 = v26;
      [v16 addSubview:v26];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1006DC414()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1006DC48C();
  }
}

id sub_1006DC48C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    [v10 setNeedsLayout];
    return [v10 invalidateIntrinsicContentSize];
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v3 = self;
  uint64_t v4 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    id result = [v3 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    if (!result) {
      break;
    }
    uint64_t v9 = result;
    [v6 setFont:result];

    ++v4;
    if (v7 == v2) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006DC614(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((void *)v4 + 6) = 0;
  id v5 = &v1[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram];
  *(_OWORD *)id v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((void *)v5 + 6) = 0;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ChartAxisGridLayer());
  uint64_t v8 = v1;
  *(void *)&v1[v6] = sub_10025CF10(1);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer] = 0;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer] = 0;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels;
  uint64_t v12 = sub_1006DB9B0();

  *(void *)&v8[v11] = v12;
  uint64_t v13 = &v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  uint64_t v14 = (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight] = 0x4051400000000000;
  sub_1000D6120(*(void *)v4);
  sub_1000D6120(*(void *)v5);

  swift_bridgeObjectRelease();
  sub_100074898((uint64_t)v13);
  sub_10019B9F8(v14);

  type metadata accessor for ActivityStandChartView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1006DC7D0()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener;
  swift_beginAccess();
  sub_100335DBC(v1, (uint64_t)&v5);
  if (v6)
  {
    sub_10005C2B0(&v5, &v7);
    id v2 = [self defaultCenter];
    sub_10007E4EC(&v7, v8);
    [v2 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v7);
  }
  else
  {
    sub_100074898((uint64_t)&v5);
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ActivityStandChartView();
  return [super dealloc];
}

uint64_t sub_1006DC9BC(int a1)
{
  uint64_t v2 = v1;
  HIDWORD(v100) = a1;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v105 = v3;
  uint64_t v106 = v4;
  __chkstk_darwin(v3);
  uint64_t v104 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v107 = result;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v8 = 24;
  }
  sub_100087AC8(v8, (uint64_t)v116, 0.0, (double)v8);
  uint64_t v9 = v117;
  uint64_t v10 = v1 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram);
  long long v12 = v116[1];
  *(_OWORD *)uint64_t v10 = v116[0];
  *(_OWORD *)(v10 + 16) = v12;
  *(_OWORD *)(v10 + 32) = v116[2];
  *(void *)(v10 + 48) = v9;
  sub_1000D6120(v11);
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v14 = 24;
  }
  uint64_t v15 = v107;
  sub_100087AC8(v14, (uint64_t)v118, 0.0, (double)v14);
  uint64_t v16 = v119;
  uint64_t v17 = v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram;
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram);
  long long v19 = v118[1];
  *(_OWORD *)uint64_t v17 = v118[0];
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = v118[2];
  *(void *)(v17 + 48) = v16;
  sub_1000D6120(v18);
  sub_1006DB434(v120);
  uint64_t v20 = *(void *)(v120[0] + 16);
  sub_1000B008C((uint64_t)v120);
  uint64_t v103 = v2;
  uint64_t v112 = v20;
  if (!v20)
  {
LABEL_66:
    id v86 = sub_1006DB5C8();
    sub_1006DB434((uint64_t *)v127);
    long long v87 = &v86[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    long long v88 = v127[0];
    long long v89 = v127[1];
    long long v90 = v127[2];
    *((void *)v87 + 6) = v128;
    *((_OWORD *)v87 + 1) = v89;
    *((_OWORD *)v87 + 2) = v90;
    *(_OWORD *)long long v87 = v88;
    sub_1000B013C((uint64_t)v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1004D0264();
    if ((v100 & 0x100000000) != 0)
    {
      sub_1004D0538(kCAMediaTimingFunctionEaseInEaseOut, 0.2);
    }
    else
    {
      uint64_t v91 = self;
      [v91 begin];
      [v91 setDisableActions:1];
      v86[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
      sub_1004CFA54();
      [v91 commit];
    }
    sub_1000B008C((uint64_t)v127);

    char v92 = sub_1006DB754();
    sub_1006DB440((uint64_t *)v129);
    uint64_t v93 = &v92[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    long long v94 = v129[0];
    long long v95 = v129[1];
    long long v96 = v129[2];
    *((void *)v93 + 6) = v130;
    *((_OWORD *)v93 + 1) = v95;
    *((_OWORD *)v93 + 2) = v96;
    *(_OWORD *)uint64_t v93 = v94;
    sub_1000B013C((uint64_t)v129);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1004D0264();
    if ((v100 & 0x100000000) != 0)
    {
      sub_1004D0538(kCAMediaTimingFunctionEaseInEaseOut, 0.2);
    }
    else
    {
      uint64_t v97 = self;
      [v97 begin];
      [v97 setDisableActions:1];
      v92[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
      sub_1004CFA54();
      [v97 commit];
    }
    sub_1000B008C((uint64_t)v129);

    uint64_t v98 = *(char **)(v103 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer);
    sub_1006DB434(v131);
    uint64_t v99 = *(void *)(v131[0] + 16);
    sub_1000B008C((uint64_t)v131);
    *(void *)&v98[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_nHoursInADay] = v99;
    [v98 setNeedsLayout];
    return swift_unknownObjectRelease();
  }
  uint64_t v111 = OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData;
  long long v115 = (uint64_t *)(v15 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartBuckets);
  swift_beginAccess();
  unint64_t v21 = 0;
  uint64_t v101 = v106 + 8;
  uint64_t v102 = v106 + 16;
  __asm { FMOV            V0.2D, #1.0 }
  int8x16_t v110 = _Q0;
  while (1)
  {
    uint64_t v38 = *v115;
    if (!*v115)
    {
      _Q0.i64[0] = 0;
      int8x16_t v113 = _Q0;
      _Q0.i64[0] = 0;
      int8x16_t v114 = _Q0;
      goto LABEL_54;
    }
    unint64_t v39 = *(void *)(v15 + v111);
    _Q0.i64[0] = 0;
    int8x16_t v114 = _Q0;
    _Q0.i64[0] = 0;
    if (v39)
    {
      _Q0.i64[0] = 0;
      if (v21 < *(void *)(v38 + 16))
      {
        uint64_t v40 = v105;
        uint64_t v41 = v106;
        Class v42 = v104;
        (*(void (**)(char *, unint64_t, uint64_t, double))(v106 + 16))(v104, v38+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v21, v105, 0.0);
        swift_bridgeObjectRetain();
        Date.timeIntervalSinceReferenceDate.getter();
        double v44 = v43;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v45)
          {
LABEL_19:
            uint64_t v46 = 4;
            while (1)
            {
              if ((v39 & 0xC000000000000001) != 0) {
                uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                uint64_t result = (uint64_t)*(id *)(v39 + 8 * v46);
              }
              id v47 = (void *)result;
              uint64_t v48 = v46 - 3;
              if (__OFADD__(v46 - 4, 1))
              {
                __break(1u);
                goto LABEL_75;
              }
              [(id)result timeStamp];
              if (vabdd_f64(v49, v44) < 2.22044605e-16) {
                break;
              }

              ++v46;
              if (v48 == v45) {
                goto LABEL_32;
              }
            }
            swift_bridgeObjectRelease();
            id v50 = [v47 state];

            if (v50) {
              *(double *)_Q0.i64 = 0.0;
            }
            else {
              *(double *)_Q0.i64 = 1.0;
            }
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v45 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v45) {
            goto LABEL_19;
          }
        }
LABEL_32:
        swift_bridgeObjectRelease();
        _Q0.i64[0] = 0;
LABEL_33:
        uint64_t v15 = v107;
      }
    }
    int8x16_t v113 = _Q0;
    uint64_t v51 = *v115;
    if (!*v115) {
      goto LABEL_54;
    }
    unint64_t v52 = *(void *)(v15 + v111);
    if (!v52 || v21 >= *(void *)(v51 + 16)) {
      goto LABEL_54;
    }
    uint64_t v53 = v105;
    uint64_t v54 = v106;
    Class v55 = v104;
    (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v104, v51+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v21, v105);
    swift_bridgeObjectRetain();
    Date.timeIntervalSinceReferenceDate.getter();
    double v57 = v56;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    if (!(v52 >> 62))
    {
      uint64_t v58 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v58) {
        break;
      }
      goto LABEL_52;
    }
    swift_bridgeObjectRetain();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v58) {
      break;
    }
LABEL_52:
    swift_bridgeObjectRelease();
LABEL_53:
    uint64_t v15 = v107;
LABEL_54:
    sub_1006DB434(v121);
    id v65 = (void *)v121[0];
    uint64_t v66 = v121[1];
    uint64_t v67 = v121[2];
    int8x16_t v68 = v122;
    int8x16_t v69 = v123;
    if (v21 < *(void *)(v121[0] + 16))
    {
      int8x16_t v108 = v123;
      int8x16_t v109 = v122;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1005EC1D4(v65);
        id v65 = (void *)result;
      }
      double v70 = *(double *)v113.i64;
      int8x16_t v72 = v108;
      int8x16_t v71 = v109;
      if (v21 >= v65[2]) {
        goto LABEL_76;
      }
      int32x2_t v73 = vdup_n_s32(*(double *)v109.i64 < *(double *)v113.i64);
      long long v74 = &v65[3 * v21];
      v74[4] = v113.i64[0];
      v74[5] = 0x3FF0000000000000;
      *((unsigned char *)v74 + 48) = 0;
      v75.i64[0] = v73.u32[0];
      v75.i64[1] = v73.u32[1];
      v76.i64[1] = v110.i64[1];
      *(double *)v76.i64 = v70;
      int8x16_t v68 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v75, 0x3FuLL)), v76, v71);
      unsigned int v77 = *(double *)v72.i64 < 0.0;
      if (v70 < *(double *)v72.i64) {
        unsigned int v77 = 1;
      }
      int32x2_t v78 = vdup_n_s32(v77);
      v79.i64[0] = v78.u32[0];
      v79.i64[1] = v78.u32[1];
      int8x16_t v69 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v79, 0x3FuLL)), v76, v72);
    }
    uint64_t v80 = *(void *)v10;
    *(void *)uint64_t v10 = v65;
    *(void *)(v10 + 8) = v66;
    *(void *)(v10 + 16) = v67;
    *(int8x16_t *)(v10 + 24) = v68;
    *(int8x16_t *)(v10 + 40) = v69;
    sub_1000D6120(v80);
    sub_1006DB440(v124);
    uint64_t v81 = (void *)v124[0];
    uint64_t v82 = v124[1];
    uint64_t v83 = v124[2];
    int8x16_t v32 = v125;
    int8x16_t v36 = v126;
    if (v21 < *(void *)(v124[0] + 16))
    {
      int8x16_t v109 = v126;
      int8x16_t v113 = v125;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1005EC1D4(v81);
        uint64_t v81 = (void *)result;
      }
      int8x16_t v84 = v113;
      int8x16_t v85 = v109;
      if (v21 >= v81[2]) {
        goto LABEL_77;
      }
      double v27 = *(double *)v114.i64;
      int32x2_t v28 = vdup_n_s32(*(double *)v113.i64 < *(double *)v114.i64);
      id v29 = &v81[3 * v21];
      v29[4] = v114.i64[0];
      v29[5] = 0x3FF0000000000000;
      *((unsigned char *)v29 + 48) = 0;
      v30.i64[0] = v28.u32[0];
      v30.i64[1] = v28.u32[1];
      v31.i64[1] = v110.i64[1];
      *(double *)v31.i64 = v27;
      int8x16_t v32 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v30, 0x3FuLL)), v31, v84);
      unsigned int v33 = *(double *)v85.i64 < 0.0;
      if (v27 < *(double *)v85.i64) {
        unsigned int v33 = 1;
      }
      int32x2_t v34 = vdup_n_s32(v33);
      v35.i64[0] = v34.u32[0];
      v35.i64[1] = v34.u32[1];
      int8x16_t v36 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v35, 0x3FuLL)), v31, v85);
    }
    ++v21;
    uint64_t v37 = *(void *)v17;
    *(void *)uint64_t v17 = v81;
    *(void *)(v17 + 8) = v82;
    *(void *)(v17 + 16) = v83;
    *(int8x16_t *)(v17 + 24) = v32;
    *(int8x16_t *)(v17 + 40) = v36;
    sub_1000D6120(v37);
    if (v21 == v112) {
      goto LABEL_66;
    }
  }
  uint64_t v59 = 4;
  while (1)
  {
    uint64_t result = (v52 & 0xC000000000000001) != 0
           ? specialized _ArrayBuffer._getElementSlowPath(_:)()
           : (uint64_t)*(id *)(v52 + 8 * v59);
    uint64_t v60 = (void *)result;
    uint64_t v61 = v59 - 3;
    if (__OFADD__(v59 - 4, 1)) {
      break;
    }
    [(id)result timeStamp];
    if (vabdd_f64(v62, v57) < 2.22044605e-16)
    {
      swift_bridgeObjectRelease();
      id v63 = [v60 state];

      if (v63 == (id)1) {
        *(double *)v64.i64 = 1.0;
      }
      else {
        *(double *)v64.i64 = 0.0;
      }
      int8x16_t v114 = v64;
      goto LABEL_53;
    }

    ++v59;
    if (v61 == v58) {
      goto LABEL_52;
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

void sub_1006DD378()
{
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for ActivityStandChartView();
  [super layoutSubviews];
  [v0 bounds];
  double Width = CGRectGetWidth(v33);
  double v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight];
  id v3 = sub_1006DB5C8();
  [v3 setFrame:CGRectMake(0.0, 0.0, Width, v2)];

  id v4 = sub_1006DB754();
  [v4 setFrame:CGRectMake(0.0, 0.0, Width, v2)];

  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer] setFrame:sub_1006DDA0C(0.0)];
  [v0 bounds];
  double v5 = CGRectGetWidth(v34);
  unint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels];
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v29 = sub_1006DB5C8();
    int64x2_t v30 = self;
    [v30 begin];
    [v30 setDisableActions:1];
    v29[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
    sub_1004CFA54();
    [v30 commit];

    int8x16_t v31 = sub_1006DB754();
    [v30 begin];
    [v30 setDisableActions:1];
    v31[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
    sub_1004CFA54();
    [v30 commit];

    return;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_10;
  }
LABEL_3:
  double v8 = v5 * 0.25;
  uint64_t v9 = self;
  uint64_t v10 = 4;
  double v5 = 0.0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v6 + 8 * v10);
    }
    long long v12 = v11;
    uint64_t v13 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    [v11 sizeToFit];
    id v14 = v12;
    [v14 bounds];
    [v14 setFrame:v5];

    id v15 = sub_1006DB5C8();
    [v15 frame];
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;

    v35.origin.CGFloat x = v17;
    v35.origin.CGFloat y = v19;
    v35.size.CGFloat width = v21;
    v35.size.CGFloat height = v23;
    double MaxY = CGRectGetMaxY(v35);
    id v25 = [v9 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    if (!v25) {
      break;
    }
    id v26 = v25;
    [v25 _scaledValueForValue:13.0];
    double v28 = v27;

    [v14 _setFirstLineBaselineFrameOriginY:MaxY + v28];
    double v5 = v8 + v5;
    ++v10;
    if (v13 == v7) {
      goto LABEL_10;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for ActivityStandChartView()
{
  return self;
}

void *sub_1006DD8D0()
{
  sub_1006DB434(&v9);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1000D80D0(v0, (uint64_t (*)(void, double))sub_1000D81F8);
  swift_bridgeObjectRelease();
  sub_1000B008C((uint64_t)&v9);
  int64_t v2 = v1[2];
  if (v2)
  {
    sub_1001C9438(0, v2, 0);
    uint64_t v3 = 0;
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    do
    {
      long long v5 = *(_OWORD *)&v1[2 * v3 + 4];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v4 >= v6 >> 1)
      {
        long long v8 = *(_OWORD *)&v1[2 * v3 + 4];
        sub_1001C9438(v6 > 1, v4 + 1, 1);
        long long v5 = v8;
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v4 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v4++ + 4] = v5;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double sub_1006DDA0C(double a1)
{
  return a1 + 1.0;
}

uint64_t sub_1006DDA28()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1006DDA60()
{
}

void sub_1006DDA68()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_1006DDD24();
  if (v1)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  [v0 setDateFormat:v2];

  qword_100969980 = (uint64_t)v0;
}

uint64_t sub_1006DDAEC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v19 = a2;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v9 = 0;
    uint64_t v15 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v16[0] = a3;
          v16[1] = v15;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          _StringObject.sharedUTF8.getter();
        }
        int v10 = _decodeScalar(_:startingAt:)();
      }
      uint64_t v12 = v11;
      LODWORD(v16[0]) = v10;
      char v13 = a1(v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13) {
        String.UnicodeScalarView.append(_:)();
      }
      v9 += v12;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

id sub_1006DDC48()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id result = [self _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (result)
  {
    NSString v2 = result;
    [v0 setFont:result];

    id v3 = [self secondaryLabelColor];
    [v0 setTextColor:v3];

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DDD24()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _CPTimeFormatIs24HourMode();
  long long v8 = self;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  id v11 = [v8 dateFormatFromTemplate:v9 options:0 locale:isa];

  if (!v11) {
    return 0;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  uint64_t v22 = v12;
  unint64_t v23 = v14;
  uint64_t v20 = 97;
  unint64_t v21 = 0xE100000000000000;
  sub_1000A06D0();
  if (StringProtocol.contains<A>(_:)())
  {
    uint64_t v15 = CharacterSet.init(charactersIn:)();
    __chkstk_darwin(v15);
    *(void *)&v19[-16] = v3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1006DDAEC((uint64_t (*)(void *))sub_1006DE02C, (uint64_t)&v19[-32], v12, v14);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    uint64_t v20 = v16;
    unint64_t v21 = v17;
    String.UnicodeScalarView.append<A>(contentsOf:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v22;
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v12;
}

BOOL sub_1006DE02C()
{
  return (CharacterSet.contains(_:)() & 1) == 0;
}

void *sub_1006DE064(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (void *)__chkstk_darwin(v13);
  double v27 = (char *)&v23 - v17;
  if (a3 == a4)
  {
    return _swiftEmptyArrayStorage;
  }
  else
  {
    if (a4 >= a3)
    {
      id v29 = (void (**)(char *, char *, uint64_t))(v28 + 32);
      int64x2_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      unint64_t v18 = _swiftEmptyArrayStorage;
      uint64_t v25 = a2;
      uint64_t v26 = a4;
      unint64_t v23 = a1;
      NSString v24 = v15;
      while (a3 < a4)
      {
        uint64_t v31 = a3;
        a1(&v31);
        if (v4)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
        if ((*v30)(v11, 1, v12) == 1)
        {
          id result = (void *)sub_10008DB18((uint64_t)v11, (uint64_t *)&unk_10095B890);
        }
        else
        {
          uint64_t v19 = *v29;
          uint64_t v20 = v27;
          (*v29)(v27, v11, v12);
          v19(v15, v20, v12);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v18 = (void *)sub_1000D031C(0, v18[2] + 1, 1, (unint64_t)v18);
          }
          unint64_t v22 = v18[2];
          unint64_t v21 = v18[3];
          if (v22 >= v21 >> 1) {
            unint64_t v18 = (void *)sub_1000D031C(v21 > 1, v22 + 1, 1, (unint64_t)v18);
          }
          v18[2] = v22 + 1;
          uint64_t v15 = v24;
          id result = (void *)((uint64_t (*)(char *, char *, uint64_t))v19)((char *)v18+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v22, v24, v12);
          a4 = v26;
          a1 = v23;
        }
        if (a4 == ++a3) {
          return v18;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void *sub_1006DE344(void (*a1)(long long *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  long long v8 = _swiftEmptyArrayStorage;
  do
  {
    char v15 = *(unsigned char *)(a3 + v7 + 32);
    a1(&v12, &v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    if (v13)
    {
      sub_100093E60(&v12, (uint64_t)v14);
      sub_100093E60(v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v8 = sub_10009569C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v10 = v8[2];
      unint64_t v9 = v8[3];
      if (v10 >= v9 >> 1) {
        long long v8 = sub_10009569C((void *)(v9 > 1), v10 + 1, 1, v8);
      }
      v8[2] = v10 + 1;
      sub_100093E60(&v12, (uint64_t)&v8[5 * v10 + 4]);
    }
    else
    {
      sub_10008DB18((uint64_t)&v12, &qword_10094CEF0);
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1006DE4C4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  id result = _swiftEmptyArrayStorage;
  unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      a1(&v8, v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v9;
  }
  return result;
}

char *sub_1006DE5E4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v6 = sub_1000AFA94(&qword_100969B48);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094F3C8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  CGRect v33 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int64x2_t v30 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v15 = *(void *)(type metadata accessor for Artwork() - 8);
  uint64_t v16 = v10;
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v27 = v16;
  objc_super v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v31 = *(void *)(v15 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v28 = v9;
  id v29 = a1;
  uint64_t v26 = v18;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v8, 1, v9) == 1)
    {
      sub_10008DB18((uint64_t)v8, &qword_100969B48);
    }
    else
    {
      uint64_t v20 = *v32;
      unint64_t v21 = v30;
      (*v32)(v30, v8, v9);
      v20(v33, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (char *)sub_1001E8218(0, *((void *)v19 + 2) + 1, 1, (unint64_t)v19);
      }
      unint64_t v23 = *((void *)v19 + 2);
      unint64_t v22 = *((void *)v19 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v19 = (char *)sub_1001E8218(v22 > 1, v23 + 1, 1, (unint64_t)v19);
      }
      *((void *)v19 + 2) = v23 + 1;
      uint64_t v9 = v28;
      v20(&v19[((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23], v33, v28);
      a1 = v29;
      unint64_t v18 = v26;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1006DE924(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_1009508A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v29 = (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v27 = (uint64_t)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v15 = *(void *)(type metadata accessor for SleepingSampleBaselineComparison() - 8);
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v24 = v10;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = *(void *)(v15 + 72);
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  unint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v25 = v9;
  uint64_t v26 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, v9) == 1)
    {
      sub_10008DB18((uint64_t)v8, &qword_1009508A0);
    }
    else
    {
      uint64_t v19 = v27;
      sub_1005C9304((uint64_t)v8, v27);
      sub_1005C9304(v19, v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = (void *)sub_1001E86E8(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        unint64_t v18 = (void *)sub_1001E86E8(v20 > 1, v21 + 1, 1, (unint64_t)v18);
      }
      v18[2] = v21 + 1;
      sub_1005C9304(v29, (uint64_t)v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21);
      uint64_t v9 = v25;
      a1 = v26;
    }
    v16 += v28;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

char *sub_1006DEC1C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v6 = sub_1000AFA94(&qword_10095D148);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CatalogLockup();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  CGRect v33 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64x2_t v30 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v15 = *(void *)(type metadata accessor for PersonalizationCandidate() - 8);
  uint64_t v16 = v10;
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v27 = v16;
  objc_super v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v31 = *(void *)(v15 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v28 = v9;
  uint64_t v29 = a1;
  uint64_t v26 = v18;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v8, 1, v9) == 1)
    {
      sub_10008DB18((uint64_t)v8, &qword_10095D148);
    }
    else
    {
      unint64_t v20 = *v32;
      unint64_t v21 = v30;
      (*v32)(v30, v8, v9);
      v20(v33, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (char *)sub_1001E8BC8(0, *((void *)v19 + 2) + 1, 1, (unint64_t)v19);
      }
      unint64_t v23 = *((void *)v19 + 2);
      unint64_t v22 = *((void *)v19 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v19 = (char *)sub_1001E8BC8(v22 > 1, v23 + 1, 1, (unint64_t)v19);
      }
      *((void *)v19 + 2) = v23 + 1;
      uint64_t v9 = v28;
      v20(&v19[((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23], v33, v28);
      a1 = v29;
      unint64_t v18 = v26;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

void sub_1006DEF78(uint64_t a1)
{
}

void sub_1006DEF94(uint64_t a1)
{
}

void sub_1006DEFA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setLocalizedDateFormatFromTemplate:v6];

  *a4 = v5;
}

void *sub_1006DF020()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer) frame];
  CGFloat Width = CGRectGetWidth(v10);
  double v2 = Width / 52.0 + (Width / 52.0 + -2.0) / 52.0;
  sub_1001C91B8(0, 52, 0);
  double v3 = 0.0;
  uint64_t v4 = 1;
  id result = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v9 = result;
    unint64_t v7 = result[2];
    unint64_t v6 = result[3];
    if (v7 >= v6 >> 1)
    {
      sub_1001C91B8(v6 > 1, v7 + 1, 1);
      id result = v9;
    }
    double v8 = v2 * v3;
    double v3 = (double)v4;
    result[2] = v7 + 1;
    *(double *)&result[v7 + 4] = v8 + 1.0;
    ++v4;
  }
  while (v4 != 53);
  return result;
}

void *sub_1006DF1D0()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer) frame];
  CGFloat Width = CGRectGetWidth(v10);
  double v2 = (Width / 52.0 + (Width / 52.0 + -2.0) / 52.0) * 0.5;
  sub_1001C91B8(0, 103, 0);
  double v3 = 0.0;
  uint64_t v4 = 1;
  id result = _swiftEmptyArrayStorage;
  while (v3 < 103.0)
  {
    uint64_t v9 = result;
    unint64_t v7 = result[2];
    unint64_t v6 = result[3];
    if (v7 >= v6 >> 1)
    {
      sub_1001C91B8(v6 > 1, v7 + 1, 1);
      id result = v9;
    }
    double v8 = v2 * v3;
    double v3 = (double)v4;
    result[2] = v7 + 1;
    *(double *)&result[v7 + 4] = v8 + 1.0;
    if (++v4 == 104) {
      return result;
    }
  }
  __break(1u);
  return result;
}

char *sub_1006DF2F8(int a1, int a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  int8x16_t v85 = a5;
  uint64_t v86 = a3;
  uint64_t v88 = a4;
  int v91 = a2;
  int v84 = a1;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  __chkstk_darwin(v10);
  uint64_t v87 = (uint64_t)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel;
  id v13 = objc_allocWithZone((Class)UILabel);
  uint64_t v14 = v7;
  id v15 = [v13 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v7[v12] = v15;
  uint64_t v93 = sub_10007E2D8(0, &qword_100953458);
  id v16 = sub_1005CA0D4();
  uint64_t v17 = self;
  UIFontTextStyle v94 = UIFontTextStyleCaption2;
  UIContentSizeCategory v92 = UIContentSizeCategoryExtraExtraExtraLarge;
  id result = [v17 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel;
    [v16 setFont:result];

    *(void *)&v14[v20] = v16;
    uint64_t v21 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer;
    uint64_t v22 = sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
    *(void *)&v14[v21] = sub_1006D13E4();
    uint64_t v23 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365;
    *(void *)&v14[v23] = sub_1006D13E4();
    uint64_t v24 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90;
    v82[1] = v22;
    *(void *)&v14[v24] = sub_1006D13E4();
    uint64_t v25 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer;
    *(void *)&v14[v25] = [objc_allocWithZone((Class)UILayoutGuide) init];
    uint64_t v26 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer;
    *(void *)&v14[v26] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v27 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90;
    *(void *)&v14[v27] = [objc_allocWithZone((Class)CAGradientLayer) init];
    uint64_t v28 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90;
    *(void *)&v14[v28] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v29 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365;
    *(void *)&v14[v29] = [objc_allocWithZone((Class)CAGradientLayer) init];
    uint64_t v30 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365;
    *(void *)&v14[v30] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v31 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90;
    *(void *)&v14[v31] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v32 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365;
    *(void *)&v14[v32] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v33 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365;
    type metadata accessor for TrendAveragePlatterView();
    *(void *)&v14[v33] = sub_1006D13E4();
    uint64_t v34 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90;
    *(void *)&v14[v34] = sub_1006D13E4();
    uint64_t v35 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask;
    type metadata accessor for TrendChartMaskingView();
    *(void *)&v14[v35] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v36 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter;
    type metadata accessor for TrendsScrubberPlatterView();
    *(void *)&v14[v36] = sub_1006D13E4();
    uint64_t v37 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole;
    type metadata accessor for TrendsScrubberFlagpoleView();
    id v38 = sub_1006D13E4();
    uint64_t v83 = v14;
    *(void *)&v14[v37] = v38;
    *(void *)&v105[0] = _swiftEmptyArrayStorage;
    uint64_t v39 = 12;
    specialized ContiguousArray.reserveCapacity(_:)();
    do
    {
      id v40 = sub_1005CA0D4();
      id result = (char *)[v17 _preferredFontForTextStyle:v94 variant:1024 maximumContentSizeCategory:v92];
      if (!result)
      {
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v41 = result;
      [v40 setFont:result];

      id v42 = [self secondaryLabelColor];
      [v40 setTextColor:v42];

      [v40 setTextAlignment:0];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v39;
    }
    while (v39);
    double v43 = v83;
    *(void *)&v83[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels] = *(void *)&v105[0];
    id v44 = sub_1005CA0D4();
    id result = (char *)[v17 _preferredFontForTextStyle:v94 variant:1024 maximumContentSizeCategory:v92];
    if (!result) {
      goto LABEL_14;
    }
    uint64_t v45 = result;
    uint64_t v46 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    [v44 setFont:result];

    *(void *)&v43[v46] = v44;
    uint64_t v47 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    sub_10007E2D8(0, &qword_100957898);
    *(void *)&v43[v47] = sub_1006D13E4();
    uint64_t v48 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div;
    *(void *)&v43[v48] = sub_1006D134C();
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = _swiftEmptyArrayStorage;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = _swiftEmptyArrayStorage;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_extraTopPaddingPercentage] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = 0;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_nWeeksIn90DayBucket] = 13;
    v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled] = 0;
    v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type] = v84;
    char v49 = v91;
    v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction] = v91;
    *(double *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90] = a6;
    id v50 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram90];
    uint64_t v51 = v86;
    long long v53 = *(_OWORD *)(v86 + 16);
    long long v52 = *(_OWORD *)(v86 + 32);
    long long v54 = *(_OWORD *)v86;
    *((void *)v50 + 6) = *(void *)(v86 + 48);
    *((_OWORD *)v50 + 1) = v53;
    *((_OWORD *)v50 + 2) = v52;
    *(_OWORD *)id v50 = v54;
    *(double *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365] = a7;
    Class v55 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram365];
    double v56 = (long long *)v88;
    long long v58 = *(_OWORD *)(v88 + 16);
    long long v57 = *(_OWORD *)(v88 + 32);
    long long v59 = *(_OWORD *)v88;
    *((void *)v55 + 6) = *(void *)(v88 + 48);
    *((_OWORD *)v55 + 1) = v58;
    *((_OWORD *)v55 + 2) = v57;
    *(_OWORD *)Class v55 = v59;
    uint64_t v60 = v85;
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager] = v85;
    uint64_t v61 = *(void *)v56;
    long long v62 = *(long long *)((char *)v56 + 8);
    long long v63 = *(long long *)((char *)v56 + 40);
    long long v108 = *(long long *)((char *)v56 + 24);
    long long v109 = v63;
    long long v107 = v62;
    uint64_t v64 = *(void *)(v61 + 16) - 1;
    id v65 = v60;
    sub_1000B013C(v51);
    sub_1000B013C((uint64_t)v56);
    sub_1000D61C8(1, v64, (double *)v96);
    sub_1000AEEC8((uint64_t)v96, (uint64_t)v97, &qword_100966A38);
    if (*(void *)&v97[0])
    {
      long long v99 = v97[0];
      long long v100 = v97[1];
      long long v101 = v97[2];
      uint64_t v102 = v98;
      sub_1005EBBB8(7, (double *)v105);
      sub_1000D60E8(v96);
      uint64_t v66 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365];
      long long v67 = v105[1];
      *(_OWORD *)uint64_t v66 = v105[0];
      *((_OWORD *)v66 + 1) = v67;
      *((_OWORD *)v66 + 2) = v105[2];
      *((void *)v66 + 6) = v106;
    }
    else
    {
      int8x16_t v68 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365];
      *(void *)int8x16_t v68 = v61;
      long long v69 = v108;
      *(_OWORD *)(v68 + 8) = v107;
      *(_OWORD *)(v68 + 24) = v69;
      *(_OWORD *)(v68 + 40) = v109;
      sub_1000B013C((uint64_t)v56);
    }
    sub_1005EBBB8(7, (double *)v103);
    sub_1000B008C(v51);
    double v70 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram90];
    long long v71 = v103[1];
    *(_OWORD *)double v70 = v103[0];
    *((_OWORD *)v70 + 1) = v71;
    *((_OWORD *)v70 + 2) = v103[2];
    *((void *)v70 + 6) = v104;
    uint64_t v72 = v87;
    uint64_t v73 = sub_1006DFC64(v87, v56);
    sub_1000B008C((uint64_t)v56);
    long long v74 = &v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth];
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth] = v73;
    uint64_t v75 = sub_1000AFA94(&qword_100969B30);
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(&v74[*(int *)(v75 + 48)], v72, v90);
    id v76 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) init];
    *(void *)&v43[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_longPressRecognizer] = v76;

    unsigned int v77 = (objc_class *)type metadata accessor for TrendDetailChartView();
    v95.receiver = v43;
    v95.super_class = v77;
    int32x2_t v78 = (char *)objc_msgSendSuper2(&v95, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    int64x2_t v79 = *(void **)&v78[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_longPressRecognizer];
    uint64_t v80 = v78;
    [v79 addTarget:v80 action:"longPressWithSender:"];
    [v79 setMinimumPressDuration:0.2];
    [v80 addGestureRecognizer:v79];
    sub_1006E2C28();
    sub_1006E3CF8();
    [v80 addLayoutGuide:*(void *)&v80[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer]];
    sub_1006E0224();
    if (v49 == 1)
    {
      id v81 = *(id *)&v80[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
      [v81 setAlpha:0.3];
    }
    return v80;
  }
  else
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DFC64(uint64_t a1, long long *a2)
{
  v40[0] = a1;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47 - 8);
  long long v53 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v45 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v50 = (char *)v40 - v13;
  __chkstk_darwin(v12);
  long long v14 = a2[1];
  long long v57 = *a2;
  long long v58 = v14;
  long long v59 = a2[2];
  uint64_t v60 = *((void *)a2 + 6);
  uint64_t v51 = *(void *)(*((void *)&v57 + 1) + 16);
  v40[1] = *((void *)&v57 + 1);
  long long v54 = (char *)v40 - v15;
  Date.init(timeIntervalSinceReferenceDate:)();
  id v16 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v17 = enum case for Calendar.Component.day(_:);
  unint64_t v18 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v49 = v8;
  id v44 = (void (**)(char *, uint64_t))(v9 + 8);
  double v43 = v5;
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  for (unsigned int i = enum case for Calendar.Component.day(_:); ; v17 = i)
  {
    uint64_t v19 = v50;
    Date.init(timeIntervalSinceReferenceDate:)();
    char v20 = static Date.< infix(_:_:)();
    uint64_t v21 = *v16;
    (*v16)(v19, v8);
    if ((v20 & 1) == 0)
    {
      Date.init()();
      v21(v54, v8);
      return -1;
    }
    long long v52 = v21;
    if (qword_10094A5E8 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Calendar();
    sub_1000876DC(v22, (uint64_t)qword_100997610);
    uint64_t v23 = v47;
    uint64_t v24 = *v46;
    uint64_t v25 = v53;
    (*v46)(v53, v17, v47);
    uint64_t v26 = v54;
    uint64_t v27 = Calendar.component(_:from:)();
    uint64_t v28 = *v18;
    (*v18)(v25, v23);
    if (v27 == 1)
    {
      Date.timeIntervalSinceReferenceDate.getter();
      sub_100642350(v35);
      if (v37)
      {
        (*v48)((char *)v40[0], (uint64_t)v26, v49);
        return 0;
      }
      else
      {
        uint64_t v34 = v36 / 7;
        (*v48)((char *)v40[0], (uint64_t)v26, v49);
      }
      return v34;
    }
    uint64_t v29 = v53;
    v24(v53, v17, v23);
    uint64_t v30 = (uint64_t)v43;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    v28(v29, v23);
    uint64_t v8 = v49;
    uint64_t v31 = v26;
    if ((*v41)(v30, 1, v49) == 1) {
      break;
    }
    id v16 = v44;
    v52(v26, v8);
    uint64_t v32 = *v48;
    uint64_t v33 = v45;
    (*v48)(v45, v30, v8);
    v32(v31, (uint64_t)v33, v8);
  }
  sub_10008DB18(v30, (uint64_t *)&unk_10095B890);
  unint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v55 = 0xD000000000000017;
  unint64_t v56 = 0x80000001007D6E90;
  sub_1005EC854();
  v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E0224()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel];
  id v2 = [v1 topAnchor];
  id v3 = [v0 topAnchor];
  id v239 = [v2 constraintEqualToAnchor:v3 constant:9.0];

  id v4 = [v1 leadingAnchor];
  id v5 = [v0 leadingAnchor];
  id v235 = [v4 constraintEqualToAnchor:v5 constant:16.0];

  id v6 = [v1 trailingAnchor];
  id v7 = [v0 trailingAnchor];
  id v231 = [v6 constraintEqualToAnchor:v7 constant:-16.0];

  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel];
  id v9 = [v8 rightAnchor];
  id v10 = [v0 rightAnchor];
  id v245 = [v9 constraintEqualToAnchor:v10 constant:-14.0];

  id v11 = [v8 topAnchor];
  id v12 = [v1 bottomAnchor];
  id v243 = [v11 constraintEqualToAnchor:v12 constant:8.0];

  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  id v14 = [v13 topAnchor];
  id v15 = [v8 bottomAnchor];
  id v241 = [v14 constraintGreaterThanOrEqualToAnchor:v15 constant:3.0];

  id v16 = [v13 leftAnchor];
  id v17 = [v0 leftAnchor];
  id v237 = [v16 constraintEqualToAnchor:v17 constant:14.0];

  id v18 = [v13 rightAnchor];
  id v19 = [v0 rightAnchor];
  id v233 = [v18 constraintEqualToAnchor:v19 constant:-14.0];

  id v20 = [v13 heightAnchor];
  id v229 = [v20 constraintEqualToConstant:103.0];

  uint64_t v21 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90];
  id v22 = [v21 topAnchor];
  id v23 = [v13 topAnchor];
  id v227 = [v22 constraintEqualToAnchor:v23];

  id v24 = [v21 leftAnchor];
  id v25 = [v13 leftAnchor];
  id v225 = [v24 constraintEqualToAnchor:v25];

  id v26 = [v21 rightAnchor];
  id v27 = [v13 rightAnchor];
  id v223 = [v26 constraintEqualToAnchor:v27];

  id v28 = [v21 bottomAnchor];
  id v29 = [v13 bottomAnchor];
  id v221 = [v28 constraintEqualToAnchor:v29];

  uint64_t v30 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365];
  id v31 = [v30 topAnchor];
  id v32 = [v13 topAnchor];
  id v219 = [v31 constraintEqualToAnchor:v32];

  id v33 = [v30 leftAnchor];
  id v34 = [v13 leftAnchor];
  id v217 = [v33 constraintEqualToAnchor:v34];

  id v35 = [v30 rightAnchor];
  id v36 = [v13 rightAnchor];
  id v215 = [v35 constraintEqualToAnchor:v36];

  id v37 = [v30 bottomAnchor];
  id v38 = [v13 bottomAnchor];
  id v213 = [v37 constraintEqualToAnchor:v38];

  Swift::String v39 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer];
  id v40 = [v39 topAnchor];
  id v41 = [v13 bottomAnchor];
  id v211 = [v40 constraintEqualToAnchor:v41];

  id v42 = [v39 leftAnchor];
  id v43 = [v13 leftAnchor];
  id v209 = [v42 constraintEqualToAnchor:v43];

  id v44 = [v39 rightAnchor];
  id v45 = [v13 rightAnchor];
  id v207 = [v44 constraintEqualToAnchor:v45];

  id v46 = [v39 bottomAnchor];
  id v47 = [v0 bottomAnchor];
  id v205 = [v46 constraintEqualToAnchor:v47 constant:-10.0];

  uint64_t v48 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div];
  id v49 = [v48 leadingAnchor];
  id v50 = [v0 leadingAnchor];
  id v203 = [v49 constraintEqualToAnchor:v50 constant:16.0];

  id v51 = [v48 trailingAnchor];
  id v52 = [v0 trailingAnchor];
  id v201 = [v51 constraintEqualToAnchor:v52];

  id v53 = [v48 heightAnchor];
  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v199 = [v53 constraintEqualToConstant:*(double *)&qword_100998308];

  id v54 = [v48 bottomAnchor];
  id v55 = [v0 bottomAnchor];
  id v197 = [v54 constraintEqualToAnchor:v55];

  unint64_t v56 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView];
  id v57 = [v56 leftAnchor];
  id v58 = [v39 leftAnchor];
  double v59 = 0.0;
  id v60 = [v57 constraintEqualToAnchor:v58 constant:0.0];

  id v61 = [v56 rightAnchor];
  id v62 = [v39 rightAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 constant:0.0];

  id v64 = [v56 topAnchor];
  id v65 = [v39 topAnchor];
  id v195 = [v64 constraintEqualToAnchor:v65];

  uint64_t v66 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = v60;
  id v186 = v60;

  long long v67 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = v63;
  id v185 = v63;

  if (!FIUICurrentLanguageRequiresTallScript()) {
    double v59 = -3.0;
  }
  int8x16_t v68 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
  id v69 = [v68 leftAnchor];
  id v70 = [v39 leftAnchor];
  id v71 = [v69 constraintEqualToAnchor:v70 constant:0.0];

  id v72 = [v68 topAnchor];
  id v73 = [v56 bottomAnchor];
  id v193 = [v72 constraintEqualToAnchor:v73 constant:v59];

  id v74 = [v68 bottomAnchor];
  id v75 = [v39 bottomAnchor];
  id v191 = [v74 constraintEqualToAnchor:v75];

  id v76 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = v71;
  id v183 = v71;

  unsigned int v77 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365];
  id v78 = [v77 centerXAnchor];
  id v79 = [v13 leftAnchor];
  id v80 = [v78 constraintEqualToAnchor:v79 constant:0.0];

  id v81 = [v77 centerYAnchor];
  id v82 = [v13 topAnchor];
  id v83 = [v81 constraintEqualToAnchor:v82 constant:0.0];

  int v84 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = v80;
  id v190 = v80;

  int8x16_t v85 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = v83;
  id v189 = v83;

  uint64_t v86 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90];
  id v87 = [v86 centerXAnchor];
  id v88 = [v13 leftAnchor];
  id v89 = [v87 constraintEqualToAnchor:v88 constant:0.0];

  id v90 = [v86 centerYAnchor];
  id v91 = [v13 topAnchor];
  id v92 = [v90 constraintEqualToAnchor:v91 constant:0.0];

  uint64_t v93 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = v89;
  id v188 = v89;

  UIFontTextStyle v94 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = v92;
  id v182 = v92;

  id v95 = [v86 topAnchor];
  id v96 = [v8 bottomAnchor];
  id v187 = [v95 constraintGreaterThanOrEqualToAnchor:v96 constant:3.0];

  id v97 = [v77 topAnchor];
  id v98 = [v8 bottomAnchor];
  id v184 = [v97 constraintGreaterThanOrEqualToAnchor:v98 constant:3.0];

  long long v99 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
  id v100 = [v99 topAnchor];
  id v101 = [v0 topAnchor];
  id v178 = [v100 constraintEqualToAnchor:v101 constant:2.0];

  id v102 = [v99 leftAnchor];
  id v103 = [v0 leftAnchor];
  id v181 = [v102 constraintGreaterThanOrEqualToAnchor:v103 constant:7.0];

  id v104 = [v99 rightAnchor];
  id v105 = [v0 rightAnchor];
  id v180 = [v104 constraintLessThanOrEqualToAnchor:v105 constant:-7.0];

  id v106 = [v99 centerXAnchor];
  id v107 = [v13 leftAnchor];
  id v108 = [v106 constraintEqualToAnchor:v107 constant:0.0];

  LODWORD(v109) = 1144750080;
  [v108 setPriority:v109];
  int8x16_t v110 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = v108;
  id v177 = v108;

  uint64_t v111 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
  id v112 = [v111 topAnchor];
  id v113 = [v99 centerYAnchor];
  id v179 = [v112 constraintEqualToAnchor:v113];

  id v114 = [v111 bottomAnchor];
  id v115 = [v13 topAnchor];
  id v116 = [v114 constraintEqualToAnchor:v115 constant:3.0];

  id v117 = [v111 centerXAnchor];
  id v118 = [v13 leftAnchor];
  id v119 = [v117 constraintEqualToAnchor:v118 constant:0.0];

  id v120 = [v111 widthAnchor];
  id v121 = [v120 constraintEqualToConstant:2.0];

  int8x16_t v122 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = v116;
  id v176 = v116;

  int8x16_t v123 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = v119;
  id v124 = v119;

  LODWORD(v123) = v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v125 = swift_allocObject();
  *(_OWORD *)(v125 + 16) = xmmword_100752650;
  *(void *)(v125 + 32) = v239;
  *(void *)(v125 + 40) = v235;
  *(void *)(v125 + 48) = v231;
  specialized Array._endMutation()();
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_100751160;
  *(void *)(v126 + 32) = v241;
  *(void *)(v126 + 40) = v237;
  *(void *)(v126 + 48) = v233;
  *(void *)(v126 + 56) = v229;
  specialized Array._endMutation()();
  uint64_t v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_100751160;
  *(void *)(v127 + 32) = v227;
  *(void *)(v127 + 40) = v225;
  *(void *)(v127 + 48) = v223;
  *(void *)(v127 + 56) = v221;
  specialized Array._endMutation()();
  uint64_t v128 = swift_allocObject();
  *(_OWORD *)(v128 + 16) = xmmword_100751160;
  *(void *)(v128 + 32) = v219;
  *(void *)(v128 + 40) = v217;
  *(void *)(v128 + 48) = v215;
  *(void *)(v128 + 56) = v213;
  specialized Array._endMutation()();
  uint64_t v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = xmmword_100751160;
  *(void *)(v129 + 32) = v211;
  *(void *)(v129 + 40) = v209;
  *(void *)(v129 + 48) = v207;
  *(void *)(v129 + 56) = v205;
  specialized Array._endMutation()();
  uint64_t v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = xmmword_100751160;
  *(void *)(v130 + 32) = v203;
  *(void *)(v130 + 40) = v201;
  *(void *)(v130 + 48) = v199;
  *(void *)(v130 + 56) = v197;
  specialized Array._endMutation()();
  uint64_t v131 = swift_allocObject();
  *(_OWORD *)(v131 + 16) = xmmword_100756B20;
  *(void *)(v131 + 32) = v245;
  *(void *)(v131 + 40) = v243;
  specialized Array._endMutation()();
  uint64_t v132 = swift_allocObject();
  *(_OWORD *)(v132 + 16) = xmmword_100752650;
  *(void *)(v132 + 32) = v186;
  *(void *)(v132 + 40) = v185;
  *(void *)(v132 + 48) = v195;
  specialized Array._endMutation()();
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = xmmword_100752650;
  *(void *)(v133 + 32) = v183;
  *(void *)(v133 + 40) = v193;
  *(void *)(v133 + 48) = v191;
  specialized Array._endMutation()();
  uint64_t v134 = swift_allocObject();
  if (v123 == 1)
  {
    *(_OWORD *)(v134 + 16) = xmmword_100751160;
    *(void *)(v134 + 32) = v178;
    *(void *)(v134 + 40) = v181;
    *(void *)(v134 + 48) = v180;
    *(void *)(v134 + 56) = v177;
    specialized Array._endMutation()();
    uint64_t v135 = swift_allocObject();
    *(_OWORD *)(v135 + 16) = xmmword_100751160;
    *(void *)(v135 + 32) = v179;
    *(void *)(v135 + 40) = v124;
    *(void *)(v135 + 48) = v176;
    *(void *)(v135 + 56) = v121;
    specialized Array._endMutation()();
    id v136 = v177;
    id v248 = v176;
    id v247 = v124;
    id v240 = v239;
    id v236 = v235;
    id v232 = v231;
    id v242 = v241;
    id v238 = v237;
    id v234 = v233;
    id v230 = v229;
    id v228 = v227;
    id v226 = v225;
    id v224 = v223;
    id v222 = v221;
    id v220 = v219;
    id v218 = v217;
    id v216 = v215;
    id v214 = v213;
    id v212 = v211;
    id v210 = v209;
    id v208 = v207;
    id v206 = v205;
    id v204 = v203;
    id v202 = v201;
    id v200 = v199;
    id v198 = v197;
    id v246 = v245;
    id v244 = v243;
    id v196 = v195;
    id v194 = v193;
    id v192 = v191;
    id v137 = v178;
    id v138 = v181;
    id v139 = v180;
    id v140 = v179;
    id v141 = v121;
    unint64_t v142 = swift_bridgeObjectRetain();
    sub_1001E4080(v142);
    unint64_t v143 = swift_bridgeObjectRetain();
    sub_1001E4080(v143);
    unint64_t v144 = swift_bridgeObjectRetain();
    sub_1001E4080(v144);
    unint64_t v145 = swift_bridgeObjectRetain();
    sub_1001E4080(v145);
    unint64_t v146 = swift_bridgeObjectRetain();
    sub_1001E4080(v146);
    unint64_t v147 = swift_bridgeObjectRetain();
    sub_1001E4080(v147);
    unint64_t v148 = swift_bridgeObjectRetain();
    sub_1001E4080(v148);
    unint64_t v149 = swift_bridgeObjectRetain();
    sub_1001E4080(v149);
    unint64_t v150 = swift_bridgeObjectRetain();
    sub_1001E4080(v150);
    unint64_t v151 = swift_bridgeObjectRetain();
    sub_1001E4080(v151);
    unint64_t v152 = swift_bridgeObjectRetain();
    sub_1001E4080(v152);
    char v153 = self;
    sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v153 activateConstraints:isa];
  }
  else
  {
    *(_OWORD *)(v134 + 16) = xmmword_100756B20;
    *(void *)(v134 + 32) = v190;
    *(void *)(v134 + 40) = v189;
    specialized Array._endMutation()();
    uint64_t v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = xmmword_100756B20;
    *(void *)(v155 + 32) = v188;
    *(void *)(v155 + 40) = v182;
    specialized Array._endMutation()();
    uint64_t v156 = swift_allocObject();
    *(_OWORD *)(v156 + 16) = xmmword_100756B20;
    *(void *)(v156 + 32) = v187;
    *(void *)(v156 + 40) = v184;
    specialized Array._endMutation()();
    uint64_t v157 = swift_allocObject();
    *(_OWORD *)(v157 + 16) = xmmword_100751160;
    *(void *)(v157 + 32) = v178;
    *(void *)(v157 + 40) = v181;
    *(void *)(v157 + 48) = v180;
    *(void *)(v157 + 56) = v177;
    specialized Array._endMutation()();
    uint64_t v158 = swift_allocObject();
    *(_OWORD *)(v158 + 16) = xmmword_100751160;
    *(void *)(v158 + 32) = v179;
    *(void *)(v158 + 40) = v124;
    *(void *)(v158 + 48) = v176;
    *(void *)(v158 + 56) = v121;
    specialized Array._endMutation()();
    unint64_t v159 = swift_bridgeObjectRetain();
    sub_1001E4080(v159);
    unint64_t v160 = swift_bridgeObjectRetain();
    sub_1001E4080(v160);
    unint64_t v161 = swift_bridgeObjectRetain();
    sub_1001E4080(v161);
    unint64_t v162 = swift_bridgeObjectRetain();
    sub_1001E4080(v162);
    unint64_t v163 = swift_bridgeObjectRetain();
    sub_1001E4080(v163);
    unint64_t v164 = swift_bridgeObjectRetain();
    sub_1001E4080(v164);
    unint64_t v165 = swift_bridgeObjectRetain();
    sub_1001E4080(v165);
    unint64_t v166 = swift_bridgeObjectRetain();
    sub_1001E4080(v166);
    unint64_t v167 = swift_bridgeObjectRetain();
    sub_1001E4080(v167);
    unint64_t v168 = swift_bridgeObjectRetain();
    sub_1001E4080(v168);
    unint64_t v169 = swift_bridgeObjectRetain();
    sub_1001E4080(v169);
    unint64_t v170 = swift_bridgeObjectRetain();
    sub_1001E4080(v170);
    unint64_t v171 = swift_bridgeObjectRetain();
    sub_1001E4080(v171);
    unint64_t v172 = swift_bridgeObjectRetain();
    sub_1001E4080(v172);
    long long v173 = self;
    sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
    Class v174 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v173 activateConstraints:v174];
  }
  sub_1000AFA94(&qword_100953460);
  return swift_arrayDestroy();
}

void sub_1006E1F3C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels);
  if (v1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v3 = &selRef_setPercentMinimized_;
  id v4 = &selRef_preferredWidth;
  if (v2)
  {
    id v19 = (id)v0;
    id v5 = self;
    UIFontTextStyle v6 = UIFontTextStyleCaption2;
    UIContentSizeCategory v7 = UIContentSizeCategoryExtraExtraExtraLarge;
    uint64_t v0 = 4;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v1 + 8 * v0);
      }
      id v9 = v8;
      uint64_t v10 = v0 - 3;
      if (__OFADD__(v0 - 4, 1))
      {
        __break(1u);
        goto LABEL_19;
      }
      id v11 = [v5 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
      if (!v11) {
        break;
      }
      id v12 = v11;
      [v9 setFont:v11];

      ++v0;
      if (v10 == v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = (uint64_t)v19;
        id v4 = &selRef_preferredWidth;
        id v3 = &selRef_setPercentMinimized_;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  UIFontTextStyle v6 = UIFontTextStyleCaption2;
  UIContentSizeCategory v7 = UIContentSizeCategoryExtraExtraExtraLarge;
LABEL_13:
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel);
  id v14 = self;
  id v15 = [v14 v3[360] v6 1024 v7];
  if (!v15)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v16 = v15;
  [v13 v4[386] v15];

  id v17 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel);
  id v18 = [v14 v3[360] v6 1024 v7];
  if (!v18)
  {
LABEL_22:
    __break(1u);
    return;
  }
  id v20 = v18;
  [v17 v4[386]];
}

void sub_1006E2260()
{
  id v0 = [objc_allocWithZone((Class)NSDateIntervalFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setDateTemplate:v1];

  qword_1009988D0 = (uint64_t)v0;
}

uint64_t sub_1006E22D0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  id v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v18 = (char *)&v45 - v17;
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  id v23 = (char *)&v45 - v22;
  if ((a1 & 0x8000000000000000) != 0
    || *(void *)(*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 8) + 16) <= a1)
  {
    return 0;
  }
  id v46 = v21;
  Date.init(timeIntervalSinceReferenceDate:)();
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Calendar();
  sub_1000876DC(v24, (uint64_t)qword_100997610);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Calendar.Component.day(_:), v6);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v25 = v13;
  id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v27 = v50;
  if (v26(v12, 1, v50) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v27);
    sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095B890);
    return 0;
  }
  id v28 = v46;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v46, v12, v27);
  id v29 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  id v45 = v23;
  v29(v18, v23, v27);
  v29(v15, v28, v27);
  uint64_t v30 = v47;
  DateInterval.init(start:end:)();
  if (qword_10094B110 != -1) {
    swift_once();
  }
  id v31 = (id)qword_1009988D0;
  Class isa = DateInterval._bridgeToObjectiveC()().super.isa;
  id v33 = [v31 stringFromDateInterval:isa];

  if (!v33)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v49);
    id v43 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v43((uint64_t)v46, v27);
    v43((uint64_t)v45, v27);
    return 0;
  }
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  id v37 = [self mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1007509E0;
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_1000AA64C();
  *(void *)(v40 + 32) = v34;
  *(void *)(v40 + 40) = v36;
  uint64_t v41 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v49);
  id v42 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v42((uint64_t)v46, v27);
  v42((uint64_t)v45, v27);
  return v41;
}

id sub_1006E28E8(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  if (*(void *)(v2 + 16) <= a1) {
    return 0;
  }
  uint64_t v3 = v2 + 24 * a1;
  if (*(unsigned char *)(v3 + 48)) {
    return 0;
  }
  double v4 = *(double *)(v3 + 32);
  uint64_t v5 = *(char *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type);
  id v6 = sub_10008CC68(byte_100775B50[v5]);
  id v7 = [self quantityWithUnit:v6 doubleValue:v4];

  if ((((_BYTE)v5 - 3) & 0xFB) != 0)
  {
    id v8 = sub_100673F98(v7, v5);
    if (v9) {
      goto LABEL_15;
    }
    id v10 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v8];
    id v11 = [self stringWithNumber:v10 decimalPrecision:qword_100775B08[v5] roundingMode:4];

    if (!v11) {
      goto LABEL_15;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    sub_1000AAB04(v5, 0, v4);
    if (v15)
    {
      sub_1000A06D0();
      uint64_t v16 = StringProtocol.localizedUppercase.getter();
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  id v19 = sub_100674F18(v7);
  if (!v20)
  {
LABEL_15:

    return 0;
  }
  uint64_t v12 = (uint64_t)v19;
  uint64_t v14 = v20;
  sub_1000AAB04(v5, 0, v4);
  if (!v21)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  uint64_t v18 = 0xE000000000000000;
LABEL_12:
  id result = [self _preferredFontForTextStyle:UIFontTextStyleTitle3 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (result)
  {
    id v23 = result;
    id v24 = sub_10052463C(v12, v14, v16, v18, result);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006E2B60(unint64_t a1)
{
  double v2 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 24);
  double v3 = 0.0;
  if (v2 < 2.22044605e-16) {
    goto LABEL_2;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    if (*(void *)(v7 + 16) > a1)
    {
      uint64_t v8 = v7 + 24 * a1;
      if ((*(unsigned char *)(v8 + 48) & 1) == 0)
      {
        double v3 = *(double *)(v8 + 32) / v2;
LABEL_2:
        double v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer);
        [v4 bounds];
        double Height = CGRectGetHeight(v9);
        [v4 bounds];
        *(double *)&uint64_t result = CGRectGetMaxY(v10) - v3 * Height;
        return result;
      }
    }
  }
  *(double *)&uint64_t result = 0.0;
  return result;
}

uint64_t sub_1006E2C28()
{
  uint64_t v1 = v0;
  uint64_t v121 = type metadata accessor for Calendar.Component();
  uint64_t v126 = *(void (***)(void *, uint64_t, uint64_t, uint64_t))(v121 - 8);
  __chkstk_darwin(v121);
  id v120 = (char *)&v107 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_1000AFA94(&qword_100969B38);
  uint64_t v125 = *(unsigned int (***)(unint64_t *, uint64_t, uint64_t))(v128 - 8);
  __chkstk_darwin(v128);
  int8x16_t v110 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v131 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100969B40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v134 = (uint64_t *)((char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v130 = (char *)&v107 - v9;
  uint64_t v124 = sub_1000AFA94(&qword_100969B30);
  __chkstk_darwin(v124);
  uint64_t v133 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v115 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  id v138 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  double v109 = (char *)&v107 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v114 = (char *)&v107 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v107 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v107 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v107 - v24;
  id v26 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel];
  [v1 addSubview:v26];
  id v27 = [self preferredFontForTextStyle:UIFontTextStyleCallout];
  [v26 setFont:v27];

  [v26 setNumberOfLines:0];
  id v132 = self;
  id v28 = [v132 labelColor];
  id v29 = v26;
  [v26 setTextColor:v28];

  id v137 = v1;
  uint64_t v30 = self;
  Date.init(timeIntervalSinceReferenceDate:)();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v135 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v136 = v115 + 8;
  v135(v25, v11);
  id v32 = [v30 localizedStringFromDate:isa dateStyle:2 timeStyle:0];

  uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v127 = v33;

  Date.init(timeIntervalSinceReferenceDate:)();
  Class v34 = Date._bridgeToObjectiveC()().super.isa;
  v135(v23, v11);
  id v35 = [v30 localizedStringFromDate:v34 dateStyle:2 timeStyle:0];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  id v39 = [self mainBundle];
  NSString v40 = String._bridgeToObjectiveC()();
  id v41 = [v39 localizedStringForKey:v40 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10074E640;
  *(void *)(v42 + 56) = &type metadata for String;
  unint64_t v43 = sub_1000AA64C();
  id v44 = v127;
  *(void *)(v42 + 32) = v129;
  *(void *)(v42 + 40) = v44;
  *(void *)(v42 + 96) = &type metadata for String;
  *(void *)(v42 + 104) = v43;
  *(void *)(v42 + 64) = v43;
  *(void *)(v42 + 72) = v36;
  *(void *)(v42 + 80) = v38;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 setText:v45];

  id v46 = v137;
  id v47 = *(void **)&v137[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel];
  [v137 addSubview:v47];
  char v48 = v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
  double v49 = 2.0;
  if (((v48 - 3) & 0xFB) == 0) {
    double v49 = 1.0;
  }
  id v50 = sub_1000AAB04(v48, 1, v49);
  if (v51)
  {
    id v139 = v50;
    uint64_t v140 = v51;
    sub_1000A06D0();
    StringProtocol.localizedUppercase.getter();
    swift_bridgeObjectRelease();
    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v52 = 0;
  }
  uint64_t v53 = v128;
  id v55 = v125;
  id v54 = v126;
  uint64_t v56 = v124;
  [v47 setText:v52];

  id v57 = [v132 secondaryLabelColor];
  [v47 setTextColor:v57];

  id v58 = v137;
  uint64_t v59 = *(int *)(v56 + 48);
  id v60 = &v133[v59];
  uint64_t v61 = v115;
  int8x16_t v123 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  uint64_t v124 = v115 + 16;
  v123(&v133[v59], &v137[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth + v59], v11);
  id v62 = *(char **)(v61 + 32);
  v61 += 32;
  uint64_t v133 = v62;
  uint64_t v63 = ((uint64_t (*)(char *, char *, uint64_t))v62)(v20, v60, v11);
  __chkstk_darwin(v63);
  id v108 = v20;
  *(&v107 - 2) = (uint64_t)v20;
  id v64 = sub_1006DE064((void (*)(void))sub_1006E89E8, (uint64_t)(&v107 - 4), 0, 12);
  id v65 = *(void **)&v58[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView];
  id v116 = v65;
  [v58 addSubview:v65];
  [v65 setAxis:0];
  [v65 setDistribution:1];
  Date.init()();
  uint64_t v66 = (void *)v64[2];
  uint64_t v122 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels;
  uint64_t v111 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel;
  uint64_t v127 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 24);
  uint64_t v129 = v61;
  uint64_t v113 = v61 + 16;
  long long v67 = v66;
  uint64_t v125 = v55 + 6;
  uint64_t v126 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v55 + 7);
  int8x16_t v68 = v64;
  unsigned int v119 = enum case for Calendar.Component.month(_:);
  id v118 = (void (**)(char *, void, uint64_t))(v54 + 13);
  id v117 = (void (**)(char *, uint64_t))(v54 + 1);
  swift_bridgeObjectRetain();
  uint64_t v112 = 0;
  unint64_t v69 = 0;
  for (uint64_t i = v53; ; uint64_t i = v128)
  {
    id v73 = (unint64_t *)v130;
    uint64_t v72 = (uint64_t)v131;
    if ((void *)v69 == v67)
    {
      (*v127)(v131, 1, 1, v11);
      unint64_t v69 = (unint64_t)v67;
LABEL_12:
      sub_10008DB18(v72, (uint64_t *)&unk_10095B890);
      uint64_t v75 = 1;
      goto LABEL_15;
    }
    if (v69 >= v68[2]) {
      goto LABEL_35;
    }
    uint64_t v74 = v115;
    v123(v131, (char *)v68+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v69++, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v72, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v72, 1, v11) == 1) {
      goto LABEL_12;
    }
    unint64_t v76 = v69;
    unsigned int v77 = v68;
    id v78 = v109;
    id v79 = (void (*)(char *, char *, uint64_t))v133;
    ((void (*)(char *, uint64_t, uint64_t))v133)(v109, v72, v11);
    id v80 = &v110[*(int *)(i + 48)];
    v79(v80, v78, v11);
    uint64_t v81 = v112 + 1;
    if (__OFADD__(v112, 1)) {
      goto LABEL_36;
    }
    id v82 = (char *)v134 + *(int *)(i + 48);
    *uint64_t v134 = v112;
    v79(v82, v80, v11);
    uint64_t v75 = 0;
    uint64_t v112 = v81;
    int8x16_t v68 = v77;
    unint64_t v69 = v76;
LABEL_15:
    uint64_t v83 = (uint64_t)v134;
    (*v126)(v134, v75, 1, i);
    sub_1000AEEC8(v83, (uint64_t)v73, &qword_100969B40);
    if ((*v125)(v73, 1, i) == 1) {
      break;
    }
    unint64_t v84 = *v73;
    ((void (*)(char *, char *, uint64_t))v133)(v138, (char *)v73 + *(int *)(i + 48), v11);
    uint64_t v85 = *(void *)&v137[v122];
    if ((v85 & 0xC000000000000001) != 0)
    {
      id v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v84 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v84 >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_34;
      }
      id v86 = *(id *)(v85 + 8 * v84 + 32);
    }
    id v87 = v86;
    if (qword_10094B100 != -1) {
      swift_once();
    }
    id v88 = (void *)qword_100969988;
    Class v89 = Date._bridgeToObjectiveC()().super.isa;
    NSString v90 = [v88 stringFromDate:v89];

    if (!v90)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v90 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v87 setText:v90];

    if (qword_10094A5E8 != -1) {
      swift_once();
    }
    uint64_t v91 = type metadata accessor for Calendar();
    sub_1000876DC(v91, (uint64_t)qword_100997610);
    id v92 = v120;
    uint64_t v93 = v121;
    (*v118)(v120, v119, v121);
    UIFontTextStyle v94 = v138;
    uint64_t v95 = Calendar.component(_:from:)();
    (*v117)(v92, v93);
    if (v95 == 1)
    {
      id v96 = *(void **)&v137[v111];
      *(void *)&v137[v111] = v87;
      id v97 = v87;

      id v98 = v114;
      v135(v114, v11);
      v123(v98, v94, v11);
    }
    id v71 = [v132 secondaryLabelColor];
    [v87 setTextColor:v71];

    [v116 addArrangedSubview:v87];
    v135(v94, v11);
  }
  swift_bridgeObjectRelease_n();
  long long v67 = *(void **)&v137[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
  if (qword_10094B108 == -1) {
    goto LABEL_30;
  }
LABEL_37:
  swift_once();
LABEL_30:
  long long v99 = (void *)qword_100969990;
  id v100 = v114;
  Class v101 = Date._bridgeToObjectiveC()().super.isa;
  NSString v102 = [v99 stringFromDate:v101];

  id v103 = v108;
  if (!v102)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v102 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v67 setText:v102];

  id v104 = [v132 secondaryLabelColor];
  [v67 setTextColor:v104];

  [v137 addSubview:v67];
  [v67 setTextAlignment:0];
  id v105 = (uint64_t (*)(char *, uint64_t))v135;
  v135(v100, v11);
  return v105(v103, v11);
}

uint64_t sub_1006E3B8C()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Calendar();
  sub_1000876DC(v4, (uint64_t)qword_100997610);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.month(_:), v0);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id sub_1006E3CF8()
{
  uint64_t v1 = v0;
  id v2 = [v0 layer];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer];
  [v2 addSublayer:v3];

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  [v1 addSubview:v4];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365];
  [v4 addSubview:v5];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90];
  [v4 addSubview:v6];
  id v134 = self;
  id v7 = [v134 tertiaryLabelColor];
  id v8 = [v7 CGColor];

  [v3 setStrokeColor:v8];
  [v3 setLineCap:kCALineCapRound];
  [v3 setLineWidth:1.0];
  int v132 = v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction];
  if (v132 != 1)
  {
    id v9 = [v1 layer];
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365];
    [v9 addSublayer:v10];

    id v11 = [v1 layer];
    uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90];
    [v11 addSublayer:v12];

    uint64_t v13 = (char *)sub_1005F2334(v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type]);
    id v14 = *(id *)&v13[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    id v15 = [v14 CGColor];
    [v12 setStrokeColor:v15];

    id v16 = [v134 secondaryLabelColor];
    id v17 = [v16 CGColor];

    [v10 setStrokeColor:v17];
    [v12 setLineWidth:2.0];
    [v10 setLineWidth:2.0];
    [v12 setLineCap:kCALineCapRound];
    [v10 setLineCap:kCALineCapRound];
  }
  id v18 = [v5 layer];
  id v128 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365];
  [v18 addSublayer:];

  id v19 = [v5 layer];
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365];
  [v19 addSublayer:v20];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v21 = objc_allocWithZone((Class)CAFilter);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v21 initWithType:v22];

  [v20 setCompositingFilter:v23];
  id v24 = [v6 layer];
  id v126 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90];
  [v24 addSublayer:];

  id v25 = [v6 layer];
  id v26 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90];
  [v25 addSublayer:v26];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v27 = objc_allocWithZone((Class)CAFilter);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [v27 initWithType:v28];

  [v26 setCompositingFilter:v29];
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_10074E640;
  LOBYTE(v27) = v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
  uint64_t v130 = (char)v27;
  id v31 = (char *)sub_1005F2334((char)v27);
  id v32 = (char *)*(id *)&v31[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v33 = *(id *)&v32[OBJC_IVAR____TtC10FitnessApp14GradientColors_light];
  id v34 = [v33 CGColor];

  type metadata accessor for CGColor(0);
  *(void *)(v30 + 56) = v35;
  uint64_t v36 = v35;
  uint64_t v125 = v35;
  *(void *)(v30 + 32) = v34;
  uint64_t v37 = (char *)sub_1005F2334((char)v27);
  uint64_t v38 = (char *)*(id *)&v37[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v39 = *(id *)&v38[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark];
  id v40 = [v39 CGColor];

  *(void *)(v30 + 88) = v36;
  *(void *)(v30 + 64) = v40;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setColors:isa];

  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10074E640;
  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  Class v43 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  Class v44 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  NSString v45 = (objc_class *)type metadata accessor for GradientColors();
  id v46 = (char *)objc_allocWithZone(v45);
  *(void *)&v46[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v43;
  *(void *)&v46[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v44;
  v143.receiver = v46;
  v143.super_class = v45;
  id v47 = [super init];
  Class v48 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  double v49 = (objc_class *)type metadata accessor for MetricColors();
  id v50 = (char *)objc_allocWithZone(v49);
  *(void *)&v50[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v47;
  *(void *)&v50[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v48;
  v142.receiver = v50;
  v142.super_class = v49;
  uint64_t v51 = (char *)[super init];
  NSString v52 = (char *)*(id *)&v51[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v53 = *(id *)&v52[OBJC_IVAR____TtC10FitnessApp14GradientColors_light];
  id v54 = [v53 CGColor];

  *(void *)(v42 + 56) = v125;
  *(void *)(v42 + 32) = v54;
  Class v55 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  Class v56 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  id v57 = (char *)objc_allocWithZone(v45);
  *(void *)&v57[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v55;
  *(void *)&v57[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v56;
  v141.receiver = v57;
  v141.super_class = v45;
  int8x16_t v123 = v45;
  id v58 = [super init];
  Class v59 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  id v60 = (char *)objc_allocWithZone(v49);
  *(void *)&v60[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v58;
  *(void *)&v60[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v59;
  v140.receiver = v60;
  v140.super_class = v49;
  uint64_t v124 = v49;
  uint64_t v61 = (char *)[super init];
  id v62 = (char *)*(id *)&v61[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  id v63 = *(id *)&v62[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark];
  id v64 = [v63 CGColor];

  *(void *)(v42 + 88) = v125;
  *(void *)(v42 + 64) = v64;
  Class v65 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 setColors:v65];

  id v66 = [v134 blackColor];
  id v67 = [v66 CGColor];

  [v126 setStrokeColor:v67];
  [v126 setLineWidth:2.0];
  [v126 setLineCap:kCALineCapRound];
  id v68 = [v134 blackColor];
  id v69 = [v68 CGColor];

  [v128 setStrokeColor:v69];
  [v128 setLineWidth:2.0];
  [v128 setLineCap:kCALineCapRound];
  if (v132 != 1)
  {
    [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365]];
    [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90]];
  }
  uint64_t v70 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager];
  id v71 = sub_10008CC68(byte_100775B50[v130]);
  double v72 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90];
  id v73 = self;
  id v74 = [v73 quantityWithUnit:v71 doubleValue:v72];

  if (((v130 - 3) & 0xFB) != 0)
  {
    id v75 = sub_100673F98(v74, v130);
    if ((v76 & 1) == 0)
    {
      id v77 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v75];
      uint64_t v78 = qword_100775B08[v130];
      id v79 = self;
      id v80 = [v79 stringWithNumber:v77 decimalPrecision:v78 roundingMode:4];

      if (v80)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v81 = sub_10008CC68(byte_100775B50[v130]);
        id v74 = [v73 quantityWithUnit:v81 doubleValue:*(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365]];

        id v82 = sub_100673F98(v74, v130);
        if ((v83 & 1) == 0)
        {
          id v84 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&v82];
          id v85 = [v79 stringWithNumber:v84 decimalPrecision:qword_100775B08[v130] roundingMode:4];

          if (v85)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v86 = sub_1005F2334(v130);
            sub_10060C048((uint64_t)v86);

            swift_bridgeObjectRelease();
            Class v87 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            Class v88 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
            Class v89 = (char *)objc_allocWithZone(v123);
            *(void *)&v89[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v87;
            *(void *)&v89[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v88;
            v139.receiver = v89;
            v139.super_class = v123;
            id v90 = [super init];
            Class v91 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            id v92 = (char *)objc_allocWithZone(v124);
            *(void *)&v92[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v90;
            *(void *)&v92[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v91;
            v138.receiver = v92;
            v138.super_class = v124;
            [super init];
            sub_10060C048((uint64_t)v93);
            swift_bridgeObjectRelease();

            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
      }
    }

    goto LABEL_16;
  }
  uint64_t v94 = sub_100674238(v74);
  uint64_t v96 = v95;
  id v135 = v97;
  uint64_t v99 = v98;

  if (v96)
  {
    uint64_t v133 = v94;
    id v100 = sub_10008CC68(byte_100775B50[v130]);
    id v101 = [v73 quantityWithUnit:v100 doubleValue:*(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365]];

    uint64_t v102 = sub_100674238(v101);
    uint64_t v104 = v103;
    uint64_t v106 = v105;
    id v108 = v107;

    if (v104)
    {
      id v129 = v108;
      id v109 = sub_1005F2334(v130);
      uint64_t v131 = v106;
      uint64_t v110 = OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter;
      uint64_t v127 = v102;
      id v111 = *(id *)(v70 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
      sub_10060C150((uint64_t)v109, v133, v96, (uint64_t)v135, v99, v111);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      Class v112 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
      Class v113 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
      id v114 = (char *)objc_allocWithZone(v123);
      *(void *)&v114[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v112;
      *(void *)&v114[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v113;
      v137.receiver = v114;
      v137.super_class = v123;
      [super init];
      Class v116 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
      id v117 = (char *)objc_allocWithZone(v124);
      *(void *)&v117[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v115;
      *(void *)&v117[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v116;
      v136.receiver = v117;
      v136.super_class = v124;
      id v118 = [super init];
      id v119 = *(id *)(v70 + v110);
      sub_10060C150((uint64_t)v118, v127, v104, v131, (uint64_t)v129, v119);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_16:
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div]];
  id v120 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
  [v1 addSubview:v120];
  [v120 setAlpha:0.0];
  uint64_t v121 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
  [v1 addSubview:v121];
  return [v121 setAlpha:0.0];
}

id sub_1006E4D64()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90) bounds];
  CGFloat x = v17.origin.x;
  CGFloat y = v17.origin.y;
  CGFloat width = v17.size.width;
  CGFloat height = v17.size.height;
  double v5 = CGRectGetHeight(v17);
  id v6 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    id v9 = (double *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      if (v11 >= 0x27)
      {
        double v12 = *(double *)(v7 + 8 * v11 + 32);
        double v13 = v9[3];
        double v14 = 0.0;
        if (v13 >= 2.22044605e-16)
        {
          if (v11 >= *(void *)(*(void *)v9 + 16)) {
            goto LABEL_4;
          }
          uint64_t v15 = *(void *)v9 + v10;
          if (*(unsigned char *)(v15 + 48)) {
            goto LABEL_4;
          }
          double v14 = *(double *)(v15 + 32) / v13;
        }
        v18.origin.CGFloat x = x;
        v18.origin.CGFloat y = y;
        v18.size.CGFloat width = width;
        v18.size.CGFloat height = height;
        [v6 moveToPoint:v12, CGRectGetMaxY(v18) + -1.0];
        v19.origin.CGFloat x = x;
        v19.origin.CGFloat y = y;
        v19.size.CGFloat width = width;
        v19.size.CGFloat height = height;
        [v6 addLineToPoint:v12, CGRectGetMaxY(v19) - v5 * v14 + 1.0];
      }
LABEL_4:
      ++v11;
      v10 += 24;
      if (v8 == v11)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
  }
  return v6;
}

id sub_1006E4F14()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90) bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  id v9 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    double v12 = (double *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 48;
    do
    {
      if (v13 >= 0x27)
      {
        double v15 = *(double *)(v10 + 8 * v13 + 32);
        if (v12[3] < 2.22044605e-16
          || v13 < *(void *)(*(void *)v12 + 16) && (*(unsigned char *)(*(void *)v12 + v14) & 1) == 0)
        {
          v17.origin.CGFloat x = v2;
          v17.origin.CGFloat y = v4;
          v17.size.CGFloat width = v6;
          v17.size.CGFloat height = v8;
          [v9 moveToPoint:v15, CGRectGetMaxY(v17) + -1.0];
          v18.origin.CGFloat x = v2;
          v18.origin.CGFloat y = v4;
          v18.size.CGFloat width = v6;
          v18.size.CGFloat height = v8;
          [v9 addLineToPoint:v15, CGRectGetMaxY(v18) + -1.0];
        }
      }
      ++v13;
      v14 += 24;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
  }
  return v9;
}

id sub_1006E5098(double a1)
{
  id v3 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (unint64_t i = 0; i != v5; ++i)
    {
      if (i >= 0x4E)
      {
        double v7 = *(double *)(v4 + 8 * i + 32);
        [v3 moveToPoint:v7, a1];
        [v3 addLineToPoint:v7 a1];
      }
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

id sub_1006E516C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365) bounds];
  CGFloat x = v18.origin.x;
  CGFloat y = v18.origin.y;
  CGFloat width = v18.size.width;
  CGFloat height = v18.size.height;
  double v5 = CGRectGetHeight(v18);
  id v6 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return v6;
  }
  double v9 = *(double *)(v7 + 32);
  uint64_t v10 = v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  double v12 = *(double *)(v10 + 24);
  id result = (id)swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  double v15 = (double *)(v11 + 48);
  uint64_t v16 = v8 - 1;
  while (1)
  {
    double v17 = 0.0;
    if (v12 < 2.22044605e-16) {
      goto LABEL_4;
    }
    if (v14 < *(void *)(v11 + 16) && (*(unsigned char *)v15 & 1) == 0)
    {
      double v17 = *(v15 - 2) / v12;
LABEL_4:
      v19.origin.CGFloat x = x;
      v19.origin.CGFloat y = y;
      v19.size.CGFloat width = width;
      v19.size.CGFloat height = height;
      [v6 moveToPoint:v9, CGRectGetMaxY(v19) + -1.0];
      v20.origin.CGFloat x = x;
      v20.origin.CGFloat y = y;
      v20.size.CGFloat width = width;
      v20.size.CGFloat height = height;
      id result = [v6 addLineToPoint:v9, CGRectGetMaxY(v20) - v5 * v17 + 1.0];
    }
    if (v16 == v14) {
      goto LABEL_12;
    }
    if (v14 + 1 >= *(void *)(v7 + 16)) {
      break;
    }
    double v9 = *(double *)(v7 + 40 + 8 * v14);
    v15 += 3;
    if (++v14 == 39)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  __break(1u);
  return result;
}

id sub_1006E5338()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365) bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  id v9 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return v9;
  }
  double v12 = *(double *)(v10 + 32);
  uint64_t v13 = v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  double v15 = *(double *)(v13 + 24);
  uint64_t v16 = (unsigned char *)(v14 + 48);
  id result = (id)swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  uint64_t v19 = v11 - 1;
  while (1)
  {
    if (v15 < 2.22044605e-16 || v18 < *(void *)(v14 + 16) && (*v16 & 1) == 0)
    {
      v20.origin.CGFloat x = v2;
      v20.origin.CGFloat y = v4;
      v20.size.CGFloat width = v6;
      v20.size.CGFloat height = v8;
      [v9 moveToPoint:v12, CGRectGetMaxY(v20) + -1.0];
      v21.origin.CGFloat x = v2;
      v21.origin.CGFloat y = v4;
      v21.size.CGFloat width = v6;
      v21.size.CGFloat height = v8;
      id result = [v9 addLineToPoint:v12, CGRectGetMaxY(v21) + -1.0];
    }
    if (v19 == v18)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      return v9;
    }
    if (v18 + 1 >= *(void *)(v10 + 16)) {
      break;
    }
    double v12 = *(double *)(v10 + 40 + 8 * v18);
    v16 += 24;
    if (++v18 == 39) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_1006E54DC()
{
  [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer) bounds];
  CGFloat x = v11.origin.x;
  CGFloat y = v11.origin.y;
  CGFloat width = v11.size.width;
  CGFloat height = v11.size.height;
  double v5 = CGRectGetWidth(v11);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 0x28)
  {
    __break(1u);
  }
  else
  {
    double v8 = *(double *)(v6 + 344) + -1.0 + (v5 / 52.0 + -2.0) * -0.5;
    double v9 = *(double *)(v6 + 8 * v7 + 24);
    id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v10 moveToPoint:1.0, 0.0];
    v12.origin.CGFloat x = x;
    v12.origin.CGFloat y = y;
    v12.size.CGFloat width = width;
    v12.size.CGFloat height = height;
    [v10 addLineToPoint:0.0, CGRectGetMaxY(v12)];
    [v10 moveToPoint:v8, 0.0];
    v13.origin.CGFloat x = x;
    v13.origin.CGFloat y = y;
    v13.size.CGFloat width = width;
    v13.size.CGFloat height = height;
    [v10 addLineToPoint:v8, CGRectGetMaxY(v13)];
    [v10 moveToPoint:v9, 0.0];
    v14.origin.CGFloat x = x;
    v14.origin.CGFloat y = y;
    v14.size.CGFloat width = width;
    v14.size.CGFloat height = height;
    [v10 addLineToPoint:v9, CGRectGetMaxY(v14)];
  }
}

void sub_1006E566C()
{
  uint64_t v1 = sub_1000AFA94(&qword_100969B30);
  __chkstk_darwin(v1);
  double v3 = (unint64_t *)((char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  CGFloat v4 = (objc_class *)type metadata accessor for TrendDetailChartView();
  v107.receiver = v0;
  v107.super_class = v4;
  [super layoutSubviews];
  double v5 = sub_1006DF020();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = v5;
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = sub_1006DF1D0();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  [v7 frame];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  [v7 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer] setFrame:v9, v11, v13, v15];
  id v24 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90];
  [v24 setFrame:v17, v19, v21, v23];
  id v25 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365];
  CGFloat v106 = v17;
  [v25 setFrame:v17, v19, v21, v23];
  id v26 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90];
  [v24 bounds];
  [v26 setFrame:];
  id v27 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365];
  [v25 bounds];
  [v27 setFrame:];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90] setFrame:v9, v11, v13, v15];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365] setFrame:v9, v11, v13, v15];
  NSString v28 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
  [v7 bounds];
  [v28 setFrame:];
  char v29 = v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
  double v30 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90];
  uint64_t v31 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager];
  double v32 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 24];
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter;
  id v34 = [*(id *)(v31 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter) unitManager];
  if (!v34) {
    goto LABEL_32;
  }
  uint64_t v35 = v34;
  double v36 = sub_1005F2D50(v34, v29, v30);

  double v37 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365];
  id v38 = [*(id *)(v31 + v33) unitManager];
  if (!v38)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v39 = v38;
  double v40 = sub_1005F2D50(v38, v29, v37);

  id v41 = [*(id *)(v31 + v33) unitManager];
  if (!v41)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v42 = v41;
  double v43 = sub_1005F2D50(v41, v29, v32);

  double v44 = 0.0;
  BOOL v45 = v32 <= 0.0;
  double v46 = 0.0;
  if (!v45)
  {
    double v46 = v36 / v43;
    double v44 = v40 / v43;
  }
  CGFloat v47 = v106;
  v108.origin.CGFloat x = v106;
  v108.origin.CGFloat y = v19;
  v108.size.CGFloat width = v21;
  v108.size.CGFloat height = v23;
  double Height = CGRectGetHeight(v108);
  v109.origin.CGFloat x = v47;
  v109.origin.CGFloat y = v19;
  v109.size.CGFloat width = v21;
  v109.size.CGFloat height = v23;
  double v49 = CGRectGetMaxY(v109) - v46 * Height;
  v110.origin.CGFloat x = v47;
  v110.origin.CGFloat y = v19;
  v110.size.CGFloat width = v21;
  v110.size.CGFloat height = v23;
  double MaxY = CGRectGetMaxY(v110);
  double v51 = v44 * Height;
  NSString v52 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint];
  if (v52)
  {
    double v53 = 0.0;
    if ((~*(void *)&v49 & 0x7FF0000000000000) != 0) {
      double v53 = v49;
    }
    [v52 setConstant:v53];
  }
  double v54 = MaxY - v51;
  Class v55 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint];
  if (v55)
  {
    double v56 = 0.0;
    if ((~*(void *)&v54 & 0x7FF0000000000000) != 0) {
      double v56 = v54;
    }
    [v55 setConstant:v56];
  }
  [v0 bounds];
  double Width = CGRectGetWidth(v111);
  uint64_t v58 = *(void *)&v0[v6];
  unint64_t v59 = *(void *)(v58 + 16);
  if (v59 < 0x28)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  double v60 = *(double *)(v58 + 344) + -1.0 + (Width / 52.0 + -2.0) * -0.5;
  uint64_t v61 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint];
  if (v61) {
    [v61 setConstant:v60 + (*(double *)(v58 + 8 * v59 + 24) - v60) * 0.5];
  }
  id v62 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint];
  if (v62) {
    [v62 setConstant:v60 * 0.5];
  }
  uint64_t v63 = *(int *)(v1 + 48);
  id v64 = (char *)v3 + v63;
  Class v65 = &v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth + v63];
  unint64_t v66 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth];
  *double v3 = v66;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v68 = *(void *)(v67 - 8);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v65, v67);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v67);
  if ((v66 & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
  uint64_t v69 = *(void *)&v0[v6];
  if (v66 >= *(void *)(v69 + 16))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  double v70 = *(double *)(v69 + 8 * v66 + 32) + -2.0;
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] setConstant:v70];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] setConstant:v70];
  id v71 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel];
  if (v71)
  {
    uint64_t v72 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint;
    id v73 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint];
    double v104 = v54;
    double v105 = v49;
    id v74 = v71;
    if (v73) {
      [v73 setActive:0];
    }
    [v71 frame];
    double v76 = v75;
    double v78 = v77;
    double v80 = v79;
    double v82 = v81;
    id v83 = [v71 superview];
    [v0 convertRect:v83 fromView:v76, v78, v80, v82];
    CGFloat v85 = v84;
    CGFloat v87 = v86;
    CGFloat v89 = v88;
    CGFloat v91 = v90;

    v112.origin.CGFloat x = v85;
    v112.origin.CGFloat y = v87;
    v112.size.CGFloat width = v89;
    v112.size.CGFloat height = v91;
    double MinX = CGRectGetMinX(v112);
    id v93 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
    [v93 bounds];
    CGFloat v94 = MinX + CGRectGetWidth(v113);
    v114.origin.CGFloat x = v106;
    v114.origin.CGFloat y = v19;
    v114.size.CGFloat width = v21;
    v114.size.CGFloat height = v23;
    if (CGRectGetMaxX(v114) >= v94)
    {
      id v95 = [v71 leftAnchor];
      id v96 = [v93 leftAnchor];
      id v99 = [v95 constraintEqualToAnchor:v96];
    }
    else
    {
      id v95 = [v93 leftAnchor];
      id v96 = [v71 leftAnchor];
      [v93 bounds];
      double v97 = CGRectGetWidth(v115);
      [v71 intrinsicContentSize];
      id v99 = [v95 constraintEqualToAnchor:v96 constant:-(v97 - v98)];
    }
    double v54 = v104;
    double v49 = v105;
    id v100 = v99;

    [v100 setActive:1];
    id v101 = *(void **)&v0[v72];
    *(void *)&v0[v72] = v100;
  }
  uint64_t v102 = self;
  [v102 begin];
  [v102 setDisableActions:1];
  sub_1006E5E7C((uint64_t)v0, v54, v49);
  [v102 commit];
}

void sub_1006E5E7C(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) == 1)
  {
    id v7 = sub_1006E4D64();
    id v8 = [v7 CGPath];

    [v6 setPath:v8];
    double v9 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
    id v10 = sub_1006E516C();
  }
  else
  {
    id v11 = sub_1006E4F14();
    id v12 = [v11 CGPath];

    [v6 setPath:v12];
    double v9 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
    id v10 = sub_1006E5338();
  }
  id v13 = [v10 CGPath];

  [v9 setPath:v13];
  double v14 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer);
  sub_1006E54DC();
  double v16 = v15;
  id v17 = [v15 CGPath];

  [v14 setPath:v17];
  double v18 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365);
  id v19 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v21; ++i)
    {
      double v23 = *(double *)(v20 + 8 * i + 32);
      [v19 moveToPoint:v23 a2];
      [v19 addLineToPoint:v23, a2];
    }
    swift_bridgeObjectRelease();
  }
  id v24 = [v19 CGPath];

  [v18 setPath:v24];
  id v25 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90);
  id v26 = sub_1006E5098(a3);
  id v27 = [v26 CGPath];

  [v25 setPath:v27];
}

id sub_1006E6170(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel;
  id v3 = objc_allocWithZone((Class)UILabel);
  CGFloat v4 = v1;
  id v5 = [v3 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v5 setAdjustsFontForContentSizeCategory:1];
  uint64_t v55 = v2;
  double v56 = v1;
  *(void *)&v1[v2] = v5;
  sub_10007E2D8(0, &qword_100953458);
  id v6 = sub_1005CA0D4();
  id v7 = self;
  id result = [v7 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024];
  if (result)
  {
    double v9 = result;
    uint64_t v10 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel;
    [v6 setFont:result];

    uint64_t v52 = v10;
    *(void *)&v4[v10] = v6;
    uint64_t v11 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer;
    sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
    uint64_t v51 = v11;
    *(void *)&v4[v11] = sub_1006D13E4();
    uint64_t v50 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365;
    *(void *)&v4[v50] = sub_1006D13E4();
    uint64_t v49 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90;
    *(void *)&v4[v49] = sub_1006D13E4();
    uint64_t v48 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer;
    *(void *)&v4[v48] = [objc_allocWithZone((Class)UILayoutGuide) init];
    uint64_t v47 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer;
    *(void *)&v4[v47] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v46 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90;
    *(void *)&v4[v46] = [objc_allocWithZone((Class)CAGradientLayer) init];
    uint64_t v45 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90;
    *(void *)&v4[v45] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v44 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365;
    *(void *)&v4[v44] = [objc_allocWithZone((Class)CAGradientLayer) init];
    uint64_t v42 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365;
    *(void *)&v4[v42] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v41 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90;
    *(void *)&v4[v41] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v40 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365;
    *(void *)&v4[v40] = [objc_allocWithZone((Class)CAShapeLayer) init];
    uint64_t v12 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365;
    type metadata accessor for TrendAveragePlatterView();
    uint64_t v39 = v12;
    *(void *)&v4[v12] = sub_1006D13E4();
    uint64_t v38 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90;
    *(void *)&v4[v38] = sub_1006D13E4();
    uint64_t v13 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask;
    type metadata accessor for TrendChartMaskingView();
    uint64_t v37 = v13;
    *(void *)&v4[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v14 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter;
    type metadata accessor for TrendsScrubberPlatterView();
    uint64_t v36 = v14;
    *(void *)&v4[v14] = sub_1006D13E4();
    uint64_t v15 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole;
    type metadata accessor for TrendsScrubberFlagpoleView();
    uint64_t v35 = v15;
    *(void *)&v4[v15] = sub_1006D13E4();
    uint64_t v16 = 12;
    specialized ContiguousArray.reserveCapacity(_:)();
    do
    {
      id v17 = sub_1005CA0D4();
      id result = [v7 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
      if (!result)
      {
        __break(1u);
        goto LABEL_8;
      }
      double v18 = result;
      [v17 setFont:result];

      id v19 = [self secondaryLabelColor];
      [v17 setTextColor:v19];

      [v17 setTextAlignment:0];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v16;
    }
    while (v16);
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels] = _swiftEmptyArrayStorage;
    id v20 = sub_1005CA0D4();
    id result = [v7 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1024 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    if (!result) {
      goto LABEL_9;
    }
    uint64_t v21 = result;
    uint64_t v22 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    uint64_t v57 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    [v20 setFont:result];

    *(void *)&v4[v22] = v20;
    uint64_t v23 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    uint64_t v33 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    sub_10007E2D8(0, &qword_100957898);
    *(void *)&v4[v23] = sub_1006D13E4();
    uint64_t v24 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div;
    id v25 = sub_1006D134C();

    *(void *)&v4[v24] = v25;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = _swiftEmptyArrayStorage;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = _swiftEmptyArrayStorage;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_extraTopPaddingPercentage] = 0;
    uint64_t v26 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel] = 0;
    uint64_t v27 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = 0;
    uint64_t v28 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = 0;
    uint64_t v29 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = 0;
    uint64_t v30 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = 0;
    uint64_t v31 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = 0;
    uint64_t v34 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = 0;
    uint64_t v43 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = 0;
    uint64_t v54 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = 0;
    uint64_t v58 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = 0;
    uint64_t v59 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = 0;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_nWeeksIn90DayBucket] = 13;
    v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled] = 0;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    double v32 = *(void **)&v4[v59];
    type metadata accessor for TrendDetailChartView();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  return result;
}

id sub_1006E69A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailChartView();
  return [super dealloc];
}

uint64_t sub_1006E6CE0()
{
  return type metadata accessor for TrendDetailChartView();
}

uint64_t type metadata accessor for TrendDetailChartView()
{
  uint64_t result = qword_100969B20;
  if (!qword_100969B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006E6D34()
{
  id v3 = &unk_100775A78;
  CGFloat v4 = &unk_100775A90;
  id v5 = (char *)&value witness table for Builtin.Int64 + 64;
  id v6 = &unk_100775AA8;
  id v7 = (char *)&value witness table for Builtin.Int64 + 64;
  id v8 = &unk_100775AA8;
  double v9 = &unk_100775AA8;
  uint64_t v10 = &unk_100775AA8;
  uint64_t v11 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v12 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v13 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v14 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v15 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v16 = (char *)&value witness table for Builtin.UnknownObject + 64;
  id v17 = (char *)&value witness table for Builtin.UnknownObject + 64;
  double v18 = (char *)&value witness table for Builtin.UnknownObject + 64;
  id v19 = (char *)&value witness table for Builtin.UnknownObject + 64;
  id v20 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v21 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v22 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v23 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v24 = (char *)&value witness table for Builtin.UnknownObject + 64;
  id v25 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v26 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v27 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v28 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v29 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v30 = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v31 = (char *)&value witness table for Builtin.UnknownObject + 64;
  double v32 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v33 = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v34 = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v35 = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v36 = &v2;
    uint64_t v37 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v38 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v39 = &unk_100775AC0;
    uint64_t v40 = &unk_100775AC0;
    uint64_t v41 = &unk_100775AC0;
    uint64_t v42 = &unk_100775AC0;
    uint64_t v43 = &unk_100775AC0;
    uint64_t v44 = &unk_100775AC0;
    uint64_t v45 = &unk_100775AC0;
    uint64_t v46 = &unk_100775AC0;
    uint64_t v47 = &unk_100775AC0;
    uint64_t v48 = &unk_100775AC0;
    uint64_t v49 = &unk_100775AC0;
    uint64_t v50 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v51 = &unk_100775AD8;
    return swift_updateClassMetadata2();
  }
  return result;
}

id sub_1006E6E90()
{
  unint64_t v1 = self;
  [v1 begin];
  [v1 setDisableActions:1];
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  id v3 = sub_1006E4F14();
  id v4 = [v3 CGPath];

  [v2 setPath:v4];
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
  id v6 = sub_1006E5338();
  id v7 = [v6 CGPath];

  [v5 setPath:v7];

  return [v1 commit];
}

void sub_1006E6F98()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) = 1;
  id v12 = sub_1006E4F14();
  id v1 = sub_1006E5338();
  id v2 = sub_1006E4D64();
  id v3 = sub_1006E516C();
  id v4 = sub_1006E712C(v12, v2);
  id v5 = sub_1006E712C(v1, v3);
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 addAnimation:v4 forKey:v7];

  id v8 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 addAnimation:v5 forKey:v9];

  id v10 = [v2 CGPath];
  [v6 setPath:v10];

  id v11 = [v3 CGPath];
  [v8 setPath:v11];
}

id sub_1006E712C(void *a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self animationWithKeyPath:v4];

  id v6 = [a1 CGPath];
  [v5 setFromValue:v6];

  id v7 = [a2 CGPath];
  [v5 setToValue:v7];

  [v5 setDuration:2.15];
  id v8 = self;
  id v9 = v5;
  id v10 = [v8 functionWithName:kCAMediaTimingFunctionEaseIn];
  [v9 setTimingFunction:v10];

  return v9;
}

id sub_1006E727C()
{
  return sub_1006E6E90();
}

void sub_1006E72A0()
{
}

void sub_1006E72C4(void *a1)
{
  id v2 = v1;
  if ([a1 state] == (id)1 || objc_msgSend(a1, "state") == (id)2)
  {
    NSString v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
    [*(id *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer] setAlpha:1.0];
    if ([a1 state] == (id)1)
    {
      id v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v2;
      CGRect v114 = sub_1006E8968;
      uint64_t v115 = v6;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v111 = 1107296256;
      CGRect v112 = sub_100070394;
      CGRect v113 = &unk_1008D7860;
      id v7 = _Block_copy(&aBlock);
      id v8 = v2;
      swift_release();
      [v5 animateWithDuration:v7 animations:0.1];
      _Block_release(v7);
      id v9 = self;
      [v9 begin];
      [v9 setDisableActions:1];
      LODWORD(v10) = 1050253722;
      [*(id *)&v8[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90] setOpacity:v10];
      LODWORD(v11) = 1050253722;
      [*(id *)&v8[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365] setOpacity:v11];
      [v9 commit];
      id v12 = *(char **)&v8[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
      [v4 setMaskView:v12];
      *(void *)&v12[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedWidth] = 0x4000000000000000;
      [v12 setNeedsLayout];
    }
    [a1 locationInView:v4];
    uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops];
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      int64_t v16 = 0;
      int64_t v17 = 0;
      uint64_t v18 = v14 + 32;
      uint64_t v19 = 0;
      double v20 = 1.79769313e308;
      do
      {
        double v21 = vabdd_f64(v13, *(double *)(v18 + 8 * v17));
        if (v21 < v20) {
          int64_t v16 = v17;
        }
        int64_t v22 = v17 + 1;
        if (v21 < v20) {
          uint64_t v19 = *(void *)(v18 + 8 * v17);
        }
        double v20 = v21;
        ++v17;
      }
      while (v15 != v22);
    }
    else
    {
      int64_t v16 = 0;
      uint64_t v19 = 0;
    }
    sub_1006E22D0(v16);
    if (v23)
    {
      id v24 = sub_1006E28E8(v16);
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
        uint64_t v27 = *(void **)(v26 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
        NSString v28 = String._bridgeToObjectiveC()();
        [v27 setText:v28];

        [*(id *)(v26 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel) setAttributedText:v25];
        swift_bridgeObjectRelease();
        uint64_t v29 = self;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v2;
        CGRect v114 = sub_1006E88F8;
        uint64_t v115 = v30;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v111 = 1107296256;
        CGRect v112 = sub_100070394;
        CGRect v113 = &unk_1008D7810;
        uint64_t v31 = _Block_copy(&aBlock);
        double v32 = v2;
        swift_release();
        [v29 animateWithDuration:v31 animations:0.1];
        _Block_release(v31);

LABEL_23:
        double v45 = COERCE_DOUBLE(sub_1006E2B60(v16));
        if ((v46 & 1) == 0
          && *(void *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint])
        {
          [*(id *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] setConstant:v45 + -5.0];
        }
        uint64_t v47 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
        if (v16 >= 39)
        {
          char v81 = v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
          double v82 = (char *)sub_1005F2334(v81);
          id v83 = *(id *)&v82[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          uint64_t v84 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
          CGFloat v85 = *(void **)&v47[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
          *(void *)&v47[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v83;
          id v86 = v83;

          id v87 = [v47 layer];
          self;
          uint64_t v88 = swift_dynamicCastObjCClass();
          if (!v88)
          {

            goto LABEL_44;
          }
          CGFloat v89 = (void *)v88;
          id v90 = [*(id *)&v47[v84] CGColor];
          [v89 setFillColor:v90];

          CGFloat v91 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
          id v92 = (char *)sub_1005F2334(v81);
          id v93 = *(id *)&v92[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          uint64_t v94 = OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor;
          id v95 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor];
          *(void *)&v91[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor] = v93;
          id v76 = v93;

          id v77 = [v91 layer];
          self;
          uint64_t v96 = swift_dynamicCastObjCClass();
          if (v96)
          {
            double v97 = (void *)v96;
            id v80 = [*(id *)&v91[v94] CGColor];
            [v97 setFillColor:v80];
            goto LABEL_33;
          }
        }
        else
        {
          sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
          Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          Class v49 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
          uint64_t v50 = (objc_class *)type metadata accessor for GradientColors();
          uint64_t v51 = (char *)objc_allocWithZone(v50);
          *(void *)&v51[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
          *(void *)&v51[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v49;
          v109.receiver = v51;
          v109.super_class = v50;
          id v52 = [super init];
          Class v53 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          uint64_t v54 = (objc_class *)type metadata accessor for MetricColors();
          uint64_t v55 = (char *)objc_allocWithZone(v54);
          *(void *)&v55[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v52;
          *(void *)&v55[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v53;
          v108.receiver = v55;
          v108.super_class = v54;
          double v56 = (char *)[super init];
          id v57 = *(id *)&v56[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          uint64_t v58 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
          uint64_t v59 = *(void **)&v47[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
          *(void *)&v47[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v57;
          id v60 = v57;

          id v61 = [v47 layer];
          self;
          uint64_t v62 = swift_dynamicCastObjCClass();
          if (!v62)
          {

            goto LABEL_44;
          }
          uint64_t v63 = (void *)v62;
          id v64 = [*(id *)&v47[v58] CGColor];
          [v63 setFillColor:v64];

          Class v65 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
          Class v66 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          Class v67 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
          uint64_t v68 = (char *)objc_allocWithZone(v50);
          *(void *)&v68[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v66;
          *(void *)&v68[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v67;
          v107.receiver = v68;
          v107.super_class = v50;
          id v69 = [super init];
          Class v70 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          id v71 = (char *)objc_allocWithZone(v54);
          *(void *)&v71[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v69;
          *(void *)&v71[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v70;
          v106.receiver = v71;
          v106.super_class = v54;
          uint64_t v72 = (char *)[v106 init];
          id v73 = *(id *)&v72[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          uint64_t v74 = OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor;
          double v75 = *(void **)&v65[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor];
          *(void *)&v65[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor] = v73;
          id v76 = v73;

          id v77 = [v65 layer];
          self;
          uint64_t v78 = swift_dynamicCastObjCClass();
          if (v78)
          {
            double v79 = (void *)v78;
            id v80 = [*(id *)&v65[v74] CGColor];
            [v79 setFillColor:v80];
LABEL_33:

            double v98 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
            uint64_t v99 = OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX;
            *(void *)&v98[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX] = v19;
            [v98 setNeedsLayout];
            id v100 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint];
            if (v100) {
              [v100 setConstant:*(double *)&v98[v99]];
            }
            id v101 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint];
            if (v101) {
              [v101 setConstant:*(double *)&v98[v99]];
            }
            if ([a1 state] == (id)1)
            {
              [v98 layoutIfNeeded];
              [v2 layoutIfNeeded];
            }
            else
            {
              uint64_t v102 = self;
              uint64_t v103 = swift_allocObject();
              *(void *)(v103 + 16) = v2;
              CGRect v114 = sub_1006E88A8;
              uint64_t v115 = v103;
              long long aBlock = _NSConcreteStackBlock;
              uint64_t v111 = 1107296256;
              CGRect v112 = sub_100070394;
              CGRect v113 = &unk_1008D77C0;
              double v104 = _Block_copy(&aBlock);
              double v105 = v2;
              swift_release();
              [v102 animateWithDuration:v104 animations:0.1];
              _Block_release(v104);
            }
            return;
          }
        }

LABEL_44:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v41 = self;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v2;
    CGRect v114 = sub_1006E88A0;
    uint64_t v115 = v42;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v111 = 1107296256;
    CGRect v112 = sub_100070394;
    CGRect v113 = &unk_1008D7770;
    uint64_t v43 = _Block_copy(&aBlock);
    uint64_t v44 = v2;
    swift_release();
    [v41 animateWithDuration:v43 animations:0.1];
    _Block_release(v43);
    goto LABEL_23;
  }
  if ([a1 state] == (id)3 || objc_msgSend(a1, "state") == (id)4)
  {
    uint64_t v33 = self;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v2;
    CGRect v114 = sub_1006E8898;
    uint64_t v115 = v34;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v111 = 1107296256;
    CGRect v112 = sub_100070394;
    CGRect v113 = &unk_1008D7720;
    uint64_t v35 = _Block_copy(&aBlock);
    uint64_t v36 = v2;
    swift_release();
    [v33 animateWithDuration:v35 animations:0.2];
    _Block_release(v35);
    uint64_t v37 = self;
    [v37 begin];
    [v37 setDisableActions:1];
    LODWORD(v38) = 1.0;
    [*(id *)&v36[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90] setOpacity:v38];
    LODWORD(v39) = 1.0;
    [*(id *)&v36[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365] setOpacity:v39];
    [v37 commit];
    uint64_t v40 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
    [v40 setMaskView:0];
    if (v36[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction] == 1) {
      [v40 setAlpha:0.3];
    }
  }
}

id sub_1006E8064(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter) setAlpha:0.0];
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole);

  return [v2 setAlpha:0.0];
}

uint64_t sub_1006E8214@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = type metadata accessor for Calendar.Component();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  double v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - v17;
  __chkstk_darwin(v19);
  int64_t v22 = (char *)&v31 - v21;
  if ((a1 & 0x8000000000000000) != 0
    || *(void *)(*(void *)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 8) + 16) <= a1)
  {
    goto LABEL_7;
  }
  double v32 = v20;
  Date.init(timeIntervalSinceReferenceDate:)();
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Calendar();
  sub_1000876DC(v23, (uint64_t)qword_100997610);
  uint64_t v24 = v33;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v7, enum case for Calendar.Component.day(_:), v5);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095B890);
LABEL_7:
    uint64_t v25 = type metadata accessor for DateInterval();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v34, 1, 1, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v27(v15, v22, v11);
  v27(v32, v18, v11);
  uint64_t v28 = v34;
  DateInterval.init(start:end:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v18, v11);
  v29(v22, v11);
  uint64_t v30 = type metadata accessor for DateInterval();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
}

id sub_1006E8764(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  if (*(void *)(v2 + 16) <= a1) {
    return 0;
  }
  uint64_t v3 = v2 + 24 * a1;
  if (*(unsigned char *)(v3 + 48)) {
    return 0;
  }
  double v6 = *(double *)(v3 + 32);
  id v7 = sub_10008CC68(byte_100775B50[*(char *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type)]);
  id v4 = [self quantityWithUnit:v7 doubleValue:v6];

  return v4;
}

uint64_t sub_1006E8860()
{
  return swift_deallocObject();
}

id sub_1006E8898()
{
  return sub_1006E8064(*(void *)(v0 + 16));
}

id sub_1006E88A0()
{
  return sub_1006E8900(0.0);
}

id sub_1006E88A8()
{
  uint64_t v1 = *(char **)(v0 + 16);
  [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask] layoutIfNeeded];

  return [v1 layoutIfNeeded];
}

id sub_1006E88F8()
{
  return sub_1006E8900(1.0);
}

id sub_1006E8900(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter) setAlpha:];
  id v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole);

  return [v4 setAlpha:a1];
}

id sub_1006E8968()
{
  uint64_t v1 = *(void *)(v0 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90) setAlpha:0.0];
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365) setAlpha:0.0];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel);

  return [v2 setAlpha:0.3];
}

uint64_t sub_1006E89E8()
{
  return sub_1006E3B8C();
}

id sub_1006E8A24()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1052266988;
  LODWORD(v2) = 1059145646;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_100969B50 = (uint64_t)result;
  return result;
}

id sub_1006E8A78()
{
  id v0 = [objc_allocWithZone((Class)CABasicAnimation) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setKeyPath:v1];

  [v0 setDuration:0.134];
  id v2 = v0;
  [v2 setBeginTime:(double)arc4random_uniform(0x64u) / 100.0];

  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  Class v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setToValue:v4];

  uint64_t v5 = qword_10094B118;
  id v6 = v2;
  if (v5 != -1) {
    swift_once();
  }
  [v6 setTimingFunction:qword_100969B50];

  LODWORD(v7) = 2139095039;
  [v6 setRepeatCount:v7];
  [v6 setAutoreverses:1];
  [v6 setRemovedOnCompletion:0];
  return v6;
}

id sub_1006E8C28()
{
  id v0 = [objc_allocWithZone((Class)CABasicAnimation) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setKeyPath:v1];

  [v0 setDuration:0.128];
  id v2 = v0;
  [v2 setBeginTime:(double)arc4random_uniform(0x64u) / 100.0];

  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  Class v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setToValue:v4];

  uint64_t v5 = qword_10094B118;
  id v6 = v2;
  if (v5 != -1) {
    swift_once();
  }
  [v6 setTimingFunction:qword_100969B50];

  LODWORD(v7) = 2139095039;
  [v6 setRepeatCount:v7];
  [v6 setAutoreverses:1];
  [v6 setRemovedOnCompletion:0];
  return v6;
}

void sub_1006E8DD8(char a1, id a2)
{
  [a2 frame];
  CGRectGetHeight(v16);
  [a2 frame];
  CGRectGetWidth(v17);
  id v14 = [a2 layer];
  if (a1)
  {
    id v4 = sub_1006E8A78();
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setKeyPath:v5];

    [v4 setDuration:0.134];
    NSString v6 = String._bridgeToObjectiveC()();
    [v14 addAnimation:v4 forKey:v6];

    id v7 = sub_1006E8A78();
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setKeyPath:v8];

    [v7 setDuration:0.142];
    NSString v9 = String._bridgeToObjectiveC()();
    [v14 addAnimation:v7 forKey:v9];

    id v10 = sub_1006E8C28();
    NSString v11 = String._bridgeToObjectiveC()();
    [v14 addAnimation:v10 forKey:v11];
  }
  else
  {
    NSString v12 = String._bridgeToObjectiveC()();
    [v14 removeAnimationForKey:v12];

    NSString v13 = String._bridgeToObjectiveC()();
    [v14 removeAnimationForKey:v13];

    NSString v11 = String._bridgeToObjectiveC()();
    [v14 removeAnimationForKey:v11];
  }
}

uint64_t sub_1006E90E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1006E9190()
{
  return swift_release();
}

uint64_t sub_1006E9260@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100969C90);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = static VerticalAlignment.center.getter();
  sub_1006E9538(v2, (uint64_t)v26);
  *(_OWORD *)((char *)&v28[4] + 7) = v26[4];
  *(_OWORD *)((char *)&v28[3] + 7) = v26[3];
  *(_OWORD *)((char *)&v28[7] + 7) = v26[7];
  *(_OWORD *)((char *)&v28[8] + 7) = v26[8];
  *(_OWORD *)((char *)&v28[9] + 7) = v26[9];
  *(void *)((char *)&v28[10] + 7) = v27;
  *(_OWORD *)((char *)&v28[5] + 7) = v26[5];
  *(_OWORD *)((char *)&v28[6] + 7) = v26[6];
  *(_OWORD *)((char *)v28 + 7) = v26[0];
  *(_OWORD *)((char *)&v28[1] + 7) = v26[1];
  *(_OWORD *)((char *)&v28[2] + 7) = v26[2];
  *(_OWORD *)((char *)&v25[7] + 1) = v28[7];
  *(_OWORD *)((char *)&v25[8] + 1) = v28[8];
  *(_OWORD *)((char *)&v25[9] + 1) = v28[9];
  v25[10] = *(_OWORD *)((char *)&v28[9] + 15);
  *(_OWORD *)((char *)&v25[3] + 1) = v28[3];
  *(_OWORD *)((char *)&v25[4] + 1) = v28[4];
  *(_OWORD *)((char *)&v25[5] + 1) = v28[5];
  *(_OWORD *)((char *)&v25[6] + 1) = v28[6];
  *(_OWORD *)((char *)v25 + 1) = v28[0];
  *(_OWORD *)((char *)&v25[1] + 1) = v28[1];
  char v29 = 1;
  long long v24 = (unint64_t)v7;
  LOBYTE(v25[0]) = 1;
  *(_OWORD *)((char *)&v25[2] + 1) = v28[2];
  uint64_t v8 = v2[2];
  swift_getKeyPath();
  *(void *)&v30[0] = v8;
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_1000AFA94(&qword_100969C98);
  sub_1000A132C(&qword_100969CA0, &qword_100969C98);
  View.accessibilityHidden(_:)();
  v30[8] = v25[7];
  v30[9] = v25[8];
  v30[10] = v25[9];
  v30[11] = v25[10];
  v30[4] = v25[3];
  v30[5] = v25[4];
  v30[6] = v25[5];
  v30[7] = v25[6];
  v30[0] = v24;
  v30[1] = v25[0];
  _OWORD v30[2] = v25[1];
  v30[3] = v25[2];
  sub_1006EA25C((uint64_t)v30);
  uint64_t v9 = static Alignment.center.getter();
  uint64_t v11 = v10;
  sub_1006E9998(v2, (uint64_t)&v24);
  long long v22 = v25[0];
  long long v23 = v24;
  long long v20 = v25[2];
  long long v21 = v25[1];
  long long v18 = v25[4];
  long long v19 = v25[3];
  long long v12 = v25[5];
  sub_1006EA2C0((uint64_t)v6, a1);
  uint64_t v13 = a1 + *(int *)(sub_1000AFA94(&qword_100969CA8) + 36);
  long long v14 = v22;
  *(_OWORD *)uint64_t v13 = v23;
  *(_OWORD *)(v13 + 16) = v14;
  long long v15 = v20;
  *(_OWORD *)(v13 + 32) = v21;
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = v18;
  *(_OWORD *)(v13 + 64) = v19;
  *(_OWORD *)(v13 + 80) = v16;
  *(_OWORD *)(v13 + 96) = v12;
  *(void *)(v13 + 112) = v9;
  *(void *)(v13 + 120) = v11;
  return sub_1006EA328((uint64_t)v6);
}

void sub_1006E9538(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    type metadata accessor for DataLinkMonitor();
    sub_1006EA4FC((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    swift_retain();
    uint64_t v4 = (void *)EnvironmentObject.init()();
    uint64_t v32 = v5;
    type metadata accessor for MetricsPublisher();
    sub_1006EA4FC((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    uint64_t v6 = ObservedObject.init(wrappedValue:)();
    uint64_t v30 = v7;
    uint64_t v31 = v6;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v9 = v8;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v11 = v10;
    swift_retain();
    MetricsPublisher.workoutStatePublisher.getter();
    swift_release();
    long long v12 = (void *)EnvironmentObject.init()();
    uint64_t v14 = v13;
    type metadata accessor for WorkoutStatePublisher();
    sub_1006EA4FC(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
    uint64_t v15 = ObservedObject.init(wrappedValue:)();
    uint64_t v17 = v16;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v19 = v18;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v21 = v20;
    uint64_t v22 = a1[2];
    swift_getKeyPath();
    sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v23 = *(unsigned char *)(v22 + 16);
    uint64_t v25 = a1[3];
    uint64_t v24 = a1[4];
    swift_retain();
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v27 = v26;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v32;
    *(void *)(a2 + 16) = v31;
    *(void *)(a2 + 24) = v30;
    *(void *)(a2 + 32) = v9;
    *(void *)(a2 + 40) = v11;
    *(void *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 56) = 1;
    *(void *)(a2 + 64) = v12;
    *(void *)(a2 + 72) = v14;
    *(void *)(a2 + 80) = v15;
    *(void *)(a2 + 88) = v17;
    *(void *)(a2 + 96) = v19;
    *(void *)(a2 + 104) = v21;
    *(void *)(a2 + 112) = 0;
    *(unsigned char *)(a2 + 120) = 1;
    *(unsigned char *)(a2 + 128) = v23;
    *(void *)(a2 + 136) = v25;
    *(void *)(a2 + 144) = v24;
    *(void *)(a2 + 152) = v27;
    *(void *)(a2 + 160) = v28;
    id v29 = v12;
    swift_retain();

    swift_release();
  }
  else
  {
    type metadata accessor for DataLinkMonitor();
    sub_1006EA4FC((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_1006E9998@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[2];
  swift_getKeyPath();
  unsigned __int8 v16 = v4;
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v4 + 17) == 1)
  {
    uint64_t v7 = a1[5];
    uint64_t v6 = a1[6];
    swift_retain();
    State.init(wrappedValue:)();
    uint64_t v8 = v4;
    uint64_t v9 = v17;
    uint64_t result = State.init(wrappedValue:)();
    uint64_t v10 = v16;
    int64x2_t v11 = vdupq_n_s64(0x4055400000000000uLL);
    v11.i64[0] = v17;
    long long v12 = xmmword_100775B80;
    long long v13 = xmmword_100775B90;
    long long v14 = xmmword_100775BA0;
    uint64_t v15 = 0x4043000000000000;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v15 = 0;
    int64x2_t v11 = 0uLL;
    long long v14 = 0uLL;
    long long v13 = 0uLL;
    long long v12 = 0uLL;
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v10;
  *(int64x2_t *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v14;
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v12;
  *(void *)(a2 + 104) = v15;
  return result;
}

uint64_t sub_1006E9B14@<X0>(uint64_t a1@<X8>)
{
  return sub_1006E9260(a1);
}

uint64_t sub_1006E9B58()
{
  swift_getKeyPath();
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1006E9BF8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_1006E9C00()
{
  swift_getKeyPath();
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1006E9CA0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1006EA4FC(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_1006E9D48()
{
  return swift_release();
}

uint64_t sub_1006E9E18(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

uint64_t sub_1006E9E20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp19MirrorControlsState___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1006E9EC0()
{
  return type metadata accessor for MirrorControlsState();
}

uint64_t type metadata accessor for MirrorControlsState()
{
  uint64_t result = qword_100969B88;
  if (!qword_100969B88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006E9F14()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1006E9FB8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

void sub_1006E9FD0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t destroy for MirrorControlsView(id *a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v5;
  id v6 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorControlsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorControlsView()
{
  return &type metadata for MirrorControlsView;
}

uint64_t sub_1006EA240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006EA25C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 88);
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_1006EA2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100969C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006EA328(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100969C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006EA38C()
{
  unint64_t result = qword_100969CB0;
  if (!qword_100969CB0)
  {
    sub_1000A1370(&qword_100969CA8);
    sub_1006EA42C();
    sub_1000A132C(&qword_100969CC0, &qword_100969CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969CB0);
  }
  return result;
}

unint64_t sub_1006EA42C()
{
  unint64_t result = qword_100969CB8;
  if (!qword_100969CB8)
  {
    sub_1000A1370(&qword_100969C90);
    sub_1000A132C(&qword_100969CA0, &qword_100969C98);
    sub_1006EA4FC((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969CB8);
  }
  return result;
}

uint64_t sub_1006EA4FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1006EA544(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    id v6 = (void *)a2[2];
    uint64_t v7 = (void *)a2[3];
    a1[2] = (uint64_t)v6;
    a1[3] = (uint64_t)v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for MetricPlatterConstants();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    id v13 = v6;
    id v14 = v7;
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_1006EA644(uint64_t a1, uint64_t a2)
{
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for MetricPlatterConstants();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1006EA6CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  id v6 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for MetricPlatterConstants();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  id v12 = v5;
  id v13 = v6;
  v11(v8, v9, v10);
  return a1;
}

void *sub_1006EA77C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  id v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = (void *)a2[3];
  uint64_t v10 = (void *)a1[3];
  a1[3] = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_1006EA840(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  id v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_1006EA8BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = (void *)a1[3];
  a1[3] = a2[3];

  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1006EA968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006EA97C);
}

uint64_t sub_1006EA97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterConstants();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1006EAA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006EAA40);
}

uint64_t sub_1006EAA40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricPlatterConstants();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorRaceMetricPlatterView()
{
  uint64_t result = qword_100969D28;
  if (!qword_100969D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006EAB34()
{
  uint64_t result = type metadata accessor for MetricPlatterConstants();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006EABDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006EABF8@<X0>(_OWORD *a1@<X8>)
{
  double v98 = a1;
  uint64_t v2 = type metadata accessor for LocalizationFeature();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RacePosition();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  MetricsPublisher.racePositionStatePublisher.getter();
  swift_release();
  RacePositionStatePublisher.racePosition.getter();
  swift_release();
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for RacePosition.onRoute(_:))
  {
    swift_retain();
    MetricsPublisher.racePositionStatePublisher.getter();
    swift_retain();
    MetricsPublisher.raceInformationPublisher.getter();
    swift_release();
    uint64_t v12 = *(void **)(v1 + 16);
    uint64_t v11 = *(void **)(v1 + 24);
    type metadata accessor for MetricsPublisher();
    sub_1006EBF44((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v13 = v11;
    id v14 = v12;
    uint64_t v15 = ObservedObject.init(wrappedValue:)();
    uint64_t v17 = v16;
    type metadata accessor for RacePositionStatePublisher();
    sub_1006EBF44(&qword_10095E020, (void (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher);
    uint64_t v18 = ObservedObject.init(wrappedValue:)();
    uint64_t v20 = v19;
    type metadata accessor for RaceInformationPublisher();
    sub_1006EBF44(&qword_100969DC0, (void (*)(uint64_t))&type metadata accessor for RaceInformationPublisher);
    uint64_t v21 = ObservedObject.init(wrappedValue:)();
    *(void *)&long long v111 = v15;
    *((void *)&v111 + 1) = v17;
    *(void *)&long long v112 = v18;
    *((void *)&v112 + 1) = v20;
    *(void *)&long long v113 = v21;
    *((void *)&v113 + 1) = v22;
    *(void *)&long long v114 = v13;
    *((void *)&v114 + 1) = v14;
    LOBYTE(v115) = 1;
    sub_1006EBC98();
    sub_1006EBDEC();
    swift_retain();
    swift_retain();
    swift_retain();
    id v23 = v13;
    id v24 = v14;
    _ConditionalContent<>.init(storage:)();
    long long v111 = v105;
    long long v112 = v106;
    long long v113 = v107;
    long long v114 = v108;
    __int16 v115 = v109;
    sub_1000AFA94(&qword_100969D90);
    sub_1000AFA94(&qword_100969DA8);
    sub_1006EBD28();
    sub_1006EBE40();
    _ConditionalContent<>.init(storage:)();
    if (v104) {
      __int16 v25 = 256;
    }
    else {
      __int16 v25 = 0;
    }
    long long v105 = v99;
    long long v106 = v100;
    long long v107 = v101;
    long long v108 = v102;
    __int16 v109 = v25 | v103;
    char v110 = 0;
    sub_1000AFA94(&qword_100969D70);
    sub_1000AFA94(&qword_100969D78);
    sub_1006EBCEC();
    sub_1006EBED0();
    _ConditionalContent<>.init(storage:)();

    swift_release();
LABEL_6:
    swift_release();
    goto LABEL_16;
  }
  int v26 = v10;
  if (v10 == enum case for RacePosition.notYetOnRoute(_:)) {
    goto LABEL_8;
  }
  if (v10 == enum case for RacePosition.offRoute(_:))
  {
    uint64_t v43 = *(void **)(v1 + 16);
    uint64_t v42 = *(void **)(v1 + 24);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    swift_retain();
    id v44 = v42;
    id v45 = v43;
    uint64_t v46 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v48 = v47;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    type metadata accessor for MetricsPublisher();
    sub_1006EBF44((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    uint64_t v49 = ObservedObject.init(wrappedValue:)();
    uint64_t v51 = v50;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(void *)&long long v111 = v49;
    *((void *)&v111 + 1) = v51;
    *(void *)&long long v112 = v44;
    *((void *)&v112 + 1) = v45;
    *(void *)&long long v113 = v46;
    *((void *)&v113 + 1) = v48;
    *(void *)&long long v114 = v52;
    BYTE8(v114) = 0;
    sub_1006EBC98();
    sub_1006EBE7C();
    swift_retain();
    id v38 = v44;
    id v39 = v45;
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v111 = v105;
    long long v112 = v106;
    long long v113 = v107;
    *(void *)&long long v114 = v108;
    *((void *)&v114 + 1) = BYTE8(v108);
    __int16 v115 = 256;
    sub_1000AFA94(&qword_100969D90);
    sub_1000AFA94(&qword_100969DA8);
    sub_1006EBD28();
    sub_1006EBE40();
    _ConditionalContent<>.init(storage:)();
    __int16 v40 = v103;
    if (v104) {
      __int16 v41 = 256;
    }
    else {
      __int16 v41 = 0;
    }
    goto LABEL_15;
  }
  if (v10 == enum case for RacePosition.completed(_:))
  {
    swift_retain();
    MetricsPublisher.racePositionStatePublisher.getter();
    swift_release();
    swift_retain();
    MetricsPublisher.raceInformationPublisher.getter();
    swift_release();
    uint64_t v62 = *(void **)(v1 + 16);
    id v61 = *(void **)(v1 + 24);
    type metadata accessor for RacePositionStatePublisher();
    sub_1006EBF44(&qword_10095E020, (void (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher);
    id v63 = v61;
    id v64 = v62;
    uint64_t v65 = ObservedObject.init(wrappedValue:)();
    uint64_t v67 = v66;
    type metadata accessor for RaceInformationPublisher();
    sub_1006EBF44(&qword_100969DC0, (void (*)(uint64_t))&type metadata accessor for RaceInformationPublisher);
    uint64_t v68 = ObservedObject.init(wrappedValue:)();
    *(void *)&long long v111 = v65;
    *((void *)&v111 + 1) = v67;
    *(void *)&long long v112 = v68;
    *((void *)&v112 + 1) = v69;
    *(void *)&long long v113 = v63;
    *((void *)&v113 + 1) = v64;
    *(void *)&long long v114 = 0;
    BYTE8(v114) = 1;
    sub_1006EBC98();
    sub_1006EBE7C();
    id v70 = v63;
    id v71 = v64;
    swift_retain();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    long long v111 = v105;
    long long v112 = v106;
    long long v113 = v107;
    *(void *)&long long v114 = v108;
    *((void *)&v114 + 1) = BYTE8(v108);
    __int16 v115 = 256;
    sub_1000AFA94(&qword_100969D90);
    sub_1000AFA94(&qword_100969DA8);
    sub_1006EBD28();
    sub_1006EBE40();
    _ConditionalContent<>.init(storage:)();
    if (v104) {
      __int16 v72 = 256;
    }
    else {
      __int16 v72 = 0;
    }
    long long v105 = v99;
    long long v106 = v100;
    long long v107 = v101;
    long long v108 = v102;
    __int16 v109 = v72 | v103;
    char v110 = 0;
    sub_1000AFA94(&qword_100969D70);
    sub_1000AFA94(&qword_100969D78);
    sub_1006EBCEC();
    sub_1006EBED0();
    _ConditionalContent<>.init(storage:)();

    goto LABEL_6;
  }
  if (v10 == enum case for RacePosition.unknown(_:))
  {
LABEL_8:
    uint64_t v28 = *(void **)(v1 + 16);
    uint64_t v27 = *(void **)(v1 + 24);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    swift_retain();
    id v29 = v27;
    id v30 = v28;
    uint64_t v31 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    type metadata accessor for MetricsPublisher();
    sub_1006EBF44((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    uint64_t v34 = ObservedObject.init(wrappedValue:)();
    uint64_t v36 = v35;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(void *)&long long v111 = v34;
    *((void *)&v111 + 1) = v36;
    *(void *)&long long v112 = v29;
    *((void *)&v112 + 1) = v30;
    *(void *)&long long v113 = v31;
    *((void *)&v113 + 1) = v33;
    long long v114 = v37;
    LOBYTE(v115) = 0;
    sub_1006EBC98();
    sub_1006EBDEC();
    swift_retain();
    id v38 = v29;
    id v39 = v30;
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v111 = v105;
    long long v112 = v106;
    long long v113 = v107;
    long long v114 = v108;
    __int16 v115 = v109;
    sub_1000AFA94(&qword_100969D90);
    sub_1000AFA94(&qword_100969DA8);
    sub_1006EBD28();
    sub_1006EBE40();
    _ConditionalContent<>.init(storage:)();
    __int16 v40 = v103;
    if (v104) {
      __int16 v41 = 256;
    }
    else {
      __int16 v41 = 0;
    }
LABEL_15:
    long long v105 = v99;
    long long v106 = v100;
    long long v107 = v101;
    long long v108 = v102;
    __int16 v109 = v41 | v40;
    char v110 = 0;
    sub_1000AFA94(&qword_100969D70);
    sub_1000AFA94(&qword_100969D78);
    sub_1006EBCEC();
    sub_1006EBED0();
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  LODWORD(v97) = enum case for RacePosition.expired(_:);
  uint64_t v74 = *(void **)(v1 + 16);
  id v73 = *(void **)(v1 + 24);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
  swift_retain();
  id v75 = v73;
  id v76 = v74;
  id v77 = (void (**)(char *, uint64_t))(v3 + 8);
  if (v26 != v97)
  {
    *(void *)&long long v97 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v88 = v87;
    (*v77)(v5, v2);
    type metadata accessor for MetricsPublisher();
    sub_1006EBF44((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    uint64_t v89 = ObservedObject.init(wrappedValue:)();
    uint64_t v91 = v90;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(void *)&long long v111 = v89;
    *((void *)&v111 + 1) = v91;
    *(void *)&long long v112 = v75;
    *((void *)&v112 + 1) = v76;
    *(void *)&long long v113 = v97;
    *((void *)&v113 + 1) = v88;
    *(void *)&long long v114 = v92;
    BYTE8(v114) = 1;
    sub_1006EBC98();
    swift_retain();
    *(void *)&long long v97 = v75;
    id v93 = v76;
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v105 = v99;
    long long v106 = v100;
    long long v107 = v101;
    *(void *)&long long v108 = v102;
    *((void *)&v108 + 1) = BYTE8(v102);
    __int16 v109 = 0;
    char v110 = 1;
    sub_1000AFA94(&qword_100969D70);
    sub_1000AFA94(&qword_100969D78);
    sub_1006EBCEC();
    sub_1006EBED0();
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();

    swift_release();
    long long v97 = v111;
    long long v96 = v112;
    long long v95 = v113;
    long long v94 = v114;
    __int16 v58 = v115;
    char v59 = v116;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    long long v57 = v94;
    long long v56 = v95;
    long long v55 = v96;
    long long v54 = v97;
    goto LABEL_17;
  }
  uint64_t v78 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v80 = v79;
  (*v77)(v5, v2);
  type metadata accessor for MetricsPublisher();
  sub_1006EBF44((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
  uint64_t v81 = ObservedObject.init(wrappedValue:)();
  uint64_t v83 = v82;
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(void *)&long long v111 = v81;
  *((void *)&v111 + 1) = v83;
  *(void *)&long long v112 = v75;
  *((void *)&v112 + 1) = v76;
  *(void *)&long long v113 = v78;
  *((void *)&v113 + 1) = v80;
  *(void *)&long long v114 = v84;
  BYTE8(v114) = 0;
  sub_1006EBC98();
  swift_retain();
  id v85 = v75;
  id v86 = v76;
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  long long v105 = v99;
  long long v106 = v100;
  long long v107 = v101;
  *(void *)&long long v108 = v102;
  *((void *)&v108 + 1) = BYTE8(v102);
  __int16 v109 = 0;
  char v110 = 1;
  sub_1000AFA94(&qword_100969D70);
  sub_1000AFA94(&qword_100969D78);
  sub_1006EBCEC();
  sub_1006EBED0();
  _ConditionalContent<>.init(storage:)();
  swift_bridgeObjectRelease();

LABEL_16:
  uint64_t result = swift_release();
  long long v54 = v111;
  long long v55 = v112;
  long long v56 = v113;
  long long v57 = v114;
  __int16 v58 = v115;
  char v59 = v116;
LABEL_17:
  id v60 = v98;
  *double v98 = v54;
  v60[1] = v55;
  v60[2] = v56;
  v60[3] = v57;
  *((_WORD *)v60 + 32) = v58;
  *((unsigned char *)v60 + 66) = v59;
  return result;
}

unint64_t sub_1006EBC98()
{
  unint64_t result = qword_100969D68;
  if (!qword_100969D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969D68);
  }
  return result;
}

uint64_t sub_1006EBCEC()
{
  return sub_1006EBD64(&qword_100969D80, &qword_100969D70, (void (*)(void))sub_1006EBD28, (void (*)(void))sub_1006EBE40);
}

uint64_t sub_1006EBD28()
{
  return sub_1006EBD64(&qword_100969D88, &qword_100969D90, (void (*)(void))sub_1006EBC98, (void (*)(void))sub_1006EBDEC);
}

uint64_t sub_1006EBD64(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006EBDEC()
{
  unint64_t result = qword_100969D98;
  if (!qword_100969D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969D98);
  }
  return result;
}

uint64_t sub_1006EBE40()
{
  return sub_1006EBD64(&qword_100969DA0, &qword_100969DA8, (void (*)(void))sub_1006EBC98, (void (*)(void))sub_1006EBE7C);
}

unint64_t sub_1006EBE7C()
{
  unint64_t result = qword_100969DB0;
  if (!qword_100969DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969DB0);
  }
  return result;
}

unint64_t sub_1006EBED0()
{
  unint64_t result = qword_100969DB8;
  if (!qword_100969DB8)
  {
    sub_1000A1370(&qword_100969D78);
    sub_1006EBC98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969DB8);
  }
  return result;
}

uint64_t sub_1006EBF44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006EBF8C()
{
  return sub_1006EBD64(&qword_100969DC8, &qword_100969DD0, (void (*)(void))sub_1006EBCEC, (void (*)(void))sub_1006EBED0);
}

void sub_1006EBFDC()
{
  double v1 = 64.0;
  if (v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk + 8]) {
    double v1 = 0.0;
  }
  if (*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations]
                 + 16))
    double v2 = v1 + 170.0 + 30.0 + 5.0 + 15.0;
  else {
    double v2 = v1;
  }
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations;
  if (*(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations]
                 + 16))
  {
    id v4 = [v0 collectionView];
    if (!v4)
    {
LABEL_16:
      __break(1u);
      return;
    }
    uint64_t v5 = v4;
    [v4 frame];
    double v7 = v6;

    double v2 = v2 + v7 * 0.25 + 18.0 + 10.0 + 10.0;
  }
  uint64_t v8 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations]
                 + 16);
  if (v8) {
    double v2 = v2 + (double)v8 * 70.0 + 10.0 + 10.0;
  }
  uint64_t v9 = *(void *)(*(void *)&v0[v3] + 16);
  BOOL v10 = __OFADD__(v9, v8);
  uint64_t v11 = v9 + v8;
  if (v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  double v12 = 30.0;
  if (!v11) {
    double v12 = 0.0;
  }
  *(double *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = v2 + v12;
}

id sub_1006EC158()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  id v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  void v9[4] = sub_1006ED420;
  v9[5] = v1;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_10007DAA0;
  v9[3] = &unk_1008D7938;
  uint64_t v3 = _Block_copy(v9);
  id v4 = v0;
  swift_retain();
  id v5 = [v2 initWithSectionProvider:v3];
  _Block_release(v3);
  swift_release();
  type metadata accessor for BackgroundSupplementaryView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v7 = String._bridgeToObjectiveC()();
  [v5 registerClass:ObjCClassFromMetadata forDecorationViewOfKind:v7];
  swift_release();

  return v5;
}

id sub_1006EC2A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v115 = a2;
  uint64_t v5 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  id v114 = *(id *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UICollectionLayoutListConfiguration();
  __chkstk_darwin(v16);
  __n128 v22 = __chkstk_darwin(v17);
  if (a1 > 3)
  {
    __break(1u);
    JUMPOUT(0x1006ED3D8);
  }
  switch(*((unsigned char *)&off_1008B73E0 + a1 + 32))
  {
    case 1:
      if (!*(void *)(*(void *)(a3
                                  + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations)
                      + 16))
        goto LABEL_13;
      uint64_t v36 = self;
      id v37 = [v36 estimatedDimension:222.0];
      id v38 = [v36 estimatedDimension:170.0];
      id v39 = self;
      id v40 = [v39 sizeWithWidthDimension:v37 heightDimension:v38];

      __int16 v41 = self;
      id v114 = v40;
      id v42 = [v41 itemWithLayoutSize:v40];
      uint64_t v43 = self;
      id v113 = (id)sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_100751040;
      *(void *)(v44 + 32) = v42;
      uint64_t v116 = v44;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      *(void *)&long long v115 = v42;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v112 = [v43 horizontalGroupWithLayoutSize:v40 subitems:isa];

      id v46 = [v36 fractionalWidthDimension:1.0];
      id v47 = [v36 absoluteDimension:30.0];
      id v48 = [v39 sizeWithWidthDimension:v46 heightDimension:v47];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v49 = v48;
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v51 = self;
      id v52 = [v51 boundarySupplementaryItemWithLayoutSize:v49 elementKind:v50 alignment:1];

      id v53 = [v36 fractionalWidthDimension:1.0];
      id v54 = [v36 absoluteDimension:0.5];
      id v55 = [v39 sizeWithWidthDimension:v53 heightDimension:v54];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v56 = v55;
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v58 = [v51 boundarySupplementaryItemWithLayoutSize:v56 elementKind:v57 alignment:5];

      char v59 = self;
      id v60 = v112;
      id v25 = [v59 sectionWithGroup:v112];
      [v25 setOrthogonalScrollingBehavior:1];
      [v25 setInterGroupSpacing:10.0];
      [v25 setContentInsets:5.0, 16.0, 15.0, 0.0];
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_100756B20;
      *(void *)(v61 + 32) = v52;
      *(void *)(v61 + 40) = v58;
      uint64_t v116 = v61;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_100958760);
      id v62 = v52;
      id v63 = v58;
      Class v64 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setBoundarySupplementaryItems:v64];

      break;
    case 2:
      if (!*(void *)(*(void *)(a3
                                  + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations)
                      + 16))
        goto LABEL_13;
      objc_msgSend(objc_msgSend((id)v115, "container", v22.n128_f64[0]), "contentSize");
      double v66 = v65;
      swift_unknownObjectRelease();
      double v67 = v66 * 0.25 + 18.0;
      uint64_t v68 = self;
      id v69 = [v68 fractionalWidthDimension:0.25];
      id v70 = [v68 estimatedDimension:v67];
      id v71 = self;
      id v72 = [v71 sizeWithWidthDimension:v69 heightDimension:v70];
      id v114 = v72;

      id v73 = [self itemWithLayoutSize:v72];
      id v74 = [v68 fractionalWidthDimension:1.0];
      id v75 = [v68 estimatedDimension:v67];
      id v76 = [v71 sizeWithWidthDimension:v74 heightDimension:v75];

      id v77 = self;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v78 = swift_allocObject();
      long long v115 = xmmword_100751040;
      *(_OWORD *)(v78 + 16) = xmmword_100751040;
      *(void *)(v78 + 32) = v73;
      uint64_t v116 = v78;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_10095F810);
      id v113 = v73;
      Class v79 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v80 = [v77 horizontalGroupWithLayoutSize:v76 subitems:v79];

      id v25 = [self sectionWithGroup:v80];
      [v25 setOrthogonalScrollingBehavior:0];
      [v25 setContentInsets:5.0, 16.0, 5.0, 16.0];
      id v81 = [v68 fractionalWidthDimension:1.0];
      id v82 = [v68 estimatedDimension:30.0];
      id v83 = [v71 sizeWithWidthDimension:v81 heightDimension:v82];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v84 = v83;
      NSString v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v86 = [self boundarySupplementaryItemWithLayoutSize:v84 elementKind:v85 alignment:1];

      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v115;
      *(void *)(v87 + 32) = v86;
      uint64_t v116 = v87;
      specialized Array._endMutation()();
      sub_10007E2D8(0, (unint64_t *)&unk_100958760);
      id v88 = v86;
      Class v89 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setBoundarySupplementaryItems:v89];

      uint64_t v90 = self;
      NSString v91 = String._bridgeToObjectiveC()();
      id v92 = [v90 backgroundDecorationItemWithElementKind:v91];

      [v92 setContentInsets:35.0, 16.0, 5.0, 16.0];
      uint64_t v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v115;
      *(void *)(v93 + 32) = v92;
      uint64_t v116 = v93;
      specialized Array._endMutation()();
      sub_10007E2D8(0, &qword_100969DE0);
      id v94 = v92;
      Class v95 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setDecorationItems:v95];

      break;
    case 3:
      if (!*(void *)(*(void *)(a3
                                  + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations)
                      + 16))
        goto LABEL_13;
      long long v96 = v20;
      id v113 = v18;
      uint64_t v97 = v12;
      uint64_t v98 = v21;
      (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v15, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v97, v22);
      UICollectionLayoutListConfiguration.init(appearance:)();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICollectionLayoutListConfiguration.FooterMode.none(_:), v8);
      UICollectionLayoutListConfiguration.footerMode.setter();
      (*((void (**)(char *, void, uint64_t))v114 + 13))(v7, enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:), v5);
      UICollectionLayoutListConfiguration.headerMode.setter();
      sub_10007E2D8(0, &qword_100969DD8);
      id v25 = (id)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
      if (!*(void *)(*(void *)(a3
                                  + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations)
                      + 16))
      {
        long long v99 = self;
        uint64_t v100 = v98;
        id v101 = [v99 fractionalWidthDimension:1.0];
        id v102 = [v99 estimatedDimension:30.0];
        id v103 = [self sizeWithWidthDimension:v101 heightDimension:v102];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v104 = v103;
        NSString v105 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v106 = [self boundarySupplementaryItemWithLayoutSize:v104 elementKind:v105 alignment:1];

        sub_1000AFA94((uint64_t *)&unk_10095B850);
        uint64_t v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_100751040;
        *(void *)(v107 + 32) = v106;
        uint64_t v116 = v107;
        specialized Array._endMutation()();
        sub_10007E2D8(0, (unint64_t *)&unk_100958760);
        id v108 = v106;
        Class v109 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v25 setBoundarySupplementaryItems:v109];

        uint64_t v98 = v100;
      }
      [v25 setContentInsets:5.0, 16.0, 5.0, 16.0];
      v96[1](v98, v113);
      break;
    default:
      if ((*(unsigned char *)(a3
                     + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk
                     + 8) & 1) != 0)
      {
LABEL_13:
        id v25 = 0;
      }
      else
      {
        id v23 = *(void (**)(char *, void, uint64_t, __n128))(v13 + 104);
        id v112 = v20;
        id v113 = v18;
        id v24 = (char *)&v111 - v19;
        v23(v15, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v12, v22);
        UICollectionLayoutListConfiguration.init(appearance:)();
        (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICollectionLayoutListConfiguration.FooterMode.none(_:), v8);
        UICollectionLayoutListConfiguration.footerMode.setter();
        (*((void (**)(char *, void, uint64_t))v114 + 13))(v7, enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:), v5);
        UICollectionLayoutListConfiguration.headerMode.setter();
        sub_10007E2D8(0, &qword_100969DD8);
        id v25 = (id)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
        [v25 setContentInsets:10.0, 16.0, 10.0, 0.0];
        int v26 = self;
        id v27 = [v26 fractionalWidthDimension:1.0];
        id v28 = [v26 absoluteDimension:0.5];
        id v29 = [self sizeWithWidthDimension:v27 heightDimension:v28];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v30 = v29;
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = [self boundarySupplementaryItemWithLayoutSize:v30 elementKind:v31 alignment:5];

        sub_1000AFA94((uint64_t *)&unk_10095B850);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_100751040;
        *(void *)(v33 + 32) = v32;
        uint64_t v116 = v33;
        specialized Array._endMutation()();
        sub_10007E2D8(0, (unint64_t *)&unk_100958760);
        id v34 = v32;
        Class v35 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v25 setBoundarySupplementaryItems:v35];

        (*((void (**)(char *, id))v112 + 1))(v24, v113);
      }
      break;
  }
  return v25;
}

uint64_t sub_1006ED3E8()
{
  return swift_deallocObject();
}

id sub_1006ED420(unint64_t a1, uint64_t a2)
{
  return sub_1006EC2A0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1006ED428()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unsigned char *storeEnumTagSinglePayload for TrendsPairedWatchesAltimeterSupport(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006ED52CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsPairedWatchesAltimeterSupport()
{
  return &type metadata for TrendsPairedWatchesAltimeterSupport;
}

unint64_t sub_1006ED568()
{
  unint64_t result = qword_100969EB0;
  if (!qword_100969EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969EB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyLinkView()
{
  return &type metadata for PrivacyLinkView;
}

id sub_1006ED5CC()
{
  uint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 linkWithBundleIdentifier:v1];

  if (v2)
  {
    [v2 setDisplayIcon:0];
    id v3 = [self mainScreen];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v25.origin.CGFloat x = v5;
    v25.origin.CGFloat y = v7;
    v25.size.CGFloat width = v9;
    v25.size.CGFloat height = v11;
    double Width = CGRectGetWidth(v25);
    id v13 = v2;
    id result = [v13 view];
    if (result)
    {
      uint64_t v17 = result;
      LODWORD(v15) = 1148846080;
      LODWORD(v16) = 1112014848;
      [result systemLayoutSizeFittingSize:Width withHorizontalFittingPriority:INFINITY verticalFittingPriority:v15, v16];
      double v19 = v18;
      double v21 = v20;

      [v13 setPreferredContentSize:v19, v21];
      return v13;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    id v22 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    id v23 = objc_allocWithZone((Class)OBPrivacyLinkController);
    return [v23 init];
  }
  return result;
}

id sub_1006ED7C0()
{
  return sub_1006ED5CC();
}

uint64_t sub_1006ED7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006ED924();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1006ED840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006ED924();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1006ED8A4()
{
}

unint64_t sub_1006ED8D0()
{
  unint64_t result = qword_100969EB8;
  if (!qword_100969EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969EB8);
  }
  return result;
}

unint64_t sub_1006ED924()
{
  unint64_t result = qword_100969EC0;
  if (!qword_100969EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100969EC0);
  }
  return result;
}

uint64_t sub_1006ED980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  *(void *)&long long v66 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  uint64_t v9 = Text.init(_:)();
  uint64_t v11 = v10;
  LODWORD(KeyPath) = v12 & 1;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  LODWORD(v65) = enum case for Font.Leading.tight(_:);
  id v13 = *(void (**)(void))(v4 + 104);
  uint64_t v63 = v4 + 104;
  Class v64 = (void (*)(char *, void, uint64_t))v13;
  uint64_t v60 = v3;
  v13(v6);
  char v59 = v6;
  Font.leading(_:)();
  swift_release();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v61 = v4 + 8;
  id v62 = v14;
  v14(v6, v3);
  LOBYTE(v4) = KeyPath;
  uint64_t v15 = Text.font(_:)();
  uint64_t v69 = v16;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  v18 &= 1u;
  sub_1000A06C0(v9, v11, v4);
  swift_bridgeObjectRelease();
  uint64_t v21 = static Alignment.leading.getter();
  uint64_t v57 = v20;
  uint64_t v22 = v69;
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v112, 0.0, 1, 0.0, 1, v21, v23, v15, v69, v18, v57);
  sub_1000A06C0(v15, v22, v18);
  swift_bridgeObjectRelease();
  long long v92 = v118;
  long long v93 = v119;
  long long v94 = v120;
  long long v88 = v114;
  long long v89 = v115;
  long long v90 = v116;
  long long v91 = v117;
  long long v86 = v112;
  long long v87 = v113;
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v82 = 0;
  int v24 = static Edge.Set.all.getter();
  int v68 = v82;
  LODWORD(v69) = v24;
  char v83 = 0;
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  uint64_t v25 = Text.init(_:)();
  uint64_t v27 = v26;
  LOBYTE(v11) = v28 & 1;
  static Font.caption.getter();
  id v30 = v59;
  uint64_t v29 = v60;
  v64(v59, v65, v60);
  Font.leading(_:)();
  swift_release();
  v62(v30, v29);
  uint64_t v31 = Text.font(_:)();
  uint64_t v33 = v32;
  LOBYTE(v30) = v34;
  uint64_t v67 = v35;
  swift_release();
  sub_1000A06C0(v25, v27, v11);
  swift_bridgeObjectRelease();
  LODWORD(v112) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v36 = Text.foregroundStyle<A>(_:)();
  uint64_t v38 = v37;
  uint64_t v65 = v39;
  LOBYTE(v22) = v40 & 1;
  sub_1000A06C0(v31, v33, v30 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v67) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  long long v79 = v92;
  long long v80 = v93;
  long long v81 = v94;
  long long v75 = v88;
  long long v76 = v89;
  long long v77 = v90;
  long long v78 = v91;
  long long v73 = v86;
  long long v74 = v87;
  long long v100 = v92;
  long long v101 = v93;
  long long v102 = v94;
  v72[0] = *(_DWORD *)v85;
  *(_DWORD *)((char *)v72 + 3) = *(_DWORD *)&v85[3];
  v71[0] = *(_DWORD *)v84;
  *(_DWORD *)((char *)v71 + 3) = *(_DWORD *)&v84[3];
  long long v96 = v88;
  long long v97 = v89;
  long long v98 = v90;
  long long v99 = v91;
  v95[0] = v86;
  v95[1] = v87;
  LOBYTE(v30) = v83;
  uint64_t v41 = KeyPath;
  *(void *)&long long v103 = KeyPath;
  *((void *)&v103 + 1) = 4;
  LOBYTE(v33) = v68;
  LOBYTE(v31) = v69;
  LOBYTE(v104) = v68;
  *(_DWORD *)((char *)&v104 + 1) = *(_DWORD *)v85;
  DWORD1(v104) = *(_DWORD *)&v85[3];
  BYTE8(v104) = v69;
  HIDWORD(v104) = *(_DWORD *)&v84[3];
  *(_DWORD *)((char *)&v104 + 9) = *(_DWORD *)v84;
  long long v105 = 0uLL;
  long long v66 = xmmword_1007509B0;
  long long v106 = xmmword_1007509B0;
  char v107 = v83;
  long long v42 = v87;
  *(_OWORD *)a2 = v86;
  *(_OWORD *)(a2 + 16) = v42;
  long long v43 = v96;
  long long v44 = v97;
  long long v45 = v99;
  *(_OWORD *)(a2 + 64) = v98;
  *(_OWORD *)(a2 + 80) = v45;
  *(_OWORD *)(a2 + 32) = v43;
  *(_OWORD *)(a2 + 48) = v44;
  long long v46 = v100;
  long long v47 = v101;
  long long v48 = v103;
  *(_OWORD *)(a2 + 128) = v102;
  *(_OWORD *)(a2 + 144) = v48;
  *(_OWORD *)(a2 + 96) = v46;
  *(_OWORD *)(a2 + 112) = v47;
  long long v49 = v104;
  long long v50 = v105;
  long long v51 = v106;
  *(unsigned char *)(a2 + 208) = (_BYTE)v30;
  *(_OWORD *)(a2 + 176) = v50;
  *(_OWORD *)(a2 + 192) = v51;
  *(_OWORD *)(a2 + 160) = v49;
  char v111 = v22;
  char v108 = 0;
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v110;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v110[3];
  *(_DWORD *)(a2 + 249) = *(_DWORD *)v109;
  *(_DWORD *)(a2 + 252) = *(_DWORD *)&v109[3];
  *(void *)(a2 + 216) = v36;
  *(void *)(a2 + 224) = v38;
  *(unsigned char *)(a2 + 232) = v22;
  *(void *)(a2 + 240) = v65;
  *(unsigned char *)(a2 + 248) = v67;
  *(void *)(a2 + 256) = v52;
  *(void *)(a2 + 264) = v53;
  *(void *)(a2 + 272) = v54;
  *(void *)(a2 + 280) = v55;
  *(unsigned char *)(a2 + 288) = 0;
  sub_1006F100C((uint64_t)v95);
  sub_1000A1750(v36, v38, v22);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v36, v38, v22);
  swift_bridgeObjectRelease();
  long long v118 = v79;
  long long v119 = v80;
  long long v120 = v81;
  long long v114 = v75;
  long long v115 = v76;
  long long v116 = v77;
  long long v117 = v78;
  long long v112 = v73;
  long long v113 = v74;
  uint64_t v121 = v41;
  uint64_t v122 = 4;
  char v123 = v33;
  *(_DWORD *)uint64_t v124 = v72[0];
  *(_DWORD *)&uint64_t v124[3] = *(_DWORD *)((char *)v72 + 3);
  char v125 = v31;
  *(_DWORD *)id v126 = v71[0];
  *(_DWORD *)&v126[3] = *(_DWORD *)((char *)v71 + 3);
  uint64_t v128 = 0;
  uint64_t v127 = 0;
  long long v129 = v66;
  char v130 = (char)v30;
  return sub_1006F1060((uint64_t)&v112);
}

uint64_t sub_1006EDFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for Image.ResizingMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CatalogTipCardView();
  uint64_t v58 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)v70)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3);
    uint64_t v7 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v8 = v73;
    uint64_t v9 = v74;
    uint64_t v10 = v75;
    uint64_t v11 = v76;
    uint64_t v13 = v77;
    uint64_t v12 = v78;
    unsigned __int8 v14 = static Edge.Set.all.getter();
    *(_OWORD *)((char *)v72 + 8) = xmmword_100775F30;
    *(void *)&v72[0] = v7;
    *((void *)&v72[1] + 1) = v8;
    *(void *)&_DWORD v72[2] = v9;
    *((void *)&v72[2] + 1) = v10;
    *(void *)&v72[3] = v11;
    *((void *)&v72[3] + 1) = v13;
    *(void *)&v72[4] = v12;
    *((void *)&v72[4] + 1) = v14;
    v72[5] = 0x4000000000000000uLL;
    *(void *)&v72[6] = 0;
    *((void *)&v72[6] + 1) = 0x4020000000000000;
    LOWORD(v72[7]) = 0;
    swift_retain_n();
    sub_1000AFA94(&qword_100969FD8);
    sub_1000AFA94(&qword_100969FE0);
    sub_1006F10EC(&qword_100969FE8, &qword_100969FD8, (void (*)(void))sub_1006F10BC);
    sub_1006F1228();
    _ConditionalContent<>.init(storage:)();
    swift_release_n();
    swift_release();
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v15 = v73;
    uint64_t v16 = v74;
    uint64_t v17 = v75;
    uint64_t v18 = v76;
    uint64_t v19 = v77;
    uint64_t v20 = v78;
    unsigned __int8 v21 = static Edge.Set.all.getter();
    v72[0] = xmmword_10075E640;
    *(void *)&v72[1] = v15;
    *((void *)&v72[1] + 1) = v16;
    *(void *)&_DWORD v72[2] = v17;
    *((void *)&v72[2] + 1) = v18;
    *(void *)&v72[3] = v19;
    *((void *)&v72[3] + 1) = v20;
    *(void *)&v72[4] = v21;
    *((void *)&v72[4] + 1) = 0x4000000000000000;
    v72[5] = 0uLL;
    v72[6] = xmmword_1007509B0;
    LOWORD(v72[7]) = 256;
    sub_1000AFA94(&qword_100969FD8);
    sub_1000AFA94(&qword_100969FE0);
    sub_1006F10EC(&qword_100969FE8, &qword_100969FD8, (void (*)(void))sub_1006F10BC);
    sub_1006F1228();
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v22 = *(void *)&v70[8];
  uint64_t v61 = *(void *)v70;
  uint64_t v62 = *(void *)&v70[16];
  uint64_t v23 = *(void *)&v70[24];
  uint64_t v24 = *(void *)&v70[32];
  uint64_t v25 = *(void *)&v70[40];
  uint64_t v26 = *(void *)&v70[48];
  uint64_t v27 = *(void *)&v70[56];
  uint64_t v65 = *(void *)&v70[72];
  uint64_t v66 = *(void *)&v70[64];
  uint64_t v63 = *(void *)&v70[88];
  uint64_t v64 = *(void *)&v70[80];
  uint64_t v55 = *(void *)&v70[104];
  uint64_t v56 = *(void *)&v70[96];
  int v54 = v70[112];
  unsigned __int8 v28 = v70[113];
  int v52 = v70[113];
  uint64_t v29 = static HorizontalAlignment.leading.getter();
  uint64_t v53 = v29;
  sub_1006EE5B4(v58, (uint64_t)v67);
  v68[272] = 0;
  memcpy(&v68[7], v67, 0x109uLL);
  LODWORD(v58) = 0;
  v69[0] = v29;
  v69[1] = 0;
  LOBYTE(v69[2]) = 0;
  memcpy((char *)&v69[2] + 1, v68, 0x110uLL);
  unsigned __int8 v71 = v28;
  memcpy(&v70[6], v69, 0x121uLL);
  HIDWORD(v48) = v28;
  uint64_t v30 = v57;
  memcpy((void *)(v57 + 114), v70, 0x127uLL);
  *(void *)uint64_t v30 = v61;
  *(void *)(v30 + 8) = v22;
  uint64_t v50 = v24;
  uint64_t v51 = v22;
  *(void *)(v30 + 16) = v62;
  *(void *)(v30 + 24) = v23;
  *(void *)(v30 + 32) = v24;
  *(void *)(v30 + 40) = v25;
  uint64_t v49 = v25;
  uint64_t v59 = v27;
  uint64_t v60 = v26;
  *(void *)(v30 + 48) = v26;
  *(void *)(v30 + 56) = v27;
  uint64_t v31 = v66;
  *(void *)(v30 + 64) = v66;
  uint64_t v32 = v31;
  uint64_t v66 = v31;
  uint64_t v34 = v64;
  uint64_t v33 = v65;
  *(void *)(v30 + 72) = v65;
  *(void *)(v30 + 80) = v34;
  uint64_t v35 = v33;
  uint64_t v64 = v34;
  uint64_t v65 = v33;
  uint64_t v36 = v63;
  uint64_t v38 = v55;
  uint64_t v37 = v56;
  *(void *)(v30 + 88) = v63;
  *(void *)(v30 + 96) = v37;
  *(void *)(v30 + 104) = v38;
  LOBYTE(v22) = v54;
  *(unsigned char *)(v30 + 112) = v54;
  *(unsigned char *)(v30 + 113) = BYTE4(v48);
  v72[0] = (unint64_t)v53;
  LOBYTE(v72[1]) = v58;
  memcpy((char *)&v72[1] + 1, v68, 0x110uLL);
  LOBYTE(v30) = v52;
  uint64_t v46 = v34;
  uint64_t v47 = v36;
  uint64_t v44 = v32;
  uint64_t v45 = v35;
  uint64_t v39 = v61;
  uint64_t v41 = v50;
  uint64_t v40 = v51;
  uint64_t v42 = v49;
  sub_1006F12C4(v61, v51, v62, v23, v50, v49, v60, v59, v44, v45, v46, v47, v37, v38, v22, v52);
  sub_1006F12D4((uint64_t)v69);
  sub_1006F1364((uint64_t)v72);
  return sub_1006F0FE4(v39, v40, v62, v23, v41, v42, v60, v59, v66, v65, v64, v63, v37, v38, v22, v30);
}

uint64_t sub_1006EE5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v67 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AttributedString();
  __chkstk_darwin(v6 - 8);
  uint64_t v65 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  uint64_t v8 = Text.init(_:)();
  uint64_t v58 = v9;
  uint64_t v68 = v10;
  char v12 = v11 & 1;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  LODWORD(v64) = enum case for Font.Leading.tight(_:);
  uint64_t v62 = *(void (**)(char *))(v3 + 104);
  uint64_t v63 = v3 + 104;
  uint64_t v13 = v67;
  v62(v5);
  uint64_t v60 = v5;
  Font.leading(_:)();
  swift_release();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v61 = v3 + 8;
  v59(v5, v13);
  uint64_t v14 = v58;
  uint64_t v15 = Text.font(_:)();
  uint64_t v56 = v16;
  uint64_t v57 = v15;
  LOBYTE(v13) = v17;
  uint64_t v19 = v18;
  swift_release();
  sub_1000A06C0(v8, v14, v12);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v56;
  uint64_t v21 = v57;
  uint64_t v81 = v57;
  uint64_t v82 = v56;
  char v83 = v13 & 1;
  uint64_t v84 = v19;
  uint64_t v85 = KeyPath;
  uint64_t v86 = 2;
  char v87 = 0;
  static Alignment.leading.getter();
  sub_1004DED7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v118, 0.0, 1, 0.0, 1);
  sub_1000A06C0(v21, v22, v13 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  long long v98 = v126;
  long long v99 = v127;
  uint64_t v100 = v128;
  long long v94 = v122;
  long long v95 = v123;
  long long v96 = v124;
  long long v97 = v125;
  long long v90 = v118;
  long long v91 = v119;
  long long v92 = v120;
  long long v93 = v121;
  LODWORD(v68) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v88 = 0;
  sub_1000402DC((void (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  uint64_t v31 = Text.init(_:)();
  uint64_t v33 = v32;
  LODWORD(v66) = v34 & 1;
  static Font.caption.getter();
  uint64_t v35 = v60;
  uint64_t v36 = v67;
  ((void (*)(char *, void, uint64_t))v62)(v60, v64, v67);
  Font.leading(_:)();
  swift_release();
  v59(v35, v36);
  LOBYTE(v36) = v66;
  uint64_t v37 = Text.font(_:)();
  uint64_t v64 = v38;
  uint64_t v65 = v39;
  LOBYTE(v35) = v40;
  swift_release();
  LOBYTE(v3) = v35 & 1;
  sub_1000A06C0(v31, v33, v36);
  swift_bridgeObjectRelease();
  LODWORD(v118) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v41 = v64;
  uint64_t v66 = Text.foregroundStyle<A>(_:)();
  uint64_t v67 = v42;
  uint64_t v44 = v43;
  LOBYTE(v22) = v45 & 1;
  sub_1000A06C0(v37, v41, v3);
  swift_bridgeObjectRelease();
  uint64_t v46 = swift_getKeyPath();
  long long v78 = v98;
  long long v79 = v99;
  long long v74 = v94;
  long long v75 = v95;
  long long v76 = v96;
  long long v77 = v97;
  long long v70 = v90;
  long long v71 = v91;
  long long v72 = v92;
  long long v73 = v93;
  long long v109 = v98;
  long long v110 = v99;
  long long v105 = v94;
  long long v106 = v95;
  long long v107 = v96;
  long long v108 = v97;
  long long v101 = v90;
  long long v102 = v91;
  uint64_t v80 = v100;
  v69[0] = *(_DWORD *)v89;
  *(_DWORD *)((char *)v69 + 3) = *(_DWORD *)&v89[3];
  *(void *)&long long v111 = v100;
  long long v103 = v92;
  long long v104 = v93;
  LOBYTE(v36) = v88;
  BYTE8(v111) = v68;
  *(_DWORD *)((char *)&v111 + 9) = *(_DWORD *)v89;
  HIDWORD(v111) = *(_DWORD *)&v89[3];
  *(void *)&long long v112 = v24;
  *((void *)&v112 + 1) = v26;
  *(void *)&long long v113 = v28;
  *((void *)&v113 + 1) = v30;
  char v114 = v88;
  *(unsigned char *)(a2 + 208) = v88;
  long long v47 = v108;
  *(_OWORD *)(a2 + 96) = v107;
  *(_OWORD *)(a2 + 112) = v47;
  long long v48 = v110;
  *(_OWORD *)(a2 + 128) = v109;
  *(_OWORD *)(a2 + 144) = v48;
  long long v49 = v104;
  *(_OWORD *)(a2 + 32) = v103;
  *(_OWORD *)(a2 + 48) = v49;
  long long v50 = v106;
  *(_OWORD *)(a2 + 64) = v105;
  *(_OWORD *)(a2 + 80) = v50;
  long long v51 = v102;
  *(_OWORD *)a2 = v101;
  *(_OWORD *)(a2 + 16) = v51;
  *(_OWORD *)(a2 + 192) = v113;
  long long v52 = v112;
  *(_OWORD *)(a2 + 160) = v111;
  *(_OWORD *)(a2 + 176) = v52;
  char v117 = v22;
  char v115 = 0;
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v116;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v116[3];
  uint64_t v53 = v66;
  uint64_t v54 = v67;
  *(void *)(a2 + 216) = v66;
  *(void *)(a2 + 224) = v44;
  *(unsigned char *)(a2 + 232) = v22;
  *(void *)(a2 + 240) = v54;
  *(void *)(a2 + 248) = v46;
  *(void *)(a2 + 256) = 2;
  *(unsigned char *)(a2 + 264) = 0;
  sub_1002942DC((uint64_t)&v101);
  sub_1000A1750(v53, v44, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A06C0(v53, v44, v22);
  swift_release();
  swift_bridgeObjectRelease();
  long long v126 = v78;
  long long v127 = v79;
  uint64_t v128 = v80;
  long long v122 = v74;
  long long v123 = v75;
  long long v124 = v76;
  long long v125 = v77;
  long long v118 = v70;
  long long v119 = v71;
  long long v120 = v72;
  long long v121 = v73;
  char v129 = v68;
  *(_DWORD *)char v130 = v69[0];
  *(_DWORD *)&v130[3] = *(_DWORD *)((char *)v69 + 3);
  uint64_t v131 = v24;
  uint64_t v132 = v26;
  uint64_t v133 = v28;
  uint64_t v134 = v30;
  char v135 = v36;
  return sub_1002943CC((uint64_t)&v118);
}

uint64_t sub_1006EEC08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CatalogTipCardView();
  sub_1000AEF2C(a1 + *(int *)(v2 + 24), (uint64_t)v7, &qword_10094C750);
  if (!v8) {
    return sub_10008DB18((uint64_t)v7, &qword_10094C750);
  }
  uint64_t v3 = (char **)sub_10007E4EC(v7, v8);
  uint64_t v4 = a1 + *(int *)(v2 + 20);
  memset(v6, 0, sizeof(v6));
  sub_1004FCC0C(v4, (uint64_t)v6, *v3);
  sub_10008DB18((uint64_t)v6, &qword_100955A00);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v7);
}

void *sub_1006EECB0(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = v6[5];
    uint64_t v10 = (char *)a1 + v9;
    char v11 = (char *)v3 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for CatalogTipCard();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    sub_100091494(*(void *)v16, v18, v19);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    uint64_t v20 = v13[9];
    uint64_t v21 = &v10[v20];
    uint64_t v22 = &v11[v20];
    uint64_t v23 = type metadata accessor for CatalogTipSection();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_1000AFA94((uint64_t *)&unk_100955650);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      long long v97 = v6;
      long long v98 = v3;
      uint64_t v26 = v23;
      uint64_t v27 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v27;
      uint64_t v28 = v22;
      uint64_t v29 = (void *)*((void *)v22 + 2);
      long long v89 = (void *)v28[3];
      uint64_t v93 = v24;
      *((void *)v21 + 2) = v29;
      *((void *)v21 + 3) = v89;
      *((_WORD *)v21 + 16) = *((_WORD *)v28 + 16);
      uint64_t v94 = v26;
      long long v95 = v28;
      uint64_t v30 = *(int *)(v26 + 36);
      long long v96 = v21;
      uint64_t v31 = &v21[v30];
      uint64_t v32 = (char *)v28 + v30;
      uint64_t v33 = type metadata accessor for ShelfLockupAttributedTagStrings();
      char v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      id v35 = v29;
      id v36 = v89;
      v34(v31, v32, v33);
      uint64_t v37 = (int *)type metadata accessor for CatalogTipSectionItem();
      uint64_t v38 = v37[5];
      uint64_t v39 = &v31[v38];
      long long v90 = &v32[v38];
      uint64_t v40 = type metadata accessor for Artwork();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v85(v39, v90, v40);
      uint64_t v42 = v37[6];
      uint64_t v43 = &v31[v42];
      uint64_t v44 = &v32[v42];
      uint64_t v45 = *((void *)v44 + 1);
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      uint64_t v46 = v37[7];
      long long v47 = &v31[v46];
      long long v48 = &v32[v46];
      uint64_t v49 = *((void *)v48 + 1);
      *(void *)long long v47 = *(void *)v48;
      *((void *)v47 + 1) = v49;
      uint64_t v50 = v37[8];
      char v87 = v31;
      long long v91 = v32;
      long long v51 = &v32[v50];
      long long v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      __dst = &v31[v50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52(v51, 1, v40))
      {
        uint64_t v53 = sub_1000AFA94(&qword_1009512E8);
        memcpy(__dst, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v85(__dst, v51, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
      }
      uint64_t v54 = v37[9];
      uint64_t v55 = &v31[v54];
      uint64_t v56 = &v91[v54];
      uint64_t v57 = *((void *)v56 + 1);
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      uint64_t v58 = v37[10];
      uint64_t v59 = &v31[v58];
      uint64_t v60 = &v91[v58];
      uint64_t v61 = *((void *)v60 + 1);
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v61;
      uint64_t v62 = v37[11];
      uint64_t v63 = &v31[v62];
      uint64_t v64 = &v91[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      uint64_t v66 = v37[12];
      char v88 = &v87[v66];
      long long v92 = &v91[v66];
      uint64_t v67 = type metadata accessor for URL();
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v88, v92, v67);
      uint64_t v69 = *(int *)(v94 + 40);
      long long v70 = (void *)((char *)v96 + v69);
      long long v71 = (void *)((char *)v95 + v69);
      uint64_t v72 = v71[1];
      *long long v70 = *v71;
      v70[1] = v72;
      long long v73 = *(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56);
      swift_bridgeObjectRetain();
      v73(v96, 0, 1, v94);
      uint64_t v6 = v97;
      uint64_t v3 = v98;
    }
    *(void *)&v10[v13[10]] = *(void *)&v11[v13[10]];
    uint64_t v74 = v6[6];
    long long v75 = (char *)a1 + v74;
    long long v76 = (char *)v3 + v74;
    uint64_t v77 = *(void *)((char *)v3 + v74 + 24);
    swift_retain();
    if (v77)
    {
      uint64_t v78 = *((void *)v76 + 4);
      *((void *)v75 + 3) = v77;
      *((void *)v75 + 4) = v78;
      (**(void (***)(char *, char *, uint64_t))(v77 - 8))(v75, v76, v77);
    }
    else
    {
      long long v79 = *((_OWORD *)v76 + 1);
      *(_OWORD *)long long v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v79;
      *((void *)v75 + 4) = *((void *)v76 + 4);
    }
    uint64_t v80 = v6[7];
    uint64_t v81 = (void *)((char *)a1 + v80);
    uint64_t v82 = (void *)((char *)v3 + v80);
    uint64_t v83 = v82[1];
    *uint64_t v81 = *v82;
    v81[1] = v83;
  }
  swift_retain();
  return a1;
}

void *sub_1006EF284(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  int v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_10008DB18(a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v4, v6);
    }
    else
    {
      *int v5 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v143 = a3;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (char *)v4 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  char v11 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_100091494(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  char v20 = v13[16];
  v13[16] = v17;
  sub_1000917F8(v18, v19, v20);
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  uint64_t v21 = v11[9];
  uint64_t v22 = &v8[v21];
  unint64_t v144 = v9;
  uint64_t v23 = &v9[v21];
  uint64_t v24 = type metadata accessor for CatalogTipSection();
  uint64_t v140 = *(void *)(v24 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 48);
  LODWORD(v15) = v25(v22, 1, v24);
  __srCGFloat c = v23;
  uint64_t v142 = v24;
  int v26 = v25(v23, 1, v24);
  if (v15)
  {
    if (!v26)
    {
      objc_super v137 = v11;
      objc_super v138 = v4;
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = *((void *)v23 + 1);
      uint64_t v27 = v22;
      uint64_t v28 = (void *)*((void *)v23 + 2);
      v27[2] = v28;
      uint64_t v29 = (void *)*((void *)v23 + 3);
      v27[3] = v29;
      *((unsigned char *)v27 + 32) = v23[32];
      *((unsigned char *)v27 + 33) = v23[33];
      uint64_t v30 = *(int *)(v24 + 36);
      uint64_t v133 = v5;
      char v135 = v27;
      uint64_t v31 = (char *)v27 + v30;
      uint64_t v32 = &v23[v30];
      uint64_t v33 = type metadata accessor for ShelfLockupAttributedTagStrings();
      char v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      id v35 = v28;
      id v36 = v29;
      v34(v31, v32, v33);
      uint64_t v37 = (int *)type metadata accessor for CatalogTipSectionItem();
      uint64_t v38 = v37[5];
      uint64_t v39 = &v31[v38];
      uint64_t v40 = &v32[v38];
      uint64_t v41 = type metadata accessor for Artwork();
      uint64_t v42 = *(void *)(v41 - 8);
      char v130 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      v130(v39, v40, v41);
      uint64_t v43 = v37[6];
      uint64_t v44 = &v31[v43];
      uint64_t v45 = &v32[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = *((void *)v45 + 1);
      uint64_t v46 = v37[7];
      long long v47 = &v31[v46];
      long long v48 = &v32[v46];
      *(void *)long long v47 = *(void *)v48;
      *((void *)v47 + 1) = *((void *)v48 + 1);
      uint64_t v49 = v37[8];
      __dst = &v31[v49];
      uint64_t v50 = &v32[v49];
      long long v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v51(v50, 1, v41))
      {
        uint64_t v52 = sub_1000AFA94(&qword_1009512E8);
        memcpy(__dst, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v130(__dst, v50, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
      }
      uint64_t v84 = v37[9];
      uint64_t v85 = &v31[v84];
      uint64_t v86 = &v32[v84];
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = *((void *)v86 + 1);
      uint64_t v87 = v37[10];
      char v88 = &v31[v87];
      long long v89 = &v32[v87];
      *(void *)char v88 = *(void *)v89;
      *((void *)v88 + 1) = *((void *)v89 + 1);
      uint64_t v90 = v37[11];
      long long v91 = &v31[v90];
      long long v92 = &v32[v90];
      *(void *)long long v91 = *(void *)v92;
      *((void *)v91 + 1) = *((void *)v92 + 1);
      uint64_t v93 = v37[12];
      uint64_t v94 = &v31[v93];
      long long v95 = &v32[v93];
      uint64_t v96 = type metadata accessor for URL();
      long long v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v97(v94, v95, v96);
      uint64_t v98 = *(int *)(v142 + 40);
      long long v99 = (void *)((char *)v135 + v98);
      uint64_t v100 = &__src[v98];
      *long long v99 = *(void *)v100;
      v99[1] = *((void *)v100 + 1);
      long long v101 = *(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56);
      swift_bridgeObjectRetain();
      v101(v135, 0, 1, v142);
      int v5 = v133;
      uint64_t v4 = v138;
      uint64_t v55 = v143;
      goto LABEL_22;
    }
LABEL_12:
    uint64_t v53 = sub_1000AFA94((uint64_t *)&unk_100955650);
    memcpy(v22, v23, *(void *)(*(void *)(v53 - 8) + 64));
    uint64_t v55 = v143;
    uint64_t v54 = v144;
    goto LABEL_23;
  }
  if (v26)
  {
    sub_1000E9C00((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    goto LABEL_12;
  }
  objc_super v137 = v11;
  objc_super v139 = v4;
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (void *)*((void *)v23 + 2);
  uint64_t v57 = (void *)*((void *)v22 + 2);
  *((void *)v22 + 2) = v56;
  id v58 = v56;

  uint64_t v59 = (void *)*((void *)v23 + 3);
  uint64_t v60 = (void *)*((void *)v22 + 3);
  *((void *)v22 + 3) = v59;
  id v61 = v59;

  v22[32] = v23[32];
  v22[33] = v23[33];
  uint64_t v62 = *(int *)(v24 + 36);
  objc_super v136 = v22;
  uint64_t v63 = &v22[v62];
  uint64_t v64 = &v23[v62];
  uint64_t v65 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = (int *)type metadata accessor for CatalogTipSectionItem();
  uint64_t v67 = v66[5];
  uint64_t v68 = &v63[v67];
  uint64_t v69 = &v64[v67];
  uint64_t v70 = type metadata accessor for Artwork();
  uint64_t v71 = *(void *)(v70 - 8);
  char v129 = *(void (**)(char *, char *, uint64_t))(v71 + 24);
  v129(v68, v69, v70);
  uint64_t v72 = v66[6];
  long long v73 = &v63[v72];
  uint64_t v74 = &v64[v72];
  *(void *)long long v73 = *(void *)v74;
  *((void *)v73 + 1) = *((void *)v74 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v66[7];
  long long v76 = &v63[v75];
  uint64_t v77 = &v64[v75];
  *(void *)long long v76 = *(void *)v77;
  *((void *)v76 + 1) = *((void *)v77 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  objc_super v141 = v66;
  uint64_t v78 = v66[8];
  uint64_t v134 = v64;
  long long v79 = &v64[v78];
  uint64_t v131 = v71;
  uint64_t v80 = v71;
  uint64_t v81 = &v63[v78];
  uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  LODWORD(v68) = v82(&v63[v78], 1, v70);
  int v83 = v82(v79, 1, v70);
  if (!v68)
  {
    if (!v83)
    {
      v129(v81, v79, v70);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v131 + 8))(v81, v70);
    goto LABEL_20;
  }
  if (v83)
  {
LABEL_20:
    uint64_t v102 = sub_1000AFA94(&qword_1009512E8);
    memcpy(v81, v79, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v81, v79, v70);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v81, 0, 1, v70);
LABEL_21:
  uint64_t v4 = v139;
  uint64_t v55 = v143;
  uint64_t v103 = v141[9];
  long long v104 = &v63[v103];
  long long v105 = &v134[v103];
  *(void *)long long v104 = *(void *)v105;
  *((void *)v104 + 1) = *((void *)v105 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v141[10];
  long long v107 = &v63[v106];
  long long v108 = &v134[v106];
  *(void *)long long v107 = *(void *)v108;
  *((void *)v107 + 1) = *((void *)v108 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v141[11];
  long long v110 = &v63[v109];
  long long v111 = &v134[v109];
  *(void *)long long v110 = *(void *)v111;
  *((void *)v110 + 1) = *((void *)v111 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v112 = v141[12];
  long long v113 = &v63[v112];
  char v114 = &v134[v112];
  uint64_t v115 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 24))(v113, v114, v115);
  uint64_t v116 = *(int *)(v24 + 40);
  char v117 = (void *)((char *)v136 + v116);
  long long v118 = &__src[v116];
  *char v117 = *(void *)v118;
  v117[1] = *((void *)v118 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  char v11 = v137;
  uint64_t v54 = v144;
LABEL_23:
  *(void *)&v8[v11[10]] = *(void *)&v54[v11[10]];
  swift_retain();
  swift_release();
  uint64_t v119 = *(int *)(v55 + 24);
  uint64_t v120 = (uint64_t)v5 + v119;
  long long v121 = (char *)v4 + v119;
  uint64_t v122 = *(void *)((char *)v4 + v119 + 24);
  if (!*(void *)((char *)v5 + v119 + 24))
  {
    if (v122)
    {
      *(void *)(v120 + 24) = v122;
      *(void *)(v120 + 32) = *((void *)v121 + 4);
      (**(void (***)(uint64_t, char *))(v122 - 8))(v120, v121);
      goto LABEL_30;
    }
LABEL_29:
    long long v123 = *(_OWORD *)v121;
    long long v124 = *((_OWORD *)v121 + 1);
    *(void *)(v120 + 32) = *((void *)v121 + 4);
    *(_OWORD *)uint64_t v120 = v123;
    *(_OWORD *)(v120 + 16) = v124;
    goto LABEL_30;
  }
  if (!v122)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v120);
    goto LABEL_29;
  }
  sub_10009EDF0((uint64_t *)v120, (uint64_t *)v121);
LABEL_30:
  uint64_t v125 = *(int *)(v55 + 28);
  long long v126 = (void *)((char *)v5 + v125);
  long long v127 = (void *)((char *)v4 + v125);
  *long long v126 = *v127;
  v126[1] = v127[1];
  swift_retain();
  swift_release();
  return v5;
}

char *sub_1006EFC9C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  uint64_t v16 = v12[9];
  char v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = type metadata accessor for CatalogTipSection();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_100955650);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v51 = v20;
    uint64_t v53 = a3;
    uint64_t v54 = a2;
    uint64_t v55 = a1;
    long long v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)char v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    uint64_t v23 = *(int *)(v19 + 36);
    uint64_t v52 = v17;
    uint64_t v24 = &v17[v23];
    uint64_t v25 = &v18[v23];
    uint64_t v26 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    uint64_t v27 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v28 = v27[5];
    long long v47 = &v25[v28];
    __dstCGFloat a = &v24[v28];
    uint64_t v29 = type metadata accessor for Artwork();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v46(__dsta, v47, v29);
    *(_OWORD *)&v24[v27[6]] = *(_OWORD *)&v25[v27[6]];
    *(_OWORD *)&v24[v27[7]] = *(_OWORD *)&v25[v27[7]];
    uint64_t v31 = v27[8];
    uint64_t v48 = v30;
    __dst = &v24[v31];
    uint64_t v32 = &v25[v31];
    uint64_t v33 = v30;
    char v34 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v29))
    {
      uint64_t v35 = sub_1000AFA94(&qword_1009512E8);
      memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v46(__dst, v34, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v29);
    }
    *(_OWORD *)&v24[v27[9]] = *(_OWORD *)&v25[v27[9]];
    *(_OWORD *)&v24[v27[10]] = *(_OWORD *)&v25[v27[10]];
    *(_OWORD *)&v24[v27[11]] = *(_OWORD *)&v25[v27[11]];
    uint64_t v36 = v27[12];
    uint64_t v37 = &v24[v36];
    uint64_t v38 = &v25[v36];
    uint64_t v39 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    *(_OWORD *)((char *)v52 + *(int *)(v19 + 40)) = *(_OWORD *)&v18[*(int *)(v19 + 40)];
    (*(void (**)(void))(v51 + 56))();
    a2 = v54;
    a1 = v55;
    a3 = v53;
  }
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  uint64_t v40 = a3[6];
  uint64_t v41 = a3[7];
  uint64_t v42 = &a1[v40];
  uint64_t v43 = &a2[v40];
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((void *)v42 + 4) = *((void *)v43 + 4);
  *(_OWORD *)&a1[v41] = *(_OWORD *)&a2[v41];
  return a1;
}

char *sub_1006F0120(uint64_t a1, char *a2, int *a3)
{
  uint64_t v4 = a2;
  int v5 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_10008DB18(a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v4, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v4, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v4[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CatalogTipCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  char v16 = v15[16];
  uint64_t v17 = *(void *)v14;
  uint64_t v18 = *((void *)v14 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  char v19 = v14[16];
  v14[16] = v16;
  sub_1000917F8(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  uint64_t v122 = v12;
  uint64_t v20 = v12[9];
  uint64_t v21 = (uint64_t)&v9[v20];
  long long v22 = &v10[v20];
  uint64_t v23 = type metadata accessor for CatalogTipSection();
  uint64_t v120 = *(void *)(v23 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  uint64_t v124 = v21;
  LODWORD(v21) = v24(v21, 1, v23);
  __srCGFloat c = v22;
  uint64_t v121 = v23;
  int v25 = v24((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v25)
    {
      char v114 = a3;
      uint64_t v116 = v4;
      long long v118 = v5;
      long long v28 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v124 = *(_OWORD *)v22;
      *(_OWORD *)(v124 + 16) = v28;
      *(_WORD *)(v124 + 32) = *((_WORD *)v22 + 16);
      uint64_t v29 = *(int *)(v23 + 36);
      uint64_t v30 = v124 + v29;
      uint64_t v31 = &v22[v29];
      uint64_t v32 = type metadata accessor for ShelfLockupAttributedTagStrings();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = (int *)type metadata accessor for CatalogTipSectionItem();
      uint64_t v34 = v33[5];
      uint64_t v35 = v30 + v34;
      __dstCGFloat b = &v31[v34];
      uint64_t v36 = type metadata accessor for Artwork();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
      v38(v35, __dstb, v36);
      *(_OWORD *)(v30 + v33[6]) = *(_OWORD *)&v31[v33[6]];
      *(_OWORD *)(v30 + v33[7]) = *(_OWORD *)&v31[v33[7]];
      uint64_t v39 = v33[8];
      __dst = (void *)(v30 + v39);
      uint64_t v40 = &v31[v39];
      if ((*(unsigned int (**)(void))(v37 + 48))())
      {
        uint64_t v41 = sub_1000AFA94(&qword_1009512E8);
        memcpy(__dst, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v38((uint64_t)__dst, v40, v36);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
      }
      int v5 = v118;
      *(_OWORD *)(v30 + v33[9]) = *(_OWORD *)&v31[v33[9]];
      *(_OWORD *)(v30 + v33[10]) = *(_OWORD *)&v31[v33[10]];
      *(_OWORD *)(v30 + v33[11]) = *(_OWORD *)&v31[v33[11]];
      uint64_t v71 = v33[12];
      uint64_t v72 = v30 + v71;
      long long v73 = &v31[v71];
      uint64_t v74 = type metadata accessor for URL();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      *(_OWORD *)(v124 + *(int *)(v121 + 40)) = *(_OWORD *)&__src[*(int *)(v121 + 40)];
      (*(void (**)(void))(v120 + 56))();
      a3 = v114;
      uint64_t v4 = v116;
      goto LABEL_22;
    }
    size_t v26 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_100955650) - 8) + 64);
    uint64_t v27 = (void *)v124;
    goto LABEL_10;
  }
  if (v25)
  {
    sub_1000E9C00(v124, (uint64_t (*)(void))type metadata accessor for CatalogTipSection);
    size_t v26 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_100955650) - 8) + 64);
    uint64_t v27 = (void *)v124;
LABEL_10:
    memcpy(v27, v22, v26);
    goto LABEL_22;
  }
  uint64_t v115 = a3;
  char v117 = v4;
  uint64_t v119 = v5;
  uint64_t v42 = *((void *)v22 + 1);
  *(void *)uint64_t v124 = *(void *)v22;
  *(void *)(v124 + 8) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void **)(v124 + 16);
  *(void *)(v124 + 16) = *((void *)v22 + 2);

  long long v44 = *(void **)(v124 + 24);
  *(void *)(v124 + 24) = *((void *)v22 + 3);

  *(_WORD *)(v124 + 32) = *((_WORD *)v22 + 16);
  uint64_t v45 = *(int *)(v23 + 36);
  uint64_t v46 = v124 + v45;
  long long v47 = &v22[v45];
  uint64_t v48 = type metadata accessor for ShelfLockupAttributedTagStrings();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = (int *)type metadata accessor for CatalogTipSectionItem();
  uint64_t v50 = v49[5];
  uint64_t v51 = v46 + v50;
  uint64_t v52 = &v47[v50];
  uint64_t v53 = type metadata accessor for Artwork();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v109 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 40);
  v109(v51, v52, v53);
  uint64_t v55 = v49[6];
  uint64_t v56 = (void *)(v46 + v55);
  uint64_t v57 = &v47[v55];
  uint64_t v59 = *(void *)v57;
  uint64_t v58 = *((void *)v57 + 1);
  *uint64_t v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v49[7];
  id v61 = (void *)(v46 + v60);
  uint64_t v62 = &v47[v60];
  uint64_t v64 = *(void *)v62;
  uint64_t v63 = *((void *)v62 + 1);
  *id v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  long long v110 = v49;
  __dstCGFloat a = v47;
  uint64_t v65 = v49[8];
  uint64_t v66 = &v47[v65];
  uint64_t v67 = v54;
  uint64_t v68 = (void *)(v46 + v65);
  uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  LODWORD(v52) = v69(v46 + v65, 1, v53);
  int v70 = v69((uint64_t)v66, 1, v53);
  if (!v52)
  {
    if (!v70)
    {
      v109((uint64_t)v68, v66, v53);
      goto LABEL_21;
    }
    (*(void (**)(void *, uint64_t))(v67 + 8))(v68, v53);
    goto LABEL_20;
  }
  if (v70)
  {
LABEL_20:
    uint64_t v75 = sub_1000AFA94(&qword_1009512E8);
    memcpy(v68, v66, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, char *, uint64_t))(v67 + 32))(v68, v66, v53);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v53);
LABEL_21:
  uint64_t v4 = v117;
  int v5 = v119;
  uint64_t v76 = v110[9];
  uint64_t v77 = (void *)(v46 + v76);
  uint64_t v78 = &__dsta[v76];
  uint64_t v80 = *(void *)v78;
  uint64_t v79 = *((void *)v78 + 1);
  *uint64_t v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  uint64_t v81 = v110[10];
  uint64_t v82 = (void *)(v46 + v81);
  int v83 = &__dsta[v81];
  uint64_t v85 = *(void *)v83;
  uint64_t v84 = *((void *)v83 + 1);
  *uint64_t v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  uint64_t v86 = v110[11];
  uint64_t v87 = (void *)(v46 + v86);
  char v88 = &__dsta[v86];
  uint64_t v90 = *(void *)v88;
  uint64_t v89 = *((void *)v88 + 1);
  *uint64_t v87 = v90;
  v87[1] = v89;
  swift_bridgeObjectRelease();
  uint64_t v91 = v110[12];
  uint64_t v92 = v46 + v91;
  uint64_t v93 = &__dsta[v91];
  uint64_t v94 = type metadata accessor for URL();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v94 - 8) + 40))(v92, v93, v94);
  uint64_t v95 = *(int *)(v121 + 40);
  uint64_t v96 = (void *)(v124 + v95);
  long long v97 = &v22[v95];
  uint64_t v99 = *(void *)v97;
  uint64_t v98 = *((void *)v97 + 1);
  *uint64_t v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  a3 = v115;
LABEL_22:
  *(void *)&v9[v122[10]] = *(void *)&v10[v122[10]];
  swift_release();
  uint64_t v100 = a3[6];
  long long v101 = &v5[v100];
  if (*(void *)&v5[v100 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v5[v100]);
  }
  long long v102 = *(_OWORD *)&v4[v100 + 16];
  *(_OWORD *)long long v101 = *(_OWORD *)&v4[v100];
  *((_OWORD *)v101 + 1) = v102;
  *((void *)v101 + 4) = *(void *)&v4[v100 + 32];
  uint64_t v103 = a3[7];
  long long v104 = &v5[v103];
  long long v105 = &v4[v103];
  uint64_t v107 = *(void *)v105;
  uint64_t v106 = *((void *)v105 + 1);
  *(void *)long long v104 = v107;
  *((void *)v104 + 1) = v106;
  swift_release();
  return v5;
}

uint64_t sub_1006F0988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for CatalogTipCard();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1006F0AA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for CatalogTipCard();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1006F0BBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CatalogTipCardView();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v1 + v4;
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v1 + v4, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + *(int *)(v2 + 20);
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for CatalogTipCard();
  sub_1000917F8(*(void *)(v7 + *(int *)(v9 + 20)), *(void *)(v7 + *(int *)(v9 + 20) + 8), *(unsigned char *)(v7 + *(int *)(v9 + 20) + 16));
  uint64_t v10 = v7 + *(int *)(v9 + 36);
  uint64_t v11 = type metadata accessor for CatalogTipSection();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();

    uint64_t v12 = v10 + *(int *)(v11 + 36);
    uint64_t v13 = type metadata accessor for ShelfLockupAttributedTagStrings();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = (int *)type metadata accessor for CatalogTipSectionItem();
    uint64_t v15 = v12 + v14[5];
    uint64_t v16 = type metadata accessor for Artwork();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v23(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v12 + v14[8];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16)) {
      v23(v18, v16);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v12 + v14[12];
    uint64_t v20 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v21 = v5 + *(int *)(v2 + 24);
  if (*(void *)(v21 + 24)) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v21);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F0F84()
{
  uint64_t v1 = *(void *)(type metadata accessor for CatalogTipCardView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1006EEC08(v2);
}

uint64_t sub_1006F0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if ((a16 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1006F0FF4(uint64_t result)
{
  *(unsigned char *)(result + 521) = 0;
  return result;
}

uint64_t sub_1006F0FFC(uint64_t result)
{
  *(unsigned char *)(result + 522) = 0;
  return result;
}

uint64_t sub_1006F100C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006F1060(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006F10BC()
{
  return sub_1006F10EC(&qword_100969FF0, &qword_100969FF8, (void (*)(void))sub_1006F1168);
}

uint64_t sub_1006F10EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006F1168()
{
  unint64_t result = qword_10096A000;
  if (!qword_10096A000)
  {
    sub_1000A1370(&qword_10096A008);
    sub_1002190D0((unint64_t *)&qword_1009539F8, &qword_100953A00);
    sub_1000A132C(&qword_10096A010, &qword_10096A018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A000);
  }
  return result;
}

unint64_t sub_1006F1228()
{
  unint64_t result = qword_10096A020;
  if (!qword_10096A020)
  {
    sub_1000A1370(&qword_100969FE0);
    sub_1002190D0((unint64_t *)&qword_100950408, &qword_1009503E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A020);
  }
  return result;
}

uint64_t sub_1006F12C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if ((a16 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1006F12D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 240);
  uint64_t v3 = *(void *)(a1 + 248);
  char v4 = *(unsigned char *)(a1 + 256);
  sub_1000A1750(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1006F1364(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 240);
  uint64_t v3 = *(void *)(a1 + 248);
  char v4 = *(unsigned char *)(a1 + 256);
  sub_1000A06C0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006F1400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for UnitsSettingsItemView() + 44);
  uint64_t v7 = type metadata accessor for Binding();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t type metadata accessor for UnitsSettingsItemView()
{
  return sub_100049E84();
}

uint64_t sub_1006F14F0()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for Binding();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_1006F15D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~(v8 | 7);
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + 16) & ~v8) + v7 + (((v8 | 7) + v7) & ~(v8 | 7uLL)) > 0x18)
  {
    uint64_t v12 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v12 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v13 = ~v8;
    uint64_t v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v14(a1, a2, v5);
    uint64_t v15 = (void *)(((unint64_t)a2 + v7 + 7) & v9);
    uint64_t v16 = (void *)(((unint64_t)v4 + v7 + 7) & v9);
    void *v16 = *v15;
    uint64_t v17 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    uint64_t v19 = v8 + 8;
    uint64_t v20 = ((unint64_t)v17 + v8 + 8) & ~v8;
    unint64_t v21 = ((unint64_t)v18 + v19) & v13;
    swift_retain();
    swift_retain();
    v14((uint64_t *)v20, (uint64_t *)v21, v5);
  }
  return v4;
}

uint64_t sub_1006F173C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v9(a1, v3);
  unint64_t v5 = *(void *)(v4 + 64) + a1;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v5 + (v6 | 7)) & ~(v6 | 7);
  swift_release();
  swift_release();

  return v9((v6 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v3);
}

uint64_t sub_1006F1804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + *(void *)(v6 + 64);
  uint64_t v10 = v9 + a1;
  uint64_t v11 = (void *)((v9 + a2) & ~(v8 | 7));
  uint64_t v12 = (void *)(v10 & ~(v8 | 7));
  void *v12 = *v11;
  uint64_t v13 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  uint64_t v15 = ((unint64_t)v13 + v8 + 8) & ~v8;
  uint64_t v16 = ((unint64_t)v14 + v8 + 8) & ~v8;
  swift_retain();
  swift_retain();
  v7(v15, v16, v5);
  return a1;
}

unint64_t sub_1006F18E4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + *(void *)(v6 + 64);
  uint64_t v10 = (void *)((v9 + a1) & ~(v8 | 7));
  uint64_t v11 = (void *)((v9 + a2) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  swift_retain();
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  swift_retain();
  swift_release();
  v7(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v5);
  return a1;
}

unint64_t sub_1006F19D0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + *(void *)(v6 + 64);
  unint64_t v10 = v9 + a1;
  uint64_t v11 = (void *)((v9 + a2) & ~(v8 | 7));
  uint64_t v12 = (void *)(v10 & ~(v8 | 7));
  void *v12 = *v11;
  uint64_t v13 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  v7(((unint64_t)v13 + v8 + 8) & ~v8, ((unint64_t)v14 + v8 + 8) & ~v8, v5);
  return a1;
}

unint64_t sub_1006F1A94(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + *(void *)(v6 + 64);
  unint64_t v10 = (void *)((v9 + a1) & ~(v8 | 7));
  uint64_t v11 = (void *)((v9 + a2) & ~(v8 | 7));
  *unint64_t v10 = *v11;
  swift_release();
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  swift_release();
  v7(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v5);
  return a1;
}

uint64_t sub_1006F1B70(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + v6;
  int v11 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v12 = ((v8 + 16) & ~v8) + v6 + (v10 & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v16 < 2)
    {
LABEL_23:
      if (v5 >= 0x7FFFFFFF) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      unint64_t v18 = *(void *)(((((unint64_t)a1 + v10) & ~v9) + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v18 >= 0xFFFFFFFF) {
        LODWORD(v18) = -1;
      }
      return (v18 + 1);
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_23;
  }
LABEL_15:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v12 | v17) + 1;
}

void sub_1006F1D2C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (v10 | 7) + v9;
  size_t v12 = ((v10 + 16) & ~v10) + v9 + (v11 & ~(v10 | 7));
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v12 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v12 < 4)
    {
      int v17 = (v16 >> (8 * v12)) + 1;
      if (v12)
      {
        int v19 = v16 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1006F1FA8);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v21 = (void *)((((unint64_t)&a1[v11] & ~(v10 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v22 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v22 = a2 - 1;
          }
          *unint64_t v21 = v22;
        }
        else
        {
          uint64_t v20 = *(void (**)(void))(v6 + 56);
          v20();
        }
      }
      return;
  }
}

uint64_t sub_1006F1FD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006F201C()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_1006F2058@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_1000AFA94(&qword_10096A0B0);
  return sub_1006F20B8(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1006F20B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095FCD0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned int v7 = (char *)&v19[-1] - v6;
  unsigned int v8 = (void *)type metadata accessor for UnitsSettingsItemView();
  sub_1006F225C(v8, (uint64_t)v7);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (sub_1006F24C4((uint64_t)v8))
  {
    sub_1006F25C0(v19);
    uint64_t v9 = v19[0];
    uint64_t v10 = v19[1];
    uint64_t v11 = v19[2];
    uint64_t v12 = v19[3];
    uint64_t v13 = v19[4];
  }
  sub_1006F26B8((uint64_t)v7, (uint64_t)v4);
  sub_1006F26B8((uint64_t)v4, a1);
  uint64_t v14 = sub_1000AFA94(&qword_10096A0B8);
  uint64_t v15 = a1 + *(int *)(v14 + 48);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  unsigned int v16 = (uint64_t *)(a1 + *(int *)(v14 + 64));
  uint64_t *v16 = v9;
  v16[1] = v10;
  void v16[2] = v11;
  void v16[3] = v12;
  unsigned char v16[4] = v13;
  sub_1006F2720(v9);
  sub_1006F2790((uint64_t)v7);
  sub_1006F27F0(v9);
  return sub_1006F2790((uint64_t)v4);
}

uint64_t sub_1006F225C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = *(a1 - 1);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v28 = sub_1000AFA94(&qword_10094E150);
  uint64_t v6 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unsigned int v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[4];
  dispatch thunk of Identifiable.id.getter();
  uint64_t v11 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v26 = v12;
  uint64_t v27 = v11;
  v24[1] = v13;
  uint64_t v25 = v14;
  (*(void (**)(char *, uint64_t, void *))(v4 + 16))((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unsigned int v16 = (char *)swift_allocObject();
  uint64_t v17 = a1[3];
  *((void *)v16 + 2) = v9;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = v10;
  (*(void (**)(char *, char *, void *))(v4 + 32))(&v16[v15], (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  Button<>.init(_:action:)();
  uint64_t v18 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v29, v8, v28);
  uint64_t v22 = (uint64_t *)(v20 + *(int *)(sub_1000AFA94(&qword_10095FCD0) + 36));
  *uint64_t v22 = KeyPath;
  v22[1] = v18;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v21);
}

uint64_t sub_1006F24C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Binding();
  Binding.wrappedValue.getter();
  char v5 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

void sub_1006F25C0(uint64_t *a1@<X8>)
{
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  uint64_t v2 = Font.weight(_:)();
  swift_release();
  id v3 = [self keyColors];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 nonGradientTextColor];

    if (v5)
    {
      uint64_t v6 = Color.init(uiColor:)();
      uint64_t v7 = Image.init(systemName:)();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v9 = swift_getKeyPath();
      *a1 = v7;
      a1[1] = KeyPath;
      a1[2] = v2;
      a1[3] = v9;
      a1[4] = v6;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1006F26B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095FCD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006F2720(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1006F2790(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095FCD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006F27F0(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006F286C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for UnitsSettingsItemView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v4(v3, v1);
  uint64_t v5 = v3 + v2[13];
  swift_release();
  swift_release();
  uint64_t v6 = type metadata accessor for Binding();
  v4(v5 + *(int *)(v6 + 32), v1);

  return swift_deallocObject();
}

uint64_t sub_1006F2998()
{
  uint64_t v1 = type metadata accessor for UnitsSettingsItemView();
  return sub_1006F2A08(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
}

uint64_t sub_1006F2A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  __n128 v3 = __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  type metadata accessor for Binding();
  return Binding.wrappedValue.setter();
}

unint64_t sub_1006F2AE4()
{
  unint64_t result = qword_10096A0C0;
  if (!qword_10096A0C0)
  {
    sub_1000A1370(&qword_10096A0C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A0C0);
  }
  return result;
}

uint64_t sub_1006F2B40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1006F2BB4(id *a1)
{
  id v1 = *a1;
  Image.init(uiImage:)();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1006F2C3C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp21TipArtworkImageLoader__image;
  uint64_t v2 = sub_1000AFA94(&qword_100960970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1006F2CE0()
{
  return type metadata accessor for TipArtworkImageLoader();
}

uint64_t sub_1006F2CE8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1006F2D6C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1006F2DEC(id *a1)
{
  return sub_1006F2BB4(a1);
}

uint64_t sub_1006F2E08()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F2E40()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094F3C8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F2EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94(&qword_10094F3C8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10048B8D0(a1, a2, v7, v9, v10);
}

uint64_t sub_1006F2FA0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

id sub_1006F2FE0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for WorkoutDetailAnalyticsTracker()) init];
  qword_100998900 = (uint64_t)result;
  return result;
}

void sub_1006F312C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(v2 + 56) + 8 * v10);
    sub_1006F3D38();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    *uint64_t v1 = (uint64_t)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_1006F33AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  int64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  void v7[3] = a2;
  v7[4] = a3;
  void v9[4] = sub_1006F4280;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_1006F34A8;
  v9[3] = &unk_1008D7C08;
  int64_t v8 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);
}

Class sub_1006F34A8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_1006F359C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  unint64_t v13 = (char *)&v25 - v12;
  if (a2)
  {
    id v14 = a2;
    id v15 = [v14 UUID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v16 = [a1 UUID:v11];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  objc_allocWithZone((Class)type metadata accessor for WorkoutDetailAnalyticsEventBuilder());
  id v17 = v14;
  id v18 = a1;
  id v19 = sub_10046160C((uint64_t)v18, a2);

  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess();
  if (v19)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    sub_1004F0B14((uint64_t)v19, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v20 = v25;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v9, v6);
  }
  else
  {
    uint64_t v23 = (void *)sub_1005DBE98((uint64_t)v9);
    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v9, v6);
  }
  swift_endAccess();
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, v6);
}

uint64_t sub_1006F3888(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  unint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    id v10 = a2;
    id v11 = [v10 UUID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v11 = [a1 UUID:v7];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }

  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (*(void *)(*v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_10008F618((uint64_t)v9);
    if (v15)
    {
      id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRelease();
      sub_1006F3D38();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  id v17 = (void *)sub_1005DBE98((uint64_t)v9);
  swift_endAccess();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

void *sub_1006F3ACC(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v10 = a2;
    id v11 = [v10 UUID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v11 = [a1 UUID:v7];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }

  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_10008F618((uint64_t)v9);
    if (v15)
    {
      id v16 = *(void **)(*(void *)(v13 + 56) + 8 * v14);
      id v17 = v16;
    }
    else
    {
      id v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v16;
}

id sub_1006F3CD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAnalyticsTracker();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailAnalyticsTracker()
{
  return self;
}

void sub_1006F3D38()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void (***)(char *, uint64_t))(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedConnection];
  if (v10
    && (v11 = v10, unsigned int v12 = [v10 isHealthDataSubmissionAllowed], v11, v12))
  {
    uint64_t v13 = sub_100460E84();
    if (v13)
    {
      uint64_t v14 = v13;
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.utility(_:), v6);
      char v15 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      id v16 = (void *)swift_allocObject();
      void v16[2] = 0xD000000000000029;
      void v16[3] = 0x80000001007C9550;
      unsigned char v16[4] = v14;
      aBlock[4] = (uint64_t)sub_1006F4270;
      aBlock[5] = (uint64_t)v16;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100070394;
      void aBlock[3] = (uint64_t)&unk_1008D7BB8;
      id v17 = _Block_copy(aBlock);
      static DispatchQoS.unspecified.getter();
      uint64_t v28 = _swiftEmptyArrayStorage;
      sub_100075B54();
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v17);

      v26[1](v2, v0);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v26 = (void (**)(char *, uint64_t))HKLogWorkouts;
      os_log(_:dso:log:_:_:)();
      uint64_t v23 = v26;
    }
  }
  else
  {
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    uint64_t v19 = (void *)HKLogWorkouts;
    os_log_type_t v20 = v18;
    if (os_log_type_enabled(HKLogWorkouts, v18))
    {
      uint64_t v21 = v19;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v28 = (void *)sub_10008F1F4(0xD000000000000029, 0x80000001007C9550, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "[Core Analytics] Health data submission not allowed. Not sending analytics. eventName=%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_1006F4270()
{
  sub_1006F33AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1006F4280()
{
  sub_1006F42B0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));

  return swift_bridgeObjectRetain();
}

uint64_t sub_1006F42B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  uint64_t v7 = (void *)HKLogWorkouts;
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(HKLogWorkouts, v6))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v9 = v7;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    sub_10008F1F4(a1, a2, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
    swift_bridgeObjectRetain();
    uint64_t v11 = Dictionary.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_10008F1F4(v11, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "[Core Analytics] Sent analytics. eventName=%s event=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  return a3;
}

void sub_1006F4538()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player;
  if (!*(void *)&v1[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player]
    && !*(void *)&v1[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer])
  {
    uint64_t v32 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer;
    uint64_t v33 = v9;
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v14 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v15 = String._bridgeToObjectiveC()();
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v14 URLForResource:v15 withExtension:v16];

    if (v17)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = v33;
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
      v19(v4, v7, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v4, 1, v5) != 1)
      {
        v19(v11, v4, v5);
        URL._bridgeToObjectiveC()(v20);
        uint64_t v22 = v21;
        id v23 = [self assetWithURL:v21];

        id v24 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v23];
        id v25 = [objc_allocWithZone((Class)AVPlayer) init];
        [v25 _setParticipatesInAudioSession:0];
        [v25 setPreventsDisplaySleepDuringVideoPlayback:0];
        [v25 setAllowsExternalPlayback:0];
        [v25 replaceCurrentItemWithPlayerItem:v24];
        id v26 = [self playerLayerWithPlayer:v25];
        uint64_t v27 = *(void **)&v1[v12];
        *(void *)&v1[v12] = v25;
        id v28 = v25;

        uint64_t v29 = *(void **)&v1[v32];
        *(void *)&v1[v32] = v26;
        id v30 = v26;

        id v31 = [v1 layer];
        [v31 addSublayer:v30];

        (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v5);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v4, 1, 1, v5);
    }
    sub_1001C8AF0((uint64_t)v4);
  }
}

void sub_1006F495C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player);
  if (v2) {
    [v2 replaceCurrentItemWithPlayerItem:0];
  }
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer);
  if (v4)
  {
    [v4 setPlayer:0];
    uint64_t v5 = *(void **)(v0 + v3);
    if (v5) {
      [v5 removeFromSuperlayer];
    }
  }
  uint64_t v6 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v7 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;
}

id sub_1006F4C3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingVideoView();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySetupThreeRingsOnboardingVideoView()
{
  return self;
}

uint64_t sub_1006F4CE0()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998908 = v1;
  return result;
}

uint64_t *sub_1006F4D1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (uint64_t *)((char *)v4 + v9);
    id v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1006F4E08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1006F4E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1006F4F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1006F4FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1006F5074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1006F5118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F512C);
}

uint64_t sub_1006F512C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1006F51EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F5200);
}

uint64_t sub_1006F5200(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AnimatingOpenGoalTimeRing()
{
  uint64_t result = qword_10096A278;
  if (!qword_10096A278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006F5308()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006F53AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006F53C8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ElapsedTimeFormatter();
  uint64_t v8 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for AnimatingOpenGoalTimeRing() + 24));
  sub_1000AFA94(&qword_1009518B8);
  TimelineView.Context.date.getter();
  v8(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Double.smoothedForDisplay.getter();
  uint64_t v9 = static ElapsedTimeFormatter.stringFromElapsedTime(_:trimDoubleLeadingZero:compactHours:)();
  uint64_t v11 = v10;
  *a2 = static Alignment.center.getter();
  a2[1] = v12;
  uint64_t v13 = sub_1000AFA94(&qword_10096A2C8);
  sub_1006F5554(a1, v9, v11, (double *)((char *)a2 + *(int *)(v13 + 44)));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006F5554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>)
{
  void v35[2] = a2;
  v35[3] = a3;
  uint64_t v41 = a4;
  uint64_t v5 = type metadata accessor for MetricText();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_1009518E0);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000AFA94(&qword_10096A2D0);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v40 = (uint64_t)v35 - v13;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(type metadata accessor for AnimatingOpenGoalTimeRing() + 24);
  v35[1] = a1;
  uint64_t v19 = *(double (**)(char *))(a1 + v18);
  sub_1000AFA94(&qword_1009518B8);
  TimelineView.Context.date.getter();
  double v20 = v19(v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  _HKWorkoutGoalType.color.getter();
  Color.init(_:)();
  uint64_t v21 = Color.opacity(_:)();
  swift_release();
  _HKWorkoutGoalType.color.getter();
  uint64_t v22 = Color.init(_:)();
  if (qword_10094B128 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_100998908;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MetricText.init(value:unit:description:stale:includesSlashes:)();
  if (qword_10094A5C8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v9, v7, v39);
  id v26 = &v9[*(int *)(v36 + 36)];
  long long v27 = v43;
  *(_OWORD *)id v26 = v42;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v44;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v24);
  _HKWorkoutGoalType.color.getter();
  uint64_t v28 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v11, &qword_1009518E0);
  id v30 = (uint64_t *)&v11[*(int *)(v37 + 36)];
  uint64_t *v30 = KeyPath;
  v30[1] = v28;
  sub_10008DB18((uint64_t)v9, &qword_1009518E0);
  uint64_t v31 = v40;
  sub_1006F6730((uint64_t)v11, v40);
  sub_1000AEF2C(v31, (uint64_t)v11, &qword_10096A2D0);
  uint64_t v32 = v41;
  *uint64_t v41 = v20 / 60.0;
  *((void *)v32 + 1) = v21;
  *((void *)v32 + 2) = v22;
  *((void *)v32 + 3) = v23;
  uint64_t v33 = sub_1000AFA94(&qword_10096A2D8);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v32 + *(int *)(v33 + 48), &qword_10096A2D0);
  swift_retain();
  swift_retain();
  sub_10008DB18(v31, &qword_10096A2D0);
  sub_10008DB18((uint64_t)v11, &qword_10096A2D0);
  swift_release();
  return swift_release();
}

uint64_t sub_1006F5A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v21[1] = a2;
  v21[0] = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v21[0] + 64);
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PeriodicTimelineSchedule();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v3, v5, v14);
  PeriodicTimelineSchedule.init(from:by:)();
  sub_1006F5D20(v3, (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v21[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21[0] + 80);
  uint64_t v18 = swift_allocObject();
  sub_1006F5E88((uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1006F5EEC;
  *(void *)(v19 + 24) = v18;
  sub_1000AFA94(&qword_10096A2B8);
  sub_1006F66D0();
  sub_1000A132C(&qword_10096A2C0, &qword_10096A2B8);
  TimelineView<>.init(_:content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_1006F5D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnimatingOpenGoalTimeRing();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006F5D84()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AnimatingOpenGoalTimeRing() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F5E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnimatingOpenGoalTimeRing();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006F5EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AnimatingOpenGoalTimeRing() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1006F53C8(v4, a1);
}

void *sub_1006F5F6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  sub_1006F6040(a1, a2, (uint64_t)v10);
  *a3 = v6;
  a3[1] = v8;
  return memcpy(a3 + 2, v10, 0x190uLL);
}

uint64_t sub_1006F6040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  Path.init(_:)();
  uint64_t v61 = v98;
  uint64_t v62 = v97;
  uint64_t v57 = v100;
  uint64_t v58 = v99;
  unsigned __int8 v60 = v101;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v52 = v103;
  uint64_t v53 = v102;
  uint64_t v59 = v105;
  uint64_t v50 = v106;
  uint64_t v51 = v104;
  sub_1000AFA94((uint64_t *)&unk_100959030);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10074E640;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  v75[0] = v6;
  specialized Array._endMutation()();
  swift_retain();
  swift_retain();
  Gradient.init(colors:)();
  AngularGradient.init(gradient:center:startAngle:endAngle:)();
  uint64_t v44 = v107;
  uint64_t v48 = v109;
  uint64_t v49 = v108;
  uint64_t v46 = v111;
  uint64_t v47 = v110;
  Path.init(_:)();
  uint64_t v42 = v113;
  uint64_t v43 = v112;
  uint64_t v55 = v115;
  uint64_t v56 = v114;
  unsigned __int8 v54 = v116;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v7 = v117;
  uint64_t v8 = v118;
  uint64_t v9 = v119;
  uint64_t v41 = v120;
  uint64_t v45 = v121;
  swift_retain();
  uint64_t v40 = static HorizontalAlignment.center.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v10 = v123;
  char v11 = v125;
  uint64_t v37 = v126;
  uint64_t v38 = v124;
  uint64_t v39 = v127;
  LOBYTE(a1) = static Edge.Set.top.getter();
  char v12 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != a1) {
    char v12 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v21 = v128;
  char v22 = v129;
  uint64_t v23 = v130;
  char v24 = v131;
  long long v25 = v132;
  long long v63 = (unint64_t)v40;
  LOBYTE(v64) = 1;
  uint64_t v26 = v122;
  *((void *)&v64 + 1) = v122;
  LOBYTE(v65) = v123;
  *((void *)&v65 + 1) = v124;
  LOBYTE(v66) = v125;
  *((void *)&v66 + 1) = v126;
  *(void *)&long long v67 = v127;
  BYTE8(v67) = v12;
  *(void *)&long long v68 = v14;
  *((void *)&v68 + 1) = v16;
  *(void *)&long long v69 = v18;
  *((void *)&v69 + 1) = v20;
  LOBYTE(v70) = 0;
  *((void *)&v70 + 1) = a2;
  *(void *)&long long v71 = 0;
  BYTE8(v71) = 1;
  *(void *)&long long v72 = v128;
  BYTE8(v72) = v129;
  *(void *)&long long v73 = v130;
  BYTE8(v73) = v131;
  long long v74 = v132;
  long long v27 = v67;
  long long v28 = v68;
  long long v29 = v70;
  *(_OWORD *)(a3 + 304) = v69;
  *(_OWORD *)(a3 + 320) = v29;
  *(_OWORD *)(a3 + 272) = v27;
  *(_OWORD *)(a3 + 288) = v28;
  long long v30 = v63;
  long long v31 = v64;
  long long v32 = v66;
  *(_OWORD *)(a3 + 240) = v65;
  *(_OWORD *)(a3 + 256) = v32;
  *(_OWORD *)(a3 + 208) = v30;
  *(_OWORD *)(a3 + 224) = v31;
  long long v33 = v71;
  long long v34 = v72;
  long long v35 = v74;
  *(_OWORD *)(a3 + 368) = v73;
  *(_OWORD *)(a3 + 384) = v35;
  *(_OWORD *)(a3 + 336) = v33;
  *(_OWORD *)(a3 + 352) = v34;
  *(void *)a3 = v62;
  *(void *)(a3 + 8) = v61;
  *(void *)(a3 + 16) = v58;
  *(void *)(a3 + 24) = v57;
  *(unsigned char *)(a3 + 32) = v60;
  *(void *)(a3 + 40) = v53;
  *(void *)(a3 + 48) = v52;
  *(void *)(a3 + 56) = v51;
  *(void *)(a3 + 64) = v59;
  *(void *)(a3 + 72) = v50;
  *(void *)(a3 + 80) = v44;
  *(void *)(a3 + 88) = v49;
  *(void *)(a3 + 96) = v48;
  *(void *)(a3 + 104) = v47;
  *(void *)(a3 + 112) = v46;
  *(void *)(a3 + 120) = v43;
  *(void *)(a3 + 128) = v42;
  *(void *)(a3 + 136) = v56;
  *(void *)(a3 + 144) = v55;
  *(unsigned char *)(a3 + 152) = v54;
  *(void *)(a3 + 160) = v7;
  *(void *)(a3 + 168) = v8;
  *(void *)(a3 + 176) = v9;
  *(void *)(a3 + 184) = v41;
  *(void *)(a3 + 192) = v45;
  *(void *)(a3 + 200) = a2;
  v75[0] = v40;
  v75[1] = 0;
  char v76 = 1;
  uint64_t v77 = v26;
  char v78 = v10;
  uint64_t v79 = v38;
  char v80 = v11;
  uint64_t v81 = v37;
  uint64_t v82 = v39;
  char v83 = v12;
  uint64_t v84 = v14;
  uint64_t v85 = v16;
  uint64_t v86 = v18;
  uint64_t v87 = v20;
  char v88 = 0;
  uint64_t v89 = a2;
  uint64_t v90 = 0;
  char v91 = 1;
  uint64_t v92 = v21;
  char v93 = v22;
  uint64_t v94 = v23;
  char v95 = v24;
  long long v96 = v25;
  sub_1002451E0(v62, v61, v58, v57, v60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1002451E0(v43, v42, v56, v55, v54);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1006F69F0((uint64_t)&v63);
  sub_1006F6A1C((uint64_t)v75);
  sub_1002451F8(v43, v42, v56, v55, v54);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1002451F8(v62, v61, v58, v57, v60);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006F65BC@<X0>(uint64_t a1@<X8>)
{
  double v3 = *(double *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = swift_allocObject();
  *(double *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v6;
  double v8 = v3 * 360.0 * 0.0174532925;
  swift_retain();
  swift_retain();
  static UnitPoint.center.getter();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t result = static Animation.linear(duration:)();
  *(void *)a1 = sub_1006F6960;
  *(void *)(a1 + 8) = v7;
  *(double *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = result;
  *(double *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = 1;
  return result;
}

uint64_t sub_1006F6690()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F66C8(uint64_t a1)
{
  return sub_10024BD84(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1006F66D0()
{
  unint64_t result = qword_1009518A0;
  if (!qword_1009518A0)
  {
    type metadata accessor for PeriodicTimelineSchedule();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009518A0);
  }
  return result;
}

uint64_t sub_1006F6730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10096A2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *assignWithCopy for InfinitelyAnimatableProgressRing(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for InfinitelyAnimatableProgressRing(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for InfinitelyAnimatableProgressRing()
{
  return &type metadata for InfinitelyAnimatableProgressRing;
}

unint64_t sub_1006F686C()
{
  unint64_t result = qword_10096A2E0;
  if (!qword_10096A2E0)
  {
    sub_1000A1370(&qword_10096A2E8);
    sub_1000A132C(&qword_10096A2C0, &qword_10096A2B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A2E0);
  }
  return result;
}

uint64_t sub_1006F6904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006F6920()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void *sub_1006F6960@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006F5F6C(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1006F6970()
{
  return sub_1006F6990();
}

uint64_t sub_1006F6980()
{
  return sub_1006F6990();
}

uint64_t sub_1006F6990()
{
  return Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
}

uint64_t sub_1006F69F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006F6A1C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1006F6A4C()
{
  unint64_t result = qword_10096A2F0;
  if (!qword_10096A2F0)
  {
    sub_1000A1370(&qword_10096A2F8);
    sub_1006F6AC8();
    sub_1000E16C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A2F0);
  }
  return result;
}

unint64_t sub_1006F6AC8()
{
  unint64_t result = qword_10096A300;
  if (!qword_10096A300)
  {
    sub_1000A1370(&qword_10096A308);
    sub_1006F6B68();
    sub_1000A132C(&qword_10096A330, &qword_10096A338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A300);
  }
  return result;
}

unint64_t sub_1006F6B68()
{
  unint64_t result = qword_10096A310;
  if (!qword_10096A310)
  {
    sub_1000A1370(&qword_10096A318);
    sub_1000A132C(&qword_10096A320, &qword_10096A328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A310);
  }
  return result;
}

uint64_t sub_1006F6C08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1006F6C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = *(void *)(v5 + 40);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result)
    {
LABEL_3:
      if (v9 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v21 = v8 & 0xC000000000000001;
        unint64_t v22 = v8;
        do
        {
          if (v21) {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v12 = *(id *)(v8 + 8 * v11 + 32);
          }
          uint64_t v13 = v12;
          ++v11;
          Class isa = Set._bridgeToObjectiveC()().super.isa;
          uint64_t v15 = (void *)swift_allocObject();
          long long v15[2] = a2;
          v15[3] = a3;
          uint64_t v15[4] = v13;
          long long v29 = sub_1006F899C;
          long long v30 = v15;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v26 = 1107296256;
          long long v27 = sub_1006F6F38;
          long long v28 = &unk_1008D7E48;
          uint64_t v16 = _Block_copy(&aBlock);
          swift_retain();
          id v17 = v13;
          swift_release();
          uint64_t v18 = (void *)swift_allocObject();
          v18[2] = a4;
          v18[3] = a5;
          v18[4] = v17;
          long long v29 = sub_1006F897C;
          long long v30 = v18;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v26 = 1107296256;
          long long v27 = sub_1006F6F38;
          long long v28 = &unk_1008D7E98;
          uint64_t v19 = _Block_copy(&aBlock);
          id v20 = v17;
          swift_retain();
          swift_release();
          [v20 queryDestinations:isa updateHandler:v16 completionHandler:v19];
          _Block_release(v19);
          _Block_release(v16);

          unint64_t v8 = v22;
        }
        while (v9 != v11);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006F6F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1006F6FD0(id result, void (*a2)(id, uint64_t, uint64_t), int a3, id a4)
{
  if (result)
  {
    id v5 = result;
    uint64_t result = [a4 serviceIdentifier];
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      a2(v5, v7, v9);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1006F707C(uint64_t a1, unint64_t a2)
{
  sub_1006F8520();
  id v5 = *(void **)(v2 + 24);
  NSString v6 = String._bridgeToObjectiveC()();
  sub_1000AFA94((uint64_t *)&unk_100955C00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = 0;
  id v8 = [v5 unifiedContactWithIdentifier:v6 keysToFetch:isa error:&v19];

  id v9 = v19;
  if (!v8)
  {
    uint64_t v10 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    id v12 = (void *)HKLogActivity;
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      uint64_t v14 = v12;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      id v19 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_10008F1F4(a1, a2, (uint64_t *)&v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v16 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v13, "Failed to fetch contact for identifier: %s with error: %@", (uint8_t *)v15, 0x16u);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return 0;
  }
  return v8;
}

uint64_t sub_1006F7354(void *a1, id *a2)
{
  id v67 = *a2;
  id v3 = [*a2 phoneNumbers];
  sub_1000AFA94(&qword_10096A4D0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  long long v66 = a1;
  if (!v5)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    id v30 = [v67 emailAddresses];
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31 >> 62) {
      goto LABEL_50;
    }
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v32) {
      return swift_bridgeObjectRelease();
    }
LABEL_28:
    unint64_t v61 = v31;
    unint64_t v63 = v31 & 0xC000000000000001;
    uint64_t v33 = 4;
    uint64_t v59 = v32;
    while (1)
    {
      uint64_t v35 = v33 - 4;
      if (v63)
      {
        id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v37 = v33 - 3;
        if (__OFADD__(v35, 1)) {
          goto LABEL_47;
        }
      }
      else
      {
        id v36 = *(id *)(v31 + 8 * v33);
        uint64_t v37 = v33 - 3;
        if (__OFADD__(v35, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v32) {
            return swift_bridgeObjectRelease();
          }
          goto LABEL_28;
        }
      }
      uint64_t v65 = v37;
      uint64_t v38 = v36;
      id v39 = [v36 value];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      id v43 = v67;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v68 = (void *)*a1;
      unint64_t v31 = (unint64_t)v68;
      *a1 = 0x8000000000000000;
      unint64_t v46 = sub_1000DA1C0(v40, v42);
      uint64_t v47 = *(void *)(v31 + 16);
      BOOL v48 = (v45 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (__OFADD__(v47, v48)) {
        goto LABEL_48;
      }
      a1 = v45;
      if (*(void *)(v31 + 24) >= v49)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v52 = v68;
          if (v45) {
            goto LABEL_29;
          }
        }
        else
        {
          unint64_t v31 = (unint64_t)&v68;
          sub_1004F63A0();
          uint64_t v52 = v68;
          if (a1) {
            goto LABEL_29;
          }
        }
      }
      else
      {
        sub_1004EEF88(v49, isUniquelyReferenced_nonNull_native);
        unint64_t v31 = (unint64_t)v68;
        unint64_t v50 = sub_1000DA1C0(v40, v42);
        if ((a1 & 1) != (v51 & 1)) {
          goto LABEL_52;
        }
        unint64_t v46 = v50;
        uint64_t v52 = v68;
        if (a1)
        {
LABEL_29:
          uint64_t v34 = v52[7];

          *(void *)(v34 + 8 * v46) = v43;
          goto LABEL_30;
        }
      }
      v52[(v46 >> 6) + 8] |= 1 << v46;
      uint64_t v53 = (uint64_t *)(v52[6] + 16 * v46);
      *uint64_t v53 = v40;
      v53[1] = v42;
      *(void *)(v52[7] + 8 * v46) = v43;
      uint64_t v54 = v52[2];
      BOOL v28 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v28) {
        goto LABEL_49;
      }
      v52[2] = v55;
      swift_bridgeObjectRetain();
LABEL_30:
      a1 = v66;
      *long long v66 = v52;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v33;
      unint64_t v31 = v61;
      if (v65 == v59) {
        return swift_bridgeObjectRelease();
      }
    }
  }
LABEL_3:
  unint64_t v58 = v4;
  unint64_t v60 = v4 & 0xC000000000000001;
  uint64_t v6 = 4;
  uint64_t v57 = v5;
  while (1)
  {
    uint64_t v8 = v6 - 4;
    if (v60)
    {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      id v9 = *(id *)(v4 + 8 * v6);
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        long long v66 = a1;
        if (!v5) {
          goto LABEL_26;
        }
        goto LABEL_3;
      }
    }
    uint64_t v62 = v9;
    uint64_t v64 = v10;
    id v11 = [v9 value];
    id v12 = [v11 stringValue];
    unint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    id v15 = v67;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    long long v68 = (void *)*a1;
    id v17 = v68;
    *a1 = 0x8000000000000000;
    unint64_t v19 = sub_1000DA1C0(v4, v14);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_23;
    }
    a1 = v18;
    if (v17[3] < v22) {
      break;
    }
    if (v16)
    {
      long long v25 = v68;
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1004F63A0();
      long long v25 = v68;
      if (a1)
      {
LABEL_4:
        uint64_t v7 = v25[7];

        *(void *)(v7 + 8 * v19) = v15;
        goto LABEL_5;
      }
    }
LABEL_18:
    v25[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v26 = (unint64_t *)(v25[6] + 16 * v19);
    *uint64_t v26 = v4;
    v26[1] = v14;
    *(void *)(v25[7] + 8 * v19) = v15;
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_24;
    }
    void v25[2] = v29;
    swift_bridgeObjectRetain();
LABEL_5:
    a1 = v66;
    *long long v66 = v25;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v6;
    unint64_t v4 = v58;
    if (v64 == v57) {
      goto LABEL_26;
    }
  }
  sub_1004EEF88(v22, v16);
  unint64_t v23 = sub_1000DA1C0(v4, v14);
  if ((a1 & 1) == (v24 & 1))
  {
    unint64_t v19 = v23;
    long long v25 = v68;
    if (a1) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
LABEL_52:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1006F7878(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = (uint64_t *)(*a1 + OBJC_IVAR___CHReachableDestination_destination);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  swift_beginAccess();
  if (*(void *)(*a2 + 16) <= 0xAuLL)
  {
    uint64_t v11 = *(void *)(a3 + 16);
    swift_bridgeObjectRetain();
    if ((sub_1003B0DF0(v10, v9, v11) & 1) != 0 || !*(void *)(a4 + 16))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1000DA1C0(v10, v9);
      if (v13)
      {
        id v14 = *(id *)(*(void *)(a4 + 56) + 8 * v12);
        swift_bridgeObjectRelease();
        id v15 = [v14 identifier];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        LOBYTE(v15) = sub_1006F8718(v16, v18);
        swift_bridgeObjectRelease();
        if (v15)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_beginAccess();
          uint64_t v19 = *a2;
          uint64_t v20 = *(void *)(*a2 + 16);
          if (v20)
          {
            uint64_t v31 = v10;
            swift_bridgeObjectRetain_n();
            id v32 = v14;
            uint64_t v21 = v19 + 72;
            while (1)
            {
              id v22 = *(id *)(v21 - 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ([v22 isEqual:v32]) {
                break;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              v21 += 48;
              if (!--v20)
              {

                swift_bridgeObjectRelease_n();
                uint64_t v10 = v31;
                goto LABEL_15;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_15:
            uint64_t v23 = *(void *)(v7 + OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier + 8);
            uint64_t v33 = *(void *)(v7 + OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier);
            swift_beginAccess();
            char v24 = (void *)*a2;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            id v25 = v14;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a2 = (uint64_t)v24;
            uint64_t v27 = v10;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v24 = sub_1001E8D8C(0, v24[2] + 1, 1, v24);
              *a2 = (uint64_t)v24;
            }
            unint64_t v29 = v24[2];
            unint64_t v28 = v24[3];
            if (v29 >= v28 >> 1)
            {
              char v24 = sub_1001E8D8C((void *)(v28 > 1), v29 + 1, 1, v24);
              *a2 = (uint64_t)v24;
            }
            _DWORD v24[2] = v29 + 1;
            id v30 = &v24[6 * v29];
            v30[4] = v25;
            v30[5] = v27;
            v30[6] = v9;
            v30[7] = v33;
            v30[8] = v23;
            v30[9] = _swiftEmptyArrayStorage;
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1006F7BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = (void *)a1;
  uint64_t v7 = (uint64_t *)(a4 + 16);
  uint64_t v53 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  int64_t v11 = 0;
  int64_t v54 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v47 = v6;
  uint64_t v52 = v7;
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
    if (*(void *)(*v7 + 16) >= 0xBuLL)
    {
LABEL_48:
      swift_release();
      return;
    }
    uint64_t v17 = (uint64_t *)(v6[6] + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void **)(v6[7] + 8 * v13);
    uint64_t v21 = v6[2];
    swift_bridgeObjectRetain();
    if (v21)
    {
      swift_bridgeObjectRetain();
      id v22 = v20;
      uint64_t v23 = v19;
      unint64_t v24 = sub_1000DA1C0(v19, v18);
      if ((v25 & 1) == 0)
      {
        int64_t v56 = v11;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      id v26 = *(id *)(v6[7] + 8 * v24);
      swift_bridgeObjectRelease();
      if (Int.init(truncating:)() == 1)
      {
        int64_t v56 = v11;
        char v27 = sub_1003B0DF0(v19, v18, *(void *)(a5 + 16));

        if (v27)
        {

          goto LABEL_34;
        }
        goto LABEL_29;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = v19;
      int64_t v56 = v11;
      id v28 = v20;
LABEL_29:
      if (*(void *)(a6 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = v23;
        unint64_t v30 = sub_1000DA1C0(v23, v18);
        if (v31)
        {
          id v32 = *(id *)(*(void *)(a6 + 56) + 8 * v30);
          swift_bridgeObjectRelease();
          id v33 = [v32 identifier];
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;

          LOBYTE(v33) = sub_1006F8718(v34, v36);
          swift_bridgeObjectRelease();
          if (v33)
          {

            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          uint64_t v49 = v29;
          uint64_t v7 = v52;
          uint64_t v37 = *v52;
          uint64_t v38 = *(void *)(*v52 + 16);
          if (v38)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v39 = v37 + 72;
            while (1)
            {
              id v40 = *(id *)(v39 - 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ([v40 isEqual:v32]) {
                break;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              v39 += 48;
              if (!--v38)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v6 = v47;
                uint64_t v7 = v52;
                goto LABEL_41;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v6 = v47;
LABEL_47:
            uint64_t v7 = v52;
            int64_t v11 = v56;
          }
          else
          {
LABEL_41:
            swift_beginAccess();
            uint64_t v41 = (void *)*v7;
            swift_bridgeObjectRetain();
            id v42 = v32;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v7 = (uint64_t)v41;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v41 = sub_1001E8D8C(0, v41[2] + 1, 1, v41);
              *uint64_t v7 = (uint64_t)v41;
            }
            unint64_t v45 = v41[2];
            unint64_t v44 = v41[3];
            if (v45 >= v44 >> 1)
            {
              uint64_t v41 = sub_1001E8D8C((void *)(v44 > 1), v45 + 1, 1, v41);
              *uint64_t v7 = (uint64_t)v41;
            }
            v41[2] = v45 + 1;
            unint64_t v46 = &v41[6 * v45];
            v46[4] = v42;
            v46[5] = v49;
            v46[6] = v18;
            v46[7] = a2;
            v46[8] = a3;
            v46[9] = _swiftEmptyArrayStorage;
            swift_endAccess();

            swift_bridgeObjectRelease();
            int64_t v11 = v56;
          }
        }
        else
        {

          swift_bridgeObjectRelease_n();
          int64_t v11 = v56;
        }
      }
      else
      {

LABEL_34:
        swift_bridgeObjectRelease();
        int64_t v11 = v56;
      }
    }
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v14 >= v54) {
    goto LABEL_48;
  }
  unint64_t v15 = *(void *)(v53 + 8 * v14);
  ++v11;
  if (v15) {
    goto LABEL_20;
  }
  int64_t v11 = v14 + 1;
  if (v14 + 1 >= v54) {
    goto LABEL_48;
  }
  unint64_t v15 = *(void *)(v53 + 8 * v11);
  if (v15) {
    goto LABEL_20;
  }
  int64_t v11 = v14 + 2;
  if (v14 + 2 >= v54) {
    goto LABEL_48;
  }
  unint64_t v15 = *(void *)(v53 + 8 * v11);
  if (v15)
  {
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_21;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v54) {
    goto LABEL_48;
  }
  unint64_t v15 = *(void *)(v53 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v54) {
      goto LABEL_48;
    }
    unint64_t v15 = *(void *)(v53 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_50:
  __break(1u);
}

uint64_t sub_1006F810C()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1006F81F8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp27ReachableContactsDataSource__friendSuggestionList;
  uint64_t v2 = sub_1000AFA94(&qword_10096A4D8);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1006F82C4()
{
  return type metadata accessor for ReachableContactsDataSource();
}

uint64_t sub_1006F82CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ReachableContactsDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F830C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1006F838C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1006F8408(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1006F8440(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1006F8468(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1006F8520()
{
  id v0 = self;
  id v1 = [v0 descriptorForRequiredKeysForStyle:0];
  id v2 = [v0 descriptorForRequiredKeysForStyle:1003];
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = CNContactEmailAddressesKey;
  *(void *)(v3 + 56) = CNContactPhoneNumbersKey;
  uint64_t v7 = v3;
  specialized Array._endMutation()();
  unint64_t v4 = CNContactEmailAddressesKey;
  uint64_t v5 = CNContactPhoneNumbersKey;
  return v7;
}

uint64_t sub_1006F85F4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1006F8630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1006F7BE4(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1006F863C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006F867C()
{
  return sub_1006F810C();
}

uint64_t sub_1006F8688()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006F86C0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

BOOL sub_1006F8718(uint64_t a1, uint64_t a2)
{
  id v4 = [self standardUserDefaults];
  id v5 = [v4 objectForKey:@"CHRemovedSuggestedContactsAsDestinationsKey"];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_100074830((uint64_t)v16, (uint64_t)v17);
  if (!v17[3])
  {
    sub_100074898((uint64_t)v17);
    goto LABEL_16;
  }
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    os_log_type_t v9 = static os_log_type_t.default.getter();
    unint64_t v10 = (void *)HKLogActivity;
    os_log_type_t v11 = v9;
    BOOL result = os_log_type_enabled(HKLogActivity, v9);
    if (!result) {
      return result;
    }
    unint64_t v13 = v10;
    int64_t v14 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)int64_t v14 = 136315138;
    *(void *)&v16[0] = sub_10008F1F4(0xD000000000000028, 0x80000001007D7490, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v11, "%s found no stored contacts as removed suggestions.", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return 0;
  }
  uint64_t v6 = *(void *)(v15 + 16);
  if (!v6)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = (void *)(v15 + 40);
  while (1)
  {
    BOOL v8 = *(v7 - 1) == a1 && *v7 == a2;
    if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    v7 += 2;
    if (!--v6) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

id sub_1006F897C(void *a1)
{
  return sub_1006F6FD0(a1, *(void (**)(id, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(id *)(v1 + 32));
}

char *sub_1006F89AC()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  id v2 = objc_allocWithZone((Class)UILabel);
  uint64_t v3 = v0;
  id v4 = [v2 init];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
  id v6 = [objc_allocWithZone((Class)UILabel) init];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v5] = v6;

  v30.receiver = v3;
  v30.super_class = (Class)type metadata accessor for WorkoutChartHeaderView();
  uint64_t v7 = (char *)[v30 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  os_log_type_t v9 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel];
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  unint64_t v10 = v7;
  id v11 = v9;
  unint64_t v12 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  unint64_t v13 = self;
  id v14 = [v13 traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  id v15 = [v12 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v14];

  [v11 setFont:v15];
  int64_t v16 = *(void **)&v7[v8];
  uint64_t v17 = self;
  id v18 = v16;
  BOOL result = (char *)[v17 elapsedTimeColors];
  if (result)
  {
    uint64_t v20 = result;
    id v21 = [result nonGradientTextColor];

    [v18 setTextColor:v21];
    [v10 addSubview:*(void *)&v7[v8]];
    uint64_t v22 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
    id v23 = *(id *)&v10[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel];
    unint64_t v24 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
    id v25 = [v13 traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
    id v26 = [v24 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v25];

    [v23 setFont:v26];
    id v27 = *(id *)&v10[v22];
    BOOL result = (char *)[v17 distanceColors];
    if (result)
    {
      id v28 = result;
      id v29 = [result nonGradientTextColor];

      [v27 setTextColor:v29];
      [v10 addSubview:*(void *)&v10[v22]];
      sub_1006F8D74();

      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1006F8D74()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1007590E0;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 leadingAnchor];
  id v9 = [v1 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 bottomAnchor];
  id v12 = [v1 bottomAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel];
  id v15 = [v14 topAnchor];
  id v16 = [v1 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v3 + 56) = v17;
  id v18 = [v14 trailingAnchor];
  id v19 = [v1 trailingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v3 + 64) = v20;
  id v21 = [v14 bottomAnchor];
  id v22 = [v1 bottomAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v3 + 72) = v23;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_1006F90F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutChartHeaderView();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutChartHeaderView()
{
  return self;
}

void sub_1006F9198()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

ValueMetadata *type metadata accessor for WorkoutDetailSwimmingSetView()
{
  return &type metadata for WorkoutDetailSwimmingSetView;
}

uint64_t sub_1006F9278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006F9294@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_10096A538);
  id v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (uint64_t *)((char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v74 = (uint64_t)v58 - v10;
  uint64_t v11 = type metadata accessor for SegmentedPickerStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  uint64_t v73 = v12;
  __chkstk_darwin(v11);
  uint64_t v65 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_1009552B8);
  uint64_t v70 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  id v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_1009552C0);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v62 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_1009552C8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  id v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v66 = (uint64_t)v58 - v22;
  uint64_t v61 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v60 = v23;
  v58[1] = v24;
  uint64_t v59 = v25;
  uint64_t v68 = type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
  unint64_t v26 = sub_1006F9C74();
  id v63 = a2;
  unint64_t v64 = v26;
  id v27 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  long long v80 = v78;
  uint64_t v81 = v79;
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  sub_1000AFA94(&qword_1009552D8);
  sub_1002C4580();
  Picker<>.init(_:selection:content:)();
  id v28 = v65;
  SegmentedPickerStyle.init()();
  sub_1000A132C(&qword_1009552E8, &qword_1009552B8);
  id v29 = v62;
  uint64_t v30 = v67;
  uint64_t v31 = v72;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v28, v31);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v30);
  LOBYTE(v15) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v69;
  uint64_t v41 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v20, v29, v71);
  id v42 = &v20[*(int *)(v18 + 44)];
  *id v42 = (char)v15;
  *((void *)v42 + 1) = v33;
  *((void *)v42 + 2) = v35;
  *((void *)v42 + 3) = v37;
  *((void *)v42 + 4) = v39;
  v42[40] = 0;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v41);
  uint64_t v43 = v66;
  sub_1000AEEC8((uint64_t)v20, v66, &qword_1009552C8);
  *id v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  unint64_t v44 = (uint64_t *)((char *)v8 + v6[11]);
  id v45 = v63;
  *unint64_t v44 = ObservedObject.init(wrappedValue:)();
  v44[1] = v46;
  *(uint64_t *)((char *)v8 + v6[12]) = 0x4040000000000000;
  *(uint64_t *)((char *)v8 + v6[13]) = 0x4010000000000000;
  *(uint64_t *)((char *)v8 + v6[14]) = 0x4020000000000000;
  uint64_t v47 = (char *)v8 + v6[15];
  *(void *)&long long v80 = 0;
  GestureState.init(wrappedValue:)();
  uint64_t v48 = *((void *)&v78 + 1);
  long long v49 = v79;
  *(void *)uint64_t v47 = v78;
  *((void *)v47 + 1) = v48;
  *((_OWORD *)v47 + 1) = v49;
  unint64_t v50 = (uint64_t *)((char *)v8 + v6[16]);
  *(void *)&long long v80 = 0;
  State.init(wrappedValue:)();
  uint64_t v51 = *((void *)&v78 + 1);
  *unint64_t v50 = v78;
  v50[1] = v51;
  uint64_t v52 = v74;
  sub_1000AEEC8((uint64_t)v8, v74, &qword_10096A538);
  uint64_t v53 = v43;
  sub_1000AEF2C(v43, (uint64_t)v20, &qword_1009552C8);
  uint64_t v54 = v52;
  sub_1000AEF2C(v52, (uint64_t)v8, &qword_10096A538);
  uint64_t v55 = v75;
  sub_1000AEF2C((uint64_t)v20, v75, &qword_1009552C8);
  uint64_t v56 = sub_1000AFA94(&qword_10096A540);
  sub_1000AEF2C((uint64_t)v8, v55 + *(int *)(v56 + 48), &qword_10096A538);
  sub_10008DB18(v54, &qword_10096A538);
  sub_10008DB18(v53, &qword_1009552C8);
  sub_10008DB18((uint64_t)v8, &qword_10096A538);
  return sub_10008DB18((uint64_t)v20, &qword_1009552C8);
}

uint64_t sub_1006F9968@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1006F99E8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1006F9A58(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  id v5 = a2;
  sub_1000AFA94(&qword_1009552F8);
  sub_1000AFA94(&qword_100954C90);
  sub_1000A132C(&qword_100955300, &qword_1009552F8);
  sub_1002B9AA0();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1006F9B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10096A520);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  id v6 = (void *)v1[1];
  *(void *)id v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v8 = sub_1000AFA94(&qword_10096A528);
  sub_1006F9294(v7, v6, (uint64_t)&v5[*(int *)(v8 + 44)]);
  LOBYTE(v6) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v5, a1, &qword_10096A520);
  uint64_t v9 = a1 + *(int *)(sub_1000AFA94(&qword_10096A530) + 36);
  *(unsigned char *)uint64_t v9 = (_BYTE)v6;
  *(_OWORD *)(v9 + 8) = xmmword_100752B90;
  *(_OWORD *)(v9 + 24) = xmmword_100752B90;
  *(unsigned char *)(v9 + 40) = 0;
  return sub_10008DB18((uint64_t)v5, &qword_10096A520);
}

unint64_t sub_1006F9C74()
{
  unint64_t result = qword_1009527A0;
  if (!qword_1009527A0)
  {
    type metadata accessor for WorkoutDetailSwimmingSetDataSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009527A0);
  }
  return result;
}

uint64_t sub_1006F9CD4()
{
  return sub_1006F9A58(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006F9CE8()
{
  return swift_deallocObject();
}

unint64_t sub_1006F9D2C()
{
  unint64_t result = qword_10096A548;
  if (!qword_10096A548)
  {
    sub_1000A1370(&qword_10096A530);
    sub_1000A132C(&qword_10096A550, &qword_10096A520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A548);
  }
  return result;
}

void *sub_1006F9DCC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for DayIndex();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    uint64_t v13 = a3[8];
    uint64_t v14 = a3[9];
    id v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v15;
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)a1 + v14) = v16;
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)a1 + v17;
    id v20 = (char *)a2 + v17;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    unsigned char v19[16] = v20[16];
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = *(void **)((char *)a2 + v18);
    char v24 = *((unsigned char *)a2 + v18 + 8);
    swift_bridgeObjectRetain();
    id v25 = v15;
    id v26 = v16;
    swift_retain();
    swift_retain();
    sub_1001AEDAC(v23, v24);
    *(void *)uint64_t v22 = v23;
    v22[8] = v24;
    uint64_t v27 = a3[12];
    id v28 = *(void **)((char *)a2 + v27);
    *(void *)((char *)a1 + v27) = v28;
    id v29 = v28;
  }
  return a1;
}

void sub_1006F9F80(uint64_t a1, int *a2)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(a1, ViewModel);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  sub_1001AEDC8(*(id *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v7 = *(void **)(a1 + a2[12]);
}

uint64_t sub_1006FA08C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  id v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  uint64_t v16 = a3[10];
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v21 = a1 + v17;
  uint64_t v22 = *(void **)(a2 + v17);
  char v23 = *(unsigned char *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  id v24 = v14;
  id v25 = v15;
  swift_retain();
  swift_retain();
  sub_1001AEDAC(v22, v23);
  *(void *)uint64_t v21 = v22;
  *(unsigned char *)(v21 + 8) = v23;
  uint64_t v26 = a3[12];
  uint64_t v27 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v27;
  id v28 = v27;
  return a1;
}

uint64_t sub_1006FA1F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = *(void **)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  id v25 = *(id *)v24;
  LOBYTE(v20) = *(unsigned char *)(v24 + 8);
  sub_1001AEDAC(*(id *)v24, v20);
  uint64_t v26 = *(void **)v23;
  char v27 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v20;
  sub_1001AEDC8(v26, v27);
  uint64_t v28 = a3[12];
  id v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  return a1;
}

uint64_t sub_1006FA398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1006FA4C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  uint64_t v14 = a3[9];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v19 = a3[11];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  LOBYTE(v21) = *((unsigned char *)v21 + 8);
  uint64_t v23 = *(void **)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = (_BYTE)v21;
  sub_1001AEDC8(v23, v24);
  uint64_t v25 = a3[12];
  uint64_t v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  return a1;
}

uint64_t sub_1006FA634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FA648);
}

uint64_t sub_1006FA648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v7 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = ViewModel;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for DayIndex();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1006FA75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FA770);
}

uint64_t sub_1006FA770(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v9 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = ViewModel;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for DayIndex();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TrainingLoadChartLollipopView()
{
  uint64_t result = qword_10096A5B0;
  if (!qword_10096A5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006FA8CC()
{
  uint64_t result = type metadata accessor for TrainingLoadViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DayIndex();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006FA9D8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1006FA9F4(id *a1)
{
  id v1 = [*a1 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_1006FAA54()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setLocalizedDateFormatFromTemplate:v6];

  qword_100998910 = (uint64_t)v4;
}

uint64_t sub_1006FAB90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v88 = a1;
  ChartLollipopuint64_t View = type metadata accessor for TrainingLoadChartLollipopView();
  uint64_t v84 = *(void *)(ChartLollipopView - 8);
  __chkstk_darwin(ChartLollipopView);
  uint64_t v85 = v3;
  uint64_t v87 = (uint64_t)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v82);
  char v83 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100960068);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100960070);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_10096A608);
  __chkstk_darwin(v73);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_10096A610);
  __chkstk_darwin(v74);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_10096A618);
  __chkstk_darwin(v75);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_10096A620);
  __chkstk_darwin(v76);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_10096A628);
  __chkstk_darwin(v80);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_10096A630);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v77 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v25 = &v10[*(int *)(sub_1000AFA94(&qword_10096A638) + 44)];
  uint64_t v86 = v2;
  sub_1006FB420(v2, v25);
  uint64_t v26 = static Alignment.center.getter();
  sub_1004DEF64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v26, v27);
  sub_10008DB18((uint64_t)v10, &qword_100960068);
  unsigned __int8 v28 = static Edge.Set.top.getter();
  unsigned __int8 v29 = static Edge.Set.horizontal.getter();
  char v30 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v28) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v29) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v15, &qword_100960070);
  uint64_t v39 = &v15[*(int *)(v73 + 36)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10008DB18((uint64_t)v13, &qword_100960070);
  char v40 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v17, &qword_10096A608);
  long long v49 = &v17[*(int *)(v74 + 36)];
  *long long v49 = v40;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_10008DB18((uint64_t)v15, &qword_10096A608);
  uint64_t v50 = static Color.black.getter();
  sub_1000AEF2C((uint64_t)v17, (uint64_t)v19, &qword_10096A610);
  *(void *)&v19[*(int *)(v75 + 36)] = v50;
  sub_10008DB18((uint64_t)v17, &qword_10096A610);
  uint64_t v51 = v86;
  TrainingLoadViewModel.band(onDay:)();
  BanCGFloat d = type metadata accessor for TrainingLoadBand();
  uint64_t v53 = *(void *)(Band - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v7, 1, Band) == 1)
  {
    sub_10008DB18((uint64_t)v7, &qword_100963B50);
    uint64_t v54 = static Color.gray.getter();
  }
  else
  {
    uint64_t v54 = TrainingLoadBand.color.getter();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, Band);
  }
  char v55 = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v21, &qword_10096A618);
  uint64_t v56 = &v21[*(int *)(v76 + 36)];
  *(void *)uint64_t v56 = v54;
  v56[8] = v55;
  sub_10008DB18((uint64_t)v19, &qword_10096A618);
  uint64_t v57 = v83;
  unint64_t v58 = &v83[*(int *)(v82 + 20)];
  uint64_t v59 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v60 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v58, v59, v60);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v57 = _Q0;
  uint64_t v66 = (uint64_t)&v23[*(int *)(v80 + 36)];
  sub_100098358((uint64_t)v57, v66, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v66 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v23, &qword_10096A620);
  sub_100097F50((uint64_t)v57, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v21, &qword_10096A620);
  uint64_t v67 = v87;
  sub_100098358(v51, v87, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
  unint64_t v68 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v69 = swift_allocObject();
  sub_1006FD034(v67, v69 + v68);
  sub_1006FD0F8();
  uint64_t v70 = v77;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v23, &qword_10096A628);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v79 + 32))(v88, v70, v81);
}

uint64_t sub_1006FB420@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v59 = a1;
  unint64_t v68 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  unint64_t v64 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_10096A678);
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v71 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_10096A680);
  uint64_t v72 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  id v63 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v55 - v8;
  uint64_t v9 = sub_1000AFA94(&qword_10096A688);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_10096A690);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_10096A698);
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v16 = v61;
  uint64_t v62 = v15;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v55 - v20;
  uint64_t v69 = (char *)&v55 - v20;
  sub_1006FBAE8(a1, (uint64_t)v11);
  uint64_t v22 = static Font.caption2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_10096A688);
  uint64_t v24 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v24 = KeyPath;
  v24[1] = v22;
  sub_10008DB18((uint64_t)v11, &qword_10096A688);
  static Font.Weight.medium.getter();
  sub_1006FD44C();
  uint64_t v60 = v18;
  View.fontWeight(_:)();
  sub_10008DB18((uint64_t)v14, &qword_10096A690);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v15);
  sub_1006FCB00((uint64_t)&v73);
  uint64_t v25 = v73;
  uint64_t v26 = v74;
  uint64_t v57 = v73;
  uint64_t v28 = v75;
  uint64_t v27 = v76;
  uint64_t v55 = v76;
  uint64_t v29 = v77;
  uint64_t v30 = v78;
  LOBYTE(KeyPath) = v80;
  int v56 = v80;
  LOBYTE(v22) = v79;
  uint64_t v31 = static Font.body.getter();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v73 = v25;
  uint64_t v74 = v26;
  uint64_t v75 = v28;
  uint64_t v76 = v27;
  uint64_t v77 = v29;
  uint64_t v78 = v30;
  char v79 = v22;
  unsigned __int8 v80 = KeyPath;
  uint64_t v81 = v32;
  uint64_t v82 = v31;
  static Font.Weight.medium.getter();
  uint64_t v58 = sub_1000AFA94(&qword_10096A6C0);
  unint64_t v59 = sub_1006FD584();
  View.fontWeight(_:)();
  sub_1006FD830(v57, v26, v28, v55, v29, v30, v22, v56);
  swift_release();
  swift_release();
  uint64_t v33 = enum case for Font.Design.rounded(_:);
  uint64_t v34 = type metadata accessor for Font.Design();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v64, v33, v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
  uint64_t v73 = v58;
  uint64_t v74 = v59;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v63;
  uint64_t v38 = v65;
  uint64_t v39 = v71;
  View.fontDesign(_:)();
  sub_10008DB18(v36, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v38);
  uint64_t v40 = v72;
  uint64_t v41 = v70;
  uint64_t v42 = v66;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v70, v37, v66);
  uint64_t v43 = v61;
  uint64_t v44 = v62;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v46 = v60;
  v45(v60, v69, v62);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v48 = v41;
  uint64_t v49 = v42;
  v47(v37, v48, v42);
  uint64_t v50 = v68;
  v45(v68, v46, v44);
  uint64_t v51 = sub_1000AFA94(&qword_10096A710);
  v47(&v50[*(int *)(v51 + 48)], v37, v49);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v72 + 8);
  v52(v70, v49);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v43 + 8);
  v53(v69, v44);
  v52(v37, v49);
  return ((uint64_t (*)(char *, uint64_t))v53)(v46, v44);
}

uint64_t sub_1006FBAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v101 = sub_1000AFA94(&qword_10096A718);
  uint64_t v94 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  char v93 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000AFA94(&qword_10096A720);
  __chkstk_darwin(v97);
  uint64_t v98 = (void *)((char *)v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for AttributedString();
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = (uint64_t)v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChartLollipopuint64_t View = (int *)type metadata accessor for TrainingLoadChartLollipopView();
  __chkstk_darwin(ChartLollipopView);
  uint64_t v9 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v11 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v13 = (char *)v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_10096A728);
  __chkstk_darwin(v14 - 8);
  uint64_t v100 = (char *)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v99 = (char *)v92 - v17;
  *(void *)&long long v110 = sub_1006FC700();
  *((void *)&v110 + 1) = v18;
  unint64_t v96 = sub_1000A06D0();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static Font.Weight.bold.getter();
  uint64_t v24 = Text.fontWeight(_:)();
  uint64_t v104 = v25;
  uint64_t v105 = v24;
  int v103 = v26;
  uint64_t v106 = v27;
  sub_1000A06C0(v19, v21, v23);
  swift_bridgeObjectRelease();
  TrainingLoadViewModel.dataType.getter();
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, DataType);
  int v28 = enum case for TrainingLoadDataType.allDay(_:);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, DataType);
  if (v19 == v28)
  {
    uint64_t v29 = *(void **)(a1 + ChartLollipopView[8]);
    if (v29)
    {
      id v30 = v29;
      id v31 = [v30 activeEnergyBurned];
      id v32 = [v30 activeEnergyBurnedGoal];
      uint64_t v33 = *(void **)(a1 + ChartLollipopView[9]);
      id v34 = [self preferredFontForTextStyle:UIFontTextStyleBody];
      id v35 = sub_100265C24(v31, v32, v33, v34);

      if (v35) {
        AttributedString.init(_:)();
      }
      else {
        AttributedString.init()();
      }
      uint64_t v69 = Text.init(_:)();
      uint64_t v71 = v70;
      char v73 = v72 & 1;
      uint64_t v74 = Text.bold()();
      uint64_t v76 = v75;
      uint64_t v78 = v77;
      uint64_t v80 = v79 & 1;
      sub_1000A06C0(v69, v71, v73);
      swift_bridgeObjectRelease();
      *(void *)&long long v107 = v74;
      *((void *)&v107 + 1) = v76;
      *(void *)&long long v108 = v80;
      *((void *)&v108 + 1) = v78;
      LOBYTE(v109) = 0;
      sub_1000A1750(v74, v76, v80);
      swift_bridgeObjectRetain();
      _ConditionalContent<>.init(storage:)();

      sub_1000A06C0(v74, v76, v80);
      swift_bridgeObjectRelease();
    }
    else
    {
      LocalizedStringKey.init(stringLiteral:)();
      *(void *)&long long v107 = Text.init(_:tableName:bundle:comment:)();
      *((void *)&v107 + 1) = v48;
      *(void *)&long long v108 = v47 & 1;
      *((void *)&v108 + 1) = v49;
      LOBYTE(v109) = 1;
      _ConditionalContent<>.init(storage:)();
    }
    long long v107 = v110;
    long long v108 = v111;
    __int16 v109 = v112;
    uint64_t v95 = *((void *)&v110 + 1);
    unint64_t v96 = v110;
    char v93 = (char *)*((void *)&v111 + 1);
    uint64_t v94 = v111;
    v92[3] = v112;
    sub_1001BB600(v110, *((uint64_t *)&v110 + 1), v111);
    sub_1000AFA94(&qword_100953E60);
    sub_10038CA4C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v82 = *((void *)&v110 + 1);
    uint64_t v81 = v110;
    long long v83 = v111;
    char v84 = v113;
    uint64_t v85 = v112;
    uint64_t v86 = v98;
    *uint64_t v98 = v110;
    v86[1] = v82;
    *((_OWORD *)v86 + 1) = v83;
    *((unsigned char *)v86 + 32) = v85;
    *((unsigned char *)v86 + 33) = v84;
    swift_storeEnumTagMultiPayload();
    sub_1006FD9F0(v81, v82, v83, *((uint64_t *)&v83 + 1), v85, v84);
    sub_1000AFA94(&qword_10096A730);
    sub_1006FD904();
    sub_1006FD980();
    uint64_t v46 = (uint64_t)v99;
    _ConditionalContent<>.init(storage:)();
    sub_1001BB654(v96, v95, v94);
    sub_1006FDA54(v81, v82, v83, *((uint64_t *)&v83 + 1), v85, v84);
    uint64_t v39 = v102;
    uint64_t v42 = (uint64_t)v100;
  }
  else
  {
    uint64_t v36 = ChartLollipopView[7];
    unint64_t v37 = *(void *)(a1 + v36);
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v39 = v102;
    sub_100098358(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
    if (v38)
    {
      unint64_t v40 = *(void *)&v9[ChartLollipopView[7]];
      if (v40 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v42 = (uint64_t)v100;
      sub_100097F50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
      if (v41 < 2)
      {
        *(void *)&long long v110 = *(void *)(a1 + v36);
        swift_getKeyPath();
        swift_bridgeObjectRetain();
        sub_1000AFA94((uint64_t *)&unk_1009546A0);
        sub_1000A132C(&qword_10095E3B8, (uint64_t *)&unk_1009546A0);
        sub_100181C98();
        uint64_t v43 = v93;
        ForEach<>.init(_:id:content:)();
        uint64_t v44 = v94;
        uint64_t v45 = v101;
        (*(void (**)(void *, char *, uint64_t))(v94 + 16))(v98, v43, v101);
        swift_storeEnumTagMultiPayload();
        sub_1000AFA94(&qword_10096A730);
        sub_1006FD904();
        sub_1006FD980();
        uint64_t v46 = (uint64_t)v99;
        _ConditionalContent<>.init(storage:)();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
        goto LABEL_20;
      }
    }
    else
    {
      sub_100097F50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
      uint64_t v42 = (uint64_t)v100;
    }
    id v50 = [self mainBundle];
    NSString v51 = String._bridgeToObjectiveC()();
    id v52 = [v50 localizedStringForKey:v51 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1007509E0;
    unint64_t v54 = *(void *)(a1 + v36);
    uint64_t v46 = (uint64_t)v99;
    if (v54 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v53 + 56) = &type metadata for Int;
    *(void *)(v53 + 64) = &protocol witness table for Int;
    *(void *)(v53 + 32) = v55;
    uint64_t v56 = String.init(format:_:)();
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    *(void *)&long long v110 = v56;
    *((void *)&v110 + 1) = v58;
    uint64_t v59 = Text.init<A>(_:)();
    uint64_t v61 = v60;
    char v63 = v62 & 1;
    *(void *)&long long v107 = v59;
    *((void *)&v107 + 1) = v60;
    *(void *)&long long v108 = v62 & 1;
    *((void *)&v108 + 1) = v64;
    __int16 v109 = 256;
    sub_1000A1750(v59, v60, v62 & 1);
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_100953E60);
    sub_10038CA4C();
    _ConditionalContent<>.init(storage:)();
    unsigned __int8 v65 = v112;
    char v66 = v113;
    long long v67 = v111;
    unint64_t v68 = v98;
    *(_OWORD *)uint64_t v98 = v110;
    *((_OWORD *)v68 + 1) = v67;
    *((unsigned char *)v68 + 32) = v65;
    *((unsigned char *)v68 + 33) = v66;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10096A730);
    sub_1006FD904();
    sub_1006FD980();
    _ConditionalContent<>.init(storage:)();
    sub_1000A06C0(v59, v61, v63);
    swift_bridgeObjectRelease();
  }
LABEL_20:
  char v87 = v103 & 1;
  sub_1000AEF2C(v46, v42, &qword_10096A728);
  uint64_t v89 = v104;
  uint64_t v88 = v105;
  *(void *)uint64_t v39 = v105;
  *(void *)(v39 + 8) = v89;
  *(unsigned char *)(v39 + 16) = v87;
  *(void *)(v39 + 24) = v106;
  uint64_t v90 = sub_1000AFA94(&qword_10096A748);
  sub_1000AEF2C(v42, v39 + *(int *)(v90 + 48), &qword_10096A728);
  sub_1000A1750(v88, v89, v87);
  swift_bridgeObjectRetain();
  sub_10008DB18(v46, &qword_10096A728);
  sub_10008DB18(v42, &qword_10096A728);
  sub_1000A06C0(v88, v89, v87);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006FC700()
{
  uint64_t v1 = type metadata accessor for Calendar.Identifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DayIndex();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v12 - 8);
  uint64_t v24 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChartLollipopuint64_t View = type metadata accessor for TrainingLoadChartLollipopView();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v0 + *(int *)(ChartLollipopView + 20), v8);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Calendar.Identifier.gregorian(_:), v1);
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  DayIndex.startDate(in:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_10094B148 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_100998910;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 stringFromDate:isa];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
  return v19;
}

id sub_1006FCA74@<X0>(uint64_t a1@<X8>)
{
  id result = (id)FILocalizedActivityNameWithWorkout();
  if (result)
  {
    uint64_t v3 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A06D0();
    id result = (id)Text.init<A>(_:)();
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5 & 1;
    *(void *)(a1 + 24) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1006FCB00@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadChartLollipopView();
  if (TrainingLoadViewModel.hasValue(onDay:)())
  {
    TrainingLoadViewModel.band(onDay:)();
    BanCGFloat d = type metadata accessor for TrainingLoadBand();
    int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(Band - 8) + 48))(v4, 1, Band);
    sub_10008DB18((uint64_t)v4, &qword_100963B50);
    if (v6 == 1)
    {
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      uint64_t v13 = v12 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&long long v33 = v7;
      *((void *)&v33 + 1) = v9;
      *(void *)&long long v34 = v13;
      *((void *)&v34 + 1) = v11;
      *(void *)&long long v35 = KeyPath;
      *((void *)&v35 + 1) = 0x3FE0000000000000;
      LOBYTE(v36) = 1;
    }
    else
    {
      *(void *)&long long v37 = TrainingLoadViewModel.loadPercentage(onDay:)();
      *((void *)&v37 + 1) = v23;
      sub_1000A06D0();
      *(void *)&long long v33 = Text.init<A>(_:)();
      *((void *)&v33 + 1) = v24;
      *(void *)&long long v34 = v25 & 1;
      *((void *)&v34 + 1) = v26;
      long long v35 = 0uLL;
      LOBYTE(v36) = 0;
    }
    sub_1000AFA94(&qword_10096A708);
    sub_1006FD790();
    _ConditionalContent<>.init(storage:)();
    long long v33 = v37;
    long long v34 = v38;
    long long v35 = v39;
    __int16 v36 = v40;
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20 & 1;
    uint64_t v22 = swift_getKeyPath();
    *(void *)&long long v33 = v15;
    *((void *)&v33 + 1) = v17;
    *(void *)&long long v34 = v21;
    *((void *)&v34 + 1) = v19;
    *(void *)&long long v35 = v22;
    *((void *)&v35 + 1) = 0x3FE0000000000000;
    __int16 v36 = 256;
  }
  sub_1000AFA94(&qword_10096A6F8);
  sub_1000AFA94(&qword_10096A708);
  sub_1006FD714();
  sub_1006FD790();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v37;
  long long v28 = v38;
  long long v29 = v39;
  unsigned __int8 v30 = v40;
  char v31 = v41;
  *(_OWORD *)a1 = v37;
  *(_OWORD *)(a1 + 16) = v28;
  *(_OWORD *)(a1 + 32) = v29;
  *(unsigned char *)(a1 + 48) = v30;
  *(unsigned char *)(a1 + 49) = v31;
  return result;
}

uint64_t sub_1006FCDF4()
{
  return swift_release();
}

uint64_t sub_1006FCEB4()
{
  uint64_t v1 = (int *)(type metadata accessor for TrainingLoadChartLollipopView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(v2, ViewModel);
  uint64_t v4 = v2 + v1[7];
  uint64_t v5 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  sub_1001AEDC8(*(id *)(v2 + v1[13]), *(unsigned char *)(v2 + v1[13] + 8));

  return swift_deallocObject();
}

uint64_t sub_1006FD034(uint64_t a1, uint64_t a2)
{
  ChartLollipopuint64_t View = type metadata accessor for TrainingLoadChartLollipopView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ChartLollipopView - 8) + 32))(a2, a1, ChartLollipopView);
  return a2;
}

uint64_t sub_1006FD098()
{
  type metadata accessor for TrainingLoadChartLollipopView();

  return sub_1006FCDF4();
}

unint64_t sub_1006FD0F8()
{
  unint64_t result = qword_10096A640;
  if (!qword_10096A640)
  {
    sub_1000A1370(&qword_10096A628);
    sub_1006FD198();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A640);
  }
  return result;
}

unint64_t sub_1006FD198()
{
  unint64_t result = qword_10096A648;
  if (!qword_10096A648)
  {
    sub_1000A1370(&qword_10096A620);
    sub_1006FD238();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A648);
  }
  return result;
}

unint64_t sub_1006FD238()
{
  unint64_t result = qword_10096A650;
  if (!qword_10096A650)
  {
    sub_1000A1370(&qword_10096A618);
    sub_1006FD324(&qword_10096A658, &qword_10096A610, (void (*)(void))sub_1006FD2FC);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A650);
  }
  return result;
}

uint64_t sub_1006FD2FC()
{
  return sub_1006FD324(&qword_10096A660, &qword_10096A608, (void (*)(void))sub_1006FD3A4);
}

uint64_t sub_1006FD324(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006FD3A4()
{
  unint64_t result = qword_10096A668;
  if (!qword_10096A668)
  {
    sub_1000A1370(&qword_100960070);
    sub_1000A132C(&qword_10096A670, &qword_100960068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A668);
  }
  return result;
}

unint64_t sub_1006FD44C()
{
  unint64_t result = qword_10096A6A0;
  if (!qword_10096A6A0)
  {
    sub_1000A1370(&qword_10096A690);
    sub_1006FD4EC();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6A0);
  }
  return result;
}

unint64_t sub_1006FD4EC()
{
  unint64_t result = qword_10096A6A8;
  if (!qword_10096A6A8)
  {
    sub_1000A1370(&qword_10096A688);
    sub_1000A132C(&qword_10096A6B0, &qword_10096A6B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6A8);
  }
  return result;
}

unint64_t sub_1006FD584()
{
  unint64_t result = qword_10096A6C8;
  if (!qword_10096A6C8)
  {
    sub_1000A1370(&qword_10096A6C0);
    sub_1006FD624();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6C8);
  }
  return result;
}

unint64_t sub_1006FD624()
{
  unint64_t result = qword_10096A6D0;
  if (!qword_10096A6D0)
  {
    sub_1000A1370(&qword_10096A6D8);
    sub_1006FD698();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6D0);
  }
  return result;
}

unint64_t sub_1006FD698()
{
  unint64_t result = qword_10096A6E0;
  if (!qword_10096A6E0)
  {
    sub_1000A1370(&qword_10096A6E8);
    sub_1006FD714();
    sub_1006FD790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6E0);
  }
  return result;
}

unint64_t sub_1006FD714()
{
  unint64_t result = qword_10096A6F0;
  if (!qword_10096A6F0)
  {
    sub_1000A1370(&qword_10096A6F8);
    sub_1006FD790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A6F0);
  }
  return result;
}

unint64_t sub_1006FD790()
{
  unint64_t result = qword_10096A700;
  if (!qword_10096A700)
  {
    sub_1000A1370(&qword_10096A708);
    sub_1000A132C(&qword_1009540E8, &qword_1009540F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A700);
  }
  return result;
}

uint64_t sub_1006FD830(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if (a8)
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = a7 & 1;
    return sub_1006FD8A4(a1, a2, a3, a4, a5, a6, v9);
  }
}

uint64_t sub_1006FD8A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    swift_release();
  }
  else
  {
    sub_1000A06C0(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRelease();
}

unint64_t sub_1006FD904()
{
  unint64_t result = qword_10096A738;
  if (!qword_10096A738)
  {
    sub_1000A1370(&qword_10096A730);
    sub_10038CA4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A738);
  }
  return result;
}

unint64_t sub_1006FD980()
{
  unint64_t result = qword_10096A740;
  if (!qword_10096A740)
  {
    sub_1000A1370(&qword_10096A718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A740);
  }
  return result;
}

uint64_t sub_1006FD9F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1000A1750(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_1001BB600(a1, a2, a3);
  }
}

uint64_t sub_1006FDA54(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1001BB654(a1, a2, a3);
  }
}

uint64_t sub_1006FDAB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006FDB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006FDCE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006FDB3C(uint64_t a1)
{
  unint64_t v2 = sub_10007E7C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006FDB78(uint64_t a1)
{
  unint64_t v2 = sub_10007E7C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1006FDBB4()
{
  return Hasher._finalize()();
}

uint64_t assignWithCopy for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1000917F8(v7, v8, v9);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1000917F8(v5, v6, v7);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006FDCE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x706D655464726163 && a2 == 0xEC0000006574616CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746143657A6973 && a2 == 0xEC00000079726F67)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1006FDE34()
{
  unint64_t result = qword_10096A868;
  if (!qword_10096A868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096A868);
  }
  return result;
}

void sub_1006FDE88()
{
}

id sub_1006FDEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  [super initWithOverlay:a1];
  swift_unknownObjectRelease();
  return v6;
}

id sub_1006FDF8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutOverlayPathRenderer();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutOverlayPathRenderer()
{
  return self;
}

uint64_t sub_1006FDFF4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkoutDataBucket()
{
  return self;
}

ValueMetadata *type metadata accessor for HighlightsPagingScrollTargetBehavior()
{
  return &type metadata for HighlightsPagingScrollTargetBehavior;
}

double sub_1006FE038()
{
  if (qword_10094AA08 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100958370 + 10.0;
  *(double *)&qword_10096A998 = *(double *)&qword_100958370 + 10.0;
  return result;
}

uint64_t sub_1006FE094()
{
  ScrollTarget.rect.getter();
  double v1 = v0;
  if (qword_10094AA08 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_100958370;
  ScrollTarget.rect.getter();
  double v4 = v3;
  if (qword_10094B150 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_10096A998 * round((v4 + (v1 - v2) * 0.5) / *(double *)&qword_10096A998) - (v1 - v2) * 0.5;
  id v6 = (uint64_t (*)(uint64_t *, void))ScrollTarget.rect.modify();
  *char v7 = v5;
  return v6(&v9, 0);
}

uint64_t destroy for ActivityStatisticsCompilation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v24;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  uint64_t v23 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v23;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v22 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v22;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  long long v5 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v5;
  uint64_t v21 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v21;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  long long v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  uint64_t v20 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v20;
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v7 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v7;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  uint64_t v19 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v19;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  uint64_t v18 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v18;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v8 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v8;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v9 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v9;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  long long v10 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v10;
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v11 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v11;
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  long long v12 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v12;
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  long long v13 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v13;
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 1240);
  *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 1256);
  *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 1352);
  *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 1368);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  long long v14 = *(_OWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = *(_OWORD *)(a2 + 1496);
  *(_OWORD *)(a1 + 1512) = v14;
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(void *)(a1 + 1632) = *(void *)(a2 + 1632);
  *(void *)(a1 + 1688) = *(void *)(a2 + 1688);
  *(void *)(a1 + 1744) = *(void *)(a2 + 1744);
  *(_OWORD *)(a1 + 1640) = *(_OWORD *)(a2 + 1640);
  *(_OWORD *)(a1 + 1656) = *(_OWORD *)(a2 + 1656);
  *(_OWORD *)(a1 + 1752) = *(_OWORD *)(a2 + 1752);
  long long v15 = *(_OWORD *)(a2 + 1768);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  *(_OWORD *)(a1 + 1768) = v15;
  *(void *)(a1 + 1784) = *(void *)(a2 + 1784);
  *(unsigned char *)(a1 + 1792) = *(unsigned char *)(a2 + 1792);
  *(void *)(a1 + 1800) = *(void *)(a2 + 1800);
  *(void *)(a1 + 1824) = *(void *)(a2 + 1824);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  *(void *)(a1 + 1672) = *(void *)(a2 + 1672);
  *(void *)(a1 + 1680) = *(void *)(a2 + 1680);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  *(void *)(a1 + 1728) = *(void *)(a2 + 1728);
  long long v16 = *(_OWORD *)(a2 + 1808);
  *(void *)(a1 + 1736) = *(void *)(a2 + 1736);
  *(_OWORD *)(a1 + 1808) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(void *)(a1 + 1352) = *(void *)(a2 + 1352);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  *(void *)(a1 + 1368) = *(void *)(a2 + 1368);
  *(void *)(a1 + 1376) = *(void *)(a2 + 1376);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1400) = *(void *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(void *)(a1 + 1600) = *(void *)(a2 + 1600);
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1632) = *(void *)(a2 + 1632);
  *(void *)(a1 + 1640) = *(void *)(a2 + 1640);
  *(void *)(a1 + 1648) = *(void *)(a2 + 1648);
  *(void *)(a1 + 1656) = *(void *)(a2 + 1656);
  *(void *)(a1 + 1664) = *(void *)(a2 + 1664);
  *(void *)(a1 + 1672) = *(void *)(a2 + 1672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1680) = *(void *)(a2 + 1680);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1688) = *(void *)(a2 + 1688);
  *(void *)(a1 + 1696) = *(void *)(a2 + 1696);
  *(void *)(a1 + 1704) = *(void *)(a2 + 1704);
  *(void *)(a1 + 1712) = *(void *)(a2 + 1712);
  *(void *)(a1 + 1720) = *(void *)(a2 + 1720);
  *(void *)(a1 + 1728) = *(void *)(a2 + 1728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1736) = *(void *)(a2 + 1736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1744) = *(void *)(a2 + 1744);
  *(void *)(a1 + 1752) = *(void *)(a2 + 1752);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  *(void *)(a1 + 1768) = *(void *)(a2 + 1768);
  *(void *)(a1 + 1776) = *(void *)(a2 + 1776);
  *(void *)(a1 + 1784) = *(void *)(a2 + 1784);
  *(unsigned char *)(a1 + 1792) = *(unsigned char *)(a2 + 1792);
  *(void *)(a1 + 1800) = *(void *)(a2 + 1800);
  *(void *)(a1 + 1808) = *(void *)(a2 + 1808);
  *(void *)(a1 + 1816) = *(void *)(a2 + 1816);
  *(void *)(a1 + 1824) = *(void *)(a2 + 1824);
  return a1;
}

void *initializeWithTake for ActivityStatisticsCompilation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x728uLL);
}

uint64_t assignWithTake for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v6;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v7 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v7;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v8;
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v9 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v9;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  long long v10 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v10;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v11 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v11;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
  long long v12 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v12;
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v13 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v13;
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v14;
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  long long v15 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v15;
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  swift_bridgeObjectRelease();
  long long v16 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v16;
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(unsigned char *)(a1 + 1392) = *(unsigned char *)(a2 + 1392);
  *(void *)(a1 + 1400) = *(void *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(unsigned char *)(a1 + 1592) = *(unsigned char *)(a2 + 1592);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1648) = *(_OWORD *)(a2 + 1648);
  *(void *)(a1 + 1664) = *(void *)(a2 + 1664);
  *(void *)(a1 + 1672) = *(void *)(a2 + 1672);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1680) = *(void *)(a2 + 1680);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1688) = *(void *)(a2 + 1688);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  *(void *)(a1 + 1728) = *(void *)(a2 + 1728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1736) = *(void *)(a2 + 1736);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1760) = *(_OWORD *)(a2 + 1760);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(unsigned char *)(a1 + 1792) = *(unsigned char *)(a2 + 1792);
  *(void *)(a1 + 1800) = *(void *)(a2 + 1800);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(void *)(a1 + 1824) = *(void *)(a2 + 1824);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityStatisticsCompilation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1832)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityStatisticsCompilation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1832) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1832) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_1006FFE88(void *a1, void *a2)
{
  if (!a1) {
    return;
  }
  if (a2)
  {
    uint64_t v5 = v2;
    long long v6 = a1;
    id v17 = a2;
    id v7 = [v17 activityMoveMode];
    uint64_t v8 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType;
    if (v7 != (id)2)
    {
      v6[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType] = 0;
      sub_1003E0948();
      id v12 = [v17 activeEnergyBurned];
      id v13 = [v17 activeEnergyBurnedGoal];
      if (v6[v8]) {
        sub_1003E5BD0(v12, v13);
      }
      else {
        sub_1003E5A30(v12, v13);
      }

      long long v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy);
      id v16 = v15;
      sub_1003E5D44(v15);

      long long v14 = v16;
      goto LABEL_17;
    }
    v6[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType] = 1;
    sub_1003E0948();
    id v9 = [v17 appleMoveMinutes];
    id v10 = [v17 appleMoveMinutesGoal];
    if (v6[v8]) {
      sub_1003E5BD0(v9, v10);
    }
    else {
      sub_1003E5A30(v9, v10);
    }
  }
  else
  {
    uint64_t v11 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType;
    *((unsigned char *)a1 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType) = 0;
    id v17 = a1;
    sub_1003E0948();
    if (*((unsigned char *)a1 + v11)) {
      sub_1003E5BD0(0, 0);
    }
    else {
      sub_1003E5A30(0, 0);
    }
  }
  long long v14 = v17;
LABEL_17:
}

Class sub_1007000F0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v225 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v225);
  id v226 = (char *)&v221 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v7 - 8);
  id v224 = (char *)&v221 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  uint64_t v11 = (char *)&v221 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v14 = (char *)&v221 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v221 - v16;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v223 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v20 = (unint64_t)&v221 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = IndexPath.section.getter();
  char v22 = sub_100228650(v21);
  if (v22 != 11)
  {
    uint64_t v222 = v9;
    os_log_t v229 = v3;
    id v231 = 0;
    unint64_t v232 = 0xE000000000000000;
    LOBYTE(v230) = v22;
    _print_unlocked<A, B>(_:_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v26.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    uint64_t v27 = (objc_class *)[a1 dequeueReusableCellWithIdentifier:v25 forIndexPath:v26.super.isa];

    os_log_t v28 = v229;
    switch(v29)
    {
      case 1:
        type metadata accessor for DayViewMoveAndExerciseChartTableViewCell();
        uint64_t v41 = swift_dynamicCastClass();
        uint64_t v42 = (unsigned char *)v41;
        if (v41)
        {
          uint64_t v43 = *(Class *)((char *)&v28->isa
                         + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager);
          uint64_t v44 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager;
          uint64_t v45 = v27;
          uint64_t v46 = *(void **)(v41 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager);
          *(void *)(v41 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager) = v43;
          char v47 = v45;
          uint64_t v48 = v45;
          id v49 = v43;
          id v50 = v48;
          id v51 = v49;

          uint64_t v52 = *(void *)&v42[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartView];
          id v53 = *(id *)&v42[v44];
          if (v53) {
            id v53 = [v53 unitManager];
          }
          unint64_t v54 = *(void **)(v52 + OBJC_IVAR____TtC10FitnessApp32ActivityMoveAndExerciseChartView_unitManager);
          *(void *)(v52 + OBJC_IVAR____TtC10FitnessApp32ActivityMoveAndExerciseChartView_unitManager) = v53;

          v42[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_isToday] = *((unsigned char *)&v28->isa
                                                                                                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
          uint64_t v55 = swift_allocObject();
          *(void *)(v55 + 16) = v28;
          uint64_t v56 = (void (**)(char))&v42[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_onEditGoal];
          uint64_t v57 = *(void *)&v42[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_onEditGoal];
          *uint64_t v56 = sub_100703AFC;
          v56[1] = (void (*)(char))v55;
          uint64_t v58 = v28;
          sub_10005E5F8(v57);

          uint64_t v27 = v47;
        }
        uint64_t v59 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
        id v60 = v59;
        sub_1006FFE88(v42, v59);

        if (v42)
        {
          uint64_t v61 = *(uint64_t *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
          if (v61)
          {
            *(void *)&v42[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts] = v61;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
        }
        char v62 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
        goto LABEL_35;
      case 2:
        type metadata accessor for DayViewMoveAndExerciseChartTableViewCell();
        uint64_t v63 = swift_dynamicCastClass();
        unsigned __int8 v30 = (unsigned char *)v63;
        if (!v63) {
          goto LABEL_102;
        }
        uint64_t v64 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager);
        uint64_t v65 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager;
        char v66 = v27;
        long long v67 = *(void **)(v63 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager);
        *(void *)(v63 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_formattingManager) = v64;
        unint64_t v68 = v66;
        uint64_t v69 = v66;
        id v70 = v64;
        uint64_t v71 = v69;
        id v72 = v70;

        uint64_t v73 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartView];
        id v74 = *(id *)&v30[v65];
        if (v74) {
          id v74 = [v74 unitManager];
        }
        uint64_t v75 = *(void **)(v73 + OBJC_IVAR____TtC10FitnessApp32ActivityMoveAndExerciseChartView_unitManager);
        *(void *)(v73 + OBJC_IVAR____TtC10FitnessApp32ActivityMoveAndExerciseChartView_unitManager) = v74;

        v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_isToday] = *((unsigned char *)&v28->isa
                                                                                              + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
        uint64_t v76 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType;
        v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType] = 2;
        sub_1003E0948();
        uint64_t v77 = swift_allocObject();
        *(void *)(v77 + 16) = v28;
        uint64_t v78 = (void (**)(char))&v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_onEditGoal];
        uint64_t v79 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_onEditGoal];
        *uint64_t v78 = sub_100703AF4;
        v78[1] = (void (*)(char))v77;
        uint64_t v80 = v28;
        sub_10005E5F8(v79);
        uint64_t v81 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
        uint64_t v82 = *(Class *)((char *)&v80->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
        if (v82)
        {
          id v83 = [v82 appleExerciseTime];
          char v84 = *(Class *)((char *)&v80->isa + v81);
          if (v84)
          {
            id v85 = [v84 appleExerciseTimeGoal];
            goto LABEL_83;
          }
        }
        else
        {
          id v83 = 0;
        }
        id v85 = 0;
LABEL_83:
        if (v30[v76]) {
          sub_1003E5BD0(v83, v85);
        }
        else {
          sub_1003E5A30(v83, v85);
        }

        uint64_t v172 = *(uint64_t *)((char *)&v80->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
        if (v172)
        {
          *(void *)&v30[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts] = v172;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        long long v173 = *(Class *)((char *)&v80->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
        if (v173)
        {
          Class v174 = self;
          long long v175 = v30;
          id v176 = v173;
          id v177 = [v174 minuteUnit];
          id v178 = [self quantityWithUnit:v177 doubleValue:(double)*(uint64_t *)&v176[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]];
        }
        else
        {
          id v183 = v30;
          id v178 = 0;
        }
        uint64_t v27 = v68;
        sub_1003E5D44(v178);

LABEL_102:
        unsigned __int8 v40 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
        goto LABEL_103;
      case 3:
        type metadata accessor for DayViewStandChartTableViewCell();
        uint64_t v86 = swift_dynamicCastClass();
        unsigned __int8 v30 = (unsigned char *)v86;
        if (!v86) {
          goto LABEL_99;
        }
        *(unsigned char *)(v86 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_isToday) = *((unsigned char *)&v28->isa
                                                                                                 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
        uint64_t v87 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
        id v88 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
        if (v88)
        {
          uint64_t v89 = v27;
          id v88 = [v88 appleStandHours];
          uint64_t v90 = *(Class *)((char *)&v28->isa + v87);
          if (v90)
          {
            id v91 = [v90 appleStandHoursGoal];
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v170 = v27;
        }
        id v91 = 0;
LABEL_87:
        sub_100233380(v88, v91);

        if (*(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData)) {
          uint64_t v171 = swift_bridgeObjectRetain();
        }
        else {
          uint64_t v171 = 0;
        }
        *(void *)&v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = v171;
        swift_bridgeObjectRelease();
        sub_100232650();
        v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_isWheelchair] = (*(unsigned char **)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider))[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
        sub_100232480();
        uint64_t v179 = swift_allocObject();
        *(void *)(v179 + 16) = v28;
        id v180 = (void (**)(char))&v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_onEditGoal];
        uint64_t v181 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_onEditGoal];
        char *v180 = sub_100703AB4;
        v180[1] = (void (*)(char))v179;
        id v182 = v28;
        sub_10005E5F8(v181);

LABEL_99:
        unsigned __int8 v40 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell;
LABEL_103:
        uint64_t v184 = *v40;
        long long v108 = *(Class *)((char *)&v28->isa + v184);
        *(Class *)((char *)&v28->isa + v184) = (Class)v30;
LABEL_104:

        return v27;
      case 4:
        type metadata accessor for DayViewStepsAndDistanceTableViewCell();
        uint64_t v92 = swift_dynamicCastClass();
        uint64_t v42 = (unsigned char *)v92;
        if (v92)
        {
          *(unsigned char *)(v92 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair) = (*(unsigned char **)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider))[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
          char v93 = v27;
          sub_100610698();

          uint64_t v94 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
          if (v94)
          {
            id v95 = v94;
            unint64_t v96 = v42;
            uint64_t v97 = v27;
            id v98 = [v95 stepCount];
            id v99 = [v95 _pushCount];
            id v100 = [v95 distanceWalkingRunning];
            sub_100611530(v98, v99, v100, *(void **)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager));

            uint64_t v27 = v97;
          }
        }
        char v62 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell;
        goto LABEL_35;
      case 5:
        type metadata accessor for DayViewFlightsTableViewCell();
        uint64_t v42 = (unsigned char *)swift_dynamicCastClass();
        if (v42)
        {
          uint64_t v101 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
          uint64_t v102 = v27;
          if (v101)
          {
            id v103 = v101;
            uint64_t v104 = v42;
            uint64_t v105 = v27;
            id v106 = [v103 _flightsClimbed];
            sub_1002C2CA8(v106);

            uint64_t v27 = v105;
          }
        }
        char v62 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell;
LABEL_35:
        uint64_t v107 = *v62;
        long long v108 = *(Class *)((char *)&v28->isa + v107);
        *(Class *)((char *)&v28->isa + v107) = (Class)v42;
        goto LABEL_104;
      case 6:
        type metadata accessor for DayViewRingsConfigurationCell();
        unsigned __int8 v30 = (unsigned char *)swift_dynamicCastClass();
        if (v30)
        {
          uint64_t v109 = swift_allocObject();
          swift_unknownObjectWeakInit();
          long long v110 = (void (**)())&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
          long long v111 = v27;
          uint64_t v112 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
          int *v110 = sub_100703A94;
          v110[1] = (void (*)())v109;
          char v113 = v111;
          uint64_t v114 = v111;
          sub_10005E5F8(v112);
          uint64_t v115 = swift_allocObject();
          swift_unknownObjectWeakInit();
          unsigned __int8 v116 = (void (**)())&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
          uint64_t v117 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
          *unsigned __int8 v116 = sub_100703A9C;
          v116[1] = (void (*)())v115;
          sub_10005E5F8(v117);
          uint64_t v118 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v119 = (void (**)())&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
          uint64_t v120 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
          *uint64_t v119 = sub_100703AA4;
          v119[1] = (void (*)())v118;
          sub_10005E5F8(v120);
          uint64_t v121 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v122 = (void (**)())&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
          uint64_t v123 = *(void *)&v30[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
          *uint64_t v122 = sub_100703AAC;
          v122[1] = (void (*)())v121;
          sub_10005E5F8(v123);
          uint64_t v124 = *(uint64_t *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
          char v125 = *(Class *)((char *)&v28->isa
                          + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
          if (v124) {
            char v126 = [v125 isPausedForActivitySummary:v124];
          }
          else {
            char v126 = [v125 isPausedForActivitySummaryCacheIndex:*(Class *)((char *)&v28->isa+ OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex)];
          }
          sub_1004A6514(v126);

          uint64_t v27 = v113;
        }
        unsigned __int8 v40 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell;
        goto LABEL_103;
      case 7:
        type metadata accessor for WorkoutsListTableViewCell();
        uint64_t v127 = (char *)swift_dynamicCastClass();
        id v221 = v27;
        if (v127) {
          uint64_t v128 = v27;
        }
        unint64_t v129 = *(unint64_t *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
        if (!v129) {
          goto LABEL_129;
        }
        swift_bridgeObjectRetain();
        uint64_t v130 = IndexPath.row.getter();
        uint64_t v131 = v130;
        if (v129 >> 62)
        {
          swift_bridgeObjectRetain();
          os_log_t v28 = (os_log_t)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v131 < (uint64_t)v28) {
            goto LABEL_44;
          }
        }
        else
        {
          os_log_t v28 = *(os_log_t *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v130 < (uint64_t)v28)
          {
LABEL_44:
            unint64_t v132 = IndexPath.row.getter();
            if ((v129 & 0xC000000000000001) != 0) {
              goto LABEL_133;
            }
            os_log_t v133 = v229;
            if ((v132 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v132 < *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              unint64_t v134 = (unint64_t)*(id *)(v129 + 8 * v132 + 32);
              goto LABEL_48;
            }
            __break(1u);
            goto LABEL_136;
          }
        }
        swift_bridgeObjectRelease();
        os_log_type_t v198 = static os_log_type_t.error.getter();
        id v199 = HKLogActivity;
        uint64_t v200 = v222;
        uint64_t v201 = v228;
        (*(void (**)(char *, uint64_t, uint64_t))(v222 + 16))(v17, a2, v228);
        os_log_type_t v202 = v198;
        if (os_log_type_enabled(v199, v198))
        {
          os_log_t v229 = v199;
          uint64_t v203 = swift_slowAlloc();
          id v231 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v203 = 136315394;
          uint64_t v204 = _typeName(_:qualified:)();
          uint64_t v230 = sub_10008F1F4(v204, v205, (uint64_t *)&v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v203 + 12) = 2048;
          uint64_t v206 = IndexPath.row.getter();
          (*(void (**)(char *, uint64_t))(v200 + 8))(v17, v201);
          uint64_t v230 = v206;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_t v207 = v229;
          _os_log_impl((void *)&_mh_execute_header, v229, v202, "%s Attempted to access workout with index: %ld however index was out of range.", (uint8_t *)v203, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_126;
        }
        id v208 = *(void (**)(char *, uint64_t))(v200 + 8);
        id v209 = v199;
        v208(v17, v201);

        goto LABEL_129;
      case 8:
        type metadata accessor for MindfulnessSessionListTableViewCell();
        uint64_t v127 = (char *)swift_dynamicCastClass();
        if (v127) {
          objc_super v137 = v27;
        }
        unint64_t v134 = *(unint64_t *)((char *)&v28->isa
                                   + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels);
        if (!v134)
        {

          return v27;
        }
        id v221 = v27;
        swift_bridgeObjectRetain();
        uint64_t v138 = IndexPath.row.getter();
        objc_super v139 = (void *)v138;
        if (v134 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v140 = (void *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if ((uint64_t)v139 < (uint64_t)v140)
          {
LABEL_57:
            unint64_t v141 = IndexPath.row.getter();
            if ((v134 & 0xC000000000000001) == 0)
            {
              if ((v141 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v141 < *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v142 = *(id *)(v134 + 8 * v141 + 32);
LABEL_61:
                uint64_t v143 = v142;
                swift_bridgeObjectRelease();
                if (v127)
                {
                  [v127 setSelectionStyle:0];
                  unint64_t v144 = *(char **)((char *)&v28->isa
                                  + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext);
                  unint64_t v145 = *(Class *)((char *)&v28->isa
                                  + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionFormattingManager);
                  uint64_t v146 = swift_allocObject();
                  swift_unknownObjectWeakInit();
                  unint64_t v147 = v127;
                  swift_retain();
                  sub_100536384(v143, v144, v145, (uint64_t)sub_1001D7D10, v146);

                  swift_release_n();
                }
                else
                {
                }
                return v221;
              }
              __break(1u);
              goto LABEL_139;
            }
LABEL_136:
            id v142 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v140 = *(void **)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v138 < (uint64_t)v140) {
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        os_log_type_t v210 = static os_log_type_t.error.getter();
        id v211 = HKLogActivity;
        uint64_t v212 = v222;
        uint64_t v213 = v228;
        (*(void (**)(char *, uint64_t, uint64_t))(v222 + 16))(v14, a2, v228);
        os_log_type_t v214 = v210;
        if (os_log_type_enabled(v211, v210))
        {
          os_log_t v229 = v211;
          uint64_t v215 = swift_slowAlloc();
          id v231 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v215 = 136315394;
          uint64_t v216 = _typeName(_:qualified:)();
          uint64_t v230 = sub_10008F1F4(v216, v217, (uint64_t *)&v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v215 + 12) = 2048;
          uint64_t v218 = IndexPath.row.getter();
          (*(void (**)(char *, uint64_t))(v212 + 8))(v14, v213);
          uint64_t v230 = v218;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_t v207 = v229;
          _os_log_impl((void *)&_mh_execute_header, v229, v214, "%s Attempted to access mindfulness session with index: %ld however index was out of range.", (uint8_t *)v215, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_126:
          swift_slowDealloc();
        }
        else
        {
          id v219 = *(void (**)(char *, uint64_t))(v212 + 8);
          os_log_t v207 = v211;
          v219(v14, v213);
        }

LABEL_129:
        return v221;
      case 9:
        type metadata accessor for AchievementsListTableViewCell();
        unint64_t v148 = (void *)swift_dynamicCastClass();
        id v221 = v27;
        if (v148) {
          unint64_t v149 = v27;
        }
        uint64_t v150 = IndexPath.row.getter();
        uint64_t v151 = v150;
        uint64_t v127 = (char *)OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
        unint64_t v152 = *(unint64_t *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
        if (v152 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v151 < v18)
          {
LABEL_68:
            unint64_t v20 = *(void *)&v127[(void)v28];
            swift_bridgeObjectRetain();
            unint64_t v153 = IndexPath.row.getter();
            if ((v20 & 0xC000000000000001) == 0)
            {
              if ((v153 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v153 < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v154 = *(id *)(v20 + 8 * v153 + 32);
LABEL_72:
                uint64_t v155 = v154;
                swift_bridgeObjectRelease();
                if (v148)
                {
                  [v148 setSelectionStyle:0];
                  uint64_t v156 = *(Class *)((char *)&v28->isa
                                  + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory);
                  uint64_t v157 = *(Class *)((char *)&v28->isa
                                  + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider);
                  id v158 = v148;
                  sub_100223998(v155, v156, v157);
                  sub_1000AFA94((uint64_t *)&unk_10096AA70);
                  id v159 = v155;
                  LocalizedStringResource.init(stringLiteral:)();
                  unint64_t v160 = (void *)EntityProperty<>.init(title:)();
                  id v161 = v159;
                  swift_retain();
                  LOBYTE(v231) = [v161 unearned] ^ 1;
                  EntityProperty.wrappedValue.setter();

                  swift_release();
                  id v231 = _swiftEmptyArrayStorage;
                  sub_1003915D0();
                  sub_1000AFA94((uint64_t *)&unk_10096AA80);
                  sub_1001B5C10();
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  id v231 = v160;
                  unint64_t v232 = (unint64_t)v161;
                  id v162 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
                  sub_1000818CC();
                  unint64_t v163 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
                  UIView.annotate(with:)();
                }
                else
                {
                }
                return v221;
              }
              __break(1u);
LABEL_133:
              unint64_t v134 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              os_log_t v133 = v229;
LABEL_48:
              swift_bridgeObjectRelease();
              if (v127) {
                [v127 setSelectionStyle:0];
              }
              if (AAUIShouldUseNewTrophyCase())
              {
                sub_10007E4EC((Class *)((char *)&v133->isa+ OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider), *(uint64_t *)((char *)&v133[3].isa+ OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider));
                id v135 = [(id)v134 UUID];
                static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                UUID.uuidString.getter();
                (*(void (**)(unint64_t, uint64_t))(v223 + 8))(v20, v18);
                unint64_t v136 = dispatch thunk of AAUIAwardsDataProviding.achievements(forWorkoutIdentifier:)();
                swift_bridgeObjectRelease();
              }
              else
              {
                unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage;
              }
              uint64_t v27 = v221;
              if (v127)
              {
                v26.super.Class isa = v221;
                objc_super v139 = *(Class *)((char *)&v229->isa
                                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext);
                uint64_t v140 = *(Class *)((char *)&v229->isa
                                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager);
                if (v136 >> 62)
                {
LABEL_139:
                  id v220 = v127;
                  swift_bridgeObjectRetain();
                  uint64_t v185 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v185 = *(void *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  id v186 = v127;
                }
                swift_bridgeObjectRelease();
                sub_1001B430C((void *)v134, v139, v140, v185, 1, 0, 0);

                return v26.super.isa;
              }
              else
              {

                swift_bridgeObjectRelease();
              }
              return v27;
            }
            id v154 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v18 = *(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v150 < v18) {
            goto LABEL_68;
          }
        }
        os_log_type_t v187 = static os_log_type_t.error.getter();
        id v188 = HKLogActivity;
        uint64_t v189 = v222;
        uint64_t v190 = v228;
        (*(void (**)(char *, uint64_t, uint64_t))(v222 + 16))(v11, a2, v228);
        os_log_type_t v191 = v187;
        if (os_log_type_enabled(v188, v187))
        {
          os_log_t v229 = v188;
          uint64_t v192 = swift_slowAlloc();
          id v231 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v192 = 136315394;
          uint64_t v193 = _typeName(_:qualified:)();
          uint64_t v230 = sub_10008F1F4(v193, v194, (uint64_t *)&v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v192 + 12) = 2048;
          uint64_t v195 = IndexPath.row.getter();
          (*(void (**)(char *, uint64_t))(v189 + 8))(v11, v190);
          uint64_t v230 = v195;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_t v196 = v229;
          _os_log_impl((void *)&_mh_execute_header, v229, v191, "%s Attempted to access achievement with index: %ld however index was out of range.", (uint8_t *)v192, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          id v197 = *(void (**)(char *, uint64_t))(v189 + 8);
          os_log_t v196 = v188;
          v197(v11, v190);
        }

        return v221;
      case 10:
        type metadata accessor for AddToYourRingTableViewCell();
        unint64_t v164 = (void *)swift_dynamicCastClass();
        unint64_t v165 = *(Class *)((char *)&v28->isa
                        + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
        if (v164)
        {
          unint64_t v166 = v27;
          if (v165)
          {
            unint64_t v167 = v166;
            id v168 = v165;
            id v169 = v164;
            sub_100334964(v168);

            return v167;
          }
        }
        else if (v165)
        {
          return v27;
        }

        return v27;
      default:
        type metadata accessor for DayViewActivityRingsTableViewCell();
        unsigned __int8 v30 = (unsigned char *)swift_dynamicCastClass();
        if (v30)
        {
          uint64_t v31 = *(uint64_t *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex);
          uint64_t v32 = *(Class *)((char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
          long long v33 = v27;
          long long v34 = *(Class *)((char *)&v28->isa
                         + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
          int v35 = *((unsigned __int8 *)&v28->isa
                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
          char v36 = *((unsigned char *)&v28->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
          id v37 = v32;
          long long v38 = v33;
          long long v39 = v34;
          uint64_t v27 = v33;
          sub_1003AF2A4(v31, v32, v39, v35, v36);

          v30[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = (*(unsigned char **)((char *)&v229->isa + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider))[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
          sub_1003ADC58();

          os_log_t v28 = v229;
        }
        unsigned __int8 v40 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell;
        goto LABEL_103;
    }
  }
  id v23 = objc_allocWithZone((Class)UITableViewCell);

  return (Class)[v23 init];
}

void sub_100701AA4(char a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:6 goalType:0 editTodayOnly:a1 & 1];
  id v4 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v3];
  [a2 presentViewController:v4 animated:1 completion:0];
}

void sub_100701B4C(char a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:6 goalType:1 editTodayOnly:a1 & 1];
  id v4 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v3];
  [a2 presentViewController:v4 animated:1 completion:0];
}

void sub_100701BF4(char a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:6 goalType:2 editTodayOnly:a1 & 1];
  id v4 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v3];
  [a2 presentViewController:v4 animated:1 completion:0];
}

void sub_100701C9C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    id v2 = [objc_allocWithZone((Class)CHASActivitySetupViewController) initWithPresentationContext:6];
    id v3 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v2];
    [v1 presentViewController:v3 animated:1 completion:0];
  }
}

void sub_100701D58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    id v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
    char v3 = *(unsigned char *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
    char v4 = *(unsigned char *)(*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                  + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
    uint64_t v5 = sub_10042DC30(v2, v3, v4, 1);
    [v1 presentViewController:v5 animated:1 completion:0];
  }
}

void sub_100701E44()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    id v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
    char v3 = *(unsigned char *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
    char v4 = *(unsigned char *)(*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                  + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
    uint64_t v5 = sub_10042DC30(v2, v3, v4, 0);
    [v1 presentViewController:v5 animated:1 completion:0];
  }
}

void sub_100701F30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);

    [v2 unpauseRingsWithCompletionHandler:0];
  }
}

id sub_1007020C4(void *a1, uint64_t a2)
{
  switch(sub_100228650(a2))
  {
    case 7u:
      unint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
      if (!v4) {
        goto LABEL_27;
      }
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v22) {
          goto LABEL_27;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_27;
      }
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v5];

      if (v6)
      {
        type metadata accessor for ActivityTileSectionHeader();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7) {
          goto LABEL_21;
        }
      }
      break;
    case 8u:
      unint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels);
      if (!v8) {
        goto LABEL_27;
      }
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v23) {
          goto LABEL_27;
        }
      }
      else if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_27;
      }
      NSString v9 = String._bridgeToObjectiveC()();
      id v6 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v9];

      if (v6)
      {
        type metadata accessor for ActivityTileSectionHeader();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7) {
          goto LABEL_21;
        }
      }
      break;
    case 9u:
      unint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v21) {
          goto LABEL_27;
        }
      }
      else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_27;
      }
      NSString v11 = String._bridgeToObjectiveC()();
      id v6 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v11];

      if (v6)
      {
        type metadata accessor for ActivityTileSectionHeader();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7) {
          goto LABEL_21;
        }
      }
      break;
    case 0xAu:
      NSString v12 = String._bridgeToObjectiveC()();
      id v6 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v12];

      if (v6)
      {
        type metadata accessor for ActivityTileSectionHeader();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7)
        {
LABEL_21:
          uint64_t v13 = v7;
          long long v14 = self;
          id v15 = v6;
          id v16 = [v14 mainBundle];
          NSString v17 = String._bridgeToObjectiveC()();
          id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel);
          NSString v20 = String._bridgeToObjectiveC()();
          [v19 setText:v20];

          [*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel) setText:0];
          sub_10056F64C(18.0);

          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
LABEL_27:
      id v6 = 0;
      break;
  }
  return v6;
}

void sub_100702934(void *a1)
{
  uint64_t v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  uint64_t v5 = IndexPath.section.getter();
  int v6 = sub_100228650(v5);
  if (v6 != 9)
  {
    if (v6 != 8)
    {
      if (v6 != 7) {
        return;
      }
      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
      if (!v7) {
        return;
      }
      swift_bridgeObjectRetain();
      unint64_t v8 = IndexPath.row.getter();
      if ((v7 & 0xC000000000000001) != 0)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v71 = v9;
        swift_bridgeObjectRelease();
        unint64_t v10 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]
                       + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore);
        id v11 = objc_allocWithZone((Class)FIUIModel);
        id v73 = v10;
        id v72 = [v11 initWithHealthStore:];
        if (v72)
        {
          NSString v12 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
          uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager];
          long long v14 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider];
          id v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory];
          id v16 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager];
          NSString v17 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider];
          id v67 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator];
          id v68 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider];
          id v70 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager];
          uint64_t v69 = type metadata accessor for CHAwardsDataProvider();
          sub_10008E75C((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider], (uint64_t)v75);
          uint64_t v19 = v76;
          uint64_t v18 = v77;
          uint64_t v20 = sub_1000DDC00((uint64_t)v75, v76);
          uint64_t v65 = &v62;
          __n128 v21 = __chkstk_darwin(v20);
          uint64_t v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v24 + 16))(v23, v21);
          id v66 = v12;
          id v64 = v13;
          id v74 = v14;
          id v25 = v15;
          id v26 = v16;
          id v27 = v17;
          id v62 = v27;
          id v28 = v67;
          id v63 = v28;
          id v29 = v68;
          id v67 = v29;
          id v30 = v70;
          id v68 = v30;
          id v31 = sub_1002224CC((uint64_t)v23, v69, v19, v18);
          id v70 = v31;
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v75);
          id v32 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
          id v33 = v71;
          LOBYTE(v61) = 1;
          id v60 = v30;
          id v58 = v28;
          id v59 = v29;
          id v57 = v27;
          int v35 = v72;
          long long v34 = v73;
          char v36 = v66;
          id v37 = v64;
          id v38 = [v32 initWithWorkout:v33 workoutActivity:0 healthStore:v73 model:v72 fitnessAppContext:v66 workoutFormattingManager:v64 workoutDataProvider:v74 badgeImageFactory:v25 friendListManager:v26 achievementLocalizationProvider:v57 pauseRingsCoordinator:v58 achievementResourceProvider:v59 formattingManager:v60 awardsDataProvider:v31 shouldExposeDeepLinkToTrainingLoadFromEffort:v61];
          id v71 = v33;

          if (v38)
          {
            [v38 setEdgesForExtendedLayout:0];
            id v39 = [v2 navigationController];
            [v39 pushViewController:v38 animated:1];
          }
          return;
        }
LABEL_40:
        __break(1u);
        return;
      }
      if ((v8 & 0x8000000000000000) == 0)
      {
        if (v8 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v9 = *(id *)(v7 + 8 * v8 + 32);
          goto LABEL_9;
        }
        goto LABEL_35;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels];
    if (!v7) {
      return;
    }
    swift_bridgeObjectRetain();
    unint64_t v50 = IndexPath.row.getter();
    if ((v7 & 0xC000000000000001) != 0)
    {
      id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v50 & 0x8000000000000000) != 0) {
        goto LABEL_34;
      }
      if (v50 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      id v51 = *(id *)(v7 + 8 * v50 + 32);
    }
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    id v53 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
    unint64_t v54 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionFormattingManager];
    objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
    id v74 = v52;
    uint64_t v55 = sub_10039EDA8(v74, v53, v54);
    [v55 setEdgesForExtendedLayout:0];
    id v56 = [v2 navigationController];
    [v56 pushViewController:v55 animated:1];

LABEL_26:
    id v49 = v74;
    goto LABEL_27;
  }
  Class v40 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v74 = [a1 cellForRowAtIndexPath:v40];

  if (!v74) {
    return;
  }
  type metadata accessor for AchievementsListTableViewCell();
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41) {
    goto LABEL_26;
  }
  uint64_t v7 = v41;
  uint64_t v42 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards];
  swift_bridgeObjectRetain();
  unint64_t v43 = IndexPath.row.getter();
  if ((v42 & 0xC000000000000001) != 0)
  {
LABEL_37:
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if ((v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v43 >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v44 = *(id *)(v42 + 8 * v43 + 32);
LABEL_19:
  id v73 = v44;
  swift_bridgeObjectRelease();
  [*(id *)(v7 + OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementBadgeView) frame];
  sub_100576CF4(v73, (char *)v7, v45, v46, v47, v48);

  id v49 = v73;
LABEL_27:
}

uint64_t sub_1007030D0(uint64_t a1)
{
  uint64_t v2 = sub_100228650(a1);
  uint64_t result = 0;
  switch(v2)
  {
    case 1:
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
      int v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
      if (v5) {
        unsigned int v7 = [v6 isPausedForActivitySummary:v5];
      }
      else {
        unsigned int v7 = [v6 isPausedForActivitySummaryCacheIndex:*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex)];
      }
      return v7 ^ 1;
    case 2:
    case 3:
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary)) {
        return 0;
      }
      unint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
      if (*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
      {
        if (!objc_msgSend(v4, "isPausedForActivitySummary:")) {
          return 1;
        }
      }
      else if (([v4 isPausedForActivitySummaryCacheIndex:*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex)] & 1) == 0)
      {
        return 1;
      }
      return 0;
    case 4:
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary) != 1) {
        return 1;
      }
      return ~*(unsigned __int8 *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                                 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser) & 1;
    case 5:
      return *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsClimbedEnabled) == 1
          && *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                      + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser) != 1;
    case 6:
      return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
    case 7:
      unint64_t v8 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
      goto LABEL_16;
    case 8:
      unint64_t v8 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
LABEL_16:
      unint64_t v9 = *(void *)(v1 + *v8);
      if (!v9) {
        return 0;
      }
      if (!(v9 >> 62)) {
        return *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
LABEL_33:
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      return v11;
    case 9:
      unint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
      if (!(v9 >> 62)) {
        return *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      goto LABEL_33;
    case 10:
      unint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
      if (*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
      {
        if (objc_msgSend(v10, "isPausedForActivitySummary:")) {
          return 0;
        }
      }
      else if ([v10 isPausedForActivitySummaryCacheIndex:*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex)])
      {
        return 0;
      }
      return *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController) != 0;
    case 11:
      return result;
    default:
      return 1;
  }
}

double sub_1007033B4(uint64_t a1)
{
  double v2 = 0.0;
  switch(sub_100228650(a1))
  {
    case 7u:
      char v3 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
      goto LABEL_4;
    case 8u:
      char v3 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
LABEL_4:
      unint64_t v4 = *(void *)(v1 + *v3);
      if (!v4) {
        return v2;
      }
      if (v4 >> 62)
      {
LABEL_16:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_8:
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v5) {
        return UITableViewAutomaticDimension;
      }
      else {
        return 0.0;
      }
    case 9u:
      unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
      if (!(v4 >> 62)) {
        goto LABEL_8;
      }
      goto LABEL_16;
    case 0xAu:
      unsigned int v7 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
      if (v7)
      {
        id v8 = v7;
        sub_1006EBFDC();
        double v10 = v9;

        if (v10 > 0.0) {
          return UITableViewAutomaticDimension;
        }
      }
      return v2;
    default:
      return v2;
  }
}

void sub_100703500(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = IndexPath.section.getter();
  switch(sub_100228650(v4))
  {
    case 1u:
      uint64_t v9 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell))
      {
        type metadata accessor for DayViewMoveAndExerciseChartTableViewCell();
        uint64_t v10 = swift_dynamicCastClass();
        if (v10) {
          id v11 = a1;
        }
        *(void *)(v2 + v9) = v10;
        if (v10)
        {
          *(void *)(v10 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v12 = *(void *)(v2 + v9);
          if (v12)
          {
            uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
            if (v13)
            {
              uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC10FitnessApp17ActivityChartData_moveData);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v14 = 0;
            }
            *(void *)(v12 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData) = v14;
            swift_bridgeObjectRelease();
          }
        }
      }
      break;
    case 2u:
      uint64_t v15 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell))
      {
        type metadata accessor for DayViewMoveAndExerciseChartTableViewCell();
        uint64_t v16 = swift_dynamicCastClass();
        if (v16) {
          id v17 = a1;
        }
        *(void *)(v2 + v15) = v16;
        if (v16)
        {
          *(void *)(v16 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v18 = *(void *)(v2 + v15);
          if (v18)
          {
            uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData)
                ? swift_bridgeObjectRetain()
                : 0;
            *(void *)(v18 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData) = v19;
            swift_bridgeObjectRelease();
            id v32 = *(void **)(v2 + v15);
            if (v32)
            {
              id v33 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
              if (v33)
              {
                long long v34 = self;
                id v35 = v32;
                char v36 = v33;
                id v37 = [v34 minuteUnit];
                id v39 = [self quantityWithUnit:v37 doubleValue:(double)*(uint64_t *)&v36[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]];
              }
              else
              {
                id v38 = v32;
                id v39 = 0;
              }
              sub_1003E5D44(v39);

              goto LABEL_53;
            }
          }
        }
      }
      break;
    case 3u:
      uint64_t v20 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell))
      {
        type metadata accessor for DayViewStandChartTableViewCell();
        __n128 v21 = (char *)swift_dynamicCastClass();
        if (v21) {
          id v22 = a1;
        }
        *(void *)(v2 + v20) = v21;
        if (v21)
        {
          uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData)
              ? swift_bridgeObjectRetain()
              : 0;
          *(void *)&v21[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = v23;
          id v30 = v21;
          swift_bridgeObjectRelease();
          sub_100232650();

          id v31 = *(unsigned char **)(v2 + v20);
          if (v31)
          {
            v31[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_isWheelchair] = *(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider) + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
            id v39 = v31;
            sub_100232480();
            goto LABEL_53;
          }
        }
      }
      break;
    case 4u:
      uint64_t v24 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell))
      {
        type metadata accessor for DayViewStepsAndDistanceTableViewCell();
        id v25 = (unsigned char *)swift_dynamicCastClass();
        if (v25) {
          id v26 = a1;
        }
        *(void *)(v2 + v24) = v25;
        if (v25)
        {
          v25[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = *(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider) + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
          id v39 = v25;
          sub_100610698();
LABEL_53:
        }
      }
      break;
    case 5u:
      uint64_t v27 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell))
      {
        type metadata accessor for DayViewFlightsTableViewCell();
        uint64_t v28 = swift_dynamicCastClass();
        if (v28) {
          id v29 = a1;
        }
        *(void *)(v2 + v27) = v28;
      }
      break;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
      return;
    default:
      uint64_t v5 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell;
      if (!*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell))
      {
        type metadata accessor for DayViewActivityRingsTableViewCell();
        int v6 = (unsigned char *)swift_dynamicCastClass();
        if (v6) {
          id v7 = a1;
        }
        *(void *)(v2 + v5) = v6;
        if (v6)
        {
          v6[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = *(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider) + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
          id v8 = v6;
          sub_1003ADC58();
        }
        sub_1005767C0();
      }
      break;
  }
}

uint64_t sub_100703A5C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100703A94()
{
}

void sub_100703A9C()
{
}

void sub_100703AA4()
{
}

void sub_100703AAC()
{
}

void sub_100703AB4(char a1)
{
  sub_100701BF4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100703ABC()
{
  return swift_deallocObject();
}

void sub_100703AF4(char a1)
{
  sub_100701B4C(a1, *(void **)(v1 + 16));
}

void sub_100703AFC(char a1)
{
  sub_100701AA4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100703B58()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  qword_100998918 = result;
  return result;
}

char *sub_100703CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  id v6 = objc_allocWithZone((Class)UIView);
  id v7 = v3;
  id v8 = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v9 = [v8 layer];
  [v9 setCornerRadius:12.0];

  [v8 setClipsToBounds:1];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v5] = v8;
  uint64_t v10 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView;
  id v11 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v10] = v11;
  uint64_t v12 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView;
  id v13 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v12] = v13;
  uint64_t v14 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v14] = v15;
  uint64_t v16 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v16] = v17;
  uint64_t v18 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v18] = v19;
  uint64_t v20 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel;
  id v21 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v20] = v21;
  uint64_t v22 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView;
  id v23 = [objc_allocWithZone((Class)UIImageView) init];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v22] = v23;
  uint64_t v24 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel;
  id v25 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v24] = v25;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors] = _swiftEmptyArrayStorage;
  id v26 = &v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  *(void *)id v26 = 0;
  v26[8] = 1;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = 0;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = 0;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = 0;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = 0;
  *(void *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = 0;
  uint64_t v27 = &v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  uint64_t v28 = type metadata accessor for AppleExertionScale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  swift_unknownObjectWeakInit();

  if (a3)
  {
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  v43.receiver = v7;
  v43.super_class = (Class)type metadata accessor for WorkoutDetailActivityTableViewCell();
  id v30 = [super initWithStyle:a1 reuseIdentifier:v29];

  id v31 = self;
  id v32 = (char *)v30;
  id v33 = [v31 systemBackgroundColor];
  [v32 setBackgroundColor:v33];

  uint64_t v34 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  id v35 = *(void **)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView]];
  [v35 addSubview:*(void *)&v32[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel]];
  id v36 = v35;
  id v37 = [v31 secondarySystemGroupedBackgroundColor];
  [v36 setBackgroundColor:v37];

  id v38 = [v32 contentView];
  [v38 addSubview:*(void *)&v32[v34]];

  id v39 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v32 action:"didTapWorkoutActivity"];
  id v40 = [v32 contentView];
  [v40 addGestureRecognizer:v39];

  sub_100704560();
  return v32;
}

uint64_t sub_1007042FC()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v1 - 8);
  char v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for WorkoutDetailActivityTableViewCell();
  v14.receiver = v0;
  v14.super_class = v4;
  [super prepareForReuse];
  uint64_t v5 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 deactivateConstraints:v7];

  id v8 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  id v9 = [self secondarySystemGroupedBackgroundColor];
  [v8 setBackgroundColor:v9];

  [*(id *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView] setImage:0];
  uint64_t v10 = type metadata accessor for AppleExertionScale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  uint64_t v11 = (uint64_t)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  swift_beginAccess();
  sub_1007092FC((uint64_t)v3, v11);
  return swift_endAccess();
}

void sub_100704560()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100764D30;
  uint64_t v2 = v0;
  char v3 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView];
  id v4 = [v3 heightAnchor];
  id v5 = [v4 constraintEqualToConstant:43.0];

  *(void *)(v1 + 32) = v5;
  id v6 = v2;
  uint64_t v121 = v2;
  Class v7 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel];
  id v8 = [v7 topAnchor];
  id v9 = *(void **)&v6[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  id v119 = v9;
  id v10 = [v9 topAnchor];
  id v11 = [v8 constraintEqualToAnchor:v10 constant:12.0];

  *(void *)(v1 + 40) = v11;
  id v12 = [v7 leadingAnchor];
  id v13 = [v3 trailingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:16.0];

  *(void *)(v1 + 48) = v14;
  id v118 = v7;
  id v15 = [v7 trailingAnchor];
  id v16 = [v9 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 constant:-8.0];

  *(void *)(v1 + 56) = v17;
  uint64_t v18 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel];
  id v19 = [v18 topAnchor];
  id v20 = [v7 bottomAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v1 + 64) = v21;
  uint64_t v22 = v18;
  id v120 = v18;
  id v23 = [v18 leadingAnchor];
  id v24 = [v3 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:16.0];

  *(void *)(v1 + 72) = v25;
  id v26 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView];
  id v27 = [v26 centerYAnchor];
  uint64_t v28 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel];
  id v29 = [v28 centerYAnchor];
  id v30 = [v27 constraintEqualToAnchor:v29];

  *(void *)(v1 + 80) = v30;
  id v31 = [v26 leadingAnchor];
  id v32 = v3;
  id v116 = v3;
  id v33 = [v3 trailingAnchor];
  id v34 = [v31 constraintEqualToAnchor:v33 constant:16.0];

  *(void *)(v1 + 88) = v34;
  id v35 = [v28 topAnchor];
  id v36 = [v22 bottomAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v1 + 96) = v37;
  id v38 = [v28 leadingAnchor];
  id v39 = [v26 trailingAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:8.0];

  *(void *)(v1 + 104) = v40;
  id v41 = [v28 bottomAnchor];
  id v42 = [v119 bottomAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42 constant:-12.0];

  *(void *)(v1 + 112) = v43;
  specialized Array._endMutation()();
  *(void *)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors] = v1;
  swift_bridgeObjectRelease();
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100754580;
  id v45 = [v32 heightAnchor];
  id v46 = [v45 constraintEqualToConstant:0.0];

  *(void *)(v44 + 32) = v46;
  id v47 = [v118 topAnchor];
  id v48 = [v119 topAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v44 + 40) = v49;
  id v50 = [v118 bottomAnchor];
  id v51 = [v119 bottomAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  *(void *)(v44 + 48) = v52;
  id v53 = [v118 leadingAnchor];
  id v54 = [v119 leadingAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54 constant:8.0];

  *(void *)(v44 + 56) = v55;
  id v56 = [v120 bottomAnchor];
  id v57 = [v119 bottomAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  *(void *)(v44 + 64) = v58;
  id v59 = [v120 leadingAnchor];
  id v60 = [v118 trailingAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60 constant:8.0];

  *(void *)(v44 + 72) = v61;
  id v62 = [v120 firstBaselineAnchor];
  id v63 = [v118 firstBaselineAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v44 + 80) = v64;
  specialized Array._endMutation()();
  *(void *)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors] = v44;
  swift_bridgeObjectRelease();
  id v117 = self;
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1007545A0;
  id v66 = [v119 leadingAnchor];
  id v67 = [v121 contentView];
  id v68 = [v67 leadingAnchor];

  id v69 = [v66 constraintEqualToAnchor:v68];
  *(void *)(v65 + 32) = v69;
  id v70 = [v119 trailingAnchor];
  id v71 = [v121 contentView];
  id v72 = [v71 trailingAnchor];

  id v73 = [v70 constraintEqualToAnchor:v72];
  *(void *)(v65 + 40) = v73;
  id v74 = [v119 topAnchor];
  id v75 = [v121 contentView];
  id v76 = [v75 topAnchor];

  id v77 = [v74 constraintEqualToAnchor:v76 constant:16.0];
  *(void *)(v65 + 48) = v77;
  id v78 = [v119 bottomAnchor];
  id v79 = [v121 contentView];
  id v80 = [v79 bottomAnchor];

  id v81 = [v78 constraintEqualToAnchor:v80];
  *(void *)(v65 + 56) = v81;
  id v82 = [v116 leadingAnchor];
  id v83 = [v119 leadingAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83 constant:8.0];

  *(void *)(v65 + 64) = v84;
  id v85 = [v116 centerYAnchor];
  id v86 = [v119 centerYAnchor];
  id v87 = [v85 constraintEqualToAnchor:v86];

  *(void *)(v65 + 72) = v87;
  id v88 = [v116 widthAnchor];
  id v89 = [v88 constraintEqualToConstant:43.0];

  *(void *)(v65 + 80) = v89;
  uint64_t v90 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView];
  id v91 = [v90 centerXAnchor];
  id v92 = [v116 centerXAnchor];
  id v93 = [v91 constraintEqualToAnchor:v92];

  *(void *)(v65 + 88) = v93;
  id v94 = [v90 centerYAnchor];
  id v95 = [v116 centerYAnchor];
  id v96 = [v94 constraintEqualToAnchor:v95];

  *(void *)(v65 + 96) = v96;
  id v97 = [v120 firstBaselineAnchor];
  id v98 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel];
  id v99 = [v98 firstBaselineAnchor];
  id v100 = [v97 constraintEqualToAnchor:v99];

  *(void *)(v65 + 104) = v100;
  id v101 = [v98 leadingAnchor];
  id v102 = [v120 trailingAnchor];
  id v103 = [v101 constraintEqualToAnchor:v102 constant:8.0];

  *(void *)(v65 + 112) = v103;
  uint64_t v104 = *(void **)&v121[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel];
  id v105 = [v104 leadingAnchor];
  id v106 = [v98 trailingAnchor];
  id v107 = [v105 constraintEqualToAnchor:v106 constant:8.0];

  *(void *)(v65 + 120) = v107;
  id v108 = [v104 trailingAnchor];
  id v109 = [v119 trailingAnchor];
  id v110 = [v108 constraintLessThanOrEqualToAnchor:v109 constant:-8.0];

  *(void *)(v65 + 128) = v110;
  id v111 = [v104 firstBaselineAnchor];
  id v112 = [v120 firstBaselineAnchor];
  id v113 = [v111 constraintEqualToAnchor:v112];

  *(void *)(v65 + 136) = v113;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v117 activateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v115 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v117 activateConstraints:v115];

  swift_bridgeObjectRetain();
  Class v122 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v117 deactivateConstraints:v122];
}

void sub_100705430()
{
  uint64_t v1 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 deactivateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v3 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 activateConstraints:v3];

  id v4 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView);
  id v5 = self;
  id v6 = [v5 systemBackgroundColor];
  [v4 setBackgroundColor:v6];

  Class v7 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel);
  id v8 = [v5 secondaryLabelColor];
  [v7 setTextColor:v8];
}

void sub_1007055AC()
{
  uint64_t v1 = type metadata accessor for LocalizationFeature();
  uint64_t v78 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Class v3 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v82 = (void *)type metadata accessor for ExertionValue();
  uint64_t v79 = *(v82 - 1);
  __chkstk_darwin(v82);
  id v77 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v81 = (char *)&v70 - v6;
  uint64_t v7 = type metadata accessor for AppleExertionScale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v80 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v70 - v11;
  uint64_t v13 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v70 - v17;
  __chkstk_darwin(v19);
  id v21 = (char *)&v70 - v20;
  id v87 = &type metadata for FitnessFeatures;
  unint64_t v88 = sub_1000EAAD8();
  v86[0] = 4;
  char v22 = isFeatureEnabled(_:)();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v86);
  if ((v22 & 1) != 0 && (FIIsTinkerVegaOrFitnessJunior() & 1) == 0)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
      || *(void *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) != 83)
    {
      id v71 = v12;
      uint64_t v75 = v7;
      uint64_t v76 = v8;
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      uint64_t v27 = v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort;
      swift_beginAccess();
      sub_100709364(v27, (uint64_t)v21);
      static EffortColors.textColor(exertion:)();
      sub_10008DB18((uint64_t)v21, &qword_10094F480);
      uint64_t v28 = UIColor.init(_:)();
      uint64_t v74 = v0;
      if (qword_10094B158 != -1) {
        swift_once();
      }
      id v29 = (void *)UILabel.withFont(_:)();
      id v73 = (void *)v28;
      id v30 = (void *)UILabel.withTextColor(_:)();

      uint64_t v72 = v27;
      sub_100709364(v27, (uint64_t)v18);
      uint64_t v32 = v75;
      uint64_t v31 = v76;
      id v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      if (v70(v18, 1, v75))
      {
        sub_10008DB18((uint64_t)v18, &qword_10094F480);
        uint64_t v33 = v78;
        (*(void (**)(char *, void, uint64_t))(v78 + 104))(v3, enum case for LocalizationFeature.workout(_:), v1);
        static Localization.workoutUILocalizedString(_:feature:)();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v1);
        id v34 = v81;
        id v35 = v82;
        id v36 = v71;
      }
      else
      {
        id v36 = v71;
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v71, v18, v32);
        sub_10008DB18((uint64_t)v18, &qword_10094F480);
        id v37 = v81;
        AppleExertionScale.exertionValue.getter();
        uint64_t v38 = v31;
        id v34 = v37;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v32);
        ExertionValue.shortDescription.getter();
        id v35 = v82;
        (*(void (**)(char *, void *))(v79 + 8))(v37, v82);
      }
      NSString v39 = String._bridgeToObjectiveC()();
      [v30 setText:v39];
      swift_bridgeObjectRelease();

      id v40 = self;
      id v82 = [v40 configurationWithScale:1];
      sub_100709364(v72, (uint64_t)v15);
      if (v70(v15, 1, v32) == 1)
      {
        sub_10008DB18((uint64_t)v15, &qword_10094F480);
        NSString v41 = String._bridgeToObjectiveC()();
        id v42 = [self systemImageNamed:v41];

        id v43 = v73;
        uint64_t v44 = *(void **)(v74 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView);
        [v44 setTintColor:v73];
        id v45 = v82;
      }
      else
      {
        uint64_t v46 = v32;
        uint64_t v47 = v76;
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v80, v15, v46);
        (*(void (**)(char *, void, uint64_t))(v47 + 104))(v36, enum case for AppleExertionScale.skipped(_:), v46);
        sub_100709208(&qword_10096AB60, (void (*)(uint64_t))&type metadata accessor for AppleExertionScale);
        dispatch thunk of RawRepresentable.rawValue.getter();
        id v48 = v77;
        dispatch thunk of RawRepresentable.rawValue.getter();
        sub_100709208(qword_10096AB68, (void (*)(uint64_t))&type metadata accessor for ExertionValue);
        char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v50 = *(void (**)(char *, void *))(v79 + 8);
        v50(v48, v35);
        v50(v34, v35);
        id v51 = *(char **)(v47 + 8);
        uint64_t v76 = v47 + 8;
        id v81 = v51;
        ((void (*)(char *, uint64_t))v51)(v36, v46);
        uint64_t v52 = v74;
        if (v49)
        {
          NSString v53 = String._bridgeToObjectiveC()();
          id v54 = [self smm_systemImageNamed:v53];

          if (v54)
          {
            id v55 = [v54 imageWithRenderingMode:2];
            id v45 = v82;
            id v42 = [v55 imageWithSymbolConfiguration:v82];

            id v56 = v80;
          }
          else
          {
            id v42 = 0;
            id v56 = v80;
            id v45 = v82;
          }
          id v67 = (void (*)(char *, uint64_t))v81;
          uint64_t v44 = *(void **)(v52 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView);
          id v43 = v73;
          [v44 setTintColor:v73];
          v67(v56, v46);
        }
        else
        {
          uint64_t v84 = 0;
          unint64_t v85 = 0xE000000000000000;
          id v57 = v80;
          AppleExertionScale.exertionValue.getter();
          uint64_t v58 = ExertionValue.level.getter();
          v50(v34, v35);
          uint64_t v83 = v58;
          uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v61 = v60;
          swift_bridgeObjectRelease();
          uint64_t v84 = v59;
          unint64_t v85 = v61;
          v62._uint64_t countAndFlagsBits = 0x2E656C637269632ELL;
          v62._object = (void *)0xEC0000006C6C6966;
          String.append(_:)(v62);
          NSString v63 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v64 = [self systemImageNamed:v63];

          id v43 = v73;
          id v65 = [v40 configurationWithHierarchicalColor:v73];
          id v45 = v82;
          id v66 = [v82 configurationByApplyingConfiguration:v65];

          if (v64)
          {
            id v42 = [v64 imageWithSymbolConfiguration:v66];
          }
          else
          {
            id v42 = 0;
          }
          id v68 = (void (*)(char *, uint64_t))v81;
          uint64_t v44 = *(void **)(v52 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView);
          [v44 setTintColor:0];

          v68(v57, v46);
        }
      }
      id v69 = v42;
      [v44 setImage:v69];
    }
    else
    {
      id v25 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel);
      NSString v26 = String._bridgeToObjectiveC()();
      [v25 setText:v26];

      [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView) setImage:0];
    }
  }
  else
  {
    [*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView) setImage:0];
    id v23 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel);
    NSString v24 = String._bridgeToObjectiveC()();
    [v23 setText:v24];
  }
}

void sub_100706078()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
    || *(void *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) != 83)
  {
    uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator);
    if (v1)
    {
      uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout);
      Class v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity);
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      void v9[4] = sub_1007092E8;
      v9[5] = v4;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      void v9[2] = sub_1006B866C;
      v9[3] = &unk_1008D8350;
      uint64_t v5 = _Block_copy(v9);
      id v6 = v3;
      id v7 = v1;
      id v8 = v2;
      swift_release();
      [v7 effortForWorkout:v8 workoutActivity:v6 completion:v5];
      _Block_release(v5);
    }
  }
}

uint64_t sub_1007061D0(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1007092F4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008D83A0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100709208((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

void sub_100706504(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094F480);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    if (a2)
    {
      id v8 = a2;
      AppleExertionScale.init(quantity:)();
    }
    else
    {
      uint64_t v9 = type metadata accessor for AppleExertionScale();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    }
    uint64_t v10 = (uint64_t)v7 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort;
    swift_beginAccess();
    sub_1007092FC((uint64_t)v5, v10);
    swift_endAccess();
    sub_1007055AC();
  }
}

void sub_10070663C(void (*a1)(char *, void), void *a2, void (*a3)(char *, void), char *a4)
{
  uint64_t v5 = v4;
  id v117 = a4;
  uint64_t v112 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v112);
  uint64_t v114 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v113);
  uint64_t v111 = (uint64_t)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v115 = (uint64_t)&v110 - v12;
  uint64_t v13 = sub_1000AFA94(&qword_100959EB0);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v118 = (void *)type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v16 = *(v118 - 1);
  __chkstk_darwin(v118);
  uint64_t v18 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100959EB8);
  uint64_t v20 = *(char **)(v19 - 8);
  id v119 = (id)v19;
  id v120 = v20;
  *(void *)&double v21 = __chkstk_darwin(v19).n128_u64[0];
  id v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = [a2 workoutConfiguration:v21];
  id v25 = [v24 activityType];

  NSString v26 = &v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  id v121 = v25;
  *(void *)NSString v26 = v25;
  v26[8] = 0;
  uint64_t v27 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = a3;
  id v116 = a3;

  uint64_t v28 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = a1;
  id v29 = a1;

  id v30 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = a2;
  id v122 = a2;

  uint64_t v31 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator;
  uint64_t v32 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator];
  uint64_t v33 = v117;
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = v117;
  id v34 = v33;

  id v35 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 1, 1, v36);
  sub_100709208(&qword_100959EC0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1003982D4();
  id v37 = v118;
  Publisher.subscribe<A>(on:options:)();
  sub_10008DB18((uint64_t)v15, &qword_100959EB0);

  (*(void (**)(char *, void *))(v16 + 8))(v18, v37);
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = v29;
  sub_1000A132C(&qword_100959ED0, &qword_100959EB8);
  id v118 = v29;
  id v40 = v119;
  uint64_t v41 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*((void (**)(char *, id))v120 + 1))(v23, v40);
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = v41;
  swift_release();
  sub_100706078();
  sub_1007055AC();
  if (qword_10094B158 != -1) {
    swift_once();
  }
  id v42 = (void *)UILabel.withFont(_:)();
  id v43 = [self labelColor];
  uint64_t v44 = (void *)UILabel.withTextColor(_:)();

  id v45 = v122;
  sub_100709110(v122);
  NSString v46 = String._bridgeToObjectiveC()();
  [v44 setText:v46];

  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)UILabel.withFont(_:)();
  id v48 = self;
  id v49 = [v48 elapsedTimeColors];
  if (!v49)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v50 = v49;
  id v117 = (char *)v31;
  id v51 = [v49 nonGradientTextColor];

  [v47 setTextColor:v51];
  [v45 duration];
  NSString v52 = [v116 stringWithDuration:2];
  if (v52)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v52 = String._bridgeToObjectiveC()();
  }
  [v47 setText:v52];

  swift_bridgeObjectRelease();
  id v53 = v121;
  if (v121 == (id)83)
  {
    sub_100705430();
    return;
  }
  id v54 = [v45 workoutConfiguration];
  id v55 = [v54 locationType];

  BOOL v56 = v55 == (id)2;
  sub_1000AFA94(&qword_10094DBA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v58;
  id v59 = [v45 workoutConfiguration];
  id v60 = [v59 swimmingLocationType];

  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = v60;
  sub_100522E98(inited);
  id v61 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v63 = [v61 initWithActivityTypeIdentifier:v53 isIndoor:v56 metadata:isa];

  id v119 = v63;
  id v64 = (id)FIUIStaticWorkoutIconImage();
  if (!v64) {
    goto LABEL_24;
  }
  id v65 = v64;
  id v66 = (void (*)(char *, void))[v64 imageWithRenderingMode:2];

  id v67 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView];
  id v120 = v5;
  id v116 = v66;
  [v67 setImage:v66];
  id v68 = [v48 metricColorsForGoalTypeIdentifier:0];
  id v69 = [v68 nonGradientTextColor];

  [v67 setTintColor:v69];
  id v70 = *(void **)&v120[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView];
  id v71 = (id)FIUICircularWorkoutGradientImage();
  uint64_t v72 = v120;
  [v70 setImage:v71];

  id v73 = *(void **)&v72[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel];
  uint64_t v74 = (void *)UILabel.withFont(_:)();
  id v75 = [v48 distanceColors];
  if (!v75)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v76 = v75;
  id v77 = [v75 nonGradientTextColor];

  [v74 setTextColor:v77];
  NSString v78 = String._bridgeToObjectiveC()();
  [v74 setText:v78];

  uint64_t v79 = *(void **)&v72[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel];
  id v80 = (void *)UILabel.withFont(_:)();
  id v81 = [v48 paceColors];
  if (v81)
  {
    id v82 = v81;
    id v83 = [v81 nonGradientTextColor];

    [v80 setTextColor:v83];
    NSString v84 = String._bridgeToObjectiveC()();
    [v80 setText:v84];

    unint64_t v85 = v122;
    id v86 = [v122 distanceType];
    unint64_t v88 = v118;
    id v87 = v119;
    if (!v86)
    {
LABEL_22:
      id v104 = v88;
      id v105 = v85;
      uint64_t v106 = v115;
      sub_1001DDF38(v105, 0, 0, v104, v115);
      sub_1002C1E90(v106, v111);
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100709208((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      sub_1000AFA94((uint64_t *)&unk_10096AA80);
      sub_1000A132C((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v107 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      sub_100709208(&qword_10094EE70, (void (*)(uint64_t))type metadata accessor for WorkoutActivityEntity);
      id v108 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      id v109 = [v72 contentView];
      UIView.annotate(with:)();

      sub_1002C1F3C(v106);
      return;
    }
    id v89 = v86;
    id v90 = [v85 statisticsForType:v86];
    if (!v90)
    {
LABEL_21:

      unint64_t v85 = v122;
      goto LABEL_22;
    }
    id v91 = v90;
    id v92 = [v90 sumQuantity];
    if (!v92)
    {
LABEL_20:

      id v89 = v91;
      id v87 = v119;
      goto LABEL_21;
    }
    id v93 = v92;
    id v94 = v72;
    id v95 = sub_100708718(v92);
    [v73 setAttributedText:v95];

    if (v121 == (id)46)
    {
      id v96 = *(void **)&v117[(void)v72];
      if (!v96)
      {
LABEL_19:
        id v103 = v89;

        id v89 = v91;
        id v91 = v103;
        uint64_t v72 = v120;
        goto LABEL_20;
      }
      id v97 = (void *)swift_allocObject();
      v97[2] = v94;
      aBlock[4] = sub_100709288;
      aBlock[5] = v97;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100708670;
      void aBlock[3] = &unk_1008D82D8;
      id v98 = _Block_copy(aBlock);
      id v99 = v96;
      id v100 = v94;
      swift_release();
      [v99 swimmingPacePerHundredForWorkout:v88 workoutActivity:v122 completion:v98];
      _Block_release(v98);
      id v101 = v93;
      id v93 = v91;
      id v91 = v89;
      id v89 = v99;
    }
    else
    {
      [v122 duration];
      id v101 = sub_1007078F8((uint64_t)v93, 0, 1, v102);
      [v79 setAttributedText:v101];
    }

    goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_100707414(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - v12;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    uint64_t v16 = Notification.userInfo.getter();
    if (v16)
    {
      uint64_t v17 = v16;
      v24[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
      _DWORD v24[2] = v18;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v17 + 16) && (unint64_t v19 = sub_1000DE24C((uint64_t)v25), (v20 & 1) != 0))
      {
        sub_10008F484(*(void *)(v17 + 56) + 32 * v19, (uint64_t)&v26);
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1000DEDB4((uint64_t)v25);
      if (*((void *)&v27 + 1))
      {
        int v21 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v21 ^ 1u, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
          id v22 = [a3 UUID];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v22) = static UUID.== infix(_:_:)();
          id v23 = *(void (**)(char *, uint64_t))(v8 + 8);
          v23(v10, v7);
          if (v22)
          {
            sub_100706078();

            v23(v13, v7);
          }
          else
          {
            v23(v13, v7);
          }
          return;
        }
LABEL_13:

        sub_10008DB18((uint64_t)v6, (uint64_t *)&unk_1009555F0);
        return;
      }
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    sub_10008DB18((uint64_t)&v26, &qword_100955A00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_13;
  }
}

void sub_100707800()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity);
  if (v1
    && ((*(unsigned char *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
     || *(void *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) != 83))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      id v4 = v1;
      [v3 pushWorkoutActivity:v4];

      swift_unknownObjectRelease();
    }
  }
}

id sub_1007078F8(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType);
  if ((*(unsigned char *)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
    || (uint64_t v6 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager)) == 0)
  {
    id v29 = [self mainBundle];
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v32 = objc_allocWithZone((Class)NSAttributedString);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v32 initWithString:v33];

    return v34;
  }
  uint64_t v11 = *v5;
  id v12 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  id v13 = v6;
  id v14 = [v12 initWithActivityTypeIdentifier:v11 isIndoor:0];
  uint64_t v15 = FIUIPaceFormatForWorkoutActivityType();
  uint64_t v16 = FIUIDistanceTypeForActivityType();
  id v17 = [v13 localizedPaceStringWithDistance:a1 overDuration:v15 paceFormat:v16 distanceType:a4];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    if (v15 == 4)
    {
LABEL_5:
      id result = [v13 localizedSpeedUnitStringForActivityType:v14];
      if (result)
      {
        id v23 = result;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1000A06D0();
        uint64_t v24 = StringProtocol.localizedUppercase.getter();
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        if (qword_10094B158 != -1) {
          swift_once();
        }
        long long v27 = (void *)qword_100998918;
        uint64_t v28 = v19;
LABEL_20:
        id v59 = sub_10052463C(v28, v21, v24, v26, v27);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v59;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v21 = 0xE200000000000000;
    uint64_t v19 = 11565;
    if (v15 == 4) {
      goto LABEL_5;
    }
  }
  if (v11 == 46)
  {
    if ((a3 & 1) != 0
      || (id v35 = self,
          id v36 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&a2],
          id v37 = [v35 stringWithNumber:v36 decimalPrecision:1],
          v36,
          !v37))
    {
      uint64_t v45 = 0;
      uint64_t v47 = 0xE000000000000000;
    }
    else
    {
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      id v41 = [self mainBundle];
      NSString v42 = String._bridgeToObjectiveC()();
      id v43 = [v41 localizedStringForKey:v42 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1007509E0;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = sub_1000AA64C();
      *(void *)(v44 + 32) = v38;
      *(void *)(v44 + 40) = v40;
      uint64_t v45 = String.init(format:_:)();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
    }
    if (qword_10094B158 != -1) {
      swift_once();
    }
    id v59 = sub_10052463C(v19, v21, v45, v47, (void *)qword_100998918);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v59;
  }
  id result = [v13 unitManager];
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v48 = result;
  id v49 = [result paceDistanceUnitForDistanceType:v16];

  id result = [v13 localizedShortUnitStringForDistanceUnit:v49];
  if (result)
  {
    id v50 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A06D0();
    uint64_t v51 = StringProtocol.localizedUppercase.getter();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    id v54 = [self mainBundle];
    NSString v55 = String._bridgeToObjectiveC()();
    id v56 = [v54 localizedStringForKey:v55 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1007509E0;
    *(void *)(v57 + 56) = &type metadata for String;
    *(void *)(v57 + 64) = sub_1000AA64C();
    *(void *)(v57 + 32) = v51;
    *(void *)(v57 + 40) = v53;
    uint64_t v24 = String.init(format:_:)();
    uint64_t v26 = v58;
    swift_bridgeObjectRelease();
    if (qword_10094B158 != -1) {
      swift_once();
    }
    long long v27 = (void *)qword_100998918;
    uint64_t v28 = v19;
    goto LABEL_20;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100707F6C(void *a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    id v17 = (void *)HKLogWorkouts;
    os_log_type_t v18 = v16;
    if (os_log_type_enabled(HKLogWorkouts, v16))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v19 = v17;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_getErrorValue();
      uint64_t v21 = Error.localizedDescription.getter();
      uint64_t v47 = sub_10008F1F4(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v18, "Error loading swimming splits pace: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  if (!a1 || !a2) {
    return;
  }
  id v23 = *(void **)&a4[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager];
  uint64_t v45 = v13;
  uint64_t v46 = v9;
  if (!v23)
  {
    id v30 = a1;
    id v31 = a2;
    goto LABEL_13;
  }
  id v24 = a1;
  id v25 = a2;
  id v26 = v23;
  [v24 doubleValue];
  id v27 = [v26 stringWithDuration:1 durationFormat:];

  if (!v27)
  {
LABEL_13:
    unint64_t v42 = 0xE000000000000000;
    uint64_t v43 = 0;
    goto LABEL_14;
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v42 = v29;
  uint64_t v43 = v28;

LABEL_14:
  id v32 = [self stringWithNumber:a2 decimalPrecision:1];
  if (v32)
  {
    NSString v33 = v32;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    unint64_t v36 = 0xE000000000000000;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v44 = static OS_dispatch_queue.main.getter();
  id v37 = (void *)swift_allocObject();
  uint64_t v38 = v43;
  v37[2] = a4;
  v37[3] = v38;
  v37[4] = v42;
  v37[5] = v34;
  v37[6] = v36;
  aBlock[4] = (uint64_t)sub_1007092D8;
  aBlock[5] = (uint64_t)v37;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  void aBlock[3] = (uint64_t)&unk_1008D8328;
  uint64_t v39 = _Block_copy(aBlock);
  uint64_t v40 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100709208((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v41 = (void *)v44;
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v12);
}

void sub_1007084D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel);
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10074E640;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000AA64C();
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v14;
  *(void *)(v13 + 64) = v14;
  *(void *)(v13 + 72) = a4;
  *(void *)(v13 + 80) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v15];
}

void sub_100708670(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(a2, a3, a4);
  swift_release();
}

id sub_100708718(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager);
  if (!v2 || (uint64_t v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity)) == 0)
  {
    id v30 = [self mainBundle];
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v30 localizedStringForKey:v31 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = objc_allocWithZone((Class)NSAttributedString);
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [v33 initWithString:v34];

    return v35;
  }
  id v5 = v2;
  id v6 = v3;
  id v7 = [v6 workoutConfiguration];
  id v8 = [v7 swimmingLocationType];

  id v9 = [v6 fiui_activityType];
  uint64_t v10 = FIUIDistanceTypeForActivityType();
  id result = [v5 localizedShortUnitStringForDistanceType:v10];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v12 = result;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  uint64_t v37 = v13;
  sub_1000A06D0();
  uint64_t v16 = StringProtocol.localizedUppercase.getter();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  id result = [v5 unitManager:v37, v15];
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  id v20 = [result userDistanceUnitForDistanceType:v10];

  id v21 = [self meterUnit];
  [a1 doubleValueForUnit:v21];
  double v23 = v22;

  if (v8 == (id)1) {
    uint64_t v24 = 1;
  }
  else {
    uint64_t v24 = 2;
  }
  id v25 = [v5 localizedStringWithDistanceInMeters:v20 distanceUnit:0 unitStyle:v24 decimalPrecision:v23];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v29 = 0xE200000000000000;
    uint64_t v27 = 11565;
  }
  if (qword_10094B158 != -1) {
    swift_once();
  }
  id v36 = sub_10052463C(v27, v29, v16, v18, (void *)qword_100998918);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v36;
}

id sub_100708A60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailActivityTableViewCell();
  [super dealloc];
}

uint64_t sub_100708BEC()
{
  return type metadata accessor for WorkoutDetailActivityTableViewCell();
}

uint64_t type metadata accessor for WorkoutDetailActivityTableViewCell()
{
  uint64_t result = qword_10096AB50;
  if (!qword_10096AB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100708C40()
{
  sub_100393CA0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100708D20()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100708D5C(uint64_t a1)
{
  sub_100707414(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100708D64()
{
  uint64_t v1 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = [v2 layer];
  [v3 setCornerRadius:12.0];

  [v2 setClipsToBounds:1];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  uint64_t v4 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView;
  id v5 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v4] = v5;
  uint64_t v6 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v6] = v7;
  uint64_t v8 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v8] = v9;
  uint64_t v10 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v10] = v11;
  uint64_t v12 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel;
  id v13 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v12] = v13;
  uint64_t v14 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v14] = v15;
  uint64_t v16 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView;
  id v17 = [objc_allocWithZone((Class)UIImageView) init];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v16] = v17;
  uint64_t v18 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v18] = v19;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors] = _swiftEmptyArrayStorage;
  id v20 = &v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  *(void *)id v20 = 0;
  v20[8] = 1;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = 0;
  *(void *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = 0;
  id v21 = &v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  uint64_t v22 = type metadata accessor for AppleExertionScale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100709110(void *a1)
{
  id v2 = [a1 workoutConfiguration];
  [v2 locationType];

  id v3 = [a1 workoutConfiguration];
  [v3 activityType];

  id v4 = [a1 workoutConfiguration];
  [v4 swimmingLocationType];

  id result = (id)FILocalizedNameForActivityType();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100709208(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100709250()
{
  return swift_deallocObject();
}

void sub_100709288(void *a1, void *a2, uint64_t a3)
{
  sub_100707F6C(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t sub_100709290()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1007092D8()
{
  sub_1007084D0(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1007092E8(void *a1)
{
  return sub_1007061D0(a1);
}

void sub_1007092F4()
{
  sub_100706504(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1007092FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100709364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007093E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ChartPoint();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)v19 - v12;
  v19[1] = a4;
  char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, a1, v7);
  v15(v10, a2, v7);
  if (v14) {
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  }
  else {
    char v16 = 0;
  }
  id v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v13, v7);
  return v16 & 1;
}

uint64_t sub_100709584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007093E4(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t type metadata accessor for ChartPoint()
{
  return sub_100049E84();
}

uint64_t sub_1007095A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100709638(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    id v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_100709744(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);

  return v7(v4, v3);
}

unint64_t sub_1007097E0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_100709874(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_100709908(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_10070999C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_100709A30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_100709B9C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100709DC4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        char v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

BOOL sub_100709E1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100709E28(*a1, *a2);
}

BOOL sub_100709E28(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case '\'':
      if (a2 != 39) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '(':
      if (a2 != 40) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case ')':
      if (a2 != 41) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '*':
      if (a2 != 42) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '+':
      if (a2 != 43) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case ',':
      if (a2 != 44) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '-':
      if (a2 != 45) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '.':
      if (a2 != 46) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '/':
      if (a2 != 47) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '0':
      if (a2 != 48) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '1':
      if (a2 != 49) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    case '2':
      if (a2 != 50) {
        goto LABEL_27;
      }
      BOOL result = 1;
      break;
    default:
      if (a2 - 39 >= 0xC) {
        BOOL result = a1 == a2;
      }
      else {
LABEL_27:
      }
        BOOL result = 0;
      break;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryCoordinatorEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xCE)
  {
    unsigned int v2 = a2 + 50;
    if (a2 + 50 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 50;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 50;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10070A01CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 50;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0x27) {
    unsigned int v8 = v7 - 38;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 0xD) {
    return v8 - 12;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SummaryCoordinatorEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 50;
  if (a3 + 50 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xCE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xCD)
  {
    unsigned int v7 = ((a2 - 206) >> 8) + 1;
    *BOOL result = a2 + 50;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10070A104);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *BOOL result = a2 + 50;
        break;
    }
  }
  return result;
}

uint64_t sub_10070A12C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x27) {
    return v1 - 38;
  }
  else {
    return 0;
  }
}

unsigned char *sub_10070A140(unsigned char *result, int a2)
{
  if (a2) {
    *BOOL result = a2 + 38;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryCoordinatorEvent()
{
  return &type metadata for SummaryCoordinatorEvent;
}

char *sub_10070A160(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    BOOL v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    int v11 = v5;
    uint64_t v12 = sub_1000AFA94(&qword_10096ABF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    uint64_t v13 = *(int *)(a3 + 28);
    unsigned int v14 = &a1[v13];
    int v15 = (_OWORD *)((char *)a2 + v13);
    long long v16 = v15[1];
    *(_OWORD *)unsigned int v14 = *v15;
    *((_OWORD *)v14 + 1) = v16;
  }
  return a1;
}

uint64_t sub_10070A258(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000AFA94(&qword_10096ABF0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10070A2D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  BOOL v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  id v11 = v6;
  uint64_t v12 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  uint64_t v13 = *(int *)(a3 + 28);
  unsigned int v14 = (_OWORD *)((char *)a1 + v13);
  int v15 = (_OWORD *)(a2 + v13);
  long long v16 = v15[1];
  *unsigned int v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_10070A37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 28);
  unsigned int v14 = (void *)(a1 + v13);
  int v15 = (void *)(a2 + v13);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  long long v14[2] = v15[2];
  v14[3] = v15[3];
  return a1;
}

void *sub_10070A44C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  _OWORD *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_10070A4F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  _OWORD *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_10070A5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070A5B8);
}

uint64_t sub_10070A5B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_10096ABF0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10070A66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070A680);
}

void *sub_10070A680(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *BOOL result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_10096ABF0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for EntryLinksListView()
{
  uint64_t result = qword_10096AC50;
  if (!qword_10096AC50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10070A778()
{
  sub_10070A828();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10070A828()
{
  if (!qword_10096AC60)
  {
    sub_1003ED738();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10096AC60);
    }
  }
}

uint64_t sub_10070A884()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10070A8A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for EntryLinksListView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10096AC98);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001C6C30(*(void *)(v2 + 8));
  uint64_t KeyPath = swift_getKeyPath();
  sub_10070B560(v2, (uint64_t)v7);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_10070B6BC((uint64_t)v7, v15 + v14);
  uint64_t v28 = v12;
  uint64_t v24 = &v28;
  uint64_t v25 = KeyPath;
  id v26 = sub_10070B720;
  uint64_t v27 = v15;
  sub_1000AFA94(&qword_10096ACA0);
  sub_10070B7AC();
  List<>.init(content:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = v2 + *(int *)(v4 + 36);
  long long v22 = *(_OWORD *)v16;
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = *(void *)(v16 + 24);
  LOBYTE(v2) = static Edge.Set.all.getter();
  uint64_t v19 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v23, v11, v8);
  uint64_t v20 = v19 + *(int *)(sub_1000AFA94(&qword_10096ACC0) + 36);
  *(unsigned char *)uint64_t v20 = v2;
  *(_OWORD *)(v20 + 8) = v22;
  *(void *)(v20 + 24) = v17;
  *(void *)(v20 + 32) = v18;
  *(unsigned char *)(v20 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10070AB28(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EntryLinksListView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  char v7 = *a1;
  sub_10070B560(a2, (uint64_t)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_10070B6BC((uint64_t)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8);
  *(unsigned char *)(v9 + v8 + v6) = v7;
  v11[16] = v7;
  uint64_t v12 = a2;
  sub_1000AFA94(&qword_10096ACD0);
  sub_1000A132C(&qword_10096ACD8, &qword_10096ACD0);
  return Button.init(action:label:)();
}

uint64_t sub_10070ACA8()
{
  return Label.init(title:icon:)();
}

double sub_10070AD7C@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_10070AE54(a1, (uint64_t)v10);
  *(_OWORD *)((char *)&v12[6] + 7) = v10[6];
  *(_OWORD *)((char *)&v12[5] + 7) = v10[5];
  *(_OWORD *)((char *)&v12[2] + 7) = v10[2];
  *(_OWORD *)((char *)&v12[1] + 7) = v10[1];
  *(_OWORD *)((char *)&v12[7] + 7) = v10[7];
  *(void *)((char *)&v12[8] + 7) = v11;
  *(_OWORD *)((char *)&v12[3] + 7) = v10[3];
  *(_OWORD *)((char *)&v12[4] + 7) = v10[4];
  *(_OWORD *)((char *)v12 + 7) = v10[0];
  long long v5 = v12[4];
  *(_OWORD *)(a2 + 97) = v12[5];
  long long v6 = v12[7];
  *(_OWORD *)(a2 + 113) = v12[6];
  *(_OWORD *)(a2 + 129) = v6;
  *(_OWORD *)(a2 + 144) = *(_OWORD *)((char *)&v12[7] + 15);
  long long v7 = v12[0];
  *(_OWORD *)(a2 + 33) = v12[1];
  double result = *(double *)&v12[2];
  long long v9 = v12[3];
  *(_OWORD *)(a2 + 49) = v12[2];
  *(_OWORD *)(a2 + 65) = v9;
  *(_OWORD *)(a2 + 81) = v5;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 17) = v7;
  return result;
}

uint64_t sub_10070AE54@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10007CE70(a1);
  uint64_t v41 = v8;
  sub_1000A06D0();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v39 = v11;
  char v13 = v12 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  static Font.body.getter();
  uint64_t v14 = enum case for Font.Leading.tight(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v15(v7, enum case for Font.Leading.tight(_:), v4);
  uint64_t v35 = Font.leading(_:)();
  swift_release();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v7, v4);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v33 = static Color.white.getter();
  uint64_t v32 = Image.init(systemName:)();
  static Font.body.getter();
  v15(v7, v14, v4);
  uint64_t v31 = Font.leading(_:)();
  swift_release();
  v16(v7, v4);
  uint64_t v17 = swift_getKeyPath();
  id v18 = [self tertiaryLabelColor];
  uint64_t v19 = Color.init(_:)();
  uint64_t v20 = swift_getKeyPath();
  uint64_t v40 = v19;
  uint64_t v21 = AnyShapeStyle.init<A>(_:)();
  char v46 = v13;
  char v45 = 0;
  char v43 = 1;
  *(_DWORD *)(a2 + 17) = v40;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v40 + 3);
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v44;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v42[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v42;
  uint64_t v22 = v37;
  uint64_t v23 = v38;
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v13;
  uint64_t v25 = v35;
  uint64_t v24 = KeyPath;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v26 = v33;
  *(void *)(a2 + 56) = v34;
  *(void *)(a2 + 64) = v25;
  *(void *)(a2 + 72) = v26;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 1;
  *(void *)(a2 + 96) = v32;
  *(void *)(a2 + 104) = v17;
  *(void *)(a2 + 112) = v31;
  *(void *)(a2 + 120) = v20;
  *(void *)(a2 + 128) = v21;
  uint64_t v27 = v23;
  uint64_t v28 = v22;
  sub_1000A1750(v23, v22, v13);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A06C0(v27, v28, v13);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10070B1A4(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C6254(a1);
  uint64_t v8 = Image.init(_internalSystemName:)();
  static Font.body.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  uint64_t v9 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t KeyPath = swift_getKeyPath();
  id v11 = [self briskColors];
  if (v11)
  {
    char v12 = v11;
    id v13 = [v11 gradientLightColor];

    if (v13)
    {
      uint64_t v14 = Color.init(uiColor:)();
      type metadata accessor for EntryLinksListView();
      sub_1000AFA94(&qword_10096ABF0);
      ScaledMetric.wrappedValue.getter();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v15 = v19;
      char v16 = v20;
      uint64_t v17 = v21;
      char v18 = v22;
      *(void *)a2 = v8;
      *(unsigned char *)(a2 + 8) = 1;
      *(void *)(a2 + 16) = KeyPath;
      *(void *)(a2 + 24) = v9;
      *(void *)(a2 + 32) = v14;
      *(void *)(a2 + 40) = v15;
      *(unsigned char *)(a2 + 48) = v16;
      *(void *)(a2 + 56) = v17;
      *(unsigned char *)(a2 + 64) = v18;
      *(_OWORD *)(a2 + 72) = v23;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10070B3C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10070B3F4()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_10070B420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_10094E548);
  sub_1000AFA94(&qword_10096ACB8);
  sub_1000A132C(&qword_10096ACC8, &qword_10094E548);
  sub_1001C50C4();
  sub_1000A132C(&qword_10096ACB0, &qword_10096ACB8);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10070B560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EntryLinksListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070B5C4()
{
  uint64_t v1 = (int *)(type metadata accessor for EntryLinksListView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[8];
  uint64_t v4 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_10070B6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EntryLinksListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070B720(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for EntryLinksListView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10070AB28(a1, v4);
}

uint64_t sub_10070B7A0()
{
  return sub_10070B420(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_10070B7AC()
{
  unint64_t result = qword_10096ACA8;
  if (!qword_10096ACA8)
  {
    sub_1000A1370(&qword_10096ACA0);
    sub_1000A132C(&qword_10096ACB0, &qword_10096ACB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096ACA8);
  }
  return result;
}

uint64_t sub_10070B844()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10070B87C(char *a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = *a1;
  return v2(&v4);
}

uint64_t sub_10070B8B8()
{
  uint64_t v1 = (int *)(type metadata accessor for EntryLinksListView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[8];
  uint64_t v4 = sub_1000AFA94(&qword_10096ABF0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

void sub_10070B9B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for EntryLinksListView() - 8);
  sub_1003FF094(*(unsigned __int8 *)(v0
                                   + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                                   + *(void *)(v1 + 64)));
}

uint64_t sub_10070BA38()
{
  return sub_10070ACA8();
}

double sub_10070BA44@<D0>(uint64_t a1@<X8>)
{
  return sub_10070AD7C(*(unsigned char *)(v1 + 16), a1);
}

void sub_10070BA4C(uint64_t a1@<X8>)
{
  sub_10070B1A4(*(unsigned char *)(v1 + 16), a1);
}

unint64_t sub_10070BA58()
{
  unint64_t result = qword_10096ACF8;
  if (!qword_10096ACF8)
  {
    sub_1000A1370(&qword_10096ACE8);
    sub_10070BAD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096ACF8);
  }
  return result;
}

unint64_t sub_10070BAD4()
{
  unint64_t result = qword_10096AD00;
  if (!qword_10096AD00)
  {
    sub_1000A1370(&qword_10096AD08);
    sub_10070BB74();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AD00);
  }
  return result;
}

unint64_t sub_10070BB74()
{
  unint64_t result = qword_10096AD10;
  if (!qword_10096AD10)
  {
    sub_1000A1370(&qword_10096AD18);
    sub_1000E1E3C();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AD10);
  }
  return result;
}

uint64_t sub_10070BC24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10070BC50()
{
  return EnvironmentValues.tint.setter();
}

unint64_t sub_10070BC80()
{
  unint64_t result = qword_10096AD20;
  if (!qword_10096AD20)
  {
    sub_1000A1370(&qword_10096ACC0);
    sub_1000A132C(&qword_10096AD28, &qword_10096AC98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AD20);
  }
  return result;
}

void sub_10070BD20(void *a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  id v11 = [self meterUnit];
  [a1 doubleValueForUnit:v11];
  double v13 = v12;

  if (floor(v13) <= 0.0
    || (id v14 = [v5 fitnessUIFormattingManager],
        id v15 = [v14 localizedPaceStringWithDistance:a1 overDuration:a2 paceFormat:a3 distanceType:a5], v14, !v15))
  {
    id v25 = [self mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v28 = [self grayColor];
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    *(void *)(inited + 40) = v28;
    uint64_t v30 = NSForegroundColorAttributeName;
    id v31 = v28;
    sub_1000DFC2C(inited);
    id v32 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1001DCBD0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 initWithString:v33 attributes:isa];
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  id v19 = [v5 fitnessUIFormattingManager];
  char v20 = v19;
  if (a2 == 4)
  {
    id v21 = [v19 localizedSpeedUnitStringForDistanceType:a3 unitStyle:1];

    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

LABEL_14:
      sub_10052463C(v16, v18, v22, v24, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
  else
  {
    id v35 = [v19 unitManager];

    if (v35)
    {
      id v36 = [v35 paceDistanceUnitForDistanceType:a3];

      id v37 = [v5 fitnessUIFormattingManager];
      id v38 = [v37 localizedShortUnitStringForDistanceUnit:v36];

      if (v38)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v39 = FIUINumberOfUnitsInPaceForPaceFormat();
        id v40 = [self mainBundle];
        if (v39 < 2)
        {
          NSString v49 = String._bridgeToObjectiveC()();
          id v50 = [v40 localizedStringForKey:v49 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = xmmword_1007509E0;
          sub_1000A06D0();
          uint64_t v52 = StringProtocol.localizedUppercase.getter();
          uint64_t v54 = v53;
          swift_bridgeObjectRelease();
          *(void *)(v51 + 56) = &type metadata for String;
          *(void *)(v51 + 64) = sub_1000AA64C();
          *(void *)(v51 + 32) = v52;
          *(void *)(v51 + 40) = v54;
        }
        else
        {
          NSString v41 = String._bridgeToObjectiveC()();
          id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v43 = swift_allocObject();
          *(_OWORD *)(v43 + 16) = xmmword_10074E640;
          id v44 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v39];
          *(void *)(v43 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
          *(void *)(v43 + 64) = sub_1001DCC84();
          *(void *)(v43 + 32) = v44;
          sub_1000A06D0();
          uint64_t v45 = StringProtocol.localizedUppercase.getter();
          uint64_t v47 = v46;
          swift_bridgeObjectRelease();
          *(void *)(v43 + 96) = &type metadata for String;
          *(void *)(v43 + 104) = sub_1000AA64C();
          *(void *)(v43 + 72) = v45;
          *(void *)(v43 + 80) = v47;
        }
        uint64_t v22 = String.init(format:_:)();
        uint64_t v24 = v48;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v22 = 0;
        uint64_t v24 = 0xE000000000000000;
      }
      goto LABEL_14;
    }
  }
  __break(1u);
}

void *sub_10070C434(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WorkoutEffort();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    id v14 = (void *)((char *)a1 + v12);
    id v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *id v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    v17[8] = v18[8];
    *(void *)uint64_t v17 = *(void *)v18;
    uint64_t v19 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    char v20 = (void *)((char *)a1 + v19);
    id v21 = (void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *char v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10070C614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10070C758(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  id v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v18 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v19 = (void *)(a1 + v18);
  char v20 = (void *)(a2 + v18);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10070C8E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  *(unsigned char *)(v15 + 8) = *((unsigned char *)v16 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v18 = a3[9];
    uint64_t v19 = (void *)(a1 + v18);
    char v20 = (void *)(a2 + v18);
    sub_10008DB18(a1 + v18, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10070CA9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10070CC28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  if (a1 != a2)
  {
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_10008DB18(a1 + v20, &qword_10094C578);
    uint64_t v23 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10070CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070CDF4);
}

uint64_t sub_10070CDF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1000AFA94(&qword_10094C590);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_10070CF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070CF90);
}

uint64_t sub_10070CF90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for WorkoutEffort();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1000AFA94(&qword_10094C590);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for EffortGoalAndDate(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_10096AD88);
}

void sub_10070D138()
{
  type metadata accessor for WorkoutEffort();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AttributedString();
    if (v1 <= 0x3F)
    {
      sub_100008C84();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10070D258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10070D274@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = sub_1000AFA94(&qword_10096ADD0);
  __chkstk_darwin(v26);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_10096ADD8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_10096ADE0);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - v13;
  type metadata accessor for EffortGoalAndDate(0);
  uint64_t v15 = v1;
  sub_100092088((uint64_t)v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.xLarge(_:), v8);
  sub_1000A3BA8((unint64_t *)&qword_10094C6D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v16 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v17(v14, v8);
  if (v16)
  {
    *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
    *((void *)v3 + 1) = 0;
    v3[16] = 1;
    uint64_t v18 = sub_1000AFA94(&qword_10096AE00);
    sub_10070D9B4(v15, (uint64_t)&v3[*(int *)(v18 + 44)]);
    uint64_t v19 = &qword_10096ADD0;
    sub_1000AEF2C((uint64_t)v3, (uint64_t)v5, &qword_10096ADD0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_10096ADF0, &qword_10096ADE0);
    sub_1000A132C(&qword_10096ADF8, &qword_10096ADD0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v3;
  }
  else
  {
    *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
    *((void *)v7 + 1) = 0;
    v7[16] = 0;
    uint64_t v21 = sub_1000AFA94(&qword_10096ADE8);
    sub_10070D690(v15, (uint64_t)&v7[*(int *)(v21 + 44)]);
    uint64_t v19 = &qword_10096ADE0;
    sub_1000AEF2C((uint64_t)v7, (uint64_t)v5, &qword_10096ADE0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_10096ADF0, &qword_10096ADE0);
    sub_1000A132C(&qword_10096ADF8, &qword_10096ADD0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v7;
  }
  return sub_10008DB18(v20, v19);
}

uint64_t sub_10070D690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for GoalAndDate(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = type metadata accessor for EffortView(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = type metadata accessor for WorkoutEffort();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  char v16 = (int *)type metadata accessor for EffortGoalAndDate(0);
  uint64_t v17 = (uint64_t *)(a1 + v16[7]);
  uint64_t v18 = *v17;
  char v19 = *((unsigned char *)v17 + 8);
  v14[v10[7]] = *(unsigned char *)(a1 + v16[8]);
  uint64_t v20 = &v14[v10[8]];
  *(void *)uint64_t v20 = v18;
  v20[8] = v19;
  *(void *)&v14[v10[9]] = 0x4020000000000000;
  LOBYTE(v10) = WorkoutEffort.itemHasEffort.getter();
  uint64_t v21 = a1 + v16[5];
  uint64_t v22 = &v8[v4[7]];
  uint64_t v23 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
  uint64_t v24 = (uint64_t *)(a1 + v16[6]);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  *uint64_t v8 = v10 & 1;
  id v27 = &v8[v4[8]];
  *id v27 = v25;
  v27[1] = v26;
  id v28 = &v8[v4[9]];
  *(void *)id v28 = v18;
  v28[8] = v19;
  *(void *)&v8[v4[10]] = 0x4020000000000000;
  *(void *)&v8[v4[11]] = 0xC008000000000000;
  uint64_t v29 = v35;
  sub_10070E9F4((uint64_t)v14, v35, type metadata accessor for EffortView);
  uint64_t v30 = v36;
  sub_10070E9F4((uint64_t)v8, v36, type metadata accessor for GoalAndDate);
  uint64_t v31 = v37;
  sub_10070E9F4(v29, v37, type metadata accessor for EffortView);
  uint64_t v32 = sub_1000AFA94(&qword_10096AE10);
  sub_10070E9F4(v30, v31 + *(int *)(v32 + 48), type metadata accessor for GoalAndDate);
  swift_bridgeObjectRetain();
  sub_10070EA5C((uint64_t)v8, type metadata accessor for GoalAndDate);
  sub_10070EA5C((uint64_t)v14, type metadata accessor for EffortView);
  sub_10070EA5C(v30, type metadata accessor for GoalAndDate);
  return sub_10070EA5C(v29, type metadata accessor for EffortView);
}

uint64_t sub_10070D9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for GoalAndDate(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v37 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = type metadata accessor for EffortView(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v36 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for WorkoutEffort();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  char v16 = (int *)type metadata accessor for EffortGoalAndDate(0);
  uint64_t v17 = (uint64_t *)(a1 + v16[7]);
  uint64_t v18 = *v17;
  char v19 = *((unsigned char *)v17 + 8);
  v14[v10[7]] = *(unsigned char *)(a1 + v16[8]);
  uint64_t v20 = &v14[v10[8]];
  *(void *)uint64_t v20 = v18;
  v20[8] = v19;
  *(void *)&v14[v10[9]] = 0x4020000000000000;
  LOBYTE(v10) = WorkoutEffort.itemHasEffort.getter();
  uint64_t v21 = a1 + v16[5];
  uint64_t v22 = &v8[v4[7]];
  uint64_t v23 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
  uint64_t v24 = (uint64_t *)(a1 + v16[6]);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  *uint64_t v8 = v10 & 1;
  id v27 = &v8[v4[8]];
  *id v27 = v25;
  v27[1] = v26;
  id v28 = &v8[v4[9]];
  *(void *)id v28 = v18;
  v28[8] = v19;
  *(void *)&v8[v4[10]] = 0x4020000000000000;
  *(void *)&v8[v4[11]] = 0xC008000000000000;
  uint64_t v29 = v36;
  sub_10070E9F4((uint64_t)v14, v36, type metadata accessor for EffortView);
  uint64_t v30 = v37;
  sub_10070E9F4((uint64_t)v8, v37, type metadata accessor for GoalAndDate);
  uint64_t v31 = v38;
  sub_10070E9F4(v29, v38, type metadata accessor for EffortView);
  uint64_t v32 = sub_1000AFA94(&qword_10096AE08);
  uint64_t v33 = v31 + *(int *)(v32 + 48);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 0;
  sub_10070E9F4(v30, v31 + *(int *)(v32 + 64), type metadata accessor for GoalAndDate);
  swift_bridgeObjectRetain();
  sub_10070EA5C((uint64_t)v8, type metadata accessor for GoalAndDate);
  sub_10070EA5C((uint64_t)v14, type metadata accessor for EffortView);
  sub_10070EA5C(v30, type metadata accessor for GoalAndDate);
  return sub_10070EA5C(v29, type metadata accessor for EffortView);
}

uint64_t sub_10070DCEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10096AF60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10096AF68);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v9 = sub_1000AFA94(&qword_10096AF70);
  sub_10070DE94(v1, &v5[*(int *)(v9 + 44)]);
  if (WorkoutEffort.itemHasEffort.getter()) {
    type metadata accessor for EffortView(0);
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v8, &qword_10096AF60);
  uint64_t v10 = &v8[*(int *)(v6 + 36)];
  long long v11 = v13[1];
  *(_OWORD *)uint64_t v10 = v13[0];
  *((_OWORD *)v10 + 1) = v11;
  *((_OWORD *)v10 + 2) = v13[2];
  sub_10008DB18((uint64_t)v5, &qword_10096AF60);
  return sub_10070F900((uint64_t)v8, a1);
}

uint64_t sub_10070DE94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v54 = a2;
  uint64_t v3 = type metadata accessor for RedactionReasons();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  __chkstk_darwin(v3);
  NSString v55 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WorkoutItemEffortLabelView();
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100956338);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100956340);
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_10096AF78);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v48 = (char *)&v47 - v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v26 = type metadata accessor for WorkoutEffort();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v11, a1, v26);
  static Font.body.getter();
  static Font.Weight.medium.getter();
  uint64_t v27 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10070E9F4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WorkoutItemEffortLabelView);
  uint64_t v29 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v29 = KeyPath;
  v29[1] = v27;
  sub_10070EA5C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WorkoutItemEffortLabelView);
  uint64_t v30 = enum case for Font.Design.rounded(_:);
  uint64_t v31 = type metadata accessor for Font.Design();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 104))(v8, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v8, 0, 1, v31);
  unint64_t v33 = sub_1002EDB70();
  View.fontDesign(_:)();
  sub_10008DB18((uint64_t)v8, &qword_10094C448);
  sub_10008DB18((uint64_t)v14, &qword_100956338);
  uint64_t v34 = type metadata accessor for EffortView(0);
  if (*(unsigned char *)(v56 + *(int *)(v34 + 20)) == 1)
  {
    static RedactionReasons.placeholder.getter();
    uint64_t v35 = v52;
  }
  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_1000A3BA8(&qword_10096AF80, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_1000AFA94(&qword_10096AF88);
    sub_1000A132C(&qword_10096AF90, &qword_10096AF88);
    uint64_t v36 = v52;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v35 = v36;
  }
  uint64_t v57 = (void *)v12;
  unint64_t v58 = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v48;
  uint64_t v38 = v55;
  uint64_t v39 = v50;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v35);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v39);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v37, v18);
  uint64_t v40 = *(void *)(v56 + *(int *)(v34 + 28));
  NSString v41 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  id v42 = v51;
  v41(v51, v25, v18);
  uint64_t v43 = v54;
  v41(v54, v42, v18);
  id v44 = &v43[*(int *)(sub_1000AFA94(&qword_10096AF98) + 48)];
  *(void *)id v44 = v40;
  v44[8] = 0;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v19 + 8);
  v45(v25, v18);
  return ((uint64_t (*)(char *, uint64_t))v45)(v42, v18);
}

uint64_t sub_10070E4F0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = a1;
  if (*a1 == 1)
  {
    uint64_t v37 = type metadata accessor for GoalAndDate(0);
    (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 16))(v10, &v38[*(int *)(v37 + 20)], v7);
    uint64_t v15 = Text.init(_:)();
    uint64_t v17 = v16;
    uint64_t v18 = (uint64_t)v6;
    char v20 = v19 & 1;
    uint64_t v21 = enum case for Font.Design.rounded(_:);
    uint64_t v22 = type metadata accessor for Font.Design();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(v18, v21, v22);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
    uint64_t v11 = Text.fontDesign(_:)();
    uint64_t v12 = v24;
    uint64_t v14 = v25;
    uint64_t v13 = v26 & 1;
    sub_1000A06C0(v15, v17, v20);
    swift_bridgeObjectRelease();
    sub_10008DB18(v18, &qword_10094C448);
    uint64_t v37 = *(void *)&v38[*(int *)(v37 + 32)];
    sub_1000A1750(v11, v12, v13);
    swift_bridgeObjectRetain();
    sub_1000A06C0(v11, v12, v13);
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = (uint64_t *)&v38[*(int *)(type metadata accessor for GoalAndDate(0) + 24)];
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  swift_bridgeObjectRetain();
  char v30 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v37;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v29;
  *(unsigned char *)(a2 + 64) = v30;
  *(void *)(a2 + 72) = v31;
  *(void *)(a2 + 80) = v32;
  *(void *)(a2 + 88) = v33;
  *(void *)(a2 + 96) = v34;
  *(unsigned char *)(a2 + 104) = 0;
  sub_1000A17A4(v11, v12, v13, v14);
  return sub_1000A1760(v11, v12, v13, v14);
}

double sub_10070E818@<D0>(uint64_t a1@<X8>)
{
  uint64_t v20 = static VerticalAlignment.center.getter();
  sub_10070E4F0(v1, (uint64_t)&v23);
  uint64_t v3 = v23;
  uint64_t v4 = v24;
  uint64_t v5 = v25;
  uint64_t v6 = v26;
  uint64_t v7 = v27;
  uint64_t v8 = v28;
  uint64_t v18 = v29;
  char v17 = v30;
  uint64_t v15 = v32;
  uint64_t v16 = v31;
  uint64_t v13 = v34;
  uint64_t v14 = v33;
  char v9 = v35;
  char v19 = BYTE8(v27);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v10 = v23;
  uint64_t v11 = v25;
  char v22 = v24;
  char v21 = v26;
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v19;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 88) = v17;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = v13;
  *(unsigned char *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v10;
  *(unsigned char *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v11;
  *(unsigned char *)(a1 + 160) = v21;
  double result = *(double *)&v27;
  *(_OWORD *)(a1 + 168) = v27;
  return result;
}

uint64_t type metadata accessor for GoalAndDate(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_10096AE70);
}

uint64_t type metadata accessor for EffortView(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_10096AF10);
}

uint64_t sub_10070E9F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10070EA5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_10070EABC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for AttributedString();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)v4 + v12;
    char v17 = (char *)a2 + v12;
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    uint64_t v18 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10070EBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

unsigned char *sub_10070EC64(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = &a1[v11];
  uint64_t v16 = &a2[v11];
  v15[8] = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_10070ED34(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)uint64_t v14 = v16;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

unsigned char *sub_10070EE20(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  v11[8] = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  uint64_t v13 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

unsigned char *sub_10070EEE4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (uint64_t *)&a2[v10];
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

uint64_t sub_10070EFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070EFD0);
}

uint64_t sub_10070EFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10070F098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070F0AC);
}

uint64_t sub_10070F0AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10070F170()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10070F22C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WorkoutEffort();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_10070F31C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10070F3BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10070F460(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10070F500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10070F5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070F5B4);
}

uint64_t sub_10070F5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WorkoutEffort();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10070F684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070F698);
}

uint64_t sub_10070F698(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for WorkoutEffort();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10070F754()
{
  uint64_t result = type metadata accessor for WorkoutEffort();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10070F804()
{
  unint64_t result = qword_10096AF50;
  if (!qword_10096AF50)
  {
    sub_1000A1370(&qword_10096AF58);
    sub_1000A132C(&qword_10096ADF0, &qword_10096ADE0);
    sub_1000A132C(&qword_10096ADF8, &qword_10096ADD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AF50);
  }
  return result;
}

uint64_t sub_10070F8C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10070F8E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10070F900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10096AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070F970()
{
  return sub_10070F9E0(&qword_10096AFA0, &qword_10096AFA8, &qword_10096AFB0, &qword_10096AFB8);
}

uint64_t sub_10070F9A8()
{
  return sub_10070F9E0(&qword_10096AFC0, &qword_10096AF68, &qword_10096AFC8, &qword_10096AF60);
}

uint64_t sub_10070F9E0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10070FA7C()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleBody];
  qword_10096AFD0 = (uint64_t)result;
  return result;
}

uint64_t sub_10070FAC4()
{
  uint64_t result = FIUICurrentLanguageRequiresTallScript();
  double v1 = 0.0;
  if (result) {
    double v1 = 5.0;
  }
  qword_10096AFD8 = *(void *)&v1;
  return result;
}

char *sub_10070FAF4()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel;
  id v2 = objc_allocWithZone((Class)UILabel);
  uint64_t v3 = v0;
  id v4 = [v2 initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094B160 != -1) {
    swift_once();
  }
  int v5 = (void *)UILabel.withFont(_:)();

  [v5 setLineBreakMode:0];
  [v5 setNumberOfLines:0];
  id v6 = [self whiteColor];
  uint64_t v7 = (void *)UILabel.withTextColor(_:)();

  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v1] = v7;
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v8] = v9;
  *(void *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID] = 0;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for MindfulnessSessionDetailItemView();
  unsigned int v10 = (char *)objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  unint64_t v12 = v10;
  [v12 addSubview:v11];
  [v12 addSubview:*(void *)&v12[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel]];
  sub_10070FD04();

  return v12;
}

void sub_10070FD04()
{
  uint64_t v1 = v0;
  uint64_t v26 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100754580;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  id v4 = [v3 topAnchor];
  id v5 = [v1 topAnchor];
  if (qword_10094B168 != -1) {
    swift_once();
  }
  id v6 = [v4 constraintEqualToAnchor:v5 constant:*(double *)&qword_10096AFD8];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 leadingAnchor];
  id v8 = [v1 leadingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 trailingAnchor];
  id v11 = [v1 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
  id v14 = [v13 topAnchor];
  id v15 = [v3 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v2 + 56) = v16;
  id v17 = [v13 leadingAnchor];
  id v18 = [v1 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v2 + 64) = v19;
  id v20 = [v13 trailingAnchor];
  id v21 = [v1 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v2 + 72) = v22;
  id v23 = [v13 bottomAnchor];
  id v24 = [v1 bottomAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v2 + 80) = v25;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 activateConstraints:isa];
}

void sub_1007100B8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID;
  ++*(void *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID];
  if (a3)
  {
    if (a3 == 1)
    {
      id v5 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
      id v6 = self;
      id v7 = [v6 mainBundle];
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setText:v10];

      id v11 = [v6 mainBundle];
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      id v17 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
      id v18 = sub_1005CD764(v14, v16);
      swift_bridgeObjectRelease();
      [v17 setAttributedText:v18];

      uint64_t v19 = *(void *)&v3[v4];
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = v19;
      id v22 = (void *)swift_allocObject();
      void v22[2] = a2;
      v22[3] = sub_100711114;
      v22[4] = v21;
      swift_retain();
      id v23 = a2;
      swift_retain();
      static MindfulnessSessionDataCalculator.endingHeartRate(for:healthStore:completion:)();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      char v30 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
      uint64_t v31 = self;
      id v32 = [v31 mainBundle];
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [v32 localizedStringForKey:v33 value:0 table:v34];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 setText:v36];

      id v37 = [v31 mainBundle];
      NSString v38 = String._bridgeToObjectiveC()();
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = [v37 localizedStringForKey:v38 value:0 table:v39];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v41 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10074E640;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v43 = self;
      swift_bridgeObjectRetain();
      id v44 = NSForegroundColorAttributeName;
      id v45 = [v43 systemTealColor];
      uint64_t v46 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      *(void *)(inited + 40) = v45;
      *(void *)(inited + 64) = v46;
      *(void *)(inited + 72) = NSFontAttributeName;
      uint64_t v47 = qword_10094AF60;
      uint64_t v48 = NSFontAttributeName;
      if (v47 != -1) {
        swift_once();
      }
      uint64_t v49 = (void *)qword_1009642E0;
      *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
      *(void *)(inited + 80) = v49;
      id v50 = v49;
      sub_1000DFC2C(inited);
      id v51 = objc_allocWithZone((Class)NSAttributedString);
      NSString v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10008F77C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v54 = [v51 initWithString:v52 attributes:isa];
      swift_bridgeObjectRelease();

      [v41 setAttributedText:v54];
      [v3 setHidden:1];
      uint64_t v55 = *(void *)&v3[v4];
      uint64_t v56 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v56;
      *(void *)(v57 + 24) = v55;
      swift_retain();
      sub_1005CB514(a1, (uint64_t)sub_10071110C, v57);
      swift_release();
      swift_release();
    }
  }
  else
  {
    id v24 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
    id v25 = [self mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v24 setText:v28];

    uint64_t v29 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
    id v60 = sub_1005CB130();
    [v29 setAttributedText:v60];
  }
}

uint64_t sub_1007108C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  NSString v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = (void *)swift_allocObject();
  long long v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_100711160;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008D85F0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008F77C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

void sub_100710B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID) == a2) {
      [*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel) setAttributedText:a3];
    }
  }
}

uint64_t sub_100710C28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  NSString v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = (void *)swift_allocObject();
  long long v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_1007111B0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  void aBlock[3] = &unk_1008D8640;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008F77C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

void sub_100710EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID) == a2
      && a3 != 0)
    {
      [*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel) setAttributedText:a3];
      [v6 setHidden:0];
    }
  }
}

id sub_100710FF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailItemView();
  [super dealloc];
}

uint64_t type metadata accessor for MindfulnessSessionDetailItemView()
{
  return self;
}

uint64_t sub_10071109C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1007110D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10071110C(void *a1)
{
  return sub_100710C28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100711114(void *a1)
{
  return sub_1007108C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10071111C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100711160()
{
  sub_100710B98(v0[2], v0[3], v0[4]);
}

uint64_t sub_100711170()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1007111B0()
{
  sub_100710EF8(v0[2], v0[3], v0[4]);
}

void sub_1007111BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel;
  id v3 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094B160 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)UILabel.withFont(_:)();

  [v4 setLineBreakMode:0];
  [v4 setNumberOfLines:0];
  id v5 = [self whiteColor];
  uint64_t v6 = (void *)UILabel.withTextColor(_:)();

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v6;
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel;
  id v8 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v7] = v8;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t initializeWithCopy for MirrorPacerMetricPlatterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_retain();
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void *assignWithCopy for MirrorPacerMetricPlatterView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for MirrorPacerMetricPlatterView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for MirrorPacerMetricPlatterView()
{
  return &type metadata for MirrorPacerMetricPlatterView;
}

uint64_t sub_1007114C4()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1007114E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000ABAB8(0, v1, 0);
    uint64_t v3 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = static String._fromSubstring(_:)();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1000ABAB8(v7 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      id v9 = &_swiftEmptyArrayStorage[2 * v8];
      void v9[4] = v4;
      v9[5] = v6;
      v3 += 32;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1007115E0@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v38 = sub_1000AFA94(&qword_10096B028);
  uint64_t v35 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_10096B030);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000AFA94(&qword_10096B038);
  __chkstk_darwin(v37);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10096B040);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_1000AFA94(&qword_10096B048);
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v34 - v19;
  *(void *)uint64_t v20 = static HorizontalAlignment.center.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  uint64_t v21 = sub_1000AFA94(&qword_10096B050);
  sub_100711D14(a1, (uint64_t)&v20[*(int *)(v21 + 44)]);
  long long v42 = *a1;
  swift_retain();
  MetricsPublisher.distanceGoalFinishTime.getter();
  char v23 = v22;
  sub_1000E2384((uint64_t)&v42);
  if (v23)
  {
    *(void *)unint64_t v8 = static HorizontalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    uint64_t v28 = sub_1000AFA94(&qword_10096B058);
    sub_100712F2C((uint64_t)a1, &v8[*(int *)(v28 + 44)]);
    sub_1000AEF2C((uint64_t)v8, (uint64_t)v6, &qword_10096B038);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = sub_1000A1370(&qword_10096B060);
    unint64_t v30 = sub_10071391C();
    uint64_t v40 = v29;
    unint64_t v41 = v30;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10096B080, &qword_10096B038);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v8, &qword_10096B038);
  }
  else
  {
    sub_100711ABC();
    uint64_t v24 = v35;
    uint64_t v25 = v38;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v6, v4, v38);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = sub_1000A1370(&qword_10096B060);
    unint64_t v27 = sub_10071391C();
    uint64_t v40 = v26;
    unint64_t v41 = v27;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10096B080, &qword_10096B038);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
  }
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v17, &qword_10096B048);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_10096B040);
  uint64_t v31 = v39;
  sub_1000AEF2C((uint64_t)v17, v39, &qword_10096B048);
  uint64_t v32 = sub_1000AFA94(&qword_10096B088);
  sub_1000AEF2C((uint64_t)v11, v31 + *(int *)(v32 + 48), &qword_10096B040);
  sub_10008DB18((uint64_t)v14, &qword_10096B040);
  sub_10008DB18((uint64_t)v20, &qword_10096B048);
  sub_10008DB18((uint64_t)v11, &qword_10096B040);
  return sub_10008DB18((uint64_t)v17, &qword_10096B048);
}

uint64_t sub_100711ABC()
{
  uint64_t v0 = type metadata accessor for WorkoutViewStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10096B078);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10096B060);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v10 = sub_1000AFA94(&qword_10096B090);
  sub_100712664(&v6[*(int *)(v10 + 44)]);
  char v11 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_10096B078);
  uint64_t v20 = &v9[*(int *)(v7 + 36)];
  *uint64_t v20 = v11;
  *((void *)v20 + 1) = v13;
  *((void *)v20 + 2) = v15;
  *((void *)v20 + 3) = v17;
  *((void *)v20 + 4) = v19;
  v20[40] = 0;
  sub_10008DB18((uint64_t)v6, &qword_10096B078);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WorkoutViewStyle.iOSNotificationMetric(_:), v0);
  sub_10071391C();
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_10008DB18((uint64_t)v9, &qword_10096B060);
}

uint64_t sub_100711D14@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = type metadata accessor for PacerRow();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  uint64_t v77 = v4;
  __chkstk_darwin(v3);
  id v73 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_10096B120);
  uint64_t v81 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v72 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_10096B128);
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v74 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v75 = (char *)v59 - v9;
  uint64_t v71 = type metadata accessor for PillConfiguration();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v67 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000AFA94(&qword_10096B130);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  NSString v84 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WorkoutViewStyle();
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v13 = v66;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for PacerViewConfiguration();
  uint64_t v16 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v63 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v59 - v19;
  uint64_t v65 = sub_1000AFA94(&qword_10096B138) - 8;
  __chkstk_darwin(v65);
  uint64_t v22 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_10096B140) - 8;
  __chkstk_darwin(v64);
  uint64_t v83 = (uint64_t)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v85 = (uint64_t)v59 - v25;
  long long v88 = *a1;
  swift_retain();
  MetricsPublisher.secondsAheadOfPacer.getter();
  sub_1000E2384((uint64_t)&v88);
  uint64_t v26 = enum case for WorkoutViewStyle.iOSHeroMetric(_:);
  unint64_t v27 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  uint64_t v61 = v12;
  v27(v15, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v12);
  Swift::String v62 = v27;
  PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)();
  PacerViewConfiguration.text.getter();
  uint64_t v28 = v16 + 8;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v59[1] = v28;
  unint64_t v30 = v20;
  uint64_t v31 = v60;
  v29(v30, v60);
  swift_retain();
  MetricsPublisher.secondsAheadOfPacer.getter();
  sub_1000E2384((uint64_t)&v88);
  v27(v15, v26, v12);
  uint64_t v32 = v63;
  PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)();
  NSString v33 = v67;
  PacerViewConfiguration.pillConfiguration.getter();
  v29(v32, v31);
  uint64_t v34 = PillConfiguration.pillColor.getter();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v71);
  uint64_t v35 = v68;
  uint64_t v36 = v84;
  uint64_t v37 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v22, v84, v69);
  *(void *)&v22[*(int *)(v65 + 44)] = v34;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  uint64_t v38 = v83;
  sub_1000AEF2C((uint64_t)v22, v83, &qword_10096B138);
  *(void *)(v38 + *(int *)(v64 + 44)) = 0x3FF0000000000000;
  sub_10008DB18((uint64_t)v22, &qword_10096B138);
  uint64_t v39 = v38;
  sub_100713A94(v38, v85);
  swift_retain();
  MetricsPublisher.secondsAheadOfPacer.getter();
  sub_1000E2384((uint64_t)&v88);
  uint64_t v40 = v73;
  PacerRow.init(secondsAheadOfPacer:)();
  uint64_t v41 = sub_100713AFC(&qword_10096B148, (void (*)(uint64_t))&type metadata accessor for PacerRow);
  long long v42 = v72;
  uint64_t v43 = v76;
  View.metricRow(padding:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v43);
  uint64_t v44 = v61;
  v62(v15, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v61);
  uint64_t v86 = v43;
  uint64_t v87 = v41;
  swift_getOpaqueTypeConformance2();
  id v45 = v74;
  uint64_t v46 = v79;
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v44);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v46);
  uint64_t v47 = v78;
  uint64_t v48 = v75;
  uint64_t v49 = v80;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v45, v80);
  uint64_t v50 = v85;
  sub_1000AEF2C(v85, v39, &qword_10096B140);
  uint64_t v51 = v47;
  NSString v52 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v53 = v45;
  v52(v45, v48, v49);
  uint64_t v54 = v82;
  sub_1000AEF2C(v39, v82, &qword_10096B140);
  uint64_t v55 = sub_1000AFA94(&qword_10096B150);
  uint64_t v56 = v54 + *(int *)(v55 + 48);
  *(void *)uint64_t v56 = 0;
  *(unsigned char *)(v56 + 8) = 1;
  v52((char *)(v54 + *(int *)(v55 + 64)), v53, v49);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v48, v49);
  sub_10008DB18(v50, &qword_10096B140);
  v57(v53, v49);
  return sub_10008DB18(v83, &qword_10096B140);
}

uint64_t sub_100712664@<X0>(char *a1@<X8>)
{
  id v63 = a1;
  uint64_t v1 = type metadata accessor for WorkoutViewStyle();
  uint64_t v61 = *(void *)(v1 - 8);
  uint64_t v62 = v1;
  __chkstk_darwin(v1);
  uint64_t v60 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ElapsedTimeView();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10096B098);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_10096B0A0);
  uint64_t v64 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v50 - v11;
  uint64_t v12 = type metadata accessor for LocalizationFeature();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000AFA94(&qword_10096B0A8);
  uint64_t v52 = *(void *)(v54 - 8);
  uint64_t v16 = v52;
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v50 - v20;
  (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v15, enum case for LocalizationFeature.workout(_:), v12, v19);
  uint64_t v22 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v65 = (void *)v22;
  uint64_t v66 = v24;
  sub_1000A06D0();
  uint64_t v25 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1007114E0(v25);
  swift_bridgeObjectRelease();
  uint64_t v65 = v26;
  swift_getKeyPath();
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000AFA94(&qword_10096B0B0);
  sub_1000A132C(&qword_1009661F0, (uint64_t *)&unk_10094B1F0);
  sub_1000A132C(&qword_10096B0B8, &qword_10096B0B0);
  unint64_t v27 = v21;
  uint64_t v51 = v21;
  ForEach<>.init(_:id:content:)();
  ElapsedTimeView.init(elapsedTime:showSubseconds:)();
  type metadata accessor for PacerWorkoutConfiguration();
  static PacerWorkoutConfiguration.displayColor.getter();
  uint64_t v28 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v8, v5, v58);
  uint64_t v32 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *uint64_t v32 = KeyPath;
  v32[1] = v28;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
  uint64_t v34 = v60;
  uint64_t v33 = v61;
  uint64_t v35 = v62;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v62);
  sub_1007139C4();
  uint64_t v36 = v55;
  View.workoutViewStyle(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  sub_10008DB18((uint64_t)v8, &qword_10096B098);
  uint64_t v37 = v64;
  uint64_t v38 = v56;
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v56, v36, v59);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v41 = v53;
  uint64_t v42 = v54;
  v40(v53, v27, v54);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v44 = v38;
  v43(v36, v38, v39);
  id v45 = v63;
  v40(v63, v41, v42);
  uint64_t v46 = &v45[*(int *)(sub_1000AFA94(&qword_10096B0D0) + 48)];
  v43(v46, v36, v39);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v64 + 8);
  v47(v44, v39);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v52 + 8);
  v48(v51, v42);
  v47(v36, v39);
  return ((uint64_t (*)(char *, uint64_t))v48)(v41, v42);
}

uint64_t sub_100712D58@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_1000AFA94(&qword_10096B0D8);
  return sub_100712DB4((char *)(a1 + *(int *)(v2 + 44)));
}

uint64_t sub_100712DB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_100951660);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  static WorkoutNotificationFont.multilineTextView(with:lineLimit:)();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v9(v5, v8, v2);
  v9(a1, v5, v2);
  uint64_t v10 = &a1[*(int *)(sub_1000AFA94(&qword_10096B0E0) + 48)];
  *(void *)uint64_t v10 = 0;
  _OWORD v10[8] = 1;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  return ((uint64_t (*)(char *, uint64_t))v11)(v5, v2);
}

uint64_t sub_100712F2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v63 = type metadata accessor for WorkoutViewStyle();
  uint64_t v3 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10096B0E8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_10096B0F0);
  uint64_t v65 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10096B0F8);
  uint64_t v64 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v58 = (char *)&v43 - v13;
  __chkstk_darwin(v14);
  uint64_t v61 = (char *)&v43 - v15;
  __chkstk_darwin(v16);
  uint64_t v62 = (char *)&v43 - v17;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v55 = (long long *)a1;
  uint64_t v56 = v18;
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = v18;
  v8[16] = 0;
  uint64_t v54 = sub_1000AFA94(&qword_10096B100);
  sub_10071353C((long long *)a1, 1, &v8[*(int *)(v54 + 44)]);
  uint64_t v19 = sub_1000A132C(&qword_10096B108, &qword_10096B0E8);
  uint64_t v47 = v6;
  uint64_t v46 = v19;
  View.metricRow(padding:)();
  sub_10008DB18((uint64_t)v8, &qword_10096B0E8);
  unsigned int v53 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  uint64_t v20 = v3;
  uint64_t v52 = *(void (**)(char *))(v3 + 104);
  uint64_t v21 = v63;
  v52(v5);
  uint64_t v66 = v6;
  uint64_t v67 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v61;
  uint64_t v23 = v5;
  uint64_t v24 = v57;
  uint64_t v25 = v44;
  View.workoutViewStyle(_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v49 = v20 + 8;
  uint64_t v50 = v26;
  v26(v23, v21);
  unint64_t v27 = *(void (**)(char *, uint64_t))(v65 + 8);
  v65 += 8;
  uint64_t v48 = v27;
  v27(v25, v24);
  id v45 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v28 = v62;
  v45(v62, v22, v10);
  uint64_t v29 = static VerticalAlignment.center.getter();
  uint64_t v30 = v56;
  *(void *)uint64_t v8 = v29;
  *((void *)v8 + 1) = v30;
  v8[16] = 0;
  sub_10071353C(v55, 5, &v8[*(int *)(v54 + 44)]);
  View.metricRow(padding:)();
  sub_10008DB18((uint64_t)v8, &qword_10096B0E8);
  uint64_t v31 = v63;
  ((void (*)(char *, void, uint64_t))v52)(v23, v53, v63);
  uint64_t v32 = v58;
  View.workoutViewStyle(_:)();
  v50(v23, v31);
  v48(v25, v24);
  uint64_t v33 = v61;
  v45(v61, v32, v10);
  uint64_t v34 = v64;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v35(v32, v28, v10);
  uint64_t v36 = v59;
  v35(v59, v33, v10);
  uint64_t v37 = v60;
  *uint64_t v60 = 0x4000000000000000;
  *((unsigned char *)v37 + 8) = 0;
  uint64_t v38 = (char *)v37;
  uint64_t v39 = (int *)sub_1000AFA94(&qword_10096B110);
  v35(&v38[v39[12]], v32, v10);
  uint64_t v40 = &v38[v39[16]];
  *(void *)uint64_t v40 = 0x4000000000000000;
  v40[8] = 0;
  v35(&v38[v39[20]], v36, v10);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v33, v10);
  v41(v62, v10);
  v41(v36, v10);
  return ((uint64_t (*)(char *, uint64_t))v41)(v32, v10);
}

uint64_t sub_10071353C@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v4 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10094C108);
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v31 = (char *)v28 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v28 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v28 - v16;
  uint64_t v18 = type metadata accessor for MetricPlatterType();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v30 = v19 + 56;
  v29(v6, 1, 1, v18);
  v28[1] = *((void *)a1 + 3);
  long long v35 = *a1;
  swift_retain();
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_1000E2384((uint64_t)&v35);
  sub_10008DB18((uint64_t)v6, &qword_10094C100);
  uint64_t v20 = (void (*)(char *, char *, uint64_t))v8[4];
  v20(v17, v14, v7);
  v29(v6, 1, 1, v18);
  swift_retain();
  uint64_t v21 = v31;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_1000E2384((uint64_t)&v35);
  sub_10008DB18((uint64_t)v6, &qword_10094C100);
  v20(v14, v21, v7);
  uint64_t v22 = (void (*)(char *, char *, uint64_t))v8[2];
  v22(v21, v17, v7);
  uint64_t v23 = v32;
  v22(v32, v14, v7);
  uint64_t v24 = v34;
  v22(v34, v21, v7);
  uint64_t v25 = sub_1000AFA94(&qword_10096B118);
  v22(&v24[*(int *)(v25 + 48)], v23, v7);
  uint64_t v26 = (void (*)(char *, uint64_t))v8[1];
  v26(v14, v7);
  v26(v17, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, v7);
}

uint64_t sub_1007138BC@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  long long v4 = v1[3];
  v7[2] = v1[2];
  void v7[3] = v4;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = sub_1000AFA94(&qword_10096B020);
  return sub_1007115E0(v7, a1 + *(int *)(v5 + 44));
}

unint64_t sub_10071391C()
{
  unint64_t result = qword_10096B068;
  if (!qword_10096B068)
  {
    sub_1000A1370(&qword_10096B060);
    sub_1000A132C(&qword_10096B070, &qword_10096B078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B068);
  }
  return result;
}

unint64_t sub_1007139C4()
{
  unint64_t result = qword_10096B0C0;
  if (!qword_10096B0C0)
  {
    sub_1000A1370(&qword_10096B098);
    sub_100713AFC(&qword_10096B0C8, (void (*)(uint64_t))&type metadata accessor for ElapsedTimeView);
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B0C0);
  }
  return result;
}

uint64_t sub_100713A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10096B140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100713AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100713B44()
{
  return sub_1000A132C(&qword_10096B158, &qword_10096B160);
}

__n128 sub_100713B80@<Q0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  a1[8] = v11;
  a1[9] = *(_OWORD *)v12;
  *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)&v12[9];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  *a1 = v3;
  a1[1] = v4;
  __n128 result = v6;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_100713C28(_OWORD *a1, void **a2)
{
  long long v2 = a1[9];
  _OWORD v10[8] = a1[8];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 153);
  long long v3 = a1[5];
  void v10[4] = a1[4];
  v10[5] = v3;
  long long v4 = a1[7];
  v10[6] = a1[6];
  v10[7] = v4;
  long long v5 = a1[1];
  v10[0] = *a1;
  v10[1] = v5;
  long long v6 = a1[3];
  v10[2] = a1[2];
  v10[3] = v6;
  long long v7 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10068FBF8((uint64_t)v10);
  id v8 = v7;
  return static Published.subscript.setter();
}

void sub_100713D08()
{
  qword_100998930 = 0x4065E00000000000;
}

id sub_100713D1C()
{
  id result = [self fu_sausageFontOfSize:22.0];
  if (result) {
    qword_100998938 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

id sub_100713D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v7 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1;
  id v8 = objc_allocWithZone((Class)UILabel);
  long long v9 = v4;
  id v10 = [v8 init];
  uint64_t v11 = UIView.forAutoLayout()();

  *(void *)&v4[v7] = v11;
  uint64_t v12 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2;
  id v13 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = UIView.forAutoLayout()();

  *(void *)&v9[v12] = v14;
  uint64_t v15 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1;
  id v16 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = UIView.forAutoLayout()();

  *(void *)&v9[v15] = v17;
  uint64_t v18 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2;
  id v19 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v20 = UIView.forAutoLayout()();

  *(void *)&v9[v18] = v20;
  uint64_t v21 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
  id v22 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v23 = UIView.forAutoLayout()();

  *(void *)&v9[v21] = v23;
  *(void *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_dive] = 0;
  *(void *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator] = 0;
  *(void *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView] = 0;

  if (a3)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  v27.receiver = v9;
  v27.super_class = (Class)type metadata accessor for DivingDetailMapTableViewCell();
  id v25 = [super initWithStyle:a1 reuseIdentifier:v24];

  return v25;
}

void sub_100713F74(void *a1, uint64_t a2, void *a3)
{
  long long v6 = *(void **)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dive);
  *(void *)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dive) = a1;
  id v7 = a1;

  id v8 = *(void **)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator);
  *(void *)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator) = a3;
  id v9 = a3;

  if (a2 == 2)
  {
    sub_100715770();
  }
  else
  {
    if (a2 == 1)
    {
      char v10 = 1;
    }
    else
    {
      if (a2) {
        return;
      }
      char v10 = 0;
    }
    sub_1007140B4(v10);
  }
}

void sub_1007140B4(char a1)
{
  long long v2 = v1;
  long long v4 = self;
  id v5 = [v4 systemBackgroundColor];
  [v1 setBackgroundColor:v5];

  long long v6 = *(void **)&v1[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator];
  if (v6)
  {
    id v7 = (char **)&v209;
    id v8 = &v199;
    id v168 = v4;
    if (!a1) {
      goto LABEL_9;
    }
    if (a1 != 1) {
      return;
    }
    id v9 = self;
    id v161 = v6;
    id v10 = v6;
    id v11 = [v9 mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    long long v217 = v207;
    v218[0] = v208[0];
    *(_OWORD *)((char *)v218 + 9) = *(_OWORD *)((char *)v208 + 9);
    long long v213 = v203;
    long long v214 = v204;
    long long v215 = v205;
    long long v216 = v206;
    long long v209 = v199;
    long long v210 = v200;
    long long v211 = v201;
    long long v212 = v202;
    swift_bridgeObjectRetain();
    sub_100264974((uint64_t)&v209);
    uint64_t v14 = self;
    id v15 = [v14 elapsedTimeColors];
    if (v15)
    {
      id v16 = v15;
      id v7 = &selRef_initUsingEarnedShader_;
      id v17 = [v15 nonGradientTextColor];

      unint64_t v167 = v17;
      if (v17)
      {
        id v18 = [v9 mainBundle];
        NSString v19 = String._bridgeToObjectiveC()();
        id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        long long v6 = v21;

        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        long long v207 = v197;
        v208[0] = v198[0];
        *(_OWORD *)((char *)v208 + 9) = *(_OWORD *)((char *)v198 + 9);
        long long v203 = v193;
        long long v204 = v194;
        long long v205 = v195;
        long long v206 = v196;
        long long v199 = v189;
        long long v200 = v190;
        long long v201 = v191;
        long long v202 = v192;
        swift_bridgeObjectRetain();
        sub_100264974((uint64_t)&v199);
        id v22 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v8 = (long long *)[v22 initWithString:v23];

        id v24 = [v14 paceColors];
        if (v24)
        {
          id v25 = v24;
          id v26 = [v24 nonGradientTextColor];

          unint64_t v166 = v26;
          if (v26)
          {
LABEL_16:
            id v162 = v8;
            uint64_t v50 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1;
            id v51 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1];
            NSString v52 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v51 setText:v52];

            unsigned int v53 = *(void **)&v2[v50];
            uint64_t v54 = v50;
            uint64_t v55 = self;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v56 = v53;
            NSString v57 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v58 = [v55 defaultFontForTextStyle:v57];

            [v56 setFont:v58];
            uint64_t v163 = v54;
            id v59 = *(id *)&v2[v54];
            id v60 = [v168 labelColor];
            [v59 setTextColor:v60];

            id v61 = [v2 contentView];
            [v61 addSubview:*(void *)&v2[v54]];

            uint64_t v62 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2;
            id v63 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2];
            NSString v64 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v63 setText:v64];

            uint64_t v65 = *(void **)&v2[v62];
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v66 = v65;
            NSString v67 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v68 = [v55 defaultFontForTextStyle:v67];

            [v66 setFont:v68];
            uint64_t v165 = v62;
            id v69 = *(id *)&v2[v62];
            id v70 = [v168 labelColor];
            [v69 setTextColor:v70];

            id v71 = [v2 contentView];
            [v71 addSubview:*(void *)&v2[v62]];

            uint64_t v72 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1;
            id v73 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1];
            NSString v74 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v73 setText:v74];

            [*(id *)&v2[v72] setTextColor:v167];
            id v75 = *(id *)&v2[v72];
            id v76 = [v55 fu_sausageFontOfSize:30.0];
            [v75 setFont:v76];

            [*(id *)&v2[v72] setNumberOfLines:0];
            id v77 = [v2 contentView];
            [v77 addSubview:*(void *)&v2[v72]];

            uint64_t v78 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2;
            [*(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2] setAttributedText:v162];
            [*(id *)&v2[v78] setTextColor:v166];
            id v79 = *(id *)&v2[v78];
            id v80 = [v55 fu_sausageFontOfSize:30.0];
            [v79 setFont:v80];

            uint64_t v155 = v78;
            [*(id *)&v2[v78] setNumberOfLines:0];
            id v81 = [v2 contentView];
            [v81 addSubview:*(void *)&v2[v78]];

            uint64_t v82 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
            uint64_t v158 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
            id v83 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView];
            id v84 = [v168 separatorColor];
            [v83 setBackgroundColor:v84];

            id v85 = [v2 contentView];
            [v85 addSubview:*(void *)&v2[v82]];

            sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
            uint64_t v86 = *(void **)&v2[v54];
            uint64_t v87 = sub_10007E2D8(0, &qword_100953458);
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v86;
            id v88 = v86;
            id v89 = [v2 contentView];
            uint64_t v90 = sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
            *((void *)&v200 + 1) = v90;
            *(void *)&long long v199 = v89;
            id v91 = sub_1003D282C(&v209, 11, 0, &v199, 3, 1.0, 28.0);
            id v92 = *(void **)&v2[v54];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v92;
            id v93 = v92;
            id v94 = [v2 contentView];
            *((void *)&v200 + 1) = v90;
            *(void *)&long long v199 = v94;
            double v95 = sub_1000FC040();
            id v96 = sub_1003D282C(&v209, 5, 0, &v199, 5, 1.0, v95);
            id v97 = [v2 contentView];
            sub_1000AFA94((uint64_t *)&unk_10095B850);
            uint64_t v98 = swift_allocObject();
            *(_OWORD *)(v98 + 16) = xmmword_100756B20;
            *(void *)(v98 + 32) = v91;
            *(void *)(v98 + 40) = v96;
            *(void *)&long long v209 = v98;
            specialized Array._endMutation()();
            id v160 = v91;
            id v159 = v96;
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v97 addConstraints:isa];

            id v100 = *(void **)&v2[v165];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v100;
            id v101 = v100;
            id v102 = [v2 contentView];
            *((void *)&v200 + 1) = v90;
            *(void *)&long long v199 = v102;
            id v103 = sub_1003D282C(&v209, 11, 0, &v199, 3, 1.0, 28.0);
            id v104 = *(void **)&v2[v165];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v104;
            id v105 = v104;
            id v106 = [v2 contentView];
            *((void *)&v200 + 1) = v90;
            *(void *)&long long v199 = v106;
            id v107 = [self mainScreen];
            [v107 bounds];
            double v109 = v108;

            id v110 = sub_1003D282C(&v209, 5, 0, &v199, 5, 1.0, v109 * 0.5);
            id v111 = [v2 contentView];
            uint64_t v112 = swift_allocObject();
            *(_OWORD *)(v112 + 16) = xmmword_100756B20;
            *(void *)(v112 + 32) = v103;
            *(void *)(v112 + 40) = v110;
            *(void *)&long long v209 = v112;
            specialized Array._endMutation()();
            id v157 = v103;
            id v156 = v110;
            Class v113 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v111 addConstraints:v113];

            uint64_t v114 = *(void **)&v2[v72];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v114;
            uint64_t v115 = *(void **)&v2[v163];
            *((void *)&v200 + 1) = v87;
            *(void *)&long long v199 = v115;
            id v116 = v114;
            id v117 = v115;
            id v118 = sub_1003D282C(&v209, 11, 0, &v199, 11, 1.0, 30.0);
            id v119 = *(void **)&v2[v72];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v119;
            id v120 = *(void **)&v2[v163];
            *((void *)&v200 + 1) = v87;
            *(void *)&long long v199 = v120;
            id v121 = v119;
            id v122 = v120;
            id v123 = sub_1003D282C(&v209, 5, 0, &v199, 5, 1.0, 0.0);
            id v124 = [v2 contentView];
            uint64_t v125 = swift_allocObject();
            *(_OWORD *)(v125 + 16) = xmmword_100756B20;
            *(void *)(v125 + 32) = v118;
            *(void *)(v125 + 40) = v123;
            *(void *)&long long v209 = v125;
            specialized Array._endMutation()();
            id v164 = v118;
            id v154 = v123;
            Class v126 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v124 addConstraints:v126];

            uint64_t v127 = *(void **)&v2[v155];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v127;
            uint64_t v128 = *(void **)&v2[v165];
            *((void *)&v200 + 1) = v87;
            *(void *)&long long v199 = v128;
            id v129 = v127;
            id v130 = v128;
            id v131 = sub_1003D282C(&v209, 11, 0, &v199, 11, 1.0, 30.0);
            unint64_t v132 = *(void **)&v2[v155];
            *((void *)&v210 + 1) = v87;
            *(void *)&long long v209 = v132;
            os_log_t v133 = *(void **)&v2[v165];
            *((void *)&v200 + 1) = v87;
            *(void *)&long long v199 = v133;
            id v134 = v132;
            id v135 = v133;
            id v136 = sub_1003D282C(&v209, 5, 0, &v199, 5, 1.0, 0.0);
            id v137 = [v2 contentView];
            uint64_t v138 = swift_allocObject();
            *(_OWORD *)(v138 + 16) = xmmword_100756B20;
            *(void *)(v138 + 32) = v131;
            *(void *)(v138 + 40) = v136;
            *(void *)&long long v209 = v138;
            specialized Array._endMutation()();
            id v139 = v131;
            id v140 = v136;
            Class v141 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v137 addConstraints:v141];

            id v142 = *(id *)&v2[v158];
            id v143 = [v2 contentView];
            sub_100715578(v142, v143);

            id v144 = [v2 contentView];
            Class v145 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v144 addConstraints:v145];

            id v146 = [v2 contentView];
            id v147 = [v146 heightAnchor];

            id v148 = [v147 constraintEqualToConstant:74.0];
            LODWORD(v149) = 1148829696;
            [v148 setPriority:v149];
            [v148 setActive:1];
            id v150 = [v2 contentView];
            uint64_t v151 = swift_allocObject();
            *(_OWORD *)(v151 + 16) = xmmword_100751040;
            *(void *)(v151 + 32) = v148;
            *(void *)&long long v209 = v151;
            specialized Array._endMutation()();
            id v152 = v148;
            Class v153 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v150 addConstraints:v153];

            return;
          }
          __break(1u);
LABEL_9:
          objc_super v27 = self;
          id v28 = v6;
          id v29 = [v27 mainBundle];
          NSString v30 = String._bridgeToObjectiveC()();
          id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          long long v217 = v207;
          v218[0] = v208[0];
          *(_OWORD *)((char *)v7 + 153) = *(long long *)((char *)v8 + 153);
          long long v213 = v203;
          long long v214 = v204;
          long long v215 = v205;
          long long v216 = v206;
          long long v209 = v199;
          long long v210 = v200;
          long long v211 = v201;
          long long v212 = v202;
          swift_bridgeObjectRetain();
          sub_100264974((uint64_t)&v209);
          uint64_t v32 = self;
          id v33 = [v32 diveColors];
          if (v33)
          {
            uint64_t v34 = v33;
            id v161 = v6;
            id v35 = [v33 nonGradientTextColor];

            unint64_t v167 = v35;
            if (v35)
            {
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              long long v197 = v207;
              v198[0] = v208[0];
              *(_OWORD *)((char *)v198 + 9) = *(_OWORD *)((char *)v208 + 9);
              long long v193 = v203;
              long long v194 = v204;
              long long v195 = v205;
              long long v196 = v206;
              long long v189 = v199;
              long long v190 = v200;
              long long v191 = v201;
              long long v192 = v202;
              swift_bridgeObjectRetain();
              sub_100264974((uint64_t)&v189);
              NSString v36 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v37 = [v27 mainBundle];
              NSString v38 = String._bridgeToObjectiveC()();
              id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              long long v207 = v187;
              v208[0] = v188[0];
              *(_OWORD *)((char *)v208 + 9) = *(_OWORD *)((char *)v188 + 9);
              long long v203 = v183;
              long long v204 = v184;
              long long v205 = v185;
              long long v206 = v186;
              long long v199 = v179;
              long long v200 = v180;
              long long v201 = v181;
              long long v202 = v182;
              swift_bridgeObjectRetain();
              sub_100264974((uint64_t)&v199);
              id v40 = objc_allocWithZone((Class)NSMutableAttributedString);
              NSString v41 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v42 = [v40 initWithString:v41];

              id v8 = (long long *)v42;
              id v43 = [v32 diveColors];
              if (v43)
              {
                uint64_t v44 = v43;
                id v45 = [v43 nonGradientTextColor];

                if (v45)
                {
                  unint64_t v166 = v45;
                  swift_getKeyPath();
                  swift_getKeyPath();
                  static Published.subscript.getter();
                  swift_release();
                  swift_release();
                  long long v187 = v177;
                  v188[0] = *(_OWORD *)v178;
                  *(_OWORD *)((char *)v188 + 9) = *(_OWORD *)&v178[9];
                  long long v183 = v173;
                  long long v184 = v174;
                  long long v185 = v175;
                  long long v186 = v176;
                  long long v179 = v169;
                  long long v180 = v170;
                  long long v181 = v171;
                  long long v182 = v172;
                  swift_bridgeObjectRetain();
                  sub_100264974((uint64_t)&v179);
                  NSString v46 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  id v47 = [v36 rangeOfString:v46];
                  uint64_t v49 = v48;

                  if (qword_10094B178 != -1) {
                    swift_once();
                  }
                  [v8 addAttribute:NSFontAttributeName value:qword_100998938 range:v47, v49];

                  goto LABEL_16;
                }
LABEL_24:
                __break(1u);
                return;
              }
LABEL_23:
              __break(1u);
              goto LABEL_24;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
}